From r at schestowitz.com  Mon Mar  1 01:11:56 2010
From: r at schestowitz.com (Roy Schestowitz)
Date: Mon, 01 Mar 2010 01:11:56 +0000
Subject: [wp-hackers] WP-Hackers Stats for February 2010
Message-ID: <4B8B145C.2080703@schestowitz.com>

  -  Times are Greenwich Mean Time (GMT) +0:00

  -  Statistics span a period of one month

  -  Subject line formatted consistently "WP-Hackers Stats for <MONTH>
<YEAR>"

  -  Killfile <subject contains "WP-Hackers Stats for "> if uninterested
____________________________________________________________

Stats for wp-hackers
~~~~~~~~~~~~~~~~~~~~
***** People who have written most messages:
+----+-----Author-----------------------------------+--Msg-+-Percent-+
|  1 | lists hikarinet.info                         |   25 |  6.10 % |
|  2 | otto ottodestruct.com                        |   24 |  5.85 % |
|  3 | mikeschinkel newclarity.net                  |   23 |  5.61 % |
|  4 | scribu gmail.com                             |   22 |  5.37 % |
|  5 | admin wpkid.com                              |   18 |  4.39 % |
|  6 | wp andrewnacin.com                           |   13 |  3.17 % |
|  7 | jer simianuprising.com                       |   10 |  2.44 % |
|  8 | gaarai gaarai.com                            |    9 |  2.20 % |
|  9 | wordpress dd32.id.au                         |    9 |  2.20 % |
| 10 | jeremy visser.name                           |    9 |  2.20 % |
| 11 | steve sltaylor.co.uk                         |    8 |  1.95 % |
| 12 | wp xentek.net                                |    8 |  1.95 % |
| 13 | jeremib gmail.com                            |    7 |  1.71 % |
| 14 | michael mfields.org                          |    7 |  1.71 % |
| 15 | knoxpics gmail.com                           |    6 |  1.46 % |
| 16 | mark watero.us                               |    6 |  1.46 % |
| 17 | frank bueltge.de                             |    6 |  1.46 % |
| 18 | wordpress zed1.com                           |    5 |  1.22 % |
| 19 | leif.a.andersen gmail.com                    |    5 |  1.22 % |
| 20 | mpretty voceconnect.com                      |    5 |  1.22 % |
| 21 | burobjorn gmail.com                          |    5 |  1.22 % |
| 22 | matthew.a.simo gmail.com                     |    4 |  0.98 % |
| 23 | logikal16 gmail.com                          |    4 |  0.98 % |
| 24 | bulk thecodecave.com                         |    4 |  0.98 % |
| 25 | Ken adcSTUDIO.com                            |    4 |  0.98 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  164 | 40.00 % |
+----+----------------------------------------------+------+---------+

***** Best authors, by total size of their messages (w/o quoting):
+----+-----Author-------------------------------------------+-KBytes-+
|  1 | lists hikarinet.info                                 |   67.4 |
|  2 | mikeschinkel newclarity.net                          |   26.7 |
|  3 | otto ottodestruct.com                                |   20.3 |
|  4 | singh.gabu gmail.com                                 |   20.1 |
|  5 | admin wpkid.com                                      |   16.4 |
|  6 | r schestowitz.com                                    |   15.7 |
|  7 | jeremib gmail.com                                    |   14.2 |
|  8 | jer simianuprising.com                               |   13.4 |
|  9 | knoxpics gmail.com                                   |   12.9 |
| 10 | wordpress dd32.id.au                                 |   10.8 |
| 11 | wp andrewnacin.com                                   |   10.1 |
| 12 | mpretty voceconnect.com                              |    8.3 |
| 13 | scribu gmail.com                                     |    8.0 |
| 14 | mark watero.us                                       |    7.9 |
| 15 | gaarai gaarai.com                                    |    7.7 |
| 16 | jeremy visser.name                                   |    6.9 |
| 17 | Ken adcSTUDIO.com                                    |    6.3 |
| 18 | steve sltaylor.co.uk                                 |    6.3 |
| 19 | wordpress zed1.com                                   |    5.8 |
| 20 | elizabeth slatetechpdx.com                           |    5.6 |
| 21 | mgerring emrl.com                                    |    5.4 |
| 22 | notfornoone gmail.com                                |    4.9 |
| 23 | viniciusandre gmail.com                              |    4.6 |
| 24 | wp xentek.net                                        |    4.4 |
| 25 | burobjorn gmail.com                                  |    4.4 |
+----+------------------------------------------------------+--------+

***** Best authors, by average size of their message (w/o quoting):
+----+-----Author--------------------------------------------+-bytes-+
|  1 | r schestowitz.com                                     | 16101 |
|  2 | singh.gabu gmail.com                                  |  6855 |
|  3 | eric eamann.com                                       |  3176 |
|  4 | lists hikarinet.info                                  |  2762 |
|  5 | tunamaxx yahoo.com                                    |  2313 |
|  6 | knoxpics gmail.com                                    |  2202 |
|  7 | jeremib gmail.com                                     |  2076 |
|  8 | skeltoac gmail.com                                    |  1902 |
|  9 | mgerring emrl.com                                     |  1849 |
| 10 | mpretty voceconnect.com                               |  1709 |
| 11 | dougal gunters.org                                    |  1709 |
| 12 | notfornoone gmail.com                                 |  1688 |
| 13 | knxdt.blogspot gmail.com                              |  1638 |
| 14 | Ken adcSTUDIO.com                                     |  1608 |
| 15 | tech johannes-ruthenberg.de                           |  1596 |
| 16 | mitch studionashvegas.com                             |  1542 |
| 17 | spellham gmail.com                                    |  1484 |
| 18 | senica gmail.com                                      |  1470 |
| 19 | emoya tribune.com                                     |  1458 |
| 20 | dave vinertech.com                                    |  1432 |
| 21 | elizabeth slatetechpdx.com                            |  1425 |
| 22 | staraclib free.fr                                     |  1413 |
| 23 | jer simianuprising.com                                |  1372 |
| 24 | mark watero.us                                        |  1344 |
| 25 | scottg.wp-hackers mhg2.com                            |  1322 |
+----+-------------------------------------------------------+-------+

***** Table showing the most successful subjects:
+----+----Subject-----------------------------------+--Msg-+-Percent-+
|  1 | [wp-hackers] Need Help, I cannot figure this |   29 |  7.07 % |
|  2 | [wp-hackers] Some Thoughts/Enhancement Ideas |   22 |  5.37 % |
|  3 | [wp-hackers] Some Thoughts/Enhancement Ideas |   19 |  4.63 % |
|  4 | [wp-hackers] Some Thoughts/Enhancement Ideas |   16 |  3.90 % |
|  5 | [wp-hackers] Plugins: Best practice for cond |   14 |  3.41 % |
|  6 | [wp-hackers] thorough admin SSL              |   12 |  2.93 % |
|  7 | [wp-hackers] Some Thoughts/Enhancement Ideas |   12 |  2.93 % |
|  8 | [wp-hackers] Rewriting Comments for html5 va |   10 |  2.44 % |
|  9 | [wp-hackers] Running trunk on the open web   |    9 |  2.20 % |
| 10 | [wp-hackers] Recommendations for trac patche |    9 |  2.20 % |
| 11 | [wp-hackers] Error handling in WordPress     |    9 |  2.20 % |
| 12 | [wp-hackers] Bug in wp_mail                  |    9 |  2.20 % |
| 13 | [wp-hackers] Plain text Password?!           |    8 |  1.95 % |
| 14 | [wp-hackers] Wordpress Android App (GSOC)    |    8 |  1.95 % |
| 15 | [wp-hackers] howto including full path in ja |    8 |  1.95 % |
| 16 | [wp-hackers] alternative taxonomy to relate  |    8 |  1.95 % |
| 17 | [wp-hackers] Slightly O/T: PHP based alterna |    7 |  1.71 % |
| 18 | [wp-hackers] Best way to verify if a post_id |    7 |  1.71 % |
| 19 | [wp-hackers] Requesting advice regarding com |    7 |  1.71 % |
| 20 | [wp-hackers] Please Help: How to compare 2 f |    6 |  1.46 % |
| 21 | [wp-hackers] Best practice for archives of c |    6 |  1.46 % |
| 22 | [wp-hackers] Remove Plugin from wordpress.or |    6 |  1.46 % |
| 23 | [wp-hackers] Script Install of WordPress Las |    6 |  1.46 % |
| 24 | [wp-hackers] $pagenow in WP 3.0 ?            |    5 |  1.22 % |
| 25 | [wp-hackers] reset &send user pass           |    5 |  1.22 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  153 | 37.32 % |
+----+----------------------------------------------+------+---------+

***** Most used email clients:
+----+----Mailer------------------------------------+--Msg-+-Percent-+
|  1 | Google Mail/Other                            |  205 | 50.00 % |
|  2 | Microsoft Outlook Express 6.x                |   45 | 10.98 % |
|  3 | Apple Mail (2.1077)                          |   37 |  9.02 % |
|  4 | Mozilla/5.x                                  |   31 |  7.56 % |
|  5 | Microsoft Office Outlook 12.0                |   14 |  3.41 % |
|  6 | Thunderbird 2.0.0.23 (Windows/20090812)      |   14 |  3.41 % |
|  7 | Apple Mail (2.936)                           |   11 |  2.68 % |
|  8 | G2/1.0                                       |    9 |  2.20 % |
|  9 | Opera Mail/10.10 (Win32)                     |    9 |  2.20 % |
| 10 | SquirrelMail/1.4.19                          |    8 |  1.95 % |
| 11 | Thunderbird 2.0.0.23 (X11/20090817)          |    7 |  1.71 % |
| 12 | Microsoft Outlook 14.0                       |    4 |  0.98 % |
| 13 | Industrious bit-pushing elves                |    3 |  0.73 % |
| 14 | iPhone Mail (7D11)                           |    2 |  0.49 % |
| 15 | iPhone Mail (7E18)                           |    2 |  0.49 % |
| 16 | Mutt                                         |    2 |  0.49 % |
| 17 | Microsoft-Entourage/12.23.0.091001           |    2 |  0.49 % |
| 18 | iPod Mail (7D11)                             |    1 |  0.24 % |
| 19 | RoundCube Webmail/0.3-stable                 |    1 |  0.24 % |
| 20 | SquirrelMail/1.4.3a                          |    1 |  0.24 % |
| 21 | Zimbra 5.0.19_GA_3083.RHEL5_64               |    1 |  0.24 % |
| 22 | YahooMailClassic/9.2.12 YahooMailWebService/ |    1 |  0.24 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |    0 |  0.00 % |
+----+----------------------------------------------+------+---------+

***** Table of maximal quoting:
+----+-----Author------------------------------------------+-Percent-+
|  1 | ash thinkinginvain.com                              | 95.11 % |
|  2 | thenbrent gmail.com                                 | 91.96 % |
|  3 | kestrachern gmail.com                               | 88.04 % |
|  4 | shane bugssite.org                                  | 87.50 % |
|  5 | aruniihtmeerut gmail.com                            | 85.08 % |
|  6 | aaron xavisys.com                                   | 84.86 % |
|  7 | aram.bv gmail.com                                   | 79.73 % |
|  8 | navjotjsingh gmail.com                              | 79.47 % |
|  9 | jpotkanski tribune.com                              | 79.32 % |
| 10 | leif.a.andersen gmail.com                           | 78.65 % |
| 11 | spellham gmail.com                                  | 78.07 % |
| 12 | erisds gmail.com                                    | 76.52 % |
| 13 | frank bueltge.de                                    | 75.62 % |
| 14 | charles cefm.ca                                     | 75.03 % |
| 15 | wordpress dd32.id.au                                | 73.42 % |
| 16 | mccormicky gmail.com                                | 71.01 % |
| 17 | casey.bisson gmail.com                              | 70.95 % |
| 18 | jeremib gmail.com                                   | 69.40 % |
| 19 | contact hervedesign.com                             | 68.01 % |
| 20 | johnbillion+wp gmail.com                            | 67.94 % |
| 21 | logikal16 gmail.com                                 | 67.87 % |
| 22 | aaron jorb.in                                       | 67.16 % |
| 23 | dave vinertech.com                                  | 66.74 % |
| 24 | senica gmail.com                                    | 63.80 % |
| 25 | adriaan.pelzer gmail.com                            | 60.59 % |
+----+-----------------------------------------------------+---------+
|    | average                                             | 45.03 % |
+----+-----------------------------------------------------+---------+

***** Graph showing number of messages written during hours of day:

100% -------------------------------#----------------- - 34
 90% -----------------------#-------#----------------- msgs
 80% -----------------------#-----#-#-----------------
 70% -----------------------#---#-#-#---#-------------
 60% -----------------------#---#-#-#---#-------------
 50% -----------------#-#-#-#-#-#-#-#-#-#-#-#---#-#---
 40% -#-#-------------#-#-#-#-#-#-#-#-#-#-#-#---#-#-#-
 30% -#-#-#-----------#-#-#-#-#-#-#-#-#-#-#-#---#-#-#-
 20% -#-#-#---------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 10% -#-#-#-#---#---#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
      * * * * * * * * * * * * * * * * * * * * * * * *
hour  0         5           11          17          23


***** Graph showing number of messages written during days of month:

100% -#------------------------------------------------------------- - 42
 90% -#-------------------------#----------------------------------- msgs
 80% -#-------------------------#-----------------------------------
 70% -#-------#---------#-------#-----------------------------------
 60% -#---#---#---------#-------#-#---------------------------------
 50% -#---#---#---------#-------#-#---------------------------------
 40% -#---#-#-#-------#-#-#-----#-#---------------------------------
 30% -#-#-#-#-#-----#-#-#-#---#-#-#-----------------#---------------
 20% -#-#-#-#-#-----#-#-#-#-#-#-#-#-#---------#-#-#-#---------------
 10% -#-#-#-#-#-#---#-#-#-#-#-#-#-#-#-#-#-#---#-#-#-#-#-#-#-#-------
      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 day  1         6           12          18          24            31


***** Graph showing number of messages written during days of week:

100% -#--------------------------- - 93
 90% -#--------------------------- msgs
 80% -#-------#-------------------
 70% -#-------#-------------------
 60% -#-------#-------------------
 50% -#---#---#---#---#-------#---
 40% -#---#---#---#---#-------#---
 30% -#---#---#---#---#-------#---
 20% -#---#---#---#---#---#---#---
 10% -#---#---#---#---#---#---#---
      *   *   *   *   *   *   *
     Mon Tue Wed Thu Fri Sat Sun


***** Maximal quoting:
      Author     : ash thinkinginvain.com
      Subject    : [wp-hackers] query_posts orderby=meta_value
      Date       : Wed, 10 Feb 2010 12:29:59 +0800
      Quote ratio: 98.72% / 25674 bytes

***** Longest message:
      Author     : singh.gabu gmail.com
      Subject    : [wp-hackers] wp-hackers Digest, Vol 61, Issue 18
      Date       : Sat, 6 Feb 2010 02:59:36 +0530
      Size       : 25943 bytes

***** Most successful subject:
      Subject    : [wp-hackers] Need Help, I cannot figure this out.
      No. of msgs: 29
      Total size : 119226 bytes

***** Final summary:
      Total number of messages:             410
      Total number of different authors:    116
      Total number of different subjects:   87
      Total size of messages (w/o headers): 827826 bytes
      Average size of a message:            2019 bytes

***** Generated by MailListStat v1.3, (C) 2001-2003 <marki (at) nexin.sk>
***** See http://freshmeat.net/projects/mls for details...

DISCLAIMER: Stats automatically produced. Remember that stats are often
meaningless and deceiving.

From tim at silentgap.com  Mon Mar  1 16:47:31 2010
From: tim at silentgap.com (Tim Schoffelman)
Date: Mon, 1 Mar 2010 10:47:31 -0600
Subject: [wp-hackers] WPMU Category ID Updating
In-Reply-To: <014901caab5f$4da0b120$e8e21360$@com>
References: <9bf0faac1001271252y1a951fd8sa825847975b87144@mail.gmail.com>
	<9bf0faac1001271421y2bdfa897mc8b9916a897688b4@mail.gmail.com>
	<231c01caa03b$15fac0f0$41f042d0$@TheCodeCave.com>
	<9bf0faac1001281426k5bfa216am5d3ecbf0f8967ee8@mail.gmail.com>
	<004001caa0ee$85713550$90539ff0$@TheCodeCave.com>
	<3ee7077c1001300859g47c9ffa0j733fa7556b37e035@mail.gmail.com>
	<aaf501caa203$3d835820$b88a0860$@thecodecave.com>
	<012801caab58$08db1e10$1a915a30$@com>
	<00f401caab5e$78f41ca0$6adc55e0$@thecodecave.com>
	<014901caab5f$4da0b120$e8e21360$@com>
Message-ID: <5b1aecc1003010847m1237dd63h959748fd3238caab@mail.gmail.com>

The problem with @donncha's example (
http://core.trac.wordpress.org/ticket/12206) when he say's we can use
is_category('test') is stated in his previous sentences when he talks about
changing the name of the category. He say's the ID's change if you were to
update the blog category at all (which when he explains it, I understand
where he's coming from & why they went that route), but in my humblest
opinion, that's still a flaw, because you'll have to go back and update your
is_category('test') to is_category('tests') or whatever the new name is.

Thoughts?


On Thu, Feb 11, 2010 at 3:15 PM, Brad Williams <bradw at illiams.com> wrote:

> If you're behavior is different please add to the ticket.  Working on
> narrowing it down to find the bug
>
> Apparently it doesn't exist in 3.0 alpha
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Brian Layman
> Sent: Thursday, February 11, 2010 4:09 PM
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] WPMU Category ID Updating
>
> >http://core.trac.wordpress.org/ticket/12206
> It's ALWAYS the next available ID? And repeats if you rename the same
> category back to the original value?
>
> If so, that is different behavior from what I'd witnessed in earlier
> versions.
>
> Brian.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From raphael.droz at gmail.com  Mon Mar  1 17:00:12 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Mon, 01 Mar 2010 18:00:12 +0100
Subject: [wp-hackers] the_author hook,
	the_author_posts_link() : hooks and semantics
Message-ID: <4B8BF29C.3020009@gmail.com>

Hi,
I'm using the wp-rdfa plugins which insert metadata by hooking into 
the_author().
That is, I found that there was html syntax errors and duplication of 
those metadata.
By digging around I found that the_author_posts_link() uses 
get_the_author() two times,
successively.
I was tempted to correct the rdfa plugin to hook into another function, 
a function which
would not be use often like it's the case for the_author().
I was thinking about a hook which would specifically apply for metadata, 
nor for the content,
or the style.
I didn't find such a function, even worse (imnsho),  I noticed that 
the_title_attribute()
also calls get_the_title().
I really feel the need of getting a more semantically-oriented logic for 
hooks as hooking the_author()
mays change the presentation, the content, or ... the semantic via 
metadatas.

For now I just put a kind of specific workaround applying against WPMU 
2.9.1.1 which basically replaces
the first call of  get_the_author() by get_the_author_meta('display_name').
This first call set the value of an attribute, it (according to me) 
should not be subject to non-attribute-oriented
hooks.

I'm new on the list and would like some enlightenment about this 
subject. If the question has already been
evoked despite my searches, please point me to some resources.

Good luck for the coming release and thank you.


From lists at hikarinet.info  Mon Mar  1 21:13:06 2010
From: lists at hikarinet.info (Hikari)
Date: Mon, 1 Mar 2010 18:13:06 -0300
Subject: [wp-hackers] Wordpress Plugin Repository not approving a plugin
References: <4B8BF29C.3020009@gmail.com>
Message-ID: <DF8A52F89A8D43709807B6A3CD254521@MAIN>

Hello again, I'd like an advice about this situation :)

My first submited plugin was approved in around 2 days. Now my second one is waiting for 2 weeks and wasn't approved yet.

I already have its readme.txt and its home page ready, just waiting for it to enter the repository. I published its page and for now 
I'm hosting it in my site, I've resubmited to repository 2 times I think.


I'm not complaining about the delay. I just wanted to know if it's normal and I should just keep waiting or if there's something 
wrong and what I should do about it.

tnx ^^




---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br


From lionel51 at gmail.com  Mon Mar  1 21:22:04 2010
From: lionel51 at gmail.com (Lionel Heinz)
Date: Mon, 1 Mar 2010 22:22:04 +0100
Subject: [wp-hackers] Survey for a Master Thesis about Open Source CMS
Message-ID: <fa49bad01003011322m62cb56e1vcf719d2c56f72006@mail.gmail.com>

Hello,

As part of my Master Thesis for a degree in Business Engineering, I'm
conducting some research about the patterns of free revealing code within
Open Source CMS. To do so, I need to collect some data to conduct
statistical studies.

If you?re a developer or involved in the development of code related to a
CMS, may I ask you to give up less than 5 minutes of your time to fill in a
survey consisting of 25 multiple choice questions? You can find it on the
following link : http://www.lionelheinz.net/survey-for-master-thesis .
Gathering a significant amount of answers is quite important for the success
of this thesis, so I would be very grateful for your contributions !

This survey is anonymous, data will be aggregated in order to conduct
statistical studies. If you have any question regarding the survey, don?t
hesitate to contact me !

Many Thanks in advance !

Lionel Heinz
Solvay Business School, University of Brussels, Belgium
e-mail : Lionel.Heinz at ulb.ac.be or lionel51 at gmail.com

P.S. Please forgive me if this request does'nt match exactly the goals of
this mailing list, but contacting developers through such lists is the best
way to get data of good quality...

From raphael.droz at gmail.com  Mon Mar  1 21:41:21 2010
From: raphael.droz at gmail.com (=?iso-8859-1?Q?Rapha=EBl?= Droz)
Date: Mon, 1 Mar 2010 22:41:21 +0100
Subject: [wp-hackers] the_author hook,
	the_author_posts_link() : hooks and semantics
Message-ID: <20100301214120.GD4926@deeebian>

Hi,
I'm using the wp-rdfa plugins which insert metadata by hooking into
the_author().
That is, I found that there was html syntax errors and duplication of
those metadata.
By digging around I found that the_author_posts_link() uses
get_the_author() two times,
successively.
I was tempted to correct the rdfa plugin to hook into another
function, a function which
would not be use often like it's the case for the_author().
I was thinking about a hook which would specifically apply for
metadata, nor for the content,
or the style.
I didn't find such a function, even worse (imnsho),  I noticed that
the_title_attribute()
also calls get_the_title().
I really feel the need of getting a more semantically-oriented logic
for hooks as hooking the_author()
mays change the presentation, the content, or ... the semantic via
metadatas.

For now I just put a kind of specific workaround applying against WPMU
2.9.1.1 which basically replaces
the first call of  get_the_author() by get_the_author_meta('display_name').
This first call set the value of an attribute, it (according to me)
should not be subject to non-attribute-oriented
hooks.

I'm new on the list and would like some enlightenment about this
subject. If the question has already been
evoked despite my searches, please point me to some resources.

Good luck for the coming release and thank you.

[it's my 2nd attempt today as I didn't received any undeliverable notice]



From otto at ottodestruct.com  Mon Mar  1 21:49:31 2010
From: otto at ottodestruct.com (Otto)
Date: Mon, 1 Mar 2010 15:49:31 -0600
Subject: [wp-hackers] the_author hook,
	the_author_posts_link() : hooks and 	semantics
In-Reply-To: <20100301214120.GD4926@deeebian>
References: <20100301214120.GD4926@deeebian>
Message-ID: <161617691003011349v86ab5efnf0f7b938f74a5b47@mail.gmail.com>

> [it's my 2nd attempt today as I didn't received any undeliverable notice]

Yes, that's because it got delivered just fine.

Please don't repost things to the email list just because you didn't
get a response. This isn't instant gratification, and it's not
expected to be. Somebody will respond when they have something to say.

This is an email list. When you send email to this list, you're
sending an email to several hundred or thousand people. Bear that in
mind.

If you really need an immediate response, then you should perhaps ask
a pro to solve the problem for you. You can ask around on the wp-pro
mailing list, perhaps get a quicker response:
http://lists.automattic.com/mailman/listinfo/wp-pro

-Otto

From scribu at gmail.com  Mon Mar  1 22:02:19 2010
From: scribu at gmail.com (scribu)
Date: Tue, 2 Mar 2010 00:02:19 +0200
Subject: [wp-hackers] Wordpress Plugin Repository not approving a plugin
In-Reply-To: <DF8A52F89A8D43709807B6A3CD254521@MAIN>
References: <4B8BF29C.3020009@gmail.com>
	<DF8A52F89A8D43709807B6A3CD254521@MAIN>
Message-ID: <349fe48b1003011402l3131ec6ao6aec7748027a09d8@mail.gmail.com>

A link to said plugin page on your site would probably be useful.


-- 
http://scribu.net

From lists at hikarinet.info  Tue Mar  2 00:50:51 2010
From: lists at hikarinet.info (Hikari)
Date: Mon, 1 Mar 2010 21:50:51 -0300
Subject: [wp-hackers] Wordpress Plugin Repository not approving a plugin
References: <4B8BF29C.3020009@gmail.com><DF8A52F89A8D43709807B6A3CD254521@MAIN>
	<349fe48b1003011402l3131ec6ao6aec7748027a09d8@mail.gmail.com>
Message-ID: <23DB682895674905A2DE7B13E2AE3077@MAIN>

http://Hikari.ws/titled-comments/


I remember that when I submited my 1st plugin it was listed as pending in the Repository, I don't remember exactally how and in 
which page but I could see it there.

Now there is no sign the plugin was submited, at least I can't see it.

---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br


----- Original Message ----- 
From: "scribu" <scribu at gmail.com>
Sent: Monday, 01 March, 2010 7:02 PM


|A link to said plugin page on your site would probably be useful.


From eric at eamann.com  Tue Mar  2 02:47:06 2010
From: eric at eamann.com (Eric Mann)
Date: Mon, 1 Mar 2010 18:47:06 -0800
Subject: [wp-hackers] Custom URL
Message-ID: <001f01cab9b2$a69c5160$f3d4f420$@com>

I'm building a simple XML-RPC error reporting system for a couple of
plug-ins, and I want to manage the XML-RPC server from my own WordPress
installation.  In order to do this, I need a simple URL my clients can post
data to.  I'd like it to be short, like http://jumping-duck.com/xmlserver/
but in order to do that, I'll need some kind of custom URL rewriting.

 

I'd like all traffic posting to that URL to actually call a function on the
backend that will parse and store the data.  Anyone requesting that URL will
be automatically redirected to the homepage.

 

All of the tutorials and documentation I can find reference using custom
rewriting to search the database for custom fields or other dynamic data - I
can't find any examples with a 1-1 rewrite of a short permalink that works
like this.  So I'm reaching out to all of you for some support.

 

Does anyone have any experience working with this?  Any ideas on how to
implement it?

 

 

Eric Mann

 <http://www.eamann.com> www.eamann.com

 


From lists at hikarinet.info  Tue Mar  2 03:18:56 2010
From: lists at hikarinet.info (Hikari)
Date: Tue, 2 Mar 2010 00:18:56 -0300
Subject: [wp-hackers] Custom URL
References: <001f01cab9b2$a69c5160$f3d4f420$@com>
Message-ID: <24DD81128D7B4149AE8FECCEA7017DD9@MAIN>

Do you have this system already developed and running?


The first idea I have is create a page with that permalink, and attack your system to Wordpress as a plugin, with a shortcode to put 
it into the page.

The shortcode can add a form to receive the input and print any required data. And a plugin php would receive the input.


If the system can't be attached to Wordpress, you can try a htaccess rewrite rule redirecting it. Or some kind of iframe to add the 
system page into the Wordpress theme.


It's more how can you merge your system to Wordpress than how to use a permalink to the system. In ultimate case, use the Custom 
Permalink plugin to set any custom permalink to any post, page, category, tag, etc.


---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br 


From james at om4.com.au  Tue Mar  2 03:32:31 2010
From: james at om4.com.au (James Collins)
Date: Tue, 2 Mar 2010 14:32:31 +1100
Subject: [wp-hackers] Custom URL
In-Reply-To: <001f01cab9b2$a69c5160$f3d4f420$@com>
References: <001f01cab9b2$a69c5160$f3d4f420$@com>
Message-ID: <bcf8d3151003011932p7c598db0ld093271d643ca2d2@mail.gmail.com>

Which version of WordPress are you using?

If you are using pre 3.0, I would use:
http://domain.com/wp-admin/admin-post.php?action=your_unique_action_name
You then hook into this with something like:
add_action('admin_post_nopriv_your_unique_action_name', 'your_handler');

In WordPress 3.0, you would use:
http://domain.com/wp-ajax.php?action=your_unique_action_name
You then hook into this with something like:
add_action('ajax_your_unique_action_name', 'your_handler');
(this new wp-ajax.php file was added in
http://core.trac.wordpress.org/changeset/13527).


You then put your handling code in a your_handler() function.

Using these AJAX hooks means that loading the whole of WordPress is avoided
(ie your WordPress template isn't echo'd/displayed).

If you want to make these URLs look more friendly, then I would use
mod_rewrite in your .htaccess file to rewrite /xmlserver/ to one of the
above URLs.

Regards,

James Collins

OM4 - Website Design and Development

From joseph at josephscott.org  Tue Mar  2 03:43:08 2010
From: joseph at josephscott.org (Joseph Scott)
Date: Mon, 1 Mar 2010 20:43:08 -0700
Subject: [wp-hackers] Custom URL
In-Reply-To: <001f01cab9b2$a69c5160$f3d4f420$@com>
References: <001f01cab9b2$a69c5160$f3d4f420$@com>
Message-ID: <bbd639f51003011943v4cd6af31t2bc0b5ee618d5499@mail.gmail.com>

If all you need are some new XML-RPC methods that your clients use to
submit data to your WP install you can easily do that with a plugin:
http://josephscott.org/archives/2008/11/adding-xml-rpc-methods-to-wordpress/

Then your XML-RPC methods will be exposed via the standard WP XML-RPC
end point http://jumping-duck.com/xmlrpc.php (using your URL example).

On Mon, Mar 1, 2010 at 7:47 PM, Eric Mann <eric at eamann.com> wrote:
> I'm building a simple XML-RPC error reporting system for a couple of
> plug-ins, and I want to manage the XML-RPC server from my own WordPress
> installation. ?In order to do this, I need a simple URL my clients can post
> data to. ?I'd like it to be short, like http://jumping-duck.com/xmlserver/
> but in order to do that, I'll need some kind of custom URL rewriting.



-- 
Joseph Scott
joseph at josephscott.org
http://josephscott.org/

From eric at eamann.com  Tue Mar  2 05:13:44 2010
From: eric at eamann.com (Eric Mann)
Date: Mon, 1 Mar 2010 21:13:44 -0800
Subject: [wp-hackers] Custom URL
In-Reply-To: <bbd639f51003011943v4cd6af31t2bc0b5ee618d5499@mail.gmail.com>
References: <001f01cab9b2$a69c5160$f3d4f420$@com>
	<bbd639f51003011943v4cd6af31t2bc0b5ee618d5499@mail.gmail.com>
Message-ID: <00ae01cab9c7$22e0f8c0$68a2ea40$@com>

Joseph,

This is exactly what I was looking for!  It's so much easier to use the built in XMLRPC system than it is to re-invent the wheel (given, I was halfway done building my own when I sent the original message).  This will make things run so much more smoothly!

Though one follow-up question.  I already have a system built that will post data via XML-RPC ... but is the internal WordPress engine capable of posting data on its own?  I know it will receive post data, but can I use the class to create a post request as well?

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Joseph Scott
Sent: Monday, March 01, 2010 7:43 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Custom URL

If all you need are some new XML-RPC methods that your clients use to
submit data to your WP install you can easily do that with a plugin:
http://josephscott.org/archives/2008/11/adding-xml-rpc-methods-to-wordpress/

Then your XML-RPC methods will be exposed via the standard WP XML-RPC
end point http://jumping-duck.com/xmlrpc.php (using your URL example).

On Mon, Mar 1, 2010 at 7:47 PM, Eric Mann <eric at eamann.com> wrote:
> I'm building a simple XML-RPC error reporting system for a couple of
> plug-ins, and I want to manage the XML-RPC server from my own WordPress
> installation.  In order to do this, I need a simple URL my clients can post
> data to.  I'd like it to be short, like http://jumping-duck.com/xmlserver/
> but in order to do that, I'll need some kind of custom URL rewriting.



-- 
Joseph Scott
joseph at josephscott.org
http://josephscott.org/
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From joseph at josephscott.org  Tue Mar  2 05:24:33 2010
From: joseph at josephscott.org (Joseph Scott)
Date: Mon, 1 Mar 2010 22:24:33 -0700
Subject: [wp-hackers] Custom URL
In-Reply-To: <00ae01cab9c7$22e0f8c0$68a2ea40$@com>
References: <001f01cab9b2$a69c5160$f3d4f420$@com>
	<bbd639f51003011943v4cd6af31t2bc0b5ee618d5499@mail.gmail.com> 
	<00ae01cab9c7$22e0f8c0$68a2ea40$@com>
Message-ID: <bbd639f51003012124r15a80fcbuddefc85f4281f9e6@mail.gmail.com>

WordPress uses the IXR library for XML-RPC support, which includes
server and client components -
http://scripts.incutio.com/xmlrpc/manual.php - it is in
wp-includes/class-IXR.php.

So yes WP can make XML-RPC calls as well, the IXR docs have some
examples of how that works -
http://scripts.incutio.com/xmlrpc/basic-client-construction.php

As a result plugins can cover the whole spectrum of XML-RPC events;
add and process new methods on the server and make client calls to
external services.

On Mon, Mar 1, 2010 at 10:13 PM, Eric Mann <eric at eamann.com> wrote:
> Though one follow-up question. ?I already have a system built that will post data via XML-RPC ... but is the internal WordPress engine capable of posting data on its own? ?I know it will receive post data, but can I use the class to create a post request as well?


-- 
Joseph Scott
joseph at josephscott.org
http://josephscott.org/

From wordpress at dd32.id.au  Tue Mar  2 06:38:07 2010
From: wordpress at dd32.id.au (DD32)
Date: Tue, 2 Mar 2010 17:38:07 +1100
Subject: [wp-hackers] Wordpress Plugin Repository not approving a plugin
In-Reply-To: <23DB682895674905A2DE7B13E2AE3077@MAIN>
References: <4B8BF29C.3020009@gmail.com>
	<DF8A52F89A8D43709807B6A3CD254521@MAIN>
	<349fe48b1003011402l3131ec6ao6aec7748027a09d8@mail.gmail.com>
	<23DB682895674905A2DE7B13E2AE3077@MAIN>
Message-ID: <45055a191003012238u4786c289qccc49591a00e3506@mail.gmail.com>

Part of the reason could be due to your licensing for the plugin.
The plugin directory only hosts GPL2 compliant code IIRC.
Not going to go into it, But theres been a few discussions in the past that
plugins are derivative works of WordPress, and therefor, must fall under a
GPL2 compliant license.

On 2 March 2010 11:50, Hikari <lists at hikarinet.info> wrote:

> http://Hikari.ws/titled-comments/
>
>
> I remember that when I submited my 1st plugin it was listed as pending in
> the Repository, I don't remember exactally how and in
> which page but I could see it there.
>
> Now there is no sign the plugin was submited, at least I can't see it.
>
> ---------------------------
> Hikari -  A Luz ilumina a PAZ
> http://Hikari.ws
> http://ConscienciaPlanetaria.com
>
> Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!:
> http://seunome.ConscienciaPlanetaria.com.br
>
>
> ----- Original Message -----
> From: "scribu" <scribu at gmail.com>
> Sent: Monday, 01 March, 2010 7:02 PM
>
>
> |A link to said plugin page on your site would probably be useful.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Tue Mar  2 15:01:30 2010
From: otto at ottodestruct.com (Otto)
Date: Tue, 2 Mar 2010 09:01:30 -0600
Subject: [wp-hackers] Wordpress Plugin Repository not approving a plugin
In-Reply-To: <23DB682895674905A2DE7B13E2AE3077@MAIN>
References: <4B8BF29C.3020009@gmail.com>
	<DF8A52F89A8D43709807B6A3CD254521@MAIN> 
	<349fe48b1003011402l3131ec6ao6aec7748027a09d8@mail.gmail.com> 
	<23DB682895674905A2DE7B13E2AE3077@MAIN>
Message-ID: <161617691003020701x22254406uda28f19bff1d62de@mail.gmail.com>

Your plugin request, if it still exists, will show up here:
http://wordpress.org/extend/plugins/add/

-Otto



On Mon, Mar 1, 2010 at 6:50 PM, Hikari <lists at hikarinet.info> wrote:
> http://Hikari.ws/titled-comments/
>
>
> I remember that when I submited my 1st plugin it was listed as pending in the Repository, I don't remember exactally how and in
> which page but I could see it there.
>
> Now there is no sign the plugin was submited, at least I can't see it.

From 24-7 at gmx.net  Tue Mar  2 15:29:10 2010
From: 24-7 at gmx.net (24/7)
Date: Tue, 2 Mar 2010 16:29:10 +0100
Subject: [wp-hackers]  reset &send user pass
In-Reply-To: <7b4922321002260750u1d26a4e3t3a29f619ca5e87d9@mail.gmail.com>
References: <39BAE29A-DD79-4B52-834F-303A3C16B844@daivmowbray.com>	<45A1919D-5030-46F5-9E2B-263FE6EE7E85@ftwr.co.uk>	<D8880661-2096-43E7-BBD4-6D6E0DFD0EE7@daivmowbray.com>	<3D985276D4304C61B956F9CCE6ECFC2E@MAIN>	<000901cab64b$e1c46f30$a54d4d90$@net>	<3b7d2901d503035b594700dfa20f8709.squirrel@mfields.org>	<4B8705BE.3030700@visser.name>	<7b4922321002251543s4fb7b5d7p3b7e049e72a65f2a@mail.gmail.com>	<002501cab6e2$f8d0d460$ea727d20$@net>
	<7b4922321002260750u1d26a4e3t3a29f619ca5e87d9@mail.gmail.com>
Message-ID: <001101caba1d$1baad980$53008c80$@net>

So far i have only found a *lame* sollution to resend the wp_mail on a
per-user base: https://core.trac.wordpress.org/ticket/12461

I hope someone got an idea on how to reset the pass for the user without
resending the email with the "click this link to reset and resend pass"-link

- K.

-----Urspr?ngliche Nachricht-----
Von: Jared Bangs [mailto:jaredbangs at gmail.com] 
Gesendet: Freitag, 26. Februar 2010 16:51
An: wp-hackers at lists.automattic.com
Betreff: Re: [wp-hackers] reset &send user pass

On Fri, Feb 26, 2010 at 4:55 AM, 24/7 <24-7 at gmx.net> wrote:
>
> @Jared: Do you have a link for your plugin? I couldn?t find it on the web.
>

Unfortunately I don't know if I still have it. I did it as part of a
project for someone else quite a while ago, and I don't think they
ever released it publicly.

>> If you (or your client, etc.) insists on going that route, you could
>> probably look through the code for the methods that need to be called,
>> etc., but sending them a link to the normal password reset process
>> would certainly be a lot less work and better in terms of security.
>
> I?m just trying to trigger what?s already in use and not just the
> "do you want to reset"-mail from wp-login.php - line 108-183.
> If i copy-paste the wp-login.php (line 185-234) code and populate
> it with the right values, i *should* be able to resend it. (So it should
> be of the same "security level" wp already provides with the way it
> behaves.) My problem is, that i don?t see how to send the mail
> (i think i?m routine-blinded or simply... stupid).
>

On the issue of sending the email, WP has some built-in functions for
sending emails that should be available to your plugin. Check the code
from some of the more popular plugins that deal with sending email
notifications for sample usage.

On the security front, I was slightly confused, in that I did not
think WP sent the password via email during the password reset
process, but now that I review it I can see that it does, so you are
correct; it basically should be no different than that.



From lists at hikarinet.info  Tue Mar  2 15:53:08 2010
From: lists at hikarinet.info (Hikari)
Date: Tue, 2 Mar 2010 12:53:08 -0300
Subject: [wp-hackers] Wordpress Plugin Repository not approving a plugin
References: <4B8BF29C.3020009@gmail.com><DF8A52F89A8D43709807B6A3CD254521@MAIN>
	<349fe48b1003011402l3131ec6ao6aec7748027a09d8@mail.gmail.com>
	<23DB682895674905A2DE7B13E2AE3077@MAIN>
	<161617691003020701x22254406uda28f19bff1d62de@mail.gmail.com>
Message-ID: <5B2B96AC48834E75AF31131E67C5DC1D@MAIN>

Yes, it's not listed there

http://img17.imageshack.us/img17/2964/pluginrequest.png

It isn't listed just after I submit the form. What could be happening?


---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br


----- Original Message ----- 
From: "Otto" <otto at ottodestruct.com>
Sent: Tuesday, 02 March, 2010 12:01 PM


| Your plugin request, if it still exists, will show up here:
| http://wordpress.org/extend/plugins/add/


From jer at simianuprising.com  Tue Mar  2 17:10:19 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Tue, 2 Mar 2010 12:10:19 -0500
Subject: [wp-hackers] Survey for a Master Thesis about Open Source CMS
In-Reply-To: <fa49bad01003011322m62cb56e1vcf719d2c56f72006@mail.gmail.com>
References: <fa49bad01003011322m62cb56e1vcf719d2c56f72006@mail.gmail.com>
Message-ID: <e1202cb11003020910x725169f9o944254740e54a214@mail.gmail.com>

Lionel, I just took your survey and there are some parts I found very
confusing and I can't imagine that most people would understand it.
You use 'reveal code' a lot and it wasn't clear what you meant. Do you
mean posting code online in a blog so people can learn from it? Do you
specifically mean submitting code as patches for the core of a CMS? It
seems like it must include things like releasing plugins but that felt
very unclear to me.

Also the 'other cmss' section didn't make much sense, questions like
this "I develop code related to features already exsiting for other
Commercial CMS ?" just don't give enough information about what you
are getting at.

You should add some definitions for the major actions you discuss at the top.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From jer at simianuprising.com  Tue Mar  2 17:20:42 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Tue, 2 Mar 2010 12:20:42 -0500
Subject: [wp-hackers] Requesting advice regarding comments form errors,
	accessibility and patch for
	http://core.trac.wordpress.org/ticket/4332
In-Reply-To: <4B853AEC.6090804@gmail.com>
References: <4B827D02.8020800@gmail.com>
	<4cc4de141002220506v687cd7c2k9fa21a72141927a4@mail.gmail.com>
	<e1202cb11002230652k26e6ea5bp7e2c32647d6501b5@mail.gmail.com>
	<4B8522EF.6020508@gmail.com>
	<349fe48b1002240534x6521d8b2xa940d69c226ebd3e@mail.gmail.com>
	<4B853AEC.6090804@gmail.com>
Message-ID: <e1202cb11003020920j62d5a7f9u138815534d9e93b9@mail.gmail.com>

On Wed, Feb 24, 2010 at 9:42 AM, Bjorn Wijers <burobjorn at gmail.com> wrote:
> Getting it into 3.1 sounds good to me. How can we make sure it becomes
> part of the roadmap so we know our efforts are not in vain?

Bjorn, I'm fairly committed to making sure that a patch goes up and so
far my feeling is that if it is well done it will get committed. Jane
Wells has also expressed interest in a more organized error reporting
system to streamline error display in the core backend.

If you go to the ticket url and sign into trac (use your wordpress.org
login) you can go to the bottom and submit an empty comment with the
subscribe-me box checked, that way you will be emailed when there is
activity on the ticket. I'm planning to hit it once 3.0 goes live, so
if I'm being lazy leave a comment at that point and we can start
working on it.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From otto at ottodestruct.com  Tue Mar  2 17:33:37 2010
From: otto at ottodestruct.com (Otto)
Date: Tue, 2 Mar 2010 11:33:37 -0600
Subject: [wp-hackers] reset &send user pass
In-Reply-To: <001101caba1d$1baad980$53008c80$@net>
References: <39BAE29A-DD79-4B52-834F-303A3C16B844@daivmowbray.com> 
	<D8880661-2096-43E7-BBD4-6D6E0DFD0EE7@daivmowbray.com>
	<3D985276D4304C61B956F9CCE6ECFC2E@MAIN> 
	<000901cab64b$e1c46f30$a54d4d90$@net>
	<3b7d2901d503035b594700dfa20f8709.squirrel@mfields.org> 
	<4B8705BE.3030700@visser.name>
	<7b4922321002251543s4fb7b5d7p3b7e049e72a65f2a@mail.gmail.com> 
	<002501cab6e2$f8d0d460$ea727d20$@net>
	<7b4922321002260750u1d26a4e3t3a29f619ca5e87d9@mail.gmail.com> 
	<001101caba1d$1baad980$53008c80$@net>
Message-ID: <161617691003020933j520079dcna934af2b3ab10418@mail.gmail.com>

I guess I don't understand what it is that you're trying to do. Why not just
send them to the normal wp-login.php?action=lostpassword link?

-Otto


On Tue, Mar 2, 2010 at 9:29 AM, 24/7 <24-7 at gmx.net> wrote:

> So far i have only found a *lame* sollution to resend the wp_mail on a
> per-user base: https://core.trac.wordpress.org/ticket/12461
>
> I hope someone got an idea on how to reset the pass for the user without
> resending the email with the "click this link to reset and resend
> pass"-link
>
> - K.
>
> -----Urspr?ngliche Nachricht-----
> Von: Jared Bangs [mailto:jaredbangs at gmail.com]
> Gesendet: Freitag, 26. Februar 2010 16:51
> An: wp-hackers at lists.automattic.com
> Betreff: Re: [wp-hackers] reset &send user pass
>
> On Fri, Feb 26, 2010 at 4:55 AM, 24/7 <24-7 at gmx.net> wrote:
> >
> > @Jared: Do you have a link for your plugin? I couldn?t find it on the
> web.
> >
>
> Unfortunately I don't know if I still have it. I did it as part of a
> project for someone else quite a while ago, and I don't think they
> ever released it publicly.
>
> >> If you (or your client, etc.) insists on going that route, you could
> >> probably look through the code for the methods that need to be called,
> >> etc., but sending them a link to the normal password reset process
> >> would certainly be a lot less work and better in terms of security.
> >
> > I?m just trying to trigger what?s already in use and not just the
> > "do you want to reset"-mail from wp-login.php - line 108-183.
> > If i copy-paste the wp-login.php (line 185-234) code and populate
> > it with the right values, i *should* be able to resend it. (So it should
> > be of the same "security level" wp already provides with the way it
> > behaves.) My problem is, that i don?t see how to send the mail
> > (i think i?m routine-blinded or simply... stupid).
> >
>
> On the issue of sending the email, WP has some built-in functions for
> sending emails that should be available to your plugin. Check the code
> from some of the more popular plugins that deal with sending email
> notifications for sample usage.
>
> On the security front, I was slightly confused, in that I did not
> think WP sent the password via email during the password reset
> process, but now that I review it I can see that it does, so you are
> correct; it basically should be no different than that.
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Tue Mar  2 20:07:09 2010
From: scribu at gmail.com (scribu)
Date: Tue, 2 Mar 2010 22:07:09 +0200
Subject: [wp-hackers] Idea: Widgets as custom post types
Message-ID: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>

Currently, each widget type has a an associated row in the wp_options table,
where all instances of itself are stored.

Taking example from the nav menus in WP 3.0, why not store each widget in
the wp_posts table, with a post_type of 'widget' ?

Discuss.


-- 
http://scribu.net

From austin at ilfilosofo.com  Tue Mar  2 20:13:19 2010
From: austin at ilfilosofo.com (Austin Matzko)
Date: Tue, 2 Mar 2010 14:13:19 -0600
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
Message-ID: <674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>

On Tue, Mar 2, 2010 at 2:07 PM, scribu <scribu at gmail.com> wrote:
> Currently, each widget type has a an associated row in the wp_options table,
> where all instances of itself are stored.
>
> Taking example from the nav menus in WP 3.0, why not store each widget in
> the wp_posts table, with a post_type of 'widget' ?

I think it's a good idea, and the post db structure fits many widgets
too, since they often have titles and content.  And I hate how easily
serialized data gets corrupted.

From justin.shreve at gmail.com  Tue Mar  2 20:20:29 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Tue, 2 Mar 2010 15:20:29 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
Message-ID: <a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>

I agree it's a good idea as well.

I know that links has it's own table but if we are using wp_posts as a way
to store this different data wouldn't it make sense to have them stored as a
post_type of 'link'? Some similar data is stored here as well.

On Tue, Mar 2, 2010 at 3:13 PM, Austin Matzko <austin at ilfilosofo.com> wrote:

> On Tue, Mar 2, 2010 at 2:07 PM, scribu <scribu at gmail.com> wrote:
> > Currently, each widget type has a an associated row in the wp_options
> table,
> > where all instances of itself are stored.
> >
> > Taking example from the nav menus in WP 3.0, why not store each widget in
> > the wp_posts table, with a post_type of 'widget' ?
>
> I think it's a good idea, and the post db structure fits many widgets
> too, since they often have titles and content.  And I hate how easily
> serialized data gets corrupted.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From michael at mfields.org  Tue Mar  2 20:28:26 2010
From: michael at mfields.org (michael at mfields.org)
Date: Tue, 2 Mar 2010 13:28:26 -0700
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
Message-ID: <4387cc3637f873c3151b3f6661bd2f63.squirrel@mfields.org>

Definitely +1 for storing links in the posts table.

I fail to see how storing widgets there would cut down on serialized data
(RE: Austin)... If the widget needed to store data outside of the columns
that the posts table supplies, it would most likely just end up
serializing these custom values and storing them in postmeta.



> I agree it's a good idea as well.
>
> I know that links has it's own table but if we are using wp_posts as a way
> to store this different data wouldn't it make sense to have them stored as
> a
> post_type of 'link'? Some similar data is stored here as well.
>
> On Tue, Mar 2, 2010 at 3:13 PM, Austin Matzko <austin at ilfilosofo.com>
> wrote:
>
>> On Tue, Mar 2, 2010 at 2:07 PM, scribu <scribu at gmail.com> wrote:
>> > Currently, each widget type has a an associated row in the wp_options
>> table,
>> > where all instances of itself are stored.
>> >
>> > Taking example from the nav menus in WP 3.0, why not store each widget
>> in
>> > the wp_posts table, with a post_type of 'widget' ?
>>
>> I think it's a good idea, and the post db structure fits many widgets
>> too, since they often have titles and content.  And I hate how easily
>> serialized data gets corrupted.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



From austin at ilfilosofo.com  Tue Mar  2 20:32:30 2010
From: austin at ilfilosofo.com (Austin Matzko)
Date: Tue, 2 Mar 2010 14:32:30 -0600
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <4387cc3637f873c3151b3f6661bd2f63.squirrel@mfields.org>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<4387cc3637f873c3151b3f6661bd2f63.squirrel@mfields.org>
Message-ID: <674b4a3b1003021232tdcc2acena611944497414a7e@mail.gmail.com>

On Tue, Mar 2, 2010 at 2:28 PM,  <michael at mfields.org> wrote:
> If the widget needed to store data outside of the columns
> that the posts table supplies, it would most likely just end up
> serializing these custom values and storing them in postmeta.

Why not separate postmeta entries?

From mikeschinkel at newclarity.net  Tue Mar  2 20:38:21 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 2 Mar 2010 15:38:21 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
Message-ID: <39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>

Speaking 2nd hand for Matt, he told me at WordCamp Birmingham that he wanted to see the Links table go away and have links moved to posts because of all the things you get "for free" with the posts table (tags, categories, custom fields, et. al.)  

So +1

-Mike

On Mar 2, 2010, at 3:20 PM, Justin Shreve wrote:

> I agree it's a good idea as well.
> 
> I know that links has it's own table but if we are using wp_posts as a way
> to store this different data wouldn't it make sense to have them stored as a
> post_type of 'link'? Some similar data is stored here as well.
> 
> On Tue, Mar 2, 2010 at 3:13 PM, Austin Matzko <austin at ilfilosofo.com> wrote:
> 
>> On Tue, Mar 2, 2010 at 2:07 PM, scribu <scribu at gmail.com> wrote:
>>> Currently, each widget type has a an associated row in the wp_options
>> table,
>>> where all instances of itself are stored.
>>> 
>>> Taking example from the nav menus in WP 3.0, why not store each widget in
>>> the wp_posts table, with a post_type of 'widget' ?
>> 
>> I think it's a good idea, and the post db structure fits many widgets
>> too, since they often have titles and content.  And I hate how easily
>> serialized data gets corrupted.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From charles at cefm.ca  Tue Mar  2 20:39:31 2010
From: charles at cefm.ca (Charles Frees-Melvin)
Date: Tue, 2 Mar 2010 16:39:31 -0400
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <674b4a3b1003021232tdcc2acena611944497414a7e@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<4387cc3637f873c3151b3f6661bd2f63.squirrel@mfields.org>
	<674b4a3b1003021232tdcc2acena611944497414a7e@mail.gmail.com>
Message-ID: <584C2959-3865-4C8D-9251-5254EC0F6EA9@cefm.ca>

OMG, this would make the database structure much more simple and  
efficiant. I really like this

Sent from my iPhone

On 2010-03-02, at 16:32, Austin Matzko <austin at ilfilosofo.com> wrote:

> On Tue, Mar 2, 2010 at 2:28 PM,  <michael at mfields.org> wrote:
>> If the widget needed to store data outside of the columns
>> that the posts table supplies, it would most likely just end up
>> serializing these custom values and storing them in postmeta.
>
> Why not separate postmeta entries?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From michael at mfields.org  Tue Mar  2 20:40:35 2010
From: michael at mfields.org (michael at mfields.org)
Date: Tue, 2 Mar 2010 13:40:35 -0700
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <674b4a3b1003021232tdcc2acena611944497414a7e@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<4387cc3637f873c3151b3f6661bd2f63.squirrel@mfields.org>
	<674b4a3b1003021232tdcc2acena611944497414a7e@mail.gmail.com>
Message-ID: <a69d3fc84b66970d74b4370de739af1d.squirrel@mfields.org>

> On Tue, Mar 2, 2010 at 2:28 PM,  <michael at mfields.org> wrote:
>> If the widget needed to store data outside of the columns
>> that the posts table supplies, it would most likely just end up
>> serializing these custom values and storing them in postmeta.
>
> Why not separate postmeta entries?

Right... Oversight on my part, that would definitely sort out the
serialized data concern, my bad.


From justin.shreve at gmail.com  Tue Mar  2 20:42:38 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Tue, 2 Mar 2010 15:42:38 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <584C2959-3865-4C8D-9251-5254EC0F6EA9@cefm.ca>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<4387cc3637f873c3151b3f6661bd2f63.squirrel@mfields.org>
	<674b4a3b1003021232tdcc2acena611944497414a7e@mail.gmail.com>
	<584C2959-3865-4C8D-9251-5254EC0F6EA9@cefm.ca>
Message-ID: <a93cee651003021242o86930bbj178c9fabb0436933@mail.gmail.com>

Mike brings up a good point on behalf of Matt. Tagging links and some of the
extra stuff as a bonus would be cool and easy to do if they were stored in
the posts table. This is something we should look into on top of the
widgets.

On Tue, Mar 2, 2010 at 3:39 PM, Charles Frees-Melvin <charles at cefm.ca>wrote:

> OMG, this would make the database structure much more simple and efficiant.
> I really like this
>
> Sent from my iPhone
>
>
> On 2010-03-02, at 16:32, Austin Matzko <austin at ilfilosofo.com> wrote:
>
>  On Tue, Mar 2, 2010 at 2:28 PM,  <michael at mfields.org> wrote:
>>
>>> If the widget needed to store data outside of the columns
>>> that the posts table supplies, it would most likely just end up
>>> serializing these custom values and storing them in postmeta.
>>>
>>
>> Why not separate postmeta entries?
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mpretty at voceconnect.com  Tue Mar  2 20:43:23 2010
From: mpretty at voceconnect.com (Michael Pretty)
Date: Tue, 02 Mar 2010 15:43:23 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
Message-ID: <4B8D786B.2040705@voceconnect.com>

Heck, lets go ahead and put the terms tables into the posts table.  No 
reason we can't turn the entire database into a nodal system.  :)

3 tables:
objects
objects_to_objects_map
object_meta

-prettyboymp

On 3/2/10 3:38 PM, Mike Schinkel wrote:
> Speaking 2nd hand for Matt, he told me at WordCamp Birmingham that he wanted to see the Links table go away and have links moved to posts because of all the things you get "for free" with the posts table (tags, categories, custom fields, et. al.)
>
> So +1
>
> -Mike
>
> On Mar 2, 2010, at 3:20 PM, Justin Shreve wrote:
>
>    
>> I agree it's a good idea as well.
>>
>> I know that links has it's own table but if we are using wp_posts as a way
>> to store this different data wouldn't it make sense to have them stored as a
>> post_type of 'link'? Some similar data is stored here as well.
>>
>> On Tue, Mar 2, 2010 at 3:13 PM, Austin Matzko<austin at ilfilosofo.com>  wrote:
>>
>>      
>>> On Tue, Mar 2, 2010 at 2:07 PM, scribu<scribu at gmail.com>  wrote:
>>>        
>>>> Currently, each widget type has a an associated row in the wp_options
>>>>          
>>> table,
>>>        
>>>> where all instances of itself are stored.
>>>>
>>>> Taking example from the nav menus in WP 3.0, why not store each widget in
>>>> the wp_posts table, with a post_type of 'widget' ?
>>>>          
>>> I think it's a good idea, and the post db structure fits many widgets
>>> too, since they often have titles and content.  And I hate how easily
>>> serialized data gets corrupted.
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>        
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>      
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    


From mikeschinkel at newclarity.net  Tue Mar  2 20:47:04 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 2 Mar 2010 15:47:04 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <a93cee651003021242o86930bbj178c9fabb0436933@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<4387cc3637f873c3151b3f6661bd2f63.squirrel@mfields.org>
	<674b4a3b1003021232tdcc2acena611944497414a7e@mail.gmail.com>
	<584C2959-3865-4C8D-9251-5254EC0F6EA9@cefm.ca>
	<a93cee651003021242o86930bbj178c9fabb0436933@mail.gmail.com>
Message-ID: <261DCCE8-A38D-47A8-A870-64BC6D132D46@newclarity.net>

On Mar 2, 2010, at 3:42 PM, Justin Shreve wrote:
> some of the
> extra stuff as a bonus would be cool and easy to do if they were stored in
> the posts table. This is something we should look into on top of the
> widgets.

:-)

-Mike

From otto at ottodestruct.com  Tue Mar  2 20:53:00 2010
From: otto at ottodestruct.com (Otto)
Date: Tue, 2 Mar 2010 14:53:00 -0600
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <4B8D786B.2040705@voceconnect.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com> 
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com> 
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com> 
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
Message-ID: <161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>

On Tue, Mar 2, 2010 at 2:43 PM, Michael Pretty <mpretty at voceconnect.com> wrote:
>
> Heck, lets go ahead and put the terms tables into the posts table. ?No reason we can't turn the entire database into a nodal system. ?:)
>
> 3 tables:
> objects
> objects_to_objects_map
> object_meta
>
> -prettyboymp


Thank you! This is what I think sometimes too when I see this sort of thing.

People, turning everything into a subtype of "post" is stupid. Okay,
sure, for *some* things it makes sense to treat them in a generic
object sense. Pages, posts, attachments, these I get (mainly because
attachments get a special post-like page out of it).

Changing Links into Posts does not make sense to me. Changing Widgets
does not make sense to me. These are fundamentally different things,
used in different ways. They should be designed to be the most
efficient for their use case, not made generic just for the sake of
making them generic.

I think we should leave "posts" to things that are some form of
"post", or which can be displayed as such. Everything the "posts"
table currently holds things that can be represented as a "post" in
some fashion. Even Matt's custom "person" post-type trick has a decent
representation as a post page, by showing all the image attachments
with that person.

If Links needs to be expanded, then I'd support that. Why can't links
be tagged? It wouldn't be hard to add "link-tag" to the taxonomies.
Much better solution than shifting a link to a post. How do you
display a link as a post? Best I can think of would be a redirect. ;)

Widgets should be made more generic, yes. But most likely they should
be given their *own* table. Why? Because it's difficult to imagine a
solid case for representing a single widget as a whole post page as
well. Also, widgets don't need tagging or categories. What they need
is a way to define their contents and parameters and code in a sane
manner, and then to be easily placed and moved around the page. In
this sense, they can move beyond the sidebar and onto the rest of the
structure.

Lets just think before acting, that's all I'm saying.

-Otto

From austin at ilfilosofo.com  Tue Mar  2 21:03:20 2010
From: austin at ilfilosofo.com (Austin Matzko)
Date: Tue, 2 Mar 2010 15:03:20 -0600
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
Message-ID: <674b4a3b1003021303y7a6d7c2aia899a3b31193a033@mail.gmail.com>

On Tue, Mar 2, 2010 at 2:53 PM, Otto <otto at ottodestruct.com> wrote:
> Changing Links into Posts does not make sense to me. Changing Widgets
> does not make sense to me. These are fundamentally different things,
> used in different ways. They should be designed to be the most
> efficient for their use case, not made generic just for the sake of
> making them generic.

[snip]

> Widgets should be made more generic, yes. But most likely they should
> be given their *own* table. Why? Because it's difficult to imagine a
> solid case for representing a single widget as a whole post page as
> well. Also, widgets don't need tagging or categories. What they need
> is a way to define their contents and parameters and code in a sane
> manner, and then to be easily placed and moved around the page. In
> this sense, they can move beyond the sidebar and onto the rest of the
> structure.
>
> Lets just think before acting, that's all I'm saying.

I don't disagree with much of what you've said, but with WP
development I aim for:
 * An improvement
 * Something that has a chance of happening

Widgets as post types is significantly better than serialized data,
and widgets as their own table will never happen.

From justin.shreve at gmail.com  Tue Mar  2 21:04:32 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Tue, 2 Mar 2010 16:04:32 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
Message-ID: <a93cee651003021304q2b7e390cp5b91a979c8b3f429@mail.gmail.com>

First with the introduction of the whole custom post types we should be
thinking of 'content types' rather than 'post types'. (this is stated within
http://core.trac.wordpress.org/ticket/9674) the table name of wp_posts and
the notion of posts I believe is for backwards compat.

This is the point:

The whole point of custom posts types was to reduce duplicate functionality
and code for certain things (mentioned within the trac ticket).

We have duplicate/similar code to have a links manager that could easily be
done (and more) if it was stored within a new post types. It makes it easier
to maintain and gives us "things for free".

I'm not saving to stick every bit of data in one table, but the things that
can save us work and makes sense when talking about 'content types' we
should.

On Tue, Mar 2, 2010 at 3:53 PM, Otto <otto at ottodestruct.com> wrote:

> On Tue, Mar 2, 2010 at 2:43 PM, Michael Pretty <mpretty at voceconnect.com>
> wrote:
> >
> > Heck, lets go ahead and put the terms tables into the posts table.  No
> reason we can't turn the entire database into a nodal system.  :)
> >
> > 3 tables:
> > objects
> > objects_to_objects_map
> > object_meta
> >
> > -prettyboymp
>
>
> Thank you! This is what I think sometimes too when I see this sort of
> thing.
>
> People, turning everything into a subtype of "post" is stupid. Okay,
> sure, for *some* things it makes sense to treat them in a generic
> object sense. Pages, posts, attachments, these I get (mainly because
> attachments get a special post-like page out of it).
>
> Changing Links into Posts does not make sense to me. Changing Widgets
> does not make sense to me. These are fundamentally different things,
> used in different ways. They should be designed to be the most
> efficient for their use case, not made generic just for the sake of
> making them generic.
>
> I think we should leave "posts" to things that are some form of
> "post", or which can be displayed as such. Everything the "posts"
> table currently holds things that can be represented as a "post" in
> some fashion. Even Matt's custom "person" post-type trick has a decent
> representation as a post page, by showing all the image attachments
> with that person.
>
> If Links needs to be expanded, then I'd support that. Why can't links
> be tagged? It wouldn't be hard to add "link-tag" to the taxonomies.
> Much better solution than shifting a link to a post. How do you
> display a link as a post? Best I can think of would be a redirect. ;)
>
> Widgets should be made more generic, yes. But most likely they should
> be given their *own* table. Why? Because it's difficult to imagine a
> solid case for representing a single widget as a whole post page as
> well. Also, widgets don't need tagging or categories. What they need
> is a way to define their contents and parameters and code in a sane
> manner, and then to be easily placed and moved around the page. In
> this sense, they can move beyond the sidebar and onto the rest of the
> structure.
>
> Lets just think before acting, that's all I'm saying.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mpretty at voceconnect.com  Tue Mar  2 21:05:12 2010
From: mpretty at voceconnect.com (Michael Pretty)
Date: Tue, 02 Mar 2010 16:05:12 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
Message-ID: <4B8D7D88.4070907@voceconnect.com>


On 3/2/10 3:53 PM, Otto wrote:
>
> Thank you! This is what I think sometimes too when I see this sort of thing.
>    
Sorry, I was only being partially sarcastic.  I agree with converting to 
a more nodal system.  It makes the code much cleaner and reusable.

> People, turning everything into a subtype of "post" is stupid. Okay,
> sure, for *some* things it makes sense to treat them in a generic
> object sense. Pages, posts, attachments, these I get (mainly because
> attachments get a special post-like page out of it).
>    
Its not that we're turning things into a subtype of "post", we're 
turning things into a subtype of "content", and in the case of menus, 
links, and widgets, they are content.  We're just not renaming the posts 
table or some of the function names because of backwards compatibility

-prettyboymp

From mikeschinkel at newclarity.net  Tue Mar  2 21:16:04 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 2 Mar 2010 16:16:04 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
Message-ID: <FDAB6A80-676E-41C4-809B-C17D4C99E2CE@newclarity.net>

On Mar 2, 2010, at 3:43 PM, Michael Pretty wrote:
> Heck, lets go ahead and put the terms tables into the posts table.  No reason we can't turn the entire database into a nodal system.  :)
> 
> 3 tables:
> objects
> objects_to_objects_map
> object_meta

Funny, I suggested as much back on the 14th:  

http://groups.google.com/group/wp-hackers/msg/5b94903c68ae1ec1

On Mar 2, 2010, at 3:53 PM, Otto wrote:
> Changing Links into Posts does not make sense to me. 

Debate it with Matt. 

> If Links needs to be expanded, then I'd support that. Why can't links
> be tagged? It wouldn't be hard to add "link-tag" to the taxonomies.
> Much better solution than shifting a link to a post. How do you
> display a link as a post? Best I can think of would be a redirect. ;)

Think in terms of a directory of links.  A link can have a recent screenshot of the link, a description of the link, a title for the link, a category in which fits, a set of tags about the link, custom fields about the link (i.e. address maybe?) and more.  With custom post types the need for links go away so all link functionality should be rolled in for use by custom post types.

> Widgets should be made more generic, yes. But most likely they should
> be given their *own* table. Why? Because it's difficult to imagine a
> solid case for representing a single widget as a whole post page as
> well. 

Difficult for you to imagine maybe, but not for me and I'll bet not for many others.

A widget page would show what the widget is capable of, show screenshots of it in use, and be linked to taxonomy of types of widgets.  So I have to disagree with you again, widgets in the posts table makes a lot of sense.  

-Mike

From john.wp at onolan.org  Tue Mar  2 21:25:10 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Tue, 2 Mar 2010 21:25:10 +0000
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <FDAB6A80-676E-41C4-809B-C17D4C99E2CE@newclarity.net>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
	<FDAB6A80-676E-41C4-809B-C17D4C99E2CE@newclarity.net>
Message-ID: <3ED574BA-1991-401E-A955-617E10F20C40@onolan.org>

I think that maybe the small amount of confusion that's arising here  
is caused by the naming convention rather than the actual issue of  
where table content is moved to. "wp_posts" fundamentally suggests  
that this is a table containing a single type of content, and that  
type is "posts". If the table is now to be looked at as:

"thinking of 'content types' rather than 'post types'." [- Justin]

Then I have to say that I think the word "post" is beginning to become  
just as confusing as the word "node" is in the Drupal world.

I Wordpress a blogging platform or a CMS?

John


On 2 Mar 2010, at 21:16, Mike Schinkel wrote:

> On Mar 2, 2010, at 3:43 PM, Michael Pretty wrote:
>> Heck, lets go ahead and put the terms tables into the posts table.   
>> No reason we can't turn the entire database into a nodal system.  :)
>>
>> 3 tables:
>> objects
>> objects_to_objects_map
>> object_meta
>
> Funny, I suggested as much back on the 14th:
>
> http://groups.google.com/group/wp-hackers/msg/5b94903c68ae1ec1
>
> On Mar 2, 2010, at 3:53 PM, Otto wrote:
>> Changing Links into Posts does not make sense to me.
>
> Debate it with Matt.
>
>> If Links needs to be expanded, then I'd support that. Why can't links
>> be tagged? It wouldn't be hard to add "link-tag" to the taxonomies.
>> Much better solution than shifting a link to a post. How do you
>> display a link as a post? Best I can think of would be a redirect. ;)
>
> Think in terms of a directory of links.  A link can have a recent  
> screenshot of the link, a description of the link, a title for the  
> link, a category in which fits, a set of tags about the link, custom  
> fields about the link (i.e. address maybe?) and more.  With custom  
> post types the need for links go away so all link functionality  
> should be rolled in for use by custom post types.
>
>> Widgets should be made more generic, yes. But most likely they should
>> be given their *own* table. Why? Because it's difficult to imagine a
>> solid case for representing a single widget as a whole post page as
>> well.
>
> Difficult for you to imagine maybe, but not for me and I'll bet not  
> for many others.
>
> A widget page would show what the widget is capable of, show  
> screenshots of it in use, and be linked to taxonomy of types of  
> widgets.  So I have to disagree with you again, widgets in the posts  
> table makes a lot of sense.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From justin.shreve at gmail.com  Tue Mar  2 21:29:46 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Tue, 2 Mar 2010 16:29:46 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <3ED574BA-1991-401E-A955-617E10F20C40@onolan.org>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
	<FDAB6A80-676E-41C4-809B-C17D4C99E2CE@newclarity.net>
	<3ED574BA-1991-401E-A955-617E10F20C40@onolan.org>
Message-ID: <a93cee651003021329h5c240d81v7da3563bf7b4ae7d@mail.gmail.com>

Both. Since the introduction of plugins, pages, etc.

WordPress doesn't just say it's a blogging platform, it says that it is
(quote):

"*WordPress* is a state-of-the-art publishing platform with a focus on
aesthetics, web standards, and usability."

It's a publishing platform. - That means support for other types of things
and not just posts (articles, recipes, whatever).  I agree wp_posts may be
confusing but as mentioned I think that is for backwards compatibility.

On Tue, Mar 2, 2010 at 4:25 PM, John O'Nolan <john.wp at onolan.org> wrote:

> I think that maybe the small amount of confusion that's arising here is
> caused by the naming convention rather than the actual issue of where table
> content is moved to. "wp_posts" fundamentally suggests that this is a table
> containing a single type of content, and that type is "posts". If the table
> is now to be looked at as:
>
> "thinking of 'content types' rather than 'post types'." [- Justin]
>
> Then I have to say that I think the word "post" is beginning to become just
> as confusing as the word "node" is in the Drupal world.
>
> I Wordpress a blogging platform or a CMS?
>
> John
>
>
>
> On 2 Mar 2010, at 21:16, Mike Schinkel wrote:
>
>  On Mar 2, 2010, at 3:43 PM, Michael Pretty wrote:
>>
>>> Heck, lets go ahead and put the terms tables into the posts table.  No
>>> reason we can't turn the entire database into a nodal system.  :)
>>>
>>> 3 tables:
>>> objects
>>> objects_to_objects_map
>>> object_meta
>>>
>>
>> Funny, I suggested as much back on the 14th:
>>
>> http://groups.google.com/group/wp-hackers/msg/5b94903c68ae1ec1
>>
>> On Mar 2, 2010, at 3:53 PM, Otto wrote:
>>
>>> Changing Links into Posts does not make sense to me.
>>>
>>
>> Debate it with Matt.
>>
>>  If Links needs to be expanded, then I'd support that. Why can't links
>>> be tagged? It wouldn't be hard to add "link-tag" to the taxonomies.
>>> Much better solution than shifting a link to a post. How do you
>>> display a link as a post? Best I can think of would be a redirect. ;)
>>>
>>
>> Think in terms of a directory of links.  A link can have a recent
>> screenshot of the link, a description of the link, a title for the link, a
>> category in which fits, a set of tags about the link, custom fields about
>> the link (i.e. address maybe?) and more.  With custom post types the need
>> for links go away so all link functionality should be rolled in for use by
>> custom post types.
>>
>>  Widgets should be made more generic, yes. But most likely they should
>>> be given their *own* table. Why? Because it's difficult to imagine a
>>> solid case for representing a single widget as a whole post page as
>>> well.
>>>
>>
>> Difficult for you to imagine maybe, but not for me and I'll bet not for
>> many others.
>>
>> A widget page would show what the widget is capable of, show screenshots
>> of it in use, and be linked to taxonomy of types of widgets.  So I have to
>> disagree with you again, widgets in the posts table makes a lot of sense.
>>
>> -Mike
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From john.wp at onolan.org  Tue Mar  2 21:32:52 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Tue, 2 Mar 2010 21:32:52 +0000
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <a93cee651003021329h5c240d81v7da3563bf7b4ae7d@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
	<FDAB6A80-676E-41C4-809B-C17D4C99E2CE@newclarity.net>
	<3ED574BA-1991-401E-A955-617E10F20C40@onolan.org>
	<a93cee651003021329h5c240d81v7da3563bf7b4ae7d@mail.gmail.com>
Message-ID: <BAED11F8-DD77-4426-AF97-8DE9C4C09AAB@onolan.org>

I agree with you in principle, but there comes a point where a naming  
convention such as "posts" does not apply to all content in a  
"publishing platform" (CMS/whatever).

Surely moving widgets and links all into the wp_posts table would  
screw up backwards compatibility just as much as renaming it? (correct  
me if I'm wrong on that one, I'm genuinely asking)

Cheers

John



On 2 Mar 2010, at 21:29, Justin Shreve wrote:

> Both. Since the introduction of plugins, pages, etc.
>
> WordPress doesn't just say it's a blogging platform, it says that it  
> is
> (quote):
>
> "*WordPress* is a state-of-the-art publishing platform with a focus on
> aesthetics, web standards, and usability."
>
> It's a publishing platform. - That means support for other types of  
> things
> and not just posts (articles, recipes, whatever).  I agree wp_posts  
> may be
> confusing but as mentioned I think that is for backwards  
> compatibility.
>
> On Tue, Mar 2, 2010 at 4:25 PM, John O'Nolan <john.wp at onolan.org>  
> wrote:
>
>> I think that maybe the small amount of confusion that's arising  
>> here is
>> caused by the naming convention rather than the actual issue of  
>> where table
>> content is moved to. "wp_posts" fundamentally suggests that this is  
>> a table
>> containing a single type of content, and that type is "posts". If  
>> the table
>> is now to be looked at as:
>>
>> "thinking of 'content types' rather than 'post types'." [- Justin]
>>
>> Then I have to say that I think the word "post" is beginning to  
>> become just
>> as confusing as the word "node" is in the Drupal world.
>>
>> I Wordpress a blogging platform or a CMS?
>>
>> John
>>
>>
>>
>> On 2 Mar 2010, at 21:16, Mike Schinkel wrote:
>>
>> On Mar 2, 2010, at 3:43 PM, Michael Pretty wrote:
>>>
>>>> Heck, lets go ahead and put the terms tables into the posts  
>>>> table.  No
>>>> reason we can't turn the entire database into a nodal system.  :)
>>>>
>>>> 3 tables:
>>>> objects
>>>> objects_to_objects_map
>>>> object_meta
>>>>
>>>
>>> Funny, I suggested as much back on the 14th:
>>>
>>> http://groups.google.com/group/wp-hackers/msg/5b94903c68ae1ec1
>>>
>>> On Mar 2, 2010, at 3:53 PM, Otto wrote:
>>>
>>>> Changing Links into Posts does not make sense to me.
>>>>
>>>
>>> Debate it with Matt.
>>>
>>> If Links needs to be expanded, then I'd support that. Why can't  
>>> links
>>>> be tagged? It wouldn't be hard to add "link-tag" to the taxonomies.
>>>> Much better solution than shifting a link to a post. How do you
>>>> display a link as a post? Best I can think of would be a  
>>>> redirect. ;)
>>>>
>>>
>>> Think in terms of a directory of links.  A link can have a recent
>>> screenshot of the link, a description of the link, a title for the  
>>> link, a
>>> category in which fits, a set of tags about the link, custom  
>>> fields about
>>> the link (i.e. address maybe?) and more.  With custom post types  
>>> the need
>>> for links go away so all link functionality should be rolled in  
>>> for use by
>>> custom post types.
>>>
>>> Widgets should be made more generic, yes. But most likely they  
>>> should
>>>> be given their *own* table. Why? Because it's difficult to  
>>>> imagine a
>>>> solid case for representing a single widget as a whole post page as
>>>> well.
>>>>
>>>
>>> Difficult for you to imagine maybe, but not for me and I'll bet  
>>> not for
>>> many others.
>>>
>>> A widget page would show what the widget is capable of, show  
>>> screenshots
>>> of it in use, and be linked to taxonomy of types of widgets.  So I  
>>> have to
>>> disagree with you again, widgets in the posts table makes a lot of  
>>> sense.
>>>
>>> -Mike
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Tue Mar  2 21:40:10 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 2 Mar 2010 16:40:10 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <BAED11F8-DD77-4426-AF97-8DE9C4C09AAB@onolan.org>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
	<FDAB6A80-676E-41C4-809B-C17D4C99E2CE@newclarity.net>
	<3ED574BA-1991-401E-A955-617E10F20C40@onolan.org>
	<a93cee651003021329h5c240d81v7da3563bf7b4ae7d@mail.gmail.com>
	<BAED11F8-DD77-4426-AF97-8DE9C4C09AAB@onolan.org>
Message-ID: <65C63581-C99F-414C-A48B-D4290E447E41@newclarity.net>

On Mar 2, 2010, at 4:32 PM, John O'Nolan wrote:
> 
> Surely moving widgets and links all into the wp_posts table would screw up backwards compatibility just as much as renaming it? (correct me if I'm wrong on that one, I'm genuinely asking)

Renaming the wp_posts table would potentially affect hundreds of plugins and themes and potentially introduce bugs in the core code.  Benefits do not outweigh the downside, IMO.  

FWIW, we had this discussion in depth on Trac regarding custom post types: http://core.trac.wordpress.org/ticket/9674

-Mike




From justin.shreve at gmail.com  Tue Mar  2 21:40:07 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Tue, 2 Mar 2010 16:40:07 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <BAED11F8-DD77-4426-AF97-8DE9C4C09AAB@onolan.org>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
	<FDAB6A80-676E-41C4-809B-C17D4C99E2CE@newclarity.net>
	<3ED574BA-1991-401E-A955-617E10F20C40@onolan.org>
	<a93cee651003021329h5c240d81v7da3563bf7b4ae7d@mail.gmail.com>
	<BAED11F8-DD77-4426-AF97-8DE9C4C09AAB@onolan.org>
Message-ID: <a93cee651003021340t50d1a112kccd244d0f71c6f35@mail.gmail.com>

It might, depending on how it's handled.

If plugins are using the Widgets API and the Widgets API is updated to use
data within a new post type it shouldn't (in theory) break anything since
there is an API in between and we are just editing how it's stored.

On Tue, Mar 2, 2010 at 4:32 PM, John O'Nolan <john.wp at onolan.org> wrote:

> I agree with you in principle, but there comes a point where a naming
> convention such as "posts" does not apply to all content in a "publishing
> platform" (CMS/whatever).
>
> Surely moving widgets and links all into the wp_posts table would screw up
> backwards compatibility just as much as renaming it? (correct me if I'm
> wrong on that one, I'm genuinely asking)
>
> Cheers
>
> John
>
>
>
>
> On 2 Mar 2010, at 21:29, Justin Shreve wrote:
>
>  Both. Since the introduction of plugins, pages, etc.
>>
>> WordPress doesn't just say it's a blogging platform, it says that it is
>> (quote):
>>
>> "*WordPress* is a state-of-the-art publishing platform with a focus on
>> aesthetics, web standards, and usability."
>>
>> It's a publishing platform. - That means support for other types of things
>> and not just posts (articles, recipes, whatever).  I agree wp_posts may be
>> confusing but as mentioned I think that is for backwards compatibility.
>>
>> On Tue, Mar 2, 2010 at 4:25 PM, John O'Nolan <john.wp at onolan.org> wrote:
>>
>>  I think that maybe the small amount of confusion that's arising here is
>>> caused by the naming convention rather than the actual issue of where
>>> table
>>> content is moved to. "wp_posts" fundamentally suggests that this is a
>>> table
>>> containing a single type of content, and that type is "posts". If the
>>> table
>>> is now to be looked at as:
>>>
>>> "thinking of 'content types' rather than 'post types'." [- Justin]
>>>
>>> Then I have to say that I think the word "post" is beginning to become
>>> just
>>> as confusing as the word "node" is in the Drupal world.
>>>
>>> I Wordpress a blogging platform or a CMS?
>>>
>>> John
>>>
>>>
>>>
>>> On 2 Mar 2010, at 21:16, Mike Schinkel wrote:
>>>
>>> On Mar 2, 2010, at 3:43 PM, Michael Pretty wrote:
>>>
>>>>
>>>>  Heck, lets go ahead and put the terms tables into the posts table.  No
>>>>> reason we can't turn the entire database into a nodal system.  :)
>>>>>
>>>>> 3 tables:
>>>>> objects
>>>>> objects_to_objects_map
>>>>> object_meta
>>>>>
>>>>>
>>>> Funny, I suggested as much back on the 14th:
>>>>
>>>> http://groups.google.com/group/wp-hackers/msg/5b94903c68ae1ec1
>>>>
>>>> On Mar 2, 2010, at 3:53 PM, Otto wrote:
>>>>
>>>>  Changing Links into Posts does not make sense to me.
>>>>>
>>>>>
>>>> Debate it with Matt.
>>>>
>>>> If Links needs to be expanded, then I'd support that. Why can't links
>>>>
>>>>> be tagged? It wouldn't be hard to add "link-tag" to the taxonomies.
>>>>> Much better solution than shifting a link to a post. How do you
>>>>> display a link as a post? Best I can think of would be a redirect. ;)
>>>>>
>>>>>
>>>> Think in terms of a directory of links.  A link can have a recent
>>>> screenshot of the link, a description of the link, a title for the link,
>>>> a
>>>> category in which fits, a set of tags about the link, custom fields
>>>> about
>>>> the link (i.e. address maybe?) and more.  With custom post types the
>>>> need
>>>> for links go away so all link functionality should be rolled in for use
>>>> by
>>>> custom post types.
>>>>
>>>> Widgets should be made more generic, yes. But most likely they should
>>>>
>>>>> be given their *own* table. Why? Because it's difficult to imagine a
>>>>> solid case for representing a single widget as a whole post page as
>>>>> well.
>>>>>
>>>>>
>>>> Difficult for you to imagine maybe, but not for me and I'll bet not for
>>>> many others.
>>>>
>>>> A widget page would show what the widget is capable of, show screenshots
>>>> of it in use, and be linked to taxonomy of types of widgets.  So I have
>>>> to
>>>> disagree with you again, widgets in the posts table makes a lot of
>>>> sense.
>>>>
>>>> -Mike
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>  _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Tue Mar  2 21:43:09 2010
From: scribu at gmail.com (scribu)
Date: Tue, 2 Mar 2010 23:43:09 +0200
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <65C63581-C99F-414C-A48B-D4290E447E41@newclarity.net>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
	<FDAB6A80-676E-41C4-809B-C17D4C99E2CE@newclarity.net>
	<3ED574BA-1991-401E-A955-617E10F20C40@onolan.org>
	<a93cee651003021329h5c240d81v7da3563bf7b4ae7d@mail.gmail.com>
	<BAED11F8-DD77-4426-AF97-8DE9C4C09AAB@onolan.org>
	<65C63581-C99F-414C-A48B-D4290E447E41@newclarity.net>
Message-ID: <349fe48b1003021343g6c6860c9i7ddeefeffdbb65ac@mail.gmail.com>

On Tue, Mar 2, 2010 at 11:40 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> On Mar 2, 2010, at 4:32 PM, John O'Nolan wrote:
> >
> > Surely moving widgets and links all into the wp_posts table would screw
> up backwards compatibility just as much as renaming it? (correct me if I'm
> wrong on that one, I'm genuinely asking)
>
> Renaming the wp_posts table would potentially affect hundreds of plugins
> and themes and potentially introduce bugs in the core code.  Benefits do not
> outweigh the downside, IMO.
>

Not necessarily. We just need to keep the $wpdb->posts variable around.

The problem might be with renaming the table columns. That's what was
discussed in the ticket, if my memory serves me well.


-- 
http://scribu.net

From john.wp at onolan.org  Tue Mar  2 21:49:29 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Tue, 2 Mar 2010 21:49:29 +0000
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <65C63581-C99F-414C-A48B-D4290E447E41@newclarity.net>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<674b4a3b1003021213p5611c288xfafcfb9174d1b5c0@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
	<FDAB6A80-676E-41C4-809B-C17D4C99E2CE@newclarity.net>
	<3ED574BA-1991-401E-A955-617E10F20C40@onolan.org>
	<a93cee651003021329h5c240d81v7da3563bf7b4ae7d@mail.gmail.com>
	<BAED11F8-DD77-4426-AF97-8DE9C4C09AAB@onolan.org>
	<65C63581-C99F-414C-A48B-D4290E447E41@newclarity.net>
Message-ID: <5DDC24E6-DB51-4737-B8D2-7D70BF2157B5@onolan.org>

Yeah I'm going to go ahead and reverse my opinion on that one after  
reading Jeremy Clarke's comment (#93) from that link. What he said  
makes sense.

John



On 2 Mar 2010, at 21:40, Mike Schinkel wrote:

> On Mar 2, 2010, at 4:32 PM, John O'Nolan wrote:
>>
>> Surely moving widgets and links all into the wp_posts table would  
>> screw up backwards compatibility just as much as renaming it?  
>> (correct me if I'm wrong on that one, I'm genuinely asking)
>
> Renaming the wp_posts table would potentially affect hundreds of  
> plugins and themes and potentially introduce bugs in the core code.   
> Benefits do not outweigh the downside, IMO.
>
> FWIW, we had this discussion in depth on Trac regarding custom post  
> types: http://core.trac.wordpress.org/ticket/9674
>
> -Mike
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From bulk at thecodecave.com  Tue Mar  2 21:50:55 2010
From: bulk at thecodecave.com (Brian Layman)
Date: Tue, 2 Mar 2010 16:50:55 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
Message-ID: <000001caba52$7026b530$50741f90$@com>

I'm sorry but I think this is a horrible idea. Horrible enough to come out
of lurk for it..

Why would I want to store my 8-16 widgets in tables that, in one db I just
looked at, has 434,921 non-widget-related records? I don't think it makes
sense.

Yes, you can rationalize how everything is the same because it is all just
data, but that does not mean that it is simpler or cleaner. That's why I
regret any hand I may or may not have had current terms table structure. 

We are setting ourselves up to view everything from a million miles above
and all we will have accomplished is the migration of tables names into
various more difficult to query "type" fields. We are reconstructing the
divisions we already but we are doing it using data rather than structure.

A smaller list of tables is equal to a "clean" database design. Clean is
when the database server can grab your data by searching through as few
tightly indexed records as possible.  "Clean" is not having a "term" that
you have to look at term_taxonomy in order to find if you are dealing with a
tag or category and then with the right taxonomy ID grabbing the list of
relationships for that taxonomy ID and then "knowing" that what you are
dealing with is a post (or not) because of the implied knowledge in the
taxonomy definition and then using that list of "object IDs" to query the
post table and hopefully find the two posts you've tagged with the word
"simplistic". That is not clean.

I'm not a Normalization Nazi. Sometimes it is irrational to make a separate
table when all of the data is going to be the same. I don't want to store
drafts and revisions and published posts in separate tables or anything
silly like that, but I really think we are going to far in grouping things
and it is hurting the performance of WordPress sites. 

I really really wish we could have things like meta_key be a unique value so
that when I supply site_blog_meta_key the database is looking at one
specific unique value that it returns at near the speed of light. We're way
past that point, but maybe we can stop adding even more generalization.

Anyway that's my 5 cents.

- Brian Layman

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of scribu
Sent: Tuesday, March 02, 2010 3:07 PM
To: wp-hackers
Subject: [wp-hackers] Idea: Widgets as custom post types

Currently, each widget type has a an associated row in the wp_options table,
where all instances of itself are stored.

Taking example from the nav menus in WP 3.0, why not store each widget in
the wp_posts table, with a post_type of 'widget' ?

Discuss.


-- 
http://scribu.net
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From bulk at thecodecave.com  Tue Mar  2 22:02:20 2010
From: bulk at thecodecave.com (Brian Layman)
Date: Tue, 2 Mar 2010 17:02:20 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <000001caba52$7026b530$50741f90$@com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<000001caba52$7026b530$50741f90$@com>
Message-ID: <000301caba54$087fc190$197f44b0$@com>

btw that was not supposed to be:
" A smaller list of tables is equal to a "clean" database design." 
but instead:
" A smaller list of tables is not equal to a "clean" database design."

but you all knew that, right? :)

-b


From chris at clwill.com  Tue Mar  2 22:06:29 2010
From: chris at clwill.com (Chris Williams)
Date: Tue, 2 Mar 2010 17:06:29 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <000001caba52$7026b530$50741f90$@com>
Message-ID: <C7B2CBE5.BAC4%chris@clwill.com>

OTOH, I think this is a good enough idea for ME to come out of lurk mode.

A good database query system (as that in MySQL) can rapidly determine that the size of the index on post "type", with a very narrow range of values, makes it the first thing to search on.  It will, therefore instantly winnow the list down to the 8-16 widgets in the list, and subselecting in that set is trivial.

In fact, there is a performance argument to be made to keep everything in as few tables as possible, as the key nodes of the indexes for those few tables will always be in memory.

As for "clean" code, I'm sorry but adding (AND POST_TYPE = "widget") to queries is hardly burdensome.

I think the whole religious argument about is WP a blogging platform or a CMS is so ridiculous as to sound like something from a Monty Python sketch.  Literally every site I've done (granted no where near as many as most of you), are web sites that have a blogging component.  But the key value of WP is the ease of startup, the ease of management, the ease with which you can train new content creators, and the incredible ecosystem of developers creating plugins, themes, tools, and so on.  To deny it's content management values because of its roots is silly.

My $0.02, I return you to your normal bikeshed color discussion.

________________________________
From: Brian Layman <bulk at thecodecave.com>
Subject: Re: [wp-hackers] Idea: Widgets as custom post types

I'm sorry but I think this is a horrible idea. Horrible enough to come out
of lurk for it..

Why would I want to store my 8-16 widgets in tables that, in one db I just
looked at, has 434,921 non-widget-related records? I don't think it makes
sense.



From mikeschinkel at newclarity.net  Tue Mar  2 22:23:48 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 2 Mar 2010 17:23:48 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <C7B2CBE5.BAC4%chris@clwill.com>
References: <C7B2CBE5.BAC4%chris@clwill.com>
Message-ID: <7AEEA667-ED50-4EB5-83FE-8D7A9350250E@newclarity.net>

On Mar 2, 2010, at 5:06 PM, Chris Williams wrote:
> I think the whole religious argument about is WP a blogging platform or a CMS is so ridiculous as to sound like something from a Monty Python sketch.

Or maybe an SNL "Floor Wax or Desert Topping" sketch! ;-)

-Mike


From bulk at thecodecave.com  Tue Mar  2 22:26:59 2010
From: bulk at thecodecave.com (Brian Layman)
Date: Tue, 2 Mar 2010 17:26:59 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <7AEEA667-ED50-4EB5-83FE-8D7A9350250E@newclarity.net>
References: <C7B2CBE5.BAC4%chris@clwill.com>
	<7AEEA667-ED50-4EB5-83FE-8D7A9350250E@newclarity.net>
Message-ID: <000401caba57$798c7650$6ca562f0$@com>

On Mar 2, 2010, at 5:06 PM, Chris Williams wrote:
> I think the whole religious argument about "Is WP a blogging platform or a
CMS?" is so ridiculous

I always answer that with a simple "Yes".

-Brian Layman.


From john.wp at onolan.org  Tue Mar  2 22:27:22 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Tue, 2 Mar 2010 22:27:22 +0000
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <7AEEA667-ED50-4EB5-83FE-8D7A9350250E@newclarity.net>
References: <C7B2CBE5.BAC4%chris@clwill.com>
	<7AEEA667-ED50-4EB5-83FE-8D7A9350250E@newclarity.net>
Message-ID: <B750D201-37AC-4C29-9CB6-2127DF0ADD29@onolan.org>

The argument was over the naming convention, not the purpose of the  
platform - perhaps that was unclear.

John




On 2 Mar 2010, at 22:23, Mike Schinkel wrote:

> On Mar 2, 2010, at 5:06 PM, Chris Williams wrote:
>> I think the whole religious argument about is WP a blogging  
>> platform or a CMS is so ridiculous as to sound like something from  
>> a Monty Python sketch.
>
> Or maybe an SNL "Floor Wax or Desert Topping" sketch! ;-)
>
> -Mike
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Tue Mar  2 22:28:10 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 2 Mar 2010 17:28:10 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <349fe48b1003021343g6c6860c9i7ddeefeffdbb65ac@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<a93cee651003021220m411a12e7r889b438d8020d23a@mail.gmail.com>
	<39C37B7E-C425-41EF-9E13-2FAE5F2223E4@newclarity.net>
	<4B8D786B.2040705@voceconnect.com>
	<161617691003021253p11efc06al4c10e27ddcf97c44@mail.gmail.com>
	<FDAB6A80-676E-41C4-809B-C17D4C99E2CE@newclarity.net>
	<3ED574BA-1991-401E-A955-617E10F20C40@onolan.org>
	<a93cee651003021329h5c240d81v7da3563bf7b4ae7d@mail.gmail.com>
	<BAED11F8-DD77-4426-AF97-8DE9C4C09AAB@onolan.org>
	<65C63581-C99F-414C-A48B-D4290E447E41@newclarity.net>
	<349fe48b1003021343g6c6860c9i7ddeefeffdbb65ac@mail.gmail.com>
Message-ID: <E4BE3993-4C86-4C3C-B031-1CC43046F785@newclarity.net>

On Mar 2, 2010, at 4:43 PM, scribu wrote:

> On Tue, Mar 2, 2010 at 11:40 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
> 
>> On Mar 2, 2010, at 4:32 PM, John O'Nolan wrote:
>>> 
>>> Surely moving widgets and links all into the wp_posts table would screw
>> up backwards compatibility just as much as renaming it? (correct me if I'm
>> wrong on that one, I'm genuinely asking)
>> 
>> Renaming the wp_posts table would potentially affect hundreds of plugins
>> and themes and potentially introduce bugs in the core code.  Benefits do not
>> outweigh the downside, IMO.
>> 
> 
> Not necessarily. We just need to keep the $wpdb->posts variable around.

Heh. You are presuming that all plugin developers follow good coding standards. :)

-Mike


From mikeschinkel at newclarity.net  Tue Mar  2 22:33:17 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 2 Mar 2010 17:33:17 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <B750D201-37AC-4C29-9CB6-2127DF0ADD29@onolan.org>
References: <C7B2CBE5.BAC4%chris@clwill.com>
	<7AEEA667-ED50-4EB5-83FE-8D7A9350250E@newclarity.net>
	<B750D201-37AC-4C29-9CB6-2127DF0ADD29@onolan.org>
Message-ID: <E255D15D-066B-44D9-8418-E9CF4C350EE1@newclarity.net>

On Mar 2, 2010, at 5:27 PM, John O'Nolan wrote:

> The argument was over the naming convention, not the purpose of the platform - perhaps that was unclear.

Yes, clearly, but for those of us who have repeatedly had to lobby for more CMS functionality that debate has become so ingrained we reflexively react.

-Mike

From john.wp at onolan.org  Tue Mar  2 22:50:02 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Tue, 2 Mar 2010 22:50:02 +0000
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <E255D15D-066B-44D9-8418-E9CF4C350EE1@newclarity.net>
References: <C7B2CBE5.BAC4%chris@clwill.com>
	<7AEEA667-ED50-4EB5-83FE-8D7A9350250E@newclarity.net>
	<B750D201-37AC-4C29-9CB6-2127DF0ADD29@onolan.org>
	<E255D15D-066B-44D9-8418-E9CF4C350EE1@newclarity.net>
Message-ID: <3431DF6C-EC64-4811-9432-FB4459EFFB12@onolan.org>

Ok, well my apologies, that was not my intent!

John


On 2 Mar 2010, at 22:33, Mike Schinkel wrote:

> On Mar 2, 2010, at 5:27 PM, John O'Nolan wrote:
>
>> The argument was over the naming convention, not the purpose of the  
>> platform - perhaps that was unclear.
>
> Yes, clearly, but for those of us who have repeatedly had to lobby  
> for more CMS functionality that debate has become so ingrained we  
> reflexively react.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From matt at mattjacob.com  Tue Mar  2 22:51:14 2010
From: matt at mattjacob.com (Matt Jacob)
Date: Tue, 02 Mar 2010 15:51:14 -0700
Subject: [wp-hackers] Mailing list reply etiquette
Message-ID: <4B8D9662.704@mattjacob.com>

When you want to start a new post with a new subject, please DO NOT 
simply reply to a previous post and change the subject line in your mail 
client. Replying to an existing post keeps the In-Reply-To: header 
intact and is seriously annoying to those of use who view the list in a 
threaded format. Instead, compose a new message and address it to 
wp-hackers at lists.automattic.com instead of taking the lazy route. ;-)

Many thanks,

Matt

From scribu at gmail.com  Tue Mar  2 23:05:27 2010
From: scribu at gmail.com (scribu)
Date: Wed, 3 Mar 2010 01:05:27 +0200
Subject: [wp-hackers] Mailing list reply etiquette
In-Reply-To: <4B8D9662.704@mattjacob.com>
References: <4B8D9662.704@mattjacob.com>
Message-ID: <349fe48b1003021505j54f48142v502d283173a0a58@mail.gmail.com>

On Wed, Mar 3, 2010 at 12:51 AM, Matt Jacob <matt at mattjacob.com> wrote:

> When you want to start a new post with a new subject, please DO NOT simply
> reply to a previous post and change the subject line in your mail client.
> Replying to an existing post keeps the In-Reply-To: header intact and is
> seriously annoying to those of use who view the list in a threaded format.
> Instead, compose a new message and address it to
> wp-hackers at lists.automattic.com instead of taking the lazy route. ;-)
>
> Many thanks,
>
> Matt



I had no idea about the In-Reply-To header. It's showing up without problems
in Gmail, though (presuming it was directed to the widget as posts thread
that I started earlier).


-- 
http://scribu.net

From matt at mattjacob.com  Tue Mar  2 23:27:59 2010
From: matt at mattjacob.com (Matt Jacob)
Date: Tue, 02 Mar 2010 16:27:59 -0700
Subject: [wp-hackers] Mailing list reply etiquette
In-Reply-To: <349fe48b1003021505j54f48142v502d283173a0a58@mail.gmail.com>
References: <4B8D9662.704@mattjacob.com>
	<349fe48b1003021505j54f48142v502d283173a0a58@mail.gmail.com>
Message-ID: <4B8D9EFF.8000606@mattjacob.com>

On 3/2/2010 4:05 PM, scribu wrote:
> I had no idea about the In-Reply-To header. It's showing up without problems
> in Gmail, though (presuming it was directed to the widget as posts thread
> that I started earlier).

No, no, I was referring to "reset &send user pass" and "Wordpress Plugin 
Repository not approving a plugin" because they've been started in the 
last day or two, but also the list as a whole.

I'm not sure if Gmail recognizes In-Reply-To for threading (might be a 
combination of that and their own algorithm), but Thunderbird sure does. 
And it's quite disorienting when you're following along in a thread 
and---BAM!---the subject has changed to something else all of a sudden.

Matt

From dougal at gunters.org  Wed Mar  3 03:05:36 2010
From: dougal at gunters.org (Dougal Campbell)
Date: Tue, 02 Mar 2010 22:05:36 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <000001caba52$7026b530$50741f90$@com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<000001caba52$7026b530$50741f90$@com>
Message-ID: <4B8DD200.2070108@gunters.org>

On Mar 2 2010 4:50 PM, Brian Layman wrote:
> [...] I really really wish we could have things like meta_key be a unique value so
> that when I supply site_blog_meta_key the database is looking at one
> specific unique value that it returns at near the speed of light. We're way
> past that point, but maybe we can stop adding even more generalization.
>    

In hindsight, I wish I *had* made the meta_key be unique. But at the 
time I wrote the postmeta feature, we didn't have the auto-serialization 
model in place. I wanted to be able to specify multiple values for the 
same key, without over-complicating the more common use-case of 
one-to-one key/value pairs.

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From dan at phiffer.org  Wed Mar  3 04:06:11 2010
From: dan at phiffer.org (Dan Phiffer)
Date: Tue, 2 Mar 2010 23:06:11 -0500
Subject: [wp-hackers] Alternate paging URLs
Message-ID: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>

Hi all,

I don't like the URL structure /page/2/ for two reasons:

- Its content changes, making it not very bookmark-friendly (or search results friendly)
- It contains a path that isn't valid, /page/

I'd prefer to use ?start=key, where key is a URL slug or ID number. I've worked out some SQL that I think will do what I want, but I don't know how difficult this might be to actually implement given that it deals with pretty low-level stuff.

I guess I should ask if this has come up on the list before in case there's past discussion to be consulted with. Also, I'm kind of new to the world of MySQL subselects (which my first pass solution depends on) -- are they at all efficient?

Here's the general idea:

/?start=url-slug-foo

SELECT position
FROM (
  SELECT @rownum:=@rownum+1 'position', post_name
  FROM wp_posts, (SELECT @rownum:=0) sub2
  ORDER BY post_date DESC) sub1
WHERE post_name = 'url-slug-foo'

SELECT *
FROM wp_posts
ORDER BY post_date DESC
LIMIT $position,10

Thanks,
-Dan

From wp-hackers at striderweb.com  Wed Mar  3 04:22:31 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue, 2 Mar 2010 22:22:31 -0600
Subject: [wp-hackers] Mailing list reply etiquette
In-Reply-To: <4B8D9EFF.8000606@mattjacob.com>
References: <4B8D9662.704@mattjacob.com>
	<349fe48b1003021505j54f48142v502d283173a0a58@mail.gmail.com>
	<4B8D9EFF.8000606@mattjacob.com>
Message-ID: <5591BA75-DDD2-414C-81B8-D0F1C7394E43@striderweb.com>


On Mar 2, 2010, at 5:27 PM, Matt Jacob wrote:

> I'm not sure if Gmail recognizes In-Reply-To for threading (might be a combination of that and their own algorithm), but Thunderbird sure does. And it's quite disorienting when you're following along in a thread and---BAM!---the subject has changed to something else all of a sudden.

Apple Mail also.

Easy rule:  If starting a new thread, don't use "reply".  :-)

Stephen

From jeremy at visser.name  Wed Mar  3 05:18:52 2010
From: jeremy at visser.name (Jeremy Visser)
Date: Wed, 03 Mar 2010 16:18:52 +1100
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
Message-ID: <4B8DF13C.7050104@visser.name>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 03/03/10 15:06, Dan Phiffer wrote:
> I don't like the URL structure /page/2/

G'day Dan,

I tend to agree with you, especially on this point:

> Its content changes, making it not very bookmark-friendly (or search
> results friendly)

The /page/2/ mechanism is effectively subject to a race condition, where
if you are on, say, page 3, and you navigate backwards to page 2, and in
the meantime, the author publishes a new blog post, you will miss what
was the last item in page 2 when you first navigated to page 3.

> I'd prefer to use ?start=key, where key is a URL slug or ID number. 
> I've worked out some SQL that I think will do what I want, but I 
> don't know how difficult this might be to actually implement given 
> that it deals with pretty low-level stuff.

While the ?'s in URLs will probably get the flamewars going more than
anything else you have suggested ;), Twitter appears to implement
something quite similar:

http://twitter.com/timeline/home?max_id=9907684777&page=3&twttr=true

(That's the URL of the "more" link at the bottom of my timeline.)

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)

iEYEARECAAYFAkuN8S4ACgkQvs6Qqs8TxBq50gCgk/6RqA9R7CQmQ0y1/VMldnP3
xiwAn1AqA9feq7ZTUUfev9AhLxxp9wEk
=rptX
-----END PGP SIGNATURE-----

From raphael.droz at gmail.com  Wed Mar  3 11:17:48 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Wed, 03 Mar 2010 12:17:48 +0100
Subject: [wp-hackers] the_author hook,
 the_author_posts_link() : hooks and semantics
In-Reply-To: <161617691003011349v86ab5efnf0f7b938f74a5b47@mail.gmail.com>
References: <20100301214120.GD4926@deeebian>
	<161617691003011349v86ab5efnf0f7b938f74a5b47@mail.gmail.com>
Message-ID: <4B8E455C.4030708@gmail.com>

Otto wrote:
>> [it's my 2nd attempt today as I didn't received any undeliverable notice]
>>     
>
> Yes, that's because it got delivered just fine.
>
> Please don't repost things to the email list just because you didn't
> get a response. This isn't instant gratification, and it's not
> expected to be. Somebody will respond when they have something to say.
>
> This is an email list. When you send email to this list, you're
> sending an email to several hundred or thousand people. Bear that in
> mind.
I fear I was misunderstood, I reposted my email because
 I wasn't able to find it in the my email folder nor the junk one nor
the list archive.


As a precision the function where I replaced the_author() by 
get_the_author_meta('display_name')
was the_author_posts_link() ni the author-template.php

I also encoutered yesterday a problem which may be related :
I'm using the Coins-metadata plugin for years and just noticed that 
thousands
of post revisions, feeds, ... got the <span class="Z3988"> hardcoded in 
the DB.

I suspect the following scenario having happened, what is not yet 
confirmed :
An user submit a post, in the hook chain the_content() is called, the 
content is
prepended with those metadata which, in theory, must only affect
the displayed text, not the stored one.


related experiences welcomed

From elflop at googlemail.com  Wed Mar  3 12:28:37 2010
From: elflop at googlemail.com (elflop at googlemail.com)
Date: Wed, 03 Mar 2010 12:28:37 +0000
Subject: [wp-hackers] Post Thumbnail & Twenty Ten theme
Message-ID: <001636c5bc621eebec0480e49f7e@google.com>

[reposting from the support forums...

Playing about with this whilst upgrading my plugin. I've set a Post  
thumbnail on a single page, and the thumbnail has replaced the header image  
(currently using the Forest Floor image).

Don't think this is supposed to happen...

then I check the header.php...
`
<?php
if ( is_singular() && has_post_thumbnail( $post->ID ) ) {
echo get_the_post_thumbnail( $post->ID, 'post-thumbnail' );
} else { ?>
<img src="<?php header_image(); ?>" width="<?php echo  
HEADER_IMAGE_WIDTH; ?>" height="<?php echo HEADER_IMAGE_HEIGHT; ?>" alt=""  
/>
<?php } ?>
`
erm what? that's ridiculous! The likely hood of a thumbnail matching the  
header size for one is unlikely. More importantly Why??

Very very strange, and I was beginning to like this theme as well.

####

Can anyone on here comment as to why?

From zamoose at gmail.com  Wed Mar  3 12:54:38 2010
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 3 Mar 2010 07:54:38 -0500
Subject: [wp-hackers] Post Thumbnail & Twenty Ten theme
In-Reply-To: <001636c5bc621eebec0480e49f7e@google.com>
References: <001636c5bc621eebec0480e49f7e@google.com>
Message-ID: <2C2B591D-16BB-453E-B56B-6BE510A5C9AB@gmail.com>

On Mar 3, 2010, at 7:28 AM, elflop at googlemail.com wrote:
> Can anyone on here comment as to why?
>

Because Matt Thomas liked it and thought it looked good?

--
Doug Stewart


From jdub at bethesignal.org  Wed Mar  3 13:05:15 2010
From: jdub at bethesignal.org (Jeff Waugh)
Date: Thu, 4 Mar 2010 00:05:15 +1100
Subject: [wp-hackers] Post Thumbnail & Twenty Ten theme
In-Reply-To: <001636c5bc621eebec0480e49f7e@google.com>
References: <001636c5bc621eebec0480e49f7e@google.com>
Message-ID: <20100303130515.GK2337@sliver>

<quote who="elflop at googlemail.com">

> erm what? that's ridiculous! The likely hood of a thumbnail matching the
> header size for one is unlikely. More importantly Why??
> 
> Very very strange, and I was beginning to like this theme as well.

In case no one else follows up with praise -- I love it! An inspired use of
the new post thumbnail feature, to great visual effect. It's a fantastic way
to make individual posts and pages unique, particularly when you have great
photographic material to go with them.

So much win!

- Jeff

-- 
The Great Australian Internet Blackout   http://www.internetblackout.com.au/
 
            ...                           *bounce*bounce*bounce*

From elflop at googlemail.com  Wed Mar  3 13:18:11 2010
From: elflop at googlemail.com (elflop at googlemail.com)
Date: Wed, 03 Mar 2010 13:18:11 +0000
Subject: [wp-hackers] Post Thumbnail & Twenty Ten theme
In-Reply-To: <20100303130515.GK2337@sliver>
Message-ID: <0015174c3bfe6306b20480e550a3@google.com>

well I suppose it prompted me to sort out how to do a child theme...

If it resized the image to fit the header size, then I could have just  
understood the reasoning... but I'm currently shuddering at the thought of  
this theme going public with that feature.

From dan at phiffer.org  Wed Mar  3 15:45:29 2010
From: dan at phiffer.org (Dan Phiffer)
Date: Wed, 3 Mar 2010 10:45:29 -0500
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <4B8DF13C.7050104@visser.name>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
Message-ID: <A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>


On Mar 3, 2010, at 12:18 AM, Jeremy Visser wrote:

> The /page/2/ mechanism is effectively subject to a race condition, where
> if you are on, say, page 3, and you navigate backwards to page 2, and in
> the meantime, the author publishes a new blog post, you will miss what
> was the last item in page 2 when you first navigated to page 3.
> 
>> I'd prefer to use ?start=key, where key is a URL slug or ID number. 
>> I've worked out some SQL that I think will do what I want, but I 
>> don't know how difficult this might be to actually implement given 
>> that it deals with pretty low-level stuff.
> 
> While the ?'s in URLs will probably get the flamewars going more than
> anything else you have suggested ;), Twitter appears to implement
> something quite similar:
> 
> http://twitter.com/timeline/home?max_id=9907684777&page=3&twttr=true
> 
> (That's the URL of the "more" link at the bottom of my timeline.)

I remember it used to work differently on Twitter -- more like how WordPress does things now -- and I would get a second page that was 30-50% composed of page 1 stuff I'd already seen, pushed down because of a reversed version of the race condition you mention. Obviously not many WordPress instances are getting the same influx of new content that Twitter does, but I could see some sites using something like the p2 theme suffering from this problem.

As for the ?'s in the URLs, it seems odd to me that we're forced into a one-size-fits-all solution for "user-friendly URLs" outside the realm of post permalinks. These things are ultimately aesthetic on some level, which makes finding the "best" solution by consensus a silly exercise. I like my URLs to reflect the structure of my site's content, which makes "/page/2/" seem incorrect to me (as well as "post/attachment/attachment-slug"), but I don't expect everyone to care. Or if they do care, I don't expect my ideal to be preferred by everyone.

Implementation-wise the Twitter method of using a maximum ID value is simpler, but there isn't a guarantee of sequential post IDs in WP like there is in Twitter. My subselect method is anticipating the edge case where somebody updates the post date for ID 47 to appear between 1000 and 1001.

-Dan

From gundersson at gmail.com  Wed Mar  3 15:51:06 2010
From: gundersson at gmail.com (Christian Gundersson)
Date: Wed, 3 Mar 2010 16:51:06 +0100
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
Message-ID: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>

Hi guys!

Say I have two domain names, foo.com and bar.com.

foo.com has it's own webserver, so foo.com points to foo.com.

bar.com, however, hasn't but instead points to foo.com/bar_root/.

Pointing and installing isn't a problem, the problem however is that
wordpress in bar.com(foo.com/bar_root/) translates all links etc. to
foo.com/bar_root/link instead of bar.com/link.

Does anyone know of a good way to solve this?

Regards
Christian

From raphael.droz at gmail.com  Wed Mar  3 15:54:14 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Wed, 03 Mar 2010 16:54:14 +0100
Subject: [wp-hackers] the_author hook,
 the_author_posts_link() : hooks and semantics
In-Reply-To: <161617691003011349v86ab5efnf0f7b938f74a5b47@mail.gmail.com>
References: <20100301214120.GD4926@deeebian>
	<161617691003011349v86ab5efnf0f7b938f74a5b47@mail.gmail.com>
Message-ID: <4B8E8626.1090104@gmail.com>

Otto wrote:
>> [it's my 2nd attempt today as I didn't received any undeliverable notice]
>>     
>
> Yes, that's because it got delivered just fine.
>
> Please don't repost things to the email list just because you didn't
> get a response. This isn't instant gratification, and it's not
> expected to be. Somebody will respond when they have something to say.
>
> This is an email list. When you send email to this list, you're
> sending an email to several hundred or thousand people. Bear that in
> mind.
I fear I was misunderstood, I reposted my email because
I wasn't able to find it in the my email folder nor the junk one nor
the list archive.

This email is also a second attempt (first one at 11:17 UTC still not in 
the archive nor in my mailbox)

As a precision the function where I replaced the_author() by
get_the_author_meta('display_name')
was the_author_posts_link() in the author-template.php

I also encountered yesterday a problem which may be related :
I'm using the Coins-metadata AKA scholarpress-coins plugin for years and 
just noticed that
thousands of post revisions, feeds, ... got the <span class="Z3988"> 
hardcoded in the DB.

I suspect the following scenario having happened, what is not yet
confirmed :
An user submits a post, in the hook chain the_content() is called, the
content is prepended with those metadata which, in theory, must only 
affect the displayed text, not the stored one.
However it may also be related to the fact that this plugin does :
scholarpress_coins_add_coins_metadata($content) {
?> <span.....></span> <?php return $content;
}


related experiences welcomed


From niladam at gmail.com  Wed Mar  3 15:57:07 2010
From: niladam at gmail.com (madalin)
Date: Wed, 3 Mar 2010 17:57:07 +0200
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
In-Reply-To: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>
Message-ID: <df809b111003030757j4b02c1dai61f0af7cc622fd52@mail.gmail.com>

If the webserver is configured to reply to bar.com (even if the IP is
different - ie: vhost) you could add the IP and address of the server
to your hosts file if using windows (here's something to read about -
http://accs-net.com/hosts/how_to_use_hosts.html) or your /etc/hosts
file in linux :)

Good Luck!


On Wed, Mar 3, 2010 at 5:51 PM, Christian Gundersson
<gundersson at gmail.com> wrote:
> Hi guys!
>
> Say I have two domain names, foo.com and bar.com.
>
> foo.com has it's own webserver, so foo.com points to foo.com.
>
> bar.com, however, hasn't but instead points to foo.com/bar_root/.
>
> Pointing and installing isn't a problem, the problem however is that
> wordpress in bar.com(foo.com/bar_root/) translates all links etc. to
> foo.com/bar_root/link instead of bar.com/link.
>
> Does anyone know of a good way to solve this?
>
> Regards
> Christian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Cu drag,
madalin
http://madalin.eu

From otto at ottodestruct.com  Wed Mar  3 15:57:26 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 3 Mar 2010 09:57:26 -0600
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
In-Reply-To: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>
Message-ID: <161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com>

WordPress uses the two URL settings on the Settings->General page to
determine how to build links.

So if foo.com/bar_root/something is equivalent to bar.com/something
*and both links actually will work*, then you can just change those
two URL settings to reflect the URLs you want to use.

Important: The links must work *before* you change the settings.
Because the second you change the settings, the whole site uses them,
and if the links don't work, the site will stop working too.

-Otto



On Wed, Mar 3, 2010 at 9:51 AM, Christian Gundersson
<gundersson at gmail.com> wrote:
> Hi guys!
>
> Say I have two domain names, foo.com and bar.com.
>
> foo.com has it's own webserver, so foo.com points to foo.com.
>
> bar.com, however, hasn't but instead points to foo.com/bar_root/.
>
> Pointing and installing isn't a problem, the problem however is that
> wordpress in bar.com(foo.com/bar_root/) translates all links etc. to
> foo.com/bar_root/link instead of bar.com/link.
>
> Does anyone know of a good way to solve this?
>
> Regards
> Christian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Mar  3 16:00:54 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 3 Mar 2010 10:00:54 -0600
Subject: [wp-hackers] the_author hook,
	the_author_posts_link() : hooks and 	semantics
In-Reply-To: <4B8E8626.1090104@gmail.com>
References: <20100301214120.GD4926@deeebian>
	<161617691003011349v86ab5efnf0f7b938f74a5b47@mail.gmail.com> 
	<4B8E8626.1090104@gmail.com>
Message-ID: <161617691003030800v81d6c1ao399f071c9dd03ad8@mail.gmail.com>

2010/3/3 Rapha?l Droz <raphael.droz at gmail.com>:
> This email is also a second attempt (first one at 11:17 UTC still not in the
> archive nor in my mailbox)

This sounds like a problem with your mailbox because, again, you're
repeating yourself after 4 hours.

Here's the first copy:
http://lists.automattic.com/pipermail/wp-hackers/2010-March/030630.html

Here's the one you just sent:
http://lists.automattic.com/pipermail/wp-hackers/2010-March/030637.html

As you can see, they're both in the archive listing.

Please stop repeating every email you send to the list.

-Otto

From gundersson at gmail.com  Wed Mar  3 16:06:43 2010
From: gundersson at gmail.com (Christian Gundersson)
Date: Wed, 3 Mar 2010 17:06:43 +0100
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
In-Reply-To: <161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com>
Message-ID: <d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com>

2010/3/3 Otto <otto at ottodestruct.com>

> WordPress uses the two URL settings on the Settings->General page to
> determine how to build links.
>
> So if foo.com/bar_root/something is equivalent to bar.com/something
> *and both links actually will work*, then you can just change those
> two URL settings to reflect the URLs you want to use.
>
> Important: The links must work *before* you change the settings.
> Because the second you change the settings, the whole site uses them,
> and if the links don't work, the site will stop working too.
>
> -Otto


Oh, thanks for the swift replys! :)

bar.com/link works as intended, and I went in (a bit prematurely but thats
me) and changed the siteurl and homeurl in Settings->General. After that
foo.bar/link was still accessible but no stylesheet and I couldn't log back
in to the admin area.

Would be nice to know if that _is_ the right way to do it, otherwise the
problem is  somewhere else...

Regards
Christian

From dan at phiffer.org  Wed Mar  3 16:39:57 2010
From: dan at phiffer.org (Dan Phiffer)
Date: Wed, 3 Mar 2010 11:39:57 -0500
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
Message-ID: <82150C87-CF78-4086-AEF2-A45ECDE87C5C@phiffer.org>


On Mar 3, 2010, at 10:45 AM, Dan Phiffer wrote:

> Implementation-wise the Twitter method of using a maximum ID value is simpler, but there isn't a guarantee of sequential post IDs in WP like there is in Twitter. My subselect method is anticipating the edge case where somebody updates the post date for ID 47 to appear between 1000 and 1001.

I just realized that using a Unix timestamp might address this edge case neatly. So here's my proposal. Replace "(start)" with your favorite localized token:

http://example.org/page/2/ => http://example.org/?(start)=1267631711 or http://example.org/(start)/1267631711/
http://example.org/tags/foo/page/10/ => http://example.org/?(start)=1267631711 or http://example.org/tags/foo/(start)/1267631711/
etc.

I'm implicitly suggesting a new permalink option for pagination. I don't really care if this happens in a plugin or in core, but I'm happy to make an attempt at implementing either. I suspect this would, at the very least, require new hooks be added into core. I realize there's a freeze on 3.0, this is more like a long-term thing.

Thanks,
-Dan

From dave at vinertech.com  Wed Mar  3 16:40:41 2010
From: dave at vinertech.com (Dave Viner)
Date: Wed, 3 Mar 2010 08:40:41 -0800
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
Message-ID: <9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>

Hi Dan,

I actually had to implement a different paging URL scheme for a client and
it was surprisingly difficult.  I may not have done it properly, but it
worked.  (My client wanted url/1/, url/2/, etc.)

The fencepost issue (which page does result 10 appear on) and the dynamic
update issue (post 22 appears while on page 3) are classic search results
problems.  Fence post is solvable with intelligent SQL, but the dynamic
update while a user is paging tends to be not very useful to solve.  After
all, when a user is going from page to page, they usually want to see the
latest information, not necessarily the identical information to what was
shown before.

Dave Viner

On Wed, Mar 3, 2010 at 7:45 AM, Dan Phiffer <dan at phiffer.org> wrote:

>
> On Mar 3, 2010, at 12:18 AM, Jeremy Visser wrote:
>
> > The /page/2/ mechanism is effectively subject to a race condition, where
> > if you are on, say, page 3, and you navigate backwards to page 2, and in
> > the meantime, the author publishes a new blog post, you will miss what
> > was the last item in page 2 when you first navigated to page 3.
> >
> >> I'd prefer to use ?start=key, where key is a URL slug or ID number.
> >> I've worked out some SQL that I think will do what I want, but I
> >> don't know how difficult this might be to actually implement given
> >> that it deals with pretty low-level stuff.
> >
> > While the ?'s in URLs will probably get the flamewars going more than
> > anything else you have suggested ;), Twitter appears to implement
> > something quite similar:
> >
> > http://twitter.com/timeline/home?max_id=9907684777&page=3&twttr=true
> >
> > (That's the URL of the "more" link at the bottom of my timeline.)
>
> I remember it used to work differently on Twitter -- more like how
> WordPress does things now -- and I would get a second page that was 30-50%
> composed of page 1 stuff I'd already seen, pushed down because of a reversed
> version of the race condition you mention. Obviously not many WordPress
> instances are getting the same influx of new content that Twitter does, but
> I could see some sites using something like the p2 theme suffering from this
> problem.
>
> As for the ?'s in the URLs, it seems odd to me that we're forced into a
> one-size-fits-all solution for "user-friendly URLs" outside the realm of
> post permalinks. These things are ultimately aesthetic on some level, which
> makes finding the "best" solution by consensus a silly exercise. I like my
> URLs to reflect the structure of my site's content, which makes "/page/2/"
> seem incorrect to me (as well as "post/attachment/attachment-slug"), but I
> don't expect everyone to care. Or if they do care, I don't expect my ideal
> to be preferred by everyone.
>
> Implementation-wise the Twitter method of using a maximum ID value is
> simpler, but there isn't a guarantee of sequential post IDs in WP like there
> is in Twitter. My subselect method is anticipating the edge case where
> somebody updates the post date for ID 47 to appear between 1000 and 1001.
>
> -Dan
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dan at phiffer.org  Wed Mar  3 16:54:51 2010
From: dan at phiffer.org (Dan Phiffer)
Date: Wed, 3 Mar 2010 11:54:51 -0500
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
Message-ID: <C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>


On Mar 3, 2010, at 11:40 AM, Dave Viner wrote:

> After all, when a user is going from page to page, they usually want to see the
> latest information, not necessarily the identical information to what was
> shown before.

This is one assumption my alternative is trying to draw attention to. It is true that *usually* pagination is used this way, but what happens if I bookmark one of these views for later, or if I create a short URL to page 40? I'm trying to link to the particular content on those pages, not the position from the newest content. The particular content on these pages will change over time and my links will rot.

Here's a concrete example from my Tumblr blog, when I was trying to find something recently:
http://www.google.com/search?q=site%3Ablog.phiffer.org+ira+glass

How prone are those search results to link rot? Depends, I guess, on how frequently Google re-indexes everything within that page sequence. It's better, I think, to avoid this altogether with better URL structures.

-Dan

From otto at ottodestruct.com  Wed Mar  3 17:23:33 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 3 Mar 2010 11:23:33 -0600
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
In-Reply-To: <d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com> 
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com> 
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com>
Message-ID: <161617691003030923re01344bte95dad18da9acf43@mail.gmail.com>

Like I told you, the links have to actually work before making that
change. If the stylesheet isn't coming up, then clearly the links do
not actually work. You'll have to figure out why before changing it
again.

You can read the instructions here to change it back to the way it was
and get the site working again:
http://codex.wordpress.org/Changing_The_Site_URL

-Otto



On Wed, Mar 3, 2010 at 10:06 AM, Christian Gundersson
<gundersson at gmail.com> wrote:
> 2010/3/3 Otto <otto at ottodestruct.com>
>
>> WordPress uses the two URL settings on the Settings->General page to
>> determine how to build links.
>>
>> So if foo.com/bar_root/something is equivalent to bar.com/something
>> *and both links actually will work*, then you can just change those
>> two URL settings to reflect the URLs you want to use.
>>
>> Important: The links must work *before* you change the settings.
>> Because the second you change the settings, the whole site uses them,
>> and if the links don't work, the site will stop working too.
>>
>> -Otto
>
>
> Oh, thanks for the swift replys! :)
>
> bar.com/link works as intended, and I went in (a bit prematurely but thats
> me) and changed the siteurl and homeurl in Settings->General. After that
> foo.bar/link was still accessible but no stylesheet and I couldn't log back
> in to the admin area.
>
> Would be nice to know if that _is_ the right way to do it, otherwise the
> problem is ?somewhere else...
>
> Regards
> Christian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dangayle at gmail.com  Wed Mar  3 17:27:16 2010
From: dangayle at gmail.com (Dan Gayle)
Date: Wed, 3 Mar 2010 09:27:16 -0800
Subject: [wp-hackers] Trackbacks as background process
In-Reply-To: <349fe48b1002261558t55e5adfbueaf5bfe2a2b07900@mail.gmail.com>
References: <74a8f8d81002261342t72eca2aaka1098afa6c101264@mail.gmail.com>
	<349fe48b1002261558t55e5adfbueaf5bfe2a2b07900@mail.gmail.com>
Message-ID: <74a8f8d81003030927k7d707ec9i84a18238ce4655dd@mail.gmail.com>

On Fri, Feb 26, 2010 at 3:58 PM, scribu <scribu at gmail.com> wrote:
> On Fri, Feb 26, 2010 at 11:42 PM, Dan Gayle <dangayle at gmail.com> wrote:
>
>> Does anyone know of a way to move the trackback process out of the way when
>> posting a new item, move it into a background process independent of the
>> post?
>
>
> I thought trackbacks and pingbacks were already being sent out using
> wp-cron.
>
> What version of WordPress are you refering to ?


We're on 2.9.2

If what you're saying is true, why does the discussion options panel say this:

      Attempt to notify any blogs linked to from the article (slows
down posting.)

Because, sure enough, it slows down posting and it brings our website
to a crawl.

From will at itsananderson.com  Wed Mar  3 17:48:00 2010
From: will at itsananderson.com (Will Anderson)
Date: Wed, 3 Mar 2010 12:48:00 -0500
Subject: [wp-hackers] Post Thumbnail & Twenty Ten theme
In-Reply-To: <0015174c3bfe6306b20480e550a3@google.com>
References: <20100303130515.GK2337@sliver>
	<0015174c3bfe6306b20480e550a3@google.com>
Message-ID: <a7b7a8481003030948n5ffaf45ape02d0b3882c71596@mail.gmail.com>

I tend to agree with Jeff. This is a a really innovative use of post
thumbnails. Beyond just being cool though, I think this features is
important because theme authors need to see that post thumbnails have a
broader use than is currently being utilized. Hopefully theme authors will
look at twentyten and go "Hey, I hadn't thought about that use of post
thumbnails. That makes me wonder, what if I used them *this* way?". IMO
default themes should spark innovation, not be the end all solution.

That being said, I think site owners should be able to choose whether to use
their post thumbnails in this way or not. Twenty Ten is still being
developed, so this could be in the works, but right now it lacks a good
options page (beyond the ones now being provided by core). There's also no
good filter that would allow child themes (or plugins) to cleanly change
this "option" (and other "options" throughout the theme). Again, this could
simply be because Twenty Ten isn't finished yet.


On Wed, Mar 3, 2010 at 8:18 AM, <elflop at googlemail.com> wrote:

> well I suppose it prompted me to sort out how to do a child theme...
>
> If it resized the image to fit the header size, then I could have just
> understood the reasoning... but I'm currently shuddering at the thought of
> this theme going public with that feature.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mbarr at interactiveone.com  Wed Mar  3 18:05:30 2010
From: mbarr at interactiveone.com (Matthew Barr)
Date: Wed, 3 Mar 2010 13:05:30 -0500
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
In-Reply-To: <161617691003030923re01344bte95dad18da9acf43@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com>
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com>
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com>
Message-ID: <DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com>

In this vein:   Has anyone ever considered switching the img tags in posts to be constructed vs stored statically?  Any reason they couldn't just be built with the $site_url at the time, vs the $site_url at the time of the insertion into the post?


It would fix one of the largest problems w/ moving a site from one location (domain) to another.


Matthew


------------------
Matthew Barr
InteractiveOne  - Senior System Engineer
e:mbarr at interactiveone.com
c:646.727.0535
aim: matthewbarr1








From otto at ottodestruct.com  Wed Mar  3 18:26:48 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 3 Mar 2010 12:26:48 -0600
Subject: [wp-hackers] Trackbacks as background process
In-Reply-To: <74a8f8d81003030927k7d707ec9i84a18238ce4655dd@mail.gmail.com>
References: <74a8f8d81002261342t72eca2aaka1098afa6c101264@mail.gmail.com> 
	<349fe48b1002261558t55e5adfbueaf5bfe2a2b07900@mail.gmail.com> 
	<74a8f8d81003030927k7d707ec9i84a18238ce4655dd@mail.gmail.com>
Message-ID: <161617691003031026n665ecb79i40d4bb9ad5f90427@mail.gmail.com>

On Wed, Mar 3, 2010 at 11:27 AM, Dan Gayle <dangayle at gmail.com> wrote:
> If what you're saying is true, why does the discussion options panel say this:
>
> ? ? ?Attempt to notify any blogs linked to from the article (slows
> down posting.)

That text is old. It doesn't do that anymore. It uses wp-cron. Check
the code yourself if you like. Specifically, you'll want to look at
the _publish_post_hook() function in wp-admin/post.php.

Short version: When a post needs to get pings sent out for it, then it
gets a postmeta key of _pingme set on it.A wp-cron event is set using
wp_schedule_single_event to make pings happen.

When wp-cron runs that event, the do_all_pings() function gets called.
One of the things it does is to pull all the posts with _pingme
metadata set on them, and do the pings.

> Because, sure enough, it slows down posting and it brings our website
> to a crawl.

Can't help you there. But pings and trackbacks *are* sent
asynchronously using wp-cron. Have been for several versions now.

-Otto

From otto at ottodestruct.com  Wed Mar  3 18:32:39 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 3 Mar 2010 12:32:39 -0600
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
In-Reply-To: <DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com> 
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com> 
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com> 
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com> 
	<DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com>
Message-ID: <161617691003031032w193ae73by8e38d8b0c141b76c@mail.gmail.com>

How would you refer to the image?

You could do something like it with a shortcode, but you still need a
way to uniquely identify the image. Post ID's change when moving blog
content around.

-Otto



On Wed, Mar 3, 2010 at 12:05 PM, Matthew Barr <mbarr at interactiveone.com> wrote:
> In this vein: ? Has anyone ever considered switching the img tags in posts to be constructed vs stored statically? ?Any reason they couldn't just be built with the $site_url at the time, vs the $site_url at the time of the insertion into the post?
>
>
> It would fix one of the largest problems w/ moving a site from one location (domain) to another.

From elflop at googlemail.com  Wed Mar  3 18:46:20 2010
From: elflop at googlemail.com (elflop at googlemail.com)
Date: Wed, 03 Mar 2010 18:46:20 +0000
Subject: [wp-hackers] Post Thumbnail & Twenty Ten theme
In-Reply-To: <a7b7a8481003030948n5ffaf45ape02d0b3882c71596@mail.gmail.com>
Message-ID: <00504502e497f083640480e9e5cc@google.com>

On , Will Anderson <will at itsananderson.com> wrote:
> I tend to agree with Jeff. This is aa really innovative use of post
> thumbnails. Beyond just being cool though, I think this features is
> important because theme authors need to see that post thumbnails have a
> broader use than is currently being utilized. Hopefully theme authors will
> look at twentyten and go "Hey, I hadn't thought about that use of post
> thumbnails. That makes me wonder, what if I used them *this* way?". IMO
> default themes should spark innovation, not be the end all solution.

well it is certainly different, I just think that using the thumbnail is  
wrong, and that another method could have been implemented for changing the  
header image on a single page. I can't believe that the thumbnail feature  
was designed for this sort of usage, and was surprised when it happened.  
The average WP user is going to wonder what happened, and the only option  
is to remove the thumbnail from a page.

> That being said, I think site owners should be able to choose whether to  
> use
> their post thumbnails in this way or not. Twenty Ten is still being
> developed, so this could be in the works, but right now it lacks a good
> options page (beyond the ones now being provided by core). There's also no
> good filter that would allow child themes (or plugins) to cleanly change
> this "option" (and other "options" throughout the theme). Again, this  
> could
> simply be because Twenty Ten isn't finished yet.

I certainly hope so, and I don't want to knock the theme, in general I like  
it a lot, and may even use it myself!

From mbarr at interactiveone.com  Wed Mar  3 18:58:43 2010
From: mbarr at interactiveone.com (Matthew Barr)
Date: Wed, 3 Mar 2010 13:58:43 -0500
Subject: [wp-hackers] Image URL changes
In-Reply-To: <161617691003031032w193ae73by8e38d8b0c141b76c@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com>
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com>
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com>
	<DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com>
	<161617691003031032w193ae73by8e38d8b0c141b76c@mail.gmail.com>
Message-ID: <47C60A56-1887-42FF-ABFE-D15E48A7D72F@interactiveone.com>

On Mar 3, 2010, at 1:32 PM, Otto wrote:

> How would you refer to the image?
> 
> You could do something like it with a shortcode, but you still need a
> way to uniquely identify the image. Post ID's change when moving blog
> content around.


Just something that stores the img tag, and on render, inserts the actual site url, vs hard coding the site url in.  It would be the same as the current method for storing the tag, but just be re-rendered to the current URL.

In implementation, it might be a short code, with the file path - 

[wpimg  files/2010/02/image.jpg]


Or anything else that y'all think is a good way to implement it.    

This is only to deal w/ the $SITE_URL changing, or the location to uploaded image changing.  (Turning on a CDN vs having it off for initial testing, etc.)

In short: don't try to rewrite the entire image insertion code- just modify it a teensy bit to adapt to site / url change, just like we do w/ constructed links.  


(My experience is on running the servers, vs the actual mechanics of how things are done in the code, or even on the front end.  I apologize if i'm missing an obvious problem, but after trying to migrate sites between domains because someone has decided they liked a new name better.. It just seems that we handle site URL changes handily.  I'd like to extend that to images, and other assets that are embedded into the posts.)


Matthew

------------------
Matthew Barr
InteractiveOne  - Senior System Engineer
e:mbarr at interactiveone.com
c:646.727.0535
aim: matthewbarr1





From otto at ottodestruct.com  Wed Mar  3 20:29:17 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 3 Mar 2010 14:29:17 -0600
Subject: [wp-hackers] Image URL changes
In-Reply-To: <47C60A56-1887-42FF-ABFE-D15E48A7D72F@interactiveone.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com> 
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com> 
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com> 
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com> 
	<DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com> 
	<161617691003031032w193ae73by8e38d8b0c141b76c@mail.gmail.com> 
	<47C60A56-1887-42FF-ABFE-D15E48A7D72F@interactiveone.com>
Message-ID: <161617691003031229j4bc36164i63f547beab239a4b@mail.gmail.com>

On Wed, Mar 3, 2010 at 12:58 PM, Matthew Barr <mbarr at interactiveone.com> wrote:
> In implementation, it might be a short code, with the file path -
>
> [wpimg ?files/2010/02/image.jpg]
>
> Or anything else that y'all think is a good way to implement it.

I like it, but it's not generic enough for me.

How about if you did something like this in a post?
<img src="[homeurl]/wp-content/uploads/whatever.jpg" />

[homeurl] is simply replaced with the home url. The shortcode handler
for that is like two lines of code:
function homeurl_shortcode() { return get_option('siteurl'); }
add_shortcode('homeurl', 'homeurl_shortcode');

Or, if you want it more specific, have [homeurl], [contenturl],
[adminurl], etc... Whatever makes sense.

-Otto

From wp at andrewnacin.com  Wed Mar  3 20:43:13 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 3 Mar 2010 15:43:13 -0500
Subject: [wp-hackers] Image URL changes
In-Reply-To: <161617691003031229j4bc36164i63f547beab239a4b@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com> 
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com> 
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com> 
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com> 
	<DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com> 
	<161617691003031032w193ae73by8e38d8b0c141b76c@mail.gmail.com> 
	<47C60A56-1887-42FF-ABFE-D15E48A7D72F@interactiveone.com> 
	<161617691003031229j4bc36164i63f547beab239a4b@mail.gmail.com>
Message-ID: <4cc4de141003031243k23b145f2uf235168cda2d19aa@mail.gmail.com>

One thing I would recommend is to no longer use
get_option('siteurl') or get_option('home'). For siteurl, use site_url(),
and for home, use home_url(). These functions handle SSL, as does
admin_url().

They're also cleaner to write, and they accept a parameter which then
appends a path for you.

get_bloginfo('url') and get_bloginfo('wpurl') are now aliases for home_url()
and site_url(), perspectively.

Adding to this, there has been some talk of an image shortcode. It
originated as a possible solution to implementing trash for media, but it
hasn't gained much traction yet.

On Wed, Mar 3, 2010 at 3:29 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Mar 3, 2010 at 12:58 PM, Matthew Barr <mbarr at interactiveone.com>
> wrote:
> > In implementation, it might be a short code, with the file path -
> >
> > [wpimg  files/2010/02/image.jpg]
> >
> > Or anything else that y'all think is a good way to implement it.
>
> I like it, but it's not generic enough for me.
>
> How about if you did something like this in a post?
> <img src="[homeurl]/wp-content/uploads/whatever.jpg" />
>
> [homeurl] is simply replaced with the home url. The shortcode handler
> for that is like two lines of code:
> function homeurl_shortcode() { return get_option('siteurl'); }
> add_shortcode('homeurl', 'homeurl_shortcode');
>
> Or, if you want it more specific, have [homeurl], [contenturl],
> [adminurl], etc... Whatever makes sense.
>
> -Otto

From scribu at gmail.com  Wed Mar  3 20:54:14 2010
From: scribu at gmail.com (scribu)
Date: Wed, 3 Mar 2010 22:54:14 +0200
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
In-Reply-To: <DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com>
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com>
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com>
	<DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com>
Message-ID: <349fe48b1003031254u3d847869ueb4c61d56b20eec7@mail.gmail.com>

On Wed, Mar 3, 2010 at 8:05 PM, Matthew Barr <mbarr at interactiveone.com>wrote:

> In this vein:   Has anyone ever considered switching the img tags in posts
> to be constructed vs stored statically?  Any reason they couldn't just be
> built with the $site_url at the time, vs the $site_url at the time of the
> insertion into the post?
>
>
> It would fix one of the largest problems w/ moving a site from one location
> (domain) to another.
>

Yes, an image shortcode is being considered:

http://core.trac.wordpress.org/ticket/11394


-- 
http://scribu.net

From piemanek at gmail.com  Wed Mar  3 21:13:21 2010
From: piemanek at gmail.com (Simon B)
Date: Wed, 3 Mar 2010 21:13:21 +0000
Subject: [wp-hackers] get_userdata and _fill_user causing huge number of
	database queries
Message-ID: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com>

I've made a site for a member organisation with (currently) 50 users, each
of whom has one post (a kind of profile post).

When monitoring the site I noticed that a lot more database queries than I
expected were being made. On investigation it turns out that for every post
retrieved, the following two db queries are made: get_userdata and
_fill_user. The first is on the users table, the second on usermeta.

This means that where I was expecting one query there are in fact 101! When
they get more members things are going to get very painful indeed...

Is there any way I can hook into an action somewhere to stop these two
queries from happening, as I have no use whatsoever for the data they're
returning?

Cheers
Simon

From scribu at gmail.com  Wed Mar  3 21:14:16 2010
From: scribu at gmail.com (scribu)
Date: Wed, 3 Mar 2010 23:14:16 +0200
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
Message-ID: <349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>

On Wed, Mar 3, 2010 at 6:54 PM, Dan Phiffer <dan at phiffer.org> wrote:

>
> On Mar 3, 2010, at 11:40 AM, Dave Viner wrote:
>
> > After all, when a user is going from page to page, they usually want to
> see the
> > latest information, not necessarily the identical information to what was
> > shown before.
>
> This is one assumption my alternative is trying to draw attention to. It is
> true that *usually* pagination is used this way, but what happens if I
> bookmark one of these views for later, or if I create a short URL to page
> 40? I'm trying to link to the particular content on those pages, not the
> position from the newest content. The particular content on these pages will
> change over time and my links will rot.
>


That sounds naive. It's like trying to link to a portion of the twitter
stream. Of course you're going to get link rot.

A better idea would be to link to a group of posts posted on a certain date:

http://example.com/2009/11/20


-- 
http://scribu.net

From wp at andrewnacin.com  Wed Mar  3 21:16:56 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 3 Mar 2010 16:16:56 -0500
Subject: [wp-hackers] get_userdata and _fill_user causing huge number of
	database queries
In-Reply-To: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com>
References: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com>
Message-ID: <4cc4de141003031316y7a4089eao3951948bcea92d2b@mail.gmail.com>


From dangayle at gmail.com  Wed Mar  3 21:34:35 2010
From: dangayle at gmail.com (Dan Gayle)
Date: Wed, 3 Mar 2010 13:34:35 -0800
Subject: [wp-hackers] Trackbacks as background process
In-Reply-To: <161617691003031026n665ecb79i40d4bb9ad5f90427@mail.gmail.com>
References: <74a8f8d81002261342t72eca2aaka1098afa6c101264@mail.gmail.com>
	<349fe48b1002261558t55e5adfbueaf5bfe2a2b07900@mail.gmail.com>
	<74a8f8d81003030927k7d707ec9i84a18238ce4655dd@mail.gmail.com>
	<161617691003031026n665ecb79i40d4bb9ad5f90427@mail.gmail.com>
Message-ID: <74a8f8d81003031334v20ed6f73wcf5a5b79c69d63b1@mail.gmail.com>

On Wed, Mar 3, 2010 at 10:26 AM, Otto <otto at ottodestruct.com> wrote:

> That text is old. It doesn't do that anymore. It uses wp-cron. Check
> the code yourself if you like. Specifically, you'll want to look at
> the _publish_post_hook() function in wp-admin/post.php.

Thanks for the info. I'll look into what we're doing with that.

From wordpress at dd32.id.au  Wed Mar  3 21:42:27 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Thu, 04 Mar 2010 08:42:27 +1100
Subject: [wp-hackers] get_userdata and _fill_user causing huge number of
 database queries
In-Reply-To: <4cc4de141003031316y7a4089eao3951948bcea92d2b@mail.gmail.com>
References: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com>
	<4cc4de141003031316y7a4089eao3951948bcea92d2b@mail.gmail.com>
Message-ID: <op.u80g81pcspxmuu@ho.st>

This question really needs some more information before anyone can really  
comment on that.

The main question is WHY are the queries being made for the author details  
when viewing the singular page.

Do you have a listing of all the authors on the page? If so, thats  
probably what it is, it needs to load all the details for the users to  
display it.

Check the query log, specifically, what functions are calling it. If you  
enable WP_DEBUG and SAVE_QUERIES, then look at $wpdb->queries, you'll see  
the full list of queries, and what functions called it (with a backtrace  
too), Looking at that should help determine which function is calling the  
user list, if thats not enough, you might be able to rewrite something to  
use the new functions mentioned in that changeset..

On Thu, 04 Mar 2010 08:16:56 +1100, Andrew Nacin <wp at andrewnacin.com>  
wrote:

> From about two hours ago:
> http://core.trac.wordpress.org/changeset/13576
>
> On Wed, Mar 3, 2010 at 4:13 PM, Simon B <piemanek at gmail.com> wrote:
>
>> I've made a site for a member organisation with (currently) 50 users,  
>> each
>> of whom has one post (a kind of profile post).
>>
>> When monitoring the site I noticed that a lot more database queries  
>> than I
>> expected were being made. On investigation it turns out that for every  
>> post
>> retrieved, the following two db queries are made: get_userdata and
>> _fill_user. The first is on the users table, the second on usermeta.
>>
>> This means that where I was expecting one query there are in fact 101!  
>> When
>> they get more members things are going to get very painful indeed...
>>
>> Is there any way I can hook into an action somewhere to stop these two
>> queries from happening, as I have no use whatsoever for the data they're
>> returning?
>>
>> Cheers
>> Simon
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Dion Hulse / dd32

Contact:
  e: contact at dd32.id.au
  msn: msn at d32.id.au
  skype: theonly_dd32
  Web: http://dd32.id.au/

From dan at phiffer.org  Wed Mar  3 21:46:12 2010
From: dan at phiffer.org (Dan Phiffer)
Date: Wed, 3 Mar 2010 16:46:12 -0500
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
	<349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
Message-ID: <5A88042F-3454-4B49-BA4C-71D34291F086@phiffer.org>


On Mar 3, 2010, at 4:14 PM, scribu wrote:

> On Wed, Mar 3, 2010 at 6:54 PM, Dan Phiffer <dan at phiffer.org> wrote:
> 
>> 
>> On Mar 3, 2010, at 11:40 AM, Dave Viner wrote:
>> 
>>> After all, when a user is going from page to page, they usually want to
>> see the
>>> latest information, not necessarily the identical information to what was
>>> shown before.
>> 
>> This is one assumption my alternative is trying to draw attention to. It is
>> true that *usually* pagination is used this way, but what happens if I
>> bookmark one of these views for later, or if I create a short URL to page
>> 40? I'm trying to link to the particular content on those pages, not the
>> position from the newest content. The particular content on these pages will
>> change over time and my links will rot.
>> 
> 
> 
> That sounds naive. It's like trying to link to a portion of the twitter
> stream. Of course you're going to get link rot.

We can agree to disagree about this.

See also: http://www.slideshare.net/glusman/lean-usability slide #6
See also: http://www.readwriteweb.com/archives/facebook_wants_to_be_your_one_true_login.php


> A better idea would be to link to a group of posts posted on a certain date:
> 
> http://example.com/2009/11/20

But anyway, I like your idea better. Seems like I may be able to implement this with query_posts and the 'posts_where' filter.


Thanks,
-Dan


From mikeschinkel at newclarity.net  Wed Mar  3 21:48:03 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 3 Mar 2010 16:48:03 -0500
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
	<349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
Message-ID: <D58B170F-E3DA-40C4-A89F-911D54ABD498@newclarity.net>

On Mar 3, 2010, at 4:14 PM, scribu wrote:
> On Wed, Mar 3, 2010 at 6:54 PM, Dan Phiffer <dan at phiffer.org> wrote:
>> On Mar 3, 2010, at 11:40 AM, Dave Viner wrote:
>>> After all, when a user is going from page to page, they usually want to
>> see the
>>> latest information, not necessarily the identical information to what was
>>> shown before.
>> This is one assumption my alternative is trying to draw attention to. It is
>> true that *usually* pagination is used this way, but what happens if I
>> bookmark one of these views for later, or if I create a short URL to page
>> 40? I'm trying to link to the particular content on those pages, not the
>> position from the newest content. The particular content on these pages will
>> change over time and my links will rot.
> That sounds naive. It's like trying to link to a portion of the twitter
> stream. Of course you're going to get link rot.
> 
> A better idea would be to link to a group of posts posted on a certain date:
> 
> http://example.com/2009/11/20

While I agree the latter makes more sense, I wouldn't say the former is naive.   Sadly, too many people just don't get URLs as evidenced by the ReadWriteWeb/Facebook Login fiasco:

http://jonoscript.wordpress.com/2010/02/18/some-people-cant-read-urls/

It is really incumbent on the site designer to create URLs that won't rot when bookmarked, as much as they reasonable can. In this case the site designer is the core WordPress team, not individual site designers.

Twitter fixed this (somewhat) by loading pages on the same URL via AJAX.  They could have used AJAX to also annotate the URL with a hash indicating the start and end range and then had the hash load the expected values via AJAX. Even better would be to change the URL path when the new values are loaded but I can't remember for sure if that's possible (I know changing the hast is possible because I've used that technique for a video gallery before.). If they had done these things their links would not rot.

Of course for people who want to bookmark "current list", this isn't idea so I would lean towards annotating the URL if the user goes to page 2, etc.. Too bad browsers don't give AJAX a hook for when someone cuts or copies a URL from the browser bar.

-Mike 

From tareq1988 at gmail.com  Wed Mar  3 22:02:40 2010
From: tareq1988 at gmail.com (Tareq Hasan)
Date: Thu, 4 Mar 2010 04:02:40 +0600
Subject: [wp-hackers] Working with date field in comment form
Message-ID: <9140446a1003031402r171dad41nb7e2d8aded7ea832@mail.gmail.com>

Hi,
I am trying to add date field to my comment form. There will be fields like
*Day*, *Month* and *Year*. I want to validate the dates with checkdate()
function for a valid date. The comment will be posted to db as supplied in
the form. I want to do this with default form post action
site_url/wp-comments-post.php . But i didn't find any way to hooking the *
$commentdata['comment_date']* variable.

How can i do that, please give me suggestions.

Thanks
--------------------------------------------
Best regards
Tareq Hasan
My Blog (http://tareq.weDevs.com)
Follow me: (http://twitter.com/tareq_cse)

From dave at vinertech.com  Wed Mar  3 22:07:46 2010
From: dave at vinertech.com (Dave Viner)
Date: Wed, 3 Mar 2010 14:07:46 -0800
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <D58B170F-E3DA-40C4-A89F-911D54ABD498@newclarity.net>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
	<349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
	<D58B170F-E3DA-40C4-A89F-911D54ABD498@newclarity.net>
Message-ID: <9a39b88d1003031407r56571061m2b29014e609c6c7@mail.gmail.com>

Regardless of the better/worse solution for URL structure, it seems
reasonable that WP should provide a relatively simple way to override the
paging schema used.

I had to implement a bunch of code to change the /page/N to anything else.
 It should be pluggable.

Dave Viner

On Wed, Mar 3, 2010 at 1:48 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> On Mar 3, 2010, at 4:14 PM, scribu wrote:
> > On Wed, Mar 3, 2010 at 6:54 PM, Dan Phiffer <dan at phiffer.org> wrote:
> >> On Mar 3, 2010, at 11:40 AM, Dave Viner wrote:
> >>> After all, when a user is going from page to page, they usually want to
> >> see the
> >>> latest information, not necessarily the identical information to what
> was
> >>> shown before.
> >> This is one assumption my alternative is trying to draw attention to. It
> is
> >> true that *usually* pagination is used this way, but what happens if I
> >> bookmark one of these views for later, or if I create a short URL to
> page
> >> 40? I'm trying to link to the particular content on those pages, not the
> >> position from the newest content. The particular content on these pages
> will
> >> change over time and my links will rot.
> > That sounds naive. It's like trying to link to a portion of the twitter
> > stream. Of course you're going to get link rot.
> >
> > A better idea would be to link to a group of posts posted on a certain
> date:
> >
> > http://example.com/2009/11/20
>
> While I agree the latter makes more sense, I wouldn't say the former is
> naive.   Sadly, too many people just don't get URLs as evidenced by the
> ReadWriteWeb/Facebook Login fiasco:
>
> http://jonoscript.wordpress.com/2010/02/18/some-people-cant-read-urls/
>
> It is really incumbent on the site designer to create URLs that won't rot
> when bookmarked, as much as they reasonable can. In this case the site
> designer is the core WordPress team, not individual site designers.
>
> Twitter fixed this (somewhat) by loading pages on the same URL via AJAX.
>  They could have used AJAX to also annotate the URL with a hash indicating
> the start and end range and then had the hash load the expected values via
> AJAX. Even better would be to change the URL path when the new values are
> loaded but I can't remember for sure if that's possible (I know changing the
> hast is possible because I've used that technique for a video gallery
> before.). If they had done these things their links would not rot.
>
> Of course for people who want to bookmark "current list", this isn't idea
> so I would lean towards annotating the URL if the user goes to page 2, etc..
> Too bad browsers don't give AJAX a hook for when someone cuts or copies a
> URL from the browser bar.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Wed Mar  3 22:17:40 2010
From: scribu at gmail.com (scribu)
Date: Thu, 4 Mar 2010 00:17:40 +0200
Subject: [wp-hackers] Trackbacks as background process
In-Reply-To: <74a8f8d81003031334v20ed6f73wcf5a5b79c69d63b1@mail.gmail.com>
References: <74a8f8d81002261342t72eca2aaka1098afa6c101264@mail.gmail.com>
	<349fe48b1002261558t55e5adfbueaf5bfe2a2b07900@mail.gmail.com>
	<74a8f8d81003030927k7d707ec9i84a18238ce4655dd@mail.gmail.com>
	<161617691003031026n665ecb79i40d4bb9ad5f90427@mail.gmail.com>
	<74a8f8d81003031334v20ed6f73wcf5a5b79c69d63b1@mail.gmail.com>
Message-ID: <349fe48b1003031417g1d2e7d74o289e6dfbe1138863@mail.gmail.com>

The _publish_post_hook() is actually in wp-includes/post.php

Just a heads-up.

-- 
http://scribu.net

From scribu at gmail.com  Wed Mar  3 22:19:53 2010
From: scribu at gmail.com (scribu)
Date: Thu, 4 Mar 2010 00:19:53 +0200
Subject: [wp-hackers] Working with date field in comment form
In-Reply-To: <9140446a1003031402r171dad41nb7e2d8aded7ea832@mail.gmail.com>
References: <9140446a1003031402r171dad41nb7e2d8aded7ea832@mail.gmail.com>
Message-ID: <349fe48b1003031419g7fb51449o5aee072711d5173c@mail.gmail.com>

Why not use jQuery UI Datepicker instead?

http://jqueryui.com/demos/datepicker/


-- 
http://scribu.net

From otto at ottodestruct.com  Wed Mar  3 22:22:32 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 3 Mar 2010 16:22:32 -0600
Subject: [wp-hackers] Image URL changes
In-Reply-To: <4cc4de141003031243k23b145f2uf235168cda2d19aa@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com> 
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com> 
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com> 
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com> 
	<DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com> 
	<161617691003031032w193ae73by8e38d8b0c141b76c@mail.gmail.com> 
	<47C60A56-1887-42FF-ABFE-D15E48A7D72F@interactiveone.com> 
	<161617691003031229j4bc36164i63f547beab239a4b@mail.gmail.com> 
	<4cc4de141003031243k23b145f2uf235168cda2d19aa@mail.gmail.com>
Message-ID: <161617691003031422g7d12bc18t590bb59ce8aa8fff@mail.gmail.com>

Core needs to be changed to have that everywhere then. I was looking
there to find the right way, found that method.

-Otto



On Wed, Mar 3, 2010 at 2:43 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
> One thing I would recommend is to no longer use
> get_option('siteurl') or get_option('home'). For siteurl, use site_url(),
> and for home, use home_url(). These functions handle SSL, as does
> admin_url().
>
> They're also cleaner to write, and they accept a parameter which then
> appends a path for you.
>
> get_bloginfo('url') and get_bloginfo('wpurl') are now aliases for home_url()
> and site_url(), perspectively.
>
> Adding to this, there has been some talk of an image shortcode. It
> originated as a possible solution to implementing trash for media, but it
> hasn't gained much traction yet.
>
> On Wed, Mar 3, 2010 at 3:29 PM, Otto <otto at ottodestruct.com> wrote:
>
>> On Wed, Mar 3, 2010 at 12:58 PM, Matthew Barr <mbarr at interactiveone.com>
>> wrote:
>> > In implementation, it might be a short code, with the file path -
>> >
>> > [wpimg ?files/2010/02/image.jpg]
>> >
>> > Or anything else that y'all think is a good way to implement it.
>>
>> I like it, but it's not generic enough for me.
>>
>> How about if you did something like this in a post?
>> <img src="[homeurl]/wp-content/uploads/whatever.jpg" />
>>
>> [homeurl] is simply replaced with the home url. The shortcode handler
>> for that is like two lines of code:
>> function homeurl_shortcode() { return get_option('siteurl'); }
>> add_shortcode('homeurl', 'homeurl_shortcode');
>>
>> Or, if you want it more specific, have [homeurl], [contenturl],
>> [adminurl], etc... Whatever makes sense.
>>
>> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From tareq1988 at gmail.com  Wed Mar  3 22:23:19 2010
From: tareq1988 at gmail.com (Tareq Hasan)
Date: Thu, 4 Mar 2010 04:23:19 +0600
Subject: [wp-hackers] Working with date field in comment form
In-Reply-To: <349fe48b1003031419g7fb51449o5aee072711d5173c@mail.gmail.com>
References: <9140446a1003031402r171dad41nb7e2d8aded7ea832@mail.gmail.com> 
	<349fe48b1003031419g7fb51449o5aee072711d5173c@mail.gmail.com>
Message-ID: <9140446a1003031423v13680890k6ee5cc23258a7efa@mail.gmail.com>

Picking date is not the problem, but inserting is the problem :)
--------------------------------------------
Best regards
Tareq Hasan
My Blog (http://tareq.weDevs.com)
Follow me: (http://twitter.com/tareq_cse)


On Thu, Mar 4, 2010 at 4:19 AM, scribu <scribu at gmail.com> wrote:

> Why not use jQuery UI Datepicker instead?
>
> http://jqueryui.com/demos/datepicker/
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Mar  3 22:39:24 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 3 Mar 2010 16:39:24 -0600
Subject: [wp-hackers] Working with date field in comment form
In-Reply-To: <9140446a1003031402r171dad41nb7e2d8aded7ea832@mail.gmail.com>
References: <9140446a1003031402r171dad41nb7e2d8aded7ea832@mail.gmail.com>
Message-ID: <161617691003031439t7e6e36dkfd48d00b799fa1d3@mail.gmail.com>

On Wed, Mar 3, 2010 at 4:02 PM, Tareq Hasan <tareq1988 at gmail.com> wrote:
> Hi,
> I am trying to add date field to my comment form. There will be fields like
> *Day*, *Month* and *Year*. I want to validate the dates with checkdate()
> function for a valid date. The comment will be posted to db as supplied in
> the form. I want to do this with default form post action
> site_url/wp-comments-post.php . But i didn't find any way to hooking the *
> $commentdata['comment_date']* variable.
>
> How can i do that, please give me suggestions.

comment_date and comment_date_gmt get set in the wp_new_comment()
function. You can't override them before the comment gets inserted
into the database, but you can change them after the fact.

You would need to hook a function to wp_insert_comment and get the ID
of the comment. Then you could call wp_update_comment with your
changes to the dates and the ID and it would update the comment.

-Otto

From scribu at gmail.com  Wed Mar  3 22:43:04 2010
From: scribu at gmail.com (scribu)
Date: Thu, 4 Mar 2010 00:43:04 +0200
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <9a39b88d1003031407r56571061m2b29014e609c6c7@mail.gmail.com>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
	<349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
	<D58B170F-E3DA-40C4-A89F-911D54ABD498@newclarity.net>
	<9a39b88d1003031407r56571061m2b29014e609c6c7@mail.gmail.com>
Message-ID: <349fe48b1003031443t7f460537s64199aee2316e771@mail.gmail.com>

On Thu, Mar 4, 2010 at 12:07 AM, Dave Viner <dave at vinertech.com> wrote:

> Regardless of the better/worse solution for URL structure, it seems
> reasonable that WP should provide a relatively simple way to override the
> paging schema used.
>
> I had to implement a bunch of code to change the /page/N to anything else.
>  It should be pluggable.
>

If you're refering to the 'page' string, yeah, I agree that it should be
made easier to change. I've opened a ticket:

http://core.trac.wordpress.org/ticket/12507


-- 
http://scribu.net

From piemanek at gmail.com  Wed Mar  3 22:50:40 2010
From: piemanek at gmail.com (Simon B)
Date: Wed, 3 Mar 2010 22:50:40 +0000
Subject: [wp-hackers] get_userdata and _fill_user causing huge number of
	database queries
In-Reply-To: <op.u80g81pcspxmuu@ho.st>
References: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com>
	<4cc4de141003031316y7a4089eao3951948bcea92d2b@mail.gmail.com>
	<op.u80g81pcspxmuu@ho.st>
Message-ID: <65b196651003031450r1295f7cfg616f6ae1f20112ba@mail.gmail.com>

I've set up a test page as follows:

        query_posts( array(
                        'category'       => 1,
                        'meta_key'       => 'alpha-name',
                        'posts_per_page' => -1,
                        'order'          => 'ASC',
                        'orderby'        => 'meta_value',
                        'post_status'    => 'publish'
                        ) );

        if ( have_posts() ) {
            while ( have_posts() ) {
                the_post();
            }
        }

        foreach ( $wpdb->queries as $query ) {
            echo "<p>";
            print_r( $query );
            echo "</p>";
        }



For every post returned, those two db queries (get_userdata and _fill_user)
are taking place. From the debug output it looks to me that it's the_post()
that is calling them:

Array ( [0] => SELECT * FROM xn3t_users WHERE ID = 11 LIMIT 1 [1] =>
0.00041818618774414 [2] => require, require_once, include, the_post,
WP_Query->the_post, setup_postdata, get_userdata )

Array ( [0] => SELECT meta_key, meta_value FROM xn3t_usermeta WHERE user_id
= 11 [1] => 0.0011389255523682 [2] => require, require_once, include,
the_post, WP_Query->the_post, setup_postdata, get_userdata, _fill_user )

From dave at vinertech.com  Wed Mar  3 23:01:04 2010
From: dave at vinertech.com (Dave Viner)
Date: Wed, 3 Mar 2010 15:01:04 -0800
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <349fe48b1003031443t7f460537s64199aee2316e771@mail.gmail.com>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
	<349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
	<D58B170F-E3DA-40C4-A89F-911D54ABD498@newclarity.net>
	<9a39b88d1003031407r56571061m2b29014e609c6c7@mail.gmail.com>
	<349fe48b1003031443t7f460537s64199aee2316e771@mail.gmail.com>
Message-ID: <9a39b88d1003031501t48b5cad3ld4b7b6fcf1b094ad@mail.gmail.com>

Beyond just changing the text of '/page/' to something else, it seems like
the whole url pagination construction should be pluggable.  Something along
the lines of:

function generate_paginated_part ($page_number)
{
    // by default, we use '/page/N', but this can be overridden.
    return '/page/' . $page_number;
}

Or, if not a pluggable function, then at least a filter that passes the
current string, and the integer page number.

Dave Viner



On Wed, Mar 3, 2010 at 2:43 PM, scribu <scribu at gmail.com> wrote:

> On Thu, Mar 4, 2010 at 12:07 AM, Dave Viner <dave at vinertech.com> wrote:
>
> > Regardless of the better/worse solution for URL structure, it seems
> > reasonable that WP should provide a relatively simple way to override the
> > paging schema used.
> >
> > I had to implement a bunch of code to change the /page/N to anything
> else.
> >  It should be pluggable.
> >
>
> If you're refering to the 'page' string, yeah, I agree that it should be
> made easier to change. I've opened a ticket:
>
> http://core.trac.wordpress.org/ticket/12507
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Mar  3 23:02:01 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 3 Mar 2010 17:02:01 -0600
Subject: [wp-hackers] get_userdata and _fill_user causing huge number of
	database queries
In-Reply-To: <op.u80g81pcspxmuu@ho.st>
References: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com> 
	<4cc4de141003031316y7a4089eao3951948bcea92d2b@mail.gmail.com> 
	<op.u80g81pcspxmuu@ho.st>
Message-ID: <161617691003031502q697c8c8bjca861b409d3ad165@mail.gmail.com>

On Wed, Mar 3, 2010 at 3:42 PM, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
> This question really needs some more information before anyone can really
> comment on that.
>
> The main question is WHY are the queries being made for the author details
> when viewing the singular page.

The $authordata global gets populated with the user information when a
post is displayed. However, it's only for the single user of that
post.

The caching in trunk should reduce the number of queries to a minimum,
as both individual users and their metadata is cached.

-Otto

From wp at andrewnacin.com  Wed Mar  3 23:05:32 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 3 Mar 2010 18:05:32 -0500
Subject: [wp-hackers] Image URL changes
In-Reply-To: <161617691003031422g7d12bc18t590bb59ce8aa8fff@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com> 
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com> 
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com> 
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com> 
	<DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com> 
	<161617691003031032w193ae73by8e38d8b0c141b76c@mail.gmail.com> 
	<47C60A56-1887-42FF-ABFE-D15E48A7D72F@interactiveone.com> 
	<161617691003031229j4bc36164i63f547beab239a4b@mail.gmail.com> 
	<4cc4de141003031243k23b145f2uf235168cda2d19aa@mail.gmail.com> 
	<161617691003031422g7d12bc18t590bb59ce8aa8fff@mail.gmail.com>
Message-ID: <4cc4de141003031505n6e003884kdad643587c26372e@mail.gmail.com>

Work in progress. If anyone wants to assist:
http://core.trac.wordpress.org/ticket/9008

On Wed, Mar 3, 2010 at 5:22 PM, Otto <otto at ottodestruct.com> wrote:

> Core needs to be changed to have that everywhere then. I was looking
> there to find the right way, found that method.
>
> -Otto
>
>
>
> On Wed, Mar 3, 2010 at 2:43 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
> > One thing I would recommend is to no longer use
> > get_option('siteurl') or get_option('home'). For siteurl, use site_url(),
> > and for home, use home_url(). These functions handle SSL, as does
> > admin_url().
> >
> > They're also cleaner to write, and they accept a parameter which then
> > appends a path for you.
> >
> > get_bloginfo('url') and get_bloginfo('wpurl') are now aliases for
> home_url()
> > and site_url(), perspectively.
> >
> > Adding to this, there has been some talk of an image shortcode. It
> > originated as a possible solution to implementing trash for media, but it
> > hasn't gained much traction yet.
> >
> > On Wed, Mar 3, 2010 at 3:29 PM, Otto <otto at ottodestruct.com> wrote:
> >
> >> On Wed, Mar 3, 2010 at 12:58 PM, Matthew Barr <mbarr at interactiveone.com
> >
> >> wrote:
> >> > In implementation, it might be a short code, with the file path -
> >> >
> >> > [wpimg  files/2010/02/image.jpg]
> >> >
> >> > Or anything else that y'all think is a good way to implement it.
> >>
> >> I like it, but it's not generic enough for me.
> >>
> >> How about if you did something like this in a post?
> >> <img src="[homeurl]/wp-content/uploads/whatever.jpg" />
> >>
> >> [homeurl] is simply replaced with the home url. The shortcode handler
> >> for that is like two lines of code:
> >> function homeurl_shortcode() { return get_option('siteurl'); }
> >> add_shortcode('homeurl', 'homeurl_shortcode');
> >>
> >> Or, if you want it more specific, have [homeurl], [contenturl],
> >> [adminurl], etc... Whatever makes sense.
> >>
> >> -Otto
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Wed Mar  3 23:15:10 2010
From: scribu at gmail.com (scribu)
Date: Thu, 4 Mar 2010 01:15:10 +0200
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <9a39b88d1003031501t48b5cad3ld4b7b6fcf1b094ad@mail.gmail.com>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
	<349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
	<D58B170F-E3DA-40C4-A89F-911D54ABD498@newclarity.net>
	<9a39b88d1003031407r56571061m2b29014e609c6c7@mail.gmail.com>
	<349fe48b1003031443t7f460537s64199aee2316e771@mail.gmail.com>
	<9a39b88d1003031501t48b5cad3ld4b7b6fcf1b094ad@mail.gmail.com>
Message-ID: <349fe48b1003031515v5da3e2f8jf28020285acda8f0@mail.gmail.com>

On Thu, Mar 4, 2010 at 1:01 AM, Dave Viner <dave at vinertech.com> wrote:

> Beyond just changing the text of '/page/' to something else, it seems like
> the whole url pagination construction should be pluggable.  Something along
> the lines of:
>
> function generate_paginated_part ($page_number)
> {
>    // by default, we use '/page/N', but this can be overridden.
>    return '/page/' . $page_number;
> }
>
> Or, if not a pluggable function, then at least a filter that passes the
> current string, and the integer page number.
>
> Dave Viner
>

How (and why) would you change the structure of the pagination URL?

Could you provide a use-case?


-- 
http://scribu.net

From dave at vinertech.com  Wed Mar  3 23:42:33 2010
From: dave at vinertech.com (Dave Viner)
Date: Wed, 3 Mar 2010 15:42:33 -0800
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <349fe48b1003031515v5da3e2f8jf28020285acda8f0@mail.gmail.com>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
	<349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
	<D58B170F-E3DA-40C4-A89F-911D54ABD498@newclarity.net>
	<9a39b88d1003031407r56571061m2b29014e609c6c7@mail.gmail.com>
	<349fe48b1003031443t7f460537s64199aee2316e771@mail.gmail.com>
	<9a39b88d1003031501t48b5cad3ld4b7b6fcf1b094ad@mail.gmail.com>
	<349fe48b1003031515v5da3e2f8jf28020285acda8f0@mail.gmail.com>
Message-ID: <9a39b88d1003031542x28814ed5gaa5205b7ab07d2e8@mail.gmail.com>

Sure, I can provide 2.

One user wanted to have the URL structure be:
/category-name/N
where N is the page number.  In this case, the user wanted no "/page/"
string at all.  (This was done for SEO purposes.)

A second user wanted it to be more like:

/category-name/N/page?....

where N is the page number.  Here (more unusually) the user wanted the
'page' moniker to follow the page number for readability purposes.



From scribu at gmail.com  Wed Mar  3 23:46:59 2010
From: scribu at gmail.com (scribu)
Date: Thu, 4 Mar 2010 01:46:59 +0200
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <9a39b88d1003031542x28814ed5gaa5205b7ab07d2e8@mail.gmail.com>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
	<349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
	<D58B170F-E3DA-40C4-A89F-911D54ABD498@newclarity.net>
	<9a39b88d1003031407r56571061m2b29014e609c6c7@mail.gmail.com>
	<349fe48b1003031443t7f460537s64199aee2316e771@mail.gmail.com>
	<9a39b88d1003031501t48b5cad3ld4b7b6fcf1b094ad@mail.gmail.com>
	<349fe48b1003031515v5da3e2f8jf28020285acda8f0@mail.gmail.com>
	<9a39b88d1003031542x28814ed5gaa5205b7ab07d2e8@mail.gmail.com>
Message-ID: <349fe48b1003031546m13750344sfb1da3784c1f47c6@mail.gmail.com>

On Thu, Mar 4, 2010 at 1:42 AM, Dave Viner <dave at vinertech.com> wrote:

> From an architecture standpoint, it seems fairly reasonable (to me) to have
> a pagination scheme other than "/page/N".  In terms of implementation, it
> seems to only really require 2 components:
> 1. a mechanism for generating the pagination component given the page
> number.
> 2. a mechanism for generating the page number given a pagination component.
>
> These seem completely managable since the pagination logic is (or should
> be)
> confined to these 2 logic components.
>

They are. See the discussion on the ticket I mentioned earlier:


http://core.trac.wordpress.org/ticket/12507


-- 
http://scribu.net

From lists at hikarinet.info  Thu Mar  4 01:48:32 2010
From: lists at hikarinet.info (Hikari)
Date: Wed, 3 Mar 2010 22:48:32 -0300
Subject: [wp-hackers] Wordpress Plugin Repository not approving a plugin
References: <4B8BF29C.3020009@gmail.com><DF8A52F89A8D43709807B6A3CD254521@MAIN>
	<349fe48b1003011402l3131ec6ao6aec7748027a09d8@mail.gmail.com>
	<23DB682895674905A2DE7B13E2AE3077@MAIN>
	<161617691003020701x22254406uda28f19bff1d62de@mail.gmail.com>
Message-ID: <61E1CEFA5E3F443CB77C06DFD25CF0A9@MAIN>

I just submited the plugin once more.

As before, it's not being listed. There is no sign I submited it and it's on queue to be accepted.


Any idea what I can do to figure out why it's not being shown and not being accepted? :/


---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br


----- Original Message ----- 
From: "Otto" <otto at ottodestruct.com>
To: <wp-hackers at lists.automattic.com>
Sent: Tuesday, 02 March, 2010 12:01 PM
Subject: Re: [wp-hackers] Wordpress Plugin Repository not approving a plugin


| Your plugin request, if it still exists, will show up here:
| http://wordpress.org/extend/plugins/add/
|
| -Otto 


From jeffc at wptavern.com  Thu Mar  4 02:45:20 2010
From: jeffc at wptavern.com (Jeff Chandler)
Date: Wed, 03 Mar 2010 21:45:20 -0500
Subject: [wp-hackers] Wordpress Plugin Repository not approving a, plugin
Message-ID: <4B8F1EC0.30407@wptavern.com>

I would visit the #wordpress.com IRC channel and get in touch with Mark 
R as he is the one who handles the plugin repository. Find a way to get 
in touch with him first hand so you can sort out this issue with your 
plugin.

From mikeschinkel at newclarity.net  Thu Mar  4 05:58:15 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 4 Mar 2010 00:58:15 -0500
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <349fe48b1003031515v5da3e2f8jf28020285acda8f0@mail.gmail.com>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
	<349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
	<D58B170F-E3DA-40C4-A89F-911D54ABD498@newclarity.net>
	<9a39b88d1003031407r56571061m2b29014e609c6c7@mail.gmail.com>
	<349fe48b1003031443t7f460537s64199aee2316e771@mail.gmail.com>
	<9a39b88d1003031501t48b5cad3ld4b7b6fcf1b094ad@mail.gmail.com>
	<349fe48b1003031515v5da3e2f8jf28020285acda8f0@mail.gmail.com>
Message-ID: <299C585A-56B9-471A-B048-D0127FAFA198@newclarity.net>

On Mar 3, 2010, at 6:15 PM, scribu wrote:
> How (and why) would you change the structure of the pagination URL?
> 
> Could you provide a use-case?


Another use case would be to allow loading via AJAX.  So instead of /foo/page/2/ it could be:

/foo/#page2 or 
/foo/#101-120 or 
/foo/101-120/ (non-AJAX but post ids) 

It wouldn't be built into core but a plugin should be able to do if it wanted to.

-Mike

From wordpress at dd32.id.au  Thu Mar  4 08:28:07 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Thu, 04 Mar 2010 19:28:07 +1100
Subject: [wp-hackers] get_userdata and _fill_user causing huge number of
 database queries
In-Reply-To: <65b196651003031450r1295f7cfg616f6ae1f20112ba@mail.gmail.com>
References: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com>
	<4cc4de141003031316y7a4089eao3951948bcea92d2b@mail.gmail.com>
	<op.u80g81pcspxmuu@ho.st>
	<65b196651003031450r1295f7cfg616f6ae1f20112ba@mail.gmail.com>
Message-ID: <op.u81a45vzspxmuu@ho.st>

On Thu, 04 Mar 2010 09:50:40 +1100, Simon B <piemanek at gmail.com> wrote:
> I've set up a test page as follows:
  <snip>
> For every post returned, those two db queries (get_userdata and  
> _fill_user)
> are taking place. From the debug output it looks to me that it's  
> the_post()
> that is calling them:

Yes, Every time a post is displayed, the Author data is retrieved, which  
results in those queries, So if you query for ALL posts, you'll query for  
ALL users as well.

The test script is really the worst case scenario, I was under the  
impression you were seeing those 101 queries on the home page/blog page.

Whilst i havnt looked into trunk's user caching changed of late yet, It  
makes sense to mass-load/cache the user data in one swipe on get_posts  
where multiple authors are concerned.
-- 
Dion Hulse / dd32

Contact:
  e: contact at dd32.id.au
  msn: msn at d32.id.au
  skype: theonly_dd32
  Web: http://dd32.id.au/

From logikal16 at gmail.com  Thu Mar  4 13:17:38 2010
From: logikal16 at gmail.com (Matt)
Date: Thu, 4 Mar 2010 08:17:38 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <4B8DD200.2070108@gunters.org>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<000001caba52$7026b530$50741f90$@com> <4B8DD200.2070108@gunters.org>
Message-ID: <55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>

Are we planning on making a decision here, or is this more of a "WordPress
in an ideal world" discussion?

If we are planning on taking action, I agree with scribu, Austin, and Chris
Williams' points. Regardless of which table we store widgets in, I think it
can be agreed that widgets need to be treated like *REAL* content, and not
some serialized meta-garbage (as they currently are). If nothing else,
sticking widgets into the posts table makes them a lot more accessible to
the built-in search, if needed.

If you have 50 total text widgets on your site but are showing a page w/ 1
text widget, all 50 are getting loaded for that page regardless. That's
because WP needs to load the entire serialized string, de-serialize it, then
decide which widget(s) it needs. +1 on Austin's point of serialized data
getting easily corrupted.

I'll support WP regardless of the final decision, but we need to at least
get this ball rolling.

Matt

On Tue, Mar 2, 2010 at 10:05 PM, Dougal Campbell <dougal at gunters.org> wrote:

> On Mar 2 2010 4:50 PM, Brian Layman wrote:
>
>> [...] I really really wish we could have things like meta_key be a unique
>> value so
>>
>> that when I supply site_blog_meta_key the database is looking at one
>> specific unique value that it returns at near the speed of light. We're
>> way
>> past that point, but maybe we can stop adding even more generalization.
>>
>>
>
> In hindsight, I wish I *had* made the meta_key be unique. But at the time I
> wrote the postmeta feature, we didn't have the auto-serialization model in
> place. I wanted to be able to specify multiple values for the same key,
> without over-complicating the more common use-case of one-to-one key/value
> pairs.
>
> --
> Dougal Campbell <dougal at gunters.org>
> http://dougal.gunters.org/
> http://twitter.com/dougal
> http://twitual.com/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From bulk at thecodecave.com  Thu Mar  4 13:41:35 2010
From: bulk at thecodecave.com (Brian Layman)
Date: Thu, 4 Mar 2010 08:41:35 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>	<000001caba52$7026b530$50741f90$@com>
	<4B8DD200.2070108@gunters.org>
	<55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>
Message-ID: <001301cabba0$68f13480$3ad39d80$@com>

> Regardless of which table we store widgets in, I think it
> can be agreed that widgets need to be treated like *REAL* content, and not
> some serialized meta
I suspect you are right on that one.
- b


From piemanek at gmail.com  Thu Mar  4 14:19:50 2010
From: piemanek at gmail.com (Simon B)
Date: Thu, 4 Mar 2010 14:19:50 +0000
Subject: [wp-hackers] get_userdata and _fill_user causing huge number of
	database queries
In-Reply-To: <op.u81a45vzspxmuu@ho.st>
References: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com>
	<4cc4de141003031316y7a4089eao3951948bcea92d2b@mail.gmail.com>
	<op.u80g81pcspxmuu@ho.st>
	<65b196651003031450r1295f7cfg616f6ae1f20112ba@mail.gmail.com>
	<op.u81a45vzspxmuu@ho.st>
Message-ID: <65b196651003040619p7d13d6b3w29be275e632cbee4@mail.gmail.com>

> The test script is really the worst case scenario, I was under the
> impression you were seeing those 101 queries on the home page/blog page.
>
> Whilst i havnt looked into trunk's user caching changed of late yet, It
> makes sense to mass-load/cache the user data in one swipe on get_posts where
> multiple authors are concerned.
>
>

It's not a worst case for me, it's actual case! And it's likely to be the
most-visited page on the site...

I realise this is not your average use of WordPress, but if the user data
could be cached in one swipe that would be a big help.

Luckily the site is unlikely to see very high traffic so I'm confident our
server can cope fine, but obviously saving 100 db queries would be nice!

Thanks for your time,
Simon

From mpretty at voceconnect.com  Thu Mar  4 15:24:05 2010
From: mpretty at voceconnect.com (Michael Pretty)
Date: Thu, 04 Mar 2010 10:24:05 -0500
Subject: [wp-hackers] get_userdata and _fill_user causing huge number of
 database queries
In-Reply-To: <65b196651003040619p7d13d6b3w29be275e632cbee4@mail.gmail.com>
References: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com>	<4cc4de141003031316y7a4089eao3951948bcea92d2b@mail.gmail.com>	<op.u80g81pcspxmuu@ho.st>	<65b196651003031450r1295f7cfg616f6ae1f20112ba@mail.gmail.com>	<op.u81a45vzspxmuu@ho.st>
	<65b196651003040619p7d13d6b3w29be275e632cbee4@mail.gmail.com>
Message-ID: <4B8FD095.70303@voceconnect.com>

A couple of suggestions:

1.  Add paging to your listing so that you don't loop through 50+ posts 
on a single page.
2.  In WP 3.0 there has been a revamp of the user handling with 
caching.   At the beginning of this page, before you start your loop and 
calling the_post(), you can loop through $_GLOBAL['wp_query']->posts and 
get the user_ids that are needed to be cached.  Then you can use the new 
functionality for cache_users() to go ahead and cache the user data with 
a single query.

-prettyboymp

On 3/4/10 9:19 AM, Simon B wrote:
>> The test script is really the worst case scenario, I was under the
>> impression you were seeing those 101 queries on the home page/blog page.
>>
>> Whilst i havnt looked into trunk's user caching changed of late yet, It
>> makes sense to mass-load/cache the user data in one swipe on get_posts where
>> multiple authors are concerned.
>>
>>
>>      
> It's not a worst case for me, it's actual case! And it's likely to be the
> most-visited page on the site...
>
> I realise this is not your average use of WordPress, but if the user data
> could be cached in one swipe that would be a big help.
>
> Luckily the site is unlikely to see very high traffic so I'm confident our
> server can cope fine, but obviously saving 100 db queries would be nice!
>
> Thanks for your time,
> Simon
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    


From piemanek at gmail.com  Thu Mar  4 15:28:56 2010
From: piemanek at gmail.com (Simon B)
Date: Thu, 4 Mar 2010 15:28:56 +0000
Subject: [wp-hackers] get_userdata and _fill_user causing huge number of
	database queries
In-Reply-To: <4B8FD095.70303@voceconnect.com>
References: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com>
	<4cc4de141003031316y7a4089eao3951948bcea92d2b@mail.gmail.com>
	<op.u80g81pcspxmuu@ho.st>
	<65b196651003031450r1295f7cfg616f6ae1f20112ba@mail.gmail.com>
	<op.u81a45vzspxmuu@ho.st>
	<65b196651003040619p7d13d6b3w29be275e632cbee4@mail.gmail.com>
	<4B8FD095.70303@voceconnect.com>
Message-ID: <65b196651003040728h36a92e55td6c23cceddfe6497@mail.gmail.com>

> A couple of suggestions:

1.  Add paging to your listing so that you don't loop through 50+ posts on a
> single page.
> 2.  In WP 3.0 there has been a revamp of the user handling with caching.
> At the beginning of this page, before you start your loop and calling
> the_post(), you can loop through $_GLOBAL['wp_query']->posts and get the
> user_ids that are needed to be cached.  Then you can use the new
> functionality for cache_users() to go ahead and cache the user data with a
> single query.
>
>

thanks, that's very useful info. i'm really looking forward to 3.0 for lots
of reasons, now there's one more to add to my list.

i can't do number 1 unfortunately because all those posts have to be
displayed on one page - immovable customer requirement...

From jer at simianuprising.com  Thu Mar  4 15:52:17 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Thu, 4 Mar 2010 10:52:17 -0500
Subject: [wp-hackers] get_userdata and _fill_user causing huge number of
	database queries
In-Reply-To: <65b196651003040728h36a92e55td6c23cceddfe6497@mail.gmail.com>
References: <65b196651003031313s43bf1fbdn46a1d1f8843503c5@mail.gmail.com>
	<4cc4de141003031316y7a4089eao3951948bcea92d2b@mail.gmail.com>
	<op.u80g81pcspxmuu@ho.st>
	<65b196651003031450r1295f7cfg616f6ae1f20112ba@mail.gmail.com>
	<op.u81a45vzspxmuu@ho.st>
	<65b196651003040619p7d13d6b3w29be275e632cbee4@mail.gmail.com>
	<4B8FD095.70303@voceconnect.com>
	<65b196651003040728h36a92e55td6c23cceddfe6497@mail.gmail.com>
Message-ID: <e1202cb11003040752l7ceae4f8ma086a3db94ee514c@mail.gmail.com>

I have found this to be a really big problem overall, all those database
queries are a nightmare. I'm no MySQL expert, but I feel like if you're
likely to have more than 20 users 'displayed' on a given page (say you have
a sidebar widget that shows a twitter-style avatar list) then you're
probably better off loading every single user with one query at the start of
pageload (so that they get cached) rather than loading each one as they come
up.

For such features I've resorted to caching all user information in a
wp_options field and using that data in my widgets (which is annoying but
has other benefits like the potential to add properties to the user objects
and expect them in my cache).

FWIW, this is another reason why a proper get_users() system is needed. It
would be great if we could say at the start of a page
get_users('cap=edit_posts'), effectively loading and caching all users who
are liable to show up in the UI with one query.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From scribu at gmail.com  Thu Mar  4 21:04:32 2010
From: scribu at gmail.com (scribu)
Date: Thu, 4 Mar 2010 23:04:32 +0200
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<000001caba52$7026b530$50741f90$@com> <4B8DD200.2070108@gunters.org>
	<55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>
Message-ID: <349fe48b1003041304u3b46de0am77cc4ee54574b2c6@mail.gmail.com>

>
> If we are planning on taking action, I agree with scribu, Austin, and Chris
> Williams' points. Regardless of which table we store widgets in, I think it
> can be agreed that widgets need to be treated like *REAL* content, and not
> some serialized meta-garbage (as they currently are). If nothing else,
> sticking widgets into the posts table makes them a lot more accessible to
> the built-in search, if needed.
>
> If you have 50 total text widgets on your site but are showing a page w/ 1
> text widget, all 50 are getting loaded for that page regardless. That's
> because WP needs to load the entire serialized string, de-serialize it,
> then
> decide which widget(s) it needs. +1 on Austin's point of serialized data
> getting easily corrupted.
>

Completely agree.

I plan to open a ticket once we discuss more about the best way to store
widget instances individually.

Since I suppose a wp_widgets table is out of the question, I don't see a
better place than the wp_posts table.

A few questions remain:

*How should the widget type be stored?*

Some ideas:

- widget taxonomy
- row in postmeta

*
How should the widget options be stored?*

Some ideas:

- serialized array in post_content
- single serialized row in postmeta
- separate row in postmeta for each option


-- 
http://scribu.net

From zamoose at gmail.com  Thu Mar  4 22:00:58 2010
From: zamoose at gmail.com (Doug Stewart)
Date: Thu, 4 Mar 2010 17:00:58 -0500
Subject: [wp-hackers] Theme dev "cheat sheet" for 3.0 additions/changes?
Message-ID: <71ddd7491003041400h77c6b92dkb31cebd26ea4fc41@mail.gmail.com>

Is there a Codex page (or some other 3rd party reference) that
documents all the new code changes that theme devs could/should take
advantage of in WP3.0? I'm thinking in particular of the new
background and header selectors, site_url() and home_url() preferred
over get_option() calls , etc.

-- 
-Doug

From scribu at gmail.com  Fri Mar  5 01:21:33 2010
From: scribu at gmail.com (scribu)
Date: Fri, 5 Mar 2010 03:21:33 +0200
Subject: [wp-hackers] Theme dev "cheat sheet" for 3.0 additions/changes?
In-Reply-To: <71ddd7491003041400h77c6b92dkb31cebd26ea4fc41@mail.gmail.com>
References: <71ddd7491003041400h77c6b92dkb31cebd26ea4fc41@mail.gmail.com>
Message-ID: <349fe48b1003041721y2605bc27h331373576ec3c18d@mail.gmail.com>

On Fri, Mar 5, 2010 at 12:00 AM, Doug Stewart <zamoose at gmail.com> wrote:

> Is there a Codex page (or some other 3rd party reference) that
> documents all the new code changes that theme devs could/should take
> advantage of in WP3.0? I'm thinking in particular of the new
> background and header selectors, site_url() and home_url() preferred
> over get_option() calls , etc.
>


This is where all that jazz should be:

http://codex.wordpress.org/Version_3.0



-- 
http://scribu.net

From wp-hackers at striderweb.com  Fri Mar  5 02:21:41 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 4 Mar 2010 20:21:41 -0600
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <349fe48b1003041304u3b46de0am77cc4ee54574b2c6@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<000001caba52$7026b530$50741f90$@com>
	<4B8DD200.2070108@gunters.org>
	<55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>
	<349fe48b1003041304u3b46de0am77cc4ee54574b2c6@mail.gmail.com>
Message-ID: <71688321-5ED3-42EE-998B-6ECCAC3B790F@striderweb.com>


On Mar 4, 2010, at 3:04 PM, scribu wrote:

> I plan to open a ticket once we discuss more about the best way to store
> widget instances individually.
> 
> Since I suppose a wp_widgets table is out of the question, I don't see a
> better place than the wp_posts table.

Why is a widgets table out of the question?

I'm not agreeing with the push to treat widgets as a type of post.  They aren't data -- they're structure.  In essence they're part of the theme if nothing else.  A very flexible part of the theme, but still -- part of the theme.

They're not content, they're structure.  Treat it as what it is.

FWIW.

Stephen


-- 
Stephen Rider
http://striderweb.com/


From john.wp at onolan.org  Fri Mar  5 11:00:11 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Fri, 5 Mar 2010 11:00:11 +0000
Subject: [wp-hackers] Moving 'Upgrade' to Dashboard Menu
Message-ID: <56551EF5-9E53-4D95-885A-15D36501B216@onolan.org>

This does not work at all,

The way Wordpress is built - the menu items (posts/pages/links/etc)  
don't actually exist. When you click on one of these you're taken to  
the first submenu item, which is usually "edit".

The only time this doesn't happen is for the Dashboard and Comments  
menus, because they have no sub items.

By adding "upgrade" (or update) as a sub-menu of dashboard, you are  
automatically taken to this page when clicking on the parent  
"dashboard" menu item.

In short there is now no way to get back to the dashboard inside the  
admin panel unless you edit the url manually.

For the record, I'm not in favour of moving the upgrade menu item at  
all. It is a TYPE of tool, so it should really stay under Tools, it's  
not a TYPE of dashboard. Simply moving it higher up the menu does not  
make it more usable.

Cheers

John O'Nolan

From scribu at gmail.com  Fri Mar  5 12:25:48 2010
From: scribu at gmail.com (scribu)
Date: Fri, 5 Mar 2010 14:25:48 +0200
Subject: [wp-hackers] Moving 'Upgrade' to Dashboard Menu
In-Reply-To: <56551EF5-9E53-4D95-885A-15D36501B216@onolan.org>
References: <56551EF5-9E53-4D95-885A-15D36501B216@onolan.org>
Message-ID: <349fe48b1003050425v316a5c7cx93c7df6d63847012@mail.gmail.com>

On Fri, Mar 5, 2010 at 1:00 PM, John O'Nolan <john.wp at onolan.org> wrote:

> In short there is now no way to get back to the dashboard inside the admin
> panel unless you edit the url manually.
>

That's fixed now. See http://core.trac.wordpress.org/ticket/12517



> For the record, I'm not in favour of moving the upgrade menu item at all.
> It is a TYPE of tool, so it should really stay under Tools, it's not a TYPE
> of dashboard. Simply moving it higher up the menu does not make it more
> usable.
>

I agree that, conceptually, it belongs in the Tools menu.


-- 
http://scribu.net

From jane at automattic.com  Fri Mar  5 12:37:53 2010
From: jane at automattic.com (Jane Wells)
Date: Fri, 5 Mar 2010 12:37:53 +0000
Subject: [wp-hackers] Moving 'Upgrade' to Dashboard Menu
Message-ID: <7E2D3111-FE4E-4D90-A428-2294B6CC75BF@automattic.com>

From: John O'Nolan <john.wp at onolan.org>
The only time this doesn't happen is for the Dashboard and Comments
menus, because they have no sub items.

Hey John. Actually, both Dashboard and Comments often have submenus,  
thanks to plugins. WordPress.com has at least half a dozen submenus  
under dashboard. It was just an oversight in the move that we forgot  
to allow for a default sub. It's being fixed.
Jane



From gundersson at gmail.com  Fri Mar  5 13:28:12 2010
From: gundersson at gmail.com (Christian Gundersson)
Date: Fri, 5 Mar 2010 14:28:12 +0100
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
In-Reply-To: <349fe48b1003031254u3d847869ueb4c61d56b20eec7@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com>
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com>
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com>
	<DBD820A9-81FA-4702-B82E-71F9D57B33FB@interactiveone.com>
	<349fe48b1003031254u3d847869ueb4c61d56b20eec7@mail.gmail.com>
Message-ID: <d14758811003050528i1e9f52rf519dc1a54ce0e24@mail.gmail.com>

Hi guys!

Just wanted to thank everyone for the replys. Solved the problem by talking
to the webhost and rearranging the pointers(somehow, don't ask ;))

Regards
//Christian, B?ro2

From john.wp at onolan.org  Fri Mar  5 13:50:02 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Fri, 5 Mar 2010 13:50:02 +0000
Subject: [wp-hackers] Moving 'Upgrade' to Dashboard Menu
In-Reply-To: <7E2D3111-FE4E-4D90-A428-2294B6CC75BF@automattic.com>
References: <7E2D3111-FE4E-4D90-A428-2294B6CC75BF@automattic.com>
Message-ID: <38F96470-C6F0-4B53-AC00-1917F57516F9@onolan.org>

Hi Jane,
That does make a bit more sense taking that into account I guess -  
many thanks!

John




On 5 Mar 2010, at 12:37, Jane Wells wrote:

> From: John O'Nolan <john.wp at onolan.org>
> The only time this doesn't happen is for the Dashboard and Comments
> menus, because they have no sub items.
>
> Hey John. Actually, both Dashboard and Comments often have submenus,  
> thanks to plugins. WordPress.com has at least half a dozen submenus  
> under dashboard. It was just an oversight in the move that we forgot  
> to allow for a default sub. It's being fixed.
> Jane
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From logikal16 at gmail.com  Fri Mar  5 15:55:53 2010
From: logikal16 at gmail.com (Matt)
Date: Fri, 5 Mar 2010 10:55:53 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <71688321-5ED3-42EE-998B-6ECCAC3B790F@striderweb.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<000001caba52$7026b530$50741f90$@com> <4B8DD200.2070108@gunters.org>
	<55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>
	<349fe48b1003041304u3b46de0am77cc4ee54574b2c6@mail.gmail.com>
	<71688321-5ED3-42EE-998B-6ECCAC3B790F@striderweb.com>
Message-ID: <55c932671003050755n3c67e936j48fdd828b75cd852@mail.gmail.com>

Stephen,

The content vs. structure argument can go both ways. Text widgets contain
*content* that you manage through WordPress. Before this discussion spirals,
I agree that wp_posts isn't the best place to put widgets.

My point from earlier was that I'd prefer them *not* be stored as a big
serialized string.

Widgets don't really fit into the posts table (as you and Otto mentioned),
and I dislike the possibility of wp_posts columns being re-purposed to store
data it wasn't meant to handle. Creating a wp_widgets table sounds
reasonable.

BTW, since you're adamant against storing structure in wp_posts, what are
your thoughts on how the new menu system stores its data?

Matt

On Thu, Mar 4, 2010 at 9:21 PM, Stephen Rider <wp-hackers at striderweb.com>wrote:

>
> On Mar 4, 2010, at 3:04 PM, scribu wrote:
>
> > I plan to open a ticket once we discuss more about the best way to store
> > widget instances individually.
> >
> > Since I suppose a wp_widgets table is out of the question, I don't see a
> > better place than the wp_posts table.
>
> Why is a widgets table out of the question?
>
> I'm not agreeing with the push to treat widgets as a type of post.  They
> aren't data -- they're structure.  In essence they're part of the theme if
> nothing else.  A very flexible part of the theme, but still -- part of the
> theme.
>
> They're not content, they're structure.  Treat it as what it is.
>
> FWIW.
>
> Stephen
>
>
> --
> Stephen Rider
> http://striderweb.com/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Fri Mar  5 18:06:29 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 5 Mar 2010 13:06:29 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <55c932671003050755n3c67e936j48fdd828b75cd852@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<000001caba52$7026b530$50741f90$@com>
	<4B8DD200.2070108@gunters.org>
	<55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>
	<349fe48b1003041304u3b46de0am77cc4ee54574b2c6@mail.gmail.com>
	<71688321-5ED3-42EE-998B-6ECCAC3B790F@striderweb.com>
	<55c932671003050755n3c67e936j48fdd828b75cd852@mail.gmail.com>
Message-ID: <14C2A95B-94BF-41DF-8C0C-E0BA581D3D42@newclarity.net>

What exactly is being proposed?  Storing the widget *class* (i.e. the information about a text widget) or storing the widget *instance* (i.e. the text that the text widget will display)?

If the former then yes the wp_posts table is the wrong place.  If the latter then the wp_posts table is the right place because widget instances present content. And while the text widget is obvious other widgets are just as much content as text widgets.  If I have a list of events pulled from an API, for example, that list of events is content even though dynamically generated.

So my vote is that widgets should go into wp_posts because they are content.

-Mike
P.S. This begs a larger question of dynamically generated content, which many widgets produce.  Pages with dynamically generated content are also content yet they don't show up when searched.  So the question grows to become how to you recognize dynamically generated content in searches because people searching don't care how content is generated.


On Mar 5, 2010, at 10:55 AM, Matt wrote:

> Stephen,
> 
> The content vs. structure argument can go both ways. Text widgets contain
> *content* that you manage through WordPress. Before this discussion spirals,
> I agree that wp_posts isn't the best place to put widgets.
> 
> My point from earlier was that I'd prefer them *not* be stored as a big
> serialized string.
> 
> Widgets don't really fit into the posts table (as you and Otto mentioned),
> and I dislike the possibility of wp_posts columns being re-purposed to store
> data it wasn't meant to handle. Creating a wp_widgets table sounds
> reasonable.
> 
> BTW, since you're adamant against storing structure in wp_posts, what are
> your thoughts on how the new menu system stores its data?
> 
> Matt
> 
> On Thu, Mar 4, 2010 at 9:21 PM, Stephen Rider <wp-hackers at striderweb.com>wrote:
> 
>> 
>> On Mar 4, 2010, at 3:04 PM, scribu wrote:
>> 
>>> I plan to open a ticket once we discuss more about the best way to store
>>> widget instances individually.
>>> 
>>> Since I suppose a wp_widgets table is out of the question, I don't see a
>>> better place than the wp_posts table.
>> 
>> Why is a widgets table out of the question?
>> 
>> I'm not agreeing with the push to treat widgets as a type of post.  They
>> aren't data -- they're structure.  In essence they're part of the theme if
>> nothing else.  A very flexible part of the theme, but still -- part of the
>> theme.
>> 
>> They're not content, they're structure.  Treat it as what it is.
>> 
>> FWIW.
>> 
>> Stephen
>> 
>> 
>> --
>> Stephen Rider
>> http://striderweb.com/
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From zamoose at gmail.com  Fri Mar  5 18:36:21 2010
From: zamoose at gmail.com (Doug Stewart)
Date: Fri, 5 Mar 2010 13:36:21 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <14C2A95B-94BF-41DF-8C0C-E0BA581D3D42@newclarity.net>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<000001caba52$7026b530$50741f90$@com> <4B8DD200.2070108@gunters.org>
	<55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>
	<349fe48b1003041304u3b46de0am77cc4ee54574b2c6@mail.gmail.com>
	<71688321-5ED3-42EE-998B-6ECCAC3B790F@striderweb.com>
	<55c932671003050755n3c67e936j48fdd828b75cd852@mail.gmail.com>
	<14C2A95B-94BF-41DF-8C0C-E0BA581D3D42@newclarity.net>
Message-ID: <71ddd7491003051036yfd2ef50ua3e6f10c3cf406f8@mail.gmail.com>

On 3/5/10, Mike Schinkel <mikeschinkel at newclarity.net> wrote:
> What exactly is being proposed?  Storing the widget *class* (i.e. the
> information about a text widget) or storing the widget *instance* (i.e. the
> text that the text widget will display)?
>
> If the former then yes the wp_posts table is the wrong place.  If the latter
> then the wp_posts table is the right place because widget instances present
> content. And while the text widget is obvious other widgets are just as much
> content as text widgets.  If I have a list of events pulled from an API, for
> example, that list of events is content even though dynamically generated.
>
> So my vote is that widgets should go into wp_posts because they are content.
>
> -Mike
> P.S. This begs a larger question of dynamically generated content, which
> many widgets produce.  Pages with dynamically generated content are also
> content yet they don't show up when searched.  So the question grows to
> become how to you recognize dynamically generated content in searches
> because people searching don't care how content is generated.
>

Clearly we need to begin supporting Couch/MongoDB in WordPress core
and simply throw documents over the JSON wall.  wp_mapreduce(), here
we come!

(I keed! I keed!)

-- 
-Doug

From mbarr at interactiveone.com  Fri Mar  5 18:55:00 2010
From: mbarr at interactiveone.com (Matthew Barr)
Date: Fri, 5 Mar 2010 13:55:00 -0500
Subject: [wp-hackers] MogileFS & Wordpress?
Message-ID: <774EEF8F-7741-426F-9453-A69CB802A712@interactiveone.com>

We're looking at mogilefs for much of our content for our non-wp sites, and are curious if anyone's tried to integrate it into WP (Mu, especially).

It would seem that it could be integrated into user uploads storage code - as a plugin, i'm sure.

With the Mu merge, this seems even more possible, as Mu restricts direct file path access to uploaded files ( with the blog.php page, to find the right blog id & redirect.)

Thoughts?

------------------
Matthew Barr
InteractiveOne  - Senior System Engineer
e:mbarr at interactiveone.com
c:646.727.0535
aim: matthewbarr1








From mikeschinkel at newclarity.net  Fri Mar  5 18:55:01 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 5 Mar 2010 13:55:01 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <71ddd7491003051036yfd2ef50ua3e6f10c3cf406f8@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<000001caba52$7026b530$50741f90$@com>
	<4B8DD200.2070108@gunters.org>
	<55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>
	<349fe48b1003041304u3b46de0am77cc4ee54574b2c6@mail.gmail.com>
	<71688321-5ED3-42EE-998B-6ECCAC3B790F@striderweb.com>
	<55c932671003050755n3c67e936j48fdd828b75cd852@mail.gmail.com>
	<14C2A95B-94BF-41DF-8C0C-E0BA581D3D42@newclarity.net>
	<71ddd7491003051036yfd2ef50ua3e6f10c3cf406f8@mail.gmail.com>
Message-ID: <1A384D04-7F28-46BF-8BCE-7860D0F86528@newclarity.net>

On Mar 5, 2010, at 1:36 PM, Doug Stewart wrote:
> Clearly we need to begin supporting Couch/MongoDB in WordPress core
> and simply throw documents over the JSON wall.  wp_mapreduce(), here
> we come!
> 
> (I keed! I keed!)


heh. I'll leave you with two links:

http://answers.yahoo.com/question/index?qid=20090426135159AAF3N8p
http://en.wikipedia.org/wiki/Reductio_ad_absurdum

-Mike

From jer at simianuprising.com  Fri Mar  5 19:04:06 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri, 5 Mar 2010 14:04:06 -0500
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
In-Reply-To: <161617691003030923re01344bte95dad18da9acf43@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com>
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com>
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com>
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com>
Message-ID: <e1202cb11003051104h6f794ebfjf6e69d9cb56ba0ec@mail.gmail.com>

On Wed, Mar 3, 2010 at 12:23 PM, Otto <otto at ottodestruct.com> wrote:
> You can read the instructions here to change it back to the way it was
> and get the site working again:
> http://codex.wordpress.org/Changing_The_Site_URL

Just for the record, the best solution in these cases is almost always
to use the two definitions in wp-config.php that override the blog and
site urls in the settings. The wp-config.php values for urls are
important both for migrations and for keeping multiple test installs
(dev->stage->live) so that when you update the test DB with a backup
of the live DB you don't have to constantly wrangle the urls.

define( 'WP_HOME', 'http://example.com' );
define( 'WP_SITEURL', 'http://example.com' );

Using this system you will have full control over the urls of your
site and can easily work around the issues stated above where the
Settings page becomes innaccessible or at least un-submittable due to
misconfiguration.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From dave at vinertech.com  Fri Mar  5 19:11:56 2010
From: dave at vinertech.com (Dave Viner)
Date: Fri, 5 Mar 2010 11:11:56 -0800
Subject: [wp-hackers] MogileFS & Wordpress?
In-Reply-To: <774EEF8F-7741-426F-9453-A69CB802A712@interactiveone.com>
References: <774EEF8F-7741-426F-9453-A69CB802A712@interactiveone.com>
Message-ID: <9a39b88d1003051111q377863f7t7d4a9e5ac9075362@mail.gmail.com>

Hi Matthew,

I haven't integrated MogileFS into WP, but I have used MogileFS in other
systems, and I've also created WP plugins that intercept image requests and
serve from non-standard file locations.

I can't see any reason why it wouldn't work.  Feel free to ping me offlist
if you need help in getting MogileFS setup and/or integrated.

Thanks
Dave Viner


On Fri, Mar 5, 2010 at 10:55 AM, Matthew Barr <mbarr at interactiveone.com>wrote:

> We're looking at mogilefs for much of our content for our non-wp sites, and
> are curious if anyone's tried to integrate it into WP (Mu, especially).
>
> It would seem that it could be integrated into user uploads storage code -
> as a plugin, i'm sure.
>
> With the Mu merge, this seems even more possible, as Mu restricts direct
> file path access to uploaded files ( with the blog.php page, to find the
> right blog id & redirect.)
>
> Thoughts?
>
> ------------------
> Matthew Barr
> InteractiveOne  - Senior System Engineer
> e:mbarr at interactiveone.com <e%3Ambarr at interactiveone.com>
> c:646.727.0535
> aim: matthewbarr1
>
>
>
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Fri Mar  5 19:32:12 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 5 Mar 2010 13:32:12 -0600
Subject: [wp-hackers] "Masking" a domain name in a wordpress install
In-Reply-To: <e1202cb11003051104h6f794ebfjf6e69d9cb56ba0ec@mail.gmail.com>
References: <d14758811003030751h4ca6c527ubc9f0ac91c59180@mail.gmail.com> 
	<161617691003030757w770ac22ci821ce97c715bea10@mail.gmail.com> 
	<d14758811003030806y35b142ddw776b55dd590a86d1@mail.gmail.com> 
	<161617691003030923re01344bte95dad18da9acf43@mail.gmail.com> 
	<e1202cb11003051104h6f794ebfjf6e69d9cb56ba0ec@mail.gmail.com>
Message-ID: <161617691003051132i18cda7fbj8dd4d4fce056c375@mail.gmail.com>

On Fri, Mar 5, 2010 at 1:04 PM, Jeremy Clarke <jer at simianuprising.com> wrote:
> Just for the record, the best solution in these cases is almost always
> to use the two definitions in wp-config.php that override the blog and
> site urls in the settings.

What is "best" depends on your point-of-view.

If I'm creating a site for somebody else, or doing a local test site,
then yes, I want those hardcoded. Newbs shouldn't touch the values,
and it makes migrating live DB's to test sites much simpler.

On the other hand, if I'm doing a live site for *me*, who is not a
newbie at this sort of thing, and who (perhaps in a fit of insanity)
might want to change the URL at a moment's notice and knows how to
reconfigure his URL paths on the fly and so forth... then not so much.

I like things to be dynamic and easily accessible for ready changes.
The wp-config file is not easily accessible all the time. This is good
if I want the values to be hard to change, but bad if I want them to
be easy to change.

-Otto

From Bulk at thecodecave.com  Fri Mar  5 19:54:49 2010
From: Bulk at thecodecave.com (Brian Layman)
Date: Fri, 5 Mar 2010 14:54:49 -0500
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <71688321-5ED3-42EE-998B-6ECCAC3B790F@striderweb.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>	<000001caba52$7026b530$50741f90$@com>	<4B8DD200.2070108@gunters.org>	<55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>	<349fe48b1003041304u3b46de0am77cc4ee54574b2c6@mail.gmail.com>
	<71688321-5ED3-42EE-998B-6ECCAC3B790F@striderweb.com>
Message-ID: <008701cabc9d$b97d6290$2c7827b0$@thecodecave.com>

> Why is a widgets table out of the question?
> I'm not agreeing with the push to treat widgets as a type of post.  They
aren't data -- they're structure.  In essence they're part of the theme if
nothing else.  > A very flexible part of the theme, but still -- part of the
theme.

Agreed.  A more appropriate  action would be to consider comments a post
type.  That would be a hard one to argue against especially because you
could even do things like promoting a comment to be a Post/top point in a
conversation. Not that I look forward to that expensive merge process..

-brian layman


From scribu at gmail.com  Fri Mar  5 20:33:06 2010
From: scribu at gmail.com (scribu)
Date: Fri, 5 Mar 2010 22:33:06 +0200
Subject: [wp-hackers] "commenter" user role
Message-ID: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>


From steph at sillybean.net  Fri Mar  5 21:20:26 2010
From: steph at sillybean.net (Stephanie Leary)
Date: Fri, 05 Mar 2010 21:20:26 +0000
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
Message-ID: <accba720a95040dd0f111cdfd7db5b61@laurel.joyent.us>


On Fri, 5 Mar 2010 22:33:06 +0200, scribu <scribu at gmail.com> wrote:
> I never liked the duplication that occurs: when a logged-in user leaves
a
> comment: his email, for example, is stored both in the wp_users table,
and
> the once more for each comment.
> 
> The first time somebody leaves a comment, we could create a new user,
with
> the "commenter" role.
> 
> Later, if somebody wants to comment with the same email, but with a
> different name, a new password will be sent to them via email, verifying
> that it's the same person.

Wouldn't that be a subscriber, essentially? It would just be a matter of
creating the user when they comment.

I like the idea a lot.


Stephanie Leary
sillybean.net

From john.wp at onolan.org  Fri Mar  5 21:29:47 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Fri, 5 Mar 2010 21:29:47 +0000
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
Message-ID: <20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>

I like the idea - but unsure of email notifications, I for example  
frequently leave comments with the same email but with different  
names, either John, JohnONolan, or John O'Nolan - I (personally) would  
find it annoying if this triggered notification/verification emails.

John




On 5 Mar 2010, at 20:33, scribu wrote:

> From the "widget as post type" thread:
>
> On Fri, Mar 5, 2010 at 9:54 PM, Brian Layman <Bulk at thecodecave.com>  
> wrote:
>
>> Agreed.  A more appropriate  action would be to consider comments a  
>> post
>> type.  That would be a hard one to argue against especially because  
>> you
>> could even do things like promoting a comment to be a Post/top  
>> point in a
>> conversation. Not that I look forward to that expensive merge  
>> process..
>>
>
> You can't have comments in the post table because most comments  
> don't come
> from logged-in users. As such, the wp_comments table has several
> user-related columns.
>
> I never liked the duplication that occurs: when a logged-in user  
> leaves a
> comment: his email, for example, is stored both in the wp_users  
> table, and
> the once more for each comment.
>
> The first time somebody leaves a comment, we could create a new  
> user, with
> the "commenter" role.
>
> Later, if somebody wants to comment with the same email, but with a
> different name, a new password will be sent to them via email,  
> verifying
> that it's the same person.
>
>
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From scribu at gmail.com  Fri Mar  5 21:39:18 2010
From: scribu at gmail.com (scribu)
Date: Fri, 5 Mar 2010 23:39:18 +0200
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
Message-ID: <349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>

On Fri, Mar 5, 2010 at 11:20 PM, Stephanie Leary <steph at sillybean.net>wrote:

> Wouldn't that be a subscriber, essentially? It would just be a matter of
> creating the user when they comment.
>

In terms of capabilities, yeah, it would be identical to a subscriber. It
remains to be seen if there are any technical reasons for adding a separate
role.


On Fri, Mar 5, 2010 at 11:29 PM, John O'Nolan <john.wp at onolan.org> wrote:

> I like the idea - but unsure of email notifications, I for example
> frequently leave comments with the same email but with different names,
> either John, JohnONolan, or John O'Nolan - I (personally) would find it
> annoying if this triggered notification/verification emails.
>

That might be a problem. We could do this instead:

After the first comment, simply ignore the name entered for subsequent
comments. If a user wants to change his name, he has to log in.


-- 
http://scribu.net

From scribu at gmail.com  Fri Mar  5 21:43:03 2010
From: scribu at gmail.com (scribu)
Date: Fri, 5 Mar 2010 23:43:03 +0200
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
Message-ID: <349fe48b1003051343y1af28e70n47b431b33c84e5a9@mail.gmail.com>

On Fri, Mar 5, 2010 at 11:39 PM, scribu <scribu at gmail.com> wrote:

> After the first comment, simply ignore the name entered for subsequent
> comments. If a user wants to change his name, he has to log in.
>

By the way, there could be an option to send the standard welcome email that
any user gets when creating an account.


-- 
http://scribu.net

From john.wp at onolan.org  Fri Mar  5 22:05:34 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Fri, 5 Mar 2010 22:05:34 +0000
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051343y1af28e70n47b431b33c84e5a9@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<349fe48b1003051343y1af28e70n47b431b33c84e5a9@mail.gmail.com>
Message-ID: <6B9710EF-62F2-47F7-A9D8-7D506DDF9A1E@onolan.org>

I like both of the ideas which you just suggested in response to my  
comment - those sound excellent. So +1 from me!

John



On 5 Mar 2010, at 21:43, scribu wrote:

> On Fri, Mar 5, 2010 at 11:39 PM, scribu <scribu at gmail.com> wrote:
>
>> After the first comment, simply ignore the name entered for  
>> subsequent
>> comments. If a user wants to change his name, he has to log in.
>>
>
> By the way, there could be an option to send the standard welcome  
> email that
> any user gets when creating an account.
>
>
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Fri Mar  5 22:23:21 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 5 Mar 2010 16:23:21 -0600
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
Message-ID: <161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>

On Fri, Mar 5, 2010 at 2:33 PM, scribu <scribu at gmail.com> wrote:
> You can't have comments in the post table because most comments don't come
> from logged-in users. As such, the wp_comments table has several
> user-related columns.
>
> I never liked the duplication that occurs: when a logged-in user leaves a
> comment: his email, for example, is stored both in the wp_users table, and
> the once more for each comment.
>
> The first time somebody leaves a comment, we could create a new user, with
> the "commenter" role.
>
> Later, if somebody wants to comment with the same email, but with a
> different name, a new password will be sent to them via email, verifying
> that it's the same person.

As long as this has a master off-switch, because there's no way I'd
ever implement such a thing on my sites.

My users table contains one user: me. It will never contain another.

-Otto

From aaron at jorb.in  Fri Mar  5 22:26:50 2010
From: aaron at jorb.in (Aaron Jorbin)
Date: Fri, 5 Mar 2010 14:26:50 -0800
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
Message-ID: <dc89e3ef1003051426p71a0071ex69d3fb7f15ac45c1@mail.gmail.com>

I'm with Otto on this one.  I think this would be a much better plugin
then core material.

-Aaron
http://aaron.jorb.in
twitter: twitter.com/aaronjorbin



On Fri, Mar 5, 2010 at 2:23 PM, Otto <otto at ottodestruct.com> wrote:
>
> As long as this has a master off-switch, because there's no way I'd
> ever implement such a thing on my sites.
>
> My users table contains one user: me. It will never contain another.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Fri Mar  5 22:39:58 2010
From: scribu at gmail.com (scribu)
Date: Sat, 6 Mar 2010 00:39:58 +0200
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
Message-ID: <349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>

On Sat, Mar 6, 2010 at 12:23 AM, Otto <otto at ottodestruct.com> wrote:

> As long as this has a master off-switch, because there's no way I'd
> ever implement such a thing on my sites.
>
> My users table contains one user: me. It will never contain another.
>

There's a word for that: irrational fear.


On Sat, Mar 6, 2010 at 12:26 AM, Aaron Jorbin <aaron at jorb.in> wrote:

> I'm with Otto on this one.  I think this would be a much better plugin
> then core material.
>

It's very much core material, since it improves the database structure.

However, I do plan to take a stab at it in a plugin, first.


--
http://scribu.net

From otto at ottodestruct.com  Fri Mar  5 22:44:18 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 5 Mar 2010 16:44:18 -0600
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com> 
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com> 
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
Message-ID: <161617691003051444i3cc3cef8i730f9172424db467@mail.gmail.com>

On Fri, Mar 5, 2010 at 4:39 PM, scribu <scribu at gmail.com> wrote:
> On Sat, Mar 6, 2010 at 12:23 AM, Otto <otto at ottodestruct.com> wrote:
>
>> As long as this has a master off-switch, because there's no way I'd
>> ever implement such a thing on my sites.
>>
>> My users table contains one user: me. It will never contain another.
>>
>
> There's a word for that: irrational fear.

No, not fear. Design. I'm the only user of my blog. I don't want or
need anybody else to be registered on it, because *I'm the only user
of my blog*.

Commenters aren't users, they're commenters. They read it and they
leave comments. Whether their user data is real or not is irrelevant,
as I see it.

> It's very much core material, since it improves the database structure.

I disagree, but more power to you. Just make sure to leave an off
switch, because I won't use it.

-Otto

From superchaser1 at gmail.com  Fri Mar  5 22:48:04 2010
From: superchaser1 at gmail.com (Chase Astrike)
Date: Fri, 5 Mar 2010 15:48:04 -0700
Subject: [wp-hackers] wp-hackers Digest, Vol 62, Issue 19
In-Reply-To: <mailman.4200.1267826752.1345.wp-hackers@lists.automattic.com>
References: <mailman.4200.1267826752.1345.wp-hackers@lists.automattic.com>
Message-ID: <4b7a02031003051448v5c24904fj9fefb9c45c0c6142@mail.gmail.com>

When making a new WP install, the FTP password should be password encrypted,
with the little black dots. It makes it safer, and applies more ease to the
installer.

Thoughts?

On Fri, Mar 5, 2010 at 3:05 PM, <wp-hackers-request at lists.automattic.com>wrote:

> Send wp-hackers mailing list submissions to
>        wp-hackers at lists.automattic.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
>        wp-hackers-request at lists.automattic.com
>
> You can reach the person managing the list at
>        wp-hackers-owner at lists.automattic.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
>
>
> Today's Topics:
>
>   1. Re: "Masking" a domain name in a wordpress install (Jeremy Clarke)
>   2. Re: MogileFS & Wordpress? (Dave Viner)
>   3. Re: "Masking" a domain name in a wordpress install (Otto)
>   4. Re: Idea: Widgets as custom post types (Brian Layman)
>   5. "commenter" user role (scribu)
>   6. Re: "commenter" user role (Stephanie Leary)
>   7. Re: "commenter" user role (John O'Nolan)
>   8. Re: "commenter" user role (scribu)
>   9. Re: "commenter" user role (scribu)
>  10. Re: "commenter" user role (John O'Nolan)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Fri, 5 Mar 2010 14:04:06 -0500
> From: Jeremy Clarke <jer at simianuprising.com>
> Subject: Re: [wp-hackers] "Masking" a domain name in a wordpress
>        install
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <e1202cb11003051104h6f794ebfjf6e69d9cb56ba0ec at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> On Wed, Mar 3, 2010 at 12:23 PM, Otto <otto at ottodestruct.com> wrote:
> > You can read the instructions here to change it back to the way it was
> > and get the site working again:
> > http://codex.wordpress.org/Changing_The_Site_URL
>
> Just for the record, the best solution in these cases is almost always
> to use the two definitions in wp-config.php that override the blog and
> site urls in the settings. The wp-config.php values for urls are
> important both for migrations and for keeping multiple test installs
> (dev->stage->live) so that when you update the test DB with a backup
> of the live DB you don't have to constantly wrangle the urls.
>
> define( 'WP_HOME', 'http://example.com' );
> define( 'WP_SITEURL', 'http://example.com' );
>
> Using this system you will have full control over the urls of your
> site and can easily work around the issues stated above where the
> Settings page becomes innaccessible or at least un-submittable due to
> misconfiguration.
>
> --
> Jeremy Clarke
> Code and Design | globalvoicesonline.org
>
>
> ------------------------------
>
> Message: 2
> Date: Fri, 5 Mar 2010 11:11:56 -0800
> From: Dave Viner <dave at vinertech.com>
> Subject: Re: [wp-hackers] MogileFS & Wordpress?
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <9a39b88d1003051111q377863f7t7d4a9e5ac9075362 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi Matthew,
>
> I haven't integrated MogileFS into WP, but I have used MogileFS in other
> systems, and I've also created WP plugins that intercept image requests and
> serve from non-standard file locations.
>
> I can't see any reason why it wouldn't work.  Feel free to ping me offlist
> if you need help in getting MogileFS setup and/or integrated.
>
> Thanks
> Dave Viner
>
>
> On Fri, Mar 5, 2010 at 10:55 AM, Matthew Barr <mbarr at interactiveone.com
> >wrote:
>
> > We're looking at mogilefs for much of our content for our non-wp sites,
> and
> > are curious if anyone's tried to integrate it into WP (Mu, especially).
> >
> > It would seem that it could be integrated into user uploads storage code
> -
> > as a plugin, i'm sure.
> >
> > With the Mu merge, this seems even more possible, as Mu restricts direct
> > file path access to uploaded files ( with the blog.php page, to find the
> > right blog id & redirect.)
> >
> > Thoughts?
> >
> > ------------------
> > Matthew Barr
> > InteractiveOne  - Senior System Engineer
> > e:mbarr at interactiveone.com <e%3Ambarr at interactiveone.com> <
> e%3Ambarr at interactiveone.com <e%253Ambarr at interactiveone.com>>
> > c:646.727.0535
> > aim: matthewbarr1
> >
> >
> >
> >
> >
> >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> ------------------------------
>
> Message: 3
> Date: Fri, 5 Mar 2010 13:32:12 -0600
> From: Otto <otto at ottodestruct.com>
> Subject: Re: [wp-hackers] "Masking" a domain name in a wordpress
>        install
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <161617691003051132i18cda7fbj8dd4d4fce056c375 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> On Fri, Mar 5, 2010 at 1:04 PM, Jeremy Clarke <jer at simianuprising.com>
> wrote:
> > Just for the record, the best solution in these cases is almost always
> > to use the two definitions in wp-config.php that override the blog and
> > site urls in the settings.
>
> What is "best" depends on your point-of-view.
>
> If I'm creating a site for somebody else, or doing a local test site,
> then yes, I want those hardcoded. Newbs shouldn't touch the values,
> and it makes migrating live DB's to test sites much simpler.
>
> On the other hand, if I'm doing a live site for *me*, who is not a
> newbie at this sort of thing, and who (perhaps in a fit of insanity)
> might want to change the URL at a moment's notice and knows how to
> reconfigure his URL paths on the fly and so forth... then not so much.
>
> I like things to be dynamic and easily accessible for ready changes.
> The wp-config file is not easily accessible all the time. This is good
> if I want the values to be hard to change, but bad if I want them to
> be easy to change.
>
> -Otto
>
>
> ------------------------------
>
> Message: 4
> Date: Fri, 5 Mar 2010 14:54:49 -0500
> From: "Brian Layman" <Bulk at thecodecave.com>
> Subject: Re: [wp-hackers] Idea: Widgets as custom post types
> To: <wp-hackers at lists.automattic.com>
> Message-ID: <008701cabc9d$b97d6290$2c7827b0$@thecodecave.com>
> Content-Type: text/plain;       charset="US-ASCII"
>
> > Why is a widgets table out of the question?
> > I'm not agreeing with the push to treat widgets as a type of post.  They
> aren't data -- they're structure.  In essence they're part of the theme if
> nothing else.  > A very flexible part of the theme, but still -- part of
> the
> theme.
>
> Agreed.  A more appropriate  action would be to consider comments a post
> type.  That would be a hard one to argue against especially because you
> could even do things like promoting a comment to be a Post/top point in a
> conversation. Not that I look forward to that expensive merge process..
>
> -brian layman
>
>
>
> ------------------------------
>
> Message: 5
> Date: Fri, 5 Mar 2010 22:33:06 +0200
> From: scribu <scribu at gmail.com>
> Subject: [wp-hackers] "commenter" user role
> To: wp-hackers <wp-hackers at lists.automattic.com>
> Message-ID:
>        <349fe48b1003051233q1843b3faj66c4d385513a4883 at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
>
> >From the "widget as post type" thread:
>
> On Fri, Mar 5, 2010 at 9:54 PM, Brian Layman <Bulk at thecodecave.com> wrote:
>
> > Agreed.  A more appropriate  action would be to consider comments a post
> > type.  That would be a hard one to argue against especially because you
> > could even do things like promoting a comment to be a Post/top point in a
> > conversation. Not that I look forward to that expensive merge process..
> >
>
> You can't have comments in the post table because most comments don't come
> from logged-in users. As such, the wp_comments table has several
> user-related columns.
>
> I never liked the duplication that occurs: when a logged-in user leaves a
> comment: his email, for example, is stored both in the wp_users table, and
> the once more for each comment.
>
> The first time somebody leaves a comment, we could create a new user, with
> the "commenter" role.
>
> Later, if somebody wants to comment with the same email, but with a
> different name, a new password will be sent to them via email, verifying
> that it's the same person.
>
>
> --
> http://scribu.net
>
>
> ------------------------------
>
> Message: 6
> Date: Fri, 05 Mar 2010 21:20:26 +0000
> From: Stephanie Leary <steph at sillybean.net>
> Subject: Re: [wp-hackers] "commenter" user role
> To: <wp-hackers at lists.automattic.com>
> Message-ID: <accba720a95040dd0f111cdfd7db5b61 at laurel.joyent.us>
> Content-Type: text/plain; charset=UTF-8
>
>
> On Fri, 5 Mar 2010 22:33:06 +0200, scribu <scribu at gmail.com> wrote:
> > I never liked the duplication that occurs: when a logged-in user leaves
> a
> > comment: his email, for example, is stored both in the wp_users table,
> and
> > the once more for each comment.
> >
> > The first time somebody leaves a comment, we could create a new user,
> with
> > the "commenter" role.
> >
> > Later, if somebody wants to comment with the same email, but with a
> > different name, a new password will be sent to them via email, verifying
> > that it's the same person.
>
> Wouldn't that be a subscriber, essentially? It would just be a matter of
> creating the user when they comment.
>
> I like the idea a lot.
>
>
> Stephanie Leary
> sillybean.net
>
>
> ------------------------------
>
> Message: 7
> Date: Fri, 5 Mar 2010 21:29:47 +0000
> From: John O'Nolan <john.wp at onolan.org>
> Subject: Re: [wp-hackers] "commenter" user role
> To: wp-hackers at lists.automattic.com
> Message-ID: <20BE80F3-9377-466C-8517-AF9F02795687 at onolan.org>
> Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
>
> I like the idea - but unsure of email notifications, I for example
> frequently leave comments with the same email but with different
> names, either John, JohnONolan, or John O'Nolan - I (personally) would
> find it annoying if this triggered notification/verification emails.
>
> John
>
>
>
>
> On 5 Mar 2010, at 20:33, scribu wrote:
>
> > From the "widget as post type" thread:
> >
> > On Fri, Mar 5, 2010 at 9:54 PM, Brian Layman <Bulk at thecodecave.com>
> > wrote:
> >
> >> Agreed.  A more appropriate  action would be to consider comments a
> >> post
> >> type.  That would be a hard one to argue against especially because
> >> you
> >> could even do things like promoting a comment to be a Post/top
> >> point in a
> >> conversation. Not that I look forward to that expensive merge
> >> process..
> >>
> >
> > You can't have comments in the post table because most comments
> > don't come
> > from logged-in users. As such, the wp_comments table has several
> > user-related columns.
> >
> > I never liked the duplication that occurs: when a logged-in user
> > leaves a
> > comment: his email, for example, is stored both in the wp_users
> > table, and
> > the once more for each comment.
> >
> > The first time somebody leaves a comment, we could create a new
> > user, with
> > the "commenter" role.
> >
> > Later, if somebody wants to comment with the same email, but with a
> > different name, a new password will be sent to them via email,
> > verifying
> > that it's the same person.
> >
> >
> > --
> > http://scribu.net
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> ------------------------------
>
> Message: 8
> Date: Fri, 5 Mar 2010 23:39:18 +0200
> From: scribu <scribu at gmail.com>
> Subject: Re: [wp-hackers] "commenter" user role
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <349fe48b1003051339m3bc5ccfayb3b7e653b26144bd at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
>
> On Fri, Mar 5, 2010 at 11:20 PM, Stephanie Leary <steph at sillybean.net
> >wrote:
>
> > Wouldn't that be a subscriber, essentially? It would just be a matter of
> > creating the user when they comment.
> >
>
> In terms of capabilities, yeah, it would be identical to a subscriber. It
> remains to be seen if there are any technical reasons for adding a separate
> role.
>
>
> On Fri, Mar 5, 2010 at 11:29 PM, John O'Nolan <john.wp at onolan.org> wrote:
>
> > I like the idea - but unsure of email notifications, I for example
> > frequently leave comments with the same email but with different names,
> > either John, JohnONolan, or John O'Nolan - I (personally) would find it
> > annoying if this triggered notification/verification emails.
> >
>
> That might be a problem. We could do this instead:
>
> After the first comment, simply ignore the name entered for subsequent
> comments. If a user wants to change his name, he has to log in.
>
>
> --
> http://scribu.net
>
>
> ------------------------------
>
> Message: 9
> Date: Fri, 5 Mar 2010 23:43:03 +0200
> From: scribu <scribu at gmail.com>
> Subject: Re: [wp-hackers] "commenter" user role
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <349fe48b1003051343y1af28e70n47b431b33c84e5a9 at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
>
> On Fri, Mar 5, 2010 at 11:39 PM, scribu <scribu at gmail.com> wrote:
>
> > After the first comment, simply ignore the name entered for subsequent
> > comments. If a user wants to change his name, he has to log in.
> >
>
> By the way, there could be an option to send the standard welcome email
> that
> any user gets when creating an account.
>
>
> --
> http://scribu.net
>
>
> ------------------------------
>
> Message: 10
> Date: Fri, 5 Mar 2010 22:05:34 +0000
> From: John O'Nolan <john.wp at onolan.org>
> Subject: Re: [wp-hackers] "commenter" user role
> To: wp-hackers at lists.automattic.com
> Message-ID: <6B9710EF-62F2-47F7-A9D8-7D506DDF9A1E at onolan.org>
> Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
>
> I like both of the ideas which you just suggested in response to my
> comment - those sound excellent. So +1 from me!
>
> John
>
>
>
> On 5 Mar 2010, at 21:43, scribu wrote:
>
> > On Fri, Mar 5, 2010 at 11:39 PM, scribu <scribu at gmail.com> wrote:
> >
> >> After the first comment, simply ignore the name entered for
> >> subsequent
> >> comments. If a user wants to change his name, he has to log in.
> >>
> >
> > By the way, there could be an option to send the standard welcome
> > email that
> > any user gets when creating an account.
> >
> >
> > --
> > http://scribu.net
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> ------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> End of wp-hackers Digest, Vol 62, Issue 19
> ******************************************
>

From aaron at jorb.in  Fri Mar  5 22:53:50 2010
From: aaron at jorb.in (Aaron Jorbin)
Date: Fri, 5 Mar 2010 14:53:50 -0800
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
Message-ID: <dc89e3ef1003051453m1cd88bd1x5474341477d31eaa@mail.gmail.com>

I disagree with you on both regards.

1:  A number of the security holes over the history of wordpress are
user escalation issues.  By registering everyone who ever leaves a
comment, you are opening up a number of sites to these.  While keeping
an up to date installation is obviously the best route,  restricting
registration is not a bad policy.  Would you allow anyone to walk up
to your home computer and create an account?

2.  This would be a pretty big change.  Up until now you had to
explicitly allow open registration.  What you're proposing is removing
that option from site admins.  I don't think the core should remove or
restrict options.

3.  I'm not convinced that this improves the database structure.  It
has the potential to vastly grow the user and user_meta fields.  Also,
how do you intend to handle the issue of sites that already have
thousands of comments?  I for one wouldn't appreciate waking up to the
day after 3.1 (or whenever this got implemented) is released to an
e-mail from every site that I've commented on with a user account.

-Aaron
http://aaron.jorb.in
twitter: twitter.com/aaronjorbin



On Fri, Mar 5, 2010 at 2:39 PM, scribu <scribu at gmail.com> wrote:
> On Sat, Mar 6, 2010 at 12:23 AM, Otto <otto at ottodestruct.com> wrote:
>
>> As long as this has a master off-switch, because there's no way I'd
>> ever implement such a thing on my sites.
>>
>> My users table contains one user: me. It will never contain another.
>>
>
> There's a word for that: irrational fear.
>
>
> On Sat, Mar 6, 2010 at 12:26 AM, Aaron Jorbin <aaron at jorb.in> wrote:
>
>> I'm with Otto on this one. ?I think this would be a much better plugin
>> then core material.
>>
>
> It's very much core material, since it improves the database structure.
>
> However, I do plan to take a stab at it in a plugin, first.
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Fri Mar  5 23:04:35 2010
From: scribu at gmail.com (scribu)
Date: Sat, 6 Mar 2010 01:04:35 +0200
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <dc89e3ef1003051453m1cd88bd1x5474341477d31eaa@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
	<dc89e3ef1003051453m1cd88bd1x5474341477d31eaa@mail.gmail.com>
Message-ID: <349fe48b1003051504i604b2748q6146cf5323f6edd7@mail.gmail.com>

On Sat, Mar 6, 2010 at 12:53 AM, Aaron Jorbin <aaron at jorb.in> wrote:

> I disagree with you on both regards.
>
> 1:  A number of the security holes over the history of wordpress are
> user escalation issues.  By registering everyone who ever leaves a
> comment, you are opening up a number of sites to these.  While keeping
> an up to date installation is obviously the best route,  restricting
> registration is not a bad policy.  Would you allow anyone to walk up
> to your home computer and create an account?
>
> 2.  This would be a pretty big change.  Up until now you had to
> explicitly allow open registration.  What you're proposing is removing
> that option from site admins.  I don't think the core should remove or
> restrict options.
>

Ok, valid point about security.



> 3.  I'm not convinced that this improves the database structure.  It
> has the potential to vastly grow the user and user_meta fields.


No, not vastly, since repeat commenters would get a single user, with no
usermeta fields, except the one for capabilities.


Also,
> how do you intend to handle the issue of sites that already have
> thousands of comments?  I for one wouldn't appreciate waking up to the
> day after 3.1 (or whenever this got implemented) is released to an
> e-mail from every site that I've commented on with a user account.
>

Of course previous commenters wouldn't receive welcome emails.

Just as WordPress was able to transition from posts2cats for example, it
should be possible to migrate commenters to the wp_users table.


-- 
http://scribu.net

From aaron at jorb.in  Fri Mar  5 23:18:18 2010
From: aaron at jorb.in (Aaron Jorbin)
Date: Fri, 5 Mar 2010 15:18:18 -0800
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051504i604b2748q6146cf5323f6edd7@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
	<dc89e3ef1003051453m1cd88bd1x5474341477d31eaa@mail.gmail.com>
	<349fe48b1003051504i604b2748q6146cf5323f6edd7@mail.gmail.com>
Message-ID: <dc89e3ef1003051518l5824ab4ne334789d22100f2a@mail.gmail.com>

>> 3. ?I'm not convinced that this improves the database structure. ?It
>> has the potential to vastly grow the user and user_meta fields.
>
>
> No, not vastly, since repeat commenters would get a single user, with no
> usermeta fields, except the one for capabilities.
>
>

What about a site that gets 100 comments per post, and 20% are one
time commenters?  After 50 posts, there are now over 1k users.  And I
think it would take at least two fields.  Both nicename and
capabilities.

> Also,
>> how do you intend to handle the issue of sites that already have
>> thousands of comments? ?I for one wouldn't appreciate waking up to the
>> day after 3.1 (or whenever this got implemented) is released to an
>> e-mail from every site that I've commented on with a user account.
>>
>
> Of course previous commenters wouldn't receive welcome emails.
>
> Just as WordPress was able to transition from posts2cats for example, it
> should be possible to migrate commenters to the wp_users table.
>

That's a vastly different migration, as it didn't really affect users.
 While developers and power users would know what's going on, what
about when Grandma goes to comment on the latest picture of little
Matty and enters Grandma Bettie instead of Grandma B that she
previously used.  We've just now added an extra step for a user who
should have a very simple experience.

-Aaron
http://aaron.jorb.in
twitter: twitter.com/aaronjorbin

From wordpress at dd32.id.au  Fri Mar  5 22:21:19 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sat, 06 Mar 2010 10:21:19 +1200
Subject: [wp-hackers] wp-hackers Digest, Vol 62, Issue 19
In-Reply-To: <4b7a02031003051448v5c24904fj9fefb9c45c0c6142@mail.gmail.com>
References: <mailman.4200.1267826752.1345.wp-hackers@lists.automattic.com>
	<4b7a02031003051448v5c24904fj9fefb9c45c0c6142@mail.gmail.com>
Message-ID: <op.u84a5qgbspxmuu@ho.st>

On Sat, 06 Mar 2010 10:48:04 +1200, Chase Astrike <superchaser1 at gmail.com>  
wrote:

> When making a new WP install, the FTP password should be password  
> encrypted,
> with the little black dots. It makes it safer, and applies more ease to  
> the
> installer.
>Thoughts?
>

Which FTP Password form/field are you refering to?

Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

From scribu at gmail.com  Fri Mar  5 23:23:30 2010
From: scribu at gmail.com (scribu)
Date: Sat, 6 Mar 2010 01:23:30 +0200
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <dc89e3ef1003051518l5824ab4ne334789d22100f2a@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
	<dc89e3ef1003051453m1cd88bd1x5474341477d31eaa@mail.gmail.com>
	<349fe48b1003051504i604b2748q6146cf5323f6edd7@mail.gmail.com>
	<dc89e3ef1003051518l5824ab4ne334789d22100f2a@mail.gmail.com>
Message-ID: <349fe48b1003051523s7201bb33n945943eca999eb16@mail.gmail.com>

On Sat, Mar 6, 2010 at 12:44 AM, Otto <otto at ottodestruct.com> wrote:

> No, not fear. Design. I'm the only user of my blog. I don't want or
> need anybody else to be registered on it, because *I'm the only user
> of my blog*.
>

You're the only *author* of your blog.


> Commenters aren't users, they're commenters. They read it and they
> leave comments. Whether their user data is real or not is irrelevant,
> as I see it.
>

I agree: it doesn't matter whether commenters provide a real email address
or not. The issue is were you store it.


On Sat, Mar 6, 2010 at 1:18 AM, Aaron Jorbin <aaron at jorb.in> wrote:

> What about a site that gets 100 comments per post, and 20% are one
> time commenters?  After 50 posts, there are now over 1k users.  And I
> think it would take at least two fields.  Both nicename and
> capabilities.
>

And how is that worse than the current situation, where for *every* comment,
the email and username is duplicated?



> That's a vastly different migration, as it didn't really affect users.
>  While developers and power users would know what's going on, what
> about when Grandma goes to comment on the latest picture of little
> Matty and enters Grandma Bettie instead of Grandma B that she
> previously used.  We've just now added an extra step for a user who
> should have a very simple experience.
>

As I've said in a previous email, she will still be able to comment, just
that her name will still appear as "Grandma B" instead of "Grandma Bettie".


-- 
http://scribu.net

From Bulk at thecodecave.com  Fri Mar  5 23:30:39 2010
From: Bulk at thecodecave.com (Brian Layman)
Date: Fri, 5 Mar 2010 18:30:39 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
Message-ID: <00c501cabcbb$dde8d3d0$99ba7b70$@thecodecave.com>

On Sat, Mar 6, 2010 Scribe wrote : 
> On Sat, Mar 6, 2010 at 12:23 AM, Otto <otto at ottodestruct.com> wrote:
>> My users table contains one user: me. It will never contain another.
> There's a word for that: irrational fear.

There were valid reasons for a long time for this view point, and really,
for a blog, you never needed more than one user if the contact info was in
separate fields in a comment table.  It wasn't worth the security risks.

It used to be that everyone wanted users then we went for a couple years
with no-one wanting users. I suspect we are on the swing back now. With the
trends for linked social communities being what they are and with remembered
social app auth needs, the desire for registered users is going to go up. If
we are changing the definition and you consider all commenters as users,
most blogs already have dozens to thousands.

-brian layman


From mikeschinkel at newclarity.net  Sat Mar  6 01:11:09 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 5 Mar 2010 20:11:09 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
Message-ID: <B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>

On Fri, Mar 5, 2010 at 11:29 PM, John O'Nolan <john.wp at onolan.org> wrote:
> I like the idea - but unsure of email notifications, I for example
> frequently leave comments with the same email but with different names,
> either John, JohnONolan, or John O'Nolan - I (personally) would find it
> annoying if this triggered notification/verification emails.

Just curious, but why would you/is it important to be able to leave comments with different names?  Seems weird behavior to me, but maybe I just don't understand the rationale.

On Mar 5, 2010, at 4:39 PM, scribu wrote:
> On Fri, Mar 5, 2010 at 11:20 PM, Stephanie Leary <steph at sillybean.net>wrote:
>> Wouldn't that be a subscriber, essentially? It would just be a matter of
>> creating the user when they comment.
> In terms of capabilities, yeah, it would be identical to a subscriber. It
> remains to be seen if there are any technical reasons for adding a separate
> role.
On Mar 5, 2010, at 5:53 PM, Aaron Jorbin wrote:
> 1:  A number of the security holes over the history of wordpress are
> user escalation issues.  By registering everyone who ever leaves a
> comment, you are opening up a number of sites to these.  While keeping
> an up to date installation is obviously the best route,  restricting
> registration is not a bad policy.  

Almost all related security concerns can be addressed by giving people with a role of commenters no login rights unless the admin has enabled creation of user accounts (actually, the rights should be changed to "allow commenters to login.")

> Would you allow anyone to walk up
> to your home computer and create an account?

Sure, if the default account gave them no rights other than to login to a highly restricted sandbox.

> 2.  This would be a pretty big change.  Up until now you had to
> explicitly allow open registration.  What you're proposing is removing
> that option from site admins.  I don't think the core should remove or
> restrict options.


Nope, you are assuming one change without other correspondingly intelligent yet simple changes. See above.

On Mar 5, 2010, at 5:44 PM, Otto wrote:
> Commenters aren't users, they're commenters. They read it and they
> leave comments. Whether their user data is real or not is irrelevant,
> as I see it.

What is a "user", really?  Isn't a user merely a human that interacts with the site?  Any other definition is merely one person's individual preference.

The wp_users table is the perfect place to keep track of all humans that interact with a site and/or that the site needs to track (i.e. "actor"s in a "movie", "player"s on a sports "team", etc.)  Commenters as users make perfect sense.  It opens up the ability to have pages for each commenter showing the posts they've commented on, and more.

All else that would be needed would be to create an optional automatically generated and related record in wp_posts.  Or (godforbid!) deprecate wp_users and move users to wp_posts of post_type "user" (he says as he braces for the howls of disapproval...)   

Honestly, having the ability to have a person categorized and tagged would solve real worlds needs for most sites I've been involved with. One major site that I developed was a NASCAR sponsorship site for a local Fortune 100 company.  Had users been in wp_posts of type "user" (or better,  "person") then each team member could have easily had their name, bios, "fun facts" using custom fields such as favorite food, favorite TV show, first car, etc. and tagged with various attributes like "driver", "pitcrew", "manager", "enginetuner", etc. Having "people" as accessible as "posts", "pages" and other custom data types would open up WordPress' usefulness even more.

On Mar 5, 2010, at 6:18 PM, Aaron Jorbin wrote:
> What about a site that gets 100 comments per post, and 20% are one
> time commenters?  After 50 posts, there are now over 1k users.  And I
> think it would take at least two fields.  Both nicename and
> capabilities.

Modern database systems like MySQL are surprisingly adept at handling 1000 records.  Actually they don't generally have a problem until 3 or 4 orders of magnitude records beyond that.

> That's a vastly different migration, as it didn't really affect users.
> While developers and power users would know what's going on, what
> about when Grandma goes to comment on the latest picture of little
> Matty and enters Grandma Bettie instead of Grandma B that she
> previously used.  We've just now added an extra step for a user who
> should have a very simple experience.

Grandma Bettie can just pound sand.  

Okay, just kidding. ;-)  Seriously though, I don't see why you'd even need to notify Mrs. Bettie of anything.  If she changes her name after the first comment just store than alternate name in post_meta; same with any other comment fields.  You could also provide a popup that asks if Grandma wants to replace her old name with the new name and only send the email if he says yes.

If Grandma can type a comment in a post box she can handle a dialog that points how she has been inconsistent and asks her what to do. Or we can simply put up with the inconsistency by storing it in post_meta.

On Mar 5, 2010, at 6:30 PM, Brian Layman wrote:
> With the trends for linked social communities being what they are and
> with remembered social app auth needs, the desire for registered users
> is going to go up. 

+1

I bet if you can survey the top 25 high traffic blogs on WordPress that haven't already implemented similar custom user/commenter functionality most would prefer commenters be recorded as users because of the additional user engagement opportunities that would provide them.

-Mike



From john.wp at onolan.org  Sat Mar  6 01:37:43 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Sat, 6 Mar 2010 01:37:43 +0000
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
Message-ID: <C9ECB187-D50D-41A7-9E19-F1BBD497455E@onolan.org>

It's not an important consideration so much as an annoyance /  
inconvenience. I hate system emails at the best of times - and the one  
mentioned would just be a pain.

Is there a reason why we couldn't just write the name to the DB once,  
and then ignore the "name" field in the future if the email address  
already exists in the DB?

John




On 6 Mar 2010, at 01:11, Mike Schinkel wrote:

> On Fri, Mar 5, 2010 at 11:29 PM, John O'Nolan <john.wp at onolan.org>  
> wrote:
>> I like the idea - but unsure of email notifications, I for example
>> frequently leave comments with the same email but with different  
>> names,
>> either John, JohnONolan, or John O'Nolan - I (personally) would  
>> find it
>> annoying if this triggered notification/verification emails.
>
> Just curious, but why would you/is it important to be able to leave  
> comments with different names?  Seems weird behavior to me, but  
> maybe I just don't understand the rationale.
>
> On Mar 5, 2010, at 4:39 PM, scribu wrote:
>> On Fri, Mar 5, 2010 at 11:20 PM, Stephanie Leary  
>> <steph at sillybean.net>wrote:
>>> Wouldn't that be a subscriber, essentially? It would just be a  
>>> matter of
>>> creating the user when they comment.
>> In terms of capabilities, yeah, it would be identical to a  
>> subscriber. It
>> remains to be seen if there are any technical reasons for adding a  
>> separate
>> role.
> On Mar 5, 2010, at 5:53 PM, Aaron Jorbin wrote:
>> 1:  A number of the security holes over the history of wordpress are
>> user escalation issues.  By registering everyone who ever leaves a
>> comment, you are opening up a number of sites to these.  While  
>> keeping
>> an up to date installation is obviously the best route,  restricting
>> registration is not a bad policy.
>
> Almost all related security concerns can be addressed by giving  
> people with a role of commenters no login rights unless the admin  
> has enabled creation of user accounts (actually, the rights should  
> be changed to "allow commenters to login.")
>
>> Would you allow anyone to walk up
>> to your home computer and create an account?
>
> Sure, if the default account gave them no rights other than to login  
> to a highly restricted sandbox.
>
>> 2.  This would be a pretty big change.  Up until now you had to
>> explicitly allow open registration.  What you're proposing is  
>> removing
>> that option from site admins.  I don't think the core should remove  
>> or
>> restrict options.
>
>
> Nope, you are assuming one change without other correspondingly  
> intelligent yet simple changes. See above.
>
> On Mar 5, 2010, at 5:44 PM, Otto wrote:
>> Commenters aren't users, they're commenters. They read it and they
>> leave comments. Whether their user data is real or not is irrelevant,
>> as I see it.
>
> What is a "user", really?  Isn't a user merely a human that  
> interacts with the site?  Any other definition is merely one  
> person's individual preference.
>
> The wp_users table is the perfect place to keep track of all humans  
> that interact with a site and/or that the site needs to track (i.e.  
> "actor"s in a "movie", "player"s on a sports "team", etc.)   
> Commenters as users make perfect sense.  It opens up the ability to  
> have pages for each commenter showing the posts they've commented  
> on, and more.
>
> All else that would be needed would be to create an optional  
> automatically generated and related record in wp_posts.  Or  
> (godforbid!) deprecate wp_users and move users to wp_posts of  
> post_type "user" (he says as he braces for the howls of  
> disapproval...)
>
> Honestly, having the ability to have a person categorized and tagged  
> would solve real worlds needs for most sites I've been involved  
> with. One major site that I developed was a NASCAR sponsorship site  
> for a local Fortune 100 company.  Had users been in wp_posts of type  
> "user" (or better,  "person") then each team member could have  
> easily had their name, bios, "fun facts" using custom fields such as  
> favorite food, favorite TV show, first car, etc. and tagged with  
> various attributes like "driver", "pitcrew", "manager",  
> "enginetuner", etc. Having "people" as accessible as "posts",  
> "pages" and other custom data types would open up WordPress'  
> usefulness even more.
>
> On Mar 5, 2010, at 6:18 PM, Aaron Jorbin wrote:
>> What about a site that gets 100 comments per post, and 20% are one
>> time commenters?  After 50 posts, there are now over 1k users.  And I
>> think it would take at least two fields.  Both nicename and
>> capabilities.
>
> Modern database systems like MySQL are surprisingly adept at  
> handling 1000 records.  Actually they don't generally have a problem  
> until 3 or 4 orders of magnitude records beyond that.
>
>> That's a vastly different migration, as it didn't really affect  
>> users.
>> While developers and power users would know what's going on, what
>> about when Grandma goes to comment on the latest picture of little
>> Matty and enters Grandma Bettie instead of Grandma B that she
>> previously used.  We've just now added an extra step for a user who
>> should have a very simple experience.
>
> Grandma Bettie can just pound sand.
>
> Okay, just kidding. ;-)  Seriously though, I don't see why you'd  
> even need to notify Mrs. Bettie of anything.  If she changes her  
> name after the first comment just store than alternate name in  
> post_meta; same with any other comment fields.  You could also  
> provide a popup that asks if Grandma wants to replace her old name  
> with the new name and only send the email if he says yes.
>
> If Grandma can type a comment in a post box she can handle a dialog  
> that points how she has been inconsistent and asks her what to do.  
> Or we can simply put up with the inconsistency by storing it in  
> post_meta.
>
> On Mar 5, 2010, at 6:30 PM, Brian Layman wrote:
>> With the trends for linked social communities being what they are and
>> with remembered social app auth needs, the desire for registered  
>> users
>> is going to go up.
>
> +1
>
> I bet if you can survey the top 25 high traffic blogs on WordPress  
> that haven't already implemented similar custom user/commenter  
> functionality most would prefer commenters be recorded as users  
> because of the additional user engagement opportunities that would  
> provide them.
>
> -Mike
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Sat Mar  6 02:07:43 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 5 Mar 2010 21:07:43 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <C9ECB187-D50D-41A7-9E19-F1BBD497455E@onolan.org>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<C9ECB187-D50D-41A7-9E19-F1BBD497455E@onolan.org>
Message-ID: <8D24A58C-9299-4217-A761-B76F5A6447E7@newclarity.net>

On Mar 5, 2010, at 8:37 PM, John O'Nolan wrote:
> It's not an important consideration so much as an annoyance / inconvenience. I hate system emails at the best of times - and the one mentioned would just be a pain.

That's cool.

> Is there a reason why we couldn't just write the name to the DB once, and then ignore the "name" field in the future if the email address already exists in the DB?

Because the first time could have been a typo?

On another note, I worry about context.  Let's say I ran a company in the past and left a lot of comments using my gmail address but with my prior company's URL.  Now I've sold that company and started a new one; should the links on the old posts all change to be for my new URL?  Maybe not, that would change the context of some of those comments.

Even more significant, what if someone wants to use the same gmail address but use different names and different URLs for different sites; i.e. for educational credentials someone comments on post in their field of study they might want to add "PhD" but when commenting on a post about sports them might not want to appear pompous so they don't include "PhD."  Also, they would include a URL to their business site in the first and a URL to their personal blog about sports in the second case.  I think name and URL really need to be captured for each comment.

That said, let's explore the following.  If we have a user account keyed on email address where all our comments could roll up then it would be possible to allow a user to maintain their own WordPress site that could aggregate all their comments from all different sites and even be able to update name and URL for all comments (with approval from each site admin, of course.)  This would provide a sort of distributed Disqus/IntenseDebate functionality but built into WordPress.  That would be fun to architect, but would only catch on if built into core. FWIW.

-Mike




From lists at hikarinet.info  Sat Mar  6 02:52:43 2010
From: lists at hikarinet.info (Hikari)
Date: Fri, 5 Mar 2010 23:52:43 -0300
Subject: [wp-hackers] "commenter" user role
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
Message-ID: <AC4C1695CEB543C6AB4DAF972E635A03@MAIN>

Better not force visitors to login to comment...

if they are coming willing to participate and have an account, ok
but if they just came to read the post and decided to comment on it, just let the comment come without any obstacle


---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br


| The first time somebody leaves a comment, we could create a new user, with
| the "commenter" role.
|
| Later, if somebody wants to comment with the same email, but with a
| different name, a new password will be sent to them via email, verifying
| that it's the same person.


From eric at eamann.com  Sat Mar  6 03:02:23 2010
From: eric at eamann.com (Eric Mann)
Date: Fri, 5 Mar 2010 19:02:23 -0800
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <8D24A58C-9299-4217-A761-B76F5A6447E7@newclarity.net>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>	<C9ECB187-D50D-41A7-9E19-F1BBD497455E@onolan.org>
	<8D24A58C-9299-4217-A761-B76F5A6447E7@newclarity.net>
Message-ID: <000601cabcd9$73597c90$5a0c75b0$@com>

> That said, let's explore the following.  If we have a user account keyed
on email address where all our comments could roll up then it would be
possible to allow a user to maintain their own WordPress site that could
aggregate all their comments from all different sites and even be able to
update name and URL for all comments (with approval from each site admin, of
course.)  This would provide a sort of distributed Disqus/IntenseDebate
functionality but built into WordPress.  That would be fun to architect, but
would only catch on if built into core. FWIW.

I think that's a fantastic idea, actually.  Similar in a way to the function
of Gravatars that are keyed off a single email address and don't really
require a "login" per se to function when you're leaving a comment.


From lists at hikarinet.info  Sat Mar  6 03:08:49 2010
From: lists at hikarinet.info (Hikari)
Date: Sat, 6 Mar 2010 00:08:49 -0300
Subject: [wp-hackers] "commenter" user role
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
Message-ID: <4AD3A2615925413E8CDC7694C79B32CB@MAIN>


----- Original Message ----- 
From: "scribu" <scribu at gmail.com>
To: <wp-hackers at lists.automattic.com>
Sent: Friday, 05 March, 2010 7:39 PM
Subject: Re: [wp-hackers] "commenter" user role


| On Sat, Mar 6, 2010 at 12:23 AM, Otto <otto at ottodestruct.com> wrote:
|
| > As long as this has a master off-switch, because there's no way I'd
| > ever implement such a thing on my sites.
| >
| > My users table contains one user: me. It will never contain another.
| >
|
| There's a word for that: irrational fear.


well, most security issues I see are related to registered users...

I'd really not feel confortable having commentators sharing the same user table I use, with a little database query being enough to 
let they do anything they want



| On Sat, Mar 6, 2010 at 12:26 AM, Aaron Jorbin <aaron at jorb.in> wrote:
|
| > I'm with Otto on this one.  I think this would be a much better plugin
| > then core material.
| >
|
| It's very much core material, since it improves the database structure.
|
| However, I do plan to take a stab at it in a plugin, first.


improves in what point?

wp-comments already has a FK to wp-users, only that would be required is to remove user data fields and force a wp-users row to be 
created on every new comment, even spam ones...

this change would be very hard to be optional and easily changeable



ATM my wp-comments have 561KB with 491 comments, wp-posts have 9MB with 281 posts, and wp-users have 4KB with me

if 150 of those comments would generate 4KB in wp-users, it would be 150 users that I can't delete and that will never come back, 
bloating it with 600KB, exactally the size of wp-comments today

how much would wp-comments shrink with the change? 80KB?



---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br 


From lists at hikarinet.info  Sat Mar  6 03:00:20 2010
From: lists at hikarinet.info (Hikari)
Date: Sat, 6 Mar 2010 00:00:20 -0300
Subject: [wp-hackers] "commenter" user role
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
Message-ID: <14CBB533E357450EAA86CFE5FEB29721@MAIN>

Totally agreed! :D

My site is mine and it has 1 unique user, me and myself :)



I'd suggest binding a user row to email only and not to email + name, but that would require to force user to provide a mail


also, if the need is to not duplicate user info in wp-comments, wp-users is much bigger than wp-comments user data fields

it would only be worthy on popular sites that receive a lot of comments, and have faith visitors that always come comment, and 
eventually already let users registar accounts only for commenting, in this case yes
it would be worthy to use the user account to get his name and url

but sites that most commentators add only 1 comment and never come back, even to read the answer (I have some of those in my sites 
and I hate it!), and a bunch visitors that add 2 or 3 comments only, it would just flood wp-users with useless data that hackers and 
spam comments could use to hijack the site
---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br


----- Original Message ----- 
From: "Otto" <otto at ottodestruct.com>
To: <wp-hackers at lists.automattic.com>
Sent: Friday, 05 March, 2010 7:23 PM
Subject: Re: [wp-hackers] "commenter" user role



| As long as this has a master off-switch, because there's no way I'd
| ever implement such a thing on my sites.
|
| My users table contains one user: me. It will never contain another.
|
| -Otto 


From william.canino at googlemail.com  Sat Mar  6 03:22:52 2010
From: william.canino at googlemail.com (William Canino)
Date: Sat, 6 Mar 2010 11:22:52 +0800
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
Message-ID: <e4dc67e1003051922j64f9cca9pf2ade221bdd926f5@mail.gmail.com>

Scribu,

Before anything else, the English word is "commentator".  "Commenter"
is not a word. :)

I think all you mean is adding an extra functionality to the existing
"Only registered users may comment" feature.  In other words, you want
to combine registration and commenting in one step, in one html form.

That's fine, simple enough and is plugin material.  Note that as a
consequence, because he or she is a newly-registered user, each new
commentator would receive the usual "new user" email.

Guys, let's not fret about the security implications here.  Any
blogger who wants this is already using the  "Only registered users
may comment" feature.

> Later, if somebody wants to comment with the same email, but with a
> different name, a new password will be sent to them via email, verifying
> that it's the same person.

No, this should produce an error, e.g., "email already exists. please
login instead".  If the commentator wants to change his name, he can
visit his Edit Profile screen.  As of today, as you know, this doesn't
change the name displayed in all his past comments.

W

On 6 March 2010 04:33, scribu <scribu at gmail.com> wrote:
> From the "widget as post type" thread:
>
> On Fri, Mar 5, 2010 at 9:54 PM, Brian Layman <Bulk at thecodecave.com> wrote:
>
>> Agreed. ?A more appropriate ?action would be to consider comments a post
>> type. ?That would be a hard one to argue against especially because you
>> could even do things like promoting a comment to be a Post/top point in a
>> conversation. Not that I look forward to that expensive merge process..
>>
>
> You can't have comments in the post table because most comments don't come
> from logged-in users. As such, the wp_comments table has several
> user-related columns.
>
> I never liked the duplication that occurs: when a logged-in user leaves a
> comment: his email, for example, is stored both in the wp_users table, and
> the once more for each comment.
>
> The first time somebody leaves a comment, we could create a new user, with
> the "commenter" role.
>
> Later, if somebody wants to comment with the same email, but with a
> different name, a new password will be sent to them via email, verifying
> that it's the same person.
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From lists at hikarinet.info  Sat Mar  6 03:22:59 2010
From: lists at hikarinet.info (Hikari)
Date: Sat, 6 Mar 2010 00:22:59 -0300
Subject: [wp-hackers]  "commenter" user role,
	external service handling users?
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com><349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
	<dc89e3ef1003051453m1cd88bd1x5474341477d31eaa@mail.gmail.com>
Message-ID: <4389405710EC4E10AA18CC1F8992B8C3@MAIN>


----- Original Message ----- 
From: "Aaron Jorbin" <aaron at jorb.in>
Sent: Friday, 05 March, 2010 7:53 PM



| I for one wouldn't appreciate waking up to the
| day after 3.1 (or whenever this got implemented) is released to an
| e-mail from every site that I've commented on with a user account.


There's this problem too, merging would be much more complex than just browsing each comment, moving its user fields to wp-users and 
setting the FK, or identifying that user is already in the table and just setting the FK

Each created user would be required to interact with each site regarding the account... I'd throw each of those mails to SpamCop for 
sure :P



But, if you want a better idea for it...

You could use an external service to handle comments. Something like Gravatar + OpenID. Each user upon commenting is required to 
login on this external tool, to identify himself as himself, and in this tool he'd fill his profile.

wp-comments would only have his email (yes, I wanna have control over my commentators emails, I like to mail them or at least have 
someway to contact them after commenting, I hated when I used Intense Debate and I had no way to contact a commentator!), and when a 
comment should be loaded it would call that service asking for his name and url, as we do with Gravatar


Doing so, you'd only need to drop user name and url from wp-comments, and start using emails. A user would be allowed to choose to 
leave the comment anonymous or register on the service, and you could throw to it unregistered emails with not verified names and 
urls, emptying your database.

You could use filters to overwrite comment_author_link(), so themes wouldn't need to be changed. Just make sure to bring wp-comments 
foelds back upon uninstalling, preferably with commentators data back :P, and not make Wordpress break if your plugin is deactivated 
without being properly uninstalled.



---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br 


From lists at hikarinet.info  Sat Mar  6 03:33:18 2010
From: lists at hikarinet.info (Hikari)
Date: Sat, 6 Mar 2010 00:33:18 -0300
Subject: [wp-hackers] "commenter" user role
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com><349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com><dc89e3ef1003051453m1cd88bd1x5474341477d31eaa@mail.gmail.com><349fe48b1003051504i604b2748q6146cf5323f6edd7@mail.gmail.com><dc89e3ef1003051518l5824ab4ne334789d22100f2a@mail.gmail.com>
	<349fe48b1003051523s7201bb33n945943eca999eb16@mail.gmail.com>
Message-ID: <325E4747B16A4F8F9E06AEFBDE12D151@MAIN>


----- Original Message ----- 
From: "scribu" <scribu at gmail.com>
Sent: Friday, 05 March, 2010 8:23 PM



| > That's a vastly different migration, as it didn't really affect users.
| >  While developers and power users would know what's going on, what
| > about when Grandma goes to comment on the latest picture of little
| > Matty and enters Grandma Bettie instead of Grandma B that she
| > previously used.  We've just now added an extra step for a user who
| > should have a very simple experience.
| >
|
| As I've said in a previous email, she will still be able to comment, just
| that her name will still appear as "Grandma B" instead of "Grandma Bettie".


See, comments are something that change over time. I'll never change my name in my sites's posts author "field", but I like (and 
let's not offtopic debating about it :P) to use keyworkds in comments I do, so sometimes I sign as "Hikari" and use my site's 
homepage, sometimes I sign the same but use my vogonismo category URL, or my http://wordpress.Hikari.ws/ redirecting subdomain, or 
then sign as "Consci?ncia Planet?ria" and use my other site.

I'd hate to be forced to use a unique name and url for all coments on a site I comment a lot, or have to use different emails and 
act as different persons (which case I'd think not good at all) just to referer my sites.

Imagine somebody that have 5 sites and like to alternate among them...

And if you are gonna complain about PageRank spam, just use http://Hikari.ws/email-url-obfuscator/ and you're safe :P =^-^=



---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br 


From ravi-lists at g8o.net  Sat Mar  6 03:33:53 2010
From: ravi-lists at g8o.net (// ravi)
Date: Fri, 5 Mar 2010 22:33:53 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <e4dc67e1003051922j64f9cca9pf2ade221bdd926f5@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<e4dc67e1003051922j64f9cca9pf2ade221bdd926f5@mail.gmail.com>
Message-ID: <8C739933-F3F5-4EF8-BF23-4601535DD5A6@g8o.net>

On Mar 5, 2010, at 10:22 PM, William Canino wrote:
> Before anything else, the English word is "commentator".  "Commenter"
> is not a word. :)
> 

Well, ?commentator? is typically used for someone who is an expert or can talk authoritatively on a subject. This is hardly the right term for the bulk of comment authors on most blogs ;-). ?Commenter? is a very timely coinage.

	?ravi


From mikeschinkel at newclarity.net  Sat Mar  6 03:36:08 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 5 Mar 2010 22:36:08 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <14CBB533E357450EAA86CFE5FEB29721@MAIN>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
	<14CBB533E357450EAA86CFE5FEB29721@MAIN>
Message-ID: <298FDD1B-6CDD-4AD8-9D06-25F7DC323B9C@newclarity.net>

On Mar 5, 2010, at 9:52 PM, Hikari wrote:
> Better not force visitors to login to comment...

I'm pretty sure nobody on this thread was suggesting that visitors be forced to login to comment[1].  I know I've been thinking that a comment would just be recorded as a comment as it always has been.  

But it could really open up lots of useful functionality such as allowing people to mark comments using their email as not their comments.

> but sites that most commentators add only 1 comment and never come back, even to read the answer (I have some of those in my sites 
> and I hate it!), and a bunch visitors that add 2 or 3 comments only, it would just flood wp-users with useless data that hackers and 
> spam comments could use to hijack the site

With better tools to enable and encourage comments (which this could be the base of), there might be fewer one time commenters...

> I'd really not feel confortable having commentators sharing the same user table I use, with a little database query being enough to 
> let they do anything they want

How does a record in a database make a site less secure?  It's only less secure if the site enables them to login using that database record which by default should be disabled, right?

> ATM my wp-comments have 561KB with 491 comments, wp-posts have 9MB with 281 posts, and wp-users have 4KB with me
> 
> if 150 of those comments would generate 4KB in wp-users, it would be 150 users that I can't delete and that will never come back, 
> bloating it with 600KB, exactally the size of wp-comments today
> 
> how much would wp-comments shrink with the change? 80KB?

Is 600KB really a concern? Does your web host charge for disk space by KB?   600KB is many orders of magnitude less than a low end machine running MySQL can handle.

On Mar 5, 2010, at 10:22 PM, William Canino wrote:
> Before anything else, the English word is "commentator".  "Commenter"
> is not a word. :)

Uh, ya sure?

http://dictionary.reference.com/browse/commenter
http://dictionary.reference.com/browse/commentator

Or did I miss the <sic>? :)

> I think all you mean is adding an extra functionality to the existing
> "Only registered users may comment" feature.  In other words, you want
> to combine registration and commenting in one step, in one html form.

Not exactly, at least not me.  For it's all commenters who get stored in the wp_users table.

> Guys, let's not fret about the security implications here.  Any
> blogger who wants this is already using the  "Only registered users
> may comment" feature.

Ditto.

> No, this should produce an error, e.g., "email already exists. please
> login instead".  If the commentator wants to change his name, he can
> visit his Edit Profile screen.  As of today, as you know, this doesn't
> change the name displayed in all his past comments.

Grandma Bettie won't like that... ;-)

-Mike

[1] A major client of mine and a fortune 100 company demanded we require all people to create an account *before* they could comment *and* their goal of the site was to drive social engagement, LOL!  Let me tell you how frustrating *that* was! :-)  


From lists at hikarinet.info  Sat Mar  6 04:33:37 2010
From: lists at hikarinet.info (Hikari)
Date: Sat, 6 Mar 2010 01:33:37 -0300
Subject: [wp-hackers] "commenter" user role
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><20BE80F3-9377-466C-8517-AF9F02795687@onolan.org><349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
Message-ID: <94646CDED2F64BB0AD22C87C59CB78E5@MAIN>


----- Original Message ----- 
From: "Mike Schinkel" <mikeschinkel at newclarity.net>
Sent: Friday, 05 March, 2010 10:11 PM



| What is a "user", really?  Isn't a user merely a human that interacts
| with the site?  Any other definition is merely one person's individual
| preference.

a user for me in this context is somebody that needs his data stored in database to do some interaction with the site

would you like if each and every site you visit asks you to register and pass some of your personal data just to be able to read an 
article, arguing that you are a user?

I really don't like when a site forces me to register to be able to simply comment in a post



| Commenters as users make perfect sense.  It opens up the ability to
| have pages for each commenter showing the posts they've commented
| on, and more.

You can do that using email as index, since ATM users already use their email as an indentification basis for their (Gr)avatar

just create a plugin for it




| Honestly, having the ability to have a person categorized and tagged
| would solve real worlds needs for most sites I've been involved with.

force them to register to be able to comment then


| One major site that I developed was a NASCAR sponsorship site for a local Fortune 100 company.  Had
| users been in wp_posts of type "user" (or better,  "person") then each team member could have easily
| had their name, bios, "fun facts" using custom fields such as favorite food, favorite TV show, first car, etc.
| and tagged with various attributes like "driver", "pitcrew", "manager", "enginetuner", etc. Having
| "people" as accessible as "posts", "pages" and other custom data types would open up WordPress'
| usefulness even more.


That's a great idea and I'd love it. But would you use wp-posts JOIN wp-postmeta for login, rules, permissions and security matters?

I'd rather hook an action upon user creation, which would automatically create a custom typed post, and design a profile page where 
he'd fill his profile, which would be stored in his post's metadata, and have the "post" filled automatically.

One of these metadata would be wp-users PK.



| If Grandma can type a comment in a post box she can handle a dialog
| that points how she has been inconsistent and asks her what to do. Or
| we can simply put up with the inconsistency by storing it in post_meta.

but... if we are gonna deal with same users having different names, emails and urls... isn't it better if we don't store these data 
in 2 or 3 metadata rows for many comments... why don't we simply add 2 or 3 fields to wp-comments table and bind user data to each 
comment?




| On Mar 5, 2010, at 6:30 PM, Brian Layman wrote:
| > With the trends for linked social communities being what they are and
| > with remembered social app auth needs, the desire for registered users
| > is going to go up.
|
| +1
|
| I bet if you can survey the top 25 high traffic blogs on WordPress that haven't already implemented similar custom user/commenter 
functionality most would prefer commenters be recorded as users because of the additional user engagement opportunities that would 
provide them.


This need can be solved with a plugin with a new wp-commentators table, and linking each comment to its rows.

Currently registered users? Add a field to wp-commentators that FK wp-users, or simply the plugin uses wp-users and gets the 
responsibility for it.



----- Original Message ----- 
From: "William Canino" <william.canino at googlemail.com>
Sent: Saturday, 06 March, 2010 12:22 AM


| Guys, let's not fret about the security implications here.  Any
| blogger who wants this is already using the  "Only registered users
| may comment" feature.

But the original suggestion was not to develop a plugin with an enhanced feature. If it was, I at least would love it.

The problem is that the original suggestion was to take wp-comments's comment_author, comment_author_email and comment_author_url 
fields off the table, and use its user_id field to point the commentator's account at wp-users. And have it into core! That's 
something freting about! :P


| > but sites that most commentators add only 1 comment and never come back, even to read the answer
| (I have some of those in my sites
| > and I hate it!), and a bunch visitors that add 2 or 3 comments only, it would just flood wp-users with
| useless data that hackers and
| > spam comments could use to hijack the site
|
| With better tools to enable and encourage comments (which this could be the base of), there might be
| fewer one time commenters...


I doubt it. Most visitors my sites have come from Google, searching for a specific subject which my article talks about.

When I used to follow Google Analytics I saw that very very few ppl came back, and even ppl that comment criticizing my articles 
come back to see my answer.

Once they are gone, they are gone, unless they bookmark it to come back or are spammed to remember about it. They are not coming 
searching for a new yorkut or youtube to "live" and interact, they are just searching for a text to read some of its parts.

It would require much more creativity to attrack random visitors to have average Wordpress sites as somewhere to always comeback, 
then just the site giving them an account and filling their name and url when they fill their email :P



But don't take me wrong, I'd love a plugin with more features related to commentators. As long as I'm not forced to share my 
wp-users with them :P

I understand some sites wanna have users account and stuff, but some sites also don't.



| > I'd really not feel confortable having commentators sharing the same user table I use, with a little
| database query being enough to
| > let they do anything they want
|
| How does a record in a database make a site less secure?  It's only less secure if the site enables them to
| login using that database record which by default should be disabled, right?


But... why use wp-users if they won't login?...
If it's just a matter of "the same commentator should always use the same name, email and url, so I don't want these data being 
duplicated, I want them stored in their own table and just FK them to each comment", then wp-users is really not the best place to 
do it.

Because wp-users is not simply "a table to store users and visitors data", it's to store data from users that are *more than 
guests*, that should be remembered when they come back, and that potencially can have their account promoted to a bigger rule in the 
site.

What's the problem with that? 2.9.2 as I remember was released to fix a security bug related to sites that let commentators have 
accounts...



| > ATM my wp-comments have 561KB with 491 comments, wp-posts have 9MB with 281 posts, and wp-
| users have 4KB with me
| >
| > if 150 of those comments would generate 4KB in wp-users, it would be 150 users that I can't delete and
| that will never come back,
| > bloating it with 600KB, exactally the size of wp-comments today
| >
| > how much would wp-comments shrink with the change? 80KB?
|
| Is 600KB really a concern? Does your web host charge for disk space by KB?   600KB is many orders of
| magnitude less than a low end machine running MySQL can handle.


Nice, if that's not a concern, leave wp-comments alone, with each comment storing its commentator data, and with Wordpress dealing 
with cookies so that this data is remembered when he comes back wanting to make another comment.

I thought the original need behind this idea was to shrink space from wp-comments with not duplicating data from the same 
commentator :P

I just said that moving this data from wp-comments to wp-users would increase database size instead of decreasing it :D



| A major client of mine and a fortune 100 company demanded we require all people to create an account
| *before* they could comment *and* their goal of the site was to drive social engagement, LOL!  Let me tell
| you how frustrating *that* was! :-)

I hate multiply and blogging sites like that. I google something, am thrown to a post on a blog on it, wanna comment, and they want 
me to register. And have a blog there so I can comment! And the incredible thing is that there are ppl blogging there! Even more 
interesting is that most of those bloggers, are old aunties, something like Betie we're talking :P

But... your client is paying you to do what he wants. Your job is to identify wrecking ideas before they are implemented and warn 
your client about it. If he insists, it's his responsibility :P 


From mikeschinkel at newclarity.net  Sat Mar  6 05:55:33 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 6 Mar 2010 00:55:33 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><20BE80F3-9377-466C-8517-AF9F02795687@onolan.org><349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
Message-ID: <189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>

On Mar 5, 2010, at 11:33 PM, Hikari wrote:
> would you like if each and every site you visit asks you to register and
> pass some of your personal data just to be able to read an 
> article, arguing that you are a user?
> 
> I really don't like when a site forces me to register to be able to simply
> comment in a post

Have you been reading my replies, or just skimming them?  I (and others) have said that storing commenters in the wp_users table with a role of "commenter" would not require registration or login in order for someone to comment. The user experience would be (almost) identical to what it is now.

> | Commenters as users make perfect sense.  It opens up the ability to
> | have pages for each commenter showing the posts they've commented
> | on, and more.
> 
> You can do that using email as index, since ATM users already use their email as an indentification basis for their (Gr)avatar

Yes, but not nearly as elegantly.

> just create a plugin for it


Sure, but then you don't get said pages nicely themed with the off-the-shelf themes most people are using these days.

3rd party themes almost never come with templates for obscure plugins.  But themers often theme all functional aspects of WordPress core.  This is something that would benefit from themers attention and thus for a developer and not a designer it is something I very much would like to see themers add to their themes.

> | Honestly, having the ability to have a person categorized and tagged
> | would solve real worlds needs for most sites I've been involved with.
> 
> force them to register to be able to comment then

You are not listening...  I have not suggested that anyone be required to register in order to be able to comment (that'd be foolish, in most cases.)  

However, your comment above was conflating two discussions; storing comments in wp_posts and storing users in wp_posts.  

> | One major site that I developed was a NASCAR sponsorship site for a local Fortune 100 company.  Had
> | users been in wp_posts of type "user" (or better,  "person") then each team member could have easily
> | had their name, bios, "fun facts" using custom fields such as favorite food, favorite TV show, first car, etc.
> | and tagged with various attributes like "driver", "pitcrew", "manager", "enginetuner", etc. Having
> | "people" as accessible as "posts", "pages" and other custom data types would open up WordPress'
> | usefulness even more.
> 
> That's a great idea and I'd love it. But would you use wp-posts JOIN wp-postmeta for login, rules, permissions and security matters?

Maybe; that would be up for discussion.  I was just proposing it for the idea and if adopted the community would figure it out.
> 
> I'd rather hook an action upon user creation, which would automatically create a custom typed post, and design a profile page where 
> he'd fill his profile, which would be stored in his post's metadata, and have the "post" filled automatically.

The downside there is you have to maintain parallel synchronized records.  Not a huge issue, but they can get out of sync when exporting or in other edge cases. But when you look at it there really isn't a need for a separate user table, a user is just another type of content.

OTOH, I can see the downside of deprecating wp_users. Still, if I had a option I'd prefer to move them to wp_posts.

> | If Grandma can type a comment in a post box she can handle a dialog
> | that points how she has been inconsistent and asks her what to do. Or
> | we can simply put up with the inconsistency by storing it in post_meta.
> 
> but... if we are gonna deal with same users having different names, emails and urls... isn't it better if we don't store these data 
> in 2 or 3 metadata rows for many comments... why don't we simply add 2 or 3 fields to wp-comments table and bind user data to each 
> comment?

This debate is circular.  Yes, any of those things can be done.  But why have the extra tables when the core wp_posts table works so well for it and adds all the features that is adds?

BTW, I didn't say different emails, email would be the PK.

> | I bet if you can survey the top 25 high traffic blogs on WordPress
> | that haven't already implemented similar custom user/commenter 
> | functionality most would prefer commenters be recorded as users
> | because of the additional user engagement opportunities that would 
> | provide them.
> 
> This need can be solved with a plugin with a new wp-commentators table, and linking each comment to its rows.

What can be solved with a plugin?  I didn't specify anything other than to say that I believed (and we could survey) high traffic would not be concerned about adding "bulk" to the wp_users table and instead would prefer  the "freebie" benefits that would come with having all commenters in the wp_users table.  My guess is they wouldn't be concerned about growing there user table by the amounts that would be required. Yes I could be wrong hence if "bulk" is the reason not to we should ask the people it would affect the most if they care about said bulk.

> Currently registered users? Add a field to wp-commentators that FK wp-users, or simply the plugin uses wp-users and gets the 
> responsibility for it.

Adding a wp_commenters table would not be smart.  That reminds me of QuickBooks with separate Vendors and Customers which is truly a nightmare when your vendors are also your customers (which is exactly how a business I ran for 12 years operated.)  Having multiple tables for people is just a bad idea, period.  I have too much painful experience to ever want to go through that again without putting up a serious fight.

> 
> From: "William Canino" <william.canino at googlemail.com>
> | Guys, let's not fret about the security implications here.  Any
> | blogger who wants this is already using the  "Only registered users
> | may comment" feature.
> The problem is that the original suggestion was to take wp-comments's comment_author, comment_author_email and comment_author_url 
> fields off the table, and use its user_id field to point the commentator's account at wp-users. And have it into core! That's 
> something freting about! :P

You fret, I rejoice.  

> | With better tools to enable and encourage comments (which this could be the base of), there might be
> | fewer one time commenters...
> 
> I doubt it. Most visitors my sites have come from Google, searching for a specific subject which my article talks about.
> 
> When I used to follow Google Analytics I saw that very very few ppl came back, and even ppl that comment criticizing my articles 
> come back to see my answer.
> 
> Once they are gone, they are gone, unless they bookmark it to come back or are spammed to remember about it. They are not coming 
> searching for a new yorkut or youtube to "live" and interact, they are just searching for a text to read some of its parts.

Then you are not doing a very good job of creating a loyal readership, you are just being SEO opportunistic, not a great long term strategy as content farms work to capture more and more SEO traffic (see http://www.readwriteweb.com/archives/content_farms_impact.php)

Sorry but your current traffic pattern isn't a reason to limit use of best practices in the core. 

> But don't take me wrong, I'd love a plugin with more features related to commentators. As long as I'm not forced to share my 
> wp-users with them :P

Other than superstition I haven't heard a reason from you why having commenters in wp_users is bad.
And it's not commentators, see http://dictionary.reference.com/browse/commentator.

> I understand some sites wanna have users account and stuff, but some sites also don't.

Commenters don't have to appear in the default user list in the admin, so why is it a problem?  We store things in a database where they make the most sense and then create a UI that makes the most sense; one does not have to drive the other.

> | > I'd really not feel confortable having commentators sharing the same user table I use, with a little
> | database query being enough to
> | > let they do anything they want
> |
> | How does a record in a database make a site less secure?  It's only less secure if the site enables them to
> | login using that database record which by default should be disabled, right?
> 
> But... why use wp-users if they won't login?...
> If it's just a matter of "the same commentator should always use the same name, email and url, so I don't want these data being 
> duplicated, I want them stored in their own table and just FK them to each comment", then wp-users is really not the best place to 
> do it.

By putting commenters in wp_users you get to use wp_usermeta to allow you to start storing information relevant to commenters, i.e. cached_avatar, last_comment_date, number_of_comments, twitter_screen_name, facebook_url, linkedin_url and whatever else some plugin wants to add about a commenter. The new authors template becomes usable for commenters.  And all plugins for users with a tiny bit of tweaking (or none at all) become usable with commenters too, i.e. "Bind user to category", "Users to CSV", "Extended User Profile", "User Theme", etc.

Note that wp_commentmeta relates to a comment, not to a user so it isn't he equivalent of wp_usermeta. 

> Because wp-users is ... to store data from users that are *more than guests*,
> that should be remembered when they come back, and that potencially can
> have their account promoted to a bigger rule in the site.

By whose decree?  The point is that AFAIK there isn't a defining requirement that the wp_users table be for "more than guests"; why should it be?  That's what you've believed it to be and that's what you prefer it to be (because it's been that way thus far?) but it doesn't have to stay that way.

> What's the problem with that? 2.9.2 as I remember was released to fix a security
> bug related to sites that let commentators have accounts...

Good thing they fixed that bug then, problem solved. ;-)

> Nice, if that's not a concern, leave wp-comments alone, with each comment storing
> its commentator data, and with Wordpress dealing with cookies so that this data is
> remembered when he comes back wanting to make another comment.

I don't care about the space, I care about the newly enabled functionality.
> 
> I thought the original need behind this idea was to shrink space from wp-comments
> with not duplicating data from the same commentator :P

But not my reason for supporting the idea.  Next...

> I hate multiply and blogging sites like that. I google something, am thrown to a post
> on a blog on it, wanna comment, and they want me to register. And have a blog there
> so I can comment! And the incredible thing is that there are ppl blogging there! Even more 
> interesting is that most of those bloggers, are old aunties, something like Betie we're talking :P

On this we can agree today. :)
> 
> But... your client is paying you to do what he wants. Your job is to identify wrecking ideas
> before they are implemented and warn your client about it. If he insists, it's his responsibility :P 

Actually, my client (Interactive Agency) was paying me to implement what their client (local Fortune 100) wanted. My opinion on that project never made it to the big client because my client only wanted to do what their client asked for, nothing more. OTOH, they paid me well, and the site doesn't have many commenters so, whatever.

-Mike

From harish.mlists at gmail.com  Sat Mar  6 09:25:17 2010
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Sat, 06 Mar 2010 10:25:17 +0100
Subject: [wp-hackers] Tiny patch for options-general.php
Message-ID: <4B921F7D.9080805@gmail.com>

I have attached a tiny patch for wp-admin/options-general.php. This
corrects some code which breaks xhtml validation and prevents my browser
from rendering the options page.

I have also created a ticket for it on WordPress' Trac:
http://core.trac.wordpress.org/ticket/12530

Perhaps someone else who's run into this issue will find it helpful.

Harish
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: options-general.patch
URL: <http://lists.automattic.com/pipermail/wp-hackers/attachments/20100306/f2bfe72c/attachment.asc>

From wordpress at dd32.id.au  Sat Mar  6 10:14:23 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sat, 06 Mar 2010 22:14:23 +1200
Subject: [wp-hackers] Tiny patch for options-general.php
In-Reply-To: <4B921F7D.9080805@gmail.com>
References: <4B921F7D.9080805@gmail.com>
Message-ID: <op.u84759t3spxmuu@ho.st>

..Well i'm surprised to see the .patch made it through the mailing list  
software, Usually attachments get striped.

Anyway, This is just a note that i've commited this patch, Thanks!

Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

On Sat, 06 Mar 2010 21:25:17 +1200, Harish Narayanan  
<harish.mlists at gmail.com> wrote:

> I have attached a tiny patch for wp-admin/options-general.php. This
> corrects some code which breaks xhtml validation and prevents my browser
> from rendering the options page.
>
> I have also created a ticket for it on WordPress' Trac:
> http://core.trac.wordpress.org/ticket/12530
>
> Perhaps someone else who's run into this issue will find it helpful.
>
> Harish

From john.wp at onolan.org  Sat Mar  6 13:20:08 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Sat, 6 Mar 2010 13:20:08 +0000
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <8D24A58C-9299-4217-A761-B76F5A6447E7@newclarity.net>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<C9ECB187-D50D-41A7-9E19-F1BBD497455E@onolan.org>
	<8D24A58C-9299-4217-A761-B76F5A6447E7@newclarity.net>
Message-ID: <3B5BB03A-3926-46B3-A6CF-184D58770808@onolan.org>

I'm sorry, didn't you just say:

"Seems weird behavior to me, but maybe I just don't understand the  
rationale."

But now you're giving multiple examples in context for the rationale?  
You either understand it or you don't. Don't call the issues that I  
raise "weird" and then go on to raise the exact same issues yourself.

Also

"Let's say I ran a company in the past and left a lot of comments  
using my gmail address but with my prior company's URL.  Now I've sold  
that company and started a new one; should the links on the old posts  
all change to be for my new URL?"

This is completely irrelevant. In this case you would be abusing the  
Wordpress comment form, and if the wrong company name showed up at  
some point then that's your own fault.
The form does not say "Hey what company do you work for?" or "Hey  
please spam us cause you think it has SEO value" it says "Name" -  
like, your name - not that hard to understand.

We should not be catering to the issues of spammers. Yes, I'm sure  
there are a few legitimate cases where one might leave a company name  
in the "name" field, but we both know that 99% of the time it's done  
by spammers, not real people.

John



On 6 Mar 2010, at 02:07, Mike Schinkel wrote:

> On Mar 5, 2010, at 8:37 PM, John O'Nolan wrote:
>> It's not an important consideration so much as an annoyance /  
>> inconvenience. I hate system emails at the best of times - and the  
>> one mentioned would just be a pain.
>
> That's cool.
>
>> Is there a reason why we couldn't just write the name to the DB  
>> once, and then ignore the "name" field in the future if the email  
>> address already exists in the DB?
>
> Because the first time could have been a typo?
>
> On another note, I worry about context.  Let's say I ran a company  
> in the past and left a lot of comments using my gmail address but  
> with my prior company's URL.  Now I've sold that company and started  
> a new one; should the links on the old posts all change to be for my  
> new URL?  Maybe not, that would change the context of some of those  
> comments.
>
> Even more significant, what if someone wants to use the same gmail  
> address but use different names and different URLs for different  
> sites; i.e. for educational credentials someone comments on post in  
> their field of study they might want to add "PhD" but when  
> commenting on a post about sports them might not want to appear  
> pompous so they don't include "PhD."  Also, they would include a URL  
> to their business site in the first and a URL to their personal blog  
> about sports in the second case.  I think name and URL really need  
> to be captured for each comment.
>
> That said, let's explore the following.  If we have a user account  
> keyed on email address where all our comments could roll up then it  
> would be possible to allow a user to maintain their own WordPress  
> site that could aggregate all their comments from all different  
> sites and even be able to update name and URL for all comments (with  
> approval from each site admin, of course.)  This would provide a  
> sort of distributed Disqus/IntenseDebate functionality but built  
> into WordPress.  That would be fun to architect, but would only  
> catch on if built into core. FWIW.
>
> -Mike
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From dougal at gunters.org  Sat Mar  6 15:56:10 2010
From: dougal at gunters.org (Dougal Campbell)
Date: Sat, 06 Mar 2010 10:56:10 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
Message-ID: <4B927B1A.40804@gunters.org>

On Mar 5 2010 5:39 PM, scribu wrote:
> On Sat, Mar 6, 2010 at 12:23 AM, Otto<otto at ottodestruct.com>  wrote:
>
>    
>> As long as this has a master off-switch, because there's no way I'd
>> ever implement such a thing on my sites.
>>
>> My users table contains one user: me. It will never contain another.
>>
>>      
> There's a word for that: irrational fear.
>    

I very much disagree with that -- it's not irrational, and it's not 
necessarily fear.

  * It's a security concern: by keeping commenters out of the regular 
users table, you eliminate a class of security violations: unauthorized 
privilege escalation. If the commenter doesn't have any "real" user 
credentials, there are whole swathes of the core code paths that become 
inaccessible. An example of a privilege escalation can be as simple as 
the recent buglet that allowed unauthorized registered users to peek 
into the Trash. But it obviously, there *could* be more serious 
implications, if somebody forgets to put a capability check into place 
somewhere else.
  * It complicates the ability to support Anonymous commenters.
  * It opens the door to "dirty" the users table with tons of useless 
rows. I had open registration on one of my sites for a while, in order 
to support a plugin for a third-party login system, and in no time, I 
had tons of bogus user registrations. Quite annoying.

Now, the idea of moving comments to the post table is a separate 
discussion. There are pros and cons, for sure. On the pro side, you 
would eliminate a table, and you could replace most of the comment 
manipulation code with the existing post manipulation functions. On the 
con side you'll replace relational queries with sub-selects, and I think 
it wouldn't be as efficient. As far as the commenter data goes, 
obviously it could move to postmeta. So, sure, it *could* be done. I 
just don't think that any gains that we *might* get would be worth it. 
What are we trying to do, recreate Drupal's "everything is a node" 
structure?

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From scribu at gmail.com  Sat Mar  6 16:15:59 2010
From: scribu at gmail.com (scribu)
Date: Sat, 6 Mar 2010 18:15:59 +0200
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <4B927B1A.40804@gunters.org>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
	<4B927B1A.40804@gunters.org>
Message-ID: <349fe48b1003060815g2e65483bwb7f1a969af747280@mail.gmail.com>

On Sat, Mar 6, 2010 at 5:56 PM, Dougal Campbell <dougal at gunters.org> wrote:

>  * It's a security concern: by keeping commenters out of the regular users
> table, you eliminate a class of security violations: unauthorized privilege
> escalation. If the commenter doesn't have any "real" user credentials, there
> are whole swathes of the core code paths that become inaccessible. An
> example of a privilege escalation can be as simple as the recent buglet that
> allowed unauthorized registered users to peek into the Trash. But it
> obviously, there *could* be more serious implications, if somebody forgets
> to put a capability check into place somewhere else.
>

What this implies is that all sites that have user registration open are
insecure.



>  * It complicates the ability to support Anonymous commenters.
>

Please explain.


 * It opens the door to "dirty" the users table with tons of useless rows. I
> had open registration on one of my sites for a while, in order to support a
> plugin for a third-party login system, and in no time, I had tons of bogus
> user registrations. Quite annoying.
>

We could automatically remove commenters when they have no more comments on
the site. Problem solved.

Just to clarify: open user registration would *not* be required for the
"commenter" role proposal to function.


-- 
http://scribu.net

From otto at ottodestruct.com  Sat Mar  6 16:59:22 2010
From: otto at ottodestruct.com (Otto)
Date: Sat, 6 Mar 2010 10:59:22 -0600
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <349fe48b1003060815g2e65483bwb7f1a969af747280@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com> 
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com> 
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com> 
	<4B927B1A.40804@gunters.org>
	<349fe48b1003060815g2e65483bwb7f1a969af747280@mail.gmail.com>
Message-ID: <161617691003060859g7554b07bv5dd1d393ca93ac08@mail.gmail.com>

On Sat, Mar 6, 2010 at 10:15 AM, scribu <scribu at gmail.com> wrote:
> What this implies is that all sites that have user registration open are
> insecure.

I prefer to think of it as "less secure". Security isn't a binary state.

>> ?* It complicates the ability to support Anonymous commenters.
>
> Please explain.

Anonymous commenters, as in "no name or email". An anon comment. This
is supported by WordPress, even if most people require the name and
email fields to be filled in.

Essentially by linking to the user table you're either wanting to a)
not let comment authors be anonymous or b) wanting to pollute the
users table with a bunch of fake unverified informations.

> ?* It opens the door to "dirty" the users table with tons of useless rows. I
>> had open registration on one of my sites for a while, in order to support a
>> plugin for a third-party login system, and in no time, I had tons of bogus
>> user registrations. Quite annoying.
>
> We could automatically remove commenters when they have no more comments on
> the site. Problem solved.

No, that doesn't really solve the problem of tons of crap in the users table.

> Just to clarify: open user registration would *not* be required for the
> "commenter" role proposal to function.

Yes, it should be linked to that option, because by making users,
you're implicitly giving the ability to log in to them. If somebody
can create an entry in the users table, then they have registered on
the site. That's what registration *is*.

-Otto

From mujtaba.boori at gmail.com  Sat Mar  6 17:05:42 2010
From: mujtaba.boori at gmail.com (Mujtaba Boori)
Date: Sat, 6 Mar 2010 17:05:42 +0000
Subject: [wp-hackers] Google summer of code Idea help
Message-ID: <7cfa7a6a1003060905s688639e2he207bdadd1ab0247@mail.gmail.com>

Hello

I'm sorry if this the wrong place to ask.

I am preparing my self to apply and propose to participate on google summer
of code. I was wondering if you could recommend some ideas which are very
important for WordPress and suitable for me.

summer of code: http://socghop.appspot.com/

some information about me
I'm freshman computer science student . I have been designing websites for
over five years. I have a fair programing skills in PHP and JAVA .

From scribu at gmail.com  Sat Mar  6 17:06:54 2010
From: scribu at gmail.com (scribu)
Date: Sat, 6 Mar 2010 19:06:54 +0200
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <161617691003060859g7554b07bv5dd1d393ca93ac08@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
	<349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com>
	<4B927B1A.40804@gunters.org>
	<349fe48b1003060815g2e65483bwb7f1a969af747280@mail.gmail.com>
	<161617691003060859g7554b07bv5dd1d393ca93ac08@mail.gmail.com>
Message-ID: <349fe48b1003060906m2e517725r414221765767ae35@mail.gmail.com>

On Sat, Mar 6, 2010 at 6:59 PM, Otto <otto at ottodestruct.com> wrote:

> >>  * It complicates the ability to support Anonymous commenters.
> >
> > Please explain.
>
> Anonymous commenters, as in "no name or email". An anon comment. This
> is supported by WordPress, even if most people require the name and
> email fields to be filled in.
>
> Essentially by linking to the user table you're either wanting to a)
> not let comment authors be anonymous or b) wanting to pollute the
> users table with a bunch of fake unverified informations.
>

There could be an "Annonymous" commenter account that would allow annonymous
comments.



>  > We could automatically remove commenters when they have no more comments
> on
> > the site. Problem solved.
>
> No, that doesn't really solve the problem of tons of crap in the users
> table.
>

Tons of crap, such as? Please be specific.



>  > Just to clarify: open user registration would *not* be required for the
> > "commenter" role proposal to function.
>
> Yes, it should be linked to that option, because by making users,
> you're implicitly giving the ability to log in to them. If somebody
> can create an entry in the users table, then they have registered on
> the site. That's what registration *is*.
>

It shouldn't be linked to that option. As I said previously, unlike
subscribers, commenter accounts with no comments would be automatically
deleted.


-- 
http://scribu.net

From scribu at gmail.com  Sat Mar  6 17:08:56 2010
From: scribu at gmail.com (scribu)
Date: Sat, 6 Mar 2010 19:08:56 +0200
Subject: [wp-hackers] Google summer of code Idea help
In-Reply-To: <7cfa7a6a1003060905s688639e2he207bdadd1ab0247@mail.gmail.com>
References: <7cfa7a6a1003060905s688639e2he207bdadd1ab0247@mail.gmail.com>
Message-ID: <349fe48b1003060908s32fd9e68q20e74f39cdc6786d@mail.gmail.com>

You can see a list of proposed ideas here:

http://codex.wordpress.org/GSoC2010


-- 
http://scribu.net

From jdub at bethesignal.org  Sat Mar  6 18:00:01 2010
From: jdub at bethesignal.org (Jeff Waugh)
Date: Sun, 7 Mar 2010 05:00:01 +1100
Subject: [wp-hackers] A disadvantage of comment normalisation [Was:
 "commenter" user role]
In-Reply-To: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
Message-ID: <20100306180001.GS2337@sliver>

<quote who="scribu">

> I never liked the duplication that occurs: when a logged-in user leaves a
> comment: his email, for example, is stored both in the wp_users table, and
> the once more for each comment.

One advantage to this denormalisation (if we're being anal retentive about
it)... historical accuracy.

An odd example from the opposite direction: I wrote a quick hack for one of
my sites which duplicates the user's bio into a custom field on each post
they publish, such that if they change their bio in the future, it will not
change on their historical posts. It was important because the context of
the bio and article were linked -- conflict of interest disclosures and the
like.

Were comment details normalised against the users table, old comment details
would change in a similar fashion (which may not be a problem for all sites,
but it would become dramatically more inconvenient for those who care).

- Jeff

-- 
The Great Australian Internet Blackout   http://www.internetblackout.com.au/
 
        "We must be proactive, eternally vigilant, forever fighting,
             overwhelmingly clever and handsome." - Robert Love

From scribu at gmail.com  Sat Mar  6 18:15:57 2010
From: scribu at gmail.com (scribu)
Date: Sat, 6 Mar 2010 20:15:57 +0200
Subject: [wp-hackers] A disadvantage of comment normalisation [Was:
	"commenter" user role]
In-Reply-To: <20100306180001.GS2337@sliver>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20100306180001.GS2337@sliver>
Message-ID: <349fe48b1003061015t4ddd0a46qe71a5ad9d4d3fe98@mail.gmail.com>

A similar issue that occurred to me was what happens with the comments when
a user is deleted (no matter the role)?


-- 
http://scribu.net

From mikeschinkel at newclarity.net  Sat Mar  6 20:59:16 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 6 Mar 2010 15:59:16 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <3B5BB03A-3926-46B3-A6CF-184D58770808@onolan.org>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<C9ECB187-D50D-41A7-9E19-F1BBD497455E@onolan.org>
	<8D24A58C-9299-4217-A761-B76F5A6447E7@newclarity.net>
	<3B5BB03A-3926-46B3-A6CF-184D58770808@onolan.org>
Message-ID: <58ABF134-0164-46B8-BF07-A46EB4DF251E@newclarity.net>

On Mar 6, 2010, at 8:20 AM, John O'Nolan wrote:
> I'm sorry, didn't you just say:
> 
> "Seems weird behavior to me, but maybe I just don't understand the rationale."
> 
> But now you're giving multiple examples in context for the rationale? You either understand it or you don't. Don't call the issues that I raise "weird" and then go on to raise the exact same issues yourself.

Touche'.  I didn't see it at first because your example use cases seems arbitrary to me, i.e. John, John O'Nolan, JohnONolan. Then as I was thinking through different roles I recognized the use cases. I learn best when I'm defending an idea, not necessarily when looking at other's defenses. So sorry, my bad.  

> "Let's say I ran a company in the past and left a lot of comments using my gmail address but with my prior company's URL.  Now I've sold that company and started a new one; should the links on the old posts all change to be for my new URL?"
> 
> This is completely irrelevant. In this case you would be abusing the Wordpress comment form, and if the wrong company name showed up at some point then that's your own fault.
> The form does not say "Hey what company do you work for?" or "Hey please spam us cause you think it has SEO value" it says "Name" - like, your name - not that hard to understand.

It's not irrelevant and it would not be an abuse of the WordPress comment form; you are doing the same you just called me out for; not seeing the use case. At least in my defense I asked you if I was missing something. :-)

Here are some examples.  I used to run a company called VBxtras that sold software developer tools to Visual Basic developers.  I now am partners in a coworking space called Ignition Alley and executive director of a non-profit called Startup Atlanta. If I commented on a web post about Visual Basic development I might have left my name as "Mike Schinkel, President of VBxtras." Today when commenting on a post about coworking I might want my name to be "Mike Schinkel, Partner at Ignition Alley."  And when commenting on a post about startup issues I might want my name to be "Mike Schinkel, Executive Director of Startup Atlanta."  (of course the name fields sux for all that but how else to provide it? In the comment, maybe.)

And there's no real SEO value in any of those things I mention, it's not like I suggested my hyperlinked name be "Visual Basic Developer Tools" or "Atlanta Coworking" (for Startup Atlanta there are not obvious keywords for search traffic.)  It's about transparency on my part and wanting to provide people with appropriate context.  What's more, to help people change all their past names and URLs at once would help spammers to promote their latest scammy endeavor.

Which actually brings up a great point and that is it would be helpful to have optional company & role fields for comment forms so if someone wanted to identify themselves it would be possible. 

> We should not be catering to the issues of spammers. Yes, I'm sure there are a few legitimate cases where one might leave a company name in the "name" field, but we both know that 99% of the time it's done by spammers, not real people.

Agree. My point were not "issues for spammers" though. You assumed wrongly from my discussion just as I assumed wrongly from yours.


On Mar 6, 2010, at 11:59 AM, Otto wrote:
> Essentially by linking to the user table you're either wanting to a)
> not let comment authors be anonymous or b) wanting to pollute the
> users table with a bunch of fake unverified informations.

Or "c)", simply don't record anything in the wp_users tables for anonymous commenters since you don't have any data about them.

As you said about security it's not a binary thing; don't make it a false dichotomy.

> No, that doesn't really solve the problem of tons of crap in the users table.

But "c)" does.
> 
>> Just to clarify: open user registration would *not* be required for the
>> "commenter" role proposal to function.
> 
> Yes, it should be linked to that option, because by making users,
> you're implicitly giving the ability to log in to them.

Not if commenters are explicitly not allowed to log in when such an option is specified in the admin.

> If somebody
> can create an entry in the users table, then they have registered on
> the site. That's what registration *is*.

Then *redefine* what registration *is*, problem solved.

On Mar 6, 2010, at 1:00 PM, Jeff Waugh wrote:
>> I never liked the duplication that occurs: when a logged-in user leaves a
>> comment: his email, for example, is stored both in the wp_users table, and
>> the once more for each comment.
> 
> One advantage to this denormalisation (if we're being anal retentive about
> it)... historical accuracy.

I agree with that which is my point from earlier to John O'Nolan which he mistook to be advocating for spammers.  

Still, I  think moving commenters to wp_users tables is beneficial because it creates an explicit entity for a commenter vs. the current artifactual approach which allows metadata to be applied and UI to be created around commenters (vs. just around comments.)  

More uses: a site owner could adds notes about a commenter for future reference, and a site owner could elevate frequent trusted commenters to have specialized rights on the site (to moderate comments, maybe, or create posts that must be approved by the site owner) and everything they do could be tied back to their user record and thus potentially displayed on their user page.  I'm assuming these added functionalities would come from plugins, but to empower these to work together across plugins you really need a record in the database for each commenter that is canon.

-Mike

From lists at hikarinet.info  Sat Mar  6 22:02:01 2010
From: lists at hikarinet.info (Hikari)
Date: Sat, 6 Mar 2010 19:02:01 -0300
Subject: [wp-hackers] "commenter" user role
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><20BE80F3-9377-466C-8517-AF9F02795687@onolan.org><349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com><B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net><94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
Message-ID: <4490A104981849F28F0291267F7FF40A@MAIN>


----- Original Message ----- 
From: "Mike Schinkel" <mikeschinkel at newclarity.net>
Sent: Saturday, 06 March, 2010 2:55 AM



| Have you been reading my replies, or just skimming them?  I (and
| others) have said that storing commenters in the wp_users table with
| a role of "commenter" would not require registration or login in order
| for someone to comment. The user experience would be (almost)
| identical to what it is now.

Some said that, but some said other ideas too.

My concern is regarding a wp-users row, which needs just a role change to become admin. Without a password it may become more secure 
or less secure depending on how it's implemented, but I'd really not like wp-users rows being created as a result of a comment. Not 
worthy the security risk.



| > just create a plugin for it
|
|
| Sure, but then you don't get said pages nicely themed with the off-the-shelf themes most people are using these days.

just hook a filter to comment_author_link and no theme will need to be changed

also don't expect theme authors, with all the love they receive, to be happy if core requires them to change their outdated themes 
to support this feature :p


| You are not listening...  I have not suggested that anyone be required to register in order to be able to comment (that'd be 
foolish, in most cases.)

I've just read somebody saying that this feature is only for people that is already forcing registration to allow commenting, and 
somebody else agreed o.O

But I also read in the begining of the talk that the objective was to reduce database size on avoiding duplicates in wp-comments, 
which turned back to duplicates using metadata to store multiple different data for the same person, and I pointed out that moving 
commentators data to wp-users on a site with a lot of commentators that make only 1 comment would increase database size indeed, and 
this size is insignificant anyway :p



| > That's a great idea and I'd love it. But would you use wp-posts JOIN wp-postmeta for login, rules, permissions and security 
matters?
|
| Maybe; that would be up for discussion.  I was just proposing it for the idea and if adopted the community would figure it out.

"2 posts are logged in ATM, they are on themselves posts", that would be funny to read :D


| > I'd rather hook an action upon user creation, which would automatically create a custom typed post, and design a profile page 
where
| > he'd fill his profile, which would be stored in his post's metadata, and have the "post" filled automatically.
|
| The downside there is you have to maintain parallel synchronized records.  Not a huge issue, but they can get out of sync when 
exporting or in other edge cases. But when you look at it there really isn't a need for a separate user table, a user is just 
another type of content.

No parallel records. Everything wp-users and user metadata stores will remain there, and postmeta will store everything else :)


| This debate is circular.  Yes, any of those things can be done.  But why
| have the extra tables when the core wp_posts table works so well for it
| and adds all the features that is adds?

well, for commentators, wp-posts is definetely better than wp-users

but I'd still prefere a wp-commentators table, I've already disabled revisions and drafts to not just posts ID

a new table is not the end of the world, my site has 38, and if we considers the risks of having simple commentators lying on 
wp-users, a table to store them is the next logical idea


| BTW, I didn't say different emails, email would be the PK.

ok :)


| > | I bet if you can survey the top 25 high traffic blogs on WordPress
| > | that haven't already implemented similar custom user/commenter
| > | functionality most would prefer commenters be recorded as users
| > | because of the additional user engagement opportunities that would
| > | provide them.
| >
| > This need can be solved with a plugin with a new wp-commentators table, and linking each comment to its rows.
|
| What can be solved with a plugin?  I didn't specify anything other than to say that I believed (and we could survey) high traffic 
would not be concerned about adding "bulk" to the wp_users table and instead would prefer  the "freebie" benefits that would come 
with having all commenters in the wp_users table.  My guess is they wouldn't be concerned about growing there user table by the 
amounts that would be required. Yes I could be wrong hence if "bulk" is the reason not to we should ask the people it would affect 
the most if they care about said bulk.
|


Wait, if these high traffic sites are already letting users login, for sure they'll want commentators stored in wp-users. But if 
they aren't, they won't like it.

And high traffic sites can still be administrated by security noobs that will only want the feature working and only bother with 
hacking after their high traffic sites are not high traffic anymore.



I still don't get why commentators should be stored in wp-users at all. If it's just to store their data, a new table can solve it. 
If they won't be required to create account and deal with it, a new table can solve it. But if they will have an account, or if a 
new feature will handle with current users too, than just use wp-users and leave it in a plugin.

I know, many ppl have different needs regarding this subject and they diverge in their ideas too :p



| > Currently registered users? Add a field to wp-commentators that FK wp-users, or simply the plugin uses wp-users and gets the
| > responsibility for it.
|
| Adding a wp_commenters table would not be smart.  That reminds me of QuickBooks with separate Vendors and Customers which is truly 
a nightmare when your vendors are also your customers (which is exactly how a business I ran for 12 years operated.)  Having 
multiple tables for people is just a bad idea, period.  I have too much painful experience to ever want to go through that again 
without putting up a serious fight.


But we are not talking about e-commerce here...

Commentators are people, and use and interact with our site. But wp-users is too powerful, detailed and risky *if* all we need is 
take 3 fields out of wp-comments and add a FK field to it.

Only if new features are developed that require more user interaction than simply commenting, and that would require them to 
register, that wp-users would be worth it.

But some ppl wanna automatically add rows to wp-users without giving them passwords and letting them login. For this need, wp-users 
is not a good place to store commentators, because even though they are already people, their usage differ a lot from registered 
users.

Again, would you create a user account to every visitor of your site? They are people too, and a stat plugin could use it...



| > | With better tools to enable and encourage comments (which this could be the base of), there might be
| > | fewer one time commenters...

See? Which new features would these be?

Commenting is *not* something that justify using wp-users. "better tools to enable and encourage comments", that would require 
registration and login, could be.



| Then you are not doing a very good job of creating a loyal readership,
| you are just being SEO opportunistic, not a great long term strategy
| as content farms work to capture more and more SEO traffic (see
| http://www.readwriteweb.com/archives/content_farms_impact.php)

well I'm not specialist on this subject, and I myself only go back to 2 or 3 sites often. Most Wordpress sites are not forums, and 
most ppl don't read large texts.

As I said before, there are ppl like multiply.com users that create account for commenting and start blogging after it. I hardly 
would create account on an unknown site just for comment on it.


| Sorry but your current traffic pattern isn't a reason to limit use of best practices in the core.

I just mentioned an exemple I know. Will you say that most Wordpress users have high traffic and loyable commenters? I have a few 
BTW.

Note Wordpress is a CMS, not  a traffic saver. What keeps ppl coming is the content.


| > But don't take me wrong, I'd love a plugin with more features related to commentators. As long as I'm not forced to share my
| > wp-users with them :P
|
| Other than superstition I haven't heard a reason from you why having commenters in wp_users is bad.

With only active users having account, their password would need to be hacked to hack the site.

Could you copy here the 2.9.2 launching text?



| > I understand some sites wanna have users account and stuff, but some sites also don't.
|
| Commenters don't have to appear in the default user list in the admin, so why is it a problem?  We store things in a database 
where they make the most sense and then create a UI that makes the most sense; one does not have to drive the other.

hackers don't use normal UIs...



| By putting commenters in wp_users you get to use wp_usermeta to allow you to start storing information relevant to commenters, 
i.e. cached_avatar, last_comment_date, number_of_comments, twitter_screen_name, facebook_url, linkedin_url and whatever else some 
plugin wants to add about a commenter. The new authors template becomes usable for commenters.  And all plugins for users with a 
tiny bit of tweaking (or none at all) become usable with commenters too, i.e. "Bind user to category", "Users to CSV", "Extended 
User Profile", "User Theme", etc.


Now we have some features! :D

Some of those would require a profile page to be worthy, and others would require commentator filling a form. THAT's user-like 
stuff, that justify wp-users. And user registration and login, at least so that they can update their data.

If I'd want those features, I'd open public registration. When I don't want them, I'd want commentators out of wp-users!



To fit all needs, how about leaving wp-comments alone, using current user registration features, and attach new features to it?

When a user is interested on those features, he registers an account. When a comment is done by a user, a plugin filter ignores 
wp-comments fields and load data from wp-users/meta, and all new features are added as usermeta.


As I've pointed, wp-comments is not a size eater at all, and we already have comments attached to users. So all your basic needs are 
already there.

Only problem seems to be that commentators data is still being loaded from wp-comments, even for registered users. As I said a 
filter can solve that, with the advantage of being backward compatible for when visitors only wanna comment and don't wanna register 
account at all.

Remembering there is already a feature to force registration for commenting. In this case just leave those wp-comments fields 
obsolete and empty.

All this is pretty much plugin doable.



| Note that wp_commentmeta relates to a comment, not to a user so it isn't he equivalent of wp_usermeta.

for sure, I think we all agree on adding commentators to a specific table to fit your needs, we only disagree on which table to use 
:P

if commentators need registration and login => wp-users
if you only wanna store commentators data to a table => get out of my wp-users!!



| > Because wp-users is ... to store data from users that are *more than guests*,
| > that should be remembered when they come back, and that potencially can
| > have their account promoted to a bigger rule in the site.
|
| By whose decree?  The point is that AFAIK there isn't a defining requirement that the wp_users table be for "more than guests"; 
why should it be?  That's what you've believed it to be and that's what you prefer it to be (because it's been that way thus far?) 
but it doesn't have to stay that way.


I believe (:P) all site admins agree that rarely a commentator will get promoted to a bigger rule in the site, even for sites that 
let commentators register accounts.

I see accounts as users that do more stuff than simply visit the site and read its content and simply comment.

In the case a popular commentator wanting and being invited for a bigger rule, then he registers an account.


Yes yes it's possible and many sites let commentators register accounts, some even force it. I myself even like the idea of having 
to login to comment so that we can know each commentator is really him and not a fake.

But it's optional by the core. Admin can enable it to be forced, at the same time he can block account registration. I don't really 
think this vast optional behavior should be changed, narrowing admin power over his site.


I'd like to know when a coming back commentator is really him because he login, but I don't think the security risk is worth it.

Note I'm in no way saying u must agree with me or saying u shouldn't let or force commentators or visitors to register accounts 
(just remembered private posts that require login to be viewed...), or even automatically create new users upon comments. You can do 
it howerver u want.

I'm saying that forcing other ppl to do it won't work. And if ppl don't want more users in wp-users, they have the right to keep it 
clean. We're blessed this is possible now.


If you guys want new features that require wp-users, just develop a base plugin with the base features, and then develop other 
plugins that require it to work. Everybody will be happy.



| > What's the problem with that? 2.9.2 as I remember was released to fix a security
| > bug related to sites that let commentators have accounts...
|
| Good thing they fixed that bug then, problem solved. ;-)

good thing?...

do you remember a bug that made lots of WP sites be hacked, we had to verify in our wp-users (ops!) if there were new users created 
by the hacking, and verifying it was much easier for sites with few users (ops!!!)??


having an account in wp-users is a step behind of being admin and having full control of the site, all you need is a rule change, 
that among other methods can be done directly in mysql!

don't think hackers will be stopped just because those accounts don't have a password



| > Nice, if that's not a concern, leave wp-comments alone, with each comment storing
| > its commentator data, and with Wordpress dealing with cookies so that this data is
| > remembered when he comes back wanting to make another comment.
|
| I don't care about the space, I care about the newly enabled functionality.

ok, use wp-users then :)

make it a plugin, and take responsibility over the security :D



| > I thought the original need behind this idea was to shrink space from wp-comments
| > with not duplicating data from the same commentator :P
|
| But not my reason for supporting the idea.  Next...

so that comment wasn't meant to you -.-'



| > I hate multiply and blogging sites like that. I google something, am thrown to a post
| > on a blog on it, wanna comment, and they want me to register. And have a blog there
| > so I can comment! And the incredible thing is that there are ppl blogging there! Even more
| > interesting is that most of those bloggers, are old aunties, something like Betie we're talking :P
|
| On this we can agree today. :)

so make sure the plugin won't force ppl to register so they can "become a commenter" ;)



| > But... your client is paying you to do what he wants. Your job is to identify wrecking ideas
| > before they are implemented and warn your client about it. If he insists, it's his responsibility :P
|
| Actually, my client (Interactive Agency) was paying me to implement what their client (local Fortune 100) wanted. My opinion on 
that project never made it to the big client because my client only wanted to do what their client asked for, nothing more. OTOH, 
they paid me well, and the site doesn't have many commenters so, whatever.

ok, who asked you to do it and who you can contact is your client, even if the budjet doesn't come from him

your only concern should be that nobody blames you later for something you did knowing wouldn't work



----- Original Message ----- 
From: "Dougal Campbell" <dougal at gunters.org>
Sent: Saturday, 06 March, 2010 12:56 PM


|  * It's a security concern: by keeping commenters out of the regular
| users table, you eliminate a class of security violations: unauthorized
| privilege escalation. If the commenter doesn't have any "real" user
| credentials, there are whole swathes of the core code paths that become

This resumes everything I've said.

Don't be concerned with security put it in the core and later we'll have security updates becouse of your code and ppl will come 
blame WP devs for not worrying with security.

wp-users table is related with access permission, the best way to keep is secure is leave it clean and only give an account to ppl 
that really need one.

Yes, there are sites full of users, mines don't and I like it this way.

If somebody starts neglecting the risks and throwing all sort of features over wp-users, which includes all kind of "users" and 
codes that load and store data on that table, soon we'll have happy hackers exploiting it.


Anybody wanting to have a bunch of ppl registered so that features can be implemented, take some good time thinking if these 
features can be implemented without colliding with access, permission and security codes.

IMHO, it IS worthy duplicating some KBs and having 2 tables both dealing with users.

If I could choose, I'd even move current registered users that only exists for commenting to a separate table, and make wp-users 
even more restrict. Those sites that have open registration and only offer registered comments to these accounts would for sure 
become more secure. It it could be done, I'd probably open registration for commentators on my sites.



---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br 


From mikeschinkel at newclarity.net  Sat Mar  6 23:38:00 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 6 Mar 2010 18:38:00 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <4490A104981849F28F0291267F7FF40A@MAIN>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><20BE80F3-9377-466C-8517-AF9F02795687@onolan.org><349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com><B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net><94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<4490A104981849F28F0291267F7FF40A@MAIN>
Message-ID: <BBE5918C-9D04-4D18-BE67-50CF01D7CE74@newclarity.net>

On Mar 6, 2010, at 5:02 PM, Hikari wrote:
> My concern is regarding a wp-users row, which needs just a role change to become admin. Without a password it may become more secure 
> or less secure depending on how it's implemented, but I'd really not like wp-users rows being created as a result of a comment. Not 
> worthy the security risk.

The security risk can be minimized to near zero if more than role are tested for escalation of privilege.  Safeguards can be put in place, like if password is blank they can't login within explicit escalation.  A can_login field could be set to know.  

Basically I agree anything can be potentially insecure but if that's the case then everything in WordPress is a security risk. Build in several checks and then the likelihood of all having a bug in then are near zero.

If you say a hacker can get access to the database and add a password and add a can_login value then I'll say a hacker can add themselves a row in the user table. There is really no significant difference between the security hole for the two.  

> | Sure, but then you don't get said pages nicely themed with the off-the-shelf themes most people are using these days.
> 
> just hook a filter to comment_author_link and no theme will need to be changed

That's apples and oranges.  Most themers don't think in terms of a visual display relevant to a commenter. Hooking author doesn't change that.  Adding commenters into the wp_users table would.  Read more below about the progression of a commenter to an editor and why this is a valuable idea.
> 
> also don't expect theme authors, with all the love they receive, to be happy if core requires them to change their outdated themes 
> to support this feature :p

This change would *require* it, it would *enable* the better theme makers to differentiate themselves.
> 
> | You are not listening...  I have not suggested that anyone be required to register in order to be able to comment (that'd be 
> foolish, in most cases.)
> 
> I've just read somebody saying that this feature is only for people that is already forcing registration to allow commenting, and 
> somebody else agreed o.O

I think that person who agreed was not in favor of this option.  It would be like telling me another Republican didn't think Obama's health care plan was a good idea.

> But I also read in the begining of the talk that the objective was to reduce database size on avoiding duplicates in wp-comments, 

> which turned back to duplicates using metadata to store multiple different data for the same person, and I pointed out that moving 
> commentators data to wp-users on a site with a lot of commentators that make only 1 comment would increase database size indeed, and 
> this size is insignificant anyway :p

And I'm saying that's the least valuable reason to consider this. :-p backatcha.

> | Maybe; that would be up for discussion.  I was just proposing it for the idea and if adopted the community would figure it out.
> 
> "2 posts are logged in ATM, they are on themselves posts", that would be funny to read :D

That's a non-sequitor. Clearly it would be stupid to implement this and leave old logic in plan that would display such a comment

> No parallel records. Everything wp-users and user metadata stores will remain there, and postmeta will store everything else :)

One of us misunderstands. I was proposing to consider using wp_posts with a post_type of 'user' instead of wp_users. In the case where we keep wp_users and also created a record of wp_posts with a post_type of 'user', they are parallel.  It seems a binary option; how is it not?

> but I'd still prefere a wp-commentators table, I've already disabled revisions and drafts to not just posts ID
> 
> a new table is not the end of the world, my site has 38, and if we considers the risks of having simple commentators lying on 
> wp-users, a table to store them is the next logical idea

We clearly both have different preferences and they are irrelevant.  What's important is to judge what each architect would enable on their respective merits. 

I'm not arguing against a new table, I'm arguing against using a new table where an existing table would offer many of the features immediately that people would want to later add duplicating functionality for.  I'm also arguing for a table that many plugins support enhancements for with minor mods vs. your new table would be starting from scratch with plugin support.

> Wait, if these high traffic sites are already letting users login, for sure they'll want commentators stored in wp-users. But if 
> they aren't, they won't like it.

So if it's not yes, it's no?   Your point is?

> And high traffic sites can still be administrated by security noobs that will only want the feature working and only bother with 
> hacking after their high traffic sites are not high traffic anymore.

Not existing high traffic sites.  So ask them what they care about.  If it works for them then they will already have addressed your concern for the noobs you speak of.

BTW, what exactly are you saying about what's being proposed her would actually slow a site down in any meaningful way?  What are you really afraid of here?  In general we are talking architecture and you argue with feature set.

> I still don't get why commentators should be stored in wp-users at all.
> If it's just to store their data, a new table can solve it. 
> If they won't be required to create account and deal with it, a new table can solve it. But if they will have an account, or if a 
> new feature will handle with current users too, than just use wp-users and leave it in a plugin.

Because, put simply commenters (not commentators) are people. Storing people in many different tables ultimately causes a whole host of problems and forces a painful merge process in the future as the reality that people can have many roles becomes apparent.  Better to recognize that problem early on and address it now rather than have to go through the pain later.

BTW, I went through that painful merge process with people at customer sites and people who worked at my vendors early last decade and my database was well over 250,000 people.  I not trying to discredit your experience in any way but I would like to ask this: Have you ever dealt with a large scale database of people in a context where maintaining the database was critical to the health of an organization?  

It seems easy to just create another table because they seem different today but if a system evolves as WordPress clearly has been and appears as it will continue, issues like these never stay that easy.

> | > Currently registered users? Add a field to wp-commentators that FK wp-users, or simply the plugin uses wp-users and gets the
> | > responsibility for it.
> |
> | Adding a wp_commenters table would not be smart.  That reminds me of QuickBooks with separate Vendors and Customers which is truly 
> a nightmare when your vendors are also your customers (which is exactly how a business I ran for 12 years operated.)  Having 
> multiple tables for people is just a bad idea, period.  I have too much painful experience to ever want to go through that again 
> without putting up a serious fight.
> 
> But we are not talking about e-commerce here...

I'm not talking e-commerce either, I'm talking database design. I gave one example I lived through but there are many more examples that are not ecommerce such a forum users vs. forum moderators, sports team members and their fans, people on Facebook, people on Twitter; the list is endless. 

People are people, indivisible.  Don't segment people and put them in multiple tables. Period. It never works well long term.

> But wp-users is too powerful, detailed and risky *if* all we need is 
> take 3 fields out of wp-comments and add a FK field to it.

Oooh, so now people in wp_users are *magic*! ;-p

> Only if new features are developed that require more user interaction than simply commenting, and that would require them to 
> register, that wp-users would be worth it.

Alright, so you agree. ;-)

Seriously, there are tens if not hundreds of "fields" to add about commenters; we should enable plugins to do in a standard way, i.e.

-- Twitter name
-- Facebook URL
-- LinkedIn URL
-- Company Name
-- Company URL
-- Bio
-- (need I go on?)

These are things that will enable gradual engagement and are things that plugins are perfect for. Let's give them a standard way to grow.

> But some ppl wanna automatically add rows to wp-users without giving them passwords and letting them login. For this need, wp-users 
> is not a good place to store commentators, because even though they are already people, their usage differ a lot from registered 
> users.

You are just making assertions without any evidence. Nothing you said there discredits storing them in the wp_users table with a role of 'commenter' (or in the wp_posts table as type 'user' and a taxonomy value of 'commenter.') 

> Again, would you create a user account to every visitor of your site? They are people too, and a stat plugin could use it...

Possibly, via a plugin. But I don't argue that is needed in the core, it's too hard to identify a unique user in that manner.  But when someone comments and gives an email, that's an entirely different matter; they are engaged and they are significant to the site owner (or should be.)

OTOH, having a system that tracks users by cookie and then assigns their history if and when they login is very intriguing... (we did that with custom code on our website.)  There are companies that charge lots of money for this; having it built into core would be nice indeed.  But that's a discussion for a day well into the future.

> | > | With better tools to enable and encourage comments (which this could be the base of), there might be
> | > | fewer one time commenters...
> 
> See? Which new features would these be?

There are hundreds of ideas. Basically, these are up to a site owner to figure out for their site, basically their marketing plan.  But here are a few:

-- Having a page that lists their comments, for one.  
-- Emailing them after a comment asking them to fill out a profile (this would be plugin territory.)  
-- Ask them to give you their Twitter account so your site could follow them and display their latest tweet.
-- Given them reasons to find your site when they egosurf, and learn what they like and offer them content.

> Commenting is *not* something that justify using wp-users.

Saying it without justification isn't a valid argument against.

> | Then you are not doing a very good job of creating a loyal readership,
> | you are just being SEO opportunistic, not a great long term strategy
> | as content farms work to capture more and more SEO traffic (see
> | http://www.readwriteweb.com/archives/content_farms_impact.php)
> 
> well I'm not specialist on this subject, and I myself only go back to 2 or 3 sites often.

But you have opinions as if you were one, no?  ;-)

> Most Wordpress sites are not forums, 

> and most ppl don't read large texts.

Those are non-sequitors and not relevant to the argument.  If it were, why should we allow comments on blogs, and why should people blog at all?

> As I said before, there are ppl like multiply.com users that create account for commenting and start blogging after it. I hardly 
> would create account on an unknown site just for comment on it.

Please can we just stop with the "I don't want to create an account to have to start commenting" already?  That's not on the table. Full stop.

> Will you say that most Wordpress users have high traffic and loyable commenters?

Without a statically accurate survey anything I say would be supposition.  I assume it follows the long tail meaning that most sites do not have high traffic and loyal commenters, but my assumptions are not important. 

Also, I know anecdotally of some sites with fiercely loyal commenters with lots of comments, for example http://www.avc.com/  (he uses Disqus, btw.) Unfortunately when I read his comments I don't get the opportunity to click through to a page about the commenter to learn more about them.  I'm certain on his site that the people who comment on practically every post would be very happy to create a full profile there as they see themselves as part of a community. I can also imagine tens of thousands of other sites in their respective communities that have the same loyal commenters.

Now if we put them commenters and wp_commenters and "the blessed few" in wp_users, let's look at the transition we see in new commenters to blessed few (note, this is mostly a continuum, not all discrete steps):

new commenter -> 
repeat commenter -> 
profile updater -> 
active commenter -> 
profile showcaser -> 
guest poster -> 
frequent author -> 
guest editor -> 
site co-owner

So when does someone move from being a commenter and to being a user, huh?  Do we create two templates, one for the commenter and the other for user?  Or, like Facebook, do we create one that morphs depending on the person?

There is no such thing as commenters and users; there are just people.  People and their information, their actions, and other's actions related to them. Creating an arbitrary distinction between the two is self defeating.

> I have a few BTW.

Good for you. With better engagement tools you could have more.
> 
> Note Wordpress is a CMS, not  a traffic saver. What keeps ppl coming is the content.

Sheesh.  I'm so tired of people "defining" what WordPress is and what it isn't.  It's like the "WordPress is not a CMS" debate yet that's how many people in business are using it (and now with custom post types, they really can; YES!)

WordPress can be whatever people want it to be, and can evolve to serve the needs of those currently using it.  Many people currently using it have lots of commenters and I'll bet whatever you want that giving them an architecture to build on for driving engagement would be something they'd really like.

BTW, I'm sure some people are thinking about BuddyPress while reading this.  Well, just like WPMU, shouldn't base functionality be in core and UI be in the plugins?  Allowing commenters to be in wp_users provides that base functionality.

> With only active users having account, their password would need to be hacked to hack the site.

If security is your only concern then I suggest you host your websites on a computer than is not connected to any network. That's the only way to keep them from getting hacked.

OTOH, if you see that as silly (as it is) then let's look at how to ensure that this won't increase the hackable footprint instead of letting fear of something that can be risk managed stop progress.

> Could you copy here the 2.9.2 launching text?

Huh?  You talking about this?  http://tmacuk.co.uk/?p=180
If yes, note that it required a user to be logged in.  As proposed a commenter would not be able to login unless explicitly allowed by the site owner.

> hackers don't use normal UIs...

Sigh.  I give up debating with you.  Your mind is made up, any evidence I present you just ignore and continue to bring up things that have already been addressed.

No more discussions with you on this topic. 

-Mike

From lists at hikarinet.info  Sat Mar  6 22:48:40 2010
From: lists at hikarinet.info (Hikari)
Date: Sat, 6 Mar 2010 19:48:40 -0300
Subject: [wp-hackers] "commenter" user role
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com><349fe48b1003051439h2aa1cad3m5dd6222d6f79fba7@mail.gmail.com><4B927B1A.40804@gunters.org>
	<349fe48b1003060815g2e65483bwb7f1a969af747280@mail.gmail.com>
Message-ID: <F49348CD27B24C8D92D8E25C5F93E962@MAIN>



----- Original Message ----- 
From: "scribu" <scribu at gmail.com>
Sent: Saturday, 06 March, 2010 1:15 PM


| On Sat, Mar 6, 2010 at 5:56 PM, Dougal Campbell <dougal at gunters.org> wrote:
|
| >  * It's a security concern:
|
| What this implies is that all sites that have user registration open are
| insecure.

Exactally.

They are less secure than sites that have strictier control over users account. And they should be more worried about security 
measures and definitily put as top priority the application of updates as soon as they are available.
Or have a very fast and efficient backup & restore solution :P


| >  * It complicates the ability to support Anonymous commenters.
| >
|
| Please explain.

Depending on how these features are implemented, they will force commentators to register accounts, OR automatically create accounts 
for them.

So, they are not anonymous anymore :)


| We could automatically remove commenters when they have no more comments on
| the site. Problem solved.

You mean, delete these comments?

Because it's my undertanding that if some comment data are attached to users data, we can't delete those users without deleting 
their comments, or turning them anonymous.


It really concerns me the fact that comment spammers will get wp-users accounts on my site................

And don't say it's simply a matter of deleting those comments and users together, until they are deleted your whole site can be 
deleted already...



| Just to clarify: open user registration would *not* be required for the
| "commenter" role proposal to function.

But there would be *users* being registered. Do you think hackers need a password, or that they use normal login passages, to get 
access?...



Again, this is a security concern. Ponder yourselves if these features you want, justify the increased code to be debugged and 
maintained regarding security.

Since wp-users is related to access permissions, is it possible to implement these features without bloating it? Is it possible to 
develop these features in a way they are kept 100% separated from security concerned codes, instead of becoming part of those codes?


If all you want is take 3 wp-comments fields and move them to a separated table, and use this table to implement more features, why 
does it *need* to be wp-users? Is it really reaquired or is it just for convenience matters? Can't a new table do it?




And, if you are letting commentators fill data that may be changed later, you must let they login to change it. If they can login, 
they have a password, and they may be mailed to confirm, reset, etc.

If you wanna add rows in wp-users with "users" data that once created can't be changed by these "users" anymore, then this data 
should definitily go to anywhere else other than wp-users.

If all you need is a user table and a usermeta table, to be linked to comments and new feature you wanna develop, just create 2 
extra tabled and link them with a custom field in wp-comments or with comment metas.



| There could be an "Annonymous" commenter account that would allow annonymous
| comments.

and  his surname would be "Hacker" :D

can I suggest a password for him or would it just be blank? :DD



| Tons of crap, such as? Please be specific.

my name in a site I don't wanna have a user account is such a crap



| It shouldn't be linked to that option. As I said previously, unlike
| subscribers, commenter accounts with no comments would be automatically
| deleted.

And if a commentator wants to change the data he filled before, how will he do it?

Because if you want him to come back, you must let him keep his data updated. Or be prepared for angry ppl complaining they can't do 
it.

Now, if he won't come back... he doesn't need a user account at all, even one that has no permition to do anything. That account 
would be... crap!



---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br 


From lists at hikarinet.info  Sat Mar  6 22:54:37 2010
From: lists at hikarinet.info (Hikari)
Date: Sat, 6 Mar 2010 19:54:37 -0300
Subject: [wp-hackers] A disadvantage of comment normalisation [Was:
	"commenter" user role]
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20100306180001.GS2337@sliver>
Message-ID: <EC141BA3A50B4FBBA28AEF072BC600D5@MAIN>

And if somebody wanna avoid this behavior, just develop a plugin that verifies if the comment is linked to a user, and if so changes 
his data from wp-comments one to wp-users one.

The plugin can also hook comments creating, verifying if current user is logged in, and if so delete those fields data to not bloat 
the table with useless data.

But see that doing so, this plugin would be required forever on each site it's installed, with the risk of having all comments 
turned to anonymous when uninstalled. So it'd be better to leave this "useless" data there, for compatibility.


---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br 


From lists at hikarinet.info  Sat Mar  6 23:13:29 2010
From: lists at hikarinet.info (Hikari)
Date: Sat, 6 Mar 2010 20:13:29 -0300
Subject: [wp-hackers] "commenter" user role
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><20BE80F3-9377-466C-8517-AF9F02795687@onolan.org><349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com><B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net><C9ECB187-D50D-41A7-9E19-F1BBD497455E@onolan.org><8D24A58C-9299-4217-A761-B76F5A6447E7@newclarity.net><3B5BB03A-3926-46B3-A6CF-184D58770808@onolan.org>
	<58ABF134-0164-46B8-BF07-A46EB4DF251E@newclarity.net>
Message-ID: <3CBC1A857E424C9AB9A03C593DA707BD@MAIN>


----- Original Message ----- 
From: "Mike Schinkel" <mikeschinkel at newclarity.net>
Sent: Saturday, 06 March, 2010 5:59 PM



| Still, I  think moving commenters to wp_users tables is beneficial
| because it creates an explicit entity for a commenter vs. the current
| artifactual approach which allows metadata to be applied and UI to be
| created around commenters (vs. just around comments.)

Now that's a great argument...

... for having a commentators table, with metadata with it. Not to add commentators to wp-users.

If they can't login, they don't need to be in wp-users. 2 extra tables can solve this need.

But I'd feel very strange if upon commenting a "UI" would be created with my data and I can't change it..


You'd also need to be make it clear before letting visitors comment about this extra feature. It's ok to gain control of a user's 
comment and not want to delete or edit it when he asks, but if a visitor decides to comment and this comment generate other 
resources and features he wasn't acknowledged about... he should have the option to get it deleted or changed.




| More uses: a site owner could adds notes about a commenter for
| future reference, and a site owner could elevate frequent trusted
| commenters to have specialized rights on the site (to moderate
| comments, maybe, or create posts that must be approved by the site
| owner) and everything they do could be tied back to their user record
| and thus potentially displayed on their user page.


More extra ideas, these may justify using wp-users.

Make comments behave like forum posts and have mods to manage it.

If I'd develop it, I'd just base it on open registration. Somebody that doesn't wanna have an account won't bother having extra 
privileges. Maybe a routine to query comments with a specific email and link them to a new user.


| I'm assuming these added functionalities would come from plugins,
| but to empower these to work together across plugins you really
| need a record in the database for each commenter that is canon.

If we were in Drupal, it has a nice module dependance feature, that blocks a module from being activated if any of its dependances 
aren't, and blocks a module that's a dependance from being disabled while the module that depends on it isn't.

In Wordpress we don't have this nice feature, but it still can be done. The base plugin must be loaded before all others (I think 
plugins are loaded in the other their folders appear in plugins folder), and all dependant plugins must test by thelselves if the 
base plugin is available.

Very ugly for sure, but doable.




---------------------------
Hikari -  A Luz ilumina a PAZ
http://Hikari.ws
http://ConscienciaPlanetaria.com

Tenha seu pr?prio email meunome @ ConscienciaPlanetaria.com.br!: http://seunome.ConscienciaPlanetaria.com.br 


From 24-7 at gmx.net  Sun Mar  7 01:40:28 2010
From: 24-7 at gmx.net (24/7)
Date: Sun, 7 Mar 2010 02:40:28 +0100
Subject: [wp-hackers] comments should be a plugin
Message-ID: <001001cabd97$2ac538c0$804faa40$@net>

Hi. I use WP now since Version 1.5.x and really/still like it. But there are
some things in the evolution WP-Core has taken over the last years, that
seem to not follow the trends around wordpress.

 

Following the latest discussions about comments on the one side and seeing
plugins like "pods" or "shopp" who bring WP to a completely new level, i
have to say, that some Core-Stuff should not be in the Core anymore. I often
read "this is plugin material" as an answer to ideas. As far as i see, a lot
of people use WP as Portfolio CMS and with pods as CMS for completely new
ideas or with shopp as CMS for online shops. All of these people will never
need comments. And on the other hand, a lot (corr.: most) of the blogs who
have comment forms don't have comments.

 

So: "comments is plugin material".

 

Best Wishes & a nice weekend. -K.


From mikeschinkel at newclarity.net  Sun Mar  7 01:55:10 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 6 Mar 2010 20:55:10 -0500
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <001001cabd97$2ac538c0$804faa40$@net>
References: <001001cabd97$2ac538c0$804faa40$@net>
Message-ID: <C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>

On Mar 6, 2010, at 8:40 PM, 24/7 wrote:
> So: "comments is plugin material".

Good point. Sounds like "Canonical Plugin Material", actually.

-Mike



From pt at ptahd.com  Sun Mar  7 02:01:00 2010
From: pt at ptahd.com (Ptah Dunbar)
Date: Sun, 7 Mar 2010 03:01:00 +0100
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
Message-ID: <98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>

>> So: "comments is plugin material".

Wow. You guys are taken this CMS abstraction too far. Comments aren't going anywhere.


On Mar 7, 2010, at 2:55 AM, Mike Schinkel wrote:

> On Mar 6, 2010, at 8:40 PM, 24/7 wrote:
>> So: "comments is plugin material".
> 
> Good point. Sounds like "Canonical Plugin Material", actually.
> 
> -Mike
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Sun Mar  7 02:04:25 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 6 Mar 2010 21:04:25 -0500
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
Message-ID: <9A3F9D11-B60A-4E8C-88AA-6B671CB3E076@newclarity.net>

On Mar 6, 2010, at 9:01 PM, Ptah Dunbar wrote:
>>> So: "comments is plugin material".
> 
> Wow. You guys are taken this CMS abstraction too far. Comments aren't going anywhere.

Before you jump to conclusions, why not consider that comments and post types of 'post' could be moved to a canonical plugin that ships with WordPress, to be enabled by default but disabled on sites that don't need a blog? 

I'm not saying it needs to be done, but by version 3.5 or so it may make sense...  (Never say never.)

-Mike

From sc0ttkclark at gmail.com  Sun Mar  7 02:09:01 2010
From: sc0ttkclark at gmail.com (Scott Kingsley Clark)
Date: Sat, 6 Mar 2010 18:09:01 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <001001cabd97$2ac538c0$804faa40$@net>
References: <001001cabd97$2ac538c0$804faa40$@net>
Message-ID: <c7cd0116-4b1d-4a01-bf70-21dfb0f5dfb3@o30g2000yqb.googlegroups.com>

There are so many things that should be put into the realm of plugins
for WP, but I don't think the core team is very open to that. I'm sure
there are many reasons, but one of them is definitely that it's "not
necessary". WP would be amazing if it came with plugins that by
default could be enabled / disabled to keep things modular. Sometimes
people don't need Posts or RSS feeds, or in this case Comments.
Sometimes people don't need "insert feature here". Yeah, you can
disable them with hooks and such, but that's a lot of hacking which
doesn't solve the root of the issue.

Most people are told to use something other than WP because of this
but that's not right. People still continue to use WP in new and
innovative ways, but just "deal" with the extra stuff. The answer is
obvious that WP needs a pretty big rewrite in general to have all
these needs met. I'm not sure how immediate that's in the cards for
WP, or if it will ever happen.

Just food for thought, WP is a CMS, but it's got a WHOLE lot of blog
in it with no way to take it to a more optimized state for sites that
don't need certain things. Perhaps if BackPress got a whole lot more
support and development on the project, we'd see WP built out as a
flavor of BackPress with default plugins packaged. That's really what
a lot of people would like to see. That's what got me excited with
BackPress, a whole lot of nothing, a blank slate to do whatever you
want but with the backing of what runs WP (but still two separate
codebases, WP being the highly modified one).

Anyways, I'm sure that'll be the end of the discussion, but I believe
in the "enable it" option (perhaps in the Installation Screen,
defaulting to enabling all the most used things but allowing things to
be turned off at which their PHP files would not be "include"-d until
enabled), rather than "give it to them, they can disable it or they
can just use another system entirely".


Best Regards,

Scott Kingsley Clark // Developer + Consultant

----------------------------------
sc0ttkclark at gmail.com
http://www.scottkclark.com/
----------------------------------

214.233.4048 // Mobile




On Mar 6, 7:40?pm, "24/7" <2... at gmx.net> wrote:
> Hi. I use WP now since Version 1.5.x and really/still like it. But there are
> some things in the evolution WP-Core has taken over the last years, that
> seem to not follow the trends around wordpress.
>
> Following the latest discussions about comments on the one side and seeing
> plugins like "pods" or "shopp" who bring WP to a completely new level, i
> have to say, that some Core-Stuff should not be in the Core anymore. I often
> read "this is plugin material" as an answer to ideas. As far as i see, a lot
> of people use WP as Portfolio CMS and with pods as CMS for completely new
> ideas or with shopp as CMS for online shops. All of these people will never
> need comments. And on the other hand, a lot (corr.: most) of the blogs who
> have comment forms don't have comments.
>
> So: "comments is plugin material".
>
> Best Wishes & a nice weekend. -K.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hack... at lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers

From scribu at gmail.com  Sun Mar  7 02:14:13 2010
From: scribu at gmail.com (scribu)
Date: Sun, 7 Mar 2010 04:14:13 +0200
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <3CBC1A857E424C9AB9A03C593DA707BD@MAIN>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<C9ECB187-D50D-41A7-9E19-F1BBD497455E@onolan.org>
	<8D24A58C-9299-4217-A761-B76F5A6447E7@newclarity.net>
	<3B5BB03A-3926-46B3-A6CF-184D58770808@onolan.org>
	<58ABF134-0164-46B8-BF07-A46EB4DF251E@newclarity.net>
	<3CBC1A857E424C9AB9A03C593DA707BD@MAIN>
Message-ID: <349fe48b1003061814t76aff0ebx8bad36719fc02cf6@mail.gmail.com>

>
> And don't say it's simply a matter of deleting those comments and users
> together, until they are deleted your whole site can be
> deleted already...
>
> | Just to clarify: open user registration would *not* be required for the
> | "commenter" role proposal to function.
>
> But there would be *users* being registered. Do you think hackers need a
> password, or that they use normal login passages, to get
> access?...
>


Hikari, please stop writing non-sequiturs emotional arguments and regarding
security. Thanks.


-- 
http://scribu.net

From sc0ttkclark at gmail.com  Sun Mar  7 02:20:45 2010
From: sc0ttkclark at gmail.com (Scott Kingsley Clark)
Date: Sat, 6 Mar 2010 18:20:45 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
Message-ID: <fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>

There's an example of a "won't happen" / "not necessary" attitude. I
think many people are tied to the idea of core features being part of
core WP. As WP grows up and out of the blogosphere, the community has
to accept that people want WP to be an "a la carte" type of system.
Yeah, you'll have plenty of discussions as to which features should be
core and which should be plugins, but let's not stop the progress by
flat out saying "no" to anything that deserves it's proper discussion.

-Scott


On Mar 6, 8:01?pm, Ptah Dunbar <p... at ptahd.com> wrote:
> >> So: "comments is plugin material".
>
> Wow. You guys are taken this CMS abstraction too far. Comments aren't going anywhere.
>
> On Mar 7, 2010, at 2:55 AM, Mike Schinkel wrote:
>
> > On Mar 6, 2010, at 8:40 PM, 24/7 wrote:
> >> So: "comments is plugin material".
>
> > Good point. Sounds like "Canonical Plugin Material", actually.
>
> > -Mike
>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hack... at lists.automattic.com
> >http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hack... at lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Sun Mar  7 02:26:49 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 6 Mar 2010 21:26:49 -0500
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
Message-ID: <515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>

On Mar 6, 2010, at 9:20 PM, Scott Kingsley Clark wrote:
> There's an example of a "won't happen" / "not necessary" attitude. I
> think many people are tied to the idea of core features being part of
> core WP. As WP grows up and out of the blogosphere, the community has
> to accept that people want WP to be an "a la carte" type of system.
> Yeah, you'll have plenty of discussions as to which features should be
> core and which should be plugins, but let's not stop the progress by
> flat out saying "no" to anything that deserves it's proper discussion.

+1.

FWIW, I think the idea of "put it into a plugin" is anathema to many people because the chances of many users ever finding and installing it are slim thus very few themers or other plugin developers will support it.  OTOH, if put into a canonical plugin that is included with the WordPress core download, those concerns diminish greatly. At least for me.  

Said another way, IF it's infrastructure but only used by a segment of users then:

core=good, 
plugin=bad, but 
canonical plugin=bettter.

-Mike

From sc0ttkclark at gmail.com  Sun Mar  7 02:30:22 2010
From: sc0ttkclark at gmail.com (Scott Kingsley Clark)
Date: Sat, 6 Mar 2010 18:30:22 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
Message-ID: <1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>

Heavily agree with you here, Canonical plugins all the way for these
types of "previously part of core" WP features. And in Installation
process of WP the user should be able to select which "features" they
want enabled / disabled, and these "features" would really be
Canonical plugins - but the user doesn't need to hear "plugin", only
"feature". Thoughts?

-Scott

On Mar 6, 8:26?pm, Mike Schinkel <mikeschin... at newclarity.net> wrote:
> On Mar 6, 2010, at 9:20 PM, Scott Kingsley Clark wrote:
>
> > There's an example of a "won't happen" / "not necessary" attitude. I
> > think many people are tied to the idea of core features being part of
> > core WP. As WP grows up and out of the blogosphere, the community has
> > to accept that people want WP to be an "a la carte" type of system.
> > Yeah, you'll have plenty of discussions as to which features should be
> > core and which should be plugins, but let's not stop the progress by
> > flat out saying "no" to anything that deserves it's proper discussion.
>
> +1.
>
> FWIW, I think the idea of "put it into a plugin" is anathema to many people because the chances of many users ever finding and installing it are slim thus very few themers or other plugin developers will support it. ?OTOH, if put into a canonical plugin that is included with the WordPress core download, those concerns diminish greatly. At least for me. ?
>
> Said another way, IF it's infrastructure but only used by a segment of users then:
>
> core=good,
> plugin=bad, but
> canonical plugin=bettter.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hack... at lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Sun Mar  7 02:38:42 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 6 Mar 2010 21:38:42 -0500
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
Message-ID: <FFAB01FA-4C9F-49A3-BDCB-637DC38D35AB@newclarity.net>

On Mar 6, 2010, at 9:30 PM, Scott Kingsley Clark wrote:
> During the Installation process of WP the user should be able to
> select which "features" they want enabled / disabled, and these
> "features" would really be Canonical plugins - but the user doesn't
> need to hear "plugin", only "feature". Thoughts?

+1

-Mike

From 24-7 at gmx.net  Sun Mar  7 02:41:17 2010
From: 24-7 at gmx.net (kaiiser)
Date: Sat, 6 Mar 2010 18:41:17 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
Message-ID: <d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com>

> types of "previously part of core" WP features.
+1

> Good point. Sounds like "Canonical Plugin Material", actually.
+1

"Canonical Plugins" sounds like a sollution to me.

> There's an example of a "won't happen" / "not necessary" attitude.

When looking at core-CMS features i still see WP lacking some
functionality somewhere else: For ex. Users. I think this
http://wordpress.org/extend/plugins/members/ could be WP-Core
material. "Role" replaced "user_level" some time ago. But nothing ever
happend to roles (defining, extending, adding). WP could definitly be
much more flexible if the "attitude" of some people would not be so
much "i'm part of the core".

From john.wp at onolan.org  Sun Mar  7 02:41:22 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Sun, 7 Mar 2010 02:41:22 +0000
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
Message-ID: <35C7C72A-334A-456A-B7F5-F6274F507F56@onolan.org>

If pointless stuff like HelloDolly and the Classic theme was also  
removed there would be more space for canonical plugins.. so +1 there

John



On 7 Mar 2010, at 02:26, Mike Schinkel wrote:

> On Mar 6, 2010, at 9:20 PM, Scott Kingsley Clark wrote:
>> There's an example of a "won't happen" / "not necessary" attitude. I
>> think many people are tied to the idea of core features being part of
>> core WP. As WP grows up and out of the blogosphere, the community has
>> to accept that people want WP to be an "a la carte" type of system.
>> Yeah, you'll have plenty of discussions as to which features should  
>> be
>> core and which should be plugins, but let's not stop the progress by
>> flat out saying "no" to anything that deserves it's proper  
>> discussion.
>
> +1.
>
> FWIW, I think the idea of "put it into a plugin" is anathema to many  
> people because the chances of many users ever finding and installing  
> it are slim thus very few themers or other plugin developers will  
> support it.  OTOH, if put into a canonical plugin that is included  
> with the WordPress core download, those concerns diminish greatly.  
> At least for me.
>
> Said another way, IF it's infrastructure but only used by a segment  
> of users then:
>
> core=good,
> plugin=bad, but
> canonical plugin=bettter.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From pt at ptahd.com  Sun Mar  7 02:52:05 2010
From: pt at ptahd.com (Ptah Dunbar)
Date: Sun, 7 Mar 2010 03:52:05 +0100
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
Message-ID: <6CF63822-9901-4753-9EF2-3B8DE98E1969@ptahd.com>

Hey Scott, let's clarify my statement.

Looking at the facts, WP is currently used by millions of users. Millions. And if you were to compare the ratio of users to developers, users would definitely win by a lane slide. My statement comes from recognizing this fact, not because I'm stuck to an "a la carte" mindset. I'm a developer just like you who would _love_ if WP immediately got rid of all the "developer considered" bloat and turn it into a more frameworky CMS that just comes with essential CMS core components and it's current UI.

I did an interview a while ago where one of the question was along the lines of Where would you say WordPress is in terms of it?s Life Cycle?" And I said it's an 18 year old teenager. WP started out as blogging software but is currently transitioning over into a more general purpose CMS. It's got a lot of growing up to do. Version 3.0 is the first version to truly make that big step with custom post types. How long did that take? My point is, you're way ahead of the wp development cycle by assuming something like a canonical comments plugin will see the light of day--anytime soon.

Version 2.9 *just* introduced a new comments meta table to make comments more extendable. You can do things like create a bug reporting system, or Get satisfaction-esque support website if you knew anything about the comments meta table and custom comment types. Don't limit comments to just blogging features. They have all kinds of use case scenarios if your willing to accept the fact that WP _can_ do a lot out of the box.

So again, I'm not being close minded, I'm just looking at the facts. Comments ain't going no where anytime soon.

On Mar 7, 2010, at 3:20 AM, Scott Kingsley Clark wrote:

> There's an example of a "won't happen" / "not necessary" attitude. I
> think many people are tied to the idea of core features being part of
> core WP. As WP grows up and out of the blogosphere, the community has
> to accept that people want WP to be an "a la carte" type of system.
> Yeah, you'll have plenty of discussions as to which features should be
> core and which should be plugins, but let's not stop the progress by
> flat out saying "no" to anything that deserves it's proper discussion.
> 
> -Scott
> 
> 
> On Mar 6, 8:01 pm, Ptah Dunbar <p... at ptahd.com> wrote:
>>>> So: "comments is plugin material".
>> 
>> Wow. You guys are taken this CMS abstraction too far. Comments aren't going anywhere.
>> 
>> On Mar 7, 2010, at 2:55 AM, Mike Schinkel wrote:
>> 
>>> On Mar 6, 2010, at 8:40 PM, 24/7 wrote:
>>>> So: "comments is plugin material".
>> 
>>> Good point. Sounds like "Canonical Plugin Material", actually.
>> 
>>> -Mike
>> 
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hack... at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hack... at lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From chris at clwill.com  Sun Mar  7 02:55:00 2010
From: chris at clwill.com (Chris Williams)
Date: Sat, 6 Mar 2010 21:55:00 -0500
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
Message-ID: <C7B85584.BE4D%chris@clwill.com>

+1

This whole thread is a wonderful example of how WP can/should "grow up".  I love it.


________________________________
From: Scott Kingsley Clark <sc0ttkclark at gmail.com>
Subject: Re: [wp-hackers] comments should be a plugin

Heavily agree with you here, Canonical plugins all the way for these
types of "previously part of core" WP features. And in Installation
process of WP the user should be able to select which "features" they
want enabled / disabled, and these "features" would really be
Canonical plugins - but the user doesn't need to hear "plugin", only
"feature". Thoughts?

From sc0ttkclark at gmail.com  Sun Mar  7 03:02:57 2010
From: sc0ttkclark at gmail.com (Scott Kingsley Clark)
Date: Sat, 6 Mar 2010 19:02:57 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <6CF63822-9901-4753-9EF2-3B8DE98E1969@ptahd.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<6CF63822-9901-4753-9EF2-3B8DE98E1969@ptahd.com>
Message-ID: <560beb72-9f36-4fe2-9121-8ce7c3509de3@x22g2000yqx.googlegroups.com>

I recognize things like this take time, I was just making sure you
weren't against it for other reasons. Comments probably won't go
canonical just because many core devs deem it not to do so, but it's
discussions like this that foster the "why is it core" question, and
ask if there's a better way or if we're just sticking to a structure
that's always been and are afraid to change or modify it. I'm not
saying comments shouldn't be part of a core release, just that it
should be separated out (amongst other things) for users to decide for
themselves. Again, it would be enabled by default so no one would know
the difference but the developers and users who don't want it.

-Scott


On Mar 6, 8:52?pm, Ptah Dunbar <p... at ptahd.com> wrote:
> Hey Scott, let's clarify my statement.
>
> Looking at the facts, WP is currently used by millions of users. Millions. And if you were to compare the ratio of users to developers, users would definitely win by a lane slide. My statement comes from recognizing this fact, not because I'm stuck to an "a la carte" mindset. I'm a developer just like you who would _love_ if WP immediately got rid of all the "developer considered" bloat and turn it into a more frameworky CMS that just comes with essential CMS core components and it's current UI.
>
> I did an interview a while ago where one of the question was along the lines of Where would you say WordPress is in terms of it?s Life Cycle?" And I said it's an 18 year old teenager. WP started out as blogging software but is currently transitioning over into a more general purpose CMS. It's got a lot of growing up to do. Version 3.0 is the first version to truly make that big step with custom post types. How long did that take? My point is, you're way ahead of the wp development cycle by assuming something like a canonical comments plugin will see the light of day--anytime soon.
>
> Version 2.9 *just* introduced a new comments meta table to make comments more extendable. You can do things like create a bug reporting system, or Get satisfaction-esque support website if you knew anything about the comments meta table and custom comment types. Don't limit comments to just blogging features. They have all kinds of use case scenarios if your willing to accept the fact that WP _can_ do a lot out of the box.
>
> So again, I'm not being close minded, I'm just looking at the facts. Comments ain't going no where anytime soon.
>
> On Mar 7, 2010, at 3:20 AM, Scott Kingsley Clark wrote:

From benfavre at gmail.com  Sun Mar  7 03:16:11 2010
From: benfavre at gmail.com (gr0b1)
Date: Sat, 6 Mar 2010 19:16:11 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <560beb72-9f36-4fe2-9121-8ce7c3509de3@x22g2000yqx.googlegroups.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<6CF63822-9901-4753-9EF2-3B8DE98E1969@ptahd.com>
	<560beb72-9f36-4fe2-9121-8ce7c3509de3@x22g2000yqx.googlegroups.com>
Message-ID: <64b14913-a09f-41d7-9602-323517ca2a04@q23g2000yqd.googlegroups.com>

+1 to this discussion.
I really hope this is what we can expect of WordPress in the coming
releases.
And like Scott said functionalities activated by default but with an
easy way of turning them off.

-Ben

On Mar 7, 3:02?am, Scott Kingsley Clark <sc0ttkcl... at gmail.com> wrote:
> I recognize things like this take time, I was just making sure you
> weren't against it for other reasons. Comments probably won't go
> canonical just because many core devs deem it not to do so, but it's
> discussions like this that foster the "why is it core" question, and
> ask if there's a better way or if we're just sticking to a structure
> that's always been and are afraid to change or modify it. I'm not
> saying comments shouldn't be part of a core release, just that it
> should be separated out (amongst other things) for users to decide for
> themselves. Again, it would be enabled by default so no one would know
> the difference but the developers and users who don't want it.
>
> -Scott
>
> On Mar 6, 8:52?pm, Ptah Dunbar <p... at ptahd.com> wrote:> Hey Scott, let's clarify my statement.
>
> > Looking at the facts, WP is currently used by millions of users. Millions. And if you were to compare the ratio of users to developers, users would definitely win by a lane slide. My statement comes from recognizing this fact, not because I'm stuck to an "a la carte" mindset. I'm a developer just like you who would _love_ if WP immediately got rid of all the "developer considered" bloat and turn it into a more frameworky CMS that just comes with essential CMS core components and it's current UI.
>
> > I did an interview a while ago where one of the question was along the lines of Where would you say WordPress is in terms of it?s Life Cycle?" And I said it's an 18 year old teenager. WP started out as blogging software but is currently transitioning over into a more general purpose CMS. It's got a lot of growing up to do. Version 3.0 is the first version to truly make that big step with custom post types. How long did that take? My point is, you're way ahead of the wp development cycle by assuming something like a canonical comments plugin will see the light of day--anytime soon.
>
> > Version 2.9 *just* introduced a new comments meta table to make comments more extendable. You can do things like create a bug reporting system, or Get satisfaction-esque support website if you knew anything about the comments meta table and custom comment types. Don't limit comments to just blogging features. They have all kinds of use case scenarios if your willing to accept the fact that WP _can_ do a lot out of the box.
>
> > So again, I'm not being close minded, I'm just looking at the facts. Comments ain't going no where anytime soon.
>
> > On Mar 7, 2010, at 3:20 AM, Scott Kingsley Clark wrote:
>
> _______________________________________________
> wp-hackers mailing list
> wp-hack... at lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Sun Mar  7 03:24:20 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 6 Mar 2010 22:24:20 -0500
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
	<d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com>
Message-ID: <CBE5C501-CE3C-4E06-B13E-BE5302309FED@newclarity.net>

On Mar 6, 2010, at 9:41 PM, kaiiser wrote:
> When looking at core-CMS features i still see WP lacking some
> functionality somewhere else: For ex. Users. I think this
> http://wordpress.org/extend/plugins/members/ could be WP-Core
> material.

Or canonical plugin, so +1.

On Mar 6, 2010, at 9:41 PM, John O'Nolan wrote:
> If pointless stuff like HelloDolly and the Classic theme was also removed there would be more space for canonical plugins.. so +1 there

+1

-Mike


From pt at ptahd.com  Sun Mar  7 03:32:58 2010
From: pt at ptahd.com (Ptah Dunbar)
Date: Sun, 7 Mar 2010 04:32:58 +0100
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <CBE5C501-CE3C-4E06-B13E-BE5302309FED@newclarity.net>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
	<d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com>
	<CBE5C501-CE3C-4E06-B13E-BE5302309FED@newclarity.net>
Message-ID: <1A83C58F-18A7-4705-AFB0-0CD085CA4A59@ptahd.com>

>> When looking at core-CMS features i still see WP lacking some
>> functionality somewhere else: For ex. Users. I think this
>> http://wordpress.org/extend/plugins/members/

Funny that you pointed that particular plugin out :) ...anyway.

I'm all +1 on removing cruff to make WP more lean, but I really don't even see any point for this conversation to take place. Instead, you guys might have better luck discussing the removal of all the importers (to become canonical plugins) before even thinking about removing something essential like comments. Lets just be realistic here.

On Mar 7, 2010, at 4:24 AM, Mike Schinkel wrote:

> On Mar 6, 2010, at 9:41 PM, kaiiser wrote:
>> When looking at core-CMS features i still see WP lacking some
>> functionality somewhere else: For ex. Users. I think this
>> http://wordpress.org/extend/plugins/members/ could be WP-Core
>> material.
> 
> Or canonical plugin, so +1.
> 
> On Mar 6, 2010, at 9:41 PM, John O'Nolan wrote:
>> If pointless stuff like HelloDolly and the Classic theme was also removed there would be more space for canonical plugins.. so +1 there
> 
> +1
> 
> -Mike
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Sun Mar  7 03:46:42 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 6 Mar 2010 22:46:42 -0500
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <1A83C58F-18A7-4705-AFB0-0CD085CA4A59@ptahd.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
	<d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com>
	<CBE5C501-CE3C-4E06-B13E-BE5302309FED@newclarity.net>
	<1A83C58F-18A7-4705-AFB0-0CD085CA4A59@ptahd.com>
Message-ID: <9E0DEC91-60D0-4E50-B43A-407DA8744678@newclarity.net>

On Mar 6, 2010, at 10:32 PM, Ptah Dunbar wrote:
> I'm all +1 on removing cruff to make WP more lean, but I really don't even see any point for this conversation to take place. Instead, you guys might have better luck discussing the removal of all the importers (to become canonical plugins) before even thinking about removing something essential like comments. Lets just be realistic here.

Since you bring it up, let me say why making comments a canonical plugin would have benefit (although I don't have strong feelings about comments, this is just a general principle.)  Right now there are many things that are hard coded and very difficult to change if someone really needs to.  By moving in the direction of making more currently core functionality into canonical plugins the issues which make flexible usage difficult will be minimized.  

As an example right now WordPress 3.0 has 5 "core" post types: post, page, attachment, revision and nav_menu_item.  It's currently architected to assume they are there which means that, for example, if I were to remove the "post" type I create undefined conditions such as a "Posts" menu that has "Add New" and that errors out when I try to add one. By having (previously) "core" functionality like "Posts" and "Comments" in canonical plugins those broken edge cases are much more likely to be worked out by the core dev team instead of individually by everyone who needs it and has the resources to work on it.

FWIW.

-Mike

From dougal at gunters.org  Sun Mar  7 04:04:52 2010
From: dougal at gunters.org (Dougal Campbell)
Date: Sat, 06 Mar 2010 23:04:52 -0500
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <35C7C72A-334A-456A-B7F5-F6274F507F56@onolan.org>
References: <001001cabd97$2ac538c0$804faa40$@net>	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<35C7C72A-334A-456A-B7F5-F6274F507F56@onolan.org>
Message-ID: <4B9325E4.2050305@gunters.org>

On Mar 6 2010 9:41 PM, John O'Nolan wrote:
> If pointless stuff like HelloDolly and the Classic theme was also 
> removed there would be more space for canonical plugins.. so +1 there

You can be pretty sure that the Classic theme will stay for 
backwards-compatibility reasons, because people may have built child 
themes based on it.

And you can be pretty sure that Hello Dolly will remain because it 
amuses Matt :)

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From sc0ttkclark at gmail.com  Sun Mar  7 04:14:48 2010
From: sc0ttkclark at gmail.com (Scott Kingsley Clark)
Date: Sat, 6 Mar 2010 20:14:48 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <4B9325E4.2050305@gunters.org>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<35C7C72A-334A-456A-B7F5-F6274F507F56@onolan.org> 
	<4B9325E4.2050305@gunters.org>
Message-ID: <3031f9ab-2704-4d98-9636-a19548bd6a25@x22g2000yqx.googlegroups.com>

Because it amuses Matt? Well, if it amuses Matt and he wants to keep
it in, give it real functionality, like the ability to set an RSS feed
to pull random lines from (which could contain links and such). By
default it would do the Hello Dolly stuff, but then it'd let users
easily see how a plugin can really work. Just my opinion :)

-Scott


On Mar 6, 10:04?pm, Dougal Campbell <dou... at gunters.org> wrote:
> On Mar 6 2010 9:41 PM, John O'Nolan wrote:
>
> > If pointless stuff like HelloDolly and the Classic theme was also
> > removed there would be more space for canonical plugins.. so +1 there
>
> You can be pretty sure that the Classic theme will stay for
> backwards-compatibility reasons, because people may have built child
> themes based on it.
>
> And you can be pretty sure that Hello Dolly will remain because it
> amuses Matt :)
>
> --
> Dougal Campbell <dou... at gunters.org>http://dougal.gunters.org/http://twitter.com/dougalhttp://twitual.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hack... at lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers

From pt at ptahd.com  Sun Mar  7 04:17:36 2010
From: pt at ptahd.com (Ptah Dunbar)
Date: Sun, 7 Mar 2010 05:17:36 +0100
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <9E0DEC91-60D0-4E50-B43A-407DA8744678@newclarity.net>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
	<d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com>
	<CBE5C501-CE3C-4E06-B13E-BE5302309FED@newclarity.net>
	<1A83C58F-18A7-4705-AFB0-0CD085CA4A59@ptahd.com>
	<9E0DEC91-60D0-4E50-B43A-407DA8744678@newclarity.net>
Message-ID: <98F10650-AC26-4CAB-AA20-7E7D8593F406@ptahd.com>

> As an example right now WordPress 3.0 has 5 "core" post types: post, page, attachment, revision and nav_menu_item.  It's currently architected to assume they are there which means that, for example, if I were to remove the "post" type I create undefined conditions such as a "Posts" menu that has "Add New" and that errors out when I try to add one.

I raised that issue about core post types not using the show_ui argument so if one decides to remove them, Posts,  Pages, and Media would disappear from the UI. Outside of that, I disagree that the core post types are really that hardcoded into WP; and if so, then that's probably a bug which you should file a new ticket for.

> By having (previously) "core" functionality like "Posts" and "Comments" in canonical plugins those broken edge cases are much more likely to be worked out by the core dev team instead of individually by everyone who needs it and has the resources to work on it.

I'm -1 on canonicalizing "Posts" and "Comments" but I am +1 on removing any hardcoded references to them in core. Again, version 3.0 decouples a lot of the default posts types (posts and pages) as well as taxonomies (cats and tags) so if you find anything that current still is hardcoded, get it reported so it can be patched.

- Ptah Dunbar

From john.wp at onolan.org  Sun Mar  7 04:20:43 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Sun, 7 Mar 2010 04:20:43 +0000
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <4B9325E4.2050305@gunters.org>
References: <001001cabd97$2ac538c0$804faa40$@net>	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<35C7C72A-334A-456A-B7F5-F6274F507F56@onolan.org>
	<4B9325E4.2050305@gunters.org>
Message-ID: <3DC6B52D-BAD8-4511-A1FB-C93C7F34C6A7@onolan.org>

Removing the classic theme from the core does not break anything in  
terms of compatibility... people can still download it from  
Wordpress.org.

And the fact that something "amsuses Matt" surely isn't relevant to  
anything...

John



On 7 Mar 2010, at 04:04, Dougal Campbell wrote:

> On Mar 6 2010 9:41 PM, John O'Nolan wrote:
>> If pointless stuff like HelloDolly and the Classic theme was also  
>> removed there would be more space for canonical plugins.. so +1 there
>
> You can be pretty sure that the Classic theme will stay for  
> backwards-compatibility reasons, because people may have built child  
> themes based on it.
>
> And you can be pretty sure that Hello Dolly will remain because it  
> amuses Matt :)
>
> -- 
> Dougal Campbell <dougal at gunters.org>
> http://dougal.gunters.org/
> http://twitter.com/dougal
> http://twitual.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From sc0ttkclark at gmail.com  Sun Mar  7 04:32:55 2010
From: sc0ttkclark at gmail.com (Scott Kingsley Clark)
Date: Sat, 6 Mar 2010 20:32:55 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <98F10650-AC26-4CAB-AA20-7E7D8593F406@ptahd.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
	<d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com> 
	<CBE5C501-CE3C-4E06-B13E-BE5302309FED@newclarity.net>
	<1A83C58F-18A7-4705-AFB0-0CD085CA4A59@ptahd.com> 
	<9E0DEC91-60D0-4E50-B43A-407DA8744678@newclarity.net>
	<98F10650-AC26-4CAB-AA20-7E7D8593F406@ptahd.com>
Message-ID: <a4841bed-843e-46ce-af5b-76f3a06e4250@d27g2000yqf.googlegroups.com>

> I'm -1 on canonicalizing "Posts" and "Comments" but I am +1 on removing any hardcoded references to them in core. Again, version 3.0 decouples a lot of the default posts types (posts and pages) as well as taxonomies (cats and tags) so if you find anything that current still is hardcoded, get it reported so it can be patched.

That's definitely a good start, having them decoupled will ensure once
someone does try to disable them, nothing breaks. I'd preferably like
to see the post-specific / page-specific / link-specific / comment-
specific code in a Canonical plugin OR option internally. Plugins can
do a lot, but bloat should be able to be managed from within the box
(lumped altogether as one big bloat) and not requiring extra bloat to
remove the bloat - if that makes sense ;)

> As an example right now WordPress 3.0 has 5 "core" post types: post, page, attachment, revision and nav_menu_item.  It's currently architected to assume they are there which means that, for example, if I were to remove the "post" type I create undefined conditions such as a "Posts" menu that has "Add New" and that errors out when I try to add one.

Am I the only one that is confused as to why nav_menu_item is in
wp_posts? Maybe I should look into trunk and see why ;)

BTW, (not to sidetrack the thread entirely) the wp_posts+postmeta vs
wp_comments+commentmeta is a good example of why Custom Post Types
aren't always best solution (vs custom tables). Finally, proof that
the core team agrees (somewhat)! Comments aren't Posts, and so aren't
a ton of other things :-) okay.. /end hijacking


-Scott


On Mar 6, 10:17?pm, Ptah Dunbar <p... at ptahd.com> wrote:
> > As an example right now WordPress 3.0 has 5 "core" post types: post, page, attachment, revision and nav_menu_item. ?It's currently architected to assume they are there which means that, for example, if I were to remove the "post" type I create undefined conditions such as a "Posts" menu that has "Add New" and that errors out when I try to add one.
>
> I raised that issue about core post types not using the show_ui argument so if one decides to remove them, Posts, ?Pages, and Media would disappear from the UI. Outside of that, I disagree that the core post types are really that hardcoded into WP; and if so, then that's probably a bug which you should file a new ticket for.
>
> > By having (previously) "core" functionality like "Posts" and "Comments" in canonical plugins those broken edge cases are much more likely to be worked out by the core dev team instead of individually by everyone who needs it and has the resources to work on it.
>
> I'm -1 on canonicalizing "Posts" and "Comments" but I am +1 on removing any hardcoded references to them in core. Again, version 3.0 decouples a lot of the default posts types (posts and pages) as well as taxonomies (cats and tags) so if you find anything that current still is hardcoded, get it reported so it can be patched.
>
> - Ptah Dunbar
> _______________________________________________
> wp-hackers mailing list
> wp-hack... at lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers

From sc0ttkclark at gmail.com  Sun Mar  7 04:40:58 2010
From: sc0ttkclark at gmail.com (Scott Kingsley Clark)
Date: Sat, 6 Mar 2010 20:40:58 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <a4841bed-843e-46ce-af5b-76f3a06e4250@d27g2000yqf.googlegroups.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
	<d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com> 
	<CBE5C501-CE3C-4E06-B13E-BE5302309FED@newclarity.net>
	<1A83C58F-18A7-4705-AFB0-0CD085CA4A59@ptahd.com> 
	<9E0DEC91-60D0-4E50-B43A-407DA8744678@newclarity.net>
	<98F10650-AC26-4CAB-AA20-7E7D8593F406@ptahd.com> 
	<a4841bed-843e-46ce-af5b-76f3a06e4250@d27g2000yqf.googlegroups.com>
Message-ID: <8f693511-6085-49b8-be52-b6fc4d7c5669@g4g2000yqa.googlegroups.com>

My apologies, I should clarify. I think Posts / Pages should be kept
as core, but everything else can be up for nomination ;)

-Scott


From 24-7 at gmx.net  Sun Mar  7 04:42:42 2010
From: 24-7 at gmx.net (kaiiser)
Date: Sat, 6 Mar 2010 20:42:42 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <3DC6B52D-BAD8-4511-A1FB-C93C7F34C6A7@onolan.org>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<35C7C72A-334A-456A-B7F5-F6274F507F56@onolan.org> 
	<4B9325E4.2050305@gunters.org>
	<3DC6B52D-BAD8-4511-A1FB-C93C7F34C6A7@onolan.org>
Message-ID: <c1b9a008-4447-4838-8e90-c85039262c69@e7g2000yqf.googlegroups.com>

> And the fact that something "amsuses Matt" surely isn't relevant to anything...

+1

> Because it amuses Matt? Well, if it amuses Matt and he wants to keep
> it in, give it real functionality, like the ability to set an RSS feed
> to pull random lines from (which could contain links and such). By
> default it would do the Hello Dolly stuff, but then it'd let users
> easily see how a plugin can really work. Just my opinion :) -Scott

again: +1

Adding functionality would be step one to give the plugin enough
relevance to keep it in core (outside from someones personal feelings
about this).

> Removing the classic theme from the core does not break anything in
> terms of compatibility... people can still download it from
> Wordpress.org.

So true. Same to "Hello Kitty"-Plugins.

> I'm -1 on canonicalizing "Posts" and "Comments" but I am +1 on removing any hardcoded references to them in core.

-1. Where is the argument? I give you an example for what an argument
is: less bandwidth = greener planet...

> functionalities activated by default but with an easy way of turning them off

+1: let the user decide. On all variations (in usage) i have now seen
for wordpress, "Canonical Plugins" is not only a term (that should get
a TM-Sign on the upper right) anymore. It's an idea. A beautiful one
that will satisfy everybody. It doesn't take anything from anyone, but
it gives everbody one important thing: The freedom to decide what he/
she wants and what not. A pretty democratic, individual and therefor
appropriate approach for free, community driven, open source software.



From pt at ptahd.com  Sun Mar  7 04:52:03 2010
From: pt at ptahd.com (Ptah Dunbar)
Date: Sun, 7 Mar 2010 05:52:03 +0100
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <a4841bed-843e-46ce-af5b-76f3a06e4250@d27g2000yqf.googlegroups.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net>
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
	<d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com>
	<CBE5C501-CE3C-4E06-B13E-BE5302309FED@newclarity.net>
	<1A83C58F-18A7-4705-AFB0-0CD085CA4A59@ptahd.com>
	<9E0DEC91-60D0-4E50-B43A-407DA8744678@newclarity.net>
	<98F10650-AC26-4CAB-AA20-7E7D8593F406@ptahd.com>
	<a4841bed-843e-46ce-af5b-76f3a06e4250@d27g2000yqf.googlegroups.com>
Message-ID: <F282941F-FF15-4CA4-8F10-3ECDE0D674D9@ptahd.com>

> Am I the only one that is confused as to why nav_menu_item is in
> wp_posts? Maybe I should look into trunk and see why ;)

I was initially against nav menu items being stored in the posts table, but essentially the argument goes: menu items have a lot of the same attributes as posts e.g. link title (post_title), description (post_content), attribute title (post_excerpt), parent links (post_parent) you get the picture. So by menu items being stored in the posts table, they get a lot of things "for free" instead of creating a new table with more or less of the same table columns.

The posts table is more like a content types table. But yeah that goes back to the teenager reference. WP needs better semantics :)

From sc0ttkclark at gmail.com  Sun Mar  7 05:18:04 2010
From: sc0ttkclark at gmail.com (Scott Kingsley Clark)
Date: Sat, 6 Mar 2010 21:18:04 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <F282941F-FF15-4CA4-8F10-3ECDE0D674D9@ptahd.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
	<d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com> 
	<CBE5C501-CE3C-4E06-B13E-BE5302309FED@newclarity.net>
	<1A83C58F-18A7-4705-AFB0-0CD085CA4A59@ptahd.com> 
	<9E0DEC91-60D0-4E50-B43A-407DA8744678@newclarity.net>
	<98F10650-AC26-4CAB-AA20-7E7D8593F406@ptahd.com> 
	<a4841bed-843e-46ce-af5b-76f3a06e4250@d27g2000yqf.googlegroups.com> 
	<F282941F-FF15-4CA4-8F10-3ECDE0D674D9@ptahd.com>
Message-ID: <e9704dcf-3bf7-43e9-98a8-affdacbd4d91@g10g2000yqh.googlegroups.com>

> I was initially against nav menu items being stored in the posts table, but essentially the argument goes: menu items have a lot of the same attributes as posts e.g. link title (post_title), description (post_content), attribute title (post_excerpt), parent links (post_parent) you get the picture. So by menu items being stored in the posts table, they get a lot of things "for free" instead of creating a new table with more or less of the same table columns.
>
> The posts table is more like a content types table. But yeah that goes back to the teenager reference. WP needs better semantics :)

We definitely agree there! I just think it's funny is all.. Oh,
wouldn't it be great if "post" (blog reference ftw) wasn't the term
for content in WP? LOL. Yeah, I just threw that out there, again, not
trying to constantly derail discussion of making WP more modular than
it already is. Do what you will ;)

From sc0ttkclark at gmail.com  Sun Mar  7 05:28:31 2010
From: sc0ttkclark at gmail.com (Scott Kingsley Clark)
Date: Sat, 6 Mar 2010 21:28:31 -0800 (PST)
Subject: [wp-hackers] comments should be a plugin
In-Reply-To: <e9704dcf-3bf7-43e9-98a8-affdacbd4d91@g10g2000yqh.googlegroups.com>
References: <001001cabd97$2ac538c0$804faa40$@net>
	<C3E4033C-8B46-4BD0-B4E3-BB7B1CFB2CEF@newclarity.net> 
	<98E47EC9-C837-4816-8036-80EC53AB368E@ptahd.com>
	<fc13bcc3-1843-479c-beb7-388d9217972d@q21g2000yqm.googlegroups.com>
	<515D5692-5FBD-4B20-85C8-1335981F9E62@newclarity.net>
	<1f983c20-af4c-447d-8eea-bbd9f4fb3b2f@e1g2000yqh.googlegroups.com>
	<d73668c9-1335-4f02-ae41-f9299f76bb9b@d27g2000yqf.googlegroups.com> 
	<CBE5C501-CE3C-4E06-B13E-BE5302309FED@newclarity.net>
	<1A83C58F-18A7-4705-AFB0-0CD085CA4A59@ptahd.com> 
	<9E0DEC91-60D0-4E50-B43A-407DA8744678@newclarity.net>
	<98F10650-AC26-4CAB-AA20-7E7D8593F406@ptahd.com> 
	<a4841bed-843e-46ce-af5b-76f3a06e4250@d27g2000yqf.googlegroups.com> 
	<F282941F-FF15-4CA4-8F10-3ECDE0D674D9@ptahd.com>
	<e9704dcf-3bf7-43e9-98a8-affdacbd4d91@g10g2000yqh.googlegroups.com>
Message-ID: <c8468c39-f77f-410d-8a98-813c4128aa52@z4g2000yqa.googlegroups.com>

By the way, I fully recognize the term "post" is used in a million
blocks of code: Core, Themes, Plugins, Widgets, everything. I was only
picking on the fact that WP uses "post" as it's term, forever branding
WP with it's Blog past :-)

-Scott


From harish.mlists at gmail.com  Sun Mar  7 15:51:53 2010
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Sun, 07 Mar 2010 16:51:53 +0100
Subject: [wp-hackers] Links querying multiple tags
Message-ID: <4B93CB99.6060709@gmail.com>

I noticed some time ago that links querying multiple tags (e.g.
site.org/tag/foo,bar/) stopped working on my site which runs WordPress
trunk.

After systematically stepping backward through svn changesets, I figured
out that the changeset that was causing this problem is the following:

http://core.trac.wordpress.org/changeset/13170/trunk

Before I went ahead and filed a ticket, I wanted to make sure if

1. Others were seeing this behaviour.
2. The syntax for generating a page with multiple tags just hadn't
changed to something else.

Thanks,
Harish

From wp-hackers at striderweb.com  Sun Mar  7 17:10:15 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun, 7 Mar 2010 11:10:15 -0600
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<161617691003051423i2b6fdb17p6e5ff0f7f27bebeb@mail.gmail.com>
Message-ID: <8BBFDDE6-0816-4DD0-A129-C40C11843456@striderweb.com>

+47

Absolutely, positively optional.

On Mar 5, 2010, at 4:23 PM, Otto wrote:

> As long as this has a master off-switch, because there's no way I'd
> ever implement such a thing on my sites.


From scribu at gmail.com  Sun Mar  7 17:19:07 2010
From: scribu at gmail.com (scribu)
Date: Sun, 7 Mar 2010 19:19:07 +0200
Subject: [wp-hackers] Links querying multiple tags
In-Reply-To: <4B93CB99.6060709@gmail.com>
References: <4B93CB99.6060709@gmail.com>
Message-ID: <349fe48b1003070919p4432cc57vbec017b9d3c8fae6@mail.gmail.com>

On Sun, Mar 7, 2010 at 5:51 PM, Harish Narayanan <harish.mlists at gmail.com>wrote:

> I noticed some time ago that links querying multiple tags (e.g.
> site.org/tag/foo,bar/) stopped working on my site which runs WordPress
> trunk.
>
> After systematically stepping backward through svn changesets, I figured
> out that the changeset that was causing this problem is the following:
>
> http://core.trac.wordpress.org/changeset/13170/trunk
>
> Before I went ahead and filed a ticket, I wanted to make sure if
>
> 1. Others were seeing this behaviour.
> 2. The syntax for generating a page with multiple tags just hadn't
> changed to something else.
>

1. Yep, tag unions aren't working for me either. Tag intersections don't
work either: /tag/foo+bar

2. No, the syntax hasn't changed.


-- 
http://scribu.net

From harish.mlists at gmail.com  Sun Mar  7 17:40:45 2010
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Sun, 07 Mar 2010 18:40:45 +0100
Subject: [wp-hackers] Links querying multiple tags
In-Reply-To: <349fe48b1003070919p4432cc57vbec017b9d3c8fae6@mail.gmail.com>
References: <4B93CB99.6060709@gmail.com>
	<349fe48b1003070919p4432cc57vbec017b9d3c8fae6@mail.gmail.com>
Message-ID: <4B93E51D.6010200@gmail.com>

On 3/7/10 6:19 PM, scribu wrote:
> On Sun, Mar 7, 2010 at 5:51 PM, Harish Narayanan <harish.mlists at gmail.com>wrote:
> 
>> I noticed some time ago that links querying multiple tags (e.g.
>> site.org/tag/foo,bar/) stopped working on my site which runs WordPress
>> trunk.
>>
>> After systematically stepping backward through svn changesets, I figured
>> out that the changeset that was causing this problem is the following:
>>
>> http://core.trac.wordpress.org/changeset/13170/trunk
>>
>> Before I went ahead and filed a ticket, I wanted to make sure if
>>
>> 1. Others were seeing this behaviour.
>> 2. The syntax for generating a page with multiple tags just hadn't
>> changed to something else.
>>
> 
> 1. Yep, tag unions aren't working for me either. Tag intersections don't
> work either: /tag/foo+bar
> 
> 2. No, the syntax hasn't changed.

Thanks, I have opened the following ticket:
http://core.trac.wordpress.org/ticket/12547

Harish

From wp-hackers at striderweb.com  Sun Mar  7 19:34:15 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun, 7 Mar 2010 13:34:15 -0600
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><20BE80F3-9377-466C-8517-AF9F02795687@onolan.org><349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
Message-ID: <24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>

Okay, responding to a whole lot of people here....

Starting off, just for perspective -- I'm all for making Comments in a Post type, if it makes sense to do so.  We've essentially established that "Post" really means "Content", and comments are certainly a type of content.

However, I don't support making all commenters into Users.  That point is the main focus of the rest of this email.

On Mar 5, 2010, at 9:22 PM, William Canino wrote:

> Guys, let's not fret about the security implications here.  Any
> blogger who wants this is already using the  "Only registered users
> may comment" feature.

Actually, I think you have it exactly backwards. The  "Only registered users may comment" feature is primarily for things like spam control, or specific use cases where the site wants more involved interaction with readers.

The more security conscious admin right now (generally speaking) does *not* let outsiders register at all -- unless they have specific reason to allow it.

The main security concern regarding making all commenters into users is that being a user -- of any type -- is a point of access to the system and a significant step toward hacking the site.  Several times in the past a vulnerability in WP has come up related to Subscribers being able to elevate their own privileges.


On Mar 6, 2010, at 8:14 PM, scribu wrote:

> Hikari, please stop writing non-sequiturs emotional arguments and regarding
> security. Thanks.

On Mar 5, 2010, at 11:55 PM, Mike Schinkel wrote:

> Other than superstition I haven't heard a reason from you why having commenters in wp_users is bad.

...and these kinds of comments do absolutely *nothing* to forward the discussion.  I agree with you two guys much of the time, but please can the attitude.  It's not superstition and it's not some emotional flight of fancy.  When the user elevation bugs cropped up in the past, I'm pretty sure they only applied to sites that actually *allowed* users to register.

That's not superstition, that's historical fact.  Had all commenters been Users at the time, those vulnerabilities would have applied to any blog with comments.  It's a legitimate concern.

On Mar 6, 2010, at 7:20 AM, John O'Nolan wrote:

>> Let's say I ran a company in the past and left a lot of comments using my gmail address but with my prior company's URL.  Now I've sold that company and started a new one; should the links on the old posts all change to be for my new URL?
> 
> This is completely irrelevant. In this case you would be abusing the Wordpress comment form, and if the wrong company name showed up at some point then that's your own fault.


Not necessarily spam related.  I remember a case where I was on a blog on which I commented frequently.  Along came a post on an unusual, and very serious topic.  I commented on it, but for various reasons I won't go into, chose to use a pseudonym rather than my usual "commenter name".  To be clear -- it was the type of discussion in which for many commenters the topics was such that identifying themselves could be very problematic.  Yet it was a useful topic -- it literally might have saved lives.

Don't presume that the only reason a commenter might want to identify themselves differently is for spam purposes.

On Mar 6, 2010, at 10:15 AM, scribu wrote:

> What this implies is that all sites that have user registration open are
> insecure.

Less secure, yes.


On Mar 6, 2010, at 10:59 AM, Otto wrote:

> by making users,
> you're implicitly giving the ability to log in to them. If somebody
> can create an entry in the users table, then they have registered on
> the site. That's what registration *is*.

Agreed.

On Mar 6, 2010, at 12:00 PM, Jeff Waugh wrote:

> <quote who="scribu">
> 
>> I never liked the duplication that occurs: when a logged-in user leaves a
>> comment: his email, for example, is stored both in the wp_users table, and
>> the once more for each comment.
> 
> One advantage to this denormalisation (if we're being anal retentive about
> it)... historical accuracy.
> 
> An odd example from the opposite direction: I wrote a quick hack for one of
> my sites which duplicates the user's bio into a custom field on each post
> they publish, such that if they change their bio in the future, it will not
> change on their historical posts. It was important because the context of
> the bio and article were linked -- conflict of interest disclosures and the
> like.

This is ***HUGE*** for me.  I no more want old comments to change than I would want the code to go back and change historic posts.

Also, at times I do what Jeff describes.  For example, if somebody posts about one of my WP plugins, I might comment, and in the "name" field say "Stephen R (author of the ___ plugin".  Identifying myself as such is only pertinent to that particular post.

Also -- What if my young cousin Jimmy comments on my personal blog?  Five or six years down the road he grows up a bit (it happens) and now goes by "James".  Great -- but I don't want all the old "Jimmy" comments changed to James -- that's not what he went by when he wrote that comment.

There are a lot of cases where changing a commenter out of context might in ways change the meaning of the comment.  Context is important.

Also in terms of historical fidelity:  Has anyone addressed the already-asked question of what happens if a user is deleted?  Are all the posts deleted too?

On Mar 6, 2010, at 4:02 PM, Hikari wrote:

> Some of those [proposed features] would require a profile page to be worthy, and others would require commentator filling a form. THAT's user-like 
> stuff, that justify wp-users. And user registration and login, at least so that they can update their data.
> 
> If I'd want those features, I'd open public registration. When I don't want them, I'd want commentators out of wp-users!
> 
> To fit all needs, how about leaving wp-comments alone, using current user registration features, and attach new features to it?


Again, I'm all cool with making comments into a Post type, but do please leave commenters out of wp-users.  But otherwise he's right.  If I'm going to have things like commenter profile pages, I'm going to make them register -- otherwise those will be pretty slim profiles.

Heck couldn't somebody write a plugin that "auto registers" commenters if that's what they want for their blog?


On Mar 6, 2010, at 5:38 PM, Mike Schinkel wrote:

> I was proposing to consider using wp_posts with a post_type of 'user' instead of wp_users. In the case where we keep wp_users and also created a record of wp_posts with a post_type of 'user', they are parallel.  It seems a binary option; how is it not?

I hope I'm misunderstanding you, because this makes absolutely no sense.  Whether a commenter is a User is one discussion, but are you really suggesting that we define people as a type of POST???

That sounds like a very bad, not to mention arbitrary and confusing, idea.  As somebody else commented, this sounds a lot like the Drupal "everything is a node" paradigm.  Can't say I'm a fan.

Think of the web site rule of separation: "HTML for structure, CSS for appearance, JavaScript for behavior".  Different structures for different purposes.  The Posts table is for site content.  Users table for users.  Options table for Options, and so on.

Philosophically speaking, I actually like the idea of commenters being "Users".  My opposition to it is pragmatic.  People -- actual people -- are a unique element in a site, because they have minds and motives.  The text of a post is never going to spontaneously decide it want to hack my site.  A person might, and thus people have to be treated a bit differently.  Personally I prefer my commenters to be "non-entities" as far as the code is concerned.  I value their input, but they don't exist in terms of code, or what Users can and can't do in the system.

Sincerely,
Stephen

-- 
Stephen Rider
http://striderweb.com/


From wp-hackers at striderweb.com  Sun Mar  7 19:55:27 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun, 7 Mar 2010 13:55:27 -0600
Subject: [wp-hackers] Idea: Widgets as custom post types
In-Reply-To: <55c932671003050755n3c67e936j48fdd828b75cd852@mail.gmail.com>
References: <349fe48b1003021207j42e19bden1405a339d44ba6a4@mail.gmail.com>
	<000001caba52$7026b530$50741f90$@com>
	<4B8DD200.2070108@gunters.org>
	<55c932671003040517j7b35070bjca902c1a4f59235b@mail.gmail.com>
	<349fe48b1003041304u3b46de0am77cc4ee54574b2c6@mail.gmail.com>
	<71688321-5ED3-42EE-998B-6ECCAC3B790F@striderweb.com>
	<55c932671003050755n3c67e936j48fdd828b75cd852@mail.gmail.com>
Message-ID: <F653F038-B2FA-4EC9-A23C-EA69DD982AD9@striderweb.com>


On Mar 5, 2010, at 9:55 AM, Matt wrote:

> The content vs. structure argument can go both ways. Text widgets contain
> *content* that you manage through WordPress. Before this discussion spirals,
> I agree that wp_posts isn't the best place to put widgets.
> 
> My point from earlier was that I'd prefer them *not* be stored as a big
> serialized string.
> 
> Widgets don't really fit into the posts table (as you and Otto mentioned),
> and I dislike the possibility of wp_posts columns being re-purposed to store
> data it wasn't meant to handle. Creating a wp_widgets table sounds
> reasonable.
> 
> BTW, since you're adamant against storing structure in wp_posts, what are
> your thoughts on how the new menu system stores its data?

I guest the question to me becomes: Why are we so afraid to add to the database when appropriate?

It's like I said in another thread:  think of the site coding "separation" rule:  HTML for structure, CSS for appearance, JavaScript for behavior.  When you try to cram all of it straight into the HTML (font tags et al) it becomes a huge mess to work with.

I see similar problems with trying to shoehorn every possible piece of the site into a category that doesn't really fit (e.g. non-content as content).

That being said, others on this list are probably more experienced coders than I am.  But perhaps that in itself speaks to the danger of getting **too close** to the code so that it becomes difficult to step back and see it from the perspective of someone approaching it as new.  The more it's all abstracted, the harder it is to learn and work with.  Just because we're all so close to it, we may make it easier for us but make it a lot harder for new people to approach it.

I found WP *extremely* approachable when I was new to it, whereas having to work with Drupal ("everything's a Node!") is frustrating and confusing.

I would be perfectly happy to see a "widgets" table and a "menus" table, so that people trying to figure out what's going on under the hood can do so easily.  Abstracting things too far makes things far to arcane to be readily approached by anyone but dedicated professionals, which equals saying goodbye to a good number of tomorrow's plugin coders.

I'd rather separate the tables and abstract the functions a bit more (with wrapper functions as needed for both clarity and ease of use).  For a prime example of that I can point to the get_file_data() function that I submitted to WP 2.9 -- now used by both get_plugin_data and get_theme_data.  We could abstract the functions to deal with different tables if necessary, and wrap them in seemingly table-specific functions

...or something.  Not claiming the "detailed fix" here -- just throwing out the idea.

Stephen

-- 
Stephen Rider
http://striderweb.com/


From patrik.bona at mrhead.sk  Sun Mar  7 22:50:56 2010
From: patrik.bona at mrhead.sk (=?ISO-8859-1?Q?Patrik_B=F3na?=)
Date: Sun, 07 Mar 2010 23:50:56 +0100
Subject: [wp-hackers] Querying posts inside hierarchical custom taxonomy
In-Reply-To: <59e7f3130909220226t1676e2doe5774baf3b82dabd@mail.gmail.com>
References: <59e7f3130909210135q50c7a16cu96dcfcdf9755e288@mail.gmail.com>	<349fe48b0909210432o60c047a0v3b1a09a631a81482@mail.gmail.com>	<e1202cb10909211627w109319e4y988a08ae9026a52a@mail.gmail.com>
	<59e7f3130909220226t1676e2doe5774baf3b82dabd@mail.gmail.com>
Message-ID: <4B942DD0.4020704@mrhead.sk>

Hi Malaiac, Hi All,

Malaic did you find some workaround for this ? I am using last nightly 
build and custom taxonomies still doesn't as categories...

Guys do you have any idea what would be best way to change it ?

Many thanks

Best regards

Patrik

Malaiac wrote:
> For categories, wp_query does return posts in Category and Children categories.
> For hierarchical taxonomies, wp_query returns only posts in Taxonomy,
> no posts from Children taxonomies, and I haven't find a workaround
> yet.
>
> M
>
> 2009/9/22 Jeremy Clarke <jer at simianuprising.com>:
>   
>> I'm also unclear about what you're asking.
>>
>> Assuming you want to get all posts in a given term AND its children,
>> have you checked that it doesn't already do so when you fetch the
>> term? For categories it already does so, though maybe not for
>> hierarchical custom taxonomies. The categories part in in
>> wp-includes/query.php :
>>
>> 1789    $q['category__in'] = array_merge($q['category__in'],
>> get_term_children($cat, 'category'));
>>
>> Maybe that's helpful,
>>
>>
>> --
>> Jeremy Clarke
>> Code and Design | globalvoicesonline.org
>>
>>
>> On Mon, Sep 21, 2009 at 7:32 AM, scribu <scribu at gmail.com> wrote:
>>     
>>> To be clear:
>>>
>>> Do you want to query_posts(...) or do you want to get_terms(...) ?
>>>
>>>
>>> On Mon, Sep 21, 2009 at 11:35 AM, Malaiac <malaiac at gmail.com> wrote:
>>>
>>>       
>>>> Custom taxonomy for posts is "places".
>>>> Hierarchy is like
>>>> Europe
>>>>  France
>>>>  Germany
>>>> Asia
>>>>  Vietnam
>>>>
>>>> I can query posts from "France" or "Vietnam".
>>>> How should I query posts to get all those from Europe or Asia ?
>>>> There is no children term query inside wp_query (query.php, around
>>>> line 1947, there is : $terms = get_terms($q['taxonomy'],
>>>> array('slug'=>$q['term'])); , with no way to ask for children terms).
>>>>
>>>> Malaiac
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>         
>>>
>>> --
>>> http://scribu.net
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   


From patrik.bona at mrhead.sk  Sun Mar  7 23:12:27 2010
From: patrik.bona at mrhead.sk (=?ISO-8859-1?Q?Patrik_B=F3na?=)
Date: Mon, 08 Mar 2010 00:12:27 +0100
Subject: [wp-hackers] Querying posts inside hierarchical custom taxonomy
In-Reply-To: <4B942DD0.4020704@mrhead.sk>
References: <59e7f3130909210135q50c7a16cu96dcfcdf9755e288@mail.gmail.com>	<349fe48b0909210432o60c047a0v3b1a09a631a81482@mail.gmail.com>	<e1202cb10909211627w109319e4y988a08ae9026a52a@mail.gmail.com>	<59e7f3130909220226t1676e2doe5774baf3b82dabd@mail.gmail.com>
	<4B942DD0.4020704@mrhead.sk>
Message-ID: <4B9432DB.5040606@mrhead.sk>

Ok i've searched little more and i've found this (28 hours old ;) ticket:

http://core.trac.wordpress.org/ticket/12533

So it looks that it will be fixed soon and it is great!

Patrik

Patrik B?na wrote:
> Hi Malaiac, Hi All,
>
> Malaic did you find some workaround for this ? I am using last nightly 
> build and custom taxonomies still doesn't as categories...
>
> Guys do you have any idea what would be best way to change it ?
>
> Many thanks
>
> Best regards
>
> Patrik
>
> Malaiac wrote:
>> For categories, wp_query does return posts in Category and Children 
>> categories.
>> For hierarchical taxonomies, wp_query returns only posts in Taxonomy,
>> no posts from Children taxonomies, and I haven't find a workaround
>> yet.
>>
>> M
>>
>> 2009/9/22 Jeremy Clarke <jer at simianuprising.com>:
>>  
>>> I'm also unclear about what you're asking.
>>>
>>> Assuming you want to get all posts in a given term AND its children,
>>> have you checked that it doesn't already do so when you fetch the
>>> term? For categories it already does so, though maybe not for
>>> hierarchical custom taxonomies. The categories part in in
>>> wp-includes/query.php :
>>>
>>> 1789    $q['category__in'] = array_merge($q['category__in'],
>>> get_term_children($cat, 'category'));
>>>
>>> Maybe that's helpful,
>>>
>>>
>>> -- 
>>> Jeremy Clarke
>>> Code and Design | globalvoicesonline.org
>>>
>>>
>>> On Mon, Sep 21, 2009 at 7:32 AM, scribu <scribu at gmail.com> wrote:
>>>    
>>>> To be clear:
>>>>
>>>> Do you want to query_posts(...) or do you want to get_terms(...) ?
>>>>
>>>>
>>>> On Mon, Sep 21, 2009 at 11:35 AM, Malaiac <malaiac at gmail.com> wrote:
>>>>
>>>>      
>>>>> Custom taxonomy for posts is "places".
>>>>> Hierarchy is like
>>>>> Europe
>>>>>  France
>>>>>  Germany
>>>>> Asia
>>>>>  Vietnam
>>>>>
>>>>> I can query posts from "France" or "Vietnam".
>>>>> How should I query posts to get all those from Europe or Asia ?
>>>>> There is no children term query inside wp_query (query.php, around
>>>>> line 1947, there is : $terms = get_terms($q['taxonomy'],
>>>>> array('slug'=>$q['term'])); , with no way to ask for children terms).
>>>>>
>>>>> Malaiac
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>>         
>>>>
>>>> -- 
>>>> http://scribu.net
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>       
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>     
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>   
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From mikeschinkel at newclarity.net  Mon Mar  8 00:17:53 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 7 Mar 2010 19:17:53 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><20BE80F3-9377-466C-8517-AF9F02795687@onolan.org><349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
Message-ID: <6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>

On Mar 7, 2010, at 2:34 PM, Stephen Rider wrote:
> The more security conscious admin right now (generally speaking) does *not* let outsiders register at all -- unless they have specific reason to allow it.

You are unnecessarily conflating "has a record in wp_users" with "having registered as a user."  Commenters would not be registered users, they would have a record in the wp_users table, nothing more.

> The main security concern regarding making all commenters into users is that being a user -- of any type -- is a point of access to the system and a significant step toward hacking the site.  Several times in the past a vulnerability in WP has come up related to Subscribers being able to elevate their own privileges.

So, as I've said, but additional checks in that disallow commenters from logging in. The problem with elevation of privilege is that you let them login at all; put multiple checks in place to ensure they can't login then this becomes a non-issue.

> It's not superstition and it's not some emotional flight of fancy.  When the user elevation bugs cropped up in the past, I'm pretty sure they only applied to sites that actually *allowed* users to register.
> 
> That's not superstition, that's historical fact.  Had all commenters been Users at the time, those vulnerabilities would have applied to any blog with comments.  It's a legitimate concern.

Please address how incorporating multiple checks doesn't resolve the situation?

Anyway, it's becoming clear to me that this issue is becoming much like a conservative debating a liberal or vice versa; both sides have their perspective and both sides are intractable.  

So as I was replying a solution occurred to me that I think will solve almost everyone's issues, especially those that are concerned with security.

Proposal: 
-- Add a "person" post type into WordPress core. 
-- Create a taxonomy called "person-role"
-- Add commenters as posts of post type "person" with a "person-type" of "commenter"
-- Create and maintain a parallel record of post type "person" for each user in the wp_users database.
-- Set  with a "person-type" to "user" for records of post type "person" that are associated with a wp_user.
-- Use wp_users and wp_usermeta only for things related to login and user capabilities.
-- Use wp_post_meta for things like Twitter Screen name, Bio, Photo, etc.

This would solve a myriad of problems. First, it would "harden" the security by making wp_users/wp_usermeta totally focused on security and role management; essentially wp_users conceptually becomes "wp_logins."  It would make wp_posts and wp_post_meta focused on personal, demographic and activity information.  This make it easy to have pages for every person on the site and a whole bunch of other things I can envision but I hope you won't need me to explain (I've already typed too much this weekend.)

>> I was proposing to consider using wp_posts with a post_type of 'user' instead of wp_users. In the case where we keep wp_users and also created a record of wp_posts with a post_type of 'user', they are parallel.  It seems a binary option; how is it not?
> 
> I hope I'm misunderstanding you, because this makes absolutely no sense.  Whether a commenter is a User is one discussion, but are you really suggesting that we define people as a type of POST???

Absolutely, 100% YES.

> That sounds like a very bad, not to mention arbitrary and confusing, idea.  As somebody else commented, this sounds a lot like the Drupal "everything is a node" paradigm.  Can't say I'm a fan.

It's not arbitrary of confusing to me at all. I'm working on a site for a conference right now (a WordPress conference, actually) and it would be a lot easier if users were a post type.

> Think of the web site rule of separation: "HTML for structure, CSS for appearance, JavaScript for behavior".  Different structures for different purposes.  The Posts table is for site content.  Users table for users.  Options table for Options, and so on.

People *are* content. Think of a Facebook page as an example: Photos, URLs (Twitter, Facebook, LinkedIn, etc.), Bios, etc. etc.

Hopefully but proposing what I did above you can see it differently now?

> Philosophically speaking, I actually like the idea of commenters being "Users".  My opposition to it is pragmatic.  People -- actual people -- are a unique element in a site, because they have minds and motives.  The text of a post is never going to spontaneously decide it want to hack my site.  A person might, and thus people have to be treated a bit differently.

My latest proposal rectifies that.

> Personally I prefer my commenters to be "non-entities" as far as the code is concerned.  I value their input, but they don't exist in terms of code, or what Users can and can't do in the system.

If you value their input then I assume you'd want a page where you can see all their comments vs. only seeing their comments littered around the posts.  This latest proposal addresses that.

On Mar 7, 2010, at 2:55 PM, Stephen Rider wrote:
>> BTW, since you're adamant against storing structure in wp_posts, what are
>> your thoughts on how the new menu system stores its data?
> 
> I guest the question to me becomes: Why are we so afraid to add to the database when appropriate?

For me it's not fear to add to the database, it's a desire to use what gives more appropriate functionality.

Personally, the menu items are the things I'd least like to see in wp_posts.  I'd far prefer to see people and comments in wp_posts.

> That being said, others on this list are probably more experienced coders than I am.  But perhaps that in itself speaks to the danger of getting **too close** to the code so that it becomes difficult to step back and see it from the perspective of someone approaching it as new.  The more it's all abstracted, the harder it is to learn and work with.  Just because we're all so close to it, we may make it easier for us but make it a lot harder for new people to approach it.

True, but I don't think this would take us there.

> I found WP *extremely* approachable when I was new to it, whereas having to work with Drupal ("everything's a Node!") is frustrating and confusing.

Drupal is frustrating because of its lack of focus on admin usability and because it maintains control of HTML assembly; WordPress has neither of those problems.  (I worked with Drupal for 2 years before moving to WordPress and leaving Drupal behind.)

Drupal has focused on genericity in the admin UI; WordPress doesn't fall into that trap.  Take the menu designer in WP 3.0 for example. Nowhere does the admin ever see that menu items are stored in the wp_posts table. If it were Drupal, it'd be listed in the node types.

Don't assume improving the architecture forces us to bring along the same problems that other platforms have; the two can be separated.

> I'd rather separate the tables and abstract the functions a bit more (with wrapper functions as needed for both clarity and ease of use).  For a prime example of that I can point to the get_file_data() function that I submitted to WP 2.9 -- now used by both get_plugin_data and get_theme_data.  We could abstract the functions to deal with different tables if necessary, and wrap them in seemingly table-specific functions

I agree that we should separate things when separation makes sense.  

However, we *should* consider putting in wp_posts table if *even a few* of the following add value for the use case:

-- Having a title/body editor for the item has value
-- Having status workflow for the item has value
-- Having visibility control for the item has value
-- Having visibility control for the item has value
-- Having revisions for the item would be valuable
-- Having trash/delete management for the item would be valuable
-- Having ability to schedule publish date/time would be valuable
-- Having a web page of content about the item would be valuable
-- Having ability to define a template for the content page would be valuable
-- Having ability to set another content type as a parent of the item would be valuable
-- Having ability to reference the item in a menu with a menu orderwould be valuable
-- Having category-like terms associated with the item would be valuable
-- Having tag-like terms associated with the item would be valuable
-- Having comments associated with the item would be valuable
-- Having custom fields (meta) associated with the item would be valuable
-- Having images associated with the item would be valuable
-- Having easy URL routing for the item in the form /item-type/%item-name%/ would have value
-- Having an admin menu section for adding and editing would have value
-- Having plugins that support custom content types would add valuable additional functionality "for free."

FWIW, that's a pretty long list.  I can see many of those things being valuable related to people and hence why a person post type in parallel with wp_users and to include commenters makes tons of sense.

OTOH, I'm not certain that menu items really benefit from being there (though maybe they do.)

On Mar 6, 2010, at 11:17 PM, Ptah Dunbar wrote:
> I raised that issue about core post types not using the show_ui argument so if one decides to remove them, Posts,  Pages, and Media would disappear from the UI.

Excellent!

> Outside of that, I disagree that the core post types are really that hardcoded into WP; and if so, then that's probably a bug which you should file a new ticket for.

You are missing the point.  It's not weather or not they are too hardcoded, it's the fact that without being able to remove them few people are ever going to test the edge cases.  If they are removable then its much more likely the edge cases will get tested.  

Its a concern over resultant process and not of the specifics of post being hardcoded.

>> By having (previously) "core" functionality like "Posts" and "Comments" in canonical plugins those broken edge cases are much more likely to be worked out by the core dev team instead of individually by everyone who needs it and has the resources to work on it.
> 
> I'm -1 on canonicalizing "Posts" and "Comments" but I am +1 on removing any hardcoded references to them in core.

Without the former you'll never be able to ensure the latter.

Why would you have an issue with them being default canonical plugins?  I can't see any downside to that.

> Again, version 3.0 decouples a lot of the default posts types (posts and pages) as well as taxonomies (cats and tags) so if you find anything that current still is hardcoded, get it reported so it can be patched.

Many bugs won't be found until decoupling it's easy for anyone to do.

On Mar 6, 2010, at 11:52 PM, Ptah Dunbar wrote:
> The posts table is more like a content types table. But yeah that goes back to the teenager reference. WP needs better semantics :)

Nah, we just need to get comfortable with the semantics we have.

On Mar 7, 2010, at 12:18 AM, Scott Kingsley Clark wrote:
> We definitely agree there! I just think it's funny is all.. Oh,
> wouldn't it be great if "post" (blog reference ftw) wasn't the term
> for content in WP? LOL. 

My experience with Drupal, which refers to nodes as "content" in the admin is just as confusing a "post."  At least we don't have two terms (Drupal = node & content, WP = just post)

-Mike


From john.wp at onolan.org  Mon Mar  8 02:05:58 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Mon, 8 Mar 2010 02:05:58 +0000
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><20BE80F3-9377-466C-8517-AF9F02795687@onolan.org><349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
Message-ID: <D9F7BBBA-955C-460E-B561-C9419FA613A8@onolan.org>

I'm afraid I don't agree with that at all - a user is not a type of  
content... that's taking the content type abstraction to a whole new  
level!

However you did make one excellent point that a lot of people have  
been confusing over the last few days:

"You are unnecessarily conflating "has a record in wp_users" with  
"having registered as a user."  Commenters would not be registered  
users, they would have a record in the wp_users table, nothing more."

John


On 8 Mar 2010, at 00:17, Mike Schinkel wrote:

> On Mar 7, 2010, at 2:34 PM, Stephen Rider wrote:
>> The more security conscious admin right now (generally speaking)  
>> does *not* let outsiders register at all -- unless they have  
>> specific reason to allow it.
>
> You are unnecessarily conflating "has a record in wp_users" with  
> "having registered as a user."  Commenters would not be registered  
> users, they would have a record in the wp_users table, nothing more.
>
>> The main security concern regarding making all commenters into  
>> users is that being a user -- of any type -- is a point of access  
>> to the system and a significant step toward hacking the site.   
>> Several times in the past a vulnerability in WP has come up related  
>> to Subscribers being able to elevate their own privileges.
>
> So, as I've said, but additional checks in that disallow commenters  
> from logging in. The problem with elevation of privilege is that you  
> let them login at all; put multiple checks in place to ensure they  
> can't login then this becomes a non-issue.
>
>> It's not superstition and it's not some emotional flight of fancy.   
>> When the user elevation bugs cropped up in the past, I'm pretty  
>> sure they only applied to sites that actually *allowed* users to  
>> register.
>>
>> That's not superstition, that's historical fact.  Had all  
>> commenters been Users at the time, those vulnerabilities would have  
>> applied to any blog with comments.  It's a legitimate concern.
>
> Please address how incorporating multiple checks doesn't resolve the  
> situation?
>
> Anyway, it's becoming clear to me that this issue is becoming much  
> like a conservative debating a liberal or vice versa; both sides  
> have their perspective and both sides are intractable.
>
> So as I was replying a solution occurred to me that I think will  
> solve almost everyone's issues, especially those that are concerned  
> with security.
>
> Proposal:
> -- Add a "person" post type into WordPress core. 
> -- Create a taxonomy called "person-role"
> -- Add commenters as posts of post type "person" with a "person- 
> type" of "commenter"
> -- Create and maintain a parallel record of post type "person" for  
> each user in the wp_users database.
> -- Set  with a "person-type" to "user" for records of post type  
> "person" that are associated with a wp_user.
> -- Use wp_users and wp_usermeta only for things related to login and  
> user capabilities.
> -- Use wp_post_meta for things like Twitter Screen name, Bio, Photo,  
> etc.
>
> This would solve a myriad of problems. First, it would "harden" the  
> security by making wp_users/wp_usermeta totally focused on security  
> and role management; essentially wp_users conceptually becomes  
> "wp_logins."  It would make wp_posts and wp_post_meta focused on  
> personal, demographic and activity information.  This make it easy  
> to have pages for every person on the site and a whole bunch of  
> other things I can envision but I hope you won't need me to explain  
> (I've already typed too much this weekend.)
>
>>> I was proposing to consider using wp_posts with a post_type of  
>>> 'user' instead of wp_users. In the case where we keep wp_users and  
>>> also created a record of wp_posts with a post_type of 'user', they  
>>> are parallel.  It seems a binary option; how is it not?
>>
>> I hope I'm misunderstanding you, because this makes absolutely no  
>> sense.  Whether a commenter is a User is one discussion, but are  
>> you really suggesting that we define people as a type of POST???
>
> Absolutely, 100% YES.
>
>> That sounds like a very bad, not to mention arbitrary and  
>> confusing, idea.  As somebody else commented, this sounds a lot  
>> like the Drupal "everything is a node" paradigm.  Can't say I'm a  
>> fan.
>
> It's not arbitrary of confusing to me at all. I'm working on a site  
> for a conference right now (a WordPress conference, actually) and it  
> would be a lot easier if users were a post type.
>
>> Think of the web site rule of separation: "HTML for structure, CSS  
>> for appearance, JavaScript for behavior".  Different structures for  
>> different purposes.  The Posts table is for site content.  Users  
>> table for users.  Options table for Options, and so on.
>
> People *are* content. Think of a Facebook page as an example:  
> Photos, URLs (Twitter, Facebook, LinkedIn, etc.), Bios, etc. etc.
>
> Hopefully but proposing what I did above you can see it differently  
> now?
>
>> Philosophically speaking, I actually like the idea of commenters  
>> being "Users".  My opposition to it is pragmatic.  People -- actual  
>> people -- are a unique element in a site, because they have minds  
>> and motives.  The text of a post is never going to spontaneously  
>> decide it want to hack my site.  A person might, and thus people  
>> have to be treated a bit differently.
>
> My latest proposal rectifies that.
>
>> Personally I prefer my commenters to be "non-entities" as far as  
>> the code is concerned.  I value their input, but they don't exist  
>> in terms of code, or what Users can and can't do in the system.
>
> If you value their input then I assume you'd want a page where you  
> can see all their comments vs. only seeing their comments littered  
> around the posts.  This latest proposal addresses that.
>
> On Mar 7, 2010, at 2:55 PM, Stephen Rider wrote:
>>> BTW, since you're adamant against storing structure in wp_posts,  
>>> what are
>>> your thoughts on how the new menu system stores its data?
>>
>> I guest the question to me becomes: Why are we so afraid to add to  
>> the database when appropriate?
>
> For me it's not fear to add to the database, it's a desire to use  
> what gives more appropriate functionality.
>
> Personally, the menu items are the things I'd least like to see in  
> wp_posts.  I'd far prefer to see people and comments in wp_posts.
>
>> That being said, others on this list are probably more experienced  
>> coders than I am.  But perhaps that in itself speaks to the danger  
>> of getting **too close** to the code so that it becomes difficult  
>> to step back and see it from the perspective of someone approaching  
>> it as new.  The more it's all abstracted, the harder it is to learn  
>> and work with.  Just because we're all so close to it, we may make  
>> it easier for us but make it a lot harder for new people to  
>> approach it.
>
> True, but I don't think this would take us there.
>
>> I found WP *extremely* approachable when I was new to it, whereas  
>> having to work with Drupal ("everything's a Node!") is frustrating  
>> and confusing.
>
> Drupal is frustrating because of its lack of focus on admin  
> usability and because it maintains control of HTML assembly;  
> WordPress has neither of those problems.  (I worked with Drupal for  
> 2 years before moving to WordPress and leaving Drupal behind.)
>
> Drupal has focused on genericity in the admin UI; WordPress doesn't  
> fall into that trap.  Take the menu designer in WP 3.0 for example.  
> Nowhere does the admin ever see that menu items are stored in the  
> wp_posts table. If it were Drupal, it'd be listed in the node types.
>
> Don't assume improving the architecture forces us to bring along the  
> same problems that other platforms have; the two can be separated.
>
>> I'd rather separate the tables and abstract the functions a bit  
>> more (with wrapper functions as needed for both clarity and ease of  
>> use).  For a prime example of that I can point to the  
>> get_file_data() function that I submitted to WP 2.9 -- now used by  
>> both get_plugin_data and get_theme_data.  We could abstract the  
>> functions to deal with different tables if necessary, and wrap them  
>> in seemingly table-specific functions
>
> I agree that we should separate things when separation makes sense.
>
> However, we *should* consider putting in wp_posts table if *even a  
> few* of the following add value for the use case:
>
> -- Having a title/body editor for the item has value
> -- Having status workflow for the item has value
> -- Having visibility control for the item has value
> -- Having visibility control for the item has value
> -- Having revisions for the item would be valuable
> -- Having trash/delete management for the item would be valuable
> -- Having ability to schedule publish date/time would be valuable
> -- Having a web page of content about the item would be valuable
> -- Having ability to define a template for the content page would be  
> valuable
> -- Having ability to set another content type as a parent of the  
> item would be valuable
> -- Having ability to reference the item in a menu with a menu  
> orderwould be valuable
> -- Having category-like terms associated with the item would be  
> valuable
> -- Having tag-like terms associated with the item would be valuable
> -- Having comments associated with the item would be valuable
> -- Having custom fields (meta) associated with the item would be  
> valuable
> -- Having images associated with the item would be valuable
> -- Having easy URL routing for the item in the form /item-type/%item- 
> name%/ would have value
> -- Having an admin menu section for adding and editing would have  
> value
> -- Having plugins that support custom content types would add  
> valuable additional functionality "for free."
>
> FWIW, that's a pretty long list.  I can see many of those things  
> being valuable related to people and hence why a person post type in  
> parallel with wp_users and to include commenters makes tons of sense.
>
> OTOH, I'm not certain that menu items really benefit from being  
> there (though maybe they do.)
>
> On Mar 6, 2010, at 11:17 PM, Ptah Dunbar wrote:
>> I raised that issue about core post types not using the show_ui  
>> argument so if one decides to remove them, Posts,  Pages, and Media  
>> would disappear from the UI.
>
> Excellent!
>
>> Outside of that, I disagree that the core post types are really  
>> that hardcoded into WP; and if so, then that's probably a bug which  
>> you should file a new ticket for.
>
> You are missing the point.  It's not weather or not they are too  
> hardcoded, it's the fact that without being able to remove them few  
> people are ever going to test the edge cases.  If they are removable  
> then its much more likely the edge cases will get tested.
>
> Its a concern over resultant process and not of the specifics of  
> post being hardcoded.
>
>>> By having (previously) "core" functionality like "Posts" and  
>>> "Comments" in canonical plugins those broken edge cases are much  
>>> more likely to be worked out by the core dev team instead of  
>>> individually by everyone who needs it and has the resources to  
>>> work on it.
>>
>> I'm -1 on canonicalizing "Posts" and "Comments" but I am +1 on  
>> removing any hardcoded references to them in core.
>
> Without the former you'll never be able to ensure the latter.
>
> Why would you have an issue with them being default canonical  
> plugins?  I can't see any downside to that.
>
>> Again, version 3.0 decouples a lot of the default posts types  
>> (posts and pages) as well as taxonomies (cats and tags) so if you  
>> find anything that current still is hardcoded, get it reported so  
>> it can be patched.
>
> Many bugs won't be found until decoupling it's easy for anyone to do.
>
> On Mar 6, 2010, at 11:52 PM, Ptah Dunbar wrote:
>> The posts table is more like a content types table. But yeah that  
>> goes back to the teenager reference. WP needs better semantics :)
>
> Nah, we just need to get comfortable with the semantics we have.
>
> On Mar 7, 2010, at 12:18 AM, Scott Kingsley Clark wrote:
>> We definitely agree there! I just think it's funny is all.. Oh,
>> wouldn't it be great if "post" (blog reference ftw) wasn't the term
>> for content in WP? LOL.
>
> My experience with Drupal, which refers to nodes as "content" in the  
> admin is just as confusing a "post."  At least we don't have two  
> terms (Drupal = node & content, WP = just post)
>
> -Mike
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp-hackers at striderweb.com  Mon Mar  8 14:02:03 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon, 8 Mar 2010 08:02:03 -0600
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><20BE80F3-9377-466C-8517-AF9F02795687@onolan.org><349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
Message-ID: <43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com>


On Mar 7, 2010, at 6:17 PM, Mike Schinkel wrote:

> You are unnecessarily conflating "has a record in wp_users" with "having registered as a user."  Commenters would not be registered users, they would have a record in the wp_users table, nothing more.

Hmm.  Yup -- I guess I did do that.  I stand corrected.

> The problem with elevation of privilege is that you let them login at all; put multiple checks in place to ensure they can't login then this becomes a non-issue.

> Please address how incorporating multiple checks doesn't resolve the situation?


I guess the risk is the potential for bugs in those checks, or missing a check somewhere.

I remember (a while back - I'm sure things have changed a bit by now) somebody describing the difference between security in Unix vs Windows, and what it came down to was that in Unix, by default a user can do nothing, and the admin adds rights; in Windows by default a user can do *everything* and the admin takes rights away.

When you talk about putting in checks against somebody doing things, it sounds a lot like the "Windows" model above.

So... if we do put commenters in the wp-users table, I want to be sure we do it with a mind toward hardening WP to assume that a given person *can't* do *anything* unless given permission.  Also keep in mind that many plugin are (right or wrong) not coded with security in mind, and again it's best if people can't do things unless explicitly given permission.

Anyway... having said that, I'll drop my objection to putting commenters in wp-users.  You distinction between being in the table and being registered is a good one.

> On Mar 6, 2010, at 11:17 PM, Ptah Dunbar wrote:
>> I raised that issue about core post types not using the show_ui argument so if one decides to remove them, Posts,  Pages, and Media would disappear from the UI.
> 
>> Outside of that, I disagree that the core post types are really that hardcoded into WP; and if so, then that's probably a bug which you should file a new ticket for.
> 
> You are missing the point.  It's not whether or not they are too hardcoded, it's the fact that without being able to remove them few people are ever going to test the edge cases.

I think you argue against yourself.  It should be the default AND it's an "edge case"?  If so many people want to get rid of posts and pages that it should be the default, then surely these will be tested.

Make it possible to remove then via filter?  Great.  Remove them by default?  No.

Ptah is right -- if and where they are hard-coded, those are simply bugs to be fixed.

> Why would you have an issue with them being default canonical plugins?  I can't see any downside to that.

Because we want to keep it very easy for Joe User to put up his blog.  Non techie people don't want to mess with plugins as readily as dev types.

How about a canonical plugin that allows you to manipulate post types -- including removing default ones?

Stephen

From jer at simianuprising.com  Mon Mar  8 16:42:10 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 8 Mar 2010 11:42:10 -0500
Subject: [wp-hackers] Theme dev "cheat sheet" for 3.0 additions/changes?
In-Reply-To: <349fe48b1003041721y2605bc27h331373576ec3c18d@mail.gmail.com>
References: <71ddd7491003041400h77c6b92dkb31cebd26ea4fc41@mail.gmail.com>
	<349fe48b1003041721y2605bc27h331373576ec3c18d@mail.gmail.com>
Message-ID: <e1202cb11003080842u79e7850ds73a1efa8b8906d3a@mail.gmail.com>

Good idea. I plan to write up a blog post about a patch I wrote and
add a link to that wiki article, that would probably be a good idea
for a lot of patches people have gotten committed, as the Trac tickets
(at least mine) tend to become pretty incomprehensible by the time the
functionality is actually in core.

That said, it would be good if we also just added whatever
pages/page-sections are needed to explain the new functionality to the
appropriate parts of the Codex, then we can link to those codex pages
from this 3.0 summary page for explanations.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From enej.bajgoric at gmail.com  Mon Mar  8 19:14:49 2010
From: enej.bajgoric at gmail.com (Enej Bajgoirc)
Date: Mon, 8 Mar 2010 11:14:49 -0800
Subject: [wp-hackers] 404 template loads instead of taxonomy
Message-ID: <E2BE8861-6C25-49B4-AC8A-AAB095BA874C@gmail.com>

Hi 

I am developing a custom theme that is using, the custom taxonomy 


I have this in my functions.php file of the theme.

add_action( 'init', 'phylomon_taxonomies', 0 );
function phylomon_taxonomies() {
	register_taxonomy( 'classification', 'post', array( 'hierarchical' => false, 'label' => 'Classification', 'query_var' => true, 'rewrite' => array( 'slug' => 'classification' )  ) );

}

However the urls that I generate with 
<?php echo get_the_term_list( $post->ID, 'classification',"",", "); ?> 
don't render the taxonomy.php file that I have inside the theme folder. 
instead the 404.php file is used. 

I am not sure if I am missing something. 
When I do something like <?php var_dump($wp_rewrite); ?> I can see that the rewrite rules have been written 
to the wp_rewrite object. 

["extra_rules_top"]=>
  array(4) {
    ["classification/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$"]=>
    string(53) "index.php?classification=$matches[1]&feed=$matches[2]"
    ["classification/([^/]+)/(feed|rdf|rss|rss2|atom)/?$"]=>
    string(53) "index.php?classification=$matches[1]&feed=$matches[2]"
    ["classification/([^/]+)/page/?([0-9]{1,})/?$"]=>
    string(54) "index.php?classification=$matches[1]&paged=$matches[2]"
    ["classification/([^/]+)/?$"]=>
    string(36) "index.php?classification=$matches[1]"
  }
["extra_permastructs"]=>
  array(1) {
    ["classification"]=>
    string(32) "/classification/%classification%"
  }
and it other places as well. I am using wordpress MU 2.9.1 and developing on MAMPs. 
also the contents of my .htaccess file look like this 
RewriteEngine On
RewriteBase /

#uploaded files
RewriteRule ^(.*/)?files/$ index.php [L]
RewriteCond %{REQUEST_URI} !.*wp-content/plugins.*
RewriteRule ^(.*/)?files/(.*) wp-content/blogs.php?file=$2 [L]
RewriteRule ^(.*/)?avatar/(.*) wp-content/avatar.php?file=$2 [L]

# add a trailing slash to /wp-admin
RewriteCond %{REQUEST_URI} ^.*/wp-admin$
RewriteRule ^(.+)$ $1/ [R=301,L]

RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule . - [L]
RewriteRule  ^([_0-9a-zA-Z-]+/)?(wp-.*) $2 [L]
RewriteRule  ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]
RewriteRule . index.php [L]

<IfModule mod_security.c>
<Files async-upload.php>
SecFilterEngine Off
SecFilterScanPOST Off
</Files>
</IfModule>

Any help with this would be greatly appreciated. 

Thanks Enej




From mikeschinkel at newclarity.net  Mon Mar  8 19:45:40 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 8 Mar 2010 14:45:40 -0500
Subject: [wp-hackers] 404 template loads instead of taxonomy
In-Reply-To: <E2BE8861-6C25-49B4-AC8A-AAB095BA874C@gmail.com>
References: <E2BE8861-6C25-49B4-AC8A-AAB095BA874C@gmail.com>
Message-ID: <89E575C7-8592-46FB-9AC5-5125EEA85CF7@newclarity.net>

Hi Enej,

I've been in custom taxonomies all weekend.  I think you need to flush the rules.  

Try going to the Permalinks page and click save after updating, or use this code in your theme after your register taxonomy but don't use that code to run every time except for in a development:

	global $wp_rewrite;
	$wp_rewrite->flush_rules(false);

If you are registering a taxonomy in a plugin you I think this is what you'd do:

function your_activation_func()  {
	global $wp_rewrite;
	$wp_rewrite->flush_rules(false);
}
register_activation_hook(__FILE__, 'your_activation_func');

HTH.

-Mike




On Mar 8, 2010, at 2:14 PM, Enej Bajgoirc wrote:

> Hi 
> 
> I am developing a custom theme that is using, the custom taxonomy 
> 
> 
> I have this in my functions.php file of the theme.
> 
> add_action( 'init', 'phylomon_taxonomies', 0 );
> function phylomon_taxonomies() {
> 	register_taxonomy( 'classification', 'post', array( 'hierarchical' => false, 'label' => 'Classification', 'query_var' => true, 'rewrite' => array( 'slug' => 'classification' )  ) );
> 
> }
> 
> However the urls that I generate with 
> <?php echo get_the_term_list( $post->ID, 'classification',"",", "); ?> 
> don't render the taxonomy.php file that I have inside the theme folder. 
> instead the 404.php file is used. 
> 
> I am not sure if I am missing something. 
> When I do something like <?php var_dump($wp_rewrite); ?> I can see that the rewrite rules have been written 
> to the wp_rewrite object. 
> 
> ["extra_rules_top"]=>
>  array(4) {
>    ["classification/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$"]=>
>    string(53) "index.php?classification=$matches[1]&feed=$matches[2]"
>    ["classification/([^/]+)/(feed|rdf|rss|rss2|atom)/?$"]=>
>    string(53) "index.php?classification=$matches[1]&feed=$matches[2]"
>    ["classification/([^/]+)/page/?([0-9]{1,})/?$"]=>
>    string(54) "index.php?classification=$matches[1]&paged=$matches[2]"
>    ["classification/([^/]+)/?$"]=>
>    string(36) "index.php?classification=$matches[1]"
>  }
> ["extra_permastructs"]=>
>  array(1) {
>    ["classification"]=>
>    string(32) "/classification/%classification%"
>  }
> and it other places as well. I am using wordpress MU 2.9.1 and developing on MAMPs. 
> also the contents of my .htaccess file look like this 
> RewriteEngine On
> RewriteBase /
> 
> #uploaded files
> RewriteRule ^(.*/)?files/$ index.php [L]
> RewriteCond %{REQUEST_URI} !.*wp-content/plugins.*
> RewriteRule ^(.*/)?files/(.*) wp-content/blogs.php?file=$2 [L]
> RewriteRule ^(.*/)?avatar/(.*) wp-content/avatar.php?file=$2 [L]
> 
> # add a trailing slash to /wp-admin
> RewriteCond %{REQUEST_URI} ^.*/wp-admin$
> RewriteRule ^(.+)$ $1/ [R=301,L]
> 
> RewriteCond %{REQUEST_FILENAME} -f [OR]
> RewriteCond %{REQUEST_FILENAME} -d
> RewriteRule . - [L]
> RewriteRule  ^([_0-9a-zA-Z-]+/)?(wp-.*) $2 [L]
> RewriteRule  ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]
> RewriteRule . index.php [L]
> 
> <IfModule mod_security.c>
> <Files async-upload.php>
> SecFilterEngine Off
> SecFilterScanPOST Off
> </Files>
> </IfModule>
> 
> Any help with this would be greatly appreciated. 
> 
> Thanks Enej
> 
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Mon Mar  8 20:30:30 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 8 Mar 2010 15:30:30 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com><20BE80F3-9377-466C-8517-AF9F02795687@onolan.org><349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com>
Message-ID: <CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>

On Mar 8, 2010, at 9:02 AM, Stephen Rider wrote:
>> On Mar 6, 2010, at 11:17 PM, Ptah Dunbar wrote:
>>> I raised that issue about core post types not using the show_ui argument so if one decides to remove them, Posts,  Pages, and Media would disappear from the UI.
>> 
>>> Outside of that, I disagree that the core post types are really that hardcoded into WP; and if so, then that's probably a bug which you should file a new ticket for.
>> 
>> You are missing the point.  It's not whether or not they are too hardcoded, it's the fact that without being able to remove them few people are ever going to test the edge cases.
> 
> I think you argue against yourself.  It should be the default AND it's an "edge case"?  If so many people want to get rid of posts and pages that it should be the default, then surely these will be tested.
> 
> Make it possible to remove then via filter?  Great.  Remove them by default?  No.

I may have either mistyped, or maybe you misread?  I didn't mean to say it should be default; I meant to say it should *not* be default. Removing "post", "page", et. al. should ideally be easy to do so that more people who want to will do it and thus more people will test those edge cases.

> Ptah is right -- if and where they are hard-coded, those are simply bugs to be fixed.

Bugs should be fixed, yes, but they are not likely to be found if its hard to do such that only a small number of people try it.
> 
>> Why would you have an issue with them being default canonical plugins?  I can't see any downside to that.
> 
> Because we want to keep it very easy for Joe User to put up his blog.  Non techie people don't want to mess with plugins as readily as dev types.

I don't see how that's an issue at all here. Canonical plugins could behind the scenes be activated or not during an install.  Posts, Comments, etc. could by default be activated. Podcasting could be deactivated by default. The user experience could be *identical* to what we have today except for the fact WordPress would ship with more plugins than Akismet and Hello Dolly, and some of those would be activated by default.

So I'll ask again, what's the downside?

> How about a canonical plugin that allows you to manipulate post types -- including removing default ones?

Now you're talking! :-)

-Mike

From jer at simianuprising.com  Mon Mar  8 21:53:24 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 8 Mar 2010 16:53:24 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com>
	<CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>
Message-ID: <e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com>

-1 for having records for all commenters in wp_users. Whatever you
guys are thinking could be solved by it should be solved by the
existing option to allow/force registration for comments. If you feel
like you have a reply then please re-read that last sentence, its a
killer.

-100 for moving users into wp_posts, that's insane.

Some added considerations:
 * When you have a lot of authors/editors this situation looks very
different. If you are alone as admin (i.e. Otto and Hikari) then you
are MORE likely to feel comfortable having registered readers because
the table was empty anyway. When you have 300 users in various roles
then the Users system is kludgy enough without also having to account
for thousands and thousands of records for commenters who are likely
to never come back again.
 * The distinction between 'a registration' and 'a record in the users
table' makes sense but I think it involves a distinction that
invalidates the claim that they should live in the same place or are
the same thing. If there is no password, no login name and no
permissions then it is not a user. IMHO for this proposal to be
logically consistent - for commenters to make sense in the users table
- then they must be users! They need to be normal users with a role of
'commenter' as their distinction, not some weird ghosts cluttering up
the wp_users table invisibly. They should show in the normal users
list and be filterable as a role like the other roles. I think
imagining this is enough to give nightmares to admins of sites with
lots of users and commenters, and points out a major flaw in the
proposal.
 * Whatever you guys are thinking could be solved by it should be
solved by the existing option to allow/force registration for
comments. (sorry, I had to reiterate that, its a killer)

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From wp-hackers at striderweb.com  Tue Mar  9 01:16:24 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon, 8 Mar 2010 19:16:24 -0600
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com>
	<CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>
	<e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com>
Message-ID: <EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>


On Mar 8, 2010, at 3:53 PM, Jeremy Clarke wrote:

> -1 for having records for all commenters in wp_users. Whatever you
> guys are thinking could be solved by it should be solved by the
> existing option to allow/force registration for comments. If you feel
> like you have a reply then please re-read that last sentence, its a
> killer.

I tend to agree with this.  It seems that if somebody wanted this they could make a plugin that "auto registers" commenters as a custom User type "commenter".

The ONLY thing I see as a possible advantage to commenters as Users in core is the idea of themes being designed with a page that shows all of a commenter's comments. However, that could be covered with something like a custom template within the plugin, or a.. shortcode maybe?... that could be put into the content of a regular old Page.

From jer at simianuprising.com  Tue Mar  9 01:35:14 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 8 Mar 2010 20:35:14 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com>
	<CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>
	<e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com>
	<EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>
Message-ID: <e1202cb11003081735ydcb4c8ej8fd74b1736255c9c@mail.gmail.com>

On Mon, Mar 8, 2010 at 8:16 PM, Stephen Rider <wp-hackers at striderweb.com> wrote:
> The ONLY thing I see as a possible advantage to commenters as Users in core is the idea of themes being designed with a page that shows all of a commenter's comments. However, that could be covered with something like a custom template within the plugin, or a.. shortcode maybe?... that could be put into the content of a regular old Page.

I might be missing something but I can't think of any reason why the
author.php<-archive.php driven user profile pages couldn't take care
of this inside a theme. Use open registration to register commenters
then use their author page to show their comments.

The only block is the annoying /author/ permalink format that would
need to be overridden with a filter or plugin to be something like
/users/ (an important but seperate issue imho).

Obviously this would be a fairly complicated process but one plugin
could manage it all with a couple of template tags for the author.php
template and some widgets/shortcodes to show the lists of commenters.

What's really missing is a filled out API for managing users in
WordPress. There is no get_users() function and there is no way to say
"fetch users in $x role". This makes a plugin like the one I described
very difficult to produce without writing a lot of low-level logic and
DB queries, but these problems would apply to this proposed system as
well, with the added complications of all the commenter-specific logic
that would need to be added to core.

As has been said what's needed is to tweak the users system to be more
functional and do what needs doing to handle a functional 'commenter'
role, not adding a meta-class outside the roles system specifically
for managing comment authors.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From mikeschinkel at newclarity.net  Tue Mar  9 04:41:24 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 8 Mar 2010 23:41:24 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<20BE80F3-9377-466C-8517-AF9F02795687@onolan.org>
	<349fe48b1003051339m3bc5ccfayb3b7e653b26144bd@mail.gmail.com>
	<B79FD749-1393-4BA1-9140-1DBF120A9A30@newclarity.net>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com>
	<CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>
	<e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com>
	<EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>
Message-ID: <E3F58F8F-6F8E-4425-97D5-4671407050B7@newclarity.net>

On Mar 8, 2010, at 8:16 PM, Stephen Rider wrote:
> The ONLY thing I see as a possible advantage to commenters as Users in core is the idea of themes being designed with a page that shows all of a commenter's comments. However, that could be covered with something like a custom template within the plugin, or a.. shortcode maybe?... that could be put into the content of a regular old Page.

Why I don't like the idea of forcing it to be a plugin is:

1.) As a site developer who depends on (typically commercial) off-the-shelf themes to enable many of the small budget websites I develop, few if any off-the-shelf themes will ever support it something that is relegated to a plugin, and 

2.) As a user of many sites I frequently am frustrated that I can't see more info about someone who is commenting; i.e. what other topics they've commented on, the bio of the more active commenters.  If it's in core there's a much greater chance lots of sites will have the functionality; if it's not in core the death of support for this on the web will continue.

Now if it's a canonical plugin, that's okay too.

On Mar 8, 2010, at 4:53 PM, Jeremy Clarke wrote:
> -100 for moving users into wp_posts, that's insane.

Other than making an unsupported assertion that moving users to posts is insane, you didn't address this proposal.  Is your -100 a kneejerk reaction (which we all do from time to time), or is it based on reasoned analysis?

Actually I'd prefer you to address the proposal of maintaining wp_users for users that are registered and having a record in wp_posts for each user and each commenter with an email address.  After reflection that is what makes most sense to me.

On Mar 8, 2010, at 8:35 PM, Jeremy Clarke wrote:
> Use open registration to register commenters
> then use their author page to show their comments.

What is "open registration?"  Would it be transparent to commenters?

> The only block is the annoying /author/ permalink format that would
> need to be overridden with a filter or plugin to be something like
> /users/ (an important but seperate issue imho).

Agreed.

> Obviously this would be a fairly complicated process...

Agreed again.

> but one plugin could manage it all with a couple of template tags
> for the author.php template and some widgets/shortcodes to show
> the lists of commenters.

Again, my primary reason for wanting a "standard" commenter page is so that more theme authors will start working to beautify them.  A commenter page could have lots going on but if the only way to get one is via a plugin very few free or inexpensive theme options will emerge and then the only way to get good quality designs will be to pay a designer handsomely for it.  Thus the number of potential ideas presented to the public will still be small and a good set of best practices is not likely to emerge.

> What's really missing is a filled out API for managing users in
> WordPress. There is no get_users() function and there is no way to say
> "fetch users in $x role".

I think you've mentioned that before. ;-)

> This makes a plugin like the one I described very difficult to produce
> without writing a lot of low-level logic and DB queries, but these problems
> would apply to this proposed system as well, with the added complications
> of all the commenter-specific logic that would need to be added to core.

What you describe would be a great addition to WordPress.

> As has been said what's needed is to tweak the users system to be more
> functional and do what needs doing to handle a functional 'commenter'
> role, not adding a meta-class outside the roles system specifically
> for managing comment authors.

And I think I agree with that.  

-Mike

From jpotkanski at tribune.com  Tue Mar  9 20:26:00 2010
From: jpotkanski at tribune.com (Potkanski, Jason)
Date: Tue, 9 Mar 2010 14:26:00 -0600
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <E3F58F8F-6F8E-4425-97D5-4671407050B7@newclarity.net>
Message-ID: <C7BC0AF8.1DE7%jpotkanski@tribune.com>


On 3/8/10 10:41 PM, "Mike Schinkel" <mikeschinkel at newclarity.net> wrote:

On Mar 8, 2010, at 4:53 PM, Jeremy Clarke wrote:
> -100 for moving users into wp_posts, that's insane.

Other than making an unsupported assertion that moving users to posts is insane, you didn't address this proposal.  Is your -100 a kneejerk reaction (which we all do from time to time), or is it based on reasoned analysis?

Actually I'd prefer you to address the proposal of maintaining wp_users for users that are registered and having a record in wp_posts for each user and each commenter with an email address.  After reflection that is what makes most sense to me.


In Wordpress MU/MS 3.0, wp_users is a global table, wp_posts is a per blog table. You can not merge wp_users into posts without significant performance problems for MU. Not to mention breaking global permission systems.

-1000, Batshit insane.

To add my two cents to the conversation: I would propose two user tables, a wp_admin_users (Site Admin, Administrator, Editor, Author, etc) and a wp_users table for Subscribers, Commenters, etc. This would help segregate who is important easily (300 admin users versus 100,000 subscribers), API functions like get_admin_users(), etc.

--

Jason Potkanski
Tribune Technology







From mikeschinkel at newclarity.net  Tue Mar  9 21:30:36 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 9 Mar 2010 16:30:36 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <C7BC0AF8.1DE7%jpotkanski@tribune.com>
References: <C7BC0AF8.1DE7%jpotkanski@tribune.com>
Message-ID: <3FEA886F-E4CC-4CE3-AF74-B6C73C3DA9B2@newclarity.net>

On Mar 9, 2010, at 3:26 PM, Potkanski, Jason wrote:
> On 3/8/10 10:41 PM, "Mike Schinkel" <mikeschinkel at newclarity.net> wrote:
> -1000, Batshit insane.

Comments like that are simply not helpful.  "Unworkable" (from your perspective) maybe, but "batshit insane" are just troll words.

> In Wordpress MU/MS 3.0, wp_users is a global table, wp_posts is a per blog table. 

Your reply makes assumptions about the proposal that should not have been assumed.  

I proposed users be mirrored in wp_posts and commenters be maintained wp_posts. While I did not explicitly address WPMU you assumed that the proposal would handle WPMU in ways that would be foolish. There'd be no reason to copy every person in wp_user to every wp_posts table in WPMU; each wp_posts table would only mirror those users from it's respective admin users and commenters.  This would be conceptually identical to how the proposal would relate to multiple (non-WPMU) WordPress instances on a shared server where each instance has its own users even though some of them may be duplicated across instances.

> You can not merge wp_users into posts without significant performance problems for MU.

Unless you were referring to copying all users to all wp_posts tables, which would simply be incompetent, I don't see where what I clarified above would cause any measurable performance problems.  If your point is still not moot, what am I missing something?

> Not to mention breaking global permission systems.

According to the proposal wp_users would continue to be a global permission system; the proposal stated that login and roles would stay within wp_users.  

> To add my two cents to the conversation: I would propose two user tables, a wp_admin_users (Site Admin, Administrator, Editor, Author, etc) and a wp_users table for Subscribers, Commenters, etc.

There is no need for table inflation; no need to create a table and all the functionality that ultimately gets wrapped around a table when we already have the tables we need.

> This would help segregate who is important easily (300 admin users versus 100,000 subscribers),

The above proposal with wp_users and wp_posts addresses.

BTW, who has 100,000 real subscribers?  (just curious)

> API functions like get_admin_users(), etc.


+1, but renamed without the "admin_."

-Mike

From eric at eamann.com  Wed Mar 10 01:53:15 2010
From: eric at eamann.com (Eric Mann)
Date: Tue, 9 Mar 2010 17:53:15 -0800
Subject: [wp-hackers] Facebook Events Integration
Message-ID: <00a101cabff4$741b92d0$5c52b870$@com>

I had a recent request from a client to integrate their WordPress event
calendar (Event Calendar 3 plug-in by Alex Tingle) with Facebook's native
event system.  I've managed to create a server application that will create
an event when you make a request, but it's not working the way I want things
to.

 

The way things should work:

.         User creates an event in WordPress

.         Plug-in automatically posts the information to the Facebook
application

.         Facebook application creates a new event assigned to the user's
Facebook account

 

Ideally, this should all happen behind the scenes.  I've created a system
that will take the posted information and create an event, but I'm running
into a handful of issues with this:

1)      This is the biggie . Even though the user is logged in to Facebook,
WordPress isn't.  So when WP tries to post data to the FB application,
everything fails.  Unfortunately I don't know how to trick the servers into
recognizing one another or how to get WordPress to authenticate as a
Facebook user.  If I can't do that, I can't create the event . any ideas?

2)      I've been using wp_remote_post() to send the information to Facebook
. but I'm not 100% sure I'm using the function correctly, and it's not very
well documented in the source code.  The code I'm using is below . I've
tried to copy the in-source examples of wp_remote_post(), but I know I could
benefit from some additional guidance from those of you with more experience
in cross-server communications.

 

My code:

 

<?php

$array = array( 'start_time_hour' => 10, 'start_time_minute' => 0,
'start_time_month' => 3, 'start_time_day' => 10, 'start_time_year' => 2010,
'end_time_hour' => 11, 'end_time_minute' => 0, 'end_time_month' => 3,
'end_time_day' => 10, 'end_time_year' => 2010, 'category' => 1, 'location'
=> 'My House', 'host' => 'Eric Mann', 'name' => 'Test Meeting Entry');

 

$request = wp_remote_post('http://apps.facebook.com/eventcalendarthree/',
array('method' => 'POST', 'request' => serialize($array)));

if(is_wp_error($request)) {

                echo $request->get_error_message();

}

?>

 

The Facebook application is meant to take this information and call the FB
API directly (with the appropriate api and secret key).  I've tested it by
inputting information directly via $_GET[] (url query strings) and
converting the GET variables into POST variables before parsing . so I know
on the FB side that things are working.  It's the WP side of things where
I'm having issues.

 

I don't know if anyone's handled this particular situation in the past, but
if you have I'd love to hear your take on things.  Ideas?

 

 

Eric Mann

www.eamann.com

 

 


From yahgrp at poplarware.com  Wed Mar 10 02:02:39 2010
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Tue, 09 Mar 2010 18:02:39 -0800
Subject: [wp-hackers] Facebook Events Integration
In-Reply-To: <00a101cabff4$741b92d0$5c52b870$@com>
References: <00a101cabff4$741b92d0$5c52b870$@com>
Message-ID: <4B96FDBF.3000900@poplarware.com>

You probably will need to make a Facebook application in order to do 
things in Facebook from WordPress. There's quite a bit of 
documentation on how to do that, such as their official site:
   http://developers.facebook.com/?ref=pf
Or try Google. There are a ton of tutorials out there.

I'm sure there's some kind of a FB integration WP plugin out there 
that you could look at to get started too?

    --Jennifer

Eric Mann wrote:
> I had a recent request from a client to integrate their WordPress event
> calendar (Event Calendar 3 plug-in by Alex Tingle) with Facebook's native
> event system.  [...]

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming

From eric at eamann.com  Wed Mar 10 02:04:00 2010
From: eric at eamann.com (Eric Mann)
Date: Tue, 9 Mar 2010 18:04:00 -0800
Subject: [wp-hackers] Facebook Events Integration
In-Reply-To: <4B96FDBF.3000900@poplarware.com>
References: <00a101cabff4$741b92d0$5c52b870$@com>
	<4B96FDBF.3000900@poplarware.com>
Message-ID: <00a901cabff5$f4db0e90$de912bb0$@com>

I've already made the Facebook application ... the problem comes when trying
to post data from WordPress TO the Facebook application.  All data must be
posted from a machine with a valid (authenticated) session ID.  I can't
authenticate WordPress as a Facebook user, so while the data is sent,
Facebook will ignore it.

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Jennifer
Hodgdon
Sent: Tuesday, March 09, 2010 6:03 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Facebook Events Integration

You probably will need to make a Facebook application in order to do 
things in Facebook from WordPress. There's quite a bit of 
documentation on how to do that, such as their official site:
   http://developers.facebook.com/?ref=pf
Or try Google. There are a ton of tutorials out there.

I'm sure there's some kind of a FB integration WP plugin out there 
that you could look at to get started too?

    --Jennifer

Eric Mann wrote:
> I had a recent request from a client to integrate their WordPress event
> calendar (Event Calendar 3 plug-in by Alex Tingle) with Facebook's native
> event system.  [...]

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Wed Mar 10 02:03:39 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 9 Mar 2010 21:03:39 -0500
Subject: [wp-hackers] Bug in get_bloginfo('template_url') w/child themes,
	or am I doing it wrong?
Message-ID: <6E6D17A9-B313-4691-8653-7E7B1F5CCD18@newclarity.net>

I'm wondering if there is a bug in get_bloginfo('template_url') with child themes, or am I doing it wrong?

The following code sets $template_url to the parent's URL and not the child theme's URL:

add_action('init', 'tboc_jquery_scripts');
function tboc_jquery_scripts() {
	wp_enqueue_script('jquery');
	$template_url = get_bloginfo('template_url');
	wp_enqueue_script('tboc_scripts',"$template_url/includes/scripts.js",array('jquery'),'1.0',false);
}

Is this a bug or am I doing this wrong?  

Additionally shouldn't there be a way to explicitly reference the parent URL and the child URLs (there probably is, I just don't see it)?

Also, what's the philosophy behind those references in general; when not explicitly specified which should be assumed (parent or child) and how does that keep from causing problems in plugins if the plugins refer to themes but don't know which they are using?

FYI, I was able to override for what I'm working using this but I fear that there are cases where this will fail.

add_action('template_directory_uri', 'tboc_template_directory_uri');
function tboc_template_directory_uri($template) {
	$template = str_replace('/twentyten','/thebusinessof',$template);
	return $template;
}

Thanks for considering these issues.

-Mike

From jdub at bethesignal.org  Wed Mar 10 02:36:18 2010
From: jdub at bethesignal.org (Jeff Waugh)
Date: Wed, 10 Mar 2010 13:36:18 +1100
Subject: [wp-hackers] Bug in get_bloginfo('template_url') w/child themes,
 or am I doing it wrong?
In-Reply-To: <6E6D17A9-B313-4691-8653-7E7B1F5CCD18@newclarity.net>
References: <6E6D17A9-B313-4691-8653-7E7B1F5CCD18@newclarity.net>
Message-ID: <20100310023618.GB4779@sliver>

<quote who="Mike Schinkel">

> I'm wondering if there is a bug in get_bloginfo('template_url') with child
> themes, or am I doing it wrong?

> Is this a bug or am I doing this wrong?  

Very much NOTABUG: you're looking for stylesheet_url, which provides the URL
to the child theme directory. template_url is useful when you have resources
that only make sense as part of the parent template.

- Jeff

-- 
The Great Australian Internet Blackout   http://www.internetblackout.com.au/
 
  "I allege that SCO is full of it, and that the Linux process is already
   the most transparent process in the whole industry." - Linus Torvalds

From glenn at glennansley.com  Wed Mar 10 02:36:40 2010
From: glenn at glennansley.com (Glenn Ansley)
Date: Tue, 9 Mar 2010 21:36:40 -0500
Subject: [wp-hackers] Bug in get_bloginfo('template_url') w/child themes,
	or am I doing it wrong?
In-Reply-To: <6E6D17A9-B313-4691-8653-7E7B1F5CCD18@newclarity.net>
References: <6E6D17A9-B313-4691-8653-7E7B1F5CCD18@newclarity.net>
Message-ID: <7474be391003091836w484c6e12u3e267266b0686754@mail.gmail.com>

I ran into this earlier this week and was pleasantly surprised with
how it works. In general, I've found that template_xxx refers to
parents and stylesheet_xxx refers to children.

add_action('template_redirect','testers',1);
function testers(){
	echo "Parent ".TEMPLATEPATH."<br />";
	echo "Child ".STYLESHEETPATH."<br />";
	echo "Child ".get_bloginfo('stylesheet_directory')."<br />";
	echo "Parent ".get_bloginfo('template_directory')."<br />";	
	echo "Parent ".get_bloginfo('template_url')."<br />";	
	echo "Child ".get_bloginfo('stylesheet_url')."<br />";	
}

Glenn Ansley
http://fullthrottledevelopment.com
http://twitter.com/glennansley

On Tue, Mar 9, 2010 at 9:03 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> I'm wondering if there is a bug in get_bloginfo('template_url') with child themes, or am I doing it wrong?
>
> The following code sets $template_url to the parent's URL and not the child theme's URL:
>
> add_action('init', 'tboc_jquery_scripts');
> function tboc_jquery_scripts() {
> ? ? ? ?wp_enqueue_script('jquery');
> ? ? ? ?$template_url = get_bloginfo('template_url');
> ? ? ? ?wp_enqueue_script('tboc_scripts',"$template_url/includes/scripts.js",array('jquery'),'1.0',false);
> }
>
> Is this a bug or am I doing this wrong?
>
> Additionally shouldn't there be a way to explicitly reference the parent URL and the child URLs (there probably is, I just don't see it)?
>
> Also, what's the philosophy behind those references in general; when not explicitly specified which should be assumed (parent or child) and how does that keep from causing problems in plugins if the plugins refer to themes but don't know which they are using?
>
> FYI, I was able to override for what I'm working using this but I fear that there are cases where this will fail.
>
> add_action('template_directory_uri', 'tboc_template_directory_uri');
> function tboc_template_directory_uri($template) {
> ? ? ? ?$template = str_replace('/twentyten','/thebusinessof',$template);
> ? ? ? ?return $template;
> }
>
> Thanks for considering these issues.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdub at bethesignal.org  Wed Mar 10 02:39:27 2010
From: jdub at bethesignal.org (Jeff Waugh)
Date: Wed, 10 Mar 2010 13:39:27 +1100
Subject: [wp-hackers] Facebook Events Integration
In-Reply-To: <00a901cabff5$f4db0e90$de912bb0$@com>
References: <00a101cabff4$741b92d0$5c52b870$@com>
	<4B96FDBF.3000900@poplarware.com>
	<00a901cabff5$f4db0e90$de912bb0$@com>
Message-ID: <20100310023926.GC4779@sliver>

<quote who="Eric Mann">

> I've already made the Facebook application ... the problem comes when
> trying to post data from WordPress TO the Facebook application.  All data
> must be posted from a machine with a valid (authenticated) session ID.  I
> can't authenticate WordPress as a Facebook user, so while the data is
> sent, Facebook will ignore it.

Have a look at the "Simple Facebook Connect" plugin, which is designed to be
a starting point for connecting WordPress and Facebook (with a few handy API
and integration bits and pieces thrown in).

- Jeff

-- 
The Great Australian Internet Blackout   http://www.internetblackout.com.au/
 
     "Building a Kernel is a requirement for Securing Servers." - Oscar
                                  Plameras

From batmoo at gmail.com  Wed Mar 10 02:40:45 2010
From: batmoo at gmail.com (Mohammad Jangda)
Date: Tue, 9 Mar 2010 21:40:45 -0500
Subject: [wp-hackers] Facebook Events Integration
In-Reply-To: <00a101cabff4$741b92d0$5c52b870$@com>
References: <00a101cabff4$741b92d0$5c52b870$@com>
Message-ID: <eaaa36c91003091840k204392d5vecc35b126b4165f5@mail.gmail.com>

>
> So when WP tries to post data to the FB application, everything fails.
>  Unfortunately I don't know how to trick the servers into recognizing one
> another or how to get WordPress to authenticate as a Facebook user.  If I
> can't do that, I can't create the event. any ideas?


Instead of posting your event data to an application and having it handle
the event creation, you can just use the Official PHP  Library and call
Events.create().

Library:
http://wiki.developers.facebook.com/index.php/PHP#Official_PHP_Client_Library

<http://wiki.developers.facebook.com/index.php/PHP#Official_PHP_Client_Library>
Events.create: http://wiki.developers.facebook.com/index.php/Events.create

If you want the event created on behalf of a user and not an application,
you'll need to get a session key for the user, and best option is through
Facebook Connect.
<http://wiki.developers.facebook.com/index.php/PHP#Official_PHP_Client_Library>
--
Mohammad Jangda
www.digitalize.ca | @mjangda

From mikeschinkel at newclarity.net  Wed Mar 10 03:03:42 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 9 Mar 2010 22:03:42 -0500
Subject: [wp-hackers] Bug in get_bloginfo('template_url') w/child themes,
	or am I doing it wrong?
In-Reply-To: <20100310023618.GB4779@sliver>
References: <6E6D17A9-B313-4691-8653-7E7B1F5CCD18@newclarity.net>
	<20100310023618.GB4779@sliver>
Message-ID: <988CA99C-0819-4844-9505-A4D72C2A51C3@newclarity.net>

On Mar 9, 2010, at 9:36 PM, Jeff Waugh wrote:
> <quote who="Mike Schinkel">
>> I'm wondering if there is a bug in get_bloginfo('template_url') with child
>> themes, or am I doing it wrong?
>> Is this a bug or am I doing this wrong?  
> 
> Very much NOTABUG: you're looking for stylesheet_url, which provides the URL
> to the child theme directory. template_url is useful when you have resources
> that only make sense as part of the parent template.

Thanks, but not need to shout, it was a reasonable question. :)

So I looked at 'stylesheet_url' and it includes "/style.css."   I looked deeper and found get_stylesheet_directory_uri() which is what I need.  It would be nice to have a 'stylesheet_path_url' in get_bloginfo(), no?  (The options in get_bloginfo() provide a roadmap of what's available; having it more complete would be nice.)

Also, does anyone find the term 'stylesheet' to be imply something less than 'child theme?'  I was looking for something like 'child_template_url' and still not sure I would have thought to look for 'stylesheet_url.'   Another potential addition to get_bloginfo()?  

I think I'll suggest both those in trac.

On Mar 9, 2010, at 9:36 PM, Glenn Ansley wrote:
> I ran into this earlier this week and was pleasantly surprised with
> how it works. In general, I've found that template_xxx refers to
> parents and stylesheet_xxx refers to children.
> 
> add_action('template_redirect','testers',1);
> function testers(){
> 	echo "Parent ".TEMPLATEPATH."<br />";
> 	echo "Child ".STYLESHEETPATH."<br />";
> 	echo "Child ".get_bloginfo('stylesheet_directory')."<br />";
> 	echo "Parent ".get_bloginfo('template_directory')."<br />";	
> 	echo "Parent ".get_bloginfo('template_url')."<br />";	
> 	echo "Child ".get_bloginfo('stylesheet_url')."<br />";	
> }

Yes, thanks!

-Mike


From mikeschinkel at newclarity.net  Wed Mar 10 03:07:28 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 9 Mar 2010 22:07:28 -0500
Subject: [wp-hackers] Bug in get_bloginfo('template_url') w/child themes,
	or am I doing it wrong?
In-Reply-To: <988CA99C-0819-4844-9505-A4D72C2A51C3@newclarity.net>
References: <6E6D17A9-B313-4691-8653-7E7B1F5CCD18@newclarity.net>
	<20100310023618.GB4779@sliver>
	<988CA99C-0819-4844-9505-A4D72C2A51C3@newclarity.net>
Message-ID: <3950F7EA-22E9-4DA1-A597-A19A8157A26F@newclarity.net>

On Mar 9, 2010, at 10:03 PM, Mike Schinkel wrote:
> So I looked at 'stylesheet_url' and it includes "/style.css."   I looked deeper and found get_stylesheet_directory_uri() which is what I need.  It would be nice to have a 'stylesheet_path_url' in get_bloginfo(), no?  

Doh, it's already there as 'stylesheet_directory.'

-Mike


From jeremy at visser.name  Wed Mar 10 13:12:12 2010
From: jeremy at visser.name (Jeremy Visser)
Date: Thu, 11 Mar 2010 00:12:12 +1100
Subject: [wp-hackers] Bug in get_bloginfo('template_url') w/child themes,
 or am I doing it wrong?
In-Reply-To: <988CA99C-0819-4844-9505-A4D72C2A51C3@newclarity.net>
References: <6E6D17A9-B313-4691-8653-7E7B1F5CCD18@newclarity.net>	<20100310023618.GB4779@sliver>
	<988CA99C-0819-4844-9505-A4D72C2A51C3@newclarity.net>
Message-ID: <4B979AAC.3000204@visser.name>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 10/03/10 14:03, Mike Schinkel wrote:
>> Very much NOTABUG
> 
> Thanks, but not need to shout, it was a reasonable question. :)

Actually, that's a reference to a bug tracker status. It may be in all
caps, but it isn't shouting. Definitely no shouting would have been
intended from the G.P. :)

Status: CLOSED, INVALID

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)

iEYEARECAAYFAkuXmqwACgkQvs6Qqs8TxBq+1wCg97tAcGdlOPpENHk5941TxtTB
4BcAn2hlhFCuA18qWV0TPopNjC4+WR58
=wxDK
-----END PGP SIGNATURE-----

From otto at ottodestruct.com  Wed Mar 10 16:18:56 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 10 Mar 2010 10:18:56 -0600
Subject: [wp-hackers] Facebook Events Integration
In-Reply-To: <20100310023926.GC4779@sliver>
References: <00a101cabff4$741b92d0$5c52b870$@com>
	<4B96FDBF.3000900@poplarware.com> 
	<00a901cabff5$f4db0e90$de912bb0$@com> <20100310023926.GC4779@sliver>
Message-ID: <161617691003100818m4d651569kf04e48e72001698a@mail.gmail.com>

On Tue, Mar 9, 2010 at 8:39 PM, Jeff Waugh <jdub at bethesignal.org> wrote:
> Have a look at the "Simple Facebook Connect" plugin, which is designed to be
> a starting point for connecting WordPress and Facebook (with a few handy API
> and integration bits and pieces thrown in).

Thanks for the plug. :)

http://wordpress.org/extend/plugins/simple-facebook-connect/


On Tue, Mar 9, 2010 at 7:53 PM, Eric Mann <eric at eamann.com> wrote:
> 1)      This is the biggie . Even though the user is logged in to Facebook,
> WordPress isn't.  So when WP tries to post data to the FB application,
> everything fails.  Unfortunately I don't know how to trick the servers into
> recognizing one another or how to get WordPress to authenticate as a
> Facebook user.  If I can't do that, I can't create the event . any ideas?

You need to get a non-expiring session key from Facebook and store it.
This is a tad complicated, but here's the gist of it:

1. You need to use Facebook Connect javascript code to popup a
permissions dialog to the user somewhere. Specifically, you need the
"offline_access" permission. I have code that does this in the SFC
Publish plugin part of Simple Facebook Connect. In your case you'll
also want the "create_event" permission.

2. When you do this and the user grants that permission, the resulting
login cookie that Facebook sets for that user will now have an
"expire" time of zero. This is your indicator that the Facebook
session key is a permanent one and that you need to save it and the
user value somewhere.  Again, SFC Publish has code that does this on
the Settings page, when the page is saved. You can also do it via AJAX
or something.

3. When you later need to make the request, you use the
set_user($user, $session_key) part of their PHP code. This sets up
your user without having to do all the other stuff, and anyway you
already know that you have a valid and working session key.

> 2)      I've been using wp_remote_post() to send the information to Facebook
> . but I'm not 100% sure I'm using the function correctly, and it's not very
> well documented in the source code.  The code I'm using is below . I've
> tried to copy the in-source examples of wp_remote_post(), but I know I could
> benefit from some additional guidance from those of you with more experience
> in cross-server communications.

Directly posting to Facebook's REST methods is a sucker's game. Do
yourself a favor and simply use their PHP libraries instead. This
tends to "just work" as opposed to rolling your own code.

Also, your example is wrong. You're posting to your application, not
to an API request. Bad way to go.

See here: http://wiki.developers.facebook.com/index.php/Events.create

> The Facebook application is meant to take this information and call the FB
> API directly (with the appropriate api and secret key).

Why not just make the plugin do it directly instead? Redirecting
through an app is pointless. Make the code do it directly with the
app's API key.


-Otto

From ahuja.ankit at gmail.com  Wed Mar 10 17:58:59 2010
From: ahuja.ankit at gmail.com (Ankit Ahuja)
Date: Wed, 10 Mar 2010 23:28:59 +0530
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
Message-ID: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>

What this basically means is being able to take a snapshot of a WP
installation at any particular time and then being able to revert back to it
if something bad happens ( say files are deleted or the blog is hacked )

The snapshot will include the following files:

1. WP Core Files
2. Current theme's files
3. Installed plugins (only the enabled ones)
4. Maybe a content XML ( the one that is produced as part of the Export
process )

This will allow the user to tag a particular version of the entire WP
installation. And then, if something bad happens, the user can simply revert
to a snapshot. The reason to include all of the core and plugin files is
because of the nasty hacks that can introduce code at hard to find places.

Snapshots can also be used when moving blogs to different servers.

Additionally, the user could see a diff of the current status of blog v/s
the last snapshot version. This diff would be at an abstract level for cases
where entire themes/plugins are changed. It will be useful to keep an eye
out for spams/hacks.

This is an idea for a GSoC 2010 project. I would love to know what you think
about it. Thanks!

-Ankit

From justin.shreve at gmail.com  Wed Mar 10 18:25:03 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Wed, 10 Mar 2010 13:25:03 -0500
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>
Message-ID: <a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com>

Sounds pretty interesting.

One of the ideas on the wiki is improve the backup/import system -
this could be a part of it.

Are you applying or just offering some ideas?

On Wednesday, March 10, 2010, Ankit Ahuja <ahuja.ankit at gmail.com> wrote:
> What this basically means is being able to take a snapshot of a WP
> installation at any particular time and then being able to revert back to it
> if something bad happens ( say files are deleted or the blog is hacked )
>
> The snapshot will include the following files:
>
> 1. WP Core Files
> 2. Current theme's files
> 3. Installed plugins (only the enabled ones)
> 4. Maybe a content XML ( the one that is produced as part of the Export
> process )
>
> This will allow the user to tag a particular version of the entire WP
> installation. And then, if something bad happens, the user can simply revert
> to a snapshot. The reason to include all of the core and plugin files is
> because of the nasty hacks that can introduce code at hard to find places.
>
> Snapshots can also be used when moving blogs to different servers.
>
> Additionally, the user could see a diff of the current status of blog v/s
> the last snapshot version. This diff would be at an abstract level for cases
> where entire themes/plugins are changed. It will be useful to keep an eye
> out for spams/hacks.
>
> This is an idea for a GSoC 2010 project. I would love to know what you think
> about it. Thanks!
>
> -Ankit
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ahuja.ankit at gmail.com  Wed Mar 10 18:36:34 2010
From: ahuja.ankit at gmail.com (Ankit Ahuja)
Date: Thu, 11 Mar 2010 00:06:34 +0530
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com> 
	<a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com>
Message-ID: <7e7585311003101036k55901b13y644b3bc20af733da@mail.gmail.com>

I'm applying. I'm trying to think of other possible ideas besides the ones
listed.

Yes, this could definitely include enhancing the import/export functionality
as both are interrelated.

On Wed, Mar 10, 2010 at 11:55 PM, Justin Shreve <justin.shreve at gmail.com>wrote:

> Sounds pretty interesting.
>
> One of the ideas on the wiki is improve the backup/import system -
> this could be a part of it.
>
> Are you applying or just offering some ideas?
>
> On Wednesday, March 10, 2010, Ankit Ahuja <ahuja.ankit at gmail.com> wrote:
> > What this basically means is being able to take a snapshot of a WP
> > installation at any particular time and then being able to revert back to
> it
> > if something bad happens ( say files are deleted or the blog is hacked )
> >
> > The snapshot will include the following files:
> >
> > 1. WP Core Files
> > 2. Current theme's files
> > 3. Installed plugins (only the enabled ones)
> > 4. Maybe a content XML ( the one that is produced as part of the Export
> > process )
> >
> > This will allow the user to tag a particular version of the entire WP
> > installation. And then, if something bad happens, the user can simply
> revert
> > to a snapshot. The reason to include all of the core and plugin files is
> > because of the nasty hacks that can introduce code at hard to find
> places.
> >
> > Snapshots can also be used when moving blogs to different servers.
> >
> > Additionally, the user could see a diff of the current status of blog v/s
> > the last snapshot version. This diff would be at an abstract level for
> cases
> > where entire themes/plugins are changed. It will be useful to keep an eye
> > out for spams/hacks.
> >
> > This is an idea for a GSoC 2010 project. I would love to know what you
> think
> > about it. Thanks!
> >
> > -Ankit
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From justin.shreve at gmail.com  Wed Mar 10 19:08:28 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Wed, 10 Mar 2010 14:08:28 -0500
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <7e7585311003101036k55901b13y644b3bc20af733da@mail.gmail.com>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>
	<a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com>
	<7e7585311003101036k55901b13y644b3bc20af733da@mail.gmail.com>
Message-ID: <a93cee651003101108p44e75556t193a13cb6ec23652@mail.gmail.com>

Here's another idea (that I previously mentioned off-list):

Make sure that there is a filter or hook when a snapshot/backup is made so
people can create plugins to do various things with the backups (create a
plugin to email to a specified list, FTP to a server or upload to a third
party backup service). You could create a example plugin (or two, or three!)
as one of the delieverables of the project (make sure to mention it in your
proposal!).

On Wed, Mar 10, 2010 at 1:36 PM, Ankit Ahuja <ahuja.ankit at gmail.com> wrote:

> I'm applying. I'm trying to think of other possible ideas besides the ones
> listed.
>
> Yes, this could definitely include enhancing the import/export
> functionality
> as both are interrelated.
>
> On Wed, Mar 10, 2010 at 11:55 PM, Justin Shreve <justin.shreve at gmail.com
> >wrote:
>
> > Sounds pretty interesting.
> >
> > One of the ideas on the wiki is improve the backup/import system -
> > this could be a part of it.
> >
> > Are you applying or just offering some ideas?
> >
> > On Wednesday, March 10, 2010, Ankit Ahuja <ahuja.ankit at gmail.com> wrote:
> > > What this basically means is being able to take a snapshot of a WP
> > > installation at any particular time and then being able to revert back
> to
> > it
> > > if something bad happens ( say files are deleted or the blog is hacked
> )
> > >
> > > The snapshot will include the following files:
> > >
> > > 1. WP Core Files
> > > 2. Current theme's files
> > > 3. Installed plugins (only the enabled ones)
> > > 4. Maybe a content XML ( the one that is produced as part of the Export
> > > process )
> > >
> > > This will allow the user to tag a particular version of the entire WP
> > > installation. And then, if something bad happens, the user can simply
> > revert
> > > to a snapshot. The reason to include all of the core and plugin files
> is
> > > because of the nasty hacks that can introduce code at hard to find
> > places.
> > >
> > > Snapshots can also be used when moving blogs to different servers.
> > >
> > > Additionally, the user could see a diff of the current status of blog
> v/s
> > > the last snapshot version. This diff would be at an abstract level for
> > cases
> > > where entire themes/plugins are changed. It will be useful to keep an
> eye
> > > out for spams/hacks.
> > >
> > > This is an idea for a GSoC 2010 project. I would love to know what you
> > think
> > > about it. Thanks!
> > >
> > > -Ankit
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jer at simianuprising.com  Wed Mar 10 19:27:27 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 10 Mar 2010 14:27:27 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <E3F58F8F-6F8E-4425-97D5-4671407050B7@newclarity.net>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<94646CDED2F64BB0AD22C87C59CB78E5@MAIN>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com>
	<CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>
	<e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com>
	<EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>
	<E3F58F8F-6F8E-4425-97D5-4671407050B7@newclarity.net>
Message-ID: <e1202cb11003101127h76824068k61a3d57106bfded3@mail.gmail.com>

FWIW I think this conversation is pretty much over, I'll reply because
I enjoy doing so and because I like everything to be fully explored
but I doubt any of these plans will be implemented. If you don't love
these threads then ignore this response and go find a trac ticket to
read instead http://core.trac.wordpress.org/ ;)

On Mon, Mar 8, 2010 at 11:41 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> Why I don't like the idea of forcing it to be a plugin is:
>
> 1.) As a site developer who depends on (typically commercial) off-the-shelf themes to enable many of the small budget websites I develop, few if any off-the-shelf themes will ever support it something that is relegated to a plugin

You know what few, if any off-the-shelf themes support? author.php
templates. Kubrick never had support for them (if you linked to the
author page in Kubrick it showed the author's posts but with
absolutely no reference to the author in the page title or anywhere
else in the UI) and I think as a result pretty much no themes support
it either, along with the plethora of author info that makes sense to
show there. Bios, homepage links, avatars etc are missing all over the
place, despite having technical support in core. This fact is IMHO
driven by the nature of WordPress as mostly a blogging tool, with most
developers working alone on their sites while they develop themes.

Having commenter profiles just requires that this paradigm change, and
WP be treated as a multi-user (in the actual meaning, not the very
confused meaning that MU took on which has now been rectified by
recasting it as multi-site) platform where author profiles are an
important context. Once a theme has a working author.php with the bio,
avatar, links and posts showing it would be very simple to add a list
of their comments as well, which would obviously be relevant for
actual authors as well as commenters.

> 2.) As a user of many sites I frequently am frustrated that I can't see more info about someone who is commenting; i.e. what other topics they've commented on, the bio of the more active commenters. ?If it's in core there's a much greater chance lots of sites will have the functionality; if it's not in core the death of support for this on the web will continue.

As a user of many sites I frequently am frustrated that I can't see
more info about the person who is *blogging*. User profiles are rarely
linked-to and on most group-blogs (i.e. non-blog websites running WP)
they are non-existent. I think there are probably more sites with
author bios at the bottom of posts than proper author profile pages.
That feature is in core but its being ignored, lets not ignore it any
further by building around it instead of taking advantage of it ;)

> On Mar 8, 2010, at 4:53 PM, Jeremy Clarke wrote:
>> -100 for moving users into wp_posts, that's insane.
>
> Other than making an unsupported assertion that moving users to posts is insane, you didn't address this proposal. ?Is your -100 a kneejerk reaction (which we all do from time to time), or is it based on reasoned analysis?

I was mostly just pointing out that it wasn't a very compelling
argument at all and I didn't feel like refuting it because I don't
think it has any social capital at this point. More specifically, I
think that if there were only two things in the WP database, they
would be content and users. I'd move all of the meta for content,
users, taxonomy etc. into the wp_posts table before I moved the users
there if only on principal. To give one quick reason I'll say that it
would make sharing user DBs across sites a nightmare for those who
want to hack it (and I think that should be a supported hack as much
as possible).

> Actually I'd prefer you to address the proposal of maintaining wp_users for users that are registered and having a record in wp_posts for each user and each commenter with an email address. ?After reflection that is what makes most sense to me.

Less insane but still unnecessary. Currently commenters are not users
by default, but just some metadata attached to the comment. This is
partially an oversight of the original design of WP but it is also a
very practical solution to the problems that would arise for many
sites if all commenters were in the wp_users db. If you want user
records for the commeters and you are comfortable with the
ramifications then ask them to register, if not then let the lite
version do its job.

> On Mar 8, 2010, at 8:35 PM, Jeremy Clarke wrote:
>> Use open registration to register commenters
>> then use their author page to show their comments.
>
> What is "open registration?" ?Would it be transparent to commenters?

By open registration I meant allowing public registration to a
subscriber/commenter role on your site. It could be mandatory or
optional but would provide the various benefits of a user account like
identity control, bio information etc.

If you think that the current system for doing this is clunky then you
should work on improvements to the current system. I'd love it there
was a built-in way to set up your comment form in such a way that it
basically signs people up for accounts by default, without seeing the
admin. That might be plugin territory or not, but there's no reason to
believe that changing the DB structure will improve it inherently.
Regardless of the DB you will need to either live with using a plugin
or convince core that streamlined commenting+registration is a
priority. If you can do that and have time to code it then changing
the DB is unnecessary, your system should just work with the existing
registration system and only on sites with open registration.


-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org

From mujtaba.boori at gmail.com  Wed Mar 10 19:32:11 2010
From: mujtaba.boori at gmail.com (Mujtaba Boori)
Date: Wed, 10 Mar 2010 19:32:11 +0000
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <a93cee651003101108p44e75556t193a13cb6ec23652@mail.gmail.com>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>
	<a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com>
	<7e7585311003101036k55901b13y644b3bc20af733da@mail.gmail.com>
	<a93cee651003101108p44e75556t193a13cb6ec23652@mail.gmail.com>
Message-ID: <7cfa7a6a1003101132n6c227385wa5767da1b6ab0c02@mail.gmail.com>

Hey.

I am interested in doing the export/import as listed in idea list.

However, I have many ways of doing not really sure which one is good.

one way of doing it. take the URL of the WP and verify user/pass then
creates xml file remotely and download it in exported WP

other way, it is to transfer all data without the need for xml. if that
possible.

any suggestion ?


On Wed, Mar 10, 2010 at 7:08 PM, Justin Shreve <justin.shreve at gmail.com>wrote:

> Here's another idea (that I previously mentioned off-list):
>
> Make sure that there is a filter or hook when a snapshot/backup is made so
> people can create plugins to do various things with the backups (create a
> plugin to email to a specified list, FTP to a server or upload to a third
> party backup service). You could create a example plugin (or two, or
> three!)
> as one of the delieverables of the project (make sure to mention it in your
> proposal!).
>
> On Wed, Mar 10, 2010 at 1:36 PM, Ankit Ahuja <ahuja.ankit at gmail.com>
> wrote:
>
> > I'm applying. I'm trying to think of other possible ideas besides the
> ones
> > listed.
> >
> > Yes, this could definitely include enhancing the import/export
> > functionality
> > as both are interrelated.
> >
> > On Wed, Mar 10, 2010 at 11:55 PM, Justin Shreve <justin.shreve at gmail.com
> > >wrote:
> >
> > > Sounds pretty interesting.
> > >
> > > One of the ideas on the wiki is improve the backup/import system -
> > > this could be a part of it.
> > >
> > > Are you applying or just offering some ideas?
> > >
> > > On Wednesday, March 10, 2010, Ankit Ahuja <ahuja.ankit at gmail.com>
> wrote:
> > > > What this basically means is being able to take a snapshot of a WP
> > > > installation at any particular time and then being able to revert
> back
> > to
> > > it
> > > > if something bad happens ( say files are deleted or the blog is
> hacked
> > )
> > > >
> > > > The snapshot will include the following files:
> > > >
> > > > 1. WP Core Files
> > > > 2. Current theme's files
> > > > 3. Installed plugins (only the enabled ones)
> > > > 4. Maybe a content XML ( the one that is produced as part of the
> Export
> > > > process )
> > > >
> > > > This will allow the user to tag a particular version of the entire WP
> > > > installation. And then, if something bad happens, the user can simply
> > > revert
> > > > to a snapshot. The reason to include all of the core and plugin files
> > is
> > > > because of the nasty hacks that can introduce code at hard to find
> > > places.
> > > >
> > > > Snapshots can also be used when moving blogs to different servers.
> > > >
> > > > Additionally, the user could see a diff of the current status of blog
> > v/s
> > > > the last snapshot version. This diff would be at an abstract level
> for
> > > cases
> > > > where entire themes/plugins are changed. It will be useful to keep an
> > eye
> > > > out for spams/hacks.
> > > >
> > > > This is an idea for a GSoC 2010 project. I would love to know what
> you
> > > think
> > > > about it. Thanks!
> > > >
> > > > -Ankit
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Mujtaba Ali Alboori

From justin.shreve at gmail.com  Wed Mar 10 19:40:39 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Wed, 10 Mar 2010 14:40:39 -0500
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <7cfa7a6a1003101132n6c227385wa5767da1b6ab0c02@mail.gmail.com>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>
	<a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com>
	<7e7585311003101036k55901b13y644b3bc20af733da@mail.gmail.com>
	<a93cee651003101108p44e75556t193a13cb6ec23652@mail.gmail.com>
	<7cfa7a6a1003101132n6c227385wa5767da1b6ab0c02@mail.gmail.com>
Message-ID: <a93cee651003101140y32b0d736q7f60870cb1a989e5@mail.gmail.com>

The best way is do use the special export format that WordPress is already
using (XML) otherwise you'd just be doing a database dump.
*Community Information*

City of Kent, Ohio <http://www.kentohio.net/>
The city of Kent is famous for many things such as Kent State University and
the black squirrel. This site shows all the belongings including the Parks &
Recreation, local school district, hotels, lodging, attractions and much
more.

Portage County, Ohio <http://www.co.portage.oh.us/>
The housing spot of Kent where innovation and strength are found in
diversity.

Ohio Government
 <http://ohio.gov/>Keep up to date with Governor Strickland's actions that
impact our state with many positive outcomes.

Kent Area Restaurants <http://www.kentohio.net/eateries/>
Kent has many delicious and fine restaurants around campus.

Kent City Schools <http://www.kentohio.net/education/index.html>**
Kent City Schools (KCS) is a center for great education ranging from
preschools to 12th grade. KCS is rated excellent across the board.

Places of Worship <http://www.kentohio.net/churches/index.html>
Kent has many different congregations for several different denominations.


Parks and Recreation <http://kentohio.net/parks/>
K**ent is home to many beautiful parks and hike & bike trails. Many of the
trails go along the famous Cuyahoga River.

Medical <http://www.robinsonmemorial.org/body.cfm?id=36856>**
Robinson Memorial Hospital has many branches of practice located throughout
the country, one of which is located around Kent. Robinson was rated one of
the best hospitals in North East Ohio in 2008.
 *Ohio Places of Interest*

Discover Ohio

 <http://www.discoverohio.com/home>
Kent Area Culture and History <http://www.kentohiohistory.org/>


Standing Rock Cultural Arts Center <http://www.standingrock.net/>


Akron Area Places of Interest <http://www.comevisitakron.com/>


Akron Theatres<http://www.comevisitakron.com/directory.php?city=Akron&L=L&cat=LiveTheater&catid=14698>


Northeast Ohio Farmers
Markets<http://www.thefarmlandcenter.org/Farmers-Markets-NEOH.htm>


Convention and Visitors Bureau of Greater
Cleveland<http://www.travelcleveland.com/>


Cleveland Institute of Art
Cinematheque<http://www.cia.edu/academicResources/cinematheque/cinematheque.php>


Special Interest
Groups<https://cmsprod.uis.kent.edu/about/administration/provost/fpdc/learning-and-teaching/new-faculty/interest-groups.cfm>

On Wed, Mar 10, 2010 at 2:32 PM, Mujtaba Boori <mujtaba.boori at gmail.com>wrote:

> Hey.
>
> I am interested in doing the export/import as listed in idea list.
>
> However, I have many ways of doing not really sure which one is good.
>
> one way of doing it. take the URL of the WP and verify user/pass then
> creates xml file remotely and download it in exported WP
>
> other way, it is to transfer all data without the need for xml. if that
> possible.
>
> any suggestion ?
>
>
> On Wed, Mar 10, 2010 at 7:08 PM, Justin Shreve <justin.shreve at gmail.com
> >wrote:
>
> > Here's another idea (that I previously mentioned off-list):
> >
> > Make sure that there is a filter or hook when a snapshot/backup is made
> so
> > people can create plugins to do various things with the backups (create a
> > plugin to email to a specified list, FTP to a server or upload to a third
> > party backup service). You could create a example plugin (or two, or
> > three!)
> > as one of the delieverables of the project (make sure to mention it in
> your
> > proposal!).
> >
> > On Wed, Mar 10, 2010 at 1:36 PM, Ankit Ahuja <ahuja.ankit at gmail.com>
> > wrote:
> >
> > > I'm applying. I'm trying to think of other possible ideas besides the
> > ones
> > > listed.
> > >
> > > Yes, this could definitely include enhancing the import/export
> > > functionality
> > > as both are interrelated.
> > >
> > > On Wed, Mar 10, 2010 at 11:55 PM, Justin Shreve <
> justin.shreve at gmail.com
> > > >wrote:
> > >
> > > > Sounds pretty interesting.
> > > >
> > > > One of the ideas on the wiki is improve the backup/import system -
> > > > this could be a part of it.
> > > >
> > > > Are you applying or just offering some ideas?
> > > >
> > > > On Wednesday, March 10, 2010, Ankit Ahuja <ahuja.ankit at gmail.com>
> > wrote:
> > > > > What this basically means is being able to take a snapshot of a WP
> > > > > installation at any particular time and then being able to revert
> > back
> > > to
> > > > it
> > > > > if something bad happens ( say files are deleted or the blog is
> > hacked
> > > )
> > > > >
> > > > > The snapshot will include the following files:
> > > > >
> > > > > 1. WP Core Files
> > > > > 2. Current theme's files
> > > > > 3. Installed plugins (only the enabled ones)
> > > > > 4. Maybe a content XML ( the one that is produced as part of the
> > Export
> > > > > process )
> > > > >
> > > > > This will allow the user to tag a particular version of the entire
> WP
> > > > > installation. And then, if something bad happens, the user can
> simply
> > > > revert
> > > > > to a snapshot. The reason to include all of the core and plugin
> files
> > > is
> > > > > because of the nasty hacks that can introduce code at hard to find
> > > > places.
> > > > >
> > > > > Snapshots can also be used when moving blogs to different servers.
> > > > >
> > > > > Additionally, the user could see a diff of the current status of
> blog
> > > v/s
> > > > > the last snapshot version. This diff would be at an abstract level
> > for
> > > > cases
> > > > > where entire themes/plugins are changed. It will be useful to keep
> an
> > > eye
> > > > > out for spams/hacks.
> > > > >
> > > > > This is an idea for a GSoC 2010 project. I would love to know what
> > you
> > > > think
> > > > > about it. Thanks!
> > > > >
> > > > > -Ankit
> > > > > _______________________________________________
> > > > > wp-hackers mailing list
> > > > > wp-hackers at lists.automattic.com
> > > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > > >
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Mujtaba Ali Alboori
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From justin.shreve at gmail.com  Wed Mar 10 19:43:01 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Wed, 10 Mar 2010 14:43:01 -0500
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <a93cee651003101140y32b0d736q7f60870cb1a989e5@mail.gmail.com>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>
	<a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com>
	<7e7585311003101036k55901b13y644b3bc20af733da@mail.gmail.com>
	<a93cee651003101108p44e75556t193a13cb6ec23652@mail.gmail.com>
	<7cfa7a6a1003101132n6c227385wa5767da1b6ab0c02@mail.gmail.com>
	<a93cee651003101140y32b0d736q7f60870cb1a989e5@mail.gmail.com>
Message-ID: <a93cee651003101143r3f754dfbjd829e67d5860117b@mail.gmail.com>

I am extremely sorry for the second message and it probably looks like spam.
I did not mean to post all that. I meant to copy and paste the following
link and had some information for work on my clipboard instead.

This is the link I meant to include (some additional ideas for
export/import:)

http://wpdevel.wordpress.com/2010/03/02/its-that-time-of-year-again-time-to/comment-page-1/#comment-5156

From ahuja.ankit at gmail.com  Wed Mar 10 19:50:15 2010
From: ahuja.ankit at gmail.com (Ankit Ahuja)
Date: Thu, 11 Mar 2010 01:20:15 +0530
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <a93cee651003101143r3f754dfbjd829e67d5860117b@mail.gmail.com>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com> 
	<a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com> 
	<7e7585311003101036k55901b13y644b3bc20af733da@mail.gmail.com> 
	<a93cee651003101108p44e75556t193a13cb6ec23652@mail.gmail.com> 
	<7cfa7a6a1003101132n6c227385wa5767da1b6ab0c02@mail.gmail.com> 
	<a93cee651003101140y32b0d736q7f60870cb1a989e5@mail.gmail.com> 
	<a93cee651003101143r3f754dfbjd829e67d5860117b@mail.gmail.com>
Message-ID: <7e7585311003101150p73532656t83fdfaebd8caf264@mail.gmail.com>

@Jason Great idea about a hook on creation of a snapshot. That way, third
party services could create their own plugins to make backing up easy. WP
does need a backup solution as part of core.

And I could create an example plugin to show how the hook can be used.



On Thu, Mar 11, 2010 at 1:13 AM, Justin Shreve <justin.shreve at gmail.com>wrote:

> I am extremely sorry for the second message and it probably looks like
> spam.
> I did not mean to post all that. I meant to copy and paste the following
> link and had some information for work on my clipboard instead.
>
> This is the link I meant to include (some additional ideas for
> export/import:)
>
>
> http://wpdevel.wordpress.com/2010/03/02/its-that-time-of-year-again-time-to/comment-page-1/#comment-5156
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Mar 10 19:52:25 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 10 Mar 2010 13:52:25 -0600
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <e1202cb11003101127h76824068k61a3d57106bfded3@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com> 
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com> 
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com> 
	<CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>
	<e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com> 
	<EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>
	<E3F58F8F-6F8E-4425-97D5-4671407050B7@newclarity.net> 
	<e1202cb11003101127h76824068k61a3d57106bfded3@mail.gmail.com>
Message-ID: <161617691003101152m3bcaac8cw3ae0ad279a902c3c@mail.gmail.com>

On Wed, Mar 10, 2010 at 1:27 PM, Jeremy Clarke <jer at simianuprising.com> wrote:
> If you think that the current system for doing this is clunky then you
> should work on improvements to the current system. I'd love it there
> was a built-in way to set up your comment form in such a way that it
> basically signs people up for accounts by default, without seeing the
> admin. That might be plugin territory or not, but there's no reason to
> believe that changing the DB structure will improve it inherently.

It's actually not that hard to do as a plugin.

add_action to pre_comment_on_post. That function looks at the
submitted email value, then calls get_user_by_email to see if the user
has already registered or not. If not, it can add him using
wp_insert_user and the submitted values. Then it will need to call
wp_set_current_user() to make the user "logged in". After that, the
normal comment handling code will automatically fill in the user_ID
field.

Should be no more than, say, 15-20 lines of code.

-Otto

From john.wp at onolan.org  Wed Mar 10 20:20:40 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Wed, 10 Mar 2010 20:20:40 +0000
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <161617691003101152m3bcaac8cw3ae0ad279a902c3c@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>
	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com>
	<CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>
	<e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com>
	<EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>
	<E3F58F8F-6F8E-4425-97D5-4671407050B7@newclarity.net>
	<e1202cb11003101127h76824068k61a3d57106bfded3@mail.gmail.com>
	<161617691003101152m3bcaac8cw3ae0ad279a902c3c@mail.gmail.com>
Message-ID: <8A8FEA29-6EE9-47AA-BA60-3AB9ECAF7CA9@onolan.org>

I'm fairly sure that this argument isn't going to go anywhere now  
until someone actually writes some code, and other people respond to  
it. So we might as well just wait for that to happen.

John




On 10 Mar 2010, at 19:52, Otto wrote:

> On Wed, Mar 10, 2010 at 1:27 PM, Jeremy Clarke  
> <jer at simianuprising.com> wrote:
>> If you think that the current system for doing this is clunky then  
>> you
>> should work on improvements to the current system. I'd love it there
>> was a built-in way to set up your comment form in such a way that it
>> basically signs people up for accounts by default, without seeing the
>> admin. That might be plugin territory or not, but there's no reason  
>> to
>> believe that changing the DB structure will improve it inherently.
>
> It's actually not that hard to do as a plugin.
>
> add_action to pre_comment_on_post. That function looks at the
> submitted email value, then calls get_user_by_email to see if the user
> has already registered or not. If not, it can add him using
> wp_insert_user and the submitted values. Then it will need to call
> wp_set_current_user() to make the user "logged in". After that, the
> normal comment handling code will automatically fill in the user_ID
> field.
>
> Should be no more than, say, 15-20 lines of code.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From info at toscho.de  Wed Mar 10 20:47:27 2010
From: info at toscho.de (Thomas Scholz)
Date: Wed, 10 Mar 2010 21:47:27 +0100
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
 installation
In-Reply-To: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>
Message-ID: <op.u9ddddasr6yny2@perplexifikator.speedport-w-303v-typ-a>

Ankit Ahuja:

> What this basically means is being able to take a snapshot of a WP
> installation at any particular time and then being able to revert back  
> to it
> if something bad happens ( say files are deleted or the blog is hacked )

Sounds good.

> The snapshot will include the following files:
>
> 1. WP Core Files

[?]

> The reason to include all of the core and plugin files is
> because of the nasty hacks that can introduce code at hard to find  
> places.

But why not use <http://wordpress.org/download/release-archive/>?

> 4. Maybe a content XML ( the one that is produced as part of the Export
> process )

Such a backup doesn?t include users without posts. An SQL dump would more  
useful.

Thomas

-- 
http://toscho.de

From justin.shreve at gmail.com  Wed Mar 10 20:49:08 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Wed, 10 Mar 2010 15:49:08 -0500
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <op.u9ddddasr6yny2@perplexifikator.speedport-w-303v-typ-a>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>
	<op.u9ddddasr6yny2@perplexifikator.speedport-w-303v-typ-a>
Message-ID: <a93cee651003101249w392b5a3elf38e19180957691b@mail.gmail.com>

>> Such a backup doesn?t include users without posts. An SQL dump would more
useful.

That could be part of the project - to improve the backup system to do
things such as users without posts and whatever else might be missing

On Wed, Mar 10, 2010 at 3:47 PM, Thomas Scholz <info at toscho.de> wrote:

> Ankit Ahuja:
>
>
>  What this basically means is being able to take a snapshot of a WP
>> installation at any particular time and then being able to revert back to
>> it
>> if something bad happens ( say files are deleted or the blog is hacked )
>>
>
> Sounds good.
>
>
>  The snapshot will include the following files:
>>
>> 1. WP Core Files
>>
>
> [?]
>
>
>  The reason to include all of the core and plugin files is
>> because of the nasty hacks that can introduce code at hard to find places.
>>
>
> But why not use <http://wordpress.org/download/release-archive/>?
>
>
>  4. Maybe a content XML ( the one that is produced as part of the Export
>> process )
>>
>
> Such a backup doesn?t include users without posts. An SQL dump would more
> useful.
>
> Thomas
>
> --
> http://toscho.de
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at andrewnacin.com  Wed Mar 10 23:13:11 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 10 Mar 2010 18:13:11 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <8A8FEA29-6EE9-47AA-BA60-3AB9ECAF7CA9@onolan.org>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com> 
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com> 
	<CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>
	<e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com> 
	<EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>
	<E3F58F8F-6F8E-4425-97D5-4671407050B7@newclarity.net> 
	<e1202cb11003101127h76824068k61a3d57106bfded3@mail.gmail.com> 
	<161617691003101152m3bcaac8cw3ae0ad279a902c3c@mail.gmail.com> 
	<8A8FEA29-6EE9-47AA-BA60-3AB9ECAF7CA9@onolan.org>
Message-ID: <4cc4de141003101513q37bccc70id944fb6dab445220@mail.gmail.com>

On Wed, Mar 10, 2010 at 3:20 PM, John O'Nolan <john.wp at onolan.org> wrote:

> I'm fairly sure that this argument isn't going to go anywhere now until
> someone actually writes some code, and other people respond to it. So we
> might as well just wait for that to happen.
>

In the general sense, +100. Hopefully others notice this comment, as it
applies to just about every wp-hackers thread.

From mikeschinkel at newclarity.net  Wed Mar 10 23:16:02 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 10 Mar 2010 18:16:02 -0500
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <7e7585311003101150p73532656t83fdfaebd8caf264@mail.gmail.com>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com>
	<a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com>
	<7e7585311003101036k55901b13y644b3bc20af733da@mail.gmail.com>
	<a93cee651003101108p44e75556t193a13cb6ec23652@mail.gmail.com>
	<7cfa7a6a1003101132n6c227385wa5767da1b6ab0c02@mail.gmail.com>
	<a93cee651003101140y32b0d736q7f60870cb1a989e5@mail.gmail.com>
	<a93cee651003101143r3f754dfbjd829e67d5860117b@mail.gmail.com>
	<7e7585311003101150p73532656t83fdfaebd8caf264@mail.gmail.com>
Message-ID: <DC1384F4-CD22-43CB-90C9-03EEDB81B159@newclarity.net>

Kudos!  All these are great ideas.    

What would also be nice is if your system encouraged a snapshot to be a collection of discrete divisible snapshots (defined by a tag) so that selected items could be snapshot by themselves and ideally so that someone who has created an entire system snapshot could manually dissect that snapshot and carve out just the piece they may need at the time (especially helpful during new site development to take parts developed from previous sites.)  Having the hooks in plugins would allow each plugin t

Off the top of my head a plugin might do something like this in an activation hook: 

register_snapshot('myeventcal', 'myeventcal_snapshot')
function my eventcal_snapshot($snapshot=null) {
	//... do stuff here to create or update the snapshot
	return $snapshot;
}

Then your system could take the registered subsystems, call the functions to get the snapshots and then generate a serialization format, ideally one people could read and edit. Maybe this would be in XML files or even JSON maybe with each subsystem's serialization stored in a different file which you could then zip up into a single .ZIP file that contains a manifest and/or each file could have identifying information.  

Of course I'm sure it won't work exactly like I describe; one can't know until they starting coding it; but hopefully the ideas make sense?

Doing this would also empower other plugins to use the snapshots too making possible much more elaborate backup and restore, archive, and deployments plugins.

I've been wanting something like this for a while... 

-Mike
P.S. Be sure to follow Postel's Law: http://en.wikipedia.org/wiki/Robustness_principle  A snapshot should be (somewhat) usable even if the site is using a newer version of a plugin.  

On Mar 10, 2010, at 2:50 PM, Ankit Ahuja wrote:

> @Jason Great idea about a hook on creation of a snapshot. That way, third
> party services could create their own plugins to make backing up easy. WP
> does need a backup solution as part of core.
> 
> And I could create an example plugin to show how the hook can be used.
> 
> 
> 
> On Thu, Mar 11, 2010 at 1:13 AM, Justin Shreve <justin.shreve at gmail.com>wrote:
> 
>> I am extremely sorry for the second message and it probably looks like
>> spam.
>> I did not mean to post all that. I meant to copy and paste the following
>> link and had some information for work on my clipboard instead.
>> 
>> This is the link I meant to include (some additional ideas for
>> export/import:)
>> 
>> 
>> http://wpdevel.wordpress.com/2010/03/02/its-that-time-of-year-again-time-to/comment-page-1/#comment-5156
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From dougal at gunters.org  Thu Mar 11 03:12:51 2010
From: dougal at gunters.org (Dougal Campbell)
Date: Wed, 10 Mar 2010 22:12:51 -0500
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <161617691003101152m3bcaac8cw3ae0ad279a902c3c@mail.gmail.com>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com>
	<189D39FB-241D-45BA-8054-3232F67113D9@newclarity.net>	<24DEF06D-FE59-442D-A065-E309D90D96F6@striderweb.com>
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com>
	<CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>	<e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com>
	<EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>	<E3F58F8F-6F8E-4425-97D5-4671407050B7@newclarity.net>
	<e1202cb11003101127h76824068k61a3d57106bfded3@mail.gmail.com>
	<161617691003101152m3bcaac8cw3ae0ad279a902c3c@mail.gmail.com>
Message-ID: <4B985FB3.4090709@gunters.org>

On Mar 10 2010 2:52 PM, Otto wrote:
> On Wed, Mar 10, 2010 at 1:27 PM, Jeremy Clarke<jer at simianuprising.com>  wrote:
>    
>> If you think that the current system for doing this is clunky then you
>> should work on improvements to the current system. I'd love it there
>> was a built-in way to set up your comment form in such a way that it
>> basically signs people up for accounts by default, without seeing the
>> admin. That might be plugin territory or not, but there's no reason to
>> believe that changing the DB structure will improve it inherently.
>>      
> It's actually not that hard to do as a plugin.
>
> add_action to pre_comment_on_post. That function looks at the
> submitted email value, then calls get_user_by_email to see if the user
> has already registered or not. If not, it can add him using
> wp_insert_user and the submitted values. Then it will need to call
> wp_set_current_user() to make the user "logged in". After that, the
> normal comment handling code will automatically fill in the user_ID
> field.
>
> Should be no more than, say, 15-20 lines of code.
>    

Sure, but... What do you do about the password/authentication? Are you 
going to email the user to inform him that he's got an account and give 
him a password? If not, then what happens when he clears his cookies and 
revisits the site? Do you just assume that any shmoe who enters that 
email address is the right person?

And maybe I missed the part where somebody enumerated what the actual 
advantages to such a change might be? Because I just don't see it. What 
problem would we actually be solving by merging commenters into the 
users table? And to repeat what's already been said: and how is this 
problem not already solved by turning on "must register to comment", and 
the existing Subscriber role?

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From otto at ottodestruct.com  Thu Mar 11 15:00:02 2010
From: otto at ottodestruct.com (Otto)
Date: Thu, 11 Mar 2010 09:00:02 -0600
Subject: [wp-hackers] "commenter" user role
In-Reply-To: <4B985FB3.4090709@gunters.org>
References: <349fe48b1003051233q1843b3faj66c4d385513a4883@mail.gmail.com> 
	<6ECE4294-35BF-4BB9-A15F-EB332E1A95CC@newclarity.net>
	<43ABBC80-FE97-43C9-9A41-8DC28FA19FA3@striderweb.com> 
	<CB4FD11B-70EF-4013-BF18-1AE18280E950@newclarity.net>
	<e1202cb11003081353w4ab02c4fr6c55d7df0de9aa28@mail.gmail.com> 
	<EE2B9F54-3748-4EBD-8DF7-A85B4EB42B98@striderweb.com>
	<E3F58F8F-6F8E-4425-97D5-4671407050B7@newclarity.net> 
	<e1202cb11003101127h76824068k61a3d57106bfded3@mail.gmail.com> 
	<161617691003101152m3bcaac8cw3ae0ad279a902c3c@mail.gmail.com> 
	<4B985FB3.4090709@gunters.org>
Message-ID: <161617691003110700r52d19785k8e2611c48dae43e6@mail.gmail.com>

On Wed, Mar 10, 2010 at 9:12 PM, Dougal Campbell <dougal at gunters.org> wrote:
> And maybe I missed the part where somebody enumerated what the actual
> advantages to such a change might be? Because I just don't see it. What
> problem would we actually be solving by merging commenters into the users
> table? And to repeat what's already been said: and how is this problem not
> already solved by turning on "must register to comment", and the existing
> Subscriber role?

I never said it was a good idea. Quite the opposite in fact, as I'm against it.

I was just talking code, that's all. :)

-Otto

From jnachlin at sixapart.com  Thu Mar 11 18:49:00 2010
From: jnachlin at sixapart.com (James Nachlin)
Date: Thu, 11 Mar 2010 13:49:00 -0500
Subject: [wp-hackers] "Plugin could not be activated because it triggered a
 fatal error." But what is the error?
Message-ID: <4B993B1C.2080002@sixapart.com>

Hi WP Hackers,

I am writing my first plugin (pasted below) using WP 2.9.2, PHP 5.2.11, 
Apache/2.2.13 on OS X.  I am accessing WordPress on localhost.

When I attempt to activate the plugin on the Manage Plugins screen of 
the admin, I get "Plugin could not be activated because it triggered a 
fatal error."

How can I view this fatal error?

I have set php.ini to "error_reporting = E_ALL".

I have turned on debug mode in my wp-config.php.

The plugin code is pasted below.  It is trivial, but to get much further 
I must be able to see what my errors are, because surely there will be 
many more of them.

Thanks for your help!

-Jim



$ cat wp-content/plugins/jim-plugin/jim-plugin.php
<?php
/*
Plugin Name: Jim the Plugin
Plugin URI: http://localhost/~jnacho/
Description: This is Jim's first plugin
Version: 0.01
Author: James N
License: GPL2
*/

function widget($args, $instance) {
     //extract( $args );
     $title = apply_filters('Jimz Widget', $instance['title']);
     ?>
         <?php echo $before_widget; ?>
         <?php if( $title ) echo $before_title . $title . $after_title; ?>
         Hello, Widget!
         <?php echo $after_widget ?>
     <?php
}

function stick_on_dashboard() {
     wp_add_dashboard_widget('SomeWidget', 'Some Widget Jim', 'widget');
}

add_action('wp_dashboard_setup', 'stick_on_dashboard' );

?>




From kestrachern at gmail.com  Thu Mar 11 18:51:16 2010
From: kestrachern at gmail.com (Matthew Phillips)
Date: Thu, 11 Mar 2010 13:51:16 -0500
Subject: [wp-hackers] "Plugin could not be activated because it
	triggered a fatal error." But what is the error?
In-Reply-To: <4B993B1C.2080002@sixapart.com>
References: <4B993B1C.2080002@sixapart.com>
Message-ID: <3c932fe31003111051v26af3878u3ffe946bf8095f0@mail.gmail.com>

Is it a forgotten ; in the line
<?php echo $after_widget ?>


-------------------------
http://blip.fm/profile/kestrachern


On Thu, Mar 11, 2010 at 1:49 PM, James Nachlin <jnachlin at sixapart.com>wrote:

> Hi WP Hackers,
>
> I am writing my first plugin (pasted below) using WP 2.9.2, PHP 5.2.11,
> Apache/2.2.13 on OS X.  I am accessing WordPress on localhost.
>
> When I attempt to activate the plugin on the Manage Plugins screen of the
> admin, I get "Plugin could not be activated because it triggered a fatal
> error."
>
> How can I view this fatal error?
>
> I have set php.ini to "error_reporting = E_ALL".
>
> I have turned on debug mode in my wp-config.php.
>
> The plugin code is pasted below.  It is trivial, but to get much further I
> must be able to see what my errors are, because surely there will be many
> more of them.
>
> Thanks for your help!
>
> -Jim
>
>
>
> $ cat wp-content/plugins/jim-plugin/jim-plugin.php
> <?php
> /*
> Plugin Name: Jim the Plugin
> Plugin URI: http://localhost/~jnacho/
> Description: This is Jim's first plugin
> Version: 0.01
> Author: James N
> License: GPL2
> */
>
> function widget($args, $instance) {
>    //extract( $args );
>    $title = apply_filters('Jimz Widget', $instance['title']);
>    ?>
>        <?php echo $before_widget; ?>
>        <?php if( $title ) echo $before_title . $title . $after_title; ?>
>        Hello, Widget!
>        <?php echo $after_widget ?>
>    <?php
> }
>
> function stick_on_dashboard() {
>    wp_add_dashboard_widget('SomeWidget', 'Some Widget Jim', 'widget');
> }
>
> add_action('wp_dashboard_setup', 'stick_on_dashboard' );
>
> ?>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From austin at ilfilosofo.com  Thu Mar 11 18:58:25 2010
From: austin at ilfilosofo.com (Austin Matzko)
Date: Thu, 11 Mar 2010 12:58:25 -0600
Subject: [wp-hackers] "Plugin could not be activated because it
	triggered a fatal error." But what is the error?
In-Reply-To: <4B993B1C.2080002@sixapart.com>
References: <4B993B1C.2080002@sixapart.com>
Message-ID: <674b4a3b1003111058n26dd7744v603b44de5da16e7b@mail.gmail.com>

On Thu, Mar 11, 2010 at 12:49 PM, James Nachlin <jnachlin at sixapart.com> wrote:
> When I attempt to activate the plugin on the Manage Plugins screen of the
> admin, I get "Plugin could not be activated because it triggered a fatal
> error."
>
> How can I view this fatal error?

The simplest way is to delete everything after the plugin data
comment, activate the (empty) plugin, and then paste in the code.  You
should then see a more descriptive error message.

My guess is that you have a space after the closing PHP tag.

Another possibility is that the function "widget" is defined
elsewhere, perhaps by another plugin or theme.  You should consider
using a function name less likely to collide with others'.

From jnachlin at sixapart.com  Thu Mar 11 19:12:06 2010
From: jnachlin at sixapart.com (James Nachlin)
Date: Thu, 11 Mar 2010 14:12:06 -0500
Subject: [wp-hackers] "Plugin could not be activated because it
 triggered a fatal error." But what is the error?
Message-ID: <4B994086.5050305@sixapart.com>

Thanks Matthew and Austin for your answers.

I don't think that the missing semicolon was the [only] problem.

But the larger issue is that the server will have to start reporting 
clear errors.  If this plugin gets more complex, there will be no way to 
scan the entire set of code files looking for an error.

There must be a way that plugin developers view the errors their plugins 
cause.

Thanks again,
Jim

From dan at phiffer.org  Thu Mar 11 19:15:05 2010
From: dan at phiffer.org (Dan Phiffer)
Date: Thu, 11 Mar 2010 14:15:05 -0500
Subject: [wp-hackers] Alternate paging URLs
In-Reply-To: <299C585A-56B9-471A-B048-D0127FAFA198@newclarity.net>
References: <C24432AB-022F-4394-B493-41B36FBFED60@phiffer.org>
	<4B8DF13C.7050104@visser.name>
	<A3CF8768-7550-48C1-9496-B621F5F5225B@phiffer.org>
	<9a39b88d1003030840ia1778c9n3d8cebc4f7b765b5@mail.gmail.com>
	<C0BE5196-0185-4CDC-8B0B-057AE4FA81C2@phiffer.org>
	<349fe48b1003031314x4723cb0fn1456e716692368d@mail.gmail.com>
	<D58B170F-E3DA-40C4-A89F-911D54ABD498@newclarity.net>
	<9a39b88d1003031407r56571061m2b29014e609c6c7@mail.gmail.com>
	<349fe48b1003031443t7f460537s64199aee2316e771@mail.gmail.com>
	<9a39b88d1003031501t48b5cad3ld4b7b6fcf1b094ad@mail.gmail.com>
	<349fe48b1003031515v5da3e2f8jf28020285acda8f0@mail.gmail.com>
	<299C585A-56B9-471A-B048-D0127FAFA198@newclarity.net>
Message-ID: <8E843191-8F19-40C2-9829-729C080CB5F4@phiffer.org>

Hi all,

I managed to implement what I wanted without having to make any changes to core:

http://phiffer.org/?t=2010-03-04-231528
or
http://phiffer.org/photos/?t=2010-02-24-000545

It depends on the "posts_request" filter to augment the query SQL and "the_posts" to determine the newer/older times.

Thanks for all the helpful suggestions.

-Dan


On Mar 4, 2010, at 12:58 AM, Mike Schinkel wrote:

> On Mar 3, 2010, at 6:15 PM, scribu wrote:
>> How (and why) would you change the structure of the pagination URL?
>> 
>> Could you provide a use-case?
> 
> 
> Another use case would be to allow loading via AJAX.  So instead of /foo/page/2/ it could be:
> 
> /foo/#page2 or 
> /foo/#101-120 or 
> /foo/101-120/ (non-AJAX but post ids) 
> 
> It wouldn't be built into core but a plugin should be able to do if it wanted to.
> 
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From dougal at gunters.org  Thu Mar 11 19:19:43 2010
From: dougal at gunters.org (Dougal Campbell)
Date: Thu, 11 Mar 2010 14:19:43 -0500
Subject: [wp-hackers] "Plugin could not be activated because it
 triggered a fatal error." But what is the error?
In-Reply-To: <4B994086.5050305@sixapart.com>
References: <4B994086.5050305@sixapart.com>
Message-ID: <4B99424F.1040007@gunters.org>

On Mar 11 2010 2:12 PM, James Nachlin wrote:
> Thanks Matthew and Austin for your answers.
>
> I don't think that the missing semicolon was the [only] problem.
>
> But the larger issue is that the server will have to start reporting 
> clear errors.  If this plugin gets more complex, there will be no way 
> to scan the entire set of code files looking for an error.
>
> There must be a way that plugin developers view the errors their 
> plugins cause.

Try adding this to your wp-config.php:

   define( 'WP_DEBUG', true );
   define( 'WP_DEBUG_LOG', true );

Then look for the 'debug.log' file in your wp-content directory (which 
must be writable by your server).

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From jnachlin at sixapart.com  Thu Mar 11 19:36:24 2010
From: jnachlin at sixapart.com (James Nachlin)
Date: Thu, 11 Mar 2010 14:36:24 -0500
Subject: [wp-hackers] "Plugin could not be activated because it
 triggered a fatal error." But what is the error?
In-Reply-To: <4B99424F.1040007@gunters.org>
References: <4B994086.5050305@sixapart.com> <4B99424F.1040007@gunters.org>
Message-ID: <4B994638.6060006@sixapart.com>

Thank you Dougal,

I have added those lines to wp-config.php.  I have even restarted the 
httpd.

These are the first two non-comment lines of wp-config.php:
define('WP_DEBUG', true);
define( 'WP_DEBUG_LOG', true );

I do not see a log file in my wp-content/ directory.

Every folder between wp-content/ and / is chmod 777.

Is there some other option, maybe in php.ini, to allow php to write 
files (I am on OS X).

Thanks again,
Jim

Dougal Campbell wrote:
> On Mar 11 2010 2:12 PM, James Nachlin wrote:
>> Thanks Matthew and Austin for your answers.
>>
>> I don't think that the missing semicolon was the [only] problem.
>>
>> But the larger issue is that the server will have to start reporting 
>> clear errors.  If this plugin gets more complex, there will be no way 
>> to scan the entire set of code files looking for an error.
>>
>> There must be a way that plugin developers view the errors their 
>> plugins cause.
> 
> Try adding this to your wp-config.php:
> 
>   define( 'WP_DEBUG', true );
>   define( 'WP_DEBUG_LOG', true );
> 
> Then look for the 'debug.log' file in your wp-content directory (which 
> must be writable by your server).
> 

From jnachlin at sixapart.com  Thu Mar 11 23:35:43 2010
From: jnachlin at sixapart.com (James Nachlin)
Date: Thu, 11 Mar 2010 18:35:43 -0500
Subject: [wp-hackers] "Plugin could not be activated because it
 triggered a fatal error." But what is the error?
In-Reply-To: <4B994638.6060006@sixapart.com>
References: <4B994086.5050305@sixapart.com> <4B99424F.1040007@gunters.org>
	<4B994638.6060006@sixapart.com>
Message-ID: <4B997E4F.2070403@sixapart.com>

I have added a third line, based on looking at wp-settings.php.

define('WP_DEBUG', true);
define( 'WP_DEBUG_LOG', true );
define( 'WP_CONTENT_DIR', '/Users/jnachlin/Sites/wordpress/wp-content/' );

But still no output anywhere from this "fatal error".  If anyone can 
suggest a hack, like some code that preempts the "Plugin could not be 
activated because it triggered a fatal error" message, id be glad to 
hack.  I can always de-hack.

I'm lookin at about line 248 of wp-admin/plugins.php.

Thanks,
Jim

James Nachlin wrote:
> Thank you Dougal,
> 
> I have added those lines to wp-config.php.  I have even restarted the 
> httpd.
> 
> These are the first two non-comment lines of wp-config.php:
> define('WP_DEBUG', true);
> define( 'WP_DEBUG_LOG', true );
> 
> I do not see a log file in my wp-content/ directory.
> 
> Every folder between wp-content/ and / is chmod 777.
> 
> Is there some other option, maybe in php.ini, to allow php to write 
> files (I am on OS X).
> 
> Thanks again,
> Jim
> 
> Dougal Campbell wrote:
>> On Mar 11 2010 2:12 PM, James Nachlin wrote:
>>> Thanks Matthew and Austin for your answers.
>>>
>>> I don't think that the missing semicolon was the [only] problem.
>>>
>>> But the larger issue is that the server will have to start reporting 
>>> clear errors.  If this plugin gets more complex, there will be no way 
>>> to scan the entire set of code files looking for an error.
>>>
>>> There must be a way that plugin developers view the errors their 
>>> plugins cause.
>>
>> Try adding this to your wp-config.php:
>>
>>   define( 'WP_DEBUG', true );
>>   define( 'WP_DEBUG_LOG', true );
>>
>> Then look for the 'debug.log' file in your wp-content directory (which 
>> must be writable by your server).
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From ncrice at gmail.com  Thu Mar 11 23:57:33 2010
From: ncrice at gmail.com (Nathan Rice)
Date: Thu, 11 Mar 2010 18:57:33 -0500
Subject: [wp-hackers] Widget Save hook
Message-ID: <862d087f1003111557r188d2229xa0380b71a4ca3ea2@mail.gmail.com>

Is there a hook that fires whenever a user saves a widget (drags a widget to
a widget area, or clicks the save button in a widget)???

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice

From johnbillion+wp at gmail.com  Fri Mar 12 00:38:23 2010
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 12 Mar 2010 00:38:23 +0000
Subject: [wp-hackers] Widget Save hook
In-Reply-To: <862d087f1003111557r188d2229xa0380b71a4ca3ea2@mail.gmail.com>
References: <862d087f1003111557r188d2229xa0380b71a4ca3ea2@mail.gmail.com>
Message-ID: <1fa535a71003111638t10f5873difb7a4b9985f3dffd@mail.gmail.com>

You can use the update() method of the widget class for this. It's
called whenever the widget is saved, which includes the first time
it's dropped into a sidebar.

See the update() function on http://codex.wordpress.org/Widgets_API .

John.

On Thu, Mar 11, 2010 at 11:57 PM, Nathan Rice <ncrice at gmail.com> wrote:
> Is there a hook that fires whenever a user saves a widget (drags a widget to
> a widget area, or clicks the save button in a widget)???
>
> ------------------
> Nathan Rice
> WordPress and Web Development
> www.nathanrice.net | twitter.com/nathanrice
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Fri Mar 12 00:53:44 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 11 Mar 2010 19:53:44 -0500
Subject: [wp-hackers] Widget Save hook
In-Reply-To: <862d087f1003111557r188d2229xa0380b71a4ca3ea2@mail.gmail.com>
References: <862d087f1003111557r188d2229xa0380b71a4ca3ea2@mail.gmail.com>
Message-ID: <6D30BFEA-B5C1-4589-A2C5-F918F39C515D@newclarity.net>

Depends on what you need.  As John said there's update() method of widget class.

There's 'admin_init' with $_POST['action']='save-widget'

There's 'check_ajax_referer' with an $arg of 'save-sidebar-widgets' (yes, it would be a hack)

Lastly (of note) there's 'widget_update_callback' with the new values as $arg (not sure when else it's called.)

There may be more but that's a start...




On Mar 11, 2010, at 6:57 PM, Nathan Rice wrote:

> Is there a hook that fires whenever a user saves a widget (drags a widget to
> a widget area, or clicks the save button in a widget)???
> 
> ------------------
> Nathan Rice
> WordPress and Web Development
> www.nathanrice.net | twitter.com/nathanrice
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From ahuja.ankit at gmail.com  Fri Mar 12 07:54:02 2010
From: ahuja.ankit at gmail.com (Ankit Ahuja)
Date: Fri, 12 Mar 2010 13:24:02 +0530
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <DC1384F4-CD22-43CB-90C9-03EEDB81B159@newclarity.net>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com> 
	<a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com> 
	<7e7585311003101036k55901b13y644b3bc20af733da@mail.gmail.com> 
	<a93cee651003101108p44e75556t193a13cb6ec23652@mail.gmail.com> 
	<7cfa7a6a1003101132n6c227385wa5767da1b6ab0c02@mail.gmail.com> 
	<a93cee651003101140y32b0d736q7f60870cb1a989e5@mail.gmail.com> 
	<a93cee651003101143r3f754dfbjd829e67d5860117b@mail.gmail.com> 
	<7e7585311003101150p73532656t83fdfaebd8caf264@mail.gmail.com> 
	<DC1384F4-CD22-43CB-90C9-03EEDB81B159@newclarity.net>
Message-ID: <7e7585311003112354p260594bfy43bbd8f0261dbe24@mail.gmail.com>

Thanks for the great ideas!

@Thomas Makes sense to use
http://wordpress.org/download/release-archive/ instead
of maintaining a copy of the core code.

@Mike yes, it's a really good idea to allow the user to be able to choose
which parts of the snapshot they want to revert to. For example, if they
just want to revert just to the snapshot of the core code ( since they've
new installed new plugins and want to keep them ), they should be able to do
that.

Essentially, when taking a snapshot, it will be taken of the entire system.
We already have versioning for content and might have versioning for
templates in the future.

But, it'll be divisible when reverting to one.

What you're also suggesting is that plugins should be able to automatically
take snapshots on updation. A better way might be to allow the user to
schedule automatic snapshots to be taken weekly/monthly. The plugins can
have hooks on when a snapshot is being initialized and when it has been
taken.





On Thu, Mar 11, 2010 at 4:46 AM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> Kudos!  All these are great ideas.
>
> What would also be nice is if your system encouraged a snapshot to be a
> collection of discrete divisible snapshots (defined by a tag) so that
> selected items could be snapshot by themselves and ideally so that someone
> who has created an entire system snapshot could manually dissect that
> snapshot and carve out just the piece they may need at the time (especially
> helpful during new site development to take parts developed from previous
> sites.)  Having the hooks in plugins would allow each plugin t
>
> Off the top of my head a plugin might do something like this in an
> activation hook:
>
> register_snapshot('myeventcal', 'myeventcal_snapshot')
> function my eventcal_snapshot($snapshot=null) {
>        //... do stuff here to create or update the snapshot
>        return $snapshot;
> }
>
> Then your system could take the registered subsystems, call the functions
> to get the snapshots and then generate a serialization format, ideally one
> people could read and edit. Maybe this would be in XML files or even JSON
> maybe with each subsystem's serialization stored in a different file which
> you could then zip up into a single .ZIP file that contains a manifest
> and/or each file could have identifying information.
>
> Of course I'm sure it won't work exactly like I describe; one can't know
> until they starting coding it; but hopefully the ideas make sense?
>
> Doing this would also empower other plugins to use the snapshots too making
> possible much more elaborate backup and restore, archive, and deployments
> plugins.
>
> I've been wanting something like this for a while...
>
> -Mike
> P.S. Be sure to follow Postel's Law:
> http://en.wikipedia.org/wiki/Robustness_principle  A snapshot should be
> (somewhat) usable even if the site is using a newer version of a plugin.
>
> On Mar 10, 2010, at 2:50 PM, Ankit Ahuja wrote:
>
> > @Jason Great idea about a hook on creation of a snapshot. That way, third
> > party services could create their own plugins to make backing up easy. WP
> > does need a backup solution as part of core.
> >
> > And I could create an example plugin to show how the hook can be used.
> >
> >
> >
> > On Thu, Mar 11, 2010 at 1:13 AM, Justin Shreve <justin.shreve at gmail.com
> >wrote:
> >
> >> I am extremely sorry for the second message and it probably looks like
> >> spam.
> >> I did not mean to post all that. I meant to copy and paste the following
> >> link and had some information for work on my clipboard instead.
> >>
> >> This is the link I meant to include (some additional ideas for
> >> export/import:)
> >>
> >>
> >>
> http://wpdevel.wordpress.com/2010/03/02/its-that-time-of-year-again-time-to/comment-page-1/#comment-5156
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wordpress at dd32.id.au  Fri Mar 12 06:58:47 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 12 Mar 2010 18:58:47 +1200
Subject: [wp-hackers] "Plugin could not be activated because it
 triggered a fatal error." But what is the error?
In-Reply-To: <4B997E4F.2070403@sixapart.com>
References: <4B994086.5050305@sixapart.com> <4B99424F.1040007@gunters.org>
	<4B994638.6060006@sixapart.com> <4B997E4F.2070403@sixapart.com>
Message-ID: <op.u9f236spspxmuu@ho.st>

When a plugin's activation is blocked due to a fatal error, The page  
you're redirected to SHOULD have a inline frame after the message which  
will show the error message.

As long as WP_DEBUG is defined, you should be able to see the error..

On Fri, 12 Mar 2010 11:35:43 +1200, James Nachlin <jnachlin at sixapart.com>  
wrote:

> I have added a third line, based on looking at wp-settings.php.
>
> define('WP_DEBUG', true);
> define( 'WP_DEBUG_LOG', true );
> define( 'WP_CONTENT_DIR', '/Users/jnachlin/Sites/wordpress/wp-content/'  
> );
>
> But still no output anywhere from this "fatal error".  If anyone can
> suggest a hack, like some code that preempts the "Plugin could not be
> activated because it triggered a fatal error" message, id be glad to
> hack.  I can always de-hack.
>
> I'm lookin at about line 248 of wp-admin/plugins.php.
>
> Thanks,
> Jim
>
> James Nachlin wrote:
>> Thank you Dougal,
>>
>> I have added those lines to wp-config.php.  I have even restarted the
>> httpd.
>>
>> These are the first two non-comment lines of wp-config.php:
>> define('WP_DEBUG', true);
>> define( 'WP_DEBUG_LOG', true );
>>
>> I do not see a log file in my wp-content/ directory.
>>
>> Every folder between wp-content/ and / is chmod 777.
>>
>> Is there some other option, maybe in php.ini, to allow php to write
>> files (I am on OS X).
>>
>> Thanks again,
>> Jim
>>
>> Dougal Campbell wrote:
>>> On Mar 11 2010 2:12 PM, James Nachlin wrote:
>>>> Thanks Matthew and Austin for your answers.
>>>>
>>>> I don't think that the missing semicolon was the [only] problem.
>>>>
>>>> But the larger issue is that the server will have to start reporting
>>>> clear errors.  If this plugin gets more complex, there will be no way
>>>> to scan the entire set of code files looking for an error.
>>>>
>>>> There must be a way that plugin developers view the errors their
>>>> plugins cause.
>>>
>>> Try adding this to your wp-config.php:
>>>
>>>   define( 'WP_DEBUG', true );
>>>   define( 'WP_DEBUG_LOG', true );
>>>
>>> Then look for the 'debug.log' file in your wp-content directory (which
>>> must be writable by your server).
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

From ahuja.ankit at gmail.com  Fri Mar 12 08:04:08 2010
From: ahuja.ankit at gmail.com (Ankit Ahuja)
Date: Fri, 12 Mar 2010 13:34:08 +0530
Subject: [wp-hackers] [Gsoc Idea] Tagging/Taking a snapshot of WP
	installation
In-Reply-To: <7e7585311003112354p260594bfy43bbd8f0261dbe24@mail.gmail.com>
References: <7e7585311003100958i11fa2162i4716c5f28b614da4@mail.gmail.com> 
	<a93cee651003101025h6c96333euc045a76c9e3fd02c@mail.gmail.com> 
	<7e7585311003101036k55901b13y644b3bc20af733da@mail.gmail.com> 
	<a93cee651003101108p44e75556t193a13cb6ec23652@mail.gmail.com> 
	<7cfa7a6a1003101132n6c227385wa5767da1b6ab0c02@mail.gmail.com> 
	<a93cee651003101140y32b0d736q7f60870cb1a989e5@mail.gmail.com> 
	<a93cee651003101143r3f754dfbjd829e67d5860117b@mail.gmail.com> 
	<7e7585311003101150p73532656t83fdfaebd8caf264@mail.gmail.com> 
	<DC1384F4-CD22-43CB-90C9-03EEDB81B159@newclarity.net>
	<7e7585311003112354p260594bfy43bbd8f0261dbe24@mail.gmail.com>
Message-ID: <7e7585311003120004v6410c57fhd431eeb434c39084@mail.gmail.com>

And yes, it should definitely run across versions of plugins. If the user
has chosen that the snapshot be applied to plugins, it can disable all the
extra plugins (not in the snapshot) and if a newer version of a plugin is
installed, maybe degrade that to the earlier version that exists in the
snapshot.

On Fri, Mar 12, 2010 at 1:24 PM, Ankit Ahuja <ahuja.ankit at gmail.com> wrote:

> Thanks for the great ideas!
>
> @Thomas Makes sense to use http://wordpress.org/download/release-archive/ instead
> of maintaining a copy of the core code.
>
> @Mike yes, it's a really good idea to allow the user to be able to choose
> which parts of the snapshot they want to revert to. For example, if they
> just want to revert just to the snapshot of the core code ( since they've
> new installed new plugins and want to keep them ), they should be able to do
> that.
>
> Essentially, when taking a snapshot, it will be taken of the entire system.
> We already have versioning for content and might have versioning for
> templates in the future.
>
> But, it'll be divisible when reverting to one.
>
> What you're also suggesting is that plugins should be able to automatically
> take snapshots on updation. A better way might be to allow the user to
> schedule automatic snapshots to be taken weekly/monthly. The plugins can
> have hooks on when a snapshot is being initialized and when it has been
> taken.
>
>
>
>
>
> On Thu, Mar 11, 2010 at 4:46 AM, Mike Schinkel <
> mikeschinkel at newclarity.net> wrote:
>
>> Kudos!  All these are great ideas.
>>
>> What would also be nice is if your system encouraged a snapshot to be a
>> collection of discrete divisible snapshots (defined by a tag) so that
>> selected items could be snapshot by themselves and ideally so that someone
>> who has created an entire system snapshot could manually dissect that
>> snapshot and carve out just the piece they may need at the time (especially
>> helpful during new site development to take parts developed from previous
>> sites.)  Having the hooks in plugins would allow each plugin t
>>
>> Off the top of my head a plugin might do something like this in an
>> activation hook:
>>
>> register_snapshot('myeventcal', 'myeventcal_snapshot')
>> function my eventcal_snapshot($snapshot=null) {
>>        //... do stuff here to create or update the snapshot
>>        return $snapshot;
>> }
>>
>> Then your system could take the registered subsystems, call the functions
>> to get the snapshots and then generate a serialization format, ideally one
>> people could read and edit. Maybe this would be in XML files or even JSON
>> maybe with each subsystem's serialization stored in a different file which
>> you could then zip up into a single .ZIP file that contains a manifest
>> and/or each file could have identifying information.
>>
>> Of course I'm sure it won't work exactly like I describe; one can't know
>> until they starting coding it; but hopefully the ideas make sense?
>>
>> Doing this would also empower other plugins to use the snapshots too
>> making possible much more elaborate backup and restore, archive, and
>> deployments plugins.
>>
>> I've been wanting something like this for a while...
>>
>> -Mike
>> P.S. Be sure to follow Postel's Law:
>> http://en.wikipedia.org/wiki/Robustness_principle  A snapshot should be
>> (somewhat) usable even if the site is using a newer version of a plugin.
>>
>> On Mar 10, 2010, at 2:50 PM, Ankit Ahuja wrote:
>>
>> > @Jason Great idea about a hook on creation of a snapshot. That way,
>> third
>> > party services could create their own plugins to make backing up easy.
>> WP
>> > does need a backup solution as part of core.
>> >
>> > And I could create an example plugin to show how the hook can be used.
>> >
>> >
>> >
>> > On Thu, Mar 11, 2010 at 1:13 AM, Justin Shreve <justin.shreve at gmail.com
>> >wrote:
>> >
>> >> I am extremely sorry for the second message and it probably looks like
>> >> spam.
>> >> I did not mean to post all that. I meant to copy and paste the
>> following
>> >> link and had some information for work on my clipboard instead.
>> >>
>> >> This is the link I meant to include (some additional ideas for
>> >> export/import:)
>> >>
>> >>
>> >>
>> http://wpdevel.wordpress.com/2010/03/02/its-that-time-of-year-again-time-to/comment-page-1/#comment-5156
>> >> _______________________________________________
>> >> wp-hackers mailing list
>> >> wp-hackers at lists.automattic.com
>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >>
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From jnachlin at sixapart.com  Fri Mar 12 15:19:06 2010
From: jnachlin at sixapart.com (James Nachlin)
Date: Fri, 12 Mar 2010 10:19:06 -0500
Subject: [wp-hackers] "Plugin could not be activated because it
 triggered a fatal error." But what is the error?
In-Reply-To: <op.u9f236spspxmuu@ho.st>
References: <4B994086.5050305@sixapart.com>
	<4B99424F.1040007@gunters.org>	<4B994638.6060006@sixapart.com>
	<4B997E4F.2070403@sixapart.com> <op.u9f236spspxmuu@ho.st>
Message-ID: <4B9A5B6A.6040903@sixapart.com>

Ok, that's really interesting.

There is an iframe, but it's blank.

The URL of the iframe is 
http://localhost/~jnachlin/wordpress/wp-admin/plugins.php?action=error_scrape&plugin=jim-conversations/jim-conversations.php&_wpnonce=347359ad62

So those arguments are:
action = error_scrape
plugin = jim-conversations/jim-conversations.php
_wpnonce = 347359ad62

I see the space where the error would be, but it's not there.

Thanks to all for the ongoing help.

-Jim

Dion Hulse (dd32) wrote:
> When a plugin's activation is blocked due to a fatal error, The page 
> you're redirected to SHOULD have a inline frame after the message which 
> will show the error message.
> 
> As long as WP_DEBUG is defined, you should be able to see the error..
> 
> On Fri, 12 Mar 2010 11:35:43 +1200, James Nachlin 
> <jnachlin at sixapart.com> wrote:
> 
>> I have added a third line, based on looking at wp-settings.php.
>>
>> define('WP_DEBUG', true);
>> define( 'WP_DEBUG_LOG', true );
>> define( 'WP_CONTENT_DIR', 
>> '/Users/jnachlin/Sites/wordpress/wp-content/' );
>>
>> But still no output anywhere from this "fatal error".  If anyone can
>> suggest a hack, like some code that preempts the "Plugin could not be
>> activated because it triggered a fatal error" message, id be glad to
>> hack.  I can always de-hack.
>>
>> I'm lookin at about line 248 of wp-admin/plugins.php.
>>
>> Thanks,
>> Jim
>>
>> James Nachlin wrote:
>>> Thank you Dougal,
>>>
>>> I have added those lines to wp-config.php.  I have even restarted the
>>> httpd.
>>>
>>> These are the first two non-comment lines of wp-config.php:
>>> define('WP_DEBUG', true);
>>> define( 'WP_DEBUG_LOG', true );
>>>
>>> I do not see a log file in my wp-content/ directory.
>>>
>>> Every folder between wp-content/ and / is chmod 777.
>>>
>>> Is there some other option, maybe in php.ini, to allow php to write
>>> files (I am on OS X).
>>>
>>> Thanks again,
>>> Jim
>>>
>>> Dougal Campbell wrote:
>>>> On Mar 11 2010 2:12 PM, James Nachlin wrote:
>>>>> Thanks Matthew and Austin for your answers.
>>>>>
>>>>> I don't think that the missing semicolon was the [only] problem.
>>>>>
>>>>> But the larger issue is that the server will have to start reporting
>>>>> clear errors.  If this plugin gets more complex, there will be no way
>>>>> to scan the entire set of code files looking for an error.
>>>>>
>>>>> There must be a way that plugin developers view the errors their
>>>>> plugins cause.
>>>>
>>>> Try adding this to your wp-config.php:
>>>>
>>>>   define( 'WP_DEBUG', true );
>>>>   define( 'WP_DEBUG_LOG', true );
>>>>
>>>> Then look for the 'debug.log' file in your wp-content directory (which
>>>> must be writable by your server).
>>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> 
> 

From ncrice at gmail.com  Fri Mar 12 15:27:04 2010
From: ncrice at gmail.com (Nathan Rice)
Date: Fri, 12 Mar 2010 10:27:04 -0500
Subject: [wp-hackers] Widget Save hook
In-Reply-To: <6D30BFEA-B5C1-4589-A2C5-F918F39C515D@newclarity.net>
References: <862d087f1003111557r188d2229xa0380b71a4ca3ea2@mail.gmail.com>
	<6D30BFEA-B5C1-4589-A2C5-F918F39C515D@newclarity.net>
Message-ID: <862d087f1003120727kcc2e3fcq8a622dbd89d89cf9@mail.gmail.com>

The update() method will work for what I need, fortunately. But it would be
nice to have an actual hook that fires every time ANY widget is saved (kind
of like the save_post hook).

anyway, thanks for the info!

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice


On Thu, Mar 11, 2010 at 7:53 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> Depends on what you need.  As John said there's update() method of widget
> class.
>
> There's 'admin_init' with $_POST['action']='save-widget'
>
> There's 'check_ajax_referer' with an $arg of 'save-sidebar-widgets' (yes,
> it would be a hack)
>
> Lastly (of note) there's 'widget_update_callback' with the new values as
> $arg (not sure when else it's called.)
>
> There may be more but that's a start...
>
>
>
>
> On Mar 11, 2010, at 6:57 PM, Nathan Rice wrote:
>
> > Is there a hook that fires whenever a user saves a widget (drags a widget
> to
> > a widget area, or clicks the save button in a widget)???
> >
> > ------------------
> > Nathan Rice
> > WordPress and Web Development
> > www.nathanrice.net | twitter.com/nathanrice
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From bradw at illiams.com  Fri Mar 12 15:31:36 2010
From: bradw at illiams.com (Brad Williams)
Date: Fri, 12 Mar 2010 10:31:36 -0500
Subject: [wp-hackers] Set post thumbnail via code
Message-ID: <007201cac1f9$1a720d20$4f562760$@com>

Is it possible to set a post thumbnail using code?  I've been digging
through the Core process of setting a post thumbnail and it appears the
WPSetAsThumbnail() function (located in set-post-thumbnail.js) is what
actually creates/assigns the thumbnail, but I wasn't sure if this could be
called directly?

 

Has anyone tried this?

 

-Brad

@williamsba

 

 


From glenn at glennansley.com  Fri Mar 12 15:41:30 2010
From: glenn at glennansley.com (Glenn Ansley)
Date: Fri, 12 Mar 2010 10:41:30 -0500
Subject: [wp-hackers] Set post thumbnail via code
In-Reply-To: <007201cac1f9$1a720d20$4f562760$@com>
References: <007201cac1f9$1a720d20$4f562760$@com>
Message-ID: <7474be391003120741o6305184ayd3d5d0c45ba177cd@mail.gmail.com>

Do you need something more than this:
update_post_meta( $post_id, '_thumbnail_id', $thumbnail_id );

I got that from /wp-admin/admin-ajax.php L1413 on trunk (several revisions
back though).

Glenn Ansley
http://fullthrottledevelopment.com
http://twitter.com/glennansley

On Fri, Mar 12, 2010 at 10:31 AM, Brad Williams <bradw at illiams.com> wrote:

> Is it possible to set a post thumbnail using code?  I've been digging
> through the Core process of setting a post thumbnail and it appears the
> WPSetAsThumbnail() function (located in set-post-thumbnail.js) is what
> actually creates/assigns the thumbnail, but I wasn't sure if this could be
> called directly?
>
>
>
> Has anyone tried this?
>
>
>
> -Brad
>
> @williamsba
>
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From bradw at illiams.com  Fri Mar 12 15:54:01 2010
From: bradw at illiams.com (Brad Williams)
Date: Fri, 12 Mar 2010 10:54:01 -0500
Subject: [wp-hackers] Set post thumbnail via code
In-Reply-To: <7474be391003120741o6305184ayd3d5d0c45ba177cd@mail.gmail.com>
References: <007201cac1f9$1a720d20$4f562760$@com>
	<7474be391003120741o6305184ayd3d5d0c45ba177cd@mail.gmail.com>
Message-ID: <008801cac1fc$3ce720e0$b6b562a0$@com>

Well that couldn't have been easier.  Thanks Glenn!

-Brad

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Glenn Ansley
Sent: Friday, March 12, 2010 10:42 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Set post thumbnail via code

Do you need something more than this:
update_post_meta( $post_id, '_thumbnail_id', $thumbnail_id );

I got that from /wp-admin/admin-ajax.php L1413 on trunk (several revisions
back though).

Glenn Ansley
http://fullthrottledevelopment.com
http://twitter.com/glennansley

On Fri, Mar 12, 2010 at 10:31 AM, Brad Williams <bradw at illiams.com> wrote:

> Is it possible to set a post thumbnail using code?  I've been digging
> through the Core process of setting a post thumbnail and it appears the
> WPSetAsThumbnail() function (located in set-post-thumbnail.js) is what
> actually creates/assigns the thumbnail, but I wasn't sure if this could be
> called directly?
>
>
>
> Has anyone tried this?
>
>
>
> -Brad
>
> @williamsba
>
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers



From otto at ottodestruct.com  Fri Mar 12 16:26:37 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 12 Mar 2010 10:26:37 -0600
Subject: [wp-hackers] "Plugin could not be activated because it
	triggered a fatal error." But what is the error?
In-Reply-To: <4B9A5B6A.6040903@sixapart.com>
References: <4B994086.5050305@sixapart.com> <4B99424F.1040007@gunters.org> 
	<4B994638.6060006@sixapart.com> <4B997E4F.2070403@sixapart.com> 
	<op.u9f236spspxmuu@ho.st> <4B9A5B6A.6040903@sixapart.com>
Message-ID: <161617691003120826w73929635ydcd3316c9283666f@mail.gmail.com>

The error_scrape thing basically turns on the "display_errors" PHP
setting and then tries to run the page with the plugin activated. This
would show you the fatal error.

However, some hosting systems don't let you turn on display_errors. In
which case, of course, you get nothing.

Only fix: Figure out why your system won't let you turn on
display_errors. There's no other way to get the error message.

-Otto



On Fri, Mar 12, 2010 at 9:19 AM, James Nachlin <jnachlin at sixapart.com> wrote:
> Ok, that's really interesting.
>
> There is an iframe, but it's blank.
>
> The URL of the iframe is
> http://localhost/~jnachlin/wordpress/wp-admin/plugins.php?action=error_scrape&plugin=jim-conversations/jim-conversations.php&_wpnonce=347359ad62
>
> So those arguments are:
> action = error_scrape
> plugin = jim-conversations/jim-conversations.php
> _wpnonce = 347359ad62
>
> I see the space where the error would be, but it's not there.
>
> Thanks to all for the ongoing help.
>
> -Jim
>
> Dion Hulse (dd32) wrote:
>>
>> When a plugin's activation is blocked due to a fatal error, The page
>> you're redirected to SHOULD have a inline frame after the message which will
>> show the error message.
>>
>> As long as WP_DEBUG is defined, you should be able to see the error..
>>
>> On Fri, 12 Mar 2010 11:35:43 +1200, James Nachlin <jnachlin at sixapart.com>
>> wrote:
>>
>>> I have added a third line, based on looking at wp-settings.php.
>>>
>>> define('WP_DEBUG', true);
>>> define( 'WP_DEBUG_LOG', true );
>>> define( 'WP_CONTENT_DIR', '/Users/jnachlin/Sites/wordpress/wp-content/'
>>> );
>>>
>>> But still no output anywhere from this "fatal error". ?If anyone can
>>> suggest a hack, like some code that preempts the "Plugin could not be
>>> activated because it triggered a fatal error" message, id be glad to
>>> hack. ?I can always de-hack.
>>>
>>> I'm lookin at about line 248 of wp-admin/plugins.php.
>>>
>>> Thanks,
>>> Jim
>>>
>>> James Nachlin wrote:
>>>>
>>>> Thank you Dougal,
>>>>
>>>> I have added those lines to wp-config.php. ?I have even restarted the
>>>> httpd.
>>>>
>>>> These are the first two non-comment lines of wp-config.php:
>>>> define('WP_DEBUG', true);
>>>> define( 'WP_DEBUG_LOG', true );
>>>>
>>>> I do not see a log file in my wp-content/ directory.
>>>>
>>>> Every folder between wp-content/ and / is chmod 777.
>>>>
>>>> Is there some other option, maybe in php.ini, to allow php to write
>>>> files (I am on OS X).
>>>>
>>>> Thanks again,
>>>> Jim
>>>>
>>>> Dougal Campbell wrote:
>>>>>
>>>>> On Mar 11 2010 2:12 PM, James Nachlin wrote:
>>>>>>
>>>>>> Thanks Matthew and Austin for your answers.
>>>>>>
>>>>>> I don't think that the missing semicolon was the [only] problem.
>>>>>>
>>>>>> But the larger issue is that the server will have to start reporting
>>>>>> clear errors. ?If this plugin gets more complex, there will be no way
>>>>>> to scan the entire set of code files looking for an error.
>>>>>>
>>>>>> There must be a way that plugin developers view the errors their
>>>>>> plugins cause.
>>>>>
>>>>> Try adding this to your wp-config.php:
>>>>>
>>>>> ?define( 'WP_DEBUG', true );
>>>>> ?define( 'WP_DEBUG_LOG', true );
>>>>>
>>>>> Then look for the 'debug.log' file in your wp-content directory (which
>>>>> must be writable by your server).
>>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Fri Mar 12 16:31:41 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 12 Mar 2010 10:31:41 -0600
Subject: [wp-hackers] Widget Save hook
In-Reply-To: <862d087f1003120727kcc2e3fcq8a622dbd89d89cf9@mail.gmail.com>
References: <862d087f1003111557r188d2229xa0380b71a4ca3ea2@mail.gmail.com> 
	<6D30BFEA-B5C1-4589-A2C5-F918F39C515D@newclarity.net>
	<862d087f1003120727kcc2e3fcq8a622dbd89d89cf9@mail.gmail.com>
Message-ID: <161617691003120831l23b600e4v957a02feed56a308@mail.gmail.com>

On Fri, Mar 12, 2010 at 9:27 AM, Nathan Rice <ncrice at gmail.com> wrote:
> The update() method will work for what I need, fortunately. But it would be
> nice to have an actual hook that fires every time ANY widget is saved (kind
> of like the save_post hook).

There is. widget_update_callback. It's a filter hook which gets called
to filter the widget settings before they get saved.

Be careful with it. You can hork things up royal here.

-Otto

From wp at andrewnacin.com  Fri Mar 12 16:46:22 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 12 Mar 2010 11:46:22 -0500
Subject: [wp-hackers] "Plugin could not be activated because it
	triggered a fatal error." But what is the error?
In-Reply-To: <161617691003120826w73929635ydcd3316c9283666f@mail.gmail.com>
References: <4B994086.5050305@sixapart.com> <4B99424F.1040007@gunters.org> 
	<4B994638.6060006@sixapart.com> <4B997E4F.2070403@sixapart.com> 
	<op.u9f236spspxmuu@ho.st> <4B9A5B6A.6040903@sixapart.com> 
	<161617691003120826w73929635ydcd3316c9283666f@mail.gmail.com>
Message-ID: <4cc4de141003120846td0747cq958ca80c8b9f3d89@mail.gmail.com>

James mentioned to me he was running 2.9.2. I've looked into this further,
and the issue appears to be that we only started including E_COMPILE_ERROR
in default error reporting (including the plugin activation sandbox) in 3.0.
Additionally, we previously overrode the error reporting level set up via
WP_DEBUG in the sandbox. (In 3.0, we account for WP_DEBUG.) Thus, my guess
is you have another plugin that is defining widget(), which throws the
apparently unreported Zend error.

From jnachlin at sixapart.com  Fri Mar 12 18:01:44 2010
From: jnachlin at sixapart.com (James Nachlin)
Date: Fri, 12 Mar 2010 13:01:44 -0500
Subject: [wp-hackers] "Plugin could not be activated because
 it	triggered a fatal error." But what is the error?
In-Reply-To: <4cc4de141003120846td0747cq958ca80c8b9f3d89@mail.gmail.com>
References: <4B994086.5050305@sixapart.com> <4B99424F.1040007@gunters.org>
	<4B994638.6060006@sixapart.com> <4B997E4F.2070403@sixapart.com>
	<op.u9f236spspxmuu@ho.st> <4B9A5B6A.6040903@sixapart.com>
	<161617691003120826w73929635ydcd3316c9283666f@mail.gmail.com>
	<4cc4de141003120846td0747cq958ca80c8b9f3d89@mail.gmail.com>
Message-ID: <4B9A8188.4080709@sixapart.com>

Yes.  I in fact do have another plugin defining widget()!  Renaming my 
functions made the error go away.

I think Otto is right.  The process dies right in plugins.php, at

include(WP_PLUGIN_DIR . '/' . $plugin);

The previous line's ini_set is not having the effect of turning on the 
display of the errors, in the case of a name collision between two 
function names in two different plugins.

If I fix that problem, I can activate the plugin.  If I deactivate the 
plugin, then intentionally add a new error to my plugin, I see the error 
in the iframe as I should.

Thanks again,
Jim

Andrew Nacin wrote:
> James mentioned to me he was running 2.9.2. I've looked into this further,
> and the issue appears to be that we only started including E_COMPILE_ERROR
> in default error reporting (including the plugin activation sandbox) in 3.0.
> Additionally, we previously overrode the error reporting level set up via
> WP_DEBUG in the sandbox. (In 3.0, we account for WP_DEBUG.) Thus, my guess
> is you have another plugin that is defining widget(), which throws the
> apparently unreported Zend error.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From wp at andrewnacin.com  Fri Mar 12 18:15:22 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 12 Mar 2010 13:15:22 -0500
Subject: [wp-hackers] "Plugin could not be activated because it
	triggered a fatal error." But what is the error?
In-Reply-To: <4B9A8188.4080709@sixapart.com>
References: <4B994086.5050305@sixapart.com> <4B99424F.1040007@gunters.org> 
	<4B994638.6060006@sixapart.com> <4B997E4F.2070403@sixapart.com> 
	<op.u9f236spspxmuu@ho.st> <4B9A5B6A.6040903@sixapart.com> 
	<161617691003120826w73929635ydcd3316c9283666f@mail.gmail.com> 
	<4cc4de141003120846td0747cq958ca80c8b9f3d89@mail.gmail.com> 
	<4B9A8188.4080709@sixapart.com>
Message-ID: <4cc4de141003121015u1ad99522u29a3712539fda8bb@mail.gmail.com>

Otto is right in that "some hosting systems don't let you turn on
display_errors."

Beyond that, it's exactly what I suspected. Re-declaring a plugin throws an
E_COMPILE_ERROR, which in 2.9 we do not account for. (Thus, if you have two
active plugins defining the same function, you'll get a white screen of
death.)

A few lines above the include and ini_set, there's an error_reporting()
call. Add E_COMPILE_ERROR in there and you'll see your fatal error.

We're probably going to backport the E_COMPILE_ERROR check to 2.9. This is
fixed in 3.0.

As a general reminder, always give your plugin functions a unique prefix (or
wrap them in a class). And don't forget that your own plugins should play
nice with one another as well.

On Fri, Mar 12, 2010 at 1:01 PM, James Nachlin <jnachlin at sixapart.com>wrote:

> Yes.  I in fact do have another plugin defining widget()!  Renaming my
> functions made the error go away.
>
> I think Otto is right.  The process dies right in plugins.php, at
>
> include(WP_PLUGIN_DIR . '/' . $plugin);
>
> The previous line's ini_set is not having the effect of turning on the
> display of the errors, in the case of a name collision between two function
> names in two different plugins.
>
> If I fix that problem, I can activate the plugin.  If I deactivate the
> plugin, then intentionally add a new error to my plugin, I see the error in
> the iframe as I should.
>
> Thanks again,
> Jim
>
> Andrew Nacin wrote:
>
>> James mentioned to me he was running 2.9.2. I've looked into this further,
>> and the issue appears to be that we only started including E_COMPILE_ERROR
>> in default error reporting (including the plugin activation sandbox) in
>> 3.0.
>> Additionally, we previously overrode the error reporting level set up via
>> WP_DEBUG in the sandbox. (In 3.0, we account for WP_DEBUG.) Thus, my guess
>> is you have another plugin that is defining widget(), which throws the
>> apparently unreported Zend error.
>>
>

From otto at ottodestruct.com  Fri Mar 12 19:36:36 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 12 Mar 2010 13:36:36 -0600
Subject: [wp-hackers] "Plugin could not be activated because it
	triggered a fatal error." But what is the error?
In-Reply-To: <4cc4de141003121015u1ad99522u29a3712539fda8bb@mail.gmail.com>
References: <4B994086.5050305@sixapart.com> <4B99424F.1040007@gunters.org> 
	<4B994638.6060006@sixapart.com> <4B997E4F.2070403@sixapart.com> 
	<op.u9f236spspxmuu@ho.st> <4B9A5B6A.6040903@sixapart.com> 
	<161617691003120826w73929635ydcd3316c9283666f@mail.gmail.com> 
	<4cc4de141003120846td0747cq958ca80c8b9f3d89@mail.gmail.com> 
	<4B9A8188.4080709@sixapart.com>
	<4cc4de141003121015u1ad99522u29a3712539fda8bb@mail.gmail.com>
Message-ID: <161617691003121136k7b06ca99n3a91774a2b9d36f8@mail.gmail.com>

On Fri, Mar 12, 2010 at 12:15 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
> Beyond that, it's exactly what I suspected. Re-declaring a plugin throws an
> E_COMPILE_ERROR, which in 2.9 we do not account for. (Thus, if you have two
> active plugins defining the same function, you'll get a white screen of
> death.)

Yep.

3.0 patched this here:
http://core.trac.wordpress.org/ticket/12395

-Otto

From wordpress at santosj.name  Fri Mar 12 20:45:59 2010
From: wordpress at santosj.name (Jacob Santos)
Date: Fri, 12 Mar 2010 14:45:59 -0600
Subject: [wp-hackers] "Plugin could not be activated because it
 triggered a fatal error." But what is the error?
Message-ID: <4B9AA807.4070702@santosj.name>

I think the bigger fail is that the functions weren't namespaced. Naming 
a function or class simply "Widget" is asking for a fail.

Namespacing a function or class for PHP <5.3 is putting a name and then 
using an underscore. You'd put this for every function, class, variable 
you have.

Examples:

function myfunc_widget();

class Myname_Widget { }

Jacob Santos

PS This line does not have an error <?php echo $string ?>, because PHP 
will automatically terminate the line if it is missing a semicolon.

From mikeschinkel at newclarity.net  Fri Mar 12 21:28:29 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 12 Mar 2010 16:28:29 -0500
Subject: [wp-hackers] EE vs. WordPress - Apples & Oranges
Message-ID: <9D3FC30A-2808-4344-8EF5-5E0378296957@newclarity.net>

Some of you might be interested in reading this "comparison" article that is clearly biased against WordPress and in favor of EE (from self professed "ExpressionEngine Addict" http://marcusneto.com/):

http://www.webdesignerdepot.com/2010/03/wordpress-vs-expressionengine-apples-and-oranges/

FWIW.

-Mike

From john.wp at onolan.org  Fri Mar 12 21:33:07 2010
From: john.wp at onolan.org (John O'Nolan)
Date: Fri, 12 Mar 2010 21:33:07 +0000
Subject: [wp-hackers] EE vs. WordPress - Apples & Oranges
In-Reply-To: <9D3FC30A-2808-4344-8EF5-5E0378296957@newclarity.net>
References: <9D3FC30A-2808-4344-8EF5-5E0378296957@newclarity.net>
Message-ID: <272132FF-D0BA-43C4-9986-9C3B9FA99226@onolan.org>

Yeah I saw that - ridiculous article. Might've been vaguely accurate 4  
months ago - but it certainly isn't with WP3.0 coming up, which the  
author clearly has no clue about!

John



On 12 Mar 2010, at 21:28, Mike Schinkel wrote:

> Some of you might be interested in reading this "comparison" article  
> that is clearly biased against WordPress and in favor of EE (from  
> self professed "ExpressionEngine Addict" http://marcusneto.com/):
>
> http://www.webdesignerdepot.com/2010/03/wordpress-vs-expressionengine-apples-and-oranges/
>
> FWIW.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From timberge at cs.tu-berlin.de  Fri Mar 12 21:44:07 2010
From: timberge at cs.tu-berlin.de (Tim Berger)
Date: Fri, 12 Mar 2010 22:44:07 +0100
Subject: [wp-hackers] Permalink behavior with a feed name = sub category slug
Message-ID: <4B9AB5A7.809@cs.tu-berlin.de>

Hello,

I have in my blog a custom feed which has the same name as a sub
category (resp. the category slug) of my blog. Both having the name/slug
"podcast" for example. Further I'm using the permalink structure "Day
and name" of WP.

The feed address would be http://undeuxoutrois.de/wp/feed/podcast
This works as expected.

But when I like to see the category view of the category "podcast" which
is in this example a sub category of the "oberkategorie" I use the URL
http://undeuxoutrois.de/wp/category/oberkategorie/podcast .
But I end up always seeing the custom feed content.

I could use http://undeuxoutrois.de/wp/category/podcast to see the
category view of the category podcast. That works. But e.g. the category
widget of the WP uses the longer link above.

Is it not allowed to have a feed named like a sub category slug?
Is this a bug of WP?

I'm using WP 2.9.2 for this blog and my .htacces file has only the
following standard lines:

# BEGIN WordPress
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /wp/
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /wp/index.php [L]
</IfModule>
# END WordPress

Regards,
Tim
(http://profiles.wordpress.org/ntm)



From uwiuw at yahoo.com.sg  Fri Mar 12 22:36:26 2010
From: uwiuw at yahoo.com.sg (Uwiuw Bakawan.com)
Date: Fri, 12 Mar 2010 14:36:26 -0800 (PST)
Subject: [wp-hackers] howto delete category via administrator panel
Message-ID: <699199.68726.qm@web45307.mail.sp1.yahoo.com>

hi, I have problem when i have to create some custom solution. What i need to accomplish is some simple feature where every time user delete a category from administrator panel, then every posts (and all its meta field) and its child category also get delete a long with the parent pos.

Right now in wordpress, (i believe its 2.9.2 version), every time a category get deleted then its ID get erase. But its child category and its post will not. The child and the post only got their terms and depth level changes.

i have try 'delete_category' and 'delete_term' but it's only return the ID of deleted category.

Is there any hook to get this id before it get delete or at least got the cache of its former child category ID ?


      New Email names for you! 
Get the Email name you&#39;ve always wanted on the new @ymail and @rocketmail. 
Hurry before someone else does!
http://mail.promotions.yahoo.com/newdomains/sg/

From scribu at gmail.com  Fri Mar 12 22:53:28 2010
From: scribu at gmail.com (scribu)
Date: Sat, 13 Mar 2010 00:53:28 +0200
Subject: [wp-hackers] howto delete category via administrator panel
In-Reply-To: <699199.68726.qm@web45307.mail.sp1.yahoo.com>
References: <699199.68726.qm@web45307.mail.sp1.yahoo.com>
Message-ID: <349fe48b1003121453q361102c8vd1c870eec0470bbb@mail.gmail.com>

On Sat, Mar 13, 2010 at 12:36 AM, Uwiuw Bakawan.com <uwiuw at yahoo.com.sg>wrote:

> i have try 'delete_category' and 'delete_term' but it's only return the ID
> of deleted category.
>
> Is there any hook to get this id before it get delete or at least got the
> cache of its former child category ID ?
>

The child category references the parent category, not the other way around.
So all you need is the term_taxonomy_id.

See the wp_term_taxonomy.parent column.


-- 
http://scribu.net

From uwiuw at yahoo.com.sg  Fri Mar 12 23:32:31 2010
From: uwiuw at yahoo.com.sg (Uwiuw Bakawan.com)
Date: Fri, 12 Mar 2010 15:32:31 -0800 (PST)
Subject: [wp-hackers] howto delete category via administrator panel
In-Reply-To: <349fe48b1003121453q361102c8vd1c870eec0470bbb@mail.gmail.com>
Message-ID: <284642.68261.qm@web45313.mail.sp1.yahoo.com>

 
i'm sorry i put wrong information. in my previous email, i mention about post. What i meant is about delete category via dashboard >> categories

so, about the term_taxonomy_id, should i 
1. retrieve the delete category ID value from 'init' 
2. took it child category id via get_category such as

foreach ( get_category() as $category ) {
      if ( $category->parent == $delete_parent_cat_ID ) {
               //do the job here
      }
}


3. delete all of its child category post then delete the child 

is there any better approach then this ? 

On Sat, 13/3/10, scribu <scribu at gmail.com> wrote:

> From: scribu <scribu at gmail.com>
> Subject: Re: [wp-hackers] howto delete category via administrator panel
> To: wp-hackers at lists.automattic.com
> Date: Saturday, 13 March, 2010, 6:53 AM
> On Sat, Mar 13, 2010 at 12:36 AM,
> Uwiuw Bakawan.com <uwiuw at yahoo.com.sg>wrote:
> 
> > i have try 'delete_category' and 'delete_term' but
> it's only return the ID
> > of deleted category.
> >
> > Is there any hook to get this id before it get delete
> or at least got the
> > cache of its former child category ID ?
> >
> 
> The child category references the parent category, not the
> other way around.
> So all you need is the term_taxonomy_id.
> 
> See the wp_term_taxonomy.parent column.
> 
> 
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


      New Email names for you! 
Get the Email name you&#39;ve always wanted on the new @ymail and @rocketmail. 
Hurry before someone else does!
http://mail.promotions.yahoo.com/newdomains/sg/

From awgandrews at gmail.com  Fri Mar 12 23:57:40 2010
From: awgandrews at gmail.com (Alex Andrews)
Date: Fri, 12 Mar 2010 23:57:40 +0000
Subject: [wp-hackers] EE vs. WordPress - Apples & Oranges
In-Reply-To: <272132FF-D0BA-43C4-9986-9C3B9FA99226@onolan.org>
References: <9D3FC30A-2808-4344-8EF5-5E0378296957@newclarity.net>
	<272132FF-D0BA-43C4-9986-9C3B9FA99226@onolan.org>
Message-ID: <0243406E-D3B6-4C6E-B028-3E6FB4A6B369@gmail.com>

+1 yeah ridiculous.

On 12 Mar 2010, at 21:33, John O'Nolan <john.wp at onolan.org> wrote:

> Yeah I saw that - ridiculous article. Might've been vaguely accurate  
> 4 months ago - but it certainly isn't with WP3.0 coming up, which  
> the author clearly has no clue about!
>
> John
>
>
>
> On 12 Mar 2010, at 21:28, Mike Schinkel wrote:
>
>> Some of you might be interested in reading this "comparison"  
>> article that is clearly biased against WordPress and in favor of EE  
>> (from self professed "ExpressionEngine Addict" http:// 
>> marcusneto.com/):
>>
>> http://www.webdesignerdepot.com/2010/03/wordpress-vs-expressionengine-apples-and-oranges/
>>
>> FWIW.
>>
>> -Mike
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From johnbillion+wp at gmail.com  Sat Mar 13 00:47:56 2010
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Sat, 13 Mar 2010 00:47:56 +0000
Subject: [wp-hackers] EE vs. WordPress - Apples & Oranges
In-Reply-To: <0243406E-D3B6-4C6E-B028-3E6FB4A6B369@gmail.com>
References: <9D3FC30A-2808-4344-8EF5-5E0378296957@newclarity.net>
	<272132FF-D0BA-43C4-9986-9C3B9FA99226@onolan.org>
	<0243406E-D3B6-4C6E-B028-3E6FB4A6B369@gmail.com>
Message-ID: <1fa535a71003121647m4281c177h6380994e67d75041@mail.gmail.com>

That's a very weak article with no tangible arguments for or against
either CMS. It's just linkbait.

On Fri, Mar 12, 2010 at 11:57 PM, Alex Andrews <awgandrews at gmail.com> wrote:
> +1 yeah ridiculous.
>
> On 12 Mar 2010, at 21:33, John O'Nolan <john.wp at onolan.org> wrote:
>
>> Yeah I saw that - ridiculous article. Might've been vaguely accurate 4
>> months ago - but it certainly isn't with WP3.0 coming up, which the author
>> clearly has no clue about!
>>
>> John
>>
>>
>>
>> On 12 Mar 2010, at 21:28, Mike Schinkel wrote:
>>
>>> Some of you might be interested in reading this "comparison" article that
>>> is clearly biased against WordPress and in favor of EE (from self professed
>>> "ExpressionEngine Addict" http://marcusneto.com/):
>>>
>>>
>>> http://www.webdesignerdepot.com/2010/03/wordpress-vs-expressionengine-apples-and-oranges/
>>>
>>> FWIW.
>>>
>>> -Mike
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From info at toscho.de  Sat Mar 13 01:06:02 2010
From: info at toscho.de (Thomas Scholz)
Date: Sat, 13 Mar 2010 02:06:02 +0100
Subject: [wp-hackers] Custom taxonomies for authors
Message-ID: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>


Hello,

I just create a website for cat breeders. Every breeder I created as an  
author, and for most of the meta data I used custom contact fields:

function toscho_contact_fields($originals)
{
	return array(
		'street'	=> 'Stra?e',
		'plz'		=> 'Postleitzahl',
		'ort'		=> 'Ort',
		'land'		=> 'Land',
		'zwinger'	=> 'Zwinger',
		'phone'		=> 'Telefon',
		'mnumber'	=> 'Mitgliedsnummer'
	);
}
add_filter('user_contactmethods', 'toscho_contact_fields');

Now, however, I am confronted with a problem that I can not solve with  
contact fields: Each member breeds cats in very specific colors. The  
visitor should be able to get a list of all breeders with a color of his  
choice.

'usermeta' isn?t made for n:n-relationships. I?d rather use something like  
this:

register_taxonomy(
	'color',
	'user',
	array(
		'hierarchical'	=> false,
		'label'			=> 'Color',
		'query_var'		=> 'color',
		'rewrite'		=> array('slug' => 'color')
	)
);

But it doesn?t show any visible result (and I didn?t really expect it to  
do).

What would be the best way to implement this functionality?

Regards
Thomas

-- 
http://toscho.de

From chris at clwill.com  Sat Mar 13 02:32:39 2010
From: chris at clwill.com (Chris Williams)
Date: Fri, 12 Mar 2010 21:32:39 -0500
Subject: [wp-hackers] EE vs. WordPress - Apples & Oranges
In-Reply-To: <1fa535a71003121647m4281c177h6380994e67d75041@mail.gmail.com>
Message-ID: <C7C03947.5C169%chris@clwill.com>

And we all bit :)

________________________________
From: John Blackbourn <johnbillion+wp at gmail.com>
Subject: Re: [wp-hackers] EE vs. WordPress - Apples & Oranges

That's a very weak article with no tangible arguments for or against
either CMS. It's just linkbait.

From scribu at gmail.com  Sat Mar 13 06:35:17 2010
From: scribu at gmail.com (scribu)
Date: Sat, 13 Mar 2010 08:35:17 +0200
Subject: [wp-hackers] howto delete category via administrator panel
In-Reply-To: <284642.68261.qm@web45313.mail.sp1.yahoo.com>
References: <349fe48b1003121453q361102c8vd1c870eec0470bbb@mail.gmail.com>
	<284642.68261.qm@web45313.mail.sp1.yahoo.com>
Message-ID: <349fe48b1003122235y623564b0g1d6daa68a3f66022@mail.gmail.com>

On Sat, Mar 13, 2010 at 1:32 AM, Uwiuw Bakawan.com <uwiuw at yahoo.com.sg>wrote:

>
> i'm sorry i put wrong information. in my previous email, i mention about
> post. What i meant is about delete category via dashboard >> categories
>
> so, about the term_taxonomy_id, should i
> 1. retrieve the delete category ID value from 'init'
> 2. took it child category id via get_category such as
>
> foreach ( get_category() as $category ) {
>      if ( $category->parent == $delete_parent_cat_ID ) {
>               //do the job here
>      }
> }
>
>
> 3. delete all of its child category post then delete the child
>
> is there any better approach then this ?
>

It would be better if you could hook into
wp_delete_term()<http://xref.yoast.com/2.9.1/nav.html?_functions/wp_delete_term.html>,
but I'm not sure you have the appropriate actions.


-- 
http://scribu.net

From scribu at gmail.com  Sat Mar 13 06:48:48 2010
From: scribu at gmail.com (scribu)
Date: Sat, 13 Mar 2010 08:48:48 +0200
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
Message-ID: <349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>

On Sat, Mar 13, 2010 at 3:06 AM, Thomas Scholz <info at toscho.de> wrote:

> 'usermeta' isn?t made for n:n-relationships. I?d rather use something like
> this:
>
> register_taxonomy(
>        'color',
>        'user',
>        array(
>                'hierarchical'  => false,
>                'label'                 => 'Color',
>                'query_var'             => 'color',
>                'rewrite'               => array('slug' => 'color')
>        )
> );
>
> But it doesn?t show any visible result (and I didn?t really expect it to
> do).
>
> What would be the best way to implement this functionality?
>

The second argument should be 'post' instead of 'user'.

What you really need is a 3 way relationship: post-color-user.


From wordpress at dd32.id.au  Sat Mar 13 06:57:20 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sat, 13 Mar 2010 18:57:20 +1200
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>
Message-ID: <op.u9hxpuwbspxmuu@ho.st>

On Sat, 13 Mar 2010 18:48:48 +1200, scribu <scribu at gmail.com> wrote:

> On Sat, Mar 13, 2010 at 3:06 AM, Thomas Scholz <info at toscho.de> wrote:
>
>> 'usermeta' isn?t made for n:n-relationships. I?d rather use something  
>> like
>> this:
>>
>> register_taxonomy(
>>        'color',
>>        'user',
>>        array(
>>                'hierarchical'  => false,
>>                'label'                 => 'Color',
>>                'query_var'             => 'color',
>>                'rewrite'               => array('slug' => 'color')
>>        )
>> );
>>
>> But it doesn?t show any visible result (and I didn?t really expect it to
>> do).
>>
>> What would be the best way to implement this functionality?
>>
>
> The second argument should be 'post' instead of 'user'.
>
> What you really need is a 3 way relationship: post-color-user.
>
> From a database perspective, this can be done by adding a user_id column  
> to
> the wp_term_relationships table.
>
> It would involve some custom both on the admin side and on the front-end.

Personally i don't think creating it as a post taxonomy is what is needed  
here.

Thomas, I think the taxonomy way you are going about is the best method.
As you can see, The taxonomy data is not shown to you however, since  
WordPress doesnt handle taxonomies being applied to users.

You can visit /wp-admin/edit-tags.php?taxonomy=color directly and you'll  
be able to manage the Colours there.

You'll need to manually add a dropdown selection to the user edit page  
however based off that taxonomy data, you'd probably have to hook into  
'show_user_profile' & 'edit_user_profile' to add a new Table and table  
row, as well as saving that data manually through the action which fires  
when user data is updated...



Dion Hulse / dd32

Contact:
   e: contact at dd32.id.au
   msn: msn at d32.id.au
   skype: theonly_dd32
   Web: http://dd32.id.au/

From wordpress at dd32.id.au  Sat Mar 13 07:01:36 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sat, 13 Mar 2010 19:01:36 +1200
Subject: [wp-hackers] Permalink behavior with a feed name = sub category
 slug
In-Reply-To: <4B9AB5A7.809@cs.tu-berlin.de>
References: <4B9AB5A7.809@cs.tu-berlin.de>
Message-ID: <op.u9hxwyf5spxmuu@ho.st>

On Sat, 13 Mar 2010 09:44:07 +1200, Tim Berger <timberge at cs.tu-berlin.de>  
wrote:
> The feed address would be http://undeuxoutrois.de/wp/feed/podcast
> This works as expected.
>
> But when I like to see the category view of the category "podcast" which
> is in this example a sub category of the "oberkategorie" I use the URL
> http://undeuxoutrois.de/wp/category/oberkategorie/podcast .
> But I end up always seeing the custom feed content.

This is an unfortunate & rare use-case.. WordPress supports  
URL/<feed_type>/ url's as well as URL/feed/<feed_type>/, and as you've  
found out, the first takes higher priority over looking for <feed_type> as  
a category.

My only real suggestion to you would be to change the 'podcast' slug to  
something else such as 'podcasts' (You can change the Slug and the Name  
seperately, it only affects the URL).

It would be possible to filter the Rewrite rules and remove the rules  
which add the functionality if you were desperate enough for it to work  
like that..

Dion Hulse / dd32

Contact:
   e: contact at dd32.id.au
   msn: msn at d32.id.au
   skype: theonly_dd32
   Web: http://dd32.id.au/

From mikeschinkel at newclarity.net  Sat Mar 13 08:13:39 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 13 Mar 2010 03:13:39 -0500
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <op.u9hxpuwbspxmuu@ho.st>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>
	<op.u9hxpuwbspxmuu@ho.st>
Message-ID: <0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>

On Mar 13, 2010, at 1:57 AM, Dion Hulse (dd32) wrote:

> On Sat, 13 Mar 2010 18:48:48 +1200, scribu <scribu at gmail.com> wrote:
> 
>> On Sat, Mar 13, 2010 at 3:06 AM, Thomas Scholz <info at toscho.de> wrote:
>> 
>>> 'usermeta' isn?t made for n:n-relationships. I?d rather use something like
>>> this:
>>> 
>>> register_taxonomy(
>>>       'color',
>>>       'user',
>>>       array(
>>>               'hierarchical'  => false,
>>>               'label'                 => 'Color',
>>>               'query_var'             => 'color',
>>>               'rewrite'               => array('slug' => 'color')
>>>       )
>>> );
>>> 
>>> But it doesn?t show any visible result (and I didn?t really expect it to
>>> do).
>>> 
>>> What would be the best way to implement this functionality?
>>> 
>> 
>> The second argument should be 'post' instead of 'user'.
>> 
>> What you really need is a 3 way relationship: post-color-user.
>> 
>> From a database perspective, this can be done by adding a user_id column to
>> the wp_term_relationships table.
>> 
>> It would involve some custom both on the admin side and on the front-end.
> 
> Personally i don't think creating it as a post taxonomy is what is needed here.
> 
> Thomas, I think the taxonomy way you are going about is the best method.
> As you can see, The taxonomy data is not shown to you however, since WordPress doesnt handle taxonomies being applied to users.
> 
> You can visit /wp-admin/edit-tags.php?taxonomy=color directly and you'll be able to manage the Colours there.
> 
> You'll need to manually add a dropdown selection to the user edit page however based off that taxonomy data, you'd probably have to hook into 'show_user_profile' & 'edit_user_profile' to add a new Table and table row, as well as saving that data manually through the action which fires when user data is updated...

At this risk of inciting a backlash, doesn't this give one good use-case (and I have many others of my own) why it would be a good idea to have users (and commenters) as a standard "person" post type, at least via a canonical plugin if not in core?

-Mike

From wordpress at dd32.id.au  Sat Mar 13 07:33:01 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sat, 13 Mar 2010 19:33:01 +1200
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>
	<op.u9hxpuwbspxmuu@ho.st>
	<0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>
Message-ID: <op.u9hzdbgyspxmuu@ho.st>

On Sat, 13 Mar 2010 20:13:39 +1200, Mike Schinkel  
<mikeschinkel at newclarity.net> wrote:
> On Mar 13, 2010, at 1:57 AM, Dion Hulse (dd32) wrote:
>> Personally i don't think creating it as a post taxonomy is what is  
>> needed here.
>>
>> Thomas, I think the taxonomy way you are going about is the best method.
>> As you can see, The taxonomy data is not shown to you however, since  
>> WordPress doesnt handle taxonomies being applied to users.
>>
>> You can visit /wp-admin/edit-tags.php?taxonomy=color directly and  
>> you'll be able to manage the Colours there.
>>
>> You'll need to manually add a dropdown selection to the user edit page  
>> however based off that taxonomy data, you'd probably have to hook into  
>> 'show_user_profile' & 'edit_user_profile' to add a new Table and table  
>> row, as well as saving that data manually through the action which  
>> fires when user data is updated...
>
> At this risk of inciting a backlash, doesn't this give one good use-case  
> (and I have many others of my own) why it would be a good idea to have  
> users (and commenters) as a standard "person" post type, at least via a  
> canonical plugin if not in core?

I dont quite get that, In reality, Users are a first class object, same as  
post_types (Which have children of posts, pages, attachments, revisions,  
etc), same as comments..
What benefit would making users a post_Type (Even if as a linked object)?

The only thing i would agree with, Is that Taxonomy UI's should be applied  
to user management pages (when the tax is registered for 'users' of  
course)..


Dion Hulse / dd32

Contact:
  e: contact at dd32.id.au
  msn: msn at d32.id.au
  skype: theonly_dd32
  Web: http://dd32.id.au/

From mikeschinkel at newclarity.net  Sat Mar 13 08:51:39 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 13 Mar 2010 03:51:39 -0500
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <op.u9hzdbgyspxmuu@ho.st>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>
	<op.u9hxpuwbspxmuu@ho.st>
	<0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>
	<op.u9hzdbgyspxmuu@ho.st>
Message-ID: <1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>

On Mar 13, 2010, at 2:33 AM, Dion Hulse (dd32) wrote:
>> At this risk of inciting a backlash, doesn't this give one good use-case (and I have many others of my own) why it would be a good idea to have users (and commenters) as a standard "person" post type, at least via a canonical plugin if not in core?
> 
> I dont quite get that, In reality, Users are a first class object, same as post_types (Which have children of posts, pages, attachments, revisions, etc), same as comments..
> What benefit would making users a post_Type (Even if as a linked object)?

From an earlier post [1] to this list I was advocating for considering creating a custom post type for anything where even a few of the following add value for the use case: 

-- Having a title/body editor for the item has value 
-- Having status workflow for the item has value 
-- Having visibility control for the item has value 
-- Having visibility control for the item has value 
-- Having revisions for the item would be valuable 
-- Having trash/delete management for the item would be valuable 
-- Having ability to schedule publish date/time would be valuable 
-- Having a web page of content about the item would be valuable 
-- Having ability to define a template for the content page would be valuable 
-- Having ability to set another content type as a parent of the item would be valuable 
-- Having ability to reference the item in a menu with a menu orderwould be valuable 
-- Having category-like terms associated with the item would be valuable 
-- Having tag-like terms associated with the item would be valuable 
-- Having comments associated with the item would be valuable 
-- Having custom fields (meta) associated with the item would be valuable 
-- Having images associated with the item would be valuable 
-- Having easy URL routing for the item in the form /item-type/%item-name%/ would have value 
-- Having an admin menu section for adding and editing would have value 
-- Having plugins that support custom content types would add valuable additional functionality "for free." 

It seems that managing people on a website would benefit from having all the features offered "for free" by being a post type. Users are people, Commenters are people, and frankly 100% of the website I've ever launched have needed to manage people as a first-class element in some form or another. It would surprise me if most people who use WordPress wouldn't really need the same assuming they really understand what having such functionality would allow them to do that they cannot do now.

-Mike
[1] http://groups.google.com/group/wp-hackers/msg/2a7b1f238ad85987


From uwiuw at yahoo.com.sg  Sat Mar 13 11:43:02 2010
From: uwiuw at yahoo.com.sg (Uwiuw Bakawan.com)
Date: Sat, 13 Mar 2010 03:43:02 -0800 (PST)
Subject: [wp-hackers] howto delete category via administrator panel
Message-ID: <145121.16834.qm@web45307.mail.sp1.yahoo.com>

hi, thanks for the reply ;)

> but I'm not sure you have the appropriate actions.
What do you mean ? i don't understand it. 

by the way, i have try to use this debug function on various actions stated in wp_delete_term function (as you had mention before)

function blind_debug()
??? $numargs = func_num_args();??? 
??? $GLOBALS['debugku']['clean_term_cache filter']['Total Argumen'] =? $numargs;
??? if (isset($numargs)) {
??? ??? for ($i = 0; $i < $numargs; $i++) {
??? ??? ??? $GLOBALS['debugku']['clean_term_cache via filter']["arg " . $i] = func_get_arg($i);
??? ??? }
??? }


??? $debugoutput = print_r($GLOBALS['debugku'], TRUE);
??? echo "<pre style='font-size:14px'>about : $debugoutput </pre>";
??? 
??? die();
? ? ? ? wp_die("viva la republic! pun langit runtuh, NKRI sampe mati! ");
}



in wp_delete_term (in /wordpress-2.9.1/wp-includes/taxonomy.php), there're action such as :
1. edit_term_taxonomies and edited_term_taxonomies
2. delete_term_taxonomy and deleted_term_taxonomy
3. clean_term_cache
4. delete_term and delete_$taxonomy

i use add_action and add_filter such as 

add_action('edit_term_taxonomies', 'blind_debug')
add_filter('edit_term_taxonomies', 'blind_debug')

While the output of every debug
1. delete_term and delete_$taxonomy, the output is the deleted CAT ID
2. clean_term_cache, the output is the the deleted CAT ID and the default category ID
3. delete_term_taxonomy and deleted_term_taxonomy, are empty. no output. The blind_debug function is never execute. 
4. edit_term_taxonomies and edited_term_taxonomies also empty
5. wp_delete_term also empty.

when debugging clean_term_cache, delete_term and delete_$taxonomy, i try to use get_categories(array('hide_empty' => 0 ). But somehow, the output only the default category object. It seem the category list can not be access. 

i try not to put any validation function via 'init', or 'admin_init', to do the process of deleting. i hope i can find another hook to start the deleting process.

Right now, i got this everytime a category delete from admin panel. 
$_GET [action] => delete
? ? ? ? ? ? [doaction] => Apply
? ? ? ? ? ? [_wpnonce] => 9503c9c45d
? ? ? ? ? ? [_wp_http_referer] => /wp-admin/categories.php
? ? ? ? ? ? [delete] => Array
? ? ? ? ? ? ? ? (
? ? ? ? ? ? ? ? ? ? [0] => 120
? ? ? ? ? ? ? ? )

? ? ? ? ? ? [action2] => 


scribu, sorry to bother you more on this subject

--- On Sat, 13/3/10, scribu <scribu at gmail.com> wrote:

> From: scribu <scribu at gmail.com>
> Subject: Re: [wp-hackers] howto delete category via administrator panel
> To: wp-hackers at lists.automattic.com
> Date: Saturday, 13 March, 2010, 2:35 PM
> On Sat, Mar 13, 2010 at 1:32 AM,
> Uwiuw Bakawan.com <uwiuw at yahoo.com.sg>wrote:
> 
> >
> > i'm sorry i put wrong information. in my previous
> email, i mention about
> > post. What i meant is about delete category via
> dashboard >> categories
> >
> > so, about the term_taxonomy_id, should i
> > 1. retrieve the delete category ID value from 'init'
> > 2. took it child category id via get_category such as
> >
> > foreach ( get_category() as $category ) {
> >? ? ? if ( $category->parent ==
> $delete_parent_cat_ID ) {
> >? ? ? ? ? ?
> ???//do the job here
> >? ? ? }
> > }
> >
> >
> > 3. delete all of its child category post then delete
> the child
> >
> > is there any better approach then this ?
> >
> 
> It would be better if you could hook into
> wp_delete_term()<http://xref.yoast.com/2.9.1/nav.html?_functions/wp_delete_term.html>,
> but I'm not sure you have the appropriate actions.
> 
> 
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



      Start chatting with friends on the all-new Yahoo! Pingbox today! It's easy to create your personal chat space on your blogs. http://sg.messenger.yahoo.com/pingbox

From charles at cefm.ca  Sat Mar 13 13:19:00 2010
From: charles at cefm.ca (Charles Frees-Melvin)
Date: Sat, 13 Mar 2010 09:19:00 -0400
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>
	<op.u9hxpuwbspxmuu@ho.st>
	<0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>
	<op.u9hzdbgyspxmuu@ho.st>
	<1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>
Message-ID: <51B1202F-6FB3-4168-AE24-E6E55E321426@cefm.ca>

But the wp_post table requires a post_author field which a user would not have. This would have a negative impact on allowing other web applications from sharing user tables effectively.


On 2010-03-13, at 4:51 AM, Mike Schinkel wrote:

> On Mar 13, 2010, at 2:33 AM, Dion Hulse (dd32) wrote:
>>> At this risk of inciting a backlash, doesn't this give one good use-case (and I have many others of my own) why it would be a good idea to have users (and commenters) as a standard "person" post type, at least via a canonical plugin if not in core?
>> 
>> I dont quite get that, In reality, Users are a first class object, same as post_types (Which have children of posts, pages, attachments, revisions, etc), same as comments..
>> What benefit would making users a post_Type (Even if as a linked object)?
> 
> From an earlier post [1] to this list I was advocating for considering creating a custom post type for anything where even a few of the following add value for the use case: 
> 
> -- Having a title/body editor for the item has value 
> -- Having status workflow for the item has value 
> -- Having visibility control for the item has value 
> -- Having visibility control for the item has value 
> -- Having revisions for the item would be valuable 
> -- Having trash/delete management for the item would be valuable 
> -- Having ability to schedule publish date/time would be valuable 
> -- Having a web page of content about the item would be valuable 
> -- Having ability to define a template for the content page would be valuable 
> -- Having ability to set another content type as a parent of the item would be valuable 
> -- Having ability to reference the item in a menu with a menu orderwould be valuable 
> -- Having category-like terms associated with the item would be valuable 
> -- Having tag-like terms associated with the item would be valuable 
> -- Having comments associated with the item would be valuable 
> -- Having custom fields (meta) associated with the item would be valuable 
> -- Having images associated with the item would be valuable 
> -- Having easy URL routing for the item in the form /item-type/%item-name%/ would have value 
> -- Having an admin menu section for adding and editing would have value 
> -- Having plugins that support custom content types would add valuable additional functionality "for free." 
> 
> It seems that managing people on a website would benefit from having all the features offered "for free" by being a post type. Users are people, Commenters are people, and frankly 100% of the website I've ever launched have needed to manage people as a first-class element in some form or another. It would surprise me if most people who use WordPress wouldn't really need the same assuming they really understand what having such functionality would allow them to do that they cannot do now.
> 
> -Mike
> [1] http://groups.google.com/group/wp-hackers/msg/2a7b1f238ad85987
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From info at toscho.de  Sat Mar 13 13:43:28 2010
From: info at toscho.de (Thomas Scholz)
Date: Sat, 13 Mar 2010 14:43:28 +0100
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <op.u9hxpuwbspxmuu@ho.st>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>
	<op.u9hxpuwbspxmuu@ho.st>
Message-ID: <op.u9idqqvjr6yny2@perplexifikator.speedport-w-303v-typ-a>

Dion Hulse:

> Personally i don't think creating it as a post taxonomy is what is  
> needed here.

Yeah, most of the users don?t have any posts. Some of them don?t even have  
an email address. Or a computer ? :)

> You can visit /wp-admin/edit-tags.php?taxonomy=color directly and you'll  
> be able to manage the Colours there.

Oh, thanks! Nice to know.

> You'll need to manually add a dropdown selection to the user edit page  
> however based off that taxonomy data, you'd probably have to hook into  
> 'show_user_profile' & 'edit_user_profile' to add a new Table and table  
> row, as well as saving that data manually through the action which fires  
> when user data is updated...

I was hoping to find a way without new tables (and 200 lines of extra  
code).

Another idea was to misuse the roles and capabilities. The number of  
colors is restricted,? so I could preset the list. This would be  
semantically wrong ? but probably faster. I?ll have to contemplate about  
it.

Regards
Thomas

? <http://fifeweb.org/wp/breeds/breeds_ems.php>

-- 
http://toscho.de

From timberge at cs.tu-berlin.de  Sat Mar 13 17:37:17 2010
From: timberge at cs.tu-berlin.de (Tim Berger)
Date: Sat, 13 Mar 2010 18:37:17 +0100
Subject: [wp-hackers] Permalink behavior with a feed name = sub category
 slug
In-Reply-To: <op.u9hxwyf5spxmuu@ho.st>
References: <4B9AB5A7.809@cs.tu-berlin.de> <op.u9hxwyf5spxmuu@ho.st>
Message-ID: <4B9BCD4D.8090209@cs.tu-berlin.de>

Thank you for the explanation Dion!

I'm working on further patches for the podPress plugin and stumbled in
german forum over this problem. But since podPress does not rely on a
category named podcast to compose the content for the feed called
podcast, I'm going to add an notice concerning this matter to the Usage
or FAQ section of the readme file of the plugin.

Regards,
Tim

Am 13.03.2010 08:01, schrieb Dion Hulse (dd32):
> On Sat, 13 Mar 2010 09:44:07 +1200, Tim Berger
> <timberge at cs.tu-berlin.de> wrote:
>> The feed address would be http://undeuxoutrois.de/wp/feed/podcast
>> This works as expected.
>>
>> But when I like to see the category view of the category "podcast" which
>> is in this example a sub category of the "oberkategorie" I use the URL
>> http://undeuxoutrois.de/wp/category/oberkategorie/podcast .
>> But I end up always seeing the custom feed content.
> 
> This is an unfortunate & rare use-case.. WordPress supports
> URL/<feed_type>/ url's as well as URL/feed/<feed_type>/, and as you've
> found out, the first takes higher priority over looking for <feed_type>
> as a category.
> 
> My only real suggestion to you would be to change the 'podcast' slug to
> something else such as 'podcasts' (You can change the Slug and the Name
> seperately, it only affects the URL).
> 
> It would be possible to filter the Rewrite rules and remove the rules
> which add the functionality if you were desperate enough for it to work
> like that..
> 
> Dion Hulse / dd32
> 
> Contact:
>   e: contact at dd32.id.au
>   msn: msn at d32.id.au
>   skype: theonly_dd32
>   Web: http://dd32.id.au/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From casey.bisson at gmail.com  Sat Mar 13 17:38:56 2010
From: casey.bisson at gmail.com (Casey Bisson)
Date: Sat, 13 Mar 2010 12:38:56 -0500
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <op.u9idqqvjr6yny2@perplexifikator.speedport-w-303v-typ-a>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>
	<op.u9hxpuwbspxmuu@ho.st>
	<op.u9idqqvjr6yny2@perplexifikator.speedport-w-303v-typ-a>
Message-ID: <E9715FD9-47FE-4A7F-8AA6-B9C3220A21A6@gmail.com>




On Mar 13, 2010, at 8:43 AM, "Thomas Scholz" <info at toscho.de> wrote:

>> Personally i don't think creating it as a post taxonomy is what is  
>> needed here.
>
> Yeah, most of the users don?t have any posts. Some of them don?t eve 
> n have an email address. Or a computer ? :)

You're really misusing the users table here and it could lead to some  
unexpected issues (consider how access permissions are attached to  
entries in that table).

Cat breeders = posts

Use postmeta and custom taxonomies for the rest.

A trivial example of something similar: menu items = posts, built  
using Joost's simple taxonomies plugin and my own Scriblio:

http://labs.maisonbisson.com/hawtdog/menu/

From mikeschinkel at newclarity.net  Sat Mar 13 20:42:20 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 13 Mar 2010 15:42:20 -0500
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <51B1202F-6FB3-4168-AE24-E6E55E321426@cefm.ca>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>
	<op.u9hxpuwbspxmuu@ho.st>
	<0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>
	<op.u9hzdbgyspxmuu@ho.st>
	<1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>
	<51B1202F-6FB3-4168-AE24-E6E55E321426@cefm.ca>
Message-ID: <B97515BD-20DC-42AC-BDC1-80B9566DE4C6@newclarity.net>

On Mar 13, 2010, at 8:19 AM, Charles Frees-Melvin wrote:
> But the wp_post table requires a post_author field which a user would not have. This would have a negative impact on allowing other web applications from sharing user tables effectively.

The negative impact is not clear to me.  Can you elaborate on the specific negative impact it would have. 

-Mike

From patrik.bona at mrhead.sk  Sat Mar 13 20:57:11 2010
From: patrik.bona at mrhead.sk (=?ISO-8859-1?Q?Patrik_B=F3na?=)
Date: Sat, 13 Mar 2010 21:57:11 +0100
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <B97515BD-20DC-42AC-BDC1-80B9566DE4C6@newclarity.net>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>	<op.u9hxpuwbspxmuu@ho.st>	<0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>	<op.u9hzdbgyspxmuu@ho.st>	<1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>	<51B1202F-6FB3-4168-AE24-E6E55E321426@cefm.ca>
	<B97515BD-20DC-42AC-BDC1-80B9566DE4C6@newclarity.net>
Message-ID: <4B9BFC27.6040608@mrhead.sk>

On WPMU you have own post table for each site but just one user table 
for all sites.

So if you will put users in posts table you will have trouble ;).

Patril

Mike Schinkel wrote:
> On Mar 13, 2010, at 8:19 AM, Charles Frees-Melvin wrote:
>   
>> But the wp_post table requires a post_author field which a user would not have. This would have a negative impact on allowing other web applications from sharing user tables effectively.
>>     
>
> The negative impact is not clear to me.  Can you elaborate on the specific negative impact it would have. 
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   


From mikeschinkel at newclarity.net  Sat Mar 13 21:15:11 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 13 Mar 2010 16:15:11 -0500
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <4B9BFC27.6040608@mrhead.sk>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>	<op.u9hxpuwbspxmuu@ho.st>	<0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>	<op.u9hzdbgyspxmuu@ho.st>	<1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>	<51B1202F-6FB3-4168-AE24-E6E55E321426@cefm.ca>
	<B97515BD-20DC-42AC-BDC1-80B9566DE4C6@newclarity.net>
	<4B9BFC27.6040608@mrhead.sk>
Message-ID: <70437F0D-624E-4882-956A-1BB43611861C@newclarity.net>

On Mar 13, 2010, at 3:57 PM, Patrik B?na wrote:
> On WPMU you have own post table for each site but just one user table for all sites.
> 
> So if you will put users in posts table you will have trouble ;).


Sigh.  I covered that already in an earlier post to this list.  Only mirror users that have rights to a WPMU blog into that blog, simple as that. It would just not make sense to copy user "John" in the posts table for user "Mary"'s blog.

The reason to consider this is that when people represent content they should have a post type to contain that content.  And I argue for it being in core (or a canonical plugin) because information about people is so universal that it probably applies to every WordPress install out there. Getting it into core means lots of people would build additional support for a person post type; not having it there means much less and in incompatible ways.

-Mike

From wordpress at dd32.id.au  Sat Mar 13 22:36:00 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 14 Mar 2010 10:36:00 +1200
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <op.u9idqqvjr6yny2@perplexifikator.speedport-w-303v-typ-a>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>
	<op.u9hxpuwbspxmuu@ho.st>
	<op.u9idqqvjr6yny2@perplexifikator.speedport-w-303v-typ-a>
Message-ID: <op.u9i46a1bspxmuu@ho.st>

On Sun, 14 Mar 2010 01:43:28 +1200, Thomas Scholz <info at toscho.de> wrote:
> Dion Hulse:
>> You'll need to manually add a dropdown selection to the user edit page
>> however based off that taxonomy data, you'd probably have to hook into
>> 'show_user_profile' & 'edit_user_profile' to add a new Table and table
>> row, as well as saving that data manually through the action which fires
>> when user data is updated...
>
> I was hoping to find a way without new tables (and 200 lines of extra
> code).

By "Tables" I was refering to HTML tables, as the hooks i mentioned are  
outside of the main form table on the profile page :)

Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

From alexandertiger at 163.com  Sun Mar 14 03:41:08 2010
From: alexandertiger at 163.com (alexandertiger)
Date: Sun, 14 Mar 2010 11:41:08 +0800 (CST)
Subject: [wp-hackers] How can I start for GSOC 2010
In-Reply-To: <mailman.19.1268481602.32593.wp-hackers@lists.automattic.com>
References: <mailman.19.1268481602.32593.wp-hackers@lists.automattic.com>
Message-ID: <a2a9c6.b529.1275ac2cd9b.Coremail.alexandertiger@163.com>

Hello, everyone. Glad to write to you!

I'm a post graduate on Wireless Sensor Networks, and a wordpress user. I'm very interested in wordpress this GSOC. Can anybody tell me how to start? What skills need I master? which program language and development method will be used?  Where can I study the framework of wordpress quickly? And what need I do before I apply for GSOC?

Thanks! Eager for your instructions!

Sincerely
Alexander

From wordpress at dd32.id.au  Sun Mar 14 03:13:37 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 14 Mar 2010 15:13:37 +1200
Subject: [wp-hackers] How can I start for GSOC 2010
In-Reply-To: <a2a9c6.b529.1275ac2cd9b.Coremail.alexandertiger@163.com>
References: <mailman.19.1268481602.32593.wp-hackers@lists.automattic.com>
	<a2a9c6.b529.1275ac2cd9b.Coremail.alexandertiger@163.com>
Message-ID: <op.u9jh0za7spxmuu@ho.st>

On Sun, 14 Mar 2010 15:41:08 +1200, alexandertiger  
<alexandertiger at 163.com> wrote:
> Hello, everyone. Glad to write to you!
> <snip, More inline below>

Hi,
Glad to see someone interested in participating, A few -quick- answers to  
your questions:

Requirements: Best off reading the GSoC FAQ:  
http://socghop.appspot.com/document/show/gsoc_program/google/gsoc2010/faqs

> Can anybody tell me how to start?
  Have a look at the above link for a start

> What skills need I master? which program language and development method  
> will be used?

WordPress is written in the PHP Language, Development method is basically,  
Write code and make it publicly available often.

> Where can I study the framework of wordpress quickly?

Knowing how to write a WordPress plugin first is a huge step forward, If  
you do not understand how to write a WordPress plugin, the best place to  
start is http://codex.wordpress.org/Writing_a_Plugin

> And what need I do before I apply for GSOC?

You need to have an Idea, SoC is a project which mentors a student through  
completing a task related to their chosen Project. For example, Someone  
may write a Plugin to provide Spam filtering through some new algorithm,  
Integrate Plugin installation from the web admin (This was mine in a  
previous year), etc.

Once you've come up with an idea, once student applications open (See the  
FAQ i linked to above) you submit your proposal (Which should contain an  
outline of your chosen task, how you intend on completing it, a timeline  
of goals to meet, what the final product will look like at completion  
(Core patch, Plugin, separate Application, etc)

You might find it appropriate to look through the previous years projects,  
and how they were handled. You should find links to previous years on  
http://code.google.com/soc/ which should then link to the WordPress  
projects for that year.


Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

From mikeschinkel at newclarity.net  Sun Mar 14 04:33:28 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 13 Mar 2010 23:33:28 -0500
Subject: [wp-hackers] Best functions in WP for bulk MySQL processing?
Message-ID: <43C46BEA-B5D0-407D-A954-E137B9B7603B@newclarity.net>

Hey all,

I'm writing a tool to help automatically move from one domain to another.  To do this I need to process through all post_content and post_excerpt fields and change any image locations that reference the old domain with the new domain (there are other things I need to do but I'm taking baby steps first.)

As far as I can tell WordPress' database functions like $wpdb->query() load all posts into memory which won't work for a really large database; it would exhaust memory.  While I can easily write SQL code using the mysql_* functions I'd prefer to do it using WordPress functions.  Are there functions available to use for bulk processing, one I've just not found yet?

-Mike

From harish.mlists at gmail.com  Sun Mar 14 07:16:33 2010
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Sun, 14 Mar 2010 08:16:33 +0100
Subject: [wp-hackers] Best functions in WP for bulk MySQL processing?
In-Reply-To: <43C46BEA-B5D0-407D-A954-E137B9B7603B@newclarity.net>
References: <43C46BEA-B5D0-407D-A954-E137B9B7603B@newclarity.net>
Message-ID: <4B9C8D51.9080708@gmail.com>

On 3/14/10 5:33 AM, Mike Schinkel wrote:
> Hey all,
> 
> I'm writing a tool to help automatically move from one domain to another.  To do this I need to process through all post_content and post_excerpt fields and change any image locations that reference the old domain with the new domain (there are other things I need to do but I'm taking baby steps first.)
> 
> As far as I can tell WordPress' database functions like $wpdb->query() load all posts into memory which won't work for a really large database; it would exhaust memory.  While I can easily write SQL code using the mysql_* functions I'd prefer to do it using WordPress functions.  Are there functions available to use for bulk processing, one I've just not found yet?

It might be more robust (and I imagine quicker) to dump the database to
file, perform whatever transformations you need using standard command
line utilities like sed, and then reinsert the modified data to your new
database server.

Harish

From wordpress at dd32.id.au  Sun Mar 14 06:20:06 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 14 Mar 2010 18:20:06 +1200
Subject: [wp-hackers] Best functions in WP for bulk MySQL processing?
In-Reply-To: <43C46BEA-B5D0-407D-A954-E137B9B7603B@newclarity.net>
References: <43C46BEA-B5D0-407D-A954-E137B9B7603B@newclarity.net>
Message-ID: <op.u9jqnsimspxmuu@ho.st>

On Sun, 14 Mar 2010 16:33:28 +1200, Mike Schinkel  
<mikeschinkel at newclarity.net> wrote:

> Hey all,
>
> I'm writing a tool to help automatically move from one domain to  
> another.  To do this I need to process through all post_content and  
> post_excerpt fields and change any image locations that reference the  
> old domain with the new domain (there are other things I need to do but  
> I'm taking baby steps first.)
>
> As far as I can tell WordPress' database functions like $wpdb->query()  
> load all posts into memory which won't work for a really large database;  
> it would exhaust memory.  While I can easily write SQL code using the  
> mysql_* functions I'd prefer to do it using WordPress functions.  Are  
> there functions available to use for bulk processing, one I've just not  
> found yet?

You might like to have a look at the Search and Replace plugin for  
inspiration.

As for reducing memory consumption, You might be best doing replacements  
at the SQL layer using REPLACE():  
http://dev.mysql.com/doc/refman/4.1/en/string-functions.html#function_replace

-- 
Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

From mikeschinkel at newclarity.net  Sun Mar 14 11:13:42 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 14 Mar 2010 07:13:42 -0400
Subject: [wp-hackers] Best functions in WP for bulk MySQL processing?
In-Reply-To: <43C46BEA-B5D0-407D-A954-E137B9B7603B@newclarity.net>
References: <43C46BEA-B5D0-407D-A954-E137B9B7603B@newclarity.net>
Message-ID: <DF916BAB-05D9-44FB-9F48-9A8170BBB921@newclarity.net>

On Mar 13, 2010, at 11:33 PM, Mike Schinkel wrote:
> I'm writing a tool to help automatically move from one domain to another.  To do this I need to process through all post_content and post_excerpt fields and change any image locations that reference the old domain with the new domain (there are other things I need to do but I'm taking baby steps first.)
> 
> As far as I can tell WordPress' database functions like $wpdb->query() load all posts into memory which won't work for a really large database; it would exhaust memory.  While I can easily write SQL code using the mysql_* functions I'd prefer to do it using WordPress functions.  Are there functions available to use for bulk processing, one I've just not found yet?

Since I need this ASAP I went ahead and decided to implement something and the following is what I came up with.  I decided to use SQL to directly load all post IDs. I figure that is unlikely to ever breaks (post records in MySQL will probably always have IDs, right?) and it's very lightweight to load even 10K IDs (if I ever have to use for a larger database, well I'll cross that bridge then.)  Then I load each post and look for URLs with the old domain and replace with the new domain (fyi, my old and new domains are like "example.dev" which is local on my machine and "example.com" which is on the live web.) What I don't like is having to load every post but it's not really that bad so I'll live with it.

I'm posting this 1.) to see if anyone has any better ways to do this and/or pitfalls I've not recognized, and 2.) if there is no better way and no pitfalls then I post to help others needing to do the same.

Thanks in advance for looking at it.

function switch_domain_in_posts($old,$new) {
	global $wpdb;
	$posts = $wpdb->get_results('SELECT ID from wp_posts');
	foreach($posts as $post) {
		$post = get_post($post->ID);
		$updated = false;
		if (find_domains_in_content($post->post_content,$old)) {
			$post->post_content = replace_domains_in_content($post->post_content,$old,$new);
			$updated = true;
		}
		if (find_domains_in_content($post->post_excerpt,$old)) {
			$post->post_excerpt = replace_domains_in_content($post->post_excerpt,$old,$new);
			$updated = true;
		}
		if (find_domains_in_content($post->guid,$old)) {
			$post->guid = replace_domains_in_content($post->guid,$old,$new);
			$updated = true;
		}
		if ($updated)
			wp_update_post($post);
	}
}
function find_domains_in_content($content,$old) {
	return preg_match('#(https?://)' . str_replace('.','\.',$old) . '#',$content,$m);
}
function replace_domains_in_content($content,$old,$new) {
	$content = preg_replace('#(https?://)' . str_replace('.','\.',$old) . '#',"$1$new",$content);
	return $content;
}

-Mike


From mikeschinkel at newclarity.net  Sun Mar 14 11:23:16 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 14 Mar 2010 07:23:16 -0400
Subject: [wp-hackers] Best functions in WP for bulk MySQL processing?
In-Reply-To: <4B9C8D51.9080708@gmail.com>
References: <43C46BEA-B5D0-407D-A954-E137B9B7603B@newclarity.net>
	<4B9C8D51.9080708@gmail.com>
Message-ID: <8946323C-1D07-44D8-AD63-41C34DF6FD3E@newclarity.net>

On Mar 14, 2010, at 3:16 AM, Harish Narayanan wrote:
> It might be more robust (and I imagine quicker) to dump the database to
> file, perform whatever transformations you need using standard command
> line utilities like sed, and then reinsert the modified data to your new
> database server.

Thanks for the idea. 

That's what I've done in the past but it fails for any serialized data.  WP 3.0 adds more hardcoded URLs into the database (menu links and header and background URLs for the Twenty Ten theme) and changing some of those with text search & replace breaks them.

See what I've done in my other email.  What I'd really like to see is a system that when deployed will notice that the URL is different and make all adjustments, calling hooks from core and other plugins to allow them to make the changes they need to make.  I'm going ahead and writing this as a plugin to prove the concept but it really will only be fully useful if it gets into core where all the edge cases can get ironed out (I'll never catch them all myself) and where it can become a best practice for plugin authors to write hooks to switch persisted URLs when the domain changes. 

-Mike

From mikeschinkel at newclarity.net  Sun Mar 14 11:26:08 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 14 Mar 2010 07:26:08 -0400
Subject: [wp-hackers] Best functions in WP for bulk MySQL processing?
In-Reply-To: <op.u9jqnsimspxmuu@ho.st>
References: <43C46BEA-B5D0-407D-A954-E137B9B7603B@newclarity.net>
	<op.u9jqnsimspxmuu@ho.st>
Message-ID: <B3ED2CBF-FD2F-430B-90F5-011F6C2342CA@newclarity.net>

On Mar 14, 2010, at 1:20 AM, Dion Hulse (dd32) wrote:
> You might like to have a look at the Search and Replace plugin for inspiration.

Thanks, I'll check it out.

> As for reducing memory consumption, You might be best doing replacements at the SQL layer using REPLACE(): http://dev.mysql.com/doc/refman/4.1/en/string-functions.html#function_replace

I'm trying to avoid calling SQL directly. I'm technically capable but trying to stick with WP's abstraction layer.  Maybe this is just one area that is too far outside of that limit?

I guess another way would be page through the database and load ~100 records at a time...

-Mike

From jayarjo at gmail.com  Sun Mar 14 17:02:11 2010
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sun, 14 Mar 2010 21:02:11 +0400
Subject: [wp-hackers] something wrong with adding menus for plugin
Message-ID: <9aa12a491003141002q199389ffob48bf2aa8bff9a30@mail.gmail.com>

I'm trying to add one Top Menu and couple of SubMenus with the following code:

add_menu_page( Popups, Popups, 10, page_popups, array($this, page_popups) );
add_submenu_page( page_popups, Edit, Edit, 10, page_popups,
array($this, page_popups) );
add_submenu_page( page_popups, Add New, Add New, 10, page_add_new,
array($this, page_add_new) );

In the first add_submenu_page call I'm using that trick where $parent
= $file to prevent duplication of top menu as a first submenu, and the
trick works... at least
visually. But functionally when I click on either top menu or first
submenu (not duplicated) I get corresponding callback called twice...

But why? Isn't this how it needs to be done. I remember picking this
technique in
Codex (http://codex.wordpress.org/Adding_Administration_Menus). Is it
how it is meant to work?

Any help appreciated.

-- 
Davit Barbakadze

From dougal at gunters.org  Mon Mar 15 03:44:13 2010
From: dougal at gunters.org (Dougal Campbell)
Date: Sun, 14 Mar 2010 23:44:13 -0400
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <70437F0D-624E-4882-956A-1BB43611861C@newclarity.net>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>	<op.u9hxpuwbspxmuu@ho.st>	<0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>	<op.u9hzdbgyspxmuu@ho.st>	<1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>	<51B1202F-6FB3-4168-AE24-E6E55E321426@cefm.ca>	<B97515BD-20DC-42AC-BDC1-80B9566DE4C6@newclarity.net>	<4B9BFC27.6040608@mrhead.sk>
	<70437F0D-624E-4882-956A-1BB43611861C@newclarity.net>
Message-ID: <4B9DAD0D.4090400@gunters.org>

On Mar 13 2010 4:15 PM, Mike Schinkel wrote:
> On Mar 13, 2010, at 3:57 PM, Patrik B?na wrote:
>    
>> On WPMU you have own post table for each site but just one user table for all sites.
>>
>> So if you will put users in posts table you will have trouble ;).
>>      
>
> Sigh.  I covered that already in an earlier post to this list.  Only mirror users that have rights to a WPMU blog into that blog, simple as that. It would just not make sense to copy user "John" in the posts table for user "Mary"'s blog.
>    

But if you are copying user data from blog-to-blog "as needed", you 
break single-sign-on, right? And further, you now can have user 'foo' on 
Blog A that is not the same as user 'foo' on Blog B. That's not 
necessarily a bad thing in all situations, but it's definitely not 
backwards-compatible. Assuming the goal is a backwards-compatible 
refactoring, how would you propose syncing the user data? Would there be 
some special-case user record that acts as a pointer to the userid & 
blogid of the "master" user record? That's the only thing that comes to 
mind right now, and to that I'd say yuck. Special case exceptions are 
the devil.

> The reason to consider this is that when people represent content they should have a post type to contain that content.  And I argue for it being in core (or a canonical plugin) because information about people is so universal that it probably applies to every WordPress install out there. Getting it into core means lots of people would build additional support for a person post type; not having it there means much less and in incompatible ways.
>    

I think a key phrase here is 'when people represent content'. I think 
the difficulty with this idea is conflating the concept of a 'user' with 
'information about a user'. Personally, I still think that the use-cases 
for moving user data into the posts table are outside the norm.

I do, however, like the idea of being able to relate custom taxonomies 
to a user. And if you want to be able to tie more data to a user, what 
about a custom post type? I could see making a 'user-bio' post type, and 
maybe even overloading the post_parent field to tie to the userid 
instead of to a postid... (but then, that's a special case exception, 
isn't it?)

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From kshanth2101 at gmail.com  Mon Mar 15 05:07:58 2010
From: kshanth2101 at gmail.com (Kishanthan)
Date: Mon, 15 Mar 2010 09:37:58 +0430
Subject: [wp-hackers] Participate in GSOC for WordPress
Message-ID: <290aec121003142207he532561o9958900e3dbc0a56@mail.gmail.com>

Hi,
Im an undergraduate student from University of Moratuwa, Sri Lanka.
I'm interested in participating for the GSOC program for WordPress.
Currently I'm interested in the Idea : *Extend taxonomy functions
(categories, tags) to elements other than posts, such as Pages, media files,
authors, etc.*
Please give me further details on this idea on where to begin and what are
the skills i need, So that i can start working on it.
I have experience in developing a plug-in for WordPress to a fair extend,
this i did as a project @ University.

Thanks.
-- 
Kishanthan.T

From mikeschinkel at newclarity.net  Mon Mar 15 05:16:37 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 15 Mar 2010 01:16:37 -0400
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <4B9DAD0D.4090400@gunters.org>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>	<349fe48b1003122248j20ef6a8o5995ef2fddd71be3@mail.gmail.com>	<op.u9hxpuwbspxmuu@ho.st>	<0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>	<op.u9hzdbgyspxmuu@ho.st>	<1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>	<51B1202F-6FB3-4168-AE24-E6E55E321426@cefm.ca>	<B97515BD-20DC-42AC-BDC1-80B9566DE4C6@newclarity.net>	<4B9BFC27.6040608@mrhead.sk>
	<70437F0D-624E-4882-956A-1BB43611861C@newclarity.net>
	<4B9DAD0D.4090400@gunters.org>
Message-ID: <5283ECF7-7C24-41D6-A29F-5FA0EE6CF9BB@newclarity.net>

On Mar 14, 2010, at 11:44 PM, Dougal Campbell wrote:

Thanks for responding. I always appreciate your perspective.
> 


> On Mar 13 2010 4:15 PM, Mike Schinkel wrote:
>> Sigh.  I covered that already in an earlier post to this list.  Only mirror users that have rights to a WPMU blog into that blog, simple as that. It would just not make sense to copy user "John" in the posts table for user "Mary"'s blog.  
> 
> But if you are copying user data from blog-to-blog "as needed", you break single-sign-on, right?

Nope, login (as proposed) stays in wp_users table.  "Content" about a user mores to wp_posts/wp_postmeta, as proposed anyway.

> And further, you now can have user 'foo' on Blog A that is not the same as user 'foo' on Blog B.

True.  Which brings me to how I dislike the multiple duplicated tables in WPMU, but I won't go there today (nor will I probably ever.)
 
> That's not necessarily a bad thing in all situations, but it's definitely not backwards-compatible. Assuming the goal is a backwards-compatible refactoring, how would you propose syncing the user data? Would there be some special-case user record that acts as a pointer to the userid & blogid of the "master" user record? That's the only thing that comes to mind right now, and to that I'd say yuck. Special case exceptions are the devil.

I can agree with that.  

But it seems neither way is perfect, so let's discuss two different yet probable use cases?  Since we both live in metro Atlanta, I'll use local examples:

Use-case #1:  Student Blogs for a University
-----------------------------------------------------------
Let's assume Georgia State University puts up a WPMU site and requires all students to publish a blog and to comment on other blogs.  Metadata related to users might be name, address, home town, Facebook URL, etc.  In this case the cross-over between users on each blog would be relatively high.  To your point having to enter the same info into each blog would be a serious burden on the user.

Use-case #2:  Local Newspaper Blogs for Local Writers
---------------------------------------------------------------------------
Let's assume Creative Loafing puts up a WPMU site and and solicits ~50 blog authors.  These authors get to blog on a topic and get a cut of ad revenue from their own blog, and even get to solicit guest bloggers if they like.  These blogs cover topics that are across the board; some are music blogs, there's a doctor who blogs, a motorcyclist, a marathoner, and "Internet Marketing" coach, a "local celebrity watcher" blog, and more.  

Each blog appeals to a different demographic but there is cross-over.  What's more most people who are active commenters happen to be active on more than one blog, but at each they expose a different persona of themselves.  The doctor is also a motorcyclist, but on his doctor blog his profile includes his degree, school he attended, papers he's written,  conferences he's spoken at and more.  On the motorcycle blog he lists the different motorcycles he has owned over his lifetime, his favorite places to ride, the tools he owns, pictures of his bikes, etc.  So for this use-case it's important to separate out the user info between sites, and currently WPMU doesn't really support that (or at least I don't think it does.)

So after writing the above I realize that we really need BOTH; i.e. all people in the main database in the wp_posts AND each applicable person in the wp_posts table for each blog, as applicable.  Then the admin would get to choose what person meta is global and then each site owner could get the global meta for free on their site (or hide some of it) and also define their own site-specific person meta.

If you really think about it this is a general pattern that applies to many things, not just people.  In the case of the WPMU install for Georgia State University it would be very appropriate for them to create custom post types of "Building", "Course" and "Degree" in addition to "People" and share those across ALL blogs of their WPMU install.  

So instead of discrediting the use of wp_posts to keep track of people as a first class post type in core because of issues that WPMU may present we have in reality identified a new and yet very useful general purpose pattern, don't you think?

> I think a key phrase here is 'when people represent content'. I think the difficulty with this idea is conflating the concept of a 'user' with 'information about a user'. Personally, I still think that the use-cases for moving user data into the posts table are outside the norm.

When you really look at data about a user isn't (almost?) everything except login and password are content. Why is my website, my AIM, my Yahoo IM and my Jabber / GoogleTalk fields not considered content? (and where's my Twitter, Facebook, and LinkedIn URLs while we are at it, by damn! :-)  

I think the bigger problem is when we make an arbitrary distinction between what is content and what isn't and then we have the "have nots" problem.  It's like how Links are in their own table and because of that we don't get link metadata, we don't get link tags, nor do we get any of the other goodies a custom post type gets. (But we are forced to have special infrastructure to support link categories.)  Same is true with a person so I ask please let's not make an arbitrary distinction.

FWIW, today for a website I'm building I really need a "person" content type that mirrors wp_users but I don't know that subsystem well enough to get my fingers dirty in the time I have to allot to the task. I have the person content type but it's not mirrored to the user table meaning people can't maintain their own data in their Person post type record. :-(

> I do, however, like the idea of being able to relate custom taxonomies to a user. And if you want to be able to tie more data to a user, what about a custom post type? I could see making a 'user-bio' post type, and maybe even overloading the post_parent field to tie to the userid instead of to a postid...

Now you are talking!  But rather than a "user-bio" post type why not just make it "person" post type and give it a tag taxonomy of "person type" (author, commenter, etc.)?

> (but then, that's a special case exception, isn't it?)

At the end of the day you do ultimately have to hardcode some things.  There is post-thumbnail, isn't there? :)

-Mike


From wp at andrewnacin.com  Mon Mar 15 06:13:51 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 15 Mar 2010 02:13:51 -0400
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <5283ECF7-7C24-41D6-A29F-5FA0EE6CF9BB@newclarity.net>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a> 
	<0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>
	<op.u9hzdbgyspxmuu@ho.st> 
	<1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>
	<51B1202F-6FB3-4168-AE24-E6E55E321426@cefm.ca> 
	<B97515BD-20DC-42AC-BDC1-80B9566DE4C6@newclarity.net>
	<4B9BFC27.6040608@mrhead.sk> 
	<70437F0D-624E-4882-956A-1BB43611861C@newclarity.net>
	<4B9DAD0D.4090400@gunters.org> 
	<5283ECF7-7C24-41D6-A29F-5FA0EE6CF9BB@newclarity.net>
Message-ID: <4cc4de141003142313x10d3cbbbtb95ae908279406f4@mail.gmail.com>

>
> where's my Twitter, Facebook, and LinkedIn URLs while we are at it


add_filter( 'user_contactmethods', 'my_twitter_facebook_linkedin' );
function my_twitter_facebook_linkedin( $a ) {
   return array_merge( $a, array( 'twitter' => 'Twitter', 'facebook' =>
'Facebook', 'linkedin' => 'LinkedIn' ) );
}

From mikeschinkel at newclarity.net  Mon Mar 15 06:15:51 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 15 Mar 2010 02:15:51 -0400
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <4cc4de141003142313x10d3cbbbtb95ae908279406f4@mail.gmail.com>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<0FC73DF8-B21A-43C1-960F-A887DDC42D50@newclarity.net>
	<op.u9hzdbgyspxmuu@ho.st>
	<1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>
	<51B1202F-6FB3-4168-AE24-E6E55E321426@cefm.ca>
	<B97515BD-20DC-42AC-BDC1-80B9566DE4C6@newclarity.net>
	<4B9BFC27.6040608@mrhead.sk>
	<70437F0D-624E-4882-956A-1BB43611861C@newclarity.net>
	<4B9DAD0D.4090400@gunters.org>
	<5283ECF7-7C24-41D6-A29F-5FA0EE6CF9BB@newclarity.net>
	<4cc4de141003142313x10d3cbbbtb95ae908279406f4@mail.gmail.com>
Message-ID: <6FC5FDD2-62A1-4D79-9BAE-740DB928100C@newclarity.net>

Heh.  Not exactly the point, but thanks nonetheless.  :-)

-Mike

On Mar 15, 2010, at 2:13 AM, Andrew Nacin wrote:

>> 
>> where's my Twitter, Facebook, and LinkedIn URLs while we are at it
> 
> 
> add_filter( 'user_contactmethods', 'my_twitter_facebook_linkedin' );
> function my_twitter_facebook_linkedin( $a ) {
>   return array_merge( $a, array( 'twitter' => 'Twitter', 'facebook' =>
> 'Facebook', 'linkedin' => 'LinkedIn' ) );
> }
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From alexandertiger at 163.com  Mon Mar 15 11:53:05 2010
From: alexandertiger at 163.com (alexandertiger)
Date: Mon, 15 Mar 2010 19:53:05 +0800 (CST)
Subject: [wp-hackers] How can I start for GSOC 2010
In-Reply-To: <mailman.15.1268568002.31770.wp-hackers@lists.automattic.com>
References: <mailman.15.1268568002.31770.wp-hackers@lists.automattic.com>
Message-ID: <53cf8b84.fddb.12761ab8ee7.Coremail.alexandertiger@163.com>

Thanks Dion for your kindness! Your help is valuable for me!

I have read the source code of the plug "Hello, Dlolly", and will advance forwards plug API. Also I've found project ideas for GSOC 2008 and 2009, well, where can I find recommended project ideas for this year?

Thanks!

Sincerely
Alexander

From ahuja.ankit at gmail.com  Mon Mar 15 11:58:35 2010
From: ahuja.ankit at gmail.com (Ankit Ahuja)
Date: Mon, 15 Mar 2010 17:28:35 +0530
Subject: [wp-hackers] How can I start for GSOC 2010
In-Reply-To: <53cf8b84.fddb.12761ab8ee7.Coremail.alexandertiger@163.com>
References: <mailman.15.1268568002.31770.wp-hackers@lists.automattic.com> 
	<53cf8b84.fddb.12761ab8ee7.Coremail.alexandertiger@163.com>
Message-ID: <7e7585311003150458g796ebdfbs93399c6fba8246de@mail.gmail.com>

The idea list for this year is at http://codex.wordpress.org/GSoC2010

On Mon, Mar 15, 2010 at 5:23 PM, alexandertiger <alexandertiger at 163.com>wrote:

> Thanks Dion for your kindness! Your help is valuable for me!
>
> I have read the source code of the plug "Hello, Dlolly", and will advance
> forwards plug API. Also I've found project ideas for GSOC 2008 and 2009,
> well, where can I find recommended project ideas for this year?
>
> Thanks!
>
> Sincerely
> Alexander
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From johnbillion+wp at gmail.com  Mon Mar 15 12:09:23 2010
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Mon, 15 Mar 2010 12:09:23 +0000
Subject: [wp-hackers] Participate in GSOC for WordPress
In-Reply-To: <290aec121003142207he532561o9958900e3dbc0a56@mail.gmail.com>
References: <290aec121003142207he532561o9958900e3dbc0a56@mail.gmail.com>
Message-ID: <1fa535a71003150509k52d9df3apbc396073787d7af@mail.gmail.com>

Hi Kishanthan,

Dion has just posted some great advice for GSoC in another thread, so
I'll just link you to that:
http://lists.automattic.com/pipermail/wp-hackers/2010-March/030890.html

John

On Mon, Mar 15, 2010 at 5:07 AM, Kishanthan <kshanth2101 at gmail.com> wrote:
> Hi,
> Im an undergraduate student from University of Moratuwa, Sri Lanka.
> I'm interested in participating for the GSOC program for WordPress.
> Currently I'm interested in the Idea : *Extend taxonomy functions
> (categories, tags) to elements other than posts, such as Pages, media files,
> authors, etc.*
> Please give me further details on this idea on where to begin and what are
> the skills i need, So that i can start working on it.
> I have experience in developing a plug-in for WordPress to a fair extend,
> this i did as a project @ University.
>
> Thanks.
> --
> Kishanthan.T
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From eric at eamann.com  Mon Mar 15 16:48:17 2010
From: eric at eamann.com (Eric Mann)
Date: Mon, 15 Mar 2010 09:48:17 -0700
Subject: [wp-hackers] Daylight Savings Glitch
Message-ID: <004401cac45f$516e97e0$f44bc7a0$@com>

Hopefully everyone's realized that we set our clocks ahead an hour yesterday
(at least everyone in the US).  While my blog seemed to realize this and
updated its time settings appropriately, there was still a huge glitch.

 

I publish a post every Monday-Wednesday-Friday at 9am.  Because I originally
expected to be busy the night before, I scheduled today's post ahead of time
to automatically publish at 9am.  At 9:40, though, I noticed my blog hadn't
updated.  I checked the blog and it claimed to be set to the right time and
the post claimed it was scheduled to publish today at 9am.  I clicked to
edit the time and set it again to 9:00 and clicked the now present "Publish"
button (before it was "Schedule").  Everything seemed to go well, but my
blog still claims the post is "Scheduled for: Mar 15, 2010 @ 9:00"  This is
a significant problem . because it's after 9 but things won't update.

 

For reference, my timezone is set to Los Angeles, displays the appropriate
local time, and has a reminder note below saying "This timezone is currently
in daylight savings time. Standard time begins on: November 7, 2010 1:00
am."

 

I scheduled Wednesday's post ahead of time, too . will it also display an
hour late?  When I write my post on Friday, should I schedule it for 8 or 9
to get it to publish at 9?  Any ideas?

 

 

Eric Mann

 <http://www.eamann.com> www.eamann.com

 


From eric at eamann.com  Mon Mar 15 16:55:15 2010
From: eric at eamann.com (Eric Mann)
Date: Mon, 15 Mar 2010 09:55:15 -0700
Subject: [wp-hackers] Daylight Savings Glitch
In-Reply-To: <004401cac45f$516e97e0$f44bc7a0$@com>
References: <004401cac45f$516e97e0$f44bc7a0$@com>
Message-ID: <004901cac460$4a70a040$df51e0c0$@com>

Actually, I just investigated further.  It appears that any post I saved
before Daylight Savings Time inherited the pre-savings UTC settings.  So 9am
= 17:00 before Daylight Savings went into effect.  I checked the wp_posts
table and updated things accordingly (setting the post time to 16:00 instead
of 17:00).  This doesn't seem to be so much of a bug as it does an oversight
... publishing should work just fine from here on out, but is there a way to
patch this in the future to prevent this kind of behavior?

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Eric Mann
Sent: Monday, March 15, 2010 9:48 AM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] Daylight Savings Glitch

Hopefully everyone's realized that we set our clocks ahead an hour yesterday
(at least everyone in the US).  While my blog seemed to realize this and
updated its time settings appropriately, there was still a huge glitch.

 

I publish a post every Monday-Wednesday-Friday at 9am.  Because I originally
expected to be busy the night before, I scheduled today's post ahead of time
to automatically publish at 9am.  At 9:40, though, I noticed my blog hadn't
updated.  I checked the blog and it claimed to be set to the right time and
the post claimed it was scheduled to publish today at 9am.  I clicked to
edit the time and set it again to 9:00 and clicked the now present "Publish"
button (before it was "Schedule").  Everything seemed to go well, but my
blog still claims the post is "Scheduled for: Mar 15, 2010 @ 9:00"  This is
a significant problem . because it's after 9 but things won't update.

 

For reference, my timezone is set to Los Angeles, displays the appropriate
local time, and has a reminder note below saying "This timezone is currently
in daylight savings time. Standard time begins on: November 7, 2010 1:00
am."

 

I scheduled Wednesday's post ahead of time, too . will it also display an
hour late?  When I write my post on Friday, should I schedule it for 8 or 9
to get it to publish at 9?  Any ideas?

 

 

Eric Mann

 <http://www.eamann.com> www.eamann.com

 

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Mon Mar 15 17:13:40 2010
From: otto at ottodestruct.com (Otto)
Date: Mon, 15 Mar 2010 12:13:40 -0500
Subject: [wp-hackers] Daylight Savings Glitch
In-Reply-To: <004901cac460$4a70a040$df51e0c0$@com>
References: <004401cac45f$516e97e0$f44bc7a0$@com>
	<004901cac460$4a70a040$df51e0c0$@com>
Message-ID: <161617691003151013r493d3c85u84a21f73add36628@mail.gmail.com>

If you had waited until 10am, I think it would have posted. What was
probably happening was that the scheduled event in wp-cron to post the
job had not fired yet.

BTW, the time in the posts table was correct. You should not have
changed it, nor do I think it would have made any difference, really.
The time in the post controls nothing, the wp-cronjob controls when
the post publishes.

-Otto



On Mon, Mar 15, 2010 at 11:55 AM, Eric Mann <eric at eamann.com> wrote:
> Actually, I just investigated further. ?It appears that any post I saved
> before Daylight Savings Time inherited the pre-savings UTC settings. ?So 9am
> = 17:00 before Daylight Savings went into effect. ?I checked the wp_posts
> table and updated things accordingly (setting the post time to 16:00 instead
> of 17:00). ?This doesn't seem to be so much of a bug as it does an oversight
> ... publishing should work just fine from here on out, but is there a way to
> patch this in the future to prevent this kind of behavior?

From eric at eamann.com  Mon Mar 15 17:43:38 2010
From: eric at eamann.com (Eric Mann)
Date: Mon, 15 Mar 2010 10:43:38 -0700
Subject: [wp-hackers] Daylight Savings Glitch
In-Reply-To: <161617691003151013r493d3c85u84a21f73add36628@mail.gmail.com>
References: <004401cac45f$516e97e0$f44bc7a0$@com>	<004901cac460$4a70a040$df51e0c0$@com>
	<161617691003151013r493d3c85u84a21f73add36628@mail.gmail.com>
Message-ID: <005601cac467$0e051490$2a0f3db0$@com>

Actually, changing the post time and changing the post status to "publish"
rather than "future" published the post.  In any case, even if this was an
issue with wp-cron, it shouldn't have happened.  Any ideas on how to make
WordPress sensitive to the fact that I was scheduling a post for after
Daylight Savings?

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Otto
Sent: Monday, March 15, 2010 10:14 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Daylight Savings Glitch

If you had waited until 10am, I think it would have posted. What was
probably happening was that the scheduled event in wp-cron to post the
job had not fired yet.

BTW, the time in the posts table was correct. You should not have
changed it, nor do I think it would have made any difference, really.
The time in the post controls nothing, the wp-cronjob controls when
the post publishes.

-Otto



On Mon, Mar 15, 2010 at 11:55 AM, Eric Mann <eric at eamann.com> wrote:
> Actually, I just investigated further. ?It appears that any post I saved
> before Daylight Savings Time inherited the pre-savings UTC settings. ?So
9am
> = 17:00 before Daylight Savings went into effect. ?I checked the wp_posts
> table and updated things accordingly (setting the post time to 16:00
instead
> of 17:00). ?This doesn't seem to be so much of a bug as it does an
oversight
> ... publishing should work just fine from here on out, but is there a way
to
> patch this in the future to prevent this kind of behavior?
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Mon Mar 15 17:53:06 2010
From: otto at ottodestruct.com (Otto)
Date: Mon, 15 Mar 2010 12:53:06 -0500
Subject: [wp-hackers] Daylight Savings Glitch
In-Reply-To: <005601cac467$0e051490$2a0f3db0$@com>
References: <004401cac45f$516e97e0$f44bc7a0$@com>
	<004901cac460$4a70a040$df51e0c0$@com> 
	<161617691003151013r493d3c85u84a21f73add36628@mail.gmail.com> 
	<005601cac467$0e051490$2a0f3db0$@com>
Message-ID: <161617691003151053g1b7e9d2radecf805ca7f5a91@mail.gmail.com>

Well, yes, changing the post_status to "publish" is what did it.
That's what "publishing" is, really. The post_time would have had no
impact.

I'm pretty sure the scheduling mechanism makes no attempt to try to
figure out what the savings rules will be on a future scheduled date.
It seems like something that's only going to happen rarely, with the
end result that the post will publish one hour later or earlier than
expected. Basically, the problem only can occur when you future-post
across the time change line.

So yes, it's a bug, but I suspect it'd be rather low priority.

-Otto



On Mon, Mar 15, 2010 at 12:43 PM, Eric Mann <eric at eamann.com> wrote:
> Actually, changing the post time and changing the post status to "publish"
> rather than "future" published the post. ?In any case, even if this was an
> issue with wp-cron, it shouldn't have happened. ?Any ideas on how to make
> WordPress sensitive to the fact that I was scheduling a post for after
> Daylight Savings?

From jer at simianuprising.com  Mon Mar 15 18:37:31 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 15 Mar 2010 14:37:31 -0400
Subject: [wp-hackers] Best functions in WP for bulk MySQL processing?
In-Reply-To: <B3ED2CBF-FD2F-430B-90F5-011F6C2342CA@newclarity.net>
References: <43C46BEA-B5D0-407D-A954-E137B9B7603B@newclarity.net>
	<op.u9jqnsimspxmuu@ho.st>
	<B3ED2CBF-FD2F-430B-90F5-011F6C2342CA@newclarity.net>
Message-ID: <e1202cb11003151137reffea97g235d690ce074e8de@mail.gmail.com>

On Sun, Mar 14, 2010 at 7:26 AM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

>
> I guess another way would be page through the database and load ~100
> records at a time...
>
>
That's what I was going to recommend. The most sensible thing to me would be
to figure out the range you need to modify then from one page load a series
of AJAX calls to your script that do whatever number of records is possible
on each load. I'm working on a system that will do this to convert a
translations database into a new format but haven't gotten to the actual
AJAX part yet. In my case it will be easier because i'll have a whole new DB
of records to compare to the old one, whereas in your case you'll have to
manage the already-converted list somehow.

If anyone has any tips on tricky parts of wordpress to use in a segmented
ajax process they'd be very welcome. So far my plan is to figure out how to
use the admin ajax system and work from there. I guess I should take a look
at how MU does the site updates too.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From jer at simianuprising.com  Mon Mar 15 19:04:29 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 15 Mar 2010 15:04:29 -0400
Subject: [wp-hackers] Custom taxonomies for authors
In-Reply-To: <6FC5FDD2-62A1-4D79-9BAE-740DB928100C@newclarity.net>
References: <op.u9heocs1r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<1D6F5D1E-E7BD-4AB0-9C29-C8E0DE394CE6@newclarity.net>
	<51B1202F-6FB3-4168-AE24-E6E55E321426@cefm.ca>
	<B97515BD-20DC-42AC-BDC1-80B9566DE4C6@newclarity.net>
	<4B9BFC27.6040608@mrhead.sk>
	<70437F0D-624E-4882-956A-1BB43611861C@newclarity.net>
	<4B9DAD0D.4090400@gunters.org>
	<5283ECF7-7C24-41D6-A29F-5FA0EE6CF9BB@newclarity.net>
	<4cc4de141003142313x10d3cbbbtb95ae908279406f4@mail.gmail.com>
	<6FC5FDD2-62A1-4D79-9BAE-740DB928100C@newclarity.net>
Message-ID: <e1202cb11003151204s56540ce5y474bd78e0b7e51e9@mail.gmail.com>

As to the original question it seems fairly clear that breeders should be
posts or a custom post_type in 3.0. If you want some breeders to be able to
edit their profiles then make them author accounts that are the author of
their profile post. There's a point at which its easier to let them edit
their own posts than try to shoehorn everything into the user system.

FWIW, wouldn't it be nice to do the following:

get_users('meta_name=cat_color&meta_value=black');

#brokenrecord

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | globalvoicesonline.org

From 24-7 at gmx.net  Mon Mar 15 21:27:18 2010
From: 24-7 at gmx.net (24/7)
Date: Mon, 15 Mar 2010 22:27:18 +0100
Subject: [wp-hackers] wp-hackers Digest, Vol 62, Issue 49
In-Reply-To: <mailman.5116.1268654347.1345.wp-hackers@lists.automattic.com>
References: <mailman.5116.1268654347.1345.wp-hackers@lists.automattic.com>
Message-ID: <001401cac486$4cab31b0$e6019510$@net>

Kool, that you sent this. I don't have a sollution, but the same problem..

-K.

-----Urspr?ngliche Nachricht-----
Von: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] Im Auftrag von
wp-hackers-request at lists.automattic.com
Gesendet: Montag, 15. M?rz 2010 12:59
An: wp-hackers at lists.automattic.com
Betreff: wp-hackers Digest, Vol 62, Issue 49

Send wp-hackers mailing list submissions to
	wp-hackers at lists.automattic.com

To subscribe or unsubscribe via the World Wide Web, visit
	http://lists.automattic.com/mailman/listinfo/wp-hackers
or, via email, send a message with subject or body 'help' to
	wp-hackers-request at lists.automattic.com

You can reach the person managing the list at
	wp-hackers-owner at lists.automattic.com

When replying, please edit your Subject line so it is more specific than
"Re: Contents of wp-hackers digest..."


From alexandertiger at 163.com  Tue Mar 16 02:47:14 2010
From: alexandertiger at 163.com (alexandertiger)
Date: Tue, 16 Mar 2010 10:47:14 +0800 (CST)
Subject: [wp-hackers] How can I start for GSOC 2010
In-Reply-To: <mailman.5117.1268654347.1345.wp-hackers@lists.automattic.com>
References: <mailman.5117.1268654347.1345.wp-hackers@lists.automattic.com>
Message-ID: <1d1fa06.ff45.12764de2ba8.Coremail.alexandertiger@163.com>

 >The idea list for this year is at http://codex.wordpress.org/GSoC2010 >
It's helpful for me. Thanks, Anki!

Sincerely
Alexander

From ericgribkoff at gmail.com  Wed Mar 17 08:23:12 2010
From: ericgribkoff at gmail.com (Eric Gribkoff)
Date: Wed, 17 Mar 2010 01:23:12 -0700
Subject: [wp-hackers] [GSOC] Just apply, or talk to developers first?
Message-ID: <15ef15201003170123h42cdf671p49d37368c0029d67@mail.gmail.com>

I'm interested in applying for the Google Summer of Code with WordPress. The
Google FAQ suggests contacting the developers at the organization you're
interested in prior to applying. So that's what I'm trying to do here :-)


From wordpress at dd32.id.au  Wed Mar 17 08:35:23 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Wed, 17 Mar 2010 20:35:23 +1200
Subject: [wp-hackers] [GSOC] Just apply, or talk to developers first?
In-Reply-To: <15ef15201003170123h42cdf671p49d37368c0029d67@mail.gmail.com>
References: <15ef15201003170123h42cdf671p49d37368c0029d67@mail.gmail.com>
Message-ID: <op.u9pgw9t2spxmuu@ho.st>

Hi Eric,
I'd suggest you post your entire proposal on this mailing list before  
applying, That'll allow for you to take on board other peoples suggestions  
as well as a learning experience of what else is out there and available  
currently.

I know there are a lot of people wanting a improved role system, and i'm  
aware of 2 (possibly 3) people who'll write something soon if nothing  
comes to fruition..

In the past, i believe posting here was one of the prerequisites, just to  
ensure that your final application is as good as it can be.

Cheers
Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

On Wed, 17 Mar 2010 20:23:12 +1200, Eric Gribkoff <ericgribkoff at gmail.com>  
wrote:

> I'm interested in applying for the Google Summer of Code with WordPress.  
> The
> Google FAQ suggests contacting the developers at the organization you're
> interested in prior to applying. So that's what I'm trying to do here :-)
>
> From the Ideas page, I'm very interested in either implementing improved
> user roles, because that's something I've wished to have on my own blog,  
> or
> the capability to automatically migrate a WordPress installation from one
> host to another.
>
> I've been a web developer using primarily PHP for a little over two years
> now. I have experience with WordPress, and I've released one small  
> plugin @
> http://wordpress.org/extend/plugins/ez-quote/. It hasn't gotten tons of
> downloads, but it was a great learning experience.
>
> Is there anyone I should talk to about potentially working on WordPress
> during the GSOC? Or should I just wait till after the 18th and submit my
> application?
>
> Thanks for your time,
> Eric Gribkoff

From uwiuw at yahoo.com.sg  Wed Mar 17 12:49:22 2010
From: uwiuw at yahoo.com.sg (Uwiuw Bakawan.com)
Date: Wed, 17 Mar 2010 05:49:22 -0700 (PDT)
Subject: [wp-hackers] debugging a wordpress hook
Message-ID: <371161.33170.qm@web45310.mail.sp1.yahoo.com>

i'm and my friend have this kind of weird question. Is there any way to hook a debug function into a hook such as 'init' and retrieve every php function's name whose operates on this particular hook ?


      Get your preferred Email name!
Now you can @ymail.com and @rocketmail.com
http://mail.promotions.yahoo.com/newdomains/sg/

From wp-hackers at striderweb.com  Wed Mar 17 13:00:46 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed, 17 Mar 2010 08:00:46 -0500
Subject: [wp-hackers] debugging a wordpress hook
In-Reply-To: <371161.33170.qm@web45310.mail.sp1.yahoo.com>
References: <371161.33170.qm@web45310.mail.sp1.yahoo.com>
Message-ID: <28B6CA2A-DF6C-4DC8-8259-AF3E8F525589@striderweb.com>

Assuming this is temporary, I would just do a quick hack of the do_action and apply_filter functions.

Stephen

On Mar 17, 2010, at 7:49 AM, Uwiuw Bakawan.com wrote:

> i'm and my friend have this kind of weird question. Is there any way to hook a debug function into a hook such as 'init' and retrieve every php function's name whose operates on this particular hook ?


From mikeschinkel at newclarity.net  Wed Mar 17 13:07:24 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 17 Mar 2010 09:07:24 -0400
Subject: [wp-hackers] debugging a wordpress hook
In-Reply-To: <371161.33170.qm@web45310.mail.sp1.yahoo.com>
References: <371161.33170.qm@web45310.mail.sp1.yahoo.com>
Message-ID: <911D03C6-EC3C-40A8-8376-BB5BD9C940BB@newclarity.net>

Hi Uwiuw,

On Mar 17, 2010, at 8:49 AM, Uwiuw Bakawan.com wrote:
> i'm and my friend have this kind of weird question. Is there any way to hook a debug function into a hook such as 'init' and retrieve every php function's name whose operates on this particular hook ?


If I understand your question, you don't need a hook you just need this:

<?php 
/*
Template Name: Hook Dump
*/
header('Content-type:text/plain');
var_dump($GLOBALS['wp_filter'][$_GET['hook']]); 
?>

Save this page template, create a page called "debug" that uses it, and then you can check any hook you want via a URL parameter, i.e.:

http://example.com/debug/?hook=init

HTH.

-Mike

From uwiuw at yahoo.com.sg  Wed Mar 17 13:07:46 2010
From: uwiuw at yahoo.com.sg (Uwiuw Bakawan.com)
Date: Wed, 17 Mar 2010 06:07:46 -0700 (PDT)
Subject: [wp-hackers] debugging a wordpress hook
In-Reply-To: <28B6CA2A-DF6C-4DC8-8259-AF3E8F525589@striderweb.com>
Message-ID: <160735.340.qm@web45311.mail.sp1.yahoo.com>

what do you meant ? is it about changing core file while on production stage ?

--- On Wed, 17/3/10, Stephen Rider <wp-hackers at striderweb.com> wrote:

> From: Stephen Rider <wp-hackers at striderweb.com>
> Subject: Re: [wp-hackers] debugging a wordpress hook
> To: wp-hackers at lists.automattic.com
> Date: Wednesday, 17 March, 2010, 9:00 PM
> Assuming this is temporary, I would
> just do a quick hack of the do_action and apply_filter
> functions.
> 
> Stephen
> 
> On Mar 17, 2010, at 7:49 AM, Uwiuw Bakawan.com wrote:
> 
> > i'm and my friend have this kind of weird question. Is
> there any way to hook a debug function into a hook such as
> 'init' and retrieve every php function's name whose operates
> on this particular hook ?
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


      


From frank at bueltge.de  Wed Mar 17 13:10:46 2010
From: frank at bueltge.de (Frank Bueltge)
Date: Wed, 17 Mar 2010 14:10:46 +0100
Subject: [wp-hackers] debugging a wordpress hook
In-Reply-To: <160735.340.qm@web45311.mail.sp1.yahoo.com>
References: <28B6CA2A-DF6C-4DC8-8259-AF3E8F525589@striderweb.com> 
	<160735.340.qm@web45311.mail.sp1.yahoo.com>
Message-ID: <db047a771003170610p632a61d5y72e600490c66ddde@mail.gmail.com>

A small and great solution:
http://gaarai.com/wordpress-plugins/wp-developer-assistant/
not exactly for debug one hook

Best wishes
Frank




On Wed, Mar 17, 2010 at 2:07 PM, Uwiuw Bakawan.com <uwiuw at yahoo.com.sg> wrote:
> what do you meant ? is it about changing core file while on production stage ?
>
> --- On Wed, 17/3/10, Stephen Rider <wp-hackers at striderweb.com> wrote:
>
>> From: Stephen Rider <wp-hackers at striderweb.com>
>> Subject: Re: [wp-hackers] debugging a wordpress hook
>> To: wp-hackers at lists.automattic.com
>> Date: Wednesday, 17 March, 2010, 9:00 PM
>> Assuming this is temporary, I would
>> just do a quick hack of the do_action and apply_filter
>> functions.
>>
>> Stephen
>>
>> On Mar 17, 2010, at 7:49 AM, Uwiuw Bakawan.com wrote:
>>
>> > i'm and my friend have this kind of weird question. Is
>> there any way to hook a debug function into a hook such as
>> 'init' and retrieve every php function's name whose operates
>> on this particular hook ?
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From uwiuw at yahoo.com.sg  Wed Mar 17 13:19:53 2010
From: uwiuw at yahoo.com.sg (Uwiuw Bakawan.com)
Date: Wed, 17 Mar 2010 06:19:53 -0700 (PDT)
Subject: [wp-hackers] debugging a wordpress hook
In-Reply-To: <911D03C6-EC3C-40A8-8376-BB5BD9C940BB@newclarity.net>
Message-ID: <863447.18203.qm@web45313.mail.sp1.yahoo.com>

@mikeschinkel : thank you very much.  i believe your answer has fulfill my question. ;0 . i never look into $_GLOBAL cause when we try to dump it, its array too long ;D now i know where too look for. 

@Frank Bueltge :  i believe this is one of plugin i put in my arsenal when doing wp custom work. As you can said, it only work on general. Maybe i'm just lazy too see into the code to utilize it...thank you ;D

--- On Wed, 17/3/10, Mike Schinkel <mikeschinkel at newclarity.net> wrote:

> From: Mike Schinkel <mikeschinkel at newclarity.net>
> Subject: Re: [wp-hackers] debugging a wordpress hook
> To: wp-hackers at lists.automattic.com
> Date: Wednesday, 17 March, 2010, 9:07 PM
> Hi Uwiuw,
> 
> On Mar 17, 2010, at 8:49 AM, Uwiuw Bakawan.com wrote:
> > i'm and my friend have this kind of weird question. Is
> there any way to hook a debug function into a hook such as
> 'init' and retrieve every php function's name whose operates
> on this particular hook ?
> 
> 
> If I understand your question, you don't need a hook you
> just need this:
> 
> <?php 
> /*
> Template Name: Hook Dump
> */
> header('Content-type:text/plain');
> var_dump($GLOBALS['wp_filter'][$_GET['hook']]); 
> ?>
> 
> Save this page template, create a page called "debug" that
> uses it, and then you can check any hook you want via a URL
> parameter, i.e.:
> 
> http://example.com/debug/?hook=init
> 
> HTH.
> 
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


      

From mikeschinkel at newclarity.net  Wed Mar 17 13:36:00 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 17 Mar 2010 09:36:00 -0400
Subject: [wp-hackers] debugging a wordpress hook
In-Reply-To: <863447.18203.qm@web45313.mail.sp1.yahoo.com>
References: <863447.18203.qm@web45313.mail.sp1.yahoo.com>
Message-ID: <B94C2C93-40D4-45CF-AB6D-ED99FD9D3B20@newclarity.net>

> @mikeschinkel : thank you very much.  i believe your answer has fulfill my question. ;0 . i never look into $_GLOBAL cause when we try to dump it, its array too long ;D now i know where too look for. 

Note that it's $GLOBALS and not $_GLOBAL.

Also, if you really want to figure out what's going on internally download PhpStorm and get the debugger set up.  It works like a charm.

-Mike

On Mar 17, 2010, at 9:19 AM, Uwiuw Bakawan.com wrote:

> @mikeschinkel : thank you very much.  i believe your answer has fulfill my question. ;0 . i never look into $_GLOBAL cause when we try to dump it, its array too long ;D now i know where too look for. 
> 
> @Frank Bueltge :  i believe this is one of plugin i put in my arsenal when doing wp custom work. As you can said, it only work on general. Maybe i'm just lazy too see into the code to utilize it...thank you ;D
> 
> --- On Wed, 17/3/10, Mike Schinkel <mikeschinkel at newclarity.net> wrote:
> 
>> From: Mike Schinkel <mikeschinkel at newclarity.net>
>> Subject: Re: [wp-hackers] debugging a wordpress hook
>> To: wp-hackers at lists.automattic.com
>> Date: Wednesday, 17 March, 2010, 9:07 PM
>> Hi Uwiuw,
>> 
>> On Mar 17, 2010, at 8:49 AM, Uwiuw Bakawan.com wrote:
>>> i'm and my friend have this kind of weird question. Is
>> there any way to hook a debug function into a hook such as
>> 'init' and retrieve every php function's name whose operates
>> on this particular hook ?
>> 
>> 
>> If I understand your question, you don't need a hook you
>> just need this:
>> 
>> <?php 
>> /*
>> Template Name: Hook Dump
>> */
>> header('Content-type:text/plain');
>> var_dump($GLOBALS['wp_filter'][$_GET['hook']]); 
>> ?>
>> 
>> Save this page template, create a page called "debug" that
>> uses it, and then you can check any hook you want via a URL
>> parameter, i.e.:
>> 
>> http://example.com/debug/?hook=init
>> 
>> HTH.
>> 
>> -Mike
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From raphael.droz at gmail.com  Wed Mar 17 16:59:43 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Wed, 17 Mar 2010 17:59:43 +0100
Subject: [wp-hackers] how to do a single-instance widget with the new API
Message-ID: <4BA10A7F.4020703@gmail.com>

Hi,
I've just done my first widget using the new API.
The abundance of documentation helped a lot anyway I'm now blocked by
what, at a first look, didn't seem a huge issue but ...

This widget uses jquery to request the server asynchronously.
On the server side, in my widget/plugin directory I have an action.php
which :
define('DOING_AJAX', true);
include('../../../wp-config.php');
include(WP_CONTENT_DIR . '/../wp-admin/includes/admin.php');
# then sends the answer.

The problem is that get_option('widget_wpsympa'); returns nested arrays
of the (possibly) several instances of the widget while it's aimed to be 
unique.

Should I forget about the new widget API ?
Should I wait for a WP 3 new option in $widget_ops ?
Or is there a way to obtain the specific instance calling in action.php ?

Thank you for your answers.

Raph

From wp at andrewnacin.com  Wed Mar 17 17:08:43 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 17 Mar 2010 13:08:43 -0400
Subject: [wp-hackers] how to do a single-instance widget with the new API
In-Reply-To: <4BA10A7F.4020703@gmail.com>
References: <4BA10A7F.4020703@gmail.com>
Message-ID: <4cc4de141003171008p5544f61bnda6db20fdb43a951@mail.gmail.com>

Before getting into multiple widget instances, I'd start with:
http://codex.wordpress.org/AJAX_in_Plugins

<http://codex.wordpress.org/AJAX_in_Plugins>Because:
define('DOING_AJAX', true);
include('../../../wp-config.php');
include(WP_CONTENT_DIR . '/../wp-admin/includes/admin.php');

Is not the right way to do it.

From otto at ottodestruct.com  Wed Mar 17 17:55:28 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 17 Mar 2010 12:55:28 -0500
Subject: [wp-hackers] how to do a single-instance widget with the new API
In-Reply-To: <4BA10A7F.4020703@gmail.com>
References: <4BA10A7F.4020703@gmail.com>
Message-ID: <161617691003171055i17a96f60g32483766864bca4d@mail.gmail.com>

Firstly, yeah, that's the wrong way to do AJAX. Like he said.

Secondly, single instance widgets are the tool of the devil. Don't do
it. Make it work multiply.

Third: If you're inheriting from WP_Widget, then you have a $number.
That $number is something you'll find useful for looking in that
array.

-Otto



2010/3/17 Rapha?l Droz <raphael.droz at gmail.com>:
> Hi,
> I've just done my first widget using the new API.
> The abundance of documentation helped a lot anyway I'm now blocked by
> what, at a first look, didn't seem a huge issue but ...
>
> This widget uses jquery to request the server asynchronously.
> On the server side, in my widget/plugin directory I have an action.php
> which :
> define('DOING_AJAX', true);
> include('../../../wp-config.php');
> include(WP_CONTENT_DIR . '/../wp-admin/includes/admin.php');
> # then sends the answer.
>
> The problem is that get_option('widget_wpsympa'); returns nested arrays
> of the (possibly) several instances of the widget while it's aimed to be
> unique.
>
> Should I forget about the new widget API ?
> Should I wait for a WP 3 new option in $widget_ops ?
> Or is there a way to obtain the specific instance calling in action.php ?
>
> Thank you for your answers.
>
> Raph
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Mar 17 17:56:43 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 17 Mar 2010 12:56:43 -0500
Subject: [wp-hackers] how to do a single-instance widget with the new API
In-Reply-To: <161617691003171055i17a96f60g32483766864bca4d@mail.gmail.com>
References: <4BA10A7F.4020703@gmail.com>
	<161617691003171055i17a96f60g32483766864bca4d@mail.gmail.com>
Message-ID: <161617691003171056t7dfaf207jf8e42ca7e3196c01@mail.gmail.com>

Oops. Forgot. You can reference your number with $this->number.

-Otto



On Wed, Mar 17, 2010 at 12:55 PM, Otto <otto at ottodestruct.com> wrote:
> Firstly, yeah, that's the wrong way to do AJAX. Like he said.
>
> Secondly, single instance widgets are the tool of the devil. Don't do
> it. Make it work multiply.
>
> Third: If you're inheriting from WP_Widget, then you have a $number.
> That $number is something you'll find useful for looking in that
> array.
>
> -Otto
>
>
>
> 2010/3/17 Rapha?l Droz <raphael.droz at gmail.com>:
>> Hi,
>> I've just done my first widget using the new API.
>> The abundance of documentation helped a lot anyway I'm now blocked by
>> what, at a first look, didn't seem a huge issue but ...
>>
>> This widget uses jquery to request the server asynchronously.
>> On the server side, in my widget/plugin directory I have an action.php
>> which :
>> define('DOING_AJAX', true);
>> include('../../../wp-config.php');
>> include(WP_CONTENT_DIR . '/../wp-admin/includes/admin.php');
>> # then sends the answer.
>>
>> The problem is that get_option('widget_wpsympa'); returns nested arrays
>> of the (possibly) several instances of the widget while it's aimed to be
>> unique.
>>
>> Should I forget about the new widget API ?
>> Should I wait for a WP 3 new option in $widget_ops ?
>> Or is there a way to obtain the specific instance calling in action.php ?
>>
>> Thank you for your answers.
>>
>> Raph
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>

From ericgribkoff at gmail.com  Wed Mar 17 21:42:27 2010
From: ericgribkoff at gmail.com (Eric Gribkoff)
Date: Wed, 17 Mar 2010 14:42:27 -0700
Subject: [wp-hackers] [GSOC] Just apply, or talk to developers first?
In-Reply-To: <op.u9pgw9t2spxmuu@ho.st>
References: <15ef15201003170123h42cdf671p49d37368c0029d67@mail.gmail.com>
	<op.u9pgw9t2spxmuu@ho.st>
Message-ID: <15ef15201003171442v5e4068ddj234fc4ba0c5efc95@mail.gmail.com>

Thanks for the response, Dion. I'm including a first-draft proposal here.
Any feedback or advice is greatly appreciated!

  Personal Details

   -

   Name: Eric Gribkoff
   -

   Email: ericgribkoff at gmail.com
   -

   GTalk (for IM and voice chats): ericgribkoff at gmail.com

Project Proposal

I would like to expand and improve upon the WordPress User Roles system.

On my own blog, it would be useful to be able to assign category-specific
Contributor status to users. Many blogs could benefit from a similar
feature, allowing roles to only apply to a specific category or categories.

Additionally, the current roles are somewhat limited. I would like to
implement features allowing existing roles to be modified on a user-by-user
basis.

I can also see it being useful to be able to create custom roles. Rather
than creating ten users and then editing each individually to have the roles
and permissions desired, a new role with its own capabilities could be
defined and easily applied to the users.
Schedule of Deliverables

The deliverables would include a flexible, fully functioning user roles
system that allows for category-restricted user roles, user-by-user role
modifications, and custom role templates.

I would not have school obligations over the summer. I would still be
working, but less than 15 hours per week, which leaves lots of time for
coding.
Open Source Development Experience

I've contributed one plugin to the WordPress repository. It's a quote
display widget. The administrator can choose a category of quotes to
display, and on the frontend quotes are dynamically retrieved from a
database maintained on the Google App Engine. I wrote the serving
application on GAE as well, but it's very simple, doing little more than
fetching a random quote.

The quote plugin is located here:
http://wordpress.org/extend/plugins/ez-quote/stats/

Besides WordPress, I've also worked quite a bit with CodeIgniter, ZenCart,
and other open source PHP applications. But that has just been on personal
applications, and I don't (yet) have any contributions of my own released.
Work/Internship Experience

I work as a PHP developer part-time. I've been programming in PHP for over
two years, and before that used mostly Perl. I have experience installing
and customizing WordPress, ZenCart, etc., both for myself and clients.
Academic Experience

I'm studying Computer Science at Sacramento Community College in California
The Computer Science curriculum moves a little slowly for me, but the Math
coursework is excellent. I've maintained a 4.0 GPA for the last four
semesters since I began majoring in CS.

In my spare time, I do whatever I can to become a better programmer. I'm
currently working my way through an algorithms textbook from UC Berkeley. I
also enjoy Project Euler problems, particularly as they give me a chance to
try out different languages and see how the different solutions look in
alternate methodologies. Past languages used include PHP, Javascript, C,
Python, and Java.
Why WordPress

I've always wanted to contribute to open source projects, but always been a
little unsure how to start. WordPress's documentation helped me break
through that barrier over winter break last year by enabling me to write and
release my first plugin. The Summer of Code project is an opportunity to
take my contributions a step further.

The general advice I've seen on contributing to open source projects is to
find something you would like to use and ?scratch your own itch?. This is
definitely a contribution that I would use and benefit from on my own blog,
and I'd like to have the opportunity to communicate with experienced
WordPress developers while making it a reality.


Thanks again,

Eric Gribkoff


On Wed, Mar 17, 2010 at 1:35 AM, Dion Hulse (dd32) <wordpress at dd32.id.au>wrote:

> Hi Eric,
> I'd suggest you post your entire proposal on this mailing list before
> applying, That'll allow for you to take on board other peoples suggestions
> as well as a learning experience of what else is out there and available
> currently.
>
> I know there are a lot of people wanting a improved role system, and i'm
> aware of 2 (possibly 3) people who'll write something soon if nothing comes
> to fruition..
>
> In the past, i believe posting here was one of the prerequisites, just to
> ensure that your final application is as good as it can be.
>
> Cheers
> Dion Hulse / dd32
> Contact:
>  e: contact at dd32.id.au
>  Web: http://dd32.id.au/
>
>
> On Wed, 17 Mar 2010 20:23:12 +1200, Eric Gribkoff <ericgribkoff at gmail.com>
> wrote:
>
>  I'm interested in applying for the Google Summer of Code with WordPress.
>> The
>> Google FAQ suggests contacting the developers at the organization you're
>> interested in prior to applying. So that's what I'm trying to do here :-)
>>
>> From the Ideas page, I'm very interested in either implementing improved
>> user roles, because that's something I've wished to have on my own blog,
>> or
>> the capability to automatically migrate a WordPress installation from one
>> host to another.
>>
>> I've been a web developer using primarily PHP for a little over two years
>> now. I have experience with WordPress, and I've released one small plugin
>> @
>> http://wordpress.org/extend/plugins/ez-quote/. It hasn't gotten tons of
>> downloads, but it was a great learning experience.
>>
>> Is there anyone I should talk to about potentially working on WordPress
>> during the GSOC? Or should I just wait till after the 18th and submit my
>> application?
>>
>> Thanks for your time,
>> Eric Gribkoff
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 

Eric Gribkoff
Sacramento City College
ericgribkoff at gmail.com

From sosingus at yahoo.com  Thu Mar 18 13:52:19 2010
From: sosingus at yahoo.com (Sofija)
Date: Thu, 18 Mar 2010 06:52:19 -0700 (PDT)
Subject: [wp-hackers] Filtering post_link
Message-ID: <580916.33413.qm@web35906.mail.mud.yahoo.com>

Hi,

I'm writing plugin where I would like to filter permalink and I have found that post_link would be a good start. But, I would like to control when to use that filter and when not.

For example, I do not want this filter applied when editing post or when displaying previous_post_link or next_post_link.

I assume proper thing might be to determine if current page is admin post edit, or if current page is_post(I see that function is depreciated and has no suggestion for other in the docs)...

Any help?

Thanks!

Sofija


      

From andrew at graymerica.com  Thu Mar 18 14:01:43 2010
From: andrew at graymerica.com (Andrew Gray)
Date: Thu, 18 Mar 2010 10:01:43 -0400
Subject: [wp-hackers] Persistent connections
In-Reply-To: <580916.33413.qm@web35906.mail.mud.yahoo.com>
References: <580916.33413.qm@web35906.mail.mud.yahoo.com>
Message-ID: <7EA302F6-9CFF-4173-A21D-6564765BA62B@graymerica.com>

Does anyone have an opinion on using persistent DB connections (altering the DB.php to user mysql_pconnect instead)
Has anyone with a high volume site seen an improvement by making this change.  

I am looking for a way to stop getting limited by the max number of connections from my host.
I get about 5 Million page views per month and have a lot of commentors (so the page level caching and DB caching is not alway appropriate.  My pages average 30 DB queries per page and under about .4 second query time)
I am hosted at the Rackspace Cloud and have a max connection setting of 500.   

thanks for the advice,

Andrew

From matt at sivel.net  Thu Mar 18 15:35:31 2010
From: matt at sivel.net (Matt Martz)
Date: Thu, 18 Mar 2010 10:35:31 -0500
Subject: [wp-hackers] Persistent connections
Message-ID: <9f34d236-9252-4cbb-9423-bf17eb17a3fb@email.android.com>

Assuming for a minute that you are using cloud servers try downloading mysqltuner.pl and running it.  It could show you a number of settingss that you may be able to tweak to get better performance out of mysql.

"Andrew Gray" <andrew at graymerica.com> wrote:

>Does anyone have an opinion on using persistent DB connections (altering the DB.php to user mysql_pconnect instead)
>Has anyone with a high volume site seen an improvement by making this change.  
>
>I am looking for a way to stop getting limited by the max number of connections from my host.
>I get about 5 Million page views per month and have a lot of commentors (so the page level caching and DB caching is not alway appropriate.  My pages average 30 DB queries per page and under about .4 second query time)
>I am hosted at the Rackspace Cloud and have a max connection setting of 500.   
>
>thanks for the advice,
>
>Andrew
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers

--
Matt Martz
matt at sivel.net

From johnbillion+wp at gmail.com  Thu Mar 18 16:42:17 2010
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu, 18 Mar 2010 16:42:17 +0000
Subject: [wp-hackers] Menu schema
Message-ID: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>

Just starting this thread to try and move some conversation off of
ticket #11817 (Better Site Menu Management).

It's been pointed out that the schema of the new menu management
functionality might not be optimal.

An issue brought up by ceenz is that menu items are stored in the
posts table (with a post_type of 'nav_menu_item'). This introduces the
following problems (issues by ceenz and myself):

 * Menu items contain very little data that relates to posts and
therefore many fields are not relevant (for example, comment_status
when a menu item relates to a taxonomy term).
 * This introduces data duplication. The post title (or taxonomy
title, object title, etc), post content, comment status, post status,
author, parent relationship, comment count, etc etc, are all
duplicated. Although I've not dug into the code, it also appears that
in the case where a nav menu item relates to a post or a page, some of
these fields (comment_status and post_author at least) don't actually
contain the correct values relating to the post or page. Whether this
is a WIP or not I'm not sure.
 * There is no field in this table to simply relate to the
corresponding object (this is why all our data is duplicated).  *
Because the post_status field is used as a nav menu item descriptor,
this field does not relate to the object that the menu item links to.
 * We now have two places where external links are stored - the links
table and the posts table.

My proposed solution is that menus should instead be treated as a
taxonomy (in fact nacin has already stated [1] that menus are a
taxonomy). We could introcude a taxonomy called 'menu' and each menu
could be a taxonomy term (menu 1, menu 2, etc).

Each menu item would be a term relationship. This handles any menu
item that is in the posts table. For any menu item that is an external
link, we could either create an entry in the posts table like we do
with the current menu system or think about using the links table
instead (but this might not sit well with themes that print out every
link in the links table).

For menu items that are a taxonomy term (eg. category X), this will
need a little work. Simply using the object_id field in the
taxonomy_term_relationships table would introduce ambiguity as an
object in this table only relates to one object type by default
(whichever object_type is specified when the taxonomy is registered
(see register_taxonomy()). I propose that we introduce a new field in
the taxonomy_term_relationships table called 'object_type' and this is
used to identify which object type it relates to.

By treating menus as taxonomies, we retain a correct relational
structure between menus and the objects in them. As a bonus, there is
a (currently unused) term_order field in the
taxonomy_term_relationships table which could be used to describe the
order of items in our menu (this would even work well with nested
menus as the term_taxonomy table has a parent field).

Discuss please!

John

[1] http://core.trac.wordpress.org/ticket/11817#comment:334

From johnbillion+wp at gmail.com  Thu Mar 18 16:52:42 2010
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu, 18 Mar 2010 16:52:42 +0000
Subject: [wp-hackers] Menu schema
In-Reply-To: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
Message-ID: <1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>

Whoops, looks like I made a silly there. Of course, nav menus are
already a taxonomy!

So my main issue is in creating new entries in the posts table to use
as menu items. My suggested solution of adding an object type
indicator to each term relationship still stands. This allows us to
use multiple object types within one taxonomy and therefore removes
all the issues around storing nav menu items in the posts table.

Discuss please!

John

On Thu, Mar 18, 2010 at 4:42 PM, John Blackbourn
<johnbillion+wp at gmail.com> wrote:
> Just starting this thread to try and move some conversation off of
> ticket #11817 (Better Site Menu Management).
>
> It's been pointed out that the schema of the new menu management
> functionality might not be optimal.
>
> An issue brought up by ceenz is that menu items are stored in the
> posts table (with a post_type of 'nav_menu_item'). This introduces the
> following problems (issues by ceenz and myself):
>
> ?* Menu items contain very little data that relates to posts and
> therefore many fields are not relevant (for example, comment_status
> when a menu item relates to a taxonomy term).
> ?* This introduces data duplication. The post title (or taxonomy
> title, object title, etc), post content, comment status, post status,
> author, parent relationship, comment count, etc etc, are all
> duplicated. Although I've not dug into the code, it also appears that
> in the case where a nav menu item relates to a post or a page, some of
> these fields (comment_status and post_author at least) don't actually
> contain the correct values relating to the post or page. Whether this
> is a WIP or not I'm not sure.
> ?* There is no field in this table to simply relate to the
> corresponding object (this is why all our data is duplicated). ?*
> Because the post_status field is used as a nav menu item descriptor,
> this field does not relate to the object that the menu item links to.
> ?* We now have two places where external links are stored - the links
> table and the posts table.
>
> My proposed solution is that menus should instead be treated as a
> taxonomy (in fact nacin has already stated [1] that menus are a
> taxonomy). We could introcude a taxonomy called 'menu' and each menu
> could be a taxonomy term (menu 1, menu 2, etc).
>
> Each menu item would be a term relationship. This handles any menu
> item that is in the posts table. For any menu item that is an external
> link, we could either create an entry in the posts table like we do
> with the current menu system or think about using the links table
> instead (but this might not sit well with themes that print out every
> link in the links table).
>
> For menu items that are a taxonomy term (eg. category X), this will
> need a little work. Simply using the object_id field in the
> taxonomy_term_relationships table would introduce ambiguity as an
> object in this table only relates to one object type by default
> (whichever object_type is specified when the taxonomy is registered
> (see register_taxonomy()). I propose that we introduce a new field in
> the taxonomy_term_relationships table called 'object_type' and this is
> used to identify which object type it relates to.
>
> By treating menus as taxonomies, we retain a correct relational
> structure between menus and the objects in them. As a bonus, there is
> a (currently unused) term_order field in the
> taxonomy_term_relationships table which could be used to describe the
> order of items in our menu (this would even work well with nested
> menus as the term_taxonomy table has a parent field).
>
> Discuss please!
>
> John
>
> [1] http://core.trac.wordpress.org/ticket/11817#comment:334
>

From andrew at graymerica.com  Thu Mar 18 17:59:00 2010
From: andrew at graymerica.com (Andrew Gray)
Date: Thu, 18 Mar 2010 13:59:00 -0400
Subject: [wp-hackers] Persistent connections
In-Reply-To: <9f34d236-9252-4cbb-9423-bf17eb17a3fb@email.android.com>
References: <9f34d236-9252-4cbb-9423-bf17eb17a3fb@email.android.com>
Message-ID: <B08893BD-0D58-40DC-8E1E-E2458BB2C8B5@graymerica.com>

Thanks for the idea, but Rackspace Cloud Sites does not let me make changes to the mysql.   Rackspace Sites is a shared LAMP stack with minimal options, but no support requirement on my end.

it is a different option then the Rackspace cloud sites, which gives you a virtual server.  All I get is FTP access and .htaccess for Apache and no real changes to MySQL.  

Andrew


On Mar 18, 2010, at 11:35 AM, Matt Martz wrote:

> Assuming for a minute that you are using cloud servers try downloading mysqltuner.pl and running it.  It could show you a number of settingss that you may be able to tweak to get better performance out of mysql.
> 
> "Andrew Gray" <andrew at graymerica.com> wrote:
> 
>> Does anyone have an opinion on using persistent DB connections (altering the DB.php to user mysql_pconnect instead)
>> Has anyone with a high volume site seen an improvement by making this change.  
>> 
>> I am looking for a way to stop getting limited by the max number of connections from my host.
>> I get about 5 Million page views per month and have a lot of commentors (so the page level caching and DB caching is not alway appropriate.  My pages average 30 DB queries per page and under about .4 second query time)
>> I am hosted at the Rackspace Cloud and have a max connection setting of 500.   
>> 
>> thanks for the advice,
>> 
>> Andrew
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> --
> Matt Martz
> matt at sivel.net_______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From peter at avirtualhome.com  Thu Mar 18 18:04:48 2010
From: peter at avirtualhome.com (Peter van der Does)
Date: Thu, 18 Mar 2010 14:04:48 -0400
Subject: [wp-hackers] Persistent connections
In-Reply-To: <7EA302F6-9CFF-4173-A21D-6564765BA62B@graymerica.com>
References: <580916.33413.qm@web35906.mail.mud.yahoo.com>
	<7EA302F6-9CFF-4173-A21D-6564765BA62B@graymerica.com>
Message-ID: <20100318140448.561b9966@montecarlo.grandprix.int>

On Thu, 18 Mar 2010 10:01:43 -0400
Andrew Gray <andrew at graymerica.com> wrote:

> Does anyone have an opinion on using persistent DB connections
> (altering the DB.php to user mysql_pconnect instead) Has anyone with
> a high volume site seen an improvement by making this change.  
> 
> I am looking for a way to stop getting limited by the max number of
> connections from my host. I get about 5 Million page views per month
> and have a lot of commentors (so the page level caching and DB
> caching is not alway appropriate.  My pages average 30 DB queries per
> page and under about .4 second query time) I am hosted at the
> Rackspace Cloud and have a max connection setting of 500.   
> 
> thanks for the advice,
> 
> Andrew
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

I don't think using persistent connections will solve your problem.
WordPress opens a database connection for every page generated and
closes it at the end.
If you use persistent connections the connection will not close and
will be available for the next PHP instance. The gain you can have is
not having the overhead of opening and closing of the DB connection. In
theory your site will become faster. (This is not always the case,
misconfiguration can lead to slower response or even complete stall)

In other words, with and without persistent connections you can only
have 500 connections at the same time.

What you need to look at is how fast can a connection be freed, so how
fast is the page build up in WordPress. It makes sense that the quicker
you free up a connection the quicker it can be reused.



-- 
Peter van der Does

GPG key: E77E8E98

IRC: Ganseki on irc.freenode.net
Twitter: @petervanderdoes

WordPress Plugin Developer
Blog: http://blog.avirtualhome.com
Forums: http://forums.avirtualhome.com
Twitter: @avhsoftware

From jdub at bethesignal.org  Thu Mar 18 18:22:31 2010
From: jdub at bethesignal.org (Jeff Waugh)
Date: Fri, 19 Mar 2010 05:22:31 +1100
Subject: [wp-hackers] Persistent connections
In-Reply-To: <7EA302F6-9CFF-4173-A21D-6564765BA62B@graymerica.com>
References: <580916.33413.qm@web35906.mail.mud.yahoo.com>
	<7EA302F6-9CFF-4173-A21D-6564765BA62B@graymerica.com>
Message-ID: <20100318182231.GI1954@sliver>

<quote who="Andrew Gray">

> Does anyone have an opinion on using persistent DB connections (altering
> the DB.php to user mysql_pconnect instead) Has anyone with a high volume
> site seen an improvement by making this change.  

There's basically no point -- unlike many other DB platforms, the latency
and overhead of bringing up a MySQL connection is practically nothing. You
are *vastly* more likely to be waiting for all kinds of other things. :-)

- Jeff

-- 
The Great Australian Internet Blackout   http://www.internetblackout.com.au/
 
     "It's pretty hard to reinvent the wheel in Python, because so many
               awesome wheels already exist." - Colin Walters

From jpotkanski at tribune.com  Thu Mar 18 18:22:42 2010
From: jpotkanski at tribune.com (Potkanski, Jason)
Date: Thu, 18 Mar 2010 13:22:42 -0500
Subject: [wp-hackers] Persistent connections
In-Reply-To: <B08893BD-0D58-40DC-8E1E-E2458BB2C8B5@graymerica.com>
Message-ID: <C7C7D99F.203E%jpotkanski@tribune.com>

Are other plugins in use, such as WP Super Cache?

Is Squid (Caching proxy) in front of your Apache server an option?

Can the cloud site make external MySQL calls? You can create a VPS or dedicated/managed server at Rackspace to get around the 500 connection limit and point the wp-config to a server elsewhere.

--

Jason Potkanski
Tribune Technology

On 3/18/10 11:59 AM, "Andrew Gray" <andrew at graymerica.com> wrote:

Thanks for the idea, but Rackspace Cloud Sites does not let me make changes to the mysql.   Rackspace Sites is a shared LAMP stack with minimal options, but no support requirement on my end.

it is a different option then the Rackspace cloud sites, which gives you a virtual server.  All I get is FTP access and .htaccess for Apache and no real changes to MySQL.

Andrew


On Mar 18, 2010, at 11:35 AM, Matt Martz wrote:

> Assuming for a minute that you are using cloud servers try downloading mysqltuner.pl and running it.  It could show you a number of settingss that you may be able to tweak to get better performance out of mysql.
>
> "Andrew Gray" <andrew at graymerica.com> wrote:
>
>> Does anyone have an opinion on using persistent DB connections (altering the DB.php to user mysql_pconnect instead)
>> Has anyone with a high volume site seen an improvement by making this change.
>>
>> I am looking for a way to stop getting limited by the max number of connections from my host.
>> I get about 5 Million page views per month and have a lot of commentors (so the page level caching and DB caching is not alway appropriate.  My pages average 30 DB queries per page and under about .4 second query time)
>> I am hosted at the Rackspace Cloud and have a max connection setting of 500.
>>
>> thanks for the advice,
>>
>> Andrew
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> --
> Matt Martz
> matt at sivel.net_______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Thu Mar 18 18:52:53 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 18 Mar 2010 14:52:53 -0400
Subject: [wp-hackers] Menu schema
In-Reply-To: <1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>
Message-ID: <5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>

Putting menus in taxonomy seems more appropriate to me. 

-Mike 
P.S. Can you do the code work to make the change?  My guess is that it's much more likely to happen if you provide the code. (That's what I've been learning from my discussions on the list, fwiw.)

On Mar 18, 2010, at 12:52 PM, John Blackbourn wrote:

> Whoops, looks like I made a silly there. Of course, nav menus are
> already a taxonomy!
> 
> So my main issue is in creating new entries in the posts table to use
> as menu items. My suggested solution of adding an object type
> indicator to each term relationship still stands. This allows us to
> use multiple object types within one taxonomy and therefore removes
> all the issues around storing nav menu items in the posts table.
> 
> Discuss please!
> 
> John
> 
> On Thu, Mar 18, 2010 at 4:42 PM, John Blackbourn
> <johnbillion+wp at gmail.com> wrote:
>> Just starting this thread to try and move some conversation off of
>> ticket #11817 (Better Site Menu Management).
>> 
>> It's been pointed out that the schema of the new menu management
>> functionality might not be optimal.
>> 
>> An issue brought up by ceenz is that menu items are stored in the
>> posts table (with a post_type of 'nav_menu_item'). This introduces the
>> following problems (issues by ceenz and myself):
>> 
>>  * Menu items contain very little data that relates to posts and
>> therefore many fields are not relevant (for example, comment_status
>> when a menu item relates to a taxonomy term).
>>  * This introduces data duplication. The post title (or taxonomy
>> title, object title, etc), post content, comment status, post status,
>> author, parent relationship, comment count, etc etc, are all
>> duplicated. Although I've not dug into the code, it also appears that
>> in the case where a nav menu item relates to a post or a page, some of
>> these fields (comment_status and post_author at least) don't actually
>> contain the correct values relating to the post or page. Whether this
>> is a WIP or not I'm not sure.
>>  * There is no field in this table to simply relate to the
>> corresponding object (this is why all our data is duplicated).  *
>> Because the post_status field is used as a nav menu item descriptor,
>> this field does not relate to the object that the menu item links to.
>>  * We now have two places where external links are stored - the links
>> table and the posts table.
>> 
>> My proposed solution is that menus should instead be treated as a
>> taxonomy (in fact nacin has already stated [1] that menus are a
>> taxonomy). We could introcude a taxonomy called 'menu' and each menu
>> could be a taxonomy term (menu 1, menu 2, etc).
>> 
>> Each menu item would be a term relationship. This handles any menu
>> item that is in the posts table. For any menu item that is an external
>> link, we could either create an entry in the posts table like we do
>> with the current menu system or think about using the links table
>> instead (but this might not sit well with themes that print out every
>> link in the links table).
>> 
>> For menu items that are a taxonomy term (eg. category X), this will
>> need a little work. Simply using the object_id field in the
>> taxonomy_term_relationships table would introduce ambiguity as an
>> object in this table only relates to one object type by default
>> (whichever object_type is specified when the taxonomy is registered
>> (see register_taxonomy()). I propose that we introduce a new field in
>> the taxonomy_term_relationships table called 'object_type' and this is
>> used to identify which object type it relates to.
>> 
>> By treating menus as taxonomies, we retain a correct relational
>> structure between menus and the objects in them. As a bonus, there is
>> a (currently unused) term_order field in the
>> taxonomy_term_relationships table which could be used to describe the
>> order of items in our menu (this would even work well with nested
>> menus as the term_taxonomy table has a parent field).
>> 
>> Discuss please!
>> 
>> John
>> 
>> [1] http://core.trac.wordpress.org/ticket/11817#comment:334
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From andrew at graymerica.com  Thu Mar 18 20:42:41 2010
From: andrew at graymerica.com (Andrew Gray)
Date: Thu, 18 Mar 2010 16:42:41 -0400
Subject: [wp-hackers] Persistent connections
In-Reply-To: <C7C7D99F.203E%jpotkanski@tribune.com>
References: <C7C7D99F.203E%jpotkanski@tribune.com>
Message-ID: <4948EBFB-FCB2-4A24-BED3-BA1D0853568A@graymerica.com>

Thanks for all the great ideas.  The consensus is that persistent connections will not matter,   I have altered the wp-db.php file to try and reconnect to the DB after waiting a random number of micro-seconds if it fails.   It tries four times before giving up.  It waits up to 2 seconds if it fails 4 times.    Using this method I was able to sustain 250 concurrent users in my siege testing (without caching).  I am going to roll this out live tonight. This should reduce the problem with max connections.  Right now this is in the core code, but I will try and make a plugin out of it to save hacking the core.

I am basically trying to get all the performance I can out of the rack space cloud sites because there is no maintenance hassle with it and it is pretty cheap for the traffic I am doing. It costs me less than $250 per month in charges and overage fees to do almost a TB of traffic each month and almost 5M page views with a very complicated wordpress site.   Even with the DB issues, random outages only last about 4-5 minutes and the site is fast the whole time.  We are averaging about 99.8% uptime, which is fine for me.  It is not a bank website, just a place for coupons and online deals..  We made the db error page pretty and put lots of info on them.  Now that I am using the CDN it is even cheaper since I am not paying for RS bandwidth for all my images.

On Mar 18, 2010, at 2:22 PM, Potkanski, Jason wrote:

> Are other plugins in use, such as WP Super Cache?
> 

I am using W3 Cache, but it does not cache people who have posted a comment.  We are adding more interactive features to the site that require DB connections, but I am improving the caching. I am using wordpress Transients_API to cache elements of my side bar and footer, but  I want to make it even faster. 

> Is Squid (Caching proxy) in front of your Apache server an option?
> 

Squid is something I have not looked at.  I am using MaxCDN for the images, but not the PHP pages.

> Can the cloud site make external MySQL calls? You can create a VPS or dedicated/managed server at Rackspace to get around the 500 connection limit and point the wp-config to a server elsewhere.
> 

I tried this external site and it was too slow across their network.  They do not have a backplane to connect to their Virtual Servers.  that would be a great solutions.  The cloud sites front end with a 2 slave / 1 master DB would be pretty hot if it was faster, but there was too much latency between cloud sites and servers for me.  Also, I am really trying to stay away from Sys Admin work, and there is no managed cloud sites offering.  I have not asked about a dedicated server for DB only yet.



Thanks for all the helpful info.  I wish I had gotten on this list earlier,  this is great,

Andrew



> --
> 
> Jason Potkanski
> Tribune Technology
> 
> On 3/18/10 11:59 AM, "Andrew Gray" <andrew at graymerica.com> wrote:
> 
> Thanks for the idea, but Rackspace Cloud Sites does not let me make changes to the mysql.   Rackspace Sites is a shared LAMP stack with minimal options, but no support requirement on my end.
> 
> it is a different option then the Rackspace cloud sites, which gives you a virtual server.  All I get is FTP access and .htaccess for Apache and no real changes to MySQL.
> 
> Andrew
> 
> 
> On Mar 18, 2010, at 11:35 AM, Matt Martz wrote:
> 
>> Assuming for a minute that you are using cloud servers try downloading mysqltuner.pl and running it.  It could show you a number of settingss that you may be able to tweak to get better performance out of mysql.
>> 
>> "Andrew Gray" <andrew at graymerica.com> wrote:
>> 
>>> Does anyone have an opinion on using persistent DB connections (altering the DB.php to user mysql_pconnect instead)
>>> Has anyone with a high volume site seen an improvement by making this change.
>>> 
>>> I am looking for a way to stop getting limited by the max number of connections from my host.
>>> I get about 5 Million page views per month and have a lot of commentors (so the page level caching and DB caching is not alway appropriate.  My pages average 30 DB queries per page and under about .4 second query time)
>>> I am hosted at the Rackspace Cloud and have a max connection setting of 500.
>>> 
>>> thanks for the advice,
>>> 
>>> Andrew
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> --
>> Matt Martz
>> matt at sivel.net_______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Thu Mar 18 20:51:10 2010
From: otto at ottodestruct.com (Otto)
Date: Thu, 18 Mar 2010 15:51:10 -0500
Subject: [wp-hackers] Persistent connections
In-Reply-To: <4948EBFB-FCB2-4A24-BED3-BA1D0853568A@graymerica.com>
References: <C7C7D99F.203E%jpotkanski@tribune.com>
	<4948EBFB-FCB2-4A24-BED3-BA1D0853568A@graymerica.com>
Message-ID: <161617691003181351q66de5598obdbfc3318022db51@mail.gmail.com>

If you're looking at that sort of load, I'd be investigating other solutions.

On Rackspace, the first thing I'd do would be to setup memcached, for
object caching. The built in object cache system can be hooked to it
with a plugin, I think. That should drastically cut back on the number
of queries per page.

-Otto

From wp at andrewnacin.com  Thu Mar 18 21:07:45 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Thu, 18 Mar 2010 17:07:45 -0400
Subject: [wp-hackers] Menu schema
In-Reply-To: <5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com> 
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com> 
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
Message-ID: <4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>

> My guess is that it's much more likely to happen if you provide the code.
(That's what I've been learning from my discussions on the list, fwiw.)

Generally speaking, Mike is right. That said, there are no plans to change
the storage schema in 3.0, and writing code won't change that.

From mujtaba.boori at gmail.com  Thu Mar 18 21:17:43 2010
From: mujtaba.boori at gmail.com (Mujtaba Boori)
Date: Thu, 18 Mar 2010 21:17:43 +0000
Subject: [wp-hackers] [GSOC] IDEA discussion
Message-ID: <7cfa7a6a1003181417r963ff57g8ece59871298c960@mail.gmail.com>

I interested in participate in summer of code specifically WordPress

I think WP is one of the best open source. I always recommend it  for easy
to use.

 In order to keep WP easy to use, I came up with great idea to do so.

My idea is improvement the idea list for summer of code.

It is to improve exporting /importing to  be directly transfer . However,
This work almost the same as file. so I would like to make more flexible by
adding choices and selections to chose what article to export in post
section with other function like  edit. remove, and trash. so the user have
fast access and neat way to export file from blog to blog.


give me your suggestion ...

Thank your



-- 
Mujtaba Ali Alboori

From maillist at wangstedt.net  Thu Mar 18 22:54:20 2010
From: maillist at wangstedt.net (=?iso-8859-1?Q?Karl_W=E5ngstedt?=)
Date: Thu, 18 Mar 2010 23:54:20 +0100
Subject: [wp-hackers] Custom field for enclosures
Message-ID: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net>

I've been keeping up with the WP3 development the last few months, and just recently came across trying to publish multimedia to a test site.

One of the sites I manage is a podcasting site, and I'm preparing a move to html5 (with <video>) and WP3 for it ? hence the test site.

It seems like the enclosure custom field isn't automatically generated when a video is linked to in the post anymore.

I did a bit of research and I can't seem to find where the 'publish_post' action is applied. There's no do_action('publish_post', $post_ID); in wp-includes/post.php, and I suppose the add_action( 'publish_post', '_publish_post_hook', 5, 1 ); in wp-includes/default-filters.php is not run due to that.

Is this expected behavior or a bug?

Karl W?ngstedt

From scribu at gmail.com  Thu Mar 18 23:49:26 2010
From: scribu at gmail.com (scribu)
Date: Fri, 19 Mar 2010 01:49:26 +0200
Subject: [wp-hackers] Custom field for enclosures
In-Reply-To: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net>
References: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net>
Message-ID: <349fe48b1003181649h6345d3acj71f0dd730710a89a@mail.gmail.com>

It certainly looks like a bug, although the 'publish_post' hook has been
missing for a few versions. You should open a trac ticket.


-- 
http://scribu.net

From johnbillion+wp at gmail.com  Thu Mar 18 23:51:32 2010
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu, 18 Mar 2010 23:51:32 +0000
Subject: [wp-hackers] Menu schema
In-Reply-To: <4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>
Message-ID: <1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>

On Thu, Mar 18, 2010 at 9:07 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
>
> Generally speaking, Mike is right. That said, there are no plans to change
> the storage schema in 3.0, and writing code won't change that.

If I do write the code to change that, why won't it make it into 3.0?
It'll improve things in the long run.

From johnbillion+wp at gmail.com  Thu Mar 18 23:53:27 2010
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu, 18 Mar 2010 23:53:27 +0000
Subject: [wp-hackers] Custom field for enclosures
In-Reply-To: <349fe48b1003181649h6345d3acj71f0dd730710a89a@mail.gmail.com>
References: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net>
	<349fe48b1003181649h6345d3acj71f0dd730710a89a@mail.gmail.com>
Message-ID: <1fa535a71003181653x346b5d05l928caba3b4eadf3f@mail.gmail.com>

If you're grepping for 'publish_post' you probably won't find it. IIRC
it's now written as "publish_$post_type" so there is a hook for every
post type. Haven't got an install handy to check that though.

On Thu, Mar 18, 2010 at 11:49 PM, scribu <scribu at gmail.com> wrote:
> It certainly looks like a bug, although the 'publish_post' hook has been
> missing for a few versions. You should open a trac ticket.
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at andrewnacin.com  Fri Mar 19 01:30:12 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Thu, 18 Mar 2010 21:30:12 -0400
Subject: [wp-hackers] Menu schema
In-Reply-To: <1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com> 
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com> 
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com> 
	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>
Message-ID: <4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>

>
> If I do write the code to change that, why won't it make it into 3.0?

It'll improve things in the long run.


Not necessarily -- it won't make it into 3.0 because the core developers
have discussed the schema at length and find the current implementation the
best option. We use more fields in the posts table than you think --
including post_author, menu_order, post_parent, post_excerpt, post_content
and post_title. And we store additional data in post meta. Part of this is
because we allow for menu item names other than the name of the category or
title of the page. We also allow title attributes, descriptions (for when
the theme supports it), XFN, custom CSS classes, link target, URL (for a
custom link), etc. Therefore, we used post types and post metadata for menu
items.

From nuryfv88 at gmail.com  Fri Mar 19 05:01:35 2010
From: nuryfv88 at gmail.com (Nury Farelo Velasquez)
Date: Fri, 19 Mar 2010 00:01:35 -0500
Subject: [wp-hackers] Google Summer of Code Proposal
Message-ID: <28d8ef8f1003182201h2e1c3d91jaf4fcf24eab68bca@mail.gmail.com>

Hello

Good Day,

My name is Nury Farelo V, i'm a Sistems Engineering Student current in 7
Semester. I'm from Bucaramanga, Colombia, and i'm interested in a Google
Summer of Code Proyect.

I am writing to request information on the following proposals to implement
some of them.

The proposals are:
1. Comment Moderation
2.User Roles
3.Create system for users to specify post templates by category, author,
content or other criteria.

I would appreciate it if works with information on programming languages
that are required for each project, the development environment and contact
information so that it can connect prospective mentor and more information.

I appreciate all the assistance I can get because I want to participate in
GSoC 2010 with a project for this community.

Appreciate your cooperation.

PS: In signing the mail can find more information about me. Thanks


-- 
Nury Farelo Vel?squez
Est. Ingenieria Sistemas UIS
Linux User # 480005
Comunidad Universitaria de Software Libre CUSOL-UIS
http://www.linux.com.co/cusol

http://www.nuryfv.tk

From maillist at wangstedt.net  Fri Mar 19 07:42:54 2010
From: maillist at wangstedt.net (=?iso-8859-1?Q?Karl_W=E5ngstedt?=)
Date: Fri, 19 Mar 2010 08:42:54 +0100
Subject: [wp-hackers] Custom field for enclosures
In-Reply-To: <1fa535a71003181653x346b5d05l928caba3b4eadf3f@mail.gmail.com>
References: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net>
	<349fe48b1003181649h6345d3acj71f0dd730710a89a@mail.gmail.com>
	<1fa535a71003181653x346b5d05l928caba3b4eadf3f@mail.gmail.com>
Message-ID: <B6B60E81-3809-4959-B32C-B643049E660B@wangstedt.net>

That makes sense. I got a bit confused there for a while. :)

OK. I'll go open a ticket right away. Thank's for the help

Karl W?ngstedt



19 mar 2010 kl. 00.53 skrev John Blackbourn:

> If you're grepping for 'publish_post' you probably won't find it. IIRC
> it's now written as "publish_$post_type" so there is a hook for every
> post type. Haven't got an install handy to check that though.


From raphael.droz at gmail.com  Fri Mar 19 09:22:53 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Fri, 19 Mar 2010 10:22:53 +0100
Subject: [wp-hackers] how to do a single-instance widget with the new API
In-Reply-To: <4cc4de141003171008p5544f61bnda6db20fdb43a951@mail.gmail.com>
References: <4BA10A7F.4020703@gmail.com>
	<4cc4de141003171008p5544f61bnda6db20fdb43a951@mail.gmail.com>
Message-ID: <4BA3426D.7070908@gmail.com>

Andrew Nacin wrote:
> Before getting into multiple widget instances, I'd start with:
> http://codex.wordpress.org/AJAX_in_Plugins
>
> <http://codex.wordpress.org/AJAX_in_Plugins>Because:
> define('DOING_AJAX', true);
> include('../../../wp-config.php');
> include(WP_CONTENT_DIR . '/../wp-admin/includes/admin.php');
>
> Is not the right way to do it.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   
Thank you Andrew for the link, that was very useful to me
(this link may have its place on the http://codex.wordpress.org/Plugins 
page)

On Wed, Mar 17, 2010 at 12:55 PM, Otto <otto at ottodestruct.com> wrote:

> Firstly, yeah, that's the wrong way to do AJAX. Like he said.
>
> Secondly, single instance widgets are the tool of the devil. Don't do
> it. Make it work multiply.
>
> Third: If you're inheriting from WP_Widget, then you have a $number.
> That $number is something you'll find useful for looking in that
> array.
>
> -Otto
The $number helped a lot, I put it in a hidden field but it doesn't 
solved all my problem :
I wanted to bind another plugin (MailPress) to this widget.
Since I then can't use any form to pass the instance information I did 
the following to find
the "last" (which in my case I assume "uniq") instance of the widget :
In widget update() : update_option('my_widget_last_instance', 
$this->number);
So I use this option in MailPress to find the right options of the number

(I may also use this get_option('my_widget_last_instance') in the 
server-side callback of the widget but
that's probably a workaround of not being able to define my 
'widget_php_callback' of
add_action('wp_ajax_widget_callback', 'widget_php_callback');
inside the class itself to 'natively' benefit from $number)

Maybe in my case I should assume the last index of my 
get_option('my_widget') is always
the active and valid (used) one.
Anyway I'm now fine with update_option('my_widget_last_instance') which 
should simply let
me do most of what I wanted.
My last things are "hook into 'activated_plugins' to ensure the order" 
and use the 'nonce'.

Thank you for your advices.

Raph

From raphael.droz at gmail.com  Fri Mar 19 09:56:52 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Fri, 19 Mar 2010 10:56:52 +0100
Subject: [wp-hackers] how to do a single-instance widget with the new API
In-Reply-To: <161617691003171056t7dfaf207jf8e42ca7e3196c01@mail.gmail.com>
References: <4BA10A7F.4020703@gmail.com>	<161617691003171055i17a96f60g32483766864bca4d@mail.gmail.com>
	<161617691003171056t7dfaf207jf8e42ca7e3196c01@mail.gmail.com>
Message-ID: <4BA34A64.8080507@gmail.com>

Otto wrote:
> Oops. Forgot. You can reference your number with $this->number.
>
> -Otto
>   
(replying to your message as icedove/gmail still don't show mines)
I finally used :
add_action('wp_ajax_widget_callback', array(&$this, 'widget_php_callback'));
in the widget class constructor.
It works flawlessly and I no more need hidden $number field nor 
get_option('last_instance')
there.

Raph

From coolneerav4u at gmail.com  Fri Mar 19 12:43:24 2010
From: coolneerav4u at gmail.com (Neerav Mehta)
Date: Fri, 19 Mar 2010 05:43:24 -0700
Subject: [wp-hackers] GSoc -Proposal
Message-ID: <d64cc4d41003190543v4a860ea5l6b1ae438703a5bb@mail.gmail.com>

Hello,
    I am Neerav UG student from India, I want to work for wordpress in Gsoc
this year.
I am having some ideas & wish to implement them like:
1. Advance User Menu.
2. Custom user templates.
3. Organising themes in better way.
3. Using Back-end templates.

I am wishing to implement some of these ideas ...
Will someone help me where to start...
-- 
Neerav Mehta
B-Tech Part IV
Electronics Engg.
I.T. BHU
Varanasi

From wordpress at dd32.id.au  Fri Mar 19 12:05:17 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sat, 20 Mar 2010 00:05:17 +1200
Subject: [wp-hackers] [GSOC] Just apply, or talk to developers first?
In-Reply-To: <15ef15201003171442v5e4068ddj234fc4ba0c5efc95@mail.gmail.com>
References: <15ef15201003170123h42cdf671p49d37368c0029d67@mail.gmail.com>
	<op.u9pgw9t2spxmuu@ho.st>
	<15ef15201003171442v5e4068ddj234fc4ba0c5efc95@mail.gmail.com>
Message-ID: <op.u9tfy3vispxmuu@ho.st>

On Thu, 18 Mar 2010 09:42:27 +1200, Eric Gribkoff <ericgribkoff at gmail.com>  
wrote:

> Thanks for the response, Dion. I'm including a first-draft proposal here.
> Any feedback or advice is greatly appreciated!
>
> I would like to expand and improve upon the WordPress User Roles system.
>
> On my own blog, it would be useful to be able to assign category-specific
> Contributor status to users. Many blogs could benefit from a similar
> feature, allowing roles to only apply to a specific category or  
> categories.
>
> Additionally, the current roles are somewhat limited. I would like to
> implement features allowing existing roles to be modified on a  
> user-by-user
> basis.

How often do you use the current-generation of Role-based plugins?
How would your proposal be a superior solution than something such as Role  
Scoper, or the Members plugin:  
http://wordpress.org/extend/plugins/members/ (Which does per-content rules  
i believe)

For the most part, the current implementation of Roles/caps needs to be  
simplified, or rather, the storage needs to be simplified/optimized in  
such a way that querying for if a user has permission to perform an action  
or not is possible.

For example, Take a blog with 10,000 users, Which users can edit themes on  
the site? Its not as simple as you may think, right now, every user needs  
to be loaded into memory to determine the answer.
For 3.1, I believe the storage mechanism will change, and per-user  
capabilities will probably be scraped from core (Yes, its possible right  
now - And can be implemented via a plugin easily afterwards) leaving a  
User -> Role mapping which should allow for faster user queries.

Cheers
Dion Hulse / dd32

Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

From otto at ottodestruct.com  Fri Mar 19 13:21:36 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 19 Mar 2010 08:21:36 -0500
Subject: [wp-hackers] Custom field for enclosures
In-Reply-To: <B6B60E81-3809-4959-B32C-B643049E660B@wangstedt.net>
References: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net> 
	<349fe48b1003181649h6345d3acj71f0dd730710a89a@mail.gmail.com> 
	<1fa535a71003181653x346b5d05l928caba3b4eadf3f@mail.gmail.com> 
	<B6B60E81-3809-4959-B32C-B643049E660B@wangstedt.net>
Message-ID: <161617691003190621ue55d12dob2f5b03d6be5050c@mail.gmail.com>

This all happens in the wp_transition_post_status function. Which
looks like this:

function wp_transition_post_status($new_status, $old_status, $post) {
	do_action('transition_post_status', $new_status, $old_status, $post);
	do_action("${old_status}_to_$new_status", $post);
	do_action("${new_status}_$post->post_type", $post->ID, $post);
}

That last one is what kicks off publish_post (status + post type).

Careful though, publish_post happens on any post update (if the post
is published). If you want to only catch the first publish, then you'd
want to hook to transition_post_status and compare the new and old
statuses that you get instead.

-Otto



On Fri, Mar 19, 2010 at 2:42 AM, Karl W?ngstedt <maillist at wangstedt.net> wrote:
> That makes sense. I got a bit confused there for a while. :)
>
> OK. I'll go open a ticket right away. Thank's for the help
>
> Karl W?ngstedt
>
>
>
> 19 mar 2010 kl. 00.53 skrev John Blackbourn:
>
>> If you're grepping for 'publish_post' you probably won't find it. IIRC
>> it's now written as "publish_$post_type" so there is a hook for every
>> post type. Haven't got an install handy to check that though.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Fri Mar 19 13:26:23 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 19 Mar 2010 08:26:23 -0500
Subject: [wp-hackers] Custom field for enclosures
In-Reply-To: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net>
References: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net>
Message-ID: <161617691003190626icfdf200uc7187e1afa3728b1@mail.gmail.com>

On Thu, Mar 18, 2010 at 5:54 PM, Karl W?ngstedt <maillist at wangstedt.net> wrote:
> One of the sites I manage is a podcasting site, and I'm preparing a move to html5 (with <video>) and WP3 for it ? hence the test site.
>
> It seems like the enclosure custom field isn't automatically generated when a video is linked to in the post anymore.

Check the mime type.

WordPress does a call to get the file via the webserver and looks at
the headers return. If the mime type that the webserver returns starts
with "video" or "audio" then it gets enclosed. So if your webserver
isn't configured to return the right mime type for that filetype, no
enclosure gets made.

This all happens in do_enclose, which gets called from do_all_pings,
which is hooked to the do_pings action, which is a scheduled event
created by the _publish_post_hook.

-Otto

From andrew at graymerica.com  Fri Mar 19 13:49:58 2010
From: andrew at graymerica.com (Andrew Gray)
Date: Fri, 19 Mar 2010 09:49:58 -0400
Subject: [wp-hackers] Closing Mysql connections
In-Reply-To: <4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>
	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>
	<4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>
Message-ID: <A2F1A258-C52D-4CD9-9916-E1DBFE2A503E@graymerica.com>

I will start with the statement that this wordpress site is on a server where I do not get to control apache or mysql.  It is at Rackspace Sites, which is a LAMP stack where you only get FTP access.  I get a ton of traffic and I am running into max mysql connection errors.   My max user connections is set at 500.  I really want to stay on this platform because of the support I get there and the price.  My traffic profile is unique and I have all the caching I can use.

 Im trying to figure out why there is no call to mysql_close anywhere in wordpress.

Is it just assuming that the connection will be automatically closed when the script ends?

Is there an action or hook I can tie into to close the DB connection manually to ensure that if apache processes hang on they do not stay around.  Can I use the hook shutdown?

Does anyone know why there is no mysql_close() in the wordpress code.

Any insight into this would be very helpful before I go and start breaking stuff. 

thanks,

Andrew





From sampath.thennakoon at gmail.com  Fri Mar 19 13:50:35 2010
From: sampath.thennakoon at gmail.com (sampath thennakoon)
Date: Fri, 19 Mar 2010 19:20:35 +0530
Subject: [wp-hackers] (no subject)
Message-ID: <1716942e1003190650s75feb60yca8c255e827877ee@mail.gmail.com>

sampath.thennakoon at gmail.com

From wordpress at dd32.id.au  Fri Mar 19 12:57:42 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sat, 20 Mar 2010 00:57:42 +1200
Subject: [wp-hackers] Closing Mysql connections
In-Reply-To: <A2F1A258-C52D-4CD9-9916-E1DBFE2A503E@graymerica.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>
	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>
	<4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>
	<A2F1A258-C52D-4CD9-9916-E1DBFE2A503E@graymerica.com>
Message-ID: <op.u9tiegx6spxmuu@ho.st>

The reason for this is quite simple. WordPress uses the database  
throughout the execution of the script, It's needed until shutdown as  
you'd expect.

WordPress relies upon PHP's inbuilt memory garbage collection for freeing  
memory and closing the MySQL handle. See http://au.php.net/mysql_close for  
a description of that.

In short: Closing of the connection is handled by PHP, the script shouldnt  
have to call it. The only time its needed to be called, is if the database  
link is known to be no longer of use to the script, and it'll be running  
for awhile longer (ie. number crunching)

adding it to the shutdown hook would suffice to see if it makes a  
difference for you.
Chances are(Well, Possibility?), if its a high traffic site, you're just  
seeing the connections that are being used at that very moment, reload and  
you're probably looking at a entirely new set of connections?


On Sat, 20 Mar 2010 01:49:58 +1200, Andrew Gray <andrew at graymerica.com>  
wrote:
> I will start with the statement that this wordpress site is on a server  
> where I do not get to control apache or mysql.  It is at Rackspace  
> Sites, which is a LAMP stack where you only get FTP access.  I get a ton  
> of traffic and I am running into max mysql connection errors.   My max  
> user connections is set at 500.  I really want to stay on this platform  
> because of the support I get there and the price.  My traffic profile is  
> unique and I have all the caching I can use.
>
>  Im trying to figure out why there is no call to mysql_close anywhere in  
> wordpress.
>
> Is it just assuming that the connection will be automatically closed  
> when the script ends?

From otto at ottodestruct.com  Fri Mar 19 14:33:39 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 19 Mar 2010 09:33:39 -0500
Subject: [wp-hackers] Closing Mysql connections
In-Reply-To: <op.u9tiegx6spxmuu@ho.st>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com> 
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com> 
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com> 
	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com> 
	<4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com> 
	<A2F1A258-C52D-4CD9-9916-E1DBFE2A503E@graymerica.com>
	<op.u9tiegx6spxmuu@ho.st>
Message-ID: <161617691003190733s7e27254bn15cfb644e77cdf1d@mail.gmail.com>

On Fri, Mar 19, 2010 at 7:57 AM, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
> The reason for this is quite simple. WordPress uses the database throughout
> the execution of the script, It's needed until shutdown as you'd expect.

Yes. As it says here: http://php.net/mysql_close

"Using mysql_close() isn't usually necessary, as non-persistent open
links are automatically closed at the end of the script's execution.
See also freeing resources."

Now, that being said, I have seen odd setups freak out on this before,
but those setups are rare. If you're really paranoid about this sort
of thing:

add_action('shutdown_action_hook','close_up_shop');
function close_up_shop() {
  @mysql_close();
}

You can try it and see if you see a difference. I doubt that there will be any.

-Otto

From mpretty at voceconnect.com  Fri Mar 19 15:03:06 2010
From: mpretty at voceconnect.com (Michael Pretty)
Date: Fri, 19 Mar 2010 11:03:06 -0400
Subject: [wp-hackers] Closing Mysql connections
In-Reply-To: <A2F1A258-C52D-4CD9-9916-E1DBFE2A503E@graymerica.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>	<4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>
	<A2F1A258-C52D-4CD9-9916-E1DBFE2A503E@graymerica.com>
Message-ID: <4BA3922A.70303@voceconnect.com>

If you're having issues with max user connections, my suggestion would 
be to start looking at what is taking a page so long to render from 
start to finish, that it holds the connection open this long and start 
cleaning those up.  The quickest fixes are adding object cache/memcache 
and WP Super Cache or Batcache.  If those don't cut down the render time 
enough, try to find any of the slower segments of your site that are the 
same on multiple pages and users and caching the rendered portion of 
that content to avoid multiple queries or complex rendering.  If you're 
still having issues after that, it may be time to look into multiple 
servers.

Michael

On 3/19/10 9:49 AM, Andrew Gray wrote:
> I will start with the statement that this wordpress site is on a server where I do not get to control apache or mysql.  It is at Rackspace Sites, which is a LAMP stack where you only get FTP access.  I get a ton of traffic and I am running into max mysql connection errors.   My max user connections is set at 500.  I really want to stay on this platform because of the support I get there and the price.  My traffic profile is unique and I have all the caching I can use.
>
>   Im trying to figure out why there is no call to mysql_close anywhere in wordpress.
>
> Is it just assuming that the connection will be automatically closed when the script ends?
>
> Is there an action or hook I can tie into to close the DB connection manually to ensure that if apache processes hang on they do not stay around.  Can I use the hook shutdown?
>
> Does anyone know why there is no mysql_close() in the wordpress code.
>
> Any insight into this would be very helpful before I go and start breaking stuff.
>
> thanks,
>
> Andrew
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    


From andrew at graymerica.com  Fri Mar 19 15:19:37 2010
From: andrew at graymerica.com (Andrew Gray)
Date: Fri, 19 Mar 2010 11:19:37 -0400
Subject: [wp-hackers] Closing Mysql connections
In-Reply-To: <161617691003190733s7e27254bn15cfb644e77cdf1d@mail.gmail.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>
	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>
	<4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>
	<A2F1A258-C52D-4CD9-9916-E1DBFE2A503E@graymerica.com>
	<op.u9tiegx6spxmuu@ho.st>
	<161617691003190733s7e27254bn15cfb644e77cdf1d@mail.gmail.com>
Message-ID: <236FA028-0FE7-4DE4-B924-ED03A206AD02@graymerica.com>

thanks,

that is perfect.
On Mar 19, 2010, at 10:33 AM, Otto wrote:

> On Fri, Mar 19, 2010 at 7:57 AM, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
>> The reason for this is quite simple. WordPress uses the database throughout
>> the execution of the script, It's needed until shutdown as you'd expect.
> 
> Yes. As it says here: http://php.net/mysql_close
> 
> "Using mysql_close() isn't usually necessary, as non-persistent open
> links are automatically closed at the end of the script's execution.
> See also freeing resources."
> 
> Now, that being said, I have seen odd setups freak out on this before,
> but those setups are rare. If you're really paranoid about this sort
> of thing:
> 
> add_action('shutdown_action_hook','close_up_shop');
> function close_up_shop() {
>  @mysql_close();
> }
> 
> You can try it and see if you see a difference. I doubt that there will be any.
> 
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From scribu at gmail.com  Fri Mar 19 15:44:28 2010
From: scribu at gmail.com (scribu)
Date: Fri, 19 Mar 2010 17:44:28 +0200
Subject: [wp-hackers] GSoc -Proposal
In-Reply-To: <d64cc4d41003190543v4a860ea5l6b1ae438703a5bb@mail.gmail.com>
References: <d64cc4d41003190543v4a860ea5l6b1ae438703a5bb@mail.gmail.com>
Message-ID: <349fe48b1003190844ica6c907q9e213a2677e26dbf@mail.gmail.com>

Well, first of all, you'll have to choose one of them in that list and come
up with a concrete idea to implement. Having that, we can give you feedback.


-- 
http://scribu.net

From jer at simianuprising.com  Fri Mar 19 17:01:23 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri, 19 Mar 2010 13:01:23 -0400
Subject: [wp-hackers] WP Ideas: API for adding simple buttons to TinyMCE
Message-ID: <e1202cb11003191001k6b00799fq6307196cbcb954e@mail.gmail.com>

Basic idea: Add a wrapper function to WP that can be called in a
theme's functions.php (or a plugin) to add simple buttons to the
Visual Editor. Things like <p class="translation">  or <p
class="update"> that correspond with classes in the theme CSS. There
are a lot of times when a button just needs to wrap a tag around a bit
of text and it seems to me a general function that sets the before and
after text (i.e. <p class="..."> and </p>) would be useful to almost
every site with carefully considered CSS styles for posts.

It's possible to add buttons like this to TinyMCE yourself manually in
a plugin but its really, really complicated. Last time I checked it
involved creating several files and basically becoming skilled at the
TinyMCE API, something most theme/plugin devs would obviously rather
avoid. For this reason I think it would make sense for WP to have a
built-in way of adding simple buttons with only PHP. I am no good at
javascript so I won't be the one to add it but someone out there who
knows how to add buttons already could probably do it relatively
easily.

I posted about this on the Ideas Forum about a year ago:
http://wordpress.org/extend/ideas/topic/create-easy-api-for-adding-simple-html-tag-buttons-to-tinymce

Jane is cleaning out the ideas and will delete this one unless it gets
some more traction so if you think its a good idea please go vote or
leave a comment about it. I suppose if it gets enough votes in the
next little while I'll create a Trac ticket out of it and we can deal
with it in that format instead, otherwise we can delete it from ideas
and let it fade into the annals of features that time forgot.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From otto at ottodestruct.com  Fri Mar 19 18:09:38 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 19 Mar 2010 13:09:38 -0500
Subject: [wp-hackers] WP Ideas: API for adding simple buttons to TinyMCE
In-Reply-To: <e1202cb11003191001k6b00799fq6307196cbcb954e@mail.gmail.com>
References: <e1202cb11003191001k6b00799fq6307196cbcb954e@mail.gmail.com>
Message-ID: <161617691003191109m456e9c70vc0cfb5960c168b17@mail.gmail.com>

If you don't want to go the full tinyMCE plugin route, you could use
the "setup" trick to add simple button code:
http://tinymce.moxiecode.com/examples/example_20.php

To do this in a WP plugin, you'd hook to mce_buttons_2 (or 3, or 4) to
add your button to the list. Then you'd hook up a filter on
tiny_mce_before_init to add your javascript code to the
$initArray['setup']. That should be pretty much that, really.


-Otto



On Fri, Mar 19, 2010 at 12:01 PM, Jeremy Clarke <jer at simianuprising.com> wrote:
> Basic idea: Add a wrapper function to WP that can be called in a
> theme's functions.php (or a plugin) to add simple buttons to the
> Visual Editor. Things like <p class="translation"> ?or <p
> class="update"> that correspond with classes in the theme CSS. There
> are a lot of times when a button just needs to wrap a tag around a bit
> of text and it seems to me a general function that sets the before and
> after text (i.e. <p class="..."> and </p>) would be useful to almost
> every site with carefully considered CSS styles for posts.
>
> It's possible to add buttons like this to TinyMCE yourself manually in
> a plugin but its really, really complicated. Last time I checked it
> involved creating several files and basically becoming skilled at the
> TinyMCE API, something most theme/plugin devs would obviously rather
> avoid. For this reason I think it would make sense for WP to have a
> built-in way of adding simple buttons with only PHP. I am no good at
> javascript so I won't be the one to add it but someone out there who
> knows how to add buttons already could probably do it relatively
> easily.
>
> I posted about this on the Ideas Forum about a year ago:
> http://wordpress.org/extend/ideas/topic/create-easy-api-for-adding-simple-html-tag-buttons-to-tinymce
>
> Jane is cleaning out the ideas and will delete this one unless it gets
> some more traction so if you think its a good idea please go vote or
> leave a comment about it. I suppose if it gets enough votes in the
> next little while I'll create a Trac ticket out of it and we can deal
> with it in that format instead, otherwise we can delete it from ideas
> and let it fade into the annals of features that time forgot.
>
> --
> Jeremy Clarke | http://jeremyclarke.org
> Code and Design | http://globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From perro.hunter at gmail.com  Fri Mar 19 19:03:07 2010
From: perro.hunter at gmail.com (Perro Hunter)
Date: Fri, 19 Mar 2010 13:03:07 -0600
Subject: [wp-hackers] GSoc - here we go !
Message-ID: <90E4EF88-6C9B-46E3-B75E-2D693A04D54D@gmail.com>

Hey there everyone !

I'm a computer science engineer student from Mexico 
and this is the first year I'll try out for GSoc

I'm really exited on getting a chance to contribute 
with wordpress since it's a really popular piece of software :) 

I think i've got some ideas to develop some of the ideas
that you proposed this year and I'd love to hear some feedback from
you. While reading them the first 2 that got my attention were the
Blog Import/Export feature and the Moving Wordpress feature since
I've already had to move a wordpress installation before and I know it
was sorta uncomfortable, from those experience I think I can start
something, let me know what you think :)

Blog Import/Export idea:

The thing here is that we not only need to move a huge number of post
we also need to move comments, pages, tags, categories and links current
import/export feature would give you a dump of XML that you can take to a 
new wordpress installation and upload it yourself. This sometimes is nasty if 
the xml dump is huge, also this dump doesn't help you export/import the media
those post are using which is a problem since most of the users don't know how
to deal with FTPs and they should't have to deal with downloading everything to
their PC's and uploading it to the new server.

For this I propose a Plugin that would be needed to be installed on both wordpress
, I'm not sure yet wheter we should attack the next problem from the original
installation or from the target installation.

If we were doing this from the source installation we'd need to first make sure
the plugin is ON on the target installation, we would use the admin user and password
to authenticate remotely.

I know we have to move a great number of post-objects (posts,comments,categories,etc)
for this one we are going to create a queue of things that are going to be exported, this
could latter allow users to personalize what are the elements that they'd like to move only, then
we'd run a quick scan on each of the queued elements to see the media they are using
and queue those file on the table too, I'm using this queue table first so when we start
moving the elements and files from one installation to another if the script timeouts we can
restart the process and take off where it stopped last time ;)

Once the queue is ready to go, we even got a way to calculate percentage ( 1/3000 elements to move = 0.03%)
we'd start calling the move method, on the user interface we could have an ajax call
that refresh the status of the script every X seconds or minutes, it could get a new percentage
number to display and even reactive the moving script if it already timed out. Every time
an element was successfully moved it'd be mark as it on the queue, we could move
a large number of post-objects (posts,comments) using curl from one server to another,
I know server to server bandwidth is way better than home-bandwidth, on the target
installation the plugin would be receiving all the elements and inserting them in to the db
with their proper category, tags and everything.

We could use the same procedure when moving medie if the max post value of the target
server allow us to send these files via post, or we could use FTP so after moving successfully
a file we'd notify the target installation plugin about the new file so i can work is the way it want's
(we'd FTP to a tmp folder)

For small blogs this process could take less than a minute, for huge blogs it could take a couple
of hours I don't know we'd need to benchmark this a little, but I think this is the best way to
Import/export wordpress without having to get your hands dirty :P

this could also be extended to be compatible with old versions of WP

What do you think?

Now, this very same algorithm could be used for the next idea:

Moving a Wordpress installation from one domain to another:

For this one we would definitively need FTP to move the basic installation, the target server DB name, user and password, and after moving the essentials of the installation we could start doing the rest with the old procedure(queue items, start cleaning the items periodically)

Two features could be archived with this same idea, please tell me if you think there's something missing
or your thoughts

Cheers ! :D 

P.S. I also posted this to http://blog.perrohunter.com/ideas-for-wp-at-gsoc/ :)

-perrohunter

From hempsworth at googlemail.com  Fri Mar 19 23:41:45 2010
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Fri, 19 Mar 2010 23:41:45 +0000
Subject: [wp-hackers] GSoc -Proposal
In-Reply-To: <d64cc4d41003190543v4a860ea5l6b1ae438703a5bb@mail.gmail.com>
References: <d64cc4d41003190543v4a860ea5l6b1ae438703a5bb@mail.gmail.com>
Message-ID: <5a1dad881003191641s79e778a5y68a38c9cd6d0a4c0@mail.gmail.com>

Perhaps you could elaborate on what each of those proposals would
include? Then we could help recommend which one has more mileage.

-- Alex (Hempsworth)

On Friday, March 19, 2010, Neerav Mehta <coolneerav4u at gmail.com> wrote:
> Hello,
>  ? ?I am Neerav UG student from India, I want to work for wordpress in Gsoc
> this year.
> I am having some ideas & wish to implement them like:
> 1. Advance User Menu.
> 2. Custom user templates.
> 3. Organising themes in better way.
> 3. Using Back-end templates.
>
> I am wishing to implement some of these ideas ...
> Will someone help me where to start...
> --
> Neerav Mehta
> B-Tech Part IV
> Electronics Engg.
> I.T. BHU
> Varanasi
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

-- 
-- Alex  (Hempsworth)

From mikeschinkel at newclarity.net  Fri Mar 19 21:51:48 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 19 Mar 2010 17:51:48 -0400
Subject: [wp-hackers] WP Ideas: API for adding simple buttons to TinyMCE
In-Reply-To: <e1202cb11003191001k6b00799fq6307196cbcb954e@mail.gmail.com>
References: <e1202cb11003191001k6b00799fq6307196cbcb954e@mail.gmail.com>
Message-ID: <3D29E345-5F58-4CCD-8024-608800431971@newclarity.net>

Literally 30 seconds before I read your email I was thinking about how I needed to add a editor button but how I was loathe to have to figure out how. So yes, very interested.

-Mike

On Mar 19, 2010, at 1:01 PM, Jeremy Clarke wrote:

> Basic idea: Add a wrapper function to WP that can be called in a
> theme's functions.php (or a plugin) to add simple buttons to the
> Visual Editor. Things like <p class="translation">  or <p
> class="update"> that correspond with classes in the theme CSS. There
> are a lot of times when a button just needs to wrap a tag around a bit
> of text and it seems to me a general function that sets the before and
> after text (i.e. <p class="..."> and </p>) would be useful to almost
> every site with carefully considered CSS styles for posts.
> 
> It's possible to add buttons like this to TinyMCE yourself manually in
> a plugin but its really, really complicated. Last time I checked it
> involved creating several files and basically becoming skilled at the
> TinyMCE API, something most theme/plugin devs would obviously rather
> avoid. For this reason I think it would make sense for WP to have a
> built-in way of adding simple buttons with only PHP. I am no good at
> javascript so I won't be the one to add it but someone out there who
> knows how to add buttons already could probably do it relatively
> easily.
> 
> I posted about this on the Ideas Forum about a year ago:
> http://wordpress.org/extend/ideas/topic/create-easy-api-for-adding-simple-html-tag-buttons-to-tinymce
> 
> Jane is cleaning out the ideas and will delete this one unless it gets
> some more traction so if you think its a good idea please go vote or
> leave a comment about it. I suppose if it gets enough votes in the
> next little while I'll create a Trac ticket out of it and we can deal
> with it in that format instead, otherwise we can delete it from ideas
> and let it fade into the annals of features that time forgot.
> 
> -- 
> Jeremy Clarke | http://jeremyclarke.org
> Code and Design | http://globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From enej.bajgoric at gmail.com  Fri Mar 19 23:56:12 2010
From: enej.bajgoric at gmail.com (Enej Bajgoirc)
Date: Fri, 19 Mar 2010 16:56:12 -0700
Subject: [wp-hackers] WP Ideas: API for adding simple buttons to TinyMCE
In-Reply-To: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
Message-ID: <D884108E-09C9-4058-9625-15CF7462D38E@gmail.com>

I really like this idea as well. I think one way to approach it would be to extend the shortcode_api in a way that would make it easy for developers to add a the TinyMCE buttons right there, as well as have a place to have Shortcode documentation. 

Just an idea...

Enej


On 2010-03-19, at 4:47 PM, wp-hackers-request at lists.automattic.com wrote:

> Send wp-hackers mailing list submissions to
> 	wp-hackers at lists.automattic.com
> 
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
> 	wp-hackers-request at lists.automattic.com
> 
> You can reach the person managing the list at
> 	wp-hackers-owner at lists.automattic.com
> 
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
> 
> 
> Today's Topics:
> 
>   1. Re: Closing Mysql connections (Andrew Gray)
>   2. Re: GSoc -Proposal (scribu)
>   3. WP Ideas: API for adding simple buttons to TinyMCE (Jeremy Clarke)
>   4. Re: WP Ideas: API for adding simple buttons to TinyMCE (Otto)
>   5. GSoc - here we go ! (Perro Hunter)
>   6. Re: GSoc -Proposal (Alex Hempton-Smith)
>   7. Re: WP Ideas: API for adding simple buttons to TinyMCE
>      (Mike Schinkel)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Fri, 19 Mar 2010 11:19:37 -0400
> From: Andrew Gray <andrew at graymerica.com>
> Subject: Re: [wp-hackers] Closing Mysql connections
> To: wp-hackers at lists.automattic.com
> Message-ID: <236FA028-0FE7-4DE4-B924-ED03A206AD02 at graymerica.com>
> Content-Type: text/plain; charset=us-ascii
> 
> thanks,
> 
> that is perfect.
> On Mar 19, 2010, at 10:33 AM, Otto wrote:
> 
>> On Fri, Mar 19, 2010 at 7:57 AM, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
>>> The reason for this is quite simple. WordPress uses the database throughout
>>> the execution of the script, It's needed until shutdown as you'd expect.
>> 
>> Yes. As it says here: http://php.net/mysql_close
>> 
>> "Using mysql_close() isn't usually necessary, as non-persistent open
>> links are automatically closed at the end of the script's execution.
>> See also freeing resources."
>> 
>> Now, that being said, I have seen odd setups freak out on this before,
>> but those setups are rare. If you're really paranoid about this sort
>> of thing:
>> 
>> add_action('shutdown_action_hook','close_up_shop');
>> function close_up_shop() {
>> @mysql_close();
>> }
>> 
>> You can try it and see if you see a difference. I doubt that there will be any.
>> 
>> -Otto
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Fri, 19 Mar 2010 17:44:28 +0200
> From: scribu <scribu at gmail.com>
> Subject: Re: [wp-hackers] GSoc -Proposal
> To: wp-hackers at lists.automattic.com
> Message-ID:
> 	<349fe48b1003190844ica6c907q9e213a2677e26dbf at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> Well, first of all, you'll have to choose one of them in that list and come
> up with a concrete idea to implement. Having that, we can give you feedback.
> 
> 
> -- 
> http://scribu.net
> 
> 
> ------------------------------
> 
> Message: 3
> Date: Fri, 19 Mar 2010 13:01:23 -0400
> From: Jeremy Clarke <jer at simianuprising.com>
> Subject: [wp-hackers] WP Ideas: API for adding simple buttons to
> 	TinyMCE
> To: wp-hackers at lists.automattic.com
> Message-ID:
> 	<e1202cb11003191001k6b00799fq6307196cbcb954e at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
> 
> Basic idea: Add a wrapper function to WP that can be called in a
> theme's functions.php (or a plugin) to add simple buttons to the
> Visual Editor. Things like <p class="translation">  or <p
> class="update"> that correspond with classes in the theme CSS. There
> are a lot of times when a button just needs to wrap a tag around a bit
> of text and it seems to me a general function that sets the before and
> after text (i.e. <p class="..."> and </p>) would be useful to almost
> every site with carefully considered CSS styles for posts.
> 
> It's possible to add buttons like this to TinyMCE yourself manually in
> a plugin but its really, really complicated. Last time I checked it
> involved creating several files and basically becoming skilled at the
> TinyMCE API, something most theme/plugin devs would obviously rather
> avoid. For this reason I think it would make sense for WP to have a
> built-in way of adding simple buttons with only PHP. I am no good at
> javascript so I won't be the one to add it but someone out there who
> knows how to add buttons already could probably do it relatively
> easily.
> 
> I posted about this on the Ideas Forum about a year ago:
> http://wordpress.org/extend/ideas/topic/create-easy-api-for-adding-simple-html-tag-buttons-to-tinymce
> 
> Jane is cleaning out the ideas and will delete this one unless it gets
> some more traction so if you think its a good idea please go vote or
> leave a comment about it. I suppose if it gets enough votes in the
> next little while I'll create a Trac ticket out of it and we can deal
> with it in that format instead, otherwise we can delete it from ideas
> and let it fade into the annals of features that time forgot.
> 
> -- 
> Jeremy Clarke | http://jeremyclarke.org
> Code and Design | http://globalvoicesonline.org
> 
> 
> ------------------------------
> 
> Message: 4
> Date: Fri, 19 Mar 2010 13:09:38 -0500
> From: Otto <otto at ottodestruct.com>
> Subject: Re: [wp-hackers] WP Ideas: API for adding simple buttons to
> 	TinyMCE
> To: wp-hackers at lists.automattic.com
> Message-ID:
> 	<161617691003191109m456e9c70vc0cfb5960c168b17 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
> 
> If you don't want to go the full tinyMCE plugin route, you could use
> the "setup" trick to add simple button code:
> http://tinymce.moxiecode.com/examples/example_20.php
> 
> To do this in a WP plugin, you'd hook to mce_buttons_2 (or 3, or 4) to
> add your button to the list. Then you'd hook up a filter on
> tiny_mce_before_init to add your javascript code to the
> $initArray['setup']. That should be pretty much that, really.
> 
> 
> -Otto
> 
> 
> 
> On Fri, Mar 19, 2010 at 12:01 PM, Jeremy Clarke <jer at simianuprising.com> wrote:
>> Basic idea: Add a wrapper function to WP that can be called in a
>> theme's functions.php (or a plugin) to add simple buttons to the
>> Visual Editor. Things like <p class="translation"> ?or <p
>> class="update"> that correspond with classes in the theme CSS. There
>> are a lot of times when a button just needs to wrap a tag around a bit
>> of text and it seems to me a general function that sets the before and
>> after text (i.e. <p class="..."> and </p>) would be useful to almost
>> every site with carefully considered CSS styles for posts.
>> 
>> It's possible to add buttons like this to TinyMCE yourself manually in
>> a plugin but its really, really complicated. Last time I checked it
>> involved creating several files and basically becoming skilled at the
>> TinyMCE API, something most theme/plugin devs would obviously rather
>> avoid. For this reason I think it would make sense for WP to have a
>> built-in way of adding simple buttons with only PHP. I am no good at
>> javascript so I won't be the one to add it but someone out there who
>> knows how to add buttons already could probably do it relatively
>> easily.
>> 
>> I posted about this on the Ideas Forum about a year ago:
>> http://wordpress.org/extend/ideas/topic/create-easy-api-for-adding-simple-html-tag-buttons-to-tinymce
>> 
>> Jane is cleaning out the ideas and will delete this one unless it gets
>> some more traction so if you think its a good idea please go vote or
>> leave a comment about it. I suppose if it gets enough votes in the
>> next little while I'll create a Trac ticket out of it and we can deal
>> with it in that format instead, otherwise we can delete it from ideas
>> and let it fade into the annals of features that time forgot.
>> 
>> --
>> Jeremy Clarke | http://jeremyclarke.org
>> Code and Design | http://globalvoicesonline.org
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> ------------------------------
> 
> Message: 5
> Date: Fri, 19 Mar 2010 13:03:07 -0600
> From: Perro Hunter <perro.hunter at gmail.com>
> Subject: [wp-hackers] GSoc - here we go !
> To: wp-hackers-request at lists.automattic.com
> Message-ID: <90E4EF88-6C9B-46E3-B75E-2D693A04D54D at gmail.com>
> Content-Type: text/plain; charset=us-ascii
> 
> Hey there everyone !
> 
> I'm a computer science engineer student from Mexico 
> and this is the first year I'll try out for GSoc
> 
> I'm really exited on getting a chance to contribute 
> with wordpress since it's a really popular piece of software :) 
> 
> I think i've got some ideas to develop some of the ideas
> that you proposed this year and I'd love to hear some feedback from
> you. While reading them the first 2 that got my attention were the
> Blog Import/Export feature and the Moving Wordpress feature since
> I've already had to move a wordpress installation before and I know it
> was sorta uncomfortable, from those experience I think I can start
> something, let me know what you think :)
> 
> Blog Import/Export idea:
> 
> The thing here is that we not only need to move a huge number of post
> we also need to move comments, pages, tags, categories and links current
> import/export feature would give you a dump of XML that you can take to a 
> new wordpress installation and upload it yourself. This sometimes is nasty if 
> the xml dump is huge, also this dump doesn't help you export/import the media
> those post are using which is a problem since most of the users don't know how
> to deal with FTPs and they should't have to deal with downloading everything to
> their PC's and uploading it to the new server.
> 
> For this I propose a Plugin that would be needed to be installed on both wordpress
> , I'm not sure yet wheter we should attack the next problem from the original
> installation or from the target installation.
> 
> If we were doing this from the source installation we'd need to first make sure
> the plugin is ON on the target installation, we would use the admin user and password
> to authenticate remotely.
> 
> I know we have to move a great number of post-objects (posts,comments,categories,etc)
> for this one we are going to create a queue of things that are going to be exported, this
> could latter allow users to personalize what are the elements that they'd like to move only, then
> we'd run a quick scan on each of the queued elements to see the media they are using
> and queue those file on the table too, I'm using this queue table first so when we start
> moving the elements and files from one installation to another if the script timeouts we can
> restart the process and take off where it stopped last time ;)
> 
> Once the queue is ready to go, we even got a way to calculate percentage ( 1/3000 elements to move = 0.03%)
> we'd start calling the move method, on the user interface we could have an ajax call
> that refresh the status of the script every X seconds or minutes, it could get a new percentage
> number to display and even reactive the moving script if it already timed out. Every time
> an element was successfully moved it'd be mark as it on the queue, we could move
> a large number of post-objects (posts,comments) using curl from one server to another,
> I know server to server bandwidth is way better than home-bandwidth, on the target
> installation the plugin would be receiving all the elements and inserting them in to the db
> with their proper category, tags and everything.
> 
> We could use the same procedure when moving medie if the max post value of the target
> server allow us to send these files via post, or we could use FTP so after moving successfully
> a file we'd notify the target installation plugin about the new file so i can work is the way it want's
> (we'd FTP to a tmp folder)
> 
> For small blogs this process could take less than a minute, for huge blogs it could take a couple
> of hours I don't know we'd need to benchmark this a little, but I think this is the best way to
> Import/export wordpress without having to get your hands dirty :P
> 
> this could also be extended to be compatible with old versions of WP
> 
> What do you think?
> 
> Now, this very same algorithm could be used for the next idea:
> 
> Moving a Wordpress installation from one domain to another:
> 
> For this one we would definitively need FTP to move the basic installation, the target server DB name, user and password, and after moving the essentials of the installation we could start doing the rest with the old procedure(queue items, start cleaning the items periodically)
> 
> Two features could be archived with this same idea, please tell me if you think there's something missing
> or your thoughts
> 
> Cheers ! :D 
> 
> P.S. I also posted this to http://blog.perrohunter.com/ideas-for-wp-at-gsoc/ :)
> 
> -perrohunter
> 
> ------------------------------
> 
> Message: 6
> Date: Fri, 19 Mar 2010 23:41:45 +0000
> From: Alex Hempton-Smith <hempsworth at googlemail.com>
> Subject: Re: [wp-hackers] GSoc -Proposal
> To: wp-hackers at lists.automattic.com
> Message-ID:
> 	<5a1dad881003191641s79e778a5y68a38c9cd6d0a4c0 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
> 
> Perhaps you could elaborate on what each of those proposals would
> include? Then we could help recommend which one has more mileage.
> 
> -- Alex (Hempsworth)
> 
> On Friday, March 19, 2010, Neerav Mehta <coolneerav4u at gmail.com> wrote:
>> Hello,
>> ? ?I am Neerav UG student from India, I want to work for wordpress in Gsoc
>> this year.
>> I am having some ideas & wish to implement them like:
>> 1. Advance User Menu.
>> 2. Custom user templates.
>> 3. Organising themes in better way.
>> 3. Using Back-end templates.
>> 
>> I am wishing to implement some of these ideas ...
>> Will someone help me where to start...
>> --
>> Neerav Mehta
>> B-Tech Part IV
>> Electronics Engg.
>> I.T. BHU
>> Varanasi
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> -- 
> -- Alex  (Hempsworth)
> 
> 
> ------------------------------
> 
> Message: 7
> Date: Fri, 19 Mar 2010 17:51:48 -0400
> From: Mike Schinkel <mikeschinkel at newclarity.net>
> Subject: Re: [wp-hackers] WP Ideas: API for adding simple buttons to
> 	TinyMCE
> To: wp-hackers at lists.automattic.com
> Message-ID: <3D29E345-5F58-4CCD-8024-608800431971 at newclarity.net>
> Content-Type: text/plain; charset=us-ascii
> 
> Literally 30 seconds before I read your email I was thinking about how I needed to add a editor button but how I was loathe to have to figure out how. So yes, very interested.
> 
> -Mike
> 
> On Mar 19, 2010, at 1:01 PM, Jeremy Clarke wrote:
> 
>> Basic idea: Add a wrapper function to WP that can be called in a
>> theme's functions.php (or a plugin) to add simple buttons to the
>> Visual Editor. Things like <p class="translation">  or <p
>> class="update"> that correspond with classes in the theme CSS. There
>> are a lot of times when a button just needs to wrap a tag around a bit
>> of text and it seems to me a general function that sets the before and
>> after text (i.e. <p class="..."> and </p>) would be useful to almost
>> every site with carefully considered CSS styles for posts.
>> 
>> It's possible to add buttons like this to TinyMCE yourself manually in
>> a plugin but its really, really complicated. Last time I checked it
>> involved creating several files and basically becoming skilled at the
>> TinyMCE API, something most theme/plugin devs would obviously rather
>> avoid. For this reason I think it would make sense for WP to have a
>> built-in way of adding simple buttons with only PHP. I am no good at
>> javascript so I won't be the one to add it but someone out there who
>> knows how to add buttons already could probably do it relatively
>> easily.
>> 
>> I posted about this on the Ideas Forum about a year ago:
>> http://wordpress.org/extend/ideas/topic/create-easy-api-for-adding-simple-html-tag-buttons-to-tinymce
>> 
>> Jane is cleaning out the ideas and will delete this one unless it gets
>> some more traction so if you think its a good idea please go vote or
>> leave a comment about it. I suppose if it gets enough votes in the
>> next little while I'll create a Trac ticket out of it and we can deal
>> with it in that format instead, otherwise we can delete it from ideas
>> and let it fade into the annals of features that time forgot.
>> 
>> -- 
>> Jeremy Clarke | http://jeremyclarke.org
>> Code and Design | http://globalvoicesonline.org
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 
> 
> ------------------------------
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 
> End of wp-hackers Digest, Vol 62, Issue 59
> ******************************************


From angelia at 10sexyapples.com  Sat Mar 20 02:36:24 2010
From: angelia at 10sexyapples.com (Angelia Baladon)
Date: Fri, 19 Mar 2010 19:36:24 -0700
Subject: [wp-hackers] Trying to post bug correctly - but can't get through -
	re: nav menu admin ui
Message-ID: <a4e2abe51003191936s1b8650d6je282e5ce1d58a19@mail.gmail.com>

I'm running the nightly builds and testing/developing a new site on them via
child theme of twenty ten. Child theme is mostly bare at this time, so, is
mostly twenty ten code. I don't know if code is completed on the UI for the
nav menus in the admin, but, I'm running into some pretty buggy stuff.
Created a custom menu, checked boxes all pages to be included. Problem
occurs when trying to arrange menu items. First buggy item was that it
initially wouldn't save the changes, just reverted back to flat ( I was
nesting pages to match my actual page/subpage structure ). Going in second
time I just arranged the items, no nesting, saved. Good to go. Back in again
to repeat the nesting, and could only make one change at a time for it to
save. Multiple changes equaled no save. When trying to nest two pages below
another, the second page will nest itself under the already nested subpage.
Even if it moves to the right spot initially, it will save to the sub sub
spot. Cannot get it to nest properly. Am I missing something, or legitimate
bug? Would love to post this in the right place, but, it won't let me in,
so, my apologies.

From wp at andrewnacin.com  Sat Mar 20 02:46:33 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 19 Mar 2010 22:46:33 -0400
Subject: [wp-hackers] Trying to post bug correctly - but can't get
	through - re: nav menu admin ui
In-Reply-To: <a4e2abe51003191936s1b8650d6je282e5ce1d58a19@mail.gmail.com>
References: <a4e2abe51003191936s1b8650d6je282e5ce1d58a19@mail.gmail.com>
Message-ID: <4cc4de141003191946x49b8f6f7ic0ac128c0653c088@mail.gmail.com>

Bugs can be posted to http://core.trac.wordpress.org. You login with your
WordPress.org username.

For discussions about bugs ("Is this a bug?") in a nightly build/trunk/beta,
if desired to be sent over a mailing list versus Trac, wp-testers is
probably a better choice.

In this case, this bug is known (the whole feature is a work in progress),
so no need to report it. It'll probably be fixed in the next few days.

On Fri, Mar 19, 2010 at 10:36 PM, Angelia Baladon
<angelia at 10sexyapples.com>wrote:

> I'm running the nightly builds and testing/developing a new site on them
> via
> child theme of twenty ten. Child theme is mostly bare at this time, so, is
> mostly twenty ten code. I don't know if code is completed on the UI for the
> nav menus in the admin, but, I'm running into some pretty buggy stuff.
> Created a custom menu, checked boxes all pages to be included. Problem
> occurs when trying to arrange menu items. First buggy item was that it
> initially wouldn't save the changes, just reverted back to flat ( I was
> nesting pages to match my actual page/subpage structure ). Going in second
> time I just arranged the items, no nesting, saved. Good to go. Back in
> again
> to repeat the nesting, and could only make one change at a time for it to
> save. Multiple changes equaled no save. When trying to nest two pages below
> another, the second page will nest itself under the already nested subpage.
> Even if it moves to the right spot initially, it will save to the sub sub
> spot. Cannot get it to nest properly. Am I missing something, or legitimate
> bug? Would love to post this in the right place, but, it won't let me in,
> so, my apologies.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From coolneerav4u at gmail.com  Sat Mar 20 08:52:42 2010
From: coolneerav4u at gmail.com (Neerav Mehta)
Date: Sat, 20 Mar 2010 01:52:42 -0700
Subject: [wp-hackers] GSoc -Proposal
Message-ID: <d64cc4d41003200152m73d8043dy28cfb06e92d17346@mail.gmail.com>

Basically I am talking about buddypress:
In this the options available to users are very limited
In groups there should polls created by the group owner & the members of
group can participate
also option for searching group menbers is also not there
Also there should be a calender in each group where members of group can
update the latest events there.

-- 
Neerav Mehta
B-Tech Part IV
Electronics Engg.
I.T. BHU
Varanasi

From alexandertiger at 163.com  Sat Mar 20 09:14:08 2010
From: alexandertiger at 163.com (alexandertiger)
Date: Sat, 20 Mar 2010 17:14:08 +0800 (CST)
Subject: [wp-hackers] opinions about post versioning
In-Reply-To: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
Message-ID: <11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>

Hello,everyone! As a GSOC volunteer, I'm very interested in the idea "Template Versioning ". However, when I test the function of  "Post Versioning", I've met two problems which I doubt are features needing improved.

1.When add a new post, press "Save Draft" Button directly without any input, the page jumps from "post.php" to "edit.php". However, I think it's better to do just nothing.

2.When edit a post, draft will be saved once "Save Draft" Button is pressed, and a new "post revision" is added into the Column of "Post Revisions". Wordpress does so even when nothing is changed. It's a little redundant. I think it's better to add a revision check process when "Save Draft" Button is pressed, and do nothing if nothing is changed actually.

Wish for your opinion! Thanks!


Sincerely
Alexander

From maillist at wangstedt.net  Sat Mar 20 09:22:28 2010
From: maillist at wangstedt.net (=?windows-1252?Q?Karl_W=E5ngstedt?=)
Date: Sat, 20 Mar 2010 10:22:28 +0100
Subject: [wp-hackers] Custom field for enclosures
In-Reply-To: <161617691003190626icfdf200uc7187e1afa3728b1@mail.gmail.com>
References: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net>
	<161617691003190626icfdf200uc7187e1afa3728b1@mail.gmail.com>
Message-ID: <BA239B0A-7AAC-4D05-99BD-D1905A0FC9CF@wangstedt.net>

Both .mov and .mp4 is configured to return video/quicktime and video/mp4 respectively in httpd.conf. I don't think that is where the problem is.

Do you get the enclosures field populated automatically?

I did open a ticket in Trac, but if it's only affecting my install I'll delete it.

Karl W?ngstedt



19 mar 2010 kl. 14.26 skrev Otto:

> On Thu, Mar 18, 2010 at 5:54 PM, Karl W?ngstedt <maillist at wangstedt.net> wrote:
>> One of the sites I manage is a podcasting site, and I'm preparing a move to html5 (with <video>) and WP3 for it ? hence the test site.
>> 
>> It seems like the enclosure custom field isn't automatically generated when a video is linked to in the post anymore.
> 
> Check the mime type.
> 
> WordPress does a call to get the file via the webserver and looks at
> the headers return. If the mime type that the webserver returns starts
> with "video" or "audio" then it gets enclosed. So if your webserver
> isn't configured to return the right mime type for that filetype, no
> enclosure gets made.
> 
> This all happens in do_enclose, which gets called from do_all_pings,
> which is hooked to the do_pings action, which is a scheduled event
> created by the _publish_post_hook.
> 
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From casey.bisson at gmail.com  Sat Mar 20 10:44:44 2010
From: casey.bisson at gmail.com (Casey Bisson)
Date: Sat, 20 Mar 2010 06:44:44 -0400
Subject: [wp-hackers] Custom field for enclosures
In-Reply-To: <BA239B0A-7AAC-4D05-99BD-D1905A0FC9CF@wangstedt.net>
References: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net>
	<161617691003190626icfdf200uc7187e1afa3728b1@mail.gmail.com>
	<BA239B0A-7AAC-4D05-99BD-D1905A0FC9CF@wangstedt.net>
Message-ID: <F75EF717-A264-43A1-B081-DC718E0EF6F0@gmail.com>


I've had the same problem where Apache was configured to send the  
right mime type, but other factors broke it. In my case it was the  
cache that munged the header.

You should check wht the output actually is, not what it's set to be.


On Mar 20, 2010, at 5:22 AM, Karl W?ngstedt <maillist at wangstedt.net>  
wrote:

> Both .mov and .mp4 is configured to return video/quicktime and video/ 
> mp4 respectively in httpd.conf. I don't think that is where the  
> problem is.
>
> Do you get the enclosures field populated automatically?
>
> I did open a ticket in Trac, but if it's only affecting my install  
> I'll delete it.
>
> Karl W?ngstedt
>
>
>
> 19 mar 2010 kl. 14.26 skrev Otto:
>
>> On Thu, Mar 18, 2010 at 5:54 PM, Karl W?ngstedt <maillist at wangstedt.ne 
>> t> wrote:
>>> One of the sites I manage is a podcasting site, and I'm preparing  
>>> a move to html5 (with <video>) and WP3 for it ? hence the test s 
>>> ite.
>>>
>>> It seems like the enclosure custom field isn't automatically  
>>> generated when a video is linked to in the post anymore.
>>
>> Check the mime type.
>>
>> WordPress does a call to get the file via the webserver and looks at
>> the headers return. If the mime type that the webserver returns  
>> starts
>> with "video" or "audio" then it gets enclosed. So if your webserver
>> isn't configured to return the right mime type for that filetype, no
>> enclosure gets made.
>>
>> This all happens in do_enclose, which gets called from do_all_pings,
>> which is hooked to the do_pings action, which is a scheduled event
>> created by the _publish_post_hook.
>>
>> -Otto
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From scribu at gmail.com  Sat Mar 20 11:55:46 2010
From: scribu at gmail.com (scribu)
Date: Sat, 20 Mar 2010 13:55:46 +0200
Subject: [wp-hackers] opinions about post versioning
In-Reply-To: <11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
	<11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
Message-ID: <349fe48b1003200455w13c3ddefjb890f82978400013@mail.gmail.com>

+1 on both.

You should open a trac ticket for each. They have a solid chance of making
it into WP 3.0 if you provide patches.


-- 
http://scribu.net

From hempsworth at googlemail.com  Sat Mar 20 11:57:50 2010
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Sat, 20 Mar 2010 11:57:50 +0000
Subject: [wp-hackers] GSoc -Proposal
In-Reply-To: <d64cc4d41003200152m73d8043dy28cfb06e92d17346@mail.gmail.com>
References: <d64cc4d41003200152m73d8043dy28cfb06e92d17346@mail.gmail.com>
Message-ID: <5a1dad881003200457j61821c41p31cfe77f29821c49@mail.gmail.com>

You're talking about a few projects here:

1) Group Polls
2) Search Group Members
3) Group Events (with calendar view)

As far as I know, group polls hasn't been implemented as a specific
buddypress plugin yet, and would probably be a welcome addition.
Especially if it was a fully fledged component, so the site admin
could create site-wide polls, a polls listing page etc. You could even
bring integration from PollDaddy..

Searching group members would definately be a good move, a really
useful feature that the majority of BP users would appreciate. I'd
suggest this would be the way to go!

There is already a popular BP Events component which will soon have,
if it doesn't already, calendar views. As this is being actively
developed already I wouldn't choose that.

Just my 2 cents though!

-- Alex (Hempsworth)

On Saturday, March 20, 2010, Neerav Mehta <coolneerav4u at gmail.com> wrote:
> Basically I am talking about buddypress:
> In this the options available to users are very limited
> In groups there should polls created by the group owner & the members of
> group can participate
> also option for searching group menbers is also not there
> Also there should be a calender in each group where members of group can
> update the latest events there.
>
> --
> Neerav Mehta
> B-Tech Part IV
> Electronics Engg.
> I.T. BHU
> Varanasi
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

-- 
-- Alex  (Hempsworth)

From prodevstudio at gmail.com  Sat Mar 20 12:22:52 2010
From: prodevstudio at gmail.com (Azizur Rahman)
Date: Sat, 20 Mar 2010 12:22:52 +0000
Subject: [wp-hackers] opinions about post versioning
In-Reply-To: <11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
	<11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
Message-ID: <D36E6830-BB09-4A13-8770-7A2F270ECB4A@gmail.com>

You will also need take care of all the ajax request too.

Azizur Rahman
ProDevStudio

http://prodevstudio.com

On 20 Mar 2010, at 09:14 AM, alexandertiger <alexandertiger at 163.com>  
wrote:

> Hello,everyone! As a GSOC volunteer, I'm very interested in the idea  
> "Template Versioning ". However, when I test the function of  "Post  
> Versioning", I've met two problems which I doubt are features  
> needing improved.
>
> 1.When add a new post, press "Save Draft" Button directly without  
> any input, the page jumps from "post.php" to "edit.php". However, I  
> think it's better to do just nothing.
>
> 2.When edit a post, draft will be saved once "Save Draft" Button is  
> pressed, and a new "post revision" is added into the Column of "Post  
> Revisions". Wordpress does so even when nothing is changed. It's a  
> little redundant. I think it's better to add a revision check  
> process when "Save Draft" Button is pressed, and do nothing if  
> nothing is changed actually.
>
> Wish for your opinion! Thanks!
>
>
> Sincerely
> Alexander
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From maillist at wangstedt.net  Sat Mar 20 12:37:28 2010
From: maillist at wangstedt.net (=?iso-8859-1?Q?Karl_W=E5ngstedt?=)
Date: Sat, 20 Mar 2010 13:37:28 +0100
Subject: [wp-hackers] Custom field for enclosures
In-Reply-To: <F75EF717-A264-43A1-B081-DC718E0EF6F0@gmail.com>
References: <E6DE69BF-D2FF-4507-9331-1C7F11187B6B@wangstedt.net>
	<161617691003190626icfdf200uc7187e1afa3728b1@mail.gmail.com>
	<BA239B0A-7AAC-4D05-99BD-D1905A0FC9CF@wangstedt.net>
	<F75EF717-A264-43A1-B081-DC718E0EF6F0@gmail.com>
Message-ID: <2EE783F1-0CCD-454A-ABB3-4CF55308DA9F@wangstedt.net>

The response headers from the server is video/quicktime and video/mp4. So as far as I can tell everything is correctly configured and behaves as expected on the server.

This is what I get from the server for the quicktime movie:

	? Accept-Ranges:bytes
	? Cache-Control:max-age=3600
	? Connection:Keep-Alive
	? Content-Length:16396702
	? Content-Type:video/quicktime
	? Date:Sat, 20 Mar 2010 12:33:31 GMT
	? Etag:"4e453e5-fa319e-4821b130a1b80"
	? Expires:Sat, 20 Mar 2010 13:33:31 GMT
	? Keep-Alive:timeout=15, max=500
	? Last-Modified:Thu, 18 Mar 2010 22:51:42 GMT
	? Ms-Author-Via:DAV
	? Server:Apache/2.2.13 (Unix) mod_ssl/2.2.13 OpenSSL/0.9.8l DAV/2 PHP/5.3.1 SVN/1.6.5

But still, does it work for any of you guys, or do you get the same results as I do?

Karl W?ngstedt



20 mar 2010 kl. 11.44 skrev Casey Bisson:

> 
> I've had the same problem where Apache was configured to send the right mime type, but other factors broke it. In my case it was the cache that munged the header.
> 
> You should check wht the output actually is, not what it's set to be.
> 
> 
> On Mar 20, 2010, at 5:22 AM, Karl W?ngstedt <maillist at wangstedt.net> wrote:
> 
>> Both .mov and .mp4 is configured to return video/quicktime and video/mp4 respectively in httpd.conf. I don't think that is where the problem is.
>> 
>> Do you get the enclosures field populated automatically?
>> 
>> I did open a ticket in Trac, but if it's only affecting my install I'll delete it.
>> 
>> Karl W?ngstedt
>> 
>> 
>> 
>> 19 mar 2010 kl. 14.26 skrev Otto:
>> 
>>> On Thu, Mar 18, 2010 at 5:54 PM, Karl W?ngstedt <maillist at wangstedt.net> wrote:
>>>> One of the sites I manage is a podcasting site, and I'm preparing a move to html5 (with <video>) and WP3 for it ? hence the test site.
>>>> 
>>>> It seems like the enclosure custom field isn't automatically generated when a video is linked to in the post anymore.
>>> 
>>> Check the mime type.
>>> 
>>> WordPress does a call to get the file via the webserver and looks at
>>> the headers return. If the mime type that the webserver returns starts
>>> with "video" or "audio" then it gets enclosed. So if your webserver
>>> isn't configured to return the right mime type for that filetype, no
>>> enclosure gets made.
>>> 
>>> This all happens in do_enclose, which gets called from do_all_pings,
>>> which is hooked to the do_pings action, which is a scheduled event
>>> created by the _publish_post_hook.
>>> 
>>> -Otto
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From will at itsananderson.com  Sat Mar 20 12:40:31 2010
From: will at itsananderson.com (Will Anderson)
Date: Sat, 20 Mar 2010 08:40:31 -0400
Subject: [wp-hackers] opinions about post versioning
In-Reply-To: <D36E6830-BB09-4A13-8770-7A2F270ECB4A@gmail.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
	<11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
	<D36E6830-BB09-4A13-8770-7A2F270ECB4A@gmail.com>
Message-ID: <a7b7a8481003200540g6032d205wd960a874103e854c@mail.gmail.com>

I'm not sure I actually care for the first idea. Once a post is saved
(whether it's published or not), you begin editing it. Makes sense to do
that in edit.php. I haven't looked at the source, so I could quite easily be
wrong, but my guess would be that you're gonna have to duplicate logic from
edit.php into post.php to do this.

The second idea makes tons of sense though. There's no need to save content
when it's exactly the same.

As an extension to this idea, WordPress stores the entire post content in
each revision, right? Since it already has diff code builtin for revision
comparison, would it be terribly difficult to store post revisions as diffs
in the database? What I'm thinking is that you'd have a full version of the
latest revision, then diffs going back to the original revision. This would
add a bit of complication to the revision storage/retrieval codebase, but it
might still be worth considering.

From scribu at gmail.com  Sat Mar 20 13:29:04 2010
From: scribu at gmail.com (scribu)
Date: Sat, 20 Mar 2010 15:29:04 +0200
Subject: [wp-hackers] opinions about post versioning
In-Reply-To: <a7b7a8481003200540g6032d205wd960a874103e854c@mail.gmail.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
	<11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
	<D36E6830-BB09-4A13-8770-7A2F270ECB4A@gmail.com>
	<a7b7a8481003200540g6032d205wd960a874103e854c@mail.gmail.com>
Message-ID: <349fe48b1003200629l16468b1fw2243ec30a8580d33@mail.gmail.com>

On Sat, Mar 20, 2010 at 2:40 PM, Will Anderson <will at itsananderson.com>wrote:

> I'm not sure I actually care for the first idea. Once a post is saved
> (whether it's published or not), you begin editing it. Makes sense to do
> that in edit.php. I haven't looked at the source, so I could quite easily
> be
> wrong, but my guess would be that you're gonna have to duplicate logic from
> edit.php into post.php to do this.
>

edit.php is the page that displays the list of recent posts. post.php is the
one you're thinking about.


-- 
http://scribu.net

From will at itsananderson.com  Sat Mar 20 13:39:32 2010
From: will at itsananderson.com (Will Anderson)
Date: Sat, 20 Mar 2010 09:39:32 -0400
Subject: [wp-hackers] opinions about post versioning
In-Reply-To: <349fe48b1003200629l16468b1fw2243ec30a8580d33@mail.gmail.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
	<11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
	<D36E6830-BB09-4A13-8770-7A2F270ECB4A@gmail.com>
	<a7b7a8481003200540g6032d205wd960a874103e854c@mail.gmail.com>
	<349fe48b1003200629l16468b1fw2243ec30a8580d33@mail.gmail.com>
Message-ID: <a7b7a8481003200639t28bc671bxa75b2a21557f8753@mail.gmail.com>

Aha, that's what happens when I open my mouth without verifying things
first. Looks like I also misread the description of the problem and missed
the part about it being a blank post. I guess maybe I should make it a rule
not to post to wp-hackers before 9:00am on a Saturday :)

On Sat, Mar 20, 2010 at 9:29 AM, scribu <scribu at gmail.com> wrote:

> On Sat, Mar 20, 2010 at 2:40 PM, Will Anderson <will at itsananderson.com
> >wrote:
>
> > I'm not sure I actually care for the first idea. Once a post is saved
> > (whether it's published or not), you begin editing it. Makes sense to do
> > that in edit.php. I haven't looked at the source, so I could quite easily
> > be
> > wrong, but my guess would be that you're gonna have to duplicate logic
> from
> > edit.php into post.php to do this.
> >
>
> edit.php is the page that displays the list of recent posts. post.php is
> the
> one you're thinking about.
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From casey.bisson at gmail.com  Sat Mar 20 14:16:12 2010
From: casey.bisson at gmail.com (Casey Bisson)
Date: Sat, 20 Mar 2010 10:16:12 -0400
Subject: [wp-hackers] memcached object cache breaking http head requests
Message-ID: <3ee7077c1003200716q1fc247edo2907496f49270564@mail.gmail.com>

This is an odd one.

When running WordPress MU (tested in 2.8x and 2.9x) with the memcached
object cache active, it refuses to respond to HTTP HEAD requests. The result
of this is that head requests to check the mimetype of a linked file (as for
setting the enclosure) or size (as the video framework plugin does) fail.

curl -I http://url.path


returns either an empty result, or (if fronted with varnish) a 503 error.

telnet site.org 80



HEAD /url.path HTTP/1.1

host: site.org


returns the same.

Moving object-cache.php out of /wp-content or commenting out one line (
$this->mc[$bucket]->addServer(...) ) solves the problem. Oddly, the problem
occurs only when wp_cache_init() is called the second time in
wp-settings.php (if I comment out that line, the problem disappears as well,
even though the cache was initialized previously).

The problem occurs with multiple revisions memcache object-cache.php,
including the most recent, on multiple servers with different versions of
memcached.
http://plugins.trac.wordpress.org/browser/memcached/trunk/

I have not yet had an opportunity to test this with non-MU versions of WP or
with /trunk/ (where it appears that calls to wp_cache_init() have been
replaced with wp_start_object_cache() ), so there's a good chance this is MU
specific or fixed already, but in all my searching I haven't been able to
find any mention of the problem.

I'd love to know if others have experienced this problem or solved it.

--Casey

From tvmanukrishnan at gmail.com  Sat Mar 20 15:09:28 2010
From: tvmanukrishnan at gmail.com (Manu Krishnan T.V)
Date: Sat, 20 Mar 2010 20:39:28 +0530
Subject: [wp-hackers] GSoC Proposal - Move WordPress
Message-ID: <4BA4E528.90909@gmail.com>

Hi,

I am Manu Krishnan T.V, a 6th semester Computer Science Engineering 
student, under Calicut University, Kerala, India.

As I went through the GSoC 2010 ideas of wordpress, I got attracted by 
the "Move WordPress". I have thought about such a feature a while ago, 
when I had an 'extreme' experience in moving a wordpress blog from one 
host to other.

As a part time job and hobby, I do web designing, consultation and 
provide web hosting solutions for clients in my area. I have been using 
wordpress for years and currently manage many wordpress blogs, including 
my personal blog. When I get an assignment of moving a wordpress blog, I 
do it in the normal way of backing up database and files and restoring 
it and if there is a domain change, I prefer replacing the URL in the 
exported sql file.
But, once, I had to move a blog from one hosting provider to mine and 
the owner of the blog had nothing except his wordpress login details and 
was not in good terms with the old hosting provider. So, I had to do all 
the move manually, except the posts(Thanks to those who created 
import/export feature).

I think this is the same case for a wordpress.com user to move his blog 
to a separate host.

So, my idea is to use the currently available features of wordpress 
update and theme/plugin installer to move a wordpress blog to new host. 
The idea is to run a feature from a newly installed wordpress with the 
target wordpress address, administrator login details and ftp details if 
available. Installing new wordpress is not a hard task as most hosting 
providers have automatic installers like fantastico.

Since wordpress usually have full access to the database, some code in 
the hosted server will be capable to create an export file with the 
details needed, similar to the current export, but with extra details 
including settings. If FTP access is available, I hope we could move all 
the files in the 'wp-content' to the new host (Haven't tried it yet with 
two servers)

But, if FTP details are not available(say in the case of wordpress.com 
account), from the new export file, we could fetch the details of themes 
and plugins and use the theme/plugin installer to fetch and install 
them. This is just theoretical and may cause problems with custom 
themes/plugins and with different versions. I would like to hear more 
ideas for implementing this.

Also, more study has to be done about the architecture of wordpress.com 
and what all capability it provides to a normal user in the backend, 
like the access to database. This can thus help a wordpress.com blogger 
to move to his own host, having more features.

I also have an idea of using this feature for cloning wordpress blog, 
there by acting as a mirror or for a backup.


Now, about me. I am a free software supporter and an active member of 
the free software user groups in Kerala. I have a good knowledge of php, 
MySQL, HTML, tools like phpMyadmin and about the way how plugins work in 
wordpress. Now, I spent most of my free time playing with python 
scripts. I haven't done any upstream contributions as code, but is a 
member of SMC <http://smc.org.in/>, which translates programs to 
Malayalam, my mother tongue. I have also created few python and shell 
scripts for me, my friends, and my clients, which include manipulating 
'gpx' files for OSM and transaction data for banks.

I appreciate all the help and assistance from the community to 
participate in GSoC with this project idea.

Waiting for more feedback and suggestions,
-- 
With love and regards,
Tvm a.k.a Bizzard

Find me @ Bizzard's Hackshop <http://www.bizzard.info/>

Quote: I'm not a HANDSOME guy. But I can give my HAND to SOME one who 
needs help. Beauty is in heart, not in face..!! - A.P.J Abdul Kalam

From nitin.reddy at danatev.com  Sat Mar 20 17:03:16 2010
From: nitin.reddy at danatev.com (Nitin Reddy)
Date: Sat, 20 Mar 2010 21:03:16 +0400
Subject: [wp-hackers] GSoC Proposal - Move WordPress
In-Reply-To: <4BA4E528.90909@gmail.com>
References: <4BA4E528.90909@gmail.com>
Message-ID: <C05A3EFA8A22824A935EF26910C45B8C0C38083CA8@DANATEXCHANGE.corp.danatev.ae>

Hi Manu!

As moving blog posts would take a long time to execute, I would think of building either something that runs on either the source or the destionation server and copies the files across through XML-RPC or direct database queries (I'd prefer XML-RPC as it would work across HTTP). A Java-based application would seem like a good idea since it would work on both Windows and Linux (and possible any other platforms that folks out there use).

If the application were to be a web-based PHP script, then I'd probably look for something that can migrate a few posts at a time to keep the script from timing out. On my hosting provider, a WordPress upgrade never finishes as the script timeout occurs midway.

Mine is just one thought among the many in the community, so you might want to hear a couple more before you start planning.

Regards,
Nitin Reddy

--

"Follow the evidence wherever it leads" -Socrates
Email: kay-underscore-en-ai-tee-ai-en-underscore-arr-at-yahoo-dot-co-dot-in  (To spambot authors: you didn't anticipate that, did you?)
WWW: Coming Soon... Under Renovation

________________________________________
From: wp-hackers-bounces at lists.automattic.com [wp-hackers-bounces at lists.automattic.com] On Behalf Of Manu Krishnan T.V [tvmanukrishnan at gmail.com]
Sent: Saturday, March 20, 2010 7:09 PM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] GSoC Proposal - Move WordPress

Hi,

I am Manu Krishnan T.V, a 6th semester Computer Science Engineering
student, under Calicut University, Kerala, India.

As I went through the GSoC 2010 ideas of wordpress, I got attracted by
the "Move WordPress". I have thought about such a feature a while ago,
when I had an 'extreme' experience in moving a wordpress blog from one
host to other.

As a part time job and hobby, I do web designing, consultation and
provide web hosting solutions for clients in my area. I have been using
wordpress for years and currently manage many wordpress blogs, including
my personal blog. When I get an assignment of moving a wordpress blog, I
do it in the normal way of backing up database and files and restoring
it and if there is a domain change, I prefer replacing the URL in the
exported sql file.
But, once, I had to move a blog from one hosting provider to mine and
the owner of the blog had nothing except his wordpress login details and
was not in good terms with the old hosting provider. So, I had to do all
the move manually, except the posts(Thanks to those who created
import/export feature).

I think this is the same case for a wordpress.com user to move his blog
to a separate host.

So, my idea is to use the currently available features of wordpress
update and theme/plugin installer to move a wordpress blog to new host.
The idea is to run a feature from a newly installed wordpress with the
target wordpress address, administrator login details and ftp details if
available. Installing new wordpress is not a hard task as most hosting
providers have automatic installers like fantastico.

Since wordpress usually have full access to the database, some code in
the hosted server will be capable to create an export file with the
details needed, similar to the current export, but with extra details
including settings. If FTP access is available, I hope we could move all
the files in the 'wp-content' to the new host (Haven't tried it yet with
two servers)

But, if FTP details are not available(say in the case of wordpress.com
account), from the new export file, we could fetch the details of themes
and plugins and use the theme/plugin installer to fetch and install
them. This is just theoretical and may cause problems with custom
themes/plugins and with different versions. I would like to hear more
ideas for implementing this.

Also, more study has to be done about the architecture of wordpress.com
and what all capability it provides to a normal user in the backend,
like the access to database. This can thus help a wordpress.com blogger
to move to his own host, having more features.

I also have an idea of using this feature for cloning wordpress blog,
there by acting as a mirror or for a backup.


Now, about me. I am a free software supporter and an active member of
the free software user groups in Kerala. I have a good knowledge of php,
MySQL, HTML, tools like phpMyadmin and about the way how plugins work in
wordpress. Now, I spent most of my free time playing with python
scripts. I haven't done any upstream contributions as code, but is a
member of SMC <http://smc.org.in/>, which translates programs to
Malayalam, my mother tongue. I have also created few python and shell
scripts for me, my friends, and my clients, which include manipulating
'gpx' files for OSM and transaction data for banks.

I appreciate all the help and assistance from the community to
participate in GSoC with this project idea.

Waiting for more feedback and suggestions,
--
With love and regards,
Tvm a.k.a Bizzard

Find me @ Bizzard's Hackshop <http://www.bizzard.info/>

Quote: I'm not a HANDSOME guy. But I can give my HAND to SOME one who
needs help. Beauty is in heart, not in face..!! - A.P.J Abdul Kalam
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From justin.shreve at gmail.com  Sat Mar 20 21:06:54 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Sat, 20 Mar 2010 17:06:54 -0400
Subject: [wp-hackers] GSoC Proposal: Installation System Enhancements
Message-ID: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>

Hello All,

I'm currently working away on some ideas for the upcoming summer of code.

I just finished writing a draft proposal for one of my ideas and would like
some feedback. Go ahead and suggest anything else you would like to see, not
see, etc. Any comments are appreciated.

Here is the introduction and proposal:

----

WordPress is already known for its famous and easy to use ?five minute
install? but enhancements could make the installer even easier to use.
Additional help could be offered to newer users and more advanced users
could take use of extra options and tools.

*Project Proposal*

I propose to improve the WordPress install system by adding new enhancements
to the existing installation system. These improvements are outlined below.

*The method of kicking off the installation*

With my proposed changes, users will be able to start a WordPress
installation via one of two ways:

1) WordPress users will be able to download a single PHP file and upload it
to their server. The installer will check that you have the required
conditions to run WordPress (minimum PHP version, etc) and then the user
will be asked which folder they would like to install WordPress in.  The PHP
file will pull the latest WordPress version from the server and
automatically unzip the contents (Similar to how automatic update features
work). They will then be directed to the beginning installation screen.

OR

2) Users will be able to download a WordPress package and browse to the
directory as they currently do now. This way a user isn?t ?forced? to use a
certain version.

*A step-by-step help system*
*
*The new installation system will include an option that should popup a
(LightBox like) screen.  The help system will be mentioned to the user when
they first start the installation but more advanced users will not be
required to read through the steps.

If a user chooses to use the help system (by selecting a button or icon) a
popup will display relevant documentation on what is required for the screen
the user is on.

Example: If the user is on the screen for entering database details they can
click the help option and a popup will display walking them through finding
out their database details on various configurations.

The help system should be interactive so they can select various documents
depending on their configurations.

There should be an option to close the help system at any time or to read
further on the WordPress Codex.

*Automatic plugin, theme and language installation*
*
*Additional screens will be added to the installation wizard.  These screens
will be to install plugins, themes and to install a different language pack
automatically.

Plugins: Users will be given the option to browse the
wordpress.org/extend/plugin directory for plugins compatible with the
version they are
installing. They can check multiple ones and the plugins will install and be
ready for use before first login. Automattic plugins, core plugins &
featured plugins would be displayed first. This system would allow for
WordPress to easily allow users to add features that seem to add too much
bloat to core.  The system would also make it much easier for users to learn
about plugins from the get go.

Themes: Similarly users will be able to choose either from the WordPress
default theme (in this case twentyten ) or by browsing the
wordpress.org/extend/ theme directory. It provides the same benefits as the
above plugin screen and allows users to start customizing their blogs first
thing.

Language: Like plugins & themes, a user should be able to choose their
localization from the installer if they haven?t already done so through
other means.

*Installation Progress*
*
*To go along with the additional screens and settings a progress system will
be displayed at the top of each step in the installation. The progress
system should show the current step and what the other upcoming steps are
called so users can monitor their progress.

--------------------------------------

Thanks again for taking the time to read my proposal and give some feedback.
I'll try to start doing the same for any other proposals!

From perro.hunter at gmail.com  Sat Mar 20 21:20:46 2010
From: perro.hunter at gmail.com (Perro Hunter)
Date: Sat, 20 Mar 2010 15:20:46 -0600
Subject: [wp-hackers] GSoc - Idea: Import/Export+Move WP
Message-ID: <A63EEBDE-238E-4605-AC72-9521B117D887@gmail.com>

Hey there everyone !

I'm a computer science engineer student from Mexico 
and this is the first year I'll try out for GSoc

I'm really exited on getting a chance to contribute 
with wordpress since it's a really popular piece of software :) 

I think i've got some ideas to develop some of the ideas
that you proposed this year and I'd love to hear some feedback from
you. While reading them the first 2 that got my attention were the
Blog Import/Export feature and the Moving Wordpress feature since
I've already had to move a wordpress installation before and I know it
was sorta uncomfortable, from those experience I think I can start
something, let me know what you think :)

Blog Import/Export idea:

The thing here is that we not only need to move a huge number of post
we also need to move comments, pages, tags, categories and links current
import/export feature would give you a dump of XML that you can take to a 
new wordpress installation and upload it yourself. This sometimes is nasty if 
the xml dump is huge, also this dump doesn't help you export/import the media
those post are using which is a problem since most of the users don't know how
to deal with FTPs and they should't have to deal with downloading everything to
their PC's and uploading it to the new server.

For this I propose a Plugin that would be needed to be installed on both wordpress
, I'm not sure yet wheter we should attack the next problem from the original
installation or from the target installation.

If we were doing this from the source installation we'd need to first make sure
the plugin is ON on the target installation, we would use the admin user and password
to authenticate remotely.

I know we have to move a great number of post-objects (posts,comments,categories,etc)
for this one we are going to create a queue of things that are going to be exported, this
could latter allow users to personalize what are the elements that they'd like to move only, then
we'd run a quick scan on each of the queued elements to see the media they are using
and queue those file on the table too, I'm using this queue table first so when we start
moving the elements and files from one installation to another if the script timeouts we can
restart the process and take off where it stopped last time ;)

Once the queue is ready to go, we even got a way to calculate percentage ( 1/3000 elements to move = 0.03%)
we'd start calling the move method, on the user interface we could have an ajax call
that refresh the status of the script every X seconds or minutes, it could get a new percentage
number to display and even reactive the moving script if it already timed out. Every time
an element was successfully moved it'd be mark as it on the queue, we could move
a large number of post-objects (posts,comments) using curl from one server to another,
I know server to server bandwidth is way better than home-bandwidth, on the target
installation the plugin would be receiving all the elements and inserting them in to the db
with their proper category, tags and everything.

We could use the same procedure when moving medie if the max post value of the target
server allow us to send these files via post, or we could use FTP so after moving successfully
a file we'd notify the target installation plugin about the new file so i can work is the way it want's
(we'd FTP to a tmp folder)

For small blogs this process could take less than a minute, for huge blogs it could take a couple
of hours I don't know we'd need to benchmark this a little, but I think this is the best way to
Import/export wordpress without having to get your hands dirty :P

this could also be extended to be compatible with old versions of WP

What do you think?

Now, this very same algorithm could be used for the next idea:

Moving a Wordpress installation from one domain to another:

For this one we would definitively need FTP to move the basic installation, the target server DB name, user and password, and after moving the essentials of the installation we could start doing the rest with the old procedure(queue items, start cleaning the items periodically)

Two features could be archived with this same idea, please tell me if you think there's something missing
or your thoughts

Cheers ! :D 

From scribu at gmail.com  Sat Mar 20 22:26:02 2010
From: scribu at gmail.com (scribu)
Date: Sun, 21 Mar 2010 00:26:02 +0200
Subject: [wp-hackers] GSoC Proposal: Installation System Enhancements
In-Reply-To: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>
References: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>
Message-ID: <349fe48b1003201526w74cd6051i3ef77a31bab162fc@mail.gmail.com>

I don't see the point in having the option to install plugins and themes at
the installation stage. It would require WP to already be set up, thus the
installation process would already be over.

What might be useful is to add links to the theme and plugin admin screens
on the final screen of the install process.

-- 
http://scribu.net

From mikeschinkel at newclarity.net  Sat Mar 20 22:34:18 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 20 Mar 2010 18:34:18 -0400
Subject: [wp-hackers] GSoC Proposal: Installation System Enhancements
In-Reply-To: <349fe48b1003201526w74cd6051i3ef77a31bab162fc@mail.gmail.com>
References: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>
	<349fe48b1003201526w74cd6051i3ef77a31bab162fc@mail.gmail.com>
Message-ID: <81E739F3-3F2E-4FEE-AAAE-B572DE661BB6@newclarity.net>

What would be nice would be a way to install a selected theme+predefined set of plugins, for example for vertical market solutions like a real estate agent site or a restaurant site or something else.  

What I'm proposing is not to give the user a list to select from but instead give the people who provide those vertical solutions a way to provide their users with a simple installer that would first install both WordPress and then their package of theme+plugins without additional burden on the user.

-Mike

On Mar 20, 2010, at 6:26 PM, scribu wrote:

> I don't see the point in having the option to install plugins and themes at
> the installation stage. It would require WP to already be set up, thus the
> installation process would already be over.
> 
> What might be useful is to add links to the theme and plugin admin screens
> on the final screen of the install process.
> 
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From justin.shreve at gmail.com  Sat Mar 20 22:48:37 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Sat, 20 Mar 2010 18:48:37 -0400
Subject: [wp-hackers] GSoC Proposal: Installation System Enhancements
In-Reply-To: <81E739F3-3F2E-4FEE-AAAE-B572DE661BB6@newclarity.net>
References: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>
	<349fe48b1003201526w74cd6051i3ef77a31bab162fc@mail.gmail.com>
	<81E739F3-3F2E-4FEE-AAAE-B572DE661BB6@newclarity.net>
Message-ID: <a93cee651003201548j5e9b879apb6535a5ca45fc62f@mail.gmail.com>

scrbu:

I see it as part of the overall setup of the blog which is why I thought it
would be a nice feature to include. It would be right after the admin
account is created etc but allows them to setup some additional features
before they finish the install/setup.

Mike:

I thought about this too. A way to bundle in some plugins/themes that
automatically get installed. I think it may be a good feature to include as
part of the project.

On Sat, Mar 20, 2010 at 6:34 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> What would be nice would be a way to install a selected theme+predefined
> set of plugins, for example for vertical market solutions like a real estate
> agent site or a restaurant site or something else.
>
> What I'm proposing is not to give the user a list to select from but
> instead give the people who provide those vertical solutions a way to
> provide their users with a simple installer that would first install both
> WordPress and then their package of theme+plugins without additional burden
> on the user.
>
> -Mike
>
> On Mar 20, 2010, at 6:26 PM, scribu wrote:
>
> > I don't see the point in having the option to install plugins and themes
> at
> > the installation stage. It would require WP to already be set up, thus
> the
> > installation process would already be over.
> >
> > What might be useful is to add links to the theme and plugin admin
> screens
> > on the final screen of the install process.
> >
> > --
> > http://scribu.net
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From stas at nerd.ro  Sat Mar 20 23:16:14 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Sun, 21 Mar 2010 01:16:14 +0200
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
Message-ID: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>


Hi hackers,
I can see GSoC in WordPress Camp is on hype :)

This summer I have not much to do, so I said to dedicate my free time
contributing to WordPress project, which fan I'm since some time.

I've read the ideas page and come to the conclusion that improving
profiles.wordpress.org would be a great contribution not only to the
project itself, but to the whole community. Plus, I like hacking all
kind of stuff, and this idea offers almost the full pack of stuff you
can play with, from php and python code (trac) to fetching svn commits
and evaluating all kind/type of data.

>From what I understand there would be cool to get some kind of
rating integrated into the system like we can see on social networks for
hackers like ohloh. Rating to depend on contribution (of all kind, from
forum activities to commits on svn repo, be there plugins or core
projects). A way I would go doing that is dividing the system into
different parts:
* backend, the fetchers and spiders, evaluation scripts that update the
db, trigger scripts that may call the update process
* frontend, where all the magic is shown and can be manipulated (I think
a good idea would be to allow users doing stuff like on facebook `like
or not`). Also the frontend part must offer simplest UI as to the
visitor, same to the user where he can specify his details like codex
username or what's already on profiles.wordpress.org.

Also, talking about backend, I believe implementing some kind of
algorithm that will grow rank/karma depending on activities kind.
Like give a 5 to the user if he contributed to codex documentation, and
4 if he committed something into svn. Or 7 if he fixed a bug.

Pretty much, I would like to steal as much as I can from the
Launchpad.net project. They got some pretty interesting karma system,
which I believe is a good starting point.

So, feel free to blame me if I'm thinking wrong or help me get my
thoughts better. Hope I got somebody interested who can support my
proposal. :)

Have a nice weekend. 

P.S.: Here's my profile: http://profiles.wordpress.org/c00l2sv/




-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From justin.shreve at gmail.com  Sat Mar 20 23:27:09 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Sat, 20 Mar 2010 19:27:09 -0400
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
Message-ID: <a93cee651003201627k46fd0fds6ab46566e253f9fe@mail.gmail.com>

It would be great to see something like this.

Feature idea: It would be nice if users could be grouped. For example if I
submit patches, create plugins or something I would be in a certain group.
If you help out on the support forums and update some Codex articles you are
in another group. This could lead to some cool sorting. Example:
http://profiles.wordpress.org/users/ is just a listing right now, if we were
grouped you could separate by "developers", or "supporters" or something.

Check out http://directory.freelanceswitch.com/ too - you could allow people
to have some similar functionality like that in the profiles system.

One thing I worry about is sometimes considering one type of contributing a
higher importance over another. It could send for example the message that
patches are more important then working in the support forums and writing
documentation.

- Justin

On Sat, Mar 20, 2010 at 7:16 PM, Stas Su?cov <stas at nerd.ro> wrote:

>
> Hi hackers,
> I can see GSoC in WordPress Camp is on hype :)
>
> This summer I have not much to do, so I said to dedicate my free time
> contributing to WordPress project, which fan I'm since some time.
>
> I've read the ideas page and come to the conclusion that improving
> profiles.wordpress.org would be a great contribution not only to the
> project itself, but to the whole community. Plus, I like hacking all
> kind of stuff, and this idea offers almost the full pack of stuff you
> can play with, from php and python code (trac) to fetching svn commits
> and evaluating all kind/type of data.
>
> >From what I understand there would be cool to get some kind of
> rating integrated into the system like we can see on social networks for
> hackers like ohloh. Rating to depend on contribution (of all kind, from
> forum activities to commits on svn repo, be there plugins or core
> projects). A way I would go doing that is dividing the system into
> different parts:
> * backend, the fetchers and spiders, evaluation scripts that update the
> db, trigger scripts that may call the update process
> * frontend, where all the magic is shown and can be manipulated (I think
> a good idea would be to allow users doing stuff like on facebook `like
> or not`). Also the frontend part must offer simplest UI as to the
> visitor, same to the user where he can specify his details like codex
> username or what's already on profiles.wordpress.org.
>
> Also, talking about backend, I believe implementing some kind of
> algorithm that will grow rank/karma depending on activities kind.
> Like give a 5 to the user if he contributed to codex documentation, and
> 4 if he committed something into svn. Or 7 if he fixed a bug.
>
> Pretty much, I would like to steal as much as I can from the
> Launchpad.net project. They got some pretty interesting karma system,
> which I believe is a good starting point.
>
> So, feel free to blame me if I'm thinking wrong or help me get my
> thoughts better. Hope I got somebody interested who can support my
> proposal. :)
>
> Have a nice weekend.
>
> P.S.: Here's my profile: http://profiles.wordpress.org/c00l2sv/
>
>
>
>
> --
> ()  Campania Panglicii ?n ASCII
> /\  http://stas.nerd.ro/ascii/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From stas at nerd.ro  Sat Mar 20 23:32:30 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Sun, 21 Mar 2010 01:32:30 +0200
Subject: [wp-hackers] GSoC Proposal: Installation System Enhancements
In-Reply-To: <a93cee651003201548j5e9b879apb6535a5ca45fc62f@mail.gmail.com>
References: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>
	<349fe48b1003201526w74cd6051i3ef77a31bab162fc@mail.gmail.com>
	<81E739F3-3F2E-4FEE-AAAE-B572DE661BB6@newclarity.net>
	<a93cee651003201548j5e9b879apb6535a5ca45fc62f@mail.gmail.com>
Message-ID: <1269127950.2116.71.camel@rivalry.c7.campus.utcluj.ro>

?n data de Sb, 20-03-2010 la 18:48 -0400, Justin Shreve a scris:
> scrbu:
> 
> I see it as part of the overall setup of the blog which is why I thought it
> would be a nice feature to include. It would be right after the admin
> account is created etc but allows them to setup some additional features
> before they finish the install/setup.
> 
> Mike:
> 
> I thought about this too. A way to bundle in some plugins/themes that
> automatically get installed. I think it may be a good feature to include as
> part of the project.
> 
> On Sat, Mar 20, 2010 at 6:34 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
> 
> > What would be nice would be a way to install a selected theme+predefined
> > set of plugins, for example for vertical market solutions like a real estate
> > agent site or a restaurant site or something else.
> >
> > What I'm proposing is not to give the user a list to select from but
> > instead give the people who provide those vertical solutions a way to
> > provide their users with a simple installer that would first install both
> > WordPress and then their package of theme+plugins without additional burden
> > on the user.
> >
> > -Mike
> >
> > On Mar 20, 2010, at 6:26 PM, scribu wrote:
> >
> > > I don't see the point in having the option to install plugins and themes
> > at
> > > the installation stage. It would require WP to already be set up, thus
> > the
> > > installation process would already be over.
> > >
> > > What might be useful is to add links to the theme and plugin admin
> > screens
> > > on the final screen of the install process.
> > >

I would bundle this idea with the migration idea.
Get the php file that does the magic, if ok, go and make a choice:
* clean install
* import from a remote host

Keep it simple. I'm not sure guys who need (lets say) ecommerce package
will just go and use this script for that. Also, an end user just wants
his blog, if you can make that easy as jumping, it's awesome.

So far, imho it's the best proposal if you bundle it with the migration
process. I didn't like the ideas with migration using FTP, imho,
creating an api (json powered let's say, or extend the current xmlrpc)
that will serve all the get_bloginfo() and the rest of the data should
be the only one considered. The plugins can be installed from the
plugins directory after that, and the media, can be moved as it was done
so far.

Anyway, I like the direction you're taken.


-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From stas at nerd.ro  Sat Mar 20 23:40:46 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Sun, 21 Mar 2010 01:40:46 +0200
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <a93cee651003201627k46fd0fds6ab46566e253f9fe@mail.gmail.com>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<a93cee651003201627k46fd0fds6ab46566e253f9fe@mail.gmail.com>
Message-ID: <1269128446.2116.77.camel@rivalry.c7.campus.utcluj.ro>

?n data de Sb, 20-03-2010 la 19:27 -0400, Justin Shreve a scris:
> It would be great to see something like this.
> 
> Feature idea: It would be nice if users could be grouped. For example if I
> submit patches, create plugins or something I would be in a certain group.
> If you help out on the support forums and update some Codex articles you are
> in another group. This could lead to some cool sorting. Example:
> http://profiles.wordpress.org/users/ is just a listing right now, if we were
> grouped you could separate by "developers", or "supporters" or something.
> 

Niceee. I would go far and use the word tagged instead of grouped. :)

> Check out http://directory.freelanceswitch.com/ too - you could allow people
> to have some similar functionality like that in the profiles system.
> 
> One thing I worry about is sometimes considering one type of contributing a
> higher importance over another. It could send for example the message that
> patches are more important then working in the support forums and writing
> documentation.

Oh, usually writing documentation is the most boring activity and not
too many developers are attracted to it. This is the only reason I
bumped the score.



> 
> - Justin
> 
> On Sat, Mar 20, 2010 at 7:16 PM, Stas Su?cov <stas at nerd.ro> wrote:
> 
> >
> > Hi hackers,
> > I can see GSoC in WordPress Camp is on hype :)
> >
> > This summer I have not much to do, so I said to dedicate my free time
> > contributing to WordPress project, which fan I'm since some time.
> >
> > I've read the ideas page and come to the conclusion that improving
> > profiles.wordpress.org would be a great contribution not only to the
> > project itself, but to the whole community. Plus, I like hacking all
> > kind of stuff, and this idea offers almost the full pack of stuff you
> > can play with, from php and python code (trac) to fetching svn commits
> > and evaluating all kind/type of data.
> >
> > >From what I understand there would be cool to get some kind of
> > rating integrated into the system like we can see on social networks for
> > hackers like ohloh. Rating to depend on contribution (of all kind, from
> > forum activities to commits on svn repo, be there plugins or core
> > projects). A way I would go doing that is dividing the system into
> > different parts:
> > * backend, the fetchers and spiders, evaluation scripts that update the
> > db, trigger scripts that may call the update process
> > * frontend, where all the magic is shown and can be manipulated (I think
> > a good idea would be to allow users doing stuff like on facebook `like
> > or not`). Also the frontend part must offer simplest UI as to the
> > visitor, same to the user where he can specify his details like codex
> > username or what's already on profiles.wordpress.org.
> >
> > Also, talking about backend, I believe implementing some kind of
> > algorithm that will grow rank/karma depending on activities kind.
> > Like give a 5 to the user if he contributed to codex documentation, and
> > 4 if he committed something into svn. Or 7 if he fixed a bug.
> >
> > Pretty much, I would like to steal as much as I can from the
> > Launchpad.net project. They got some pretty interesting karma system,
> > which I believe is a good starting point.
> >
> > So, feel free to blame me if I'm thinking wrong or help me get my
> > thoughts better. Hope I got somebody interested who can support my
> > proposal. :)
> >
> > Have a nice weekend.
> >
> > P.S.: Here's my profile: http://profiles.wordpress.org/c00l2sv/
> >
> >
> >
> >
> > --
> > ()  Campania Panglicii ?n ASCII
> > /\  http://stas.nerd.ro/ascii/
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From justin.shreve at gmail.com  Sat Mar 20 23:43:42 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Sat, 20 Mar 2010 19:43:42 -0400
Subject: [wp-hackers] GSoC Proposal: Installation System Enhancements
In-Reply-To: <1269127950.2116.71.camel@rivalry.c7.campus.utcluj.ro>
References: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>
	<349fe48b1003201526w74cd6051i3ef77a31bab162fc@mail.gmail.com>
	<81E739F3-3F2E-4FEE-AAAE-B572DE661BB6@newclarity.net>
	<a93cee651003201548j5e9b879apb6535a5ca45fc62f@mail.gmail.com>
	<1269127950.2116.71.camel@rivalry.c7.campus.utcluj.ro>
Message-ID: <a93cee651003201643o54a78972of5ba6d2defc48c4b@mail.gmail.com>

Great idea about bundling it with the migration idea. I think it would be
good to add that as part of the proposal.

The only thing I worry about is if someone has modified files. Without
FTPing to get the files they will lose some of that. I do agree FTPing could
get messy though.

On Sat, Mar 20, 2010 at 7:32 PM, Stas Su?cov <stas at nerd.ro> wrote:

> ?n data de Sb, 20-03-2010 la 18:48 -0400, Justin Shreve a scris:
> > scrbu:
> >
> > I see it as part of the overall setup of the blog which is why I thought
> it
> > would be a nice feature to include. It would be right after the admin
> > account is created etc but allows them to setup some additional features
> > before they finish the install/setup.
> >
> > Mike:
> >
> > I thought about this too. A way to bundle in some plugins/themes that
> > automatically get installed. I think it may be a good feature to include
> as
> > part of the project.
> >
> > On Sat, Mar 20, 2010 at 6:34 PM, Mike Schinkel
> > <mikeschinkel at newclarity.net>wrote:
> >
> > > What would be nice would be a way to install a selected
> theme+predefined
> > > set of plugins, for example for vertical market solutions like a real
> estate
> > > agent site or a restaurant site or something else.
> > >
> > > What I'm proposing is not to give the user a list to select from but
> > > instead give the people who provide those vertical solutions a way to
> > > provide their users with a simple installer that would first install
> both
> > > WordPress and then their package of theme+plugins without additional
> burden
> > > on the user.
> > >
> > > -Mike
> > >
> > > On Mar 20, 2010, at 6:26 PM, scribu wrote:
> > >
> > > > I don't see the point in having the option to install plugins and
> themes
> > > at
> > > > the installation stage. It would require WP to already be set up,
> thus
> > > the
> > > > installation process would already be over.
> > > >
> > > > What might be useful is to add links to the theme and plugin admin
> > > screens
> > > > on the final screen of the install process.
> > > >
>
> I would bundle this idea with the migration idea.
> Get the php file that does the magic, if ok, go and make a choice:
> * clean install
> * import from a remote host
>
> Keep it simple. I'm not sure guys who need (lets say) ecommerce package
> will just go and use this script for that. Also, an end user just wants
> his blog, if you can make that easy as jumping, it's awesome.
>
> So far, imho it's the best proposal if you bundle it with the migration
> process. I didn't like the ideas with migration using FTP, imho,
> creating an api (json powered let's say, or extend the current xmlrpc)
> that will serve all the get_bloginfo() and the rest of the data should
> be the only one considered. The plugins can be installed from the
> plugins directory after that, and the media, can be moved as it was done
> so far.
>
> Anyway, I like the direction you're taken.
>
>
> --
> ()  Campania Panglicii ?n ASCII
> /\  http://stas.nerd.ro/ascii/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From justin.shreve at gmail.com  Sat Mar 20 23:46:50 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Sat, 20 Mar 2010 19:46:50 -0400
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <1269128446.2116.77.camel@rivalry.c7.campus.utcluj.ro>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<a93cee651003201627k46fd0fds6ab46566e253f9fe@mail.gmail.com>
	<1269128446.2116.77.camel@rivalry.c7.campus.utcluj.ro>
Message-ID: <a93cee651003201646i7c3f16ebx4fdb2061f34e265a@mail.gmail.com>

Yes I guess grouped is the wrong word. Then it sounds like I'm
an official developer when I'm not. Tagged as "codex writer", whatever makes
more sense.

True - I don't like having to write documentation all that much either but I
just worry about having significantly different rankings for things. That's
a minor detail though. People like karma points so it's a necessary feature!

On Sat, Mar 20, 2010 at 7:40 PM, Stas Su?cov <stas at nerd.ro> wrote:

> ?n data de Sb, 20-03-2010 la 19:27 -0400, Justin Shreve a scris:
> > It would be great to see something like this.
> >
> > Feature idea: It would be nice if users could be grouped. For example if
> I
> > submit patches, create plugins or something I would be in a certain
> group.
> > If you help out on the support forums and update some Codex articles you
> are
> > in another group. This could lead to some cool sorting. Example:
> > http://profiles.wordpress.org/users/ is just a listing right now, if we
> were
> > grouped you could separate by "developers", or "supporters" or something.
> >
>
> Niceee. I would go far and use the word tagged instead of grouped. :)
>
> > Check out http://directory.freelanceswitch.com/ too - you could allow
> people
> > to have some similar functionality like that in the profiles system.
> >
> > One thing I worry about is sometimes considering one type of contributing
> a
> > higher importance over another. It could send for example the message
> that
> > patches are more important then working in the support forums and writing
> > documentation.
>
> Oh, usually writing documentation is the most boring activity and not
> too many developers are attracted to it. This is the only reason I
> bumped the score.
>
>
>
> >
> > - Justin
> >
> > On Sat, Mar 20, 2010 at 7:16 PM, Stas Su?cov <stas at nerd.ro> wrote:
> >
> > >
> > > Hi hackers,
> > > I can see GSoC in WordPress Camp is on hype :)
> > >
> > > This summer I have not much to do, so I said to dedicate my free time
> > > contributing to WordPress project, which fan I'm since some time.
> > >
> > > I've read the ideas page and come to the conclusion that improving
> > > profiles.wordpress.org would be a great contribution not only to the
> > > project itself, but to the whole community. Plus, I like hacking all
> > > kind of stuff, and this idea offers almost the full pack of stuff you
> > > can play with, from php and python code (trac) to fetching svn commits
> > > and evaluating all kind/type of data.
> > >
> > > >From what I understand there would be cool to get some kind of
> > > rating integrated into the system like we can see on social networks
> for
> > > hackers like ohloh. Rating to depend on contribution (of all kind, from
> > > forum activities to commits on svn repo, be there plugins or core
> > > projects). A way I would go doing that is dividing the system into
> > > different parts:
> > > * backend, the fetchers and spiders, evaluation scripts that update the
> > > db, trigger scripts that may call the update process
> > > * frontend, where all the magic is shown and can be manipulated (I
> think
> > > a good idea would be to allow users doing stuff like on facebook `like
> > > or not`). Also the frontend part must offer simplest UI as to the
> > > visitor, same to the user where he can specify his details like codex
> > > username or what's already on profiles.wordpress.org.
> > >
> > > Also, talking about backend, I believe implementing some kind of
> > > algorithm that will grow rank/karma depending on activities kind.
> > > Like give a 5 to the user if he contributed to codex documentation, and
> > > 4 if he committed something into svn. Or 7 if he fixed a bug.
> > >
> > > Pretty much, I would like to steal as much as I can from the
> > > Launchpad.net project. They got some pretty interesting karma system,
> > > which I believe is a good starting point.
> > >
> > > So, feel free to blame me if I'm thinking wrong or help me get my
> > > thoughts better. Hope I got somebody interested who can support my
> > > proposal. :)
> > >
> > > Have a nice weekend.
> > >
> > > P.S.: Here's my profile: http://profiles.wordpress.org/c00l2sv/
> > >
> > >
> > >
> > >
> > > --
> > > ()  Campania Panglicii ?n ASCII
> > > /\  http://stas.nerd.ro/ascii/
> > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> --
> ()  Campania Panglicii ?n ASCII
> /\  http://stas.nerd.ro/ascii/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From stas at nerd.ro  Sat Mar 20 23:54:50 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Sun, 21 Mar 2010 01:54:50 +0200
Subject: [wp-hackers] GSoC Proposal: Installation System Enhancements
In-Reply-To: <a93cee651003201643o54a78972of5ba6d2defc48c4b@mail.gmail.com>
References: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>
	<349fe48b1003201526w74cd6051i3ef77a31bab162fc@mail.gmail.com>
	<81E739F3-3F2E-4FEE-AAAE-B572DE661BB6@newclarity.net>
	<a93cee651003201548j5e9b879apb6535a5ca45fc62f@mail.gmail.com>
	<1269127950.2116.71.camel@rivalry.c7.campus.utcluj.ro>
	<a93cee651003201643o54a78972of5ba6d2defc48c4b@mail.gmail.com>
Message-ID: <1269129290.2116.83.camel@rivalry.c7.campus.utcluj.ro>

?n data de Sb, 20-03-2010 la 19:43 -0400, Justin Shreve a scris:
> Great idea about bundling it with the migration idea. I think it would be
> good to add that as part of the proposal.
> 
> The only thing I worry about is if someone has modified files. Without
> FTPing to get the files they will lose some of that. I do agree FTPing could
> get messy though.
> 

Do you think offering an option to download all as a tarball/zip can be
a (better) solution?


> On Sat, Mar 20, 2010 at 7:32 PM, Stas Su?cov <stas at nerd.ro> wrote:
> 
> > ?n data de Sb, 20-03-2010 la 18:48 -0400, Justin Shreve a scris:
> > > scrbu:
> > >
> > > I see it as part of the overall setup of the blog which is why I thought
> > it
> > > would be a nice feature to include. It would be right after the admin
> > > account is created etc but allows them to setup some additional features
> > > before they finish the install/setup.
> > >
> > > Mike:
> > >
> > > I thought about this too. A way to bundle in some plugins/themes that
> > > automatically get installed. I think it may be a good feature to include
> > as
> > > part of the project.
> > >
> > > On Sat, Mar 20, 2010 at 6:34 PM, Mike Schinkel
> > > <mikeschinkel at newclarity.net>wrote:
> > >
> > > > What would be nice would be a way to install a selected
> > theme+predefined
> > > > set of plugins, for example for vertical market solutions like a real
> > estate
> > > > agent site or a restaurant site or something else.
> > > >
> > > > What I'm proposing is not to give the user a list to select from but
> > > > instead give the people who provide those vertical solutions a way to
> > > > provide their users with a simple installer that would first install
> > both
> > > > WordPress and then their package of theme+plugins without additional
> > burden
> > > > on the user.
> > > >
> > > > -Mike
> > > >
> > > > On Mar 20, 2010, at 6:26 PM, scribu wrote:
> > > >
> > > > > I don't see the point in having the option to install plugins and
> > themes
> > > > at
> > > > > the installation stage. It would require WP to already be set up,
> > thus
> > > > the
> > > > > installation process would already be over.
> > > > >
> > > > > What might be useful is to add links to the theme and plugin admin
> > > > screens
> > > > > on the final screen of the install process.
> > > > >
> >
> > I would bundle this idea with the migration idea.
> > Get the php file that does the magic, if ok, go and make a choice:
> > * clean install
> > * import from a remote host
> >
> > Keep it simple. I'm not sure guys who need (lets say) ecommerce package
> > will just go and use this script for that. Also, an end user just wants
> > his blog, if you can make that easy as jumping, it's awesome.
> >
> > So far, imho it's the best proposal if you bundle it with the migration
> > process. I didn't like the ideas with migration using FTP, imho,
> > creating an api (json powered let's say, or extend the current xmlrpc)
> > that will serve all the get_bloginfo() and the rest of the data should
> > be the only one considered. The plugins can be installed from the
> > plugins directory after that, and the media, can be moved as it was done
> > so far.
> >
> > Anyway, I like the direction you're taken.
> >
> >
> > --
> > ()  Campania Panglicii ?n ASCII
> > /\  http://stas.nerd.ro/ascii/
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From mikeschinkel at newclarity.net  Sun Mar 21 00:17:28 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 20 Mar 2010 20:17:28 -0400
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
Message-ID: <38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>

Something to consider:

Rather than improve a profile page (per se), why not create a custom post type of "person" and improve it that way? You are proposing adding content about users; why not use the infrastructure which is used for content within WordPress?  There you'll have access to categories, tags, custom taxonomies, custom fields, and everything else that comes with post types. Leave wp_users for security and login and use a custom post type for all the embellishments.

JMTCW.

-Mike

On Mar 20, 2010, at 7:16 PM, Stas Su?cov wrote:

> 
> Hi hackers,
> I can see GSoC in WordPress Camp is on hype :)
> 
> This summer I have not much to do, so I said to dedicate my free time
> contributing to WordPress project, which fan I'm since some time.
> 
> I've read the ideas page and come to the conclusion that improving
> profiles.wordpress.org would be a great contribution not only to the
> project itself, but to the whole community. Plus, I like hacking all
> kind of stuff, and this idea offers almost the full pack of stuff you
> can play with, from php and python code (trac) to fetching svn commits
> and evaluating all kind/type of data.
> 
>> From what I understand there would be cool to get some kind of
> rating integrated into the system like we can see on social networks for
> hackers like ohloh. Rating to depend on contribution (of all kind, from
> forum activities to commits on svn repo, be there plugins or core
> projects). A way I would go doing that is dividing the system into
> different parts:
> * backend, the fetchers and spiders, evaluation scripts that update the
> db, trigger scripts that may call the update process
> * frontend, where all the magic is shown and can be manipulated (I think
> a good idea would be to allow users doing stuff like on facebook `like
> or not`). Also the frontend part must offer simplest UI as to the
> visitor, same to the user where he can specify his details like codex
> username or what's already on profiles.wordpress.org.
> 
> Also, talking about backend, I believe implementing some kind of
> algorithm that will grow rank/karma depending on activities kind.
> Like give a 5 to the user if he contributed to codex documentation, and
> 4 if he committed something into svn. Or 7 if he fixed a bug.
> 
> Pretty much, I would like to steal as much as I can from the
> Launchpad.net project. They got some pretty interesting karma system,
> which I believe is a good starting point.
> 
> So, feel free to blame me if I'm thinking wrong or help me get my
> thoughts better. Hope I got somebody interested who can support my
> proposal. :)
> 
> Have a nice weekend. 
> 
> P.S.: Here's my profile: http://profiles.wordpress.org/c00l2sv/
> 
> 
> 
> 
> -- 
> ()  Campania Panglicii ?n ASCII
> /\  http://stas.nerd.ro/ascii/
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From cegert.on at gmail.com  Sun Mar 21 00:19:03 2010
From: cegert.on at gmail.com (C T)
Date: Sun, 21 Mar 2010 13:19:03 +1300
Subject: [wp-hackers] Menu schema
In-Reply-To: <4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>
	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>
	<4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>
Message-ID: <64ab937e1003201719y7ee8637as376a951e27b62108@mail.gmail.com>

This is a very pertinent point being made I feel. A .0 release IS the
time to make major changes to important high level WP design such as
DB schematics.
This issue is similar to the currently debated issue of how widgets
and comments are currently represented in the WP DB.

In terms of the way menus are handled and stored in DB, the current
implementation is far from ideal.
Storing objects such as menu items as posts makes little sense as the
whole basis of posts is that they are data, ie have content. This is
not the main issue however, the issue is the complexity and confusion
this causes. So you can access a menu item with the get_post
function?? No a menu does not need the complex data display and
manipulation functions that actual data (posts) need.

Storing menus as taxonomy also makes little sense. Taxonomy is the
process of naming and classifying things. This has great benefit to
discreet data and in classification, however what benefit does this
give to objects such as menu items? (Are they really 'objects'
anyway?) This really seems like a poorly thought out hack and very
inconsistent with other areas of WP.

For me there are two clear options. Firstly a temporary measure to
treat menus similar to widgets, with one entry in wp_options for menus
and one for menu_items. Simple.
Second, and and more benefit in the long run with the development of
WP into a fully functional CMS would be to reevaluate the DB schemata
and actually look at the reasons the WP database is limited to so few
tables. Lets not confuse different entities and lump different
entities together.

On Fri, Mar 19, 2010 at 2:30 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
>>
>> If I do write the code to change that, why won't it make it into 3.0?
>
> It'll improve things in the long run.
>
>
> Not necessarily -- it won't make it into 3.0 because the core developers
> have discussed the schema at length and find the current implementation the
> best option. We use more fields in the posts table than you think --
> including post_author, menu_order, post_parent, post_excerpt, post_content
> and post_title. And we store additional data in post meta. Part of this is
> because we allow for menu item names other than the name of the category or
> title of the page. We also allow title attributes, descriptions (for when
> the theme supports it), XFN, custom CSS classes, link target, URL (for a
> custom link), etc. Therefore, we used post types and post metadata for menu
> items.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wordpress at dd32.id.au  Sat Mar 20 23:35:48 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 21 Mar 2010 11:35:48 +1200
Subject: [wp-hackers] Menu schema
In-Reply-To: <64ab937e1003201719y7ee8637as376a951e27b62108@mail.gmail.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>
	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>
	<4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>
	<64ab937e1003201719y7ee8637as376a951e27b62108@mail.gmail.com>
Message-ID: <op.u9v6lyadspxmuu@ho.st>

On Sun, 21 Mar 2010 12:19:03 +1200, C T <cegert.on at gmail.com> wrote:
> This is a very pertinent point being made I feel. A .0 release IS the
> time to make major changes to important high level WP design such as
> DB schematics.

In other software perhaps.

But 2.9 -> 3.0 is just a decimal increment to WordPress, Its not a major  
milestone. Its the same as 2.7 -> 2.8

If we didn't use decimal increments and we were approaching a release,  
it'd be 2.10, or something similar (Well, we'd probably be up to v9 or  
something by now if we did it that way)
-- 
Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

From justin.shreve at gmail.com  Sun Mar 21 00:41:07 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Sat, 20 Mar 2010 20:41:07 -0400
Subject: [wp-hackers] GSoC Proposal: Ideas Forum
Message-ID: <a93cee651003201741j2edf292ak9882548223049c29@mail.gmail.com>

I have a second Summer of Code proposal for something else I want to see.

------

The WordPress Ideas Forum is an often under looked area of the extend
section on WordPress.org. As the WordPress project continues to change so
should the outlet for feedback and ideas.

*Project Proposal*
*
*I propose to re-write the WordPress Ideas forum with new features and a new
focus on feedback and taking action.

The new ideas section would be based on a feature set similar to that of
Ubuntu?s brainstorm (http://brainstorm.ubuntu.com/) or Dell?s IdeaStorm (
http://www.ideastorm.com/).

The system would run on a customized install of WordPress so all the
features would be plugins/theme changes to WordPress itself and could be
released individually as open source code.

The following features would be included as part of the project:

*Promote/Demote System (Promote/Demote)
*
The new Ideas Forum would contain a promote/demote system instead of the
current star rating system. Users would click a thumb up icon to show their
support for a specific feature or a thumbs down if they think it is a bad
idea.

*Visual Posting Editor + Attachments
*
Not everybody that uses WordPress knows HTML. A visual editor like the one
included with WordPress (TinyMCE) would make it easier to add some
formatting to the idea posts.  Only tags like the ones allowed now would be
allowed through and the editor would degrade if JavaScript was not enabled.

The posting screen would also allow users to post some kind of screenshot
with their posting so they could propose a UI screen or show visually what
they are talking about.

*Improved Comments System (with Solutions System)
*
A new comments system would be included that would allow two types of
comments:

1) A normal comment giving general feedback on the Idea or additional ideas.
Just text with some possible formatting or link.

2) A specific solution to the Idea which would be displayed above regular
comments. See Ubuntu BrainStorm. A solution would allow attachments and
would have the ability to be voted up and down just like the main idea.  An
example use: A user suggests better export/import with a couple feature
ideas. A second user votes the idea up and has a specific solution in mind.
They mockup a screen quickly and want to post it as a solution for the Idea.
Other users can come in and vote this solution up and down or post their
own.

*Integration with Trac*
*
*Once a ticket reaches a significant amount of feedback, solutions, comments
or popularity there should be a way to automatically generate a trac ticket
with a link back to the idea. This feature could be either for moderators or
for the creator.

*Idea Statuses*
*
*Currently there are about 10 different types of ideas (implemented, under
consideration, etc). I propose condensing them into the following:

   - Latest Ideas
   - Popular Ideas
   - Ideas in Development (If they have been finally posted to trac, may
   have a patch or if a plugin or theme developer is working on it)
   - Implemented Ideas (For ideas implemented either in core, a plugin or a
   theme)


Only a moderator can change a status but users can ?suggest a change? if an
Idea has been implemented but the status is not updated. This is the
equivalent of adding a ?modlook? tag on the current system.

*Report System*
*
*Instead of replying (and bumping a topic) and applying the tag ?modlook?
users will be able to report a topic which moderators will be able to see in
a report center.

*Popularity Weighting*
*
*The system would take into account the number of up votes, comments,
solutions and views for a popularity score. The ideas with higher popularity
would be show on the popular section and home page of the Ideas section.

If an idea is linked to in a blog (track-back) then the popularity will
raise.

Additional Idea: A tweet this option where retweets would be included in the
popularity rating.

*Better Category System*
*
*Right now almost all the ideas are posted in the General category.
Categories like Email only have 2 ideas posted in them.  The project would
take a look at what the current ideas could be categorized as and come up
with some new categories.
Ideas should be able to be marked in more than one category at a time.

*New Ideas Homepage*
*
*The new homepage layout would be similar to Digg with popular ideas being
featured with as well as the Vote Up/Down options.  We should also make sure
to give an equal number of space to some ?new ideas? so the recently
submitted ideas get some exposure as well.

A tag clould will be displayed so that the tagging system that we currently
have can actually be browsed.

------

Does anyone have some comments on this proposal? I tried to think of a fun
and social way the ideas forum could be run (and how the could could go back
to WordPress) but I'm sure there are some other great ideas out there.
Thanks for your time!

- Justin

From mikeschinkel at newclarity.net  Sun Mar 21 00:41:17 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 20 Mar 2010 20:41:17 -0400
Subject: [wp-hackers] Menu schema
In-Reply-To: <64ab937e1003201719y7ee8637as376a951e27b62108@mail.gmail.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>
	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>
	<4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>
	<64ab937e1003201719y7ee8637as376a951e27b62108@mail.gmail.com>
Message-ID: <2D9DB702-0D4A-4AA6-AC0C-7B66C8639CC5@newclarity.net>

On Mar 20, 2010, at 8:19 PM, C T wrote:
> This is a very pertinent point being made I feel. A .0 release IS the
> time to make major changes to important high level WP design such as
> DB schematics.

+1, but not because of it being a .0 release but because I don't think it's a good idea to launch with one database structure knowing there is a plan to transition to something else in the near future. It can really cause chaos with themes, plugins, upgrading, etc. to see core DB structures change after an official release. Best to minimize those required course changes when possible.

> This is not the main issue however, the issue is the complexity and
> confusion this causes. So you can access a menu item with the get_post
> function?? 

Am I missing something?  Where is the confusion?  

> Storing menus as taxonomy also makes little sense. Taxonomy is the
> process of naming and classifying things. This has great benefit to
> discreet data and in classification, however what benefit does this
> give to objects such as menu items? (Are they really 'objects'
> anyway?) This really seems like a poorly thought out hack and very
> inconsistent with other areas of WP.

Menus seem to me to be more like classification than they are like posts.  They seem to fit well there although I've not looked at all requirements for menus so until I do I can't speak to it.

> For me there are two clear options. Firstly a temporary measure to
> treat menus similar to widgets, with one entry in wp_options for menus
> and one for menu_items. Simple.

-1

I'm haven't formed an opinion on how menus should be best stored but I do believe that storing in serialized arrays is too fragile and thus not a good idea.  So it's not a clear option to me.

What I have noticed has been how fervent discussions on this list have been about using wp_posts for certain things but how AFAIK storing menus in wp_posts was never discussed here. I think that is indicative of how decisions are made in core and that discussion on this list isn't an important component (and is something I think I'll be learning from moving forward.)
 
> actually look at the reasons the WP database is limited to so few
> tables. Lets not confuse different entities and lump different
> entities together.

For the record, I originally believed as you do that more tables were needed but the small number of tables has grown on me as I've seen the elegance of the approach. It just works.  I'd hate to start adding new tables every time someone has a new idea. The fact that Pods and Gravity Forms add so many new tables makes them less optimal solutions from my perspective, for example. I'd prefer adding tables only when existing tables absolutely can't be used for a required feature. I'm even on record as thinking we should reduce existing tables by one and deprecate wp_usermeta to instead use wp_post_meta. But I digress.

-Mike

From wp at andrewnacin.com  Sun Mar 21 00:50:40 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Sat, 20 Mar 2010 20:50:40 -0400
Subject: [wp-hackers] Menu schema
In-Reply-To: <2D9DB702-0D4A-4AA6-AC0C-7B66C8639CC5@newclarity.net>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com> 
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com> 
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com> 
	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com> 
	<4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com> 
	<64ab937e1003201719y7ee8637as376a951e27b62108@mail.gmail.com> 
	<2D9DB702-0D4A-4AA6-AC0C-7B66C8639CC5@newclarity.net>
Message-ID: <4cc4de141003201750k6a40e89bic4ccd44988aac77e@mail.gmail.com>

>
> +1, but not because of it being a .0 release but because I don't think it's
> a good idea to launch with one database structure knowing there is a plan to
> transition to something else in the near future.


Allow me to clarify, there are no plans to change the database structure in
the future. Storing menus as a taxonomy and menu items as a post type is not
a temporary solution.

What I have noticed has been how fervent discussions on this list have been
> about using wp_posts for certain things but how AFAIK storing menus in
> wp_posts was never discussed here. I think that is indicative of how
> decisions are made in core and that discussion on this list isn't an
> important component (and is something I think I'll be learning from moving
> forward.)


Real-time discussions on core development are held in a publicly accessible
IRC channel (which is logged, and the logs are public). The menu management
schema was discussed at length among core developers and contributors before
a decision was made to use post types and taxonomies.

Storing menus as taxonomy also makes little sense. Taxonomy is the process
> of naming and classifying things.


Like classifying menu items into menus? We had specific requirements for
what about a menu item we needed to be able to store (and allow plugins to
build on that), and what about a menu we needed to be able to store. The
decisions made reflect that.

From mikeschinkel at newclarity.net  Sun Mar 21 00:57:31 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 20 Mar 2010 20:57:31 -0400
Subject: [wp-hackers] Menu schema
In-Reply-To: <4cc4de141003201750k6a40e89bic4ccd44988aac77e@mail.gmail.com>
References: <1fa535a71003180942n29085dc6m19d1c10ccfc169b@mail.gmail.com>
	<1fa535a71003180952g5e364c02g8076d5d7cbf1d567@mail.gmail.com>
	<5FA478FC-66A5-431D-8DC8-DC13B6DD0219@newclarity.net>
	<4cc4de141003181407g670f18c0na07ba4c1f5665817@mail.gmail.com>
	<1fa535a71003181651h65458a42sf562bb99b0e3fab7@mail.gmail.com>
	<4cc4de141003181830v79e6ef14h9ecf69e44863af22@mail.gmail.com>
	<64ab937e1003201719y7ee8637as376a951e27b62108@mail.gmail.com>
	<2D9DB702-0D4A-4AA6-AC0C-7B66C8639CC5@newclarity.net>
	<4cc4de141003201750k6a40e89bic4ccd44988aac77e@mail.gmail.com>
Message-ID: <E70E9AF7-09B2-4C3D-AFEE-938AD081D23D@newclarity.net>

On Mar 20, 2010, at 8:50 PM, Andrew Nacin wrote:
>> What I have noticed has been how fervent discussions on this list have been
>> about using wp_posts for certain things but how AFAIK storing menus in
>> wp_posts was never discussed here. I think that is indicative of how
>> decisions are made in core and that discussion on this list isn't an
>> important component (and is something I think I'll be learning from moving
>> forward.)
> 
> Real-time discussions on core development are held in a publicly accessible
> IRC channel (which is logged, and the logs are public). The menu management
> schema was discussed at length among core developers and contributors before
> a decision was made to use post types and taxonomies.

Sorry, didn't mean to imply that it wasn't discussed, just pointing out that it wasn't discussed *here* (on this list.)  

I was making commentary on the value of discussions on this list affecting core, nothing more.

-Mike

From stas at nerd.ro  Sun Mar 21 01:03:22 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Sun, 21 Mar 2010 03:03:22 +0200
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
Message-ID: <1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>

?n data de Sb, 20-03-2010 la 20:17 -0400, Mike Schinkel a scris:
> Something to consider:
> 
> Rather than improve a profile page (per se), why not create a custom post type of "person" and improve it that way? You are proposing adding content about users; why not use the infrastructure which is used for content within WordPress?  There you'll have access to categories, tags, custom taxonomies, custom fields, and everything else that comes with post types. Leave wp_users for security and login and use a custom post type for all the embellishments.


Not sure, but I think current profiles are using partially BuddyPress.
So the dilemma is, to extend current codebase, and what are the reasons
for doing that, or go straight and create a standalone app which will be
optimised for our needs (rewrite, or partially reuse the
current codebase).

Unfortunately I'm not familiar with the running code, and here would be
great some input from Andy S., but if is to go extending the current
codebase/plugin, your thoughts sound like an idea. In the same time, if
we decide creating more like a standalone app, using/hacking WordPress
to achieve same thing can be more like a burden.

So it depends a lot on what are the expected results. In our case we got
something we know the environment it requires to work and data it has to
be integrated with, so there are reasons to consider making it a
standalone app. 

Anyway it's a tricky subject. As for now, I think using post types is an
overhead comparing to writing some clean code that uses the db directly
and own tables layout. Plus, it will offer me the freedom of creating
spiders and scripts that can directly update the db, without taking into
account the WordPress itself.

Also here, skiping wp-cron usage, and just using some trigger scripts,
will push the updates faster, much faster and with less performance
loss.

A little fuzzy, but It's the best I can answer considering information
about what's behind the profiles now. :(


> 
> On Mar 20, 2010, at 7:16 PM, Stas Su?cov wrote:
> 
> > 
> > Hi hackers,
> > I can see GSoC in WordPress Camp is on hype :)
> > 
> > This summer I have not much to do, so I said to dedicate my free time
> > contributing to WordPress project, which fan I'm since some time.
> > 
> > I've read the ideas page and come to the conclusion that improving
> > profiles.wordpress.org would be a great contribution not only to the
> > project itself, but to the whole community. Plus, I like hacking all
> > kind of stuff, and this idea offers almost the full pack of stuff you
> > can play with, from php and python code (trac) to fetching svn commits
> > and evaluating all kind/type of data.
> > 
> >> From what I understand there would be cool to get some kind of
> > rating integrated into the system like we can see on social networks for
> > hackers like ohloh. Rating to depend on contribution (of all kind, from
> > forum activities to commits on svn repo, be there plugins or core
> > projects). A way I would go doing that is dividing the system into
> > different parts:
> > * backend, the fetchers and spiders, evaluation scripts that update the
> > db, trigger scripts that may call the update process
> > * frontend, where all the magic is shown and can be manipulated (I think
> > a good idea would be to allow users doing stuff like on facebook `like
> > or not`). Also the frontend part must offer simplest UI as to the
> > visitor, same to the user where he can specify his details like codex
> > username or what's already on profiles.wordpress.org.
> > 
> > Also, talking about backend, I believe implementing some kind of
> > algorithm that will grow rank/karma depending on activities kind.
> > Like give a 5 to the user if he contributed to codex documentation, and
> > 4 if he committed something into svn. Or 7 if he fixed a bug.
> > 
> > Pretty much, I would like to steal as much as I can from the
> > Launchpad.net project. They got some pretty interesting karma system,
> > which I believe is a good starting point.
> > 
> > So, feel free to blame me if I'm thinking wrong or help me get my
> > thoughts better. Hope I got somebody interested who can support my
> > proposal. :)
> > 
> > Have a nice weekend. 
> > 
> > P.S.: Here's my profile: http://profiles.wordpress.org/c00l2sv/
> > 
> > 
> > 
> > 
> > -- 
> > ()  Campania Panglicii ?n ASCII
> > /\  http://stas.nerd.ro/ascii/
> > 
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From mikeschinkel at newclarity.net  Sun Mar 21 01:12:14 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 20 Mar 2010 21:12:14 -0400
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
	<1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>
Message-ID: <421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>

On Mar 20, 2010, at 9:03 PM, Stas Su?cov wrote:
> Anyway it's a tricky subject. As for now, I think using post types is an
> overhead comparing to writing some clean code that uses the db directly
> and own tables layout...

That overhead brings along lots of benefits, see the long list where each bullet starts with "Having..."

http://lists.automattic.com/pipermail/wp-hackers/2010-March/030794.html

> Plus, it will offer me the freedom of creating
> spiders and scripts that can directly update the db, without taking into
> account the WordPress itself.

Please, please don't add new tables.  

-Mike

From stas at nerd.ro  Sun Mar 21 01:33:37 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Sun, 21 Mar 2010 03:33:37 +0200
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
	<1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>
	<421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>
Message-ID: <1269135217.2116.136.camel@rivalry.c7.campus.utcluj.ro>

?n data de Sb, 20-03-2010 la 21:12 -0400, Mike Schinkel a scris:
> On Mar 20, 2010, at 9:03 PM, Stas Su?cov wrote:
> > Anyway it's a tricky subject. As for now, I think using post types is an
> > overhead comparing to writing some clean code that uses the db directly
> > and own tables layout...
> 
> That overhead brings along lots of benefits, see the long list where each bullet starts with "Having..."

Yep, it's a long list, still I would stick to what I wrote already. As I
said, I'm interested in getting more freedom cause we're talking about
something we know how it should work and where.

> 
> http://lists.automattic.com/pipermail/wp-hackers/2010-March/030794.html
> 
> > Plus, it will offer me the freedom of creating
> > spiders and scripts that can directly update the db, without taking into
> > account the WordPress itself.
> 
> Please, please don't add new tables.  

I will not commit my hacks into WordPress core svn, I'm trying to get a
problem solved, and make it reasonably easy to solve :)

But post types are awesome, I agree, and if there will be need to use
them I'll surely do that!


-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From coolneerav4u at gmail.com  Sun Mar 21 06:05:23 2010
From: coolneerav4u at gmail.com (Neerav Mehta)
Date: Sat, 20 Mar 2010 23:05:23 -0700
Subject: [wp-hackers] Gsoc proposal: Advance User Groups
Message-ID: <d64cc4d41003202305gfacd7fbof1a03123f4460885@mail.gmail.com>

Hello,
   For for now I am going to make a concrete idea of project which is
basically the advance buddypress plugin.
It includes following modifications from actual buddypress plugin:
*1.Addition of a search option in usergroups :*
*    *  It includes searching of users & it will filter our the results as
per ones requirements. Like there will be a form which will take the
name(textbox) , Gender(Radio button),
   emailaddress(Textbox), Groups joined etc. The search results will be
filtered as per user inputs.
      Also there will be option for search of groups like if one person
wishes to search for a particular group he can just enter the name or some
details of that group & it will show
  the results of list of groups similar to the search.
*2. List of simmilar groups:*
I am finding the groups column very unfilled so I am wishing if I could add
groups simmilar to thar group on the right side. So if the user wishes he
can join these groups also.
   This simmilar groups list can be automatic which the server will search
by the name or details of the group. Or the group owner can also manually
add simmilar groups if he wishes.
I have learnt wordpress plugin API & tried to make some of my own plugins &
was successfull. So Now I think I can easily implement these features in
buddypress.
Also I want to know that do I need to make my own plugin seperately or I can
modify existing buddypress plugin.


-- 
Neerav Mehta
B-Tech Part IV
Electronics Engg.
I.T. BHU
Varanasi

From coolneerav4u at gmail.com  Sun Mar 21 06:32:41 2010
From: coolneerav4u at gmail.com (Neerav Mehta)
Date: Sat, 20 Mar 2010 23:32:41 -0700
Subject: [wp-hackers] Gsoc proposal: Advance User Groups
Message-ID: <d64cc4d41003202332o7ebc8039u32ed97d3925ac41d@mail.gmail.com>

Also there is one more addition in groups which is polling option
I think integration of polldaddy with buddypress will be the best but it
needs some modifications as per the requirement.
Like it should be available to group meber only


-- 
Neerav Mehta
B-Tech Part IV
Electronics Engg.
I.T. BHU
Varanasi

From tvmanukrishnan at gmail.com  Sun Mar 21 07:04:34 2010
From: tvmanukrishnan at gmail.com (Manu Krishnan T.V)
Date: Sun, 21 Mar 2010 12:34:34 +0530
Subject: [wp-hackers] GSoC Proposal - Move WordPress
In-Reply-To: <C05A3EFA8A22824A935EF26910C45B8C0C38083CA8@DANATEXCHANGE.corp.danatev.ae>
References: <4BA4E528.90909@gmail.com>
	<C05A3EFA8A22824A935EF26910C45B8C0C38083CA8@DANATEXCHANGE.corp.danatev.ae>
Message-ID: <4BA5C502.7060602@gmail.com>

On Saturday 20 March 2010 10:33 PM, Nitin Reddy wrote:
> Hi Manu!
>
> As moving blog posts would take a long time to execute, I would think of building either something that runs on either the source or the destionation server and copies the files across through XML-RPC or direct database queries (I'd prefer XML-RPC as it would work across HTTP). A Java-based application would seem like a good idea since it would work on both Windows and Linux (and possible any other platforms that folks out there use).
>    
I think of something that every wordpress installation will have in 
future, so that when initiated from one wordpress blog, with the url and 
login credentials of other, the system could generate a backup of it and 
facilitate the move.

Since wordpress is based on php, I prefer this too to be implemented in 
php. Since this function is intended to work along with wordpress, there 
are not much issues of cross platform support.
> If the application were to be a web-based PHP script, then I'd probably look for something that can migrate a few posts at a time to keep the script from timing out. On my hosting provider, a WordPress upgrade never finishes as the script timeout occurs midway.
>    
yes, I understand the situation. So, we must have some scheduling 
mechanisms in place to generate the backup of the database. Also, using 
ftp to transfer many files(may be 1000's) is a problem for some servers, 
especially free hosting ones, which limits ftp connections and introduce 
wait times on error.
> Mine is just one thought among the many in the community, so you might want to hear a couple more before you start planning.
>    
I am looking forward for more suggestions, so that the project ideas 
could be improved more. Thanks for your reply . I'll be posting a 
modified proposal soon with the new ideas.
> Regards,
> Nitin Reddy
>
> --
>
> "Follow the evidence wherever it leads" -Socrates
> Email: kay-underscore-en-ai-tee-ai-en-underscore-arr-at-yahoo-dot-co-dot-in  (To spambot authors: you didn't anticipate that, did you?)
> WWW: Coming Soon... Under Renovation
>
> ________________________________________
> From: wp-hackers-bounces at lists.automattic.com [wp-hackers-bounces at lists.automattic.com] On Behalf Of Manu Krishnan T.V [tvmanukrishnan at gmail.com]
> Sent: Saturday, March 20, 2010 7:09 PM
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] GSoC Proposal - Move WordPress
>
> Hi,
>
> I am Manu Krishnan T.V, a 6th semester Computer Science Engineering
> student, under Calicut University, Kerala, India.
>
> As I went through the GSoC 2010 ideas of wordpress, I got attracted by
> the "Move WordPress". I have thought about such a feature a while ago,
> when I had an 'extreme' experience in moving a wordpress blog from one
> host to other.
>
> As a part time job and hobby, I do web designing, consultation and
> provide web hosting solutions for clients in my area. I have been using
> wordpress for years and currently manage many wordpress blogs, including
> my personal blog. When I get an assignment of moving a wordpress blog, I
> do it in the normal way of backing up database and files and restoring
> it and if there is a domain change, I prefer replacing the URL in the
> exported sql file.
> But, once, I had to move a blog from one hosting provider to mine and
> the owner of the blog had nothing except his wordpress login details and
> was not in good terms with the old hosting provider. So, I had to do all
> the move manually, except the posts(Thanks to those who created
> import/export feature).
>
> I think this is the same case for a wordpress.com user to move his blog
> to a separate host.
>
> So, my idea is to use the currently available features of wordpress
> update and theme/plugin installer to move a wordpress blog to new host.
> The idea is to run a feature from a newly installed wordpress with the
> target wordpress address, administrator login details and ftp details if
> available. Installing new wordpress is not a hard task as most hosting
> providers have automatic installers like fantastico.
>
> Since wordpress usually have full access to the database, some code in
> the hosted server will be capable to create an export file with the
> details needed, similar to the current export, but with extra details
> including settings. If FTP access is available, I hope we could move all
> the files in the 'wp-content' to the new host (Haven't tried it yet with
> two servers)
>
> But, if FTP details are not available(say in the case of wordpress.com
> account), from the new export file, we could fetch the details of themes
> and plugins and use the theme/plugin installer to fetch and install
> them. This is just theoretical and may cause problems with custom
> themes/plugins and with different versions. I would like to hear more
> ideas for implementing this.
>
> Also, more study has to be done about the architecture of wordpress.com
> and what all capability it provides to a normal user in the backend,
> like the access to database. This can thus help a wordpress.com blogger
> to move to his own host, having more features.
>
> I also have an idea of using this feature for cloning wordpress blog,
> there by acting as a mirror or for a backup.
>
>
> Now, about me. I am a free software supporter and an active member of
> the free software user groups in Kerala. I have a good knowledge of php,
> MySQL, HTML, tools like phpMyadmin and about the way how plugins work in
> wordpress. Now, I spent most of my free time playing with python
> scripts. I haven't done any upstream contributions as code, but is a
> member of SMC<http://smc.org.in/>, which translates programs to
> Malayalam, my mother tongue. I have also created few python and shell
> scripts for me, my friends, and my clients, which include manipulating
> 'gpx' files for OSM and transaction data for banks.
>
> I appreciate all the help and assistance from the community to
> participate in GSoC with this project idea.
>
> Waiting for more feedback and suggestions,
> --
> With love and regards,
> Tvm a.k.a Bizzard
>
>    


-- 
With love and regards,
Tvm a.k.a Bizzard

Find me @ Bizzard's Hackshop <http://www.bizzard.info/>

Quote: I'm not a HANDSOME guy. But I can give my HAND to SOME one who 
needs help. Beauty is in heart, not in face..!! - A.P.J Abdul Kalam

From tvmanukrishnan at gmail.com  Sun Mar 21 07:27:48 2010
From: tvmanukrishnan at gmail.com (Manu Krishnan T.V)
Date: Sun, 21 Mar 2010 12:57:48 +0530
Subject: [wp-hackers] GSoC Proposal - Move WordPress
In-Reply-To: <C05A3EFA8A22824A935EF26910C45B8C0C38083CA8@DANATEXCHANGE.corp.danatev.ae>
References: <4BA4E528.90909@gmail.com>
	<C05A3EFA8A22824A935EF26910C45B8C0C38083CA8@DANATEXCHANGE.corp.danatev.ae>
Message-ID: <4BA5CA74.3010807@gmail.com>

Here is my modified proposal for wordpress move

I have divided the project to 3 categories

1) Wordpress complete backup
     - Provides feature to create a complete backup of wordpress files 
and folders.
     - Includes a database dump(can use scheduling methods to avoid 
excess resource usage while creating the database dump)
     - Create a compressed archive of all the contents available for 
download.
     - Feature to download only the modified files or 'wp-content' folder.
     - Sometimes, this can be a time consuming process. So, must have 
features to alert the administrator when backup is complete.
     - Server must have enough free space for the archive(free space 
about the size of installed wordpress) and provide compression support.

2) Wordpress move between hosts
     - Create a compressed archive on the old server with contents of 
wp-content folder .
     - Create a database backup on the old server using scheduling 
techniques (this avoids excessive resource usage in servers for large 
databases)
     - Utilize current available features of plugin istaller/updater to 
move the compressed files to new server and extract (this avoids ftp 
timeout problems)
     - Allows change in blog url on move.
     - Implementing move feature in the installer is an option, but many 
users still prefer or use automatic installers like fantastico to avoid 
handling database stuffs. So, I prefer to have a fresh wordpress 
installation, so as to make sure that the server meets all requirements 
and have all the database details ready in the config file to proceed. 
There will be a new option for move, with options to provide target 
wordpress url, and its admin login details.
     - The new installation will be put to some maintenance mode, as the 
process starts and will mail the user when the process in complete. So, 
it doesn't require the user to be connected for long time.
     - Server must have enough free space for archive(free space about 
the size of installed wordpress) and provide compression support.
     - The same could be used to create mirrors of a wordpress site, 
with few modifications.


3) Wordpress move from wordpress.com
     - Database needs to be exported, can use the above technique for that.
     - If wordpress.com supports creating compressed archives, the above 
feature itself will be useful
     - Else, we can use an alternate method. Most wordpress.com accounts 
have themes and plugins provided by wordpress.com and not modified. The 
plugin/theme installer can be used to install them after finding which 
all are installed from the database backup.

Looking forward for more suggestions and ideas to implement.
-- 
With love and regards,
Tvm a.k.a Bizzard

Find me @ Bizzard's Hackshop <http://www.bizzard.info/>

Quote: I'm not a HANDSOME guy. But I can give my HAND to SOME one who 
needs help. Beauty is in heart, not in face..!! - A.P.J Abdul Kalam

From cdunde1 at tampabay.rr.com  Sun Mar 21 13:38:15 2010
From: cdunde1 at tampabay.rr.com (barry)
Date: Sun, 21 Mar 2010 09:38:15 -0400
Subject: [wp-hackers] wordpress custom page template
Message-ID: <E1B0DD9194C54BD5BDC622A144EAE817@barry>

Hello,

I am looking for someone who can build me a custom page template for my blog.  I use thesis theme.  

Thanks,

Barry

From peter.westwood at ftwr.co.uk  Sun Mar 21 17:52:13 2010
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun, 21 Mar 2010 17:52:13 +0000
Subject: [wp-hackers] Daylight Savings Glitch
In-Reply-To: <161617691003151053g1b7e9d2radecf805ca7f5a91@mail.gmail.com>
References: <004401cac45f$516e97e0$f44bc7a0$@com>
	<004901cac460$4a70a040$df51e0c0$@com>
	<161617691003151013r493d3c85u84a21f73add36628@mail.gmail.com>
	<005601cac467$0e051490$2a0f3db0$@com>
	<161617691003151053g1b7e9d2radecf805ca7f5a91@mail.gmail.com>
Message-ID: <03867E73-006C-49AB-A8C3-E288E9BF6365@ftwr.co.uk>


On 15 Mar 2010, at 17:53, Otto wrote:

> Well, yes, changing the post_status to "publish" is what did it.
> That's what "publishing" is, really. The post_time would have had no
> impact.
> 
> I'm pretty sure the scheduling mechanism makes no attempt to try to
> figure out what the savings rules will be on a future scheduled date.
> It seems like something that's only going to happen rarely, with the
> end result that the post will publish one hour later or earlier than
> expected. Basically, the problem only can occur when you future-post
> across the time change line.
> 
> So yes, it's a bug, but I suspect it'd be rather low priority.
> 

If someone feels like digging into it some more.

This ticket is a good place to start:

https://core.trac.wordpress.org/ticket/9285

Cheers
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From chinthakarukshan at gmail.com  Sun Mar 21 17:54:33 2010
From: chinthakarukshan at gmail.com (Chinthaka Rukshan)
Date: Sun, 21 Mar 2010 23:24:33 +0530
Subject: [wp-hackers] Google Summer of Code-Project Proposal(WordPress
	import export for WordPress)
Message-ID: <7cd5f9e21003211054j247e5a34k394613852ef14d15@mail.gmail.com>

Hi all,

I'm a Computer Science and Engineering student of University of Moratuwa,Sri
Lanka.
This is the first time I'm applying a proposal for GSoC.

It will be very lucky to contribute for WordPress because it is very popular
and I also have a blog on WordPress.

Here I have Provide my Google Summer of Code Project Proposal link for the
project WordPress Import/Export.I would like to hear some feed back about
the proposal from you. I need to know specially about one thing. I've
mentioned about what I have done. A project that can import WordPress blog
posts and comments from a remote WordPress blog.Is it ok to mention such a
thing in my proposal that is submitting to the Google and to what extent do
I have to mention those information?.I've mentioned about that I've studied
to some extent about blogger import and livejournal import.Is it also ok to
mention about that?. If you can help me with these facts it would be
pleasure.

This is the link that I describe about the Project Proposal.

http://chinthakarukshan.wordpress.com/2010/03/21/google-summer-of-code-proposalwordpress-importexport/

<http://chinthakarukshan.wordpress.com/2010/03/21/google-summer-of-code-proposalwordpress-importexport/>Thank
You.

-- 
Chinthaka Rukshan
"Open Your Mind"

From dan at dancoulter.com  Sun Mar 21 18:11:21 2010
From: dan at dancoulter.com (Dan Coulter)
Date: Sun, 21 Mar 2010 13:11:21 -0500
Subject: [wp-hackers] wordpress custom page template
In-Reply-To: <E1B0DD9194C54BD5BDC622A144EAE817@barry>
References: <E1B0DD9194C54BD5BDC622A144EAE817@barry>
Message-ID: <5dc2163e1003211111x47f5a69ai6459149911e2be0e@mail.gmail.com>

You might want to ask over on wp-pro:
http://lists.automattic.com/mailman/listinfo/wp-pro

On Sun, Mar 21, 2010 at 8:38 AM, barry <cdunde1 at tampabay.rr.com> wrote:

> Hello,
>
> I am looking for someone who can build me a custom page template for my
> blog.  I use thesis theme.
>
> Thanks,
>
> Barry
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Dan Coulter
http://dancoulter.com/
http://phpflickr.com/
http://blogsforbands.com/

Hey, I got nothing to do today but smile
-Simon and Garfunkel

From perro.hunter at gmail.com  Sun Mar 21 18:51:27 2010
From: perro.hunter at gmail.com (Perro Hunter)
Date: Sun, 21 Mar 2010 12:51:27 -0600
Subject: [wp-hackers] GSoc: can someone give me some feedback?
Message-ID: <2dec3cc51003211151p751bb7ach31a8ba5d482a9b8@mail.gmail.com>

Hey there everyone,

Sorry to spam you but I've been sending my proposal since friday and I don't
know if anyone got it since I haven't received even a "it's a bad idea"
feedback :P

I don't know if last emails got lost in the limbo hehe, this is my proposal
on blog import/export features:
http://groups.google.com/group/wp-hackers/browse_thread/thread/3f6f5e5f000244c8(resent
yesterday)

cheers !

From wp at dan-cole.com  Mon Mar 22 02:01:54 2010
From: wp at dan-cole.com (Dan Cole)
Date: Sun, 21 Mar 2010 21:01:54 -0500
Subject: [wp-hackers] GSoC Proposal: Ideas Forum (Justin Shreve)
Message-ID: <8443cbbb1003211901v57fa0d7ew8fba7c974cbf74b9@mail.gmail.com>

I created a thread on the WPTavern about a week and a half ago on this
topic:
http://www.wptavern.com/forum/general-wordpress/1388-redoing-wordpress-ideas-forum.htmlI'd
like to see it be redone and might do it myself this summer if no one
is
dong for the GSoC.

-- Dan Cole

From justin.shreve at gmail.com  Mon Mar 22 02:23:48 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Sun, 21 Mar 2010 22:23:48 -0400
Subject: [wp-hackers] GSoC Proposal: Ideas Forum (Justin Shreve)
In-Reply-To: <8443cbbb1003211901v57fa0d7ew8fba7c974cbf74b9@mail.gmail.com>
References: <8443cbbb1003211901v57fa0d7ew8fba7c974cbf74b9@mail.gmail.com>
Message-ID: <a93cee651003211923m75adf4b4sb90a5e8787e54f2b@mail.gmail.com>

I wish I would have seen that thread. There are some good ideas in there.

I was thinking of a dupe like feature as well. If you post a thread the
system would look at the tags and the content and see if there is something
potentially related and would display them. You could then review if it was
the same as a currently exiting one (and if it is trash yours and have the
option to up vote the other) or continue posting if the matches are wrong.
There would also be a reporting system because no automated system can catch
everything 100%.

The end product for the Summer of Code needs to something that can stand on
it's own. The goal for running it on the ideas forum is outside of the scope
of the summer of code program but if the project is accepted and finished
successfully it could go that way.

This would most likely end up being a set of bbPress plugins to enable
BrainStorm or IdeaStorm like forum setups. I say bbPress because that is
what Ideas is running on now and will most likely stay that way.

Thanks for letting me know about that link. If you have any further feedback
or ideas that would be great! I'm in the middle of reworking the proposal to
be bbPress specific.

- Justin

On Sun, Mar 21, 2010 at 10:01 PM, Dan Cole <wp at dan-cole.com> wrote:

> I created a thread on the WPTavern about a week and a half ago on this
> topic:
>
> http://www.wptavern.com/forum/general-wordpress/1388-redoing-wordpress-ideas-forum.htmlI'd
> like to see it be redone and might do it myself this summer if no one
> is
> dong for the GSoC.
>
> -- Dan Cole
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Mon Mar 22 14:47:38 2010
From: otto at ottodestruct.com (Otto)
Date: Mon, 22 Mar 2010 09:47:38 -0500
Subject: [wp-hackers] opinions about post versioning
In-Reply-To: <11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com> 
	<11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
Message-ID: <161617691003220747w68429060qaf177bf2242e11da@mail.gmail.com>

On Sat, Mar 20, 2010 at 4:14 AM, alexandertiger <alexandertiger at 163.com> wrote:
> 2.When edit a post, draft will be saved once "Save Draft" Button is pressed, and a new "post revision" is added into the Column of "Post Revisions". Wordpress does so even when nothing is changed. It's a little redundant. I think it's better to add a revision check process when "Save Draft" Button is pressed, and do nothing if nothing is changed actually.

There's already a ticket for this: http://core.trac.wordpress.org/ticket/7392

-Otto

From wp at andrewnacin.com  Mon Mar 22 14:56:20 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 22 Mar 2010 10:56:20 -0400
Subject: [wp-hackers] opinions about post versioning
In-Reply-To: <161617691003220747w68429060qaf177bf2242e11da@mail.gmail.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com> 
	<11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com> 
	<161617691003220747w68429060qaf177bf2242e11da@mail.gmail.com>
Message-ID: <4cc4de141003220756l9d071ci1513451af274ef32@mail.gmail.com>

On Mon, Mar 22, 2010 at 10:47 AM, Otto <otto at ottodestruct.com> wrote:

> On Sat, Mar 20, 2010 at 4:14 AM, alexandertiger <alexandertiger at 163.com>
> wrote:
> > 2.When edit a post, draft will be saved once "Save Draft" Button is
> pressed, and a new "post revision" is added into the Column of "Post
> Revisions". Wordpress does so even when nothing is changed. It's a little
> redundant. I think it's better to add a revision check process when "Save
> Draft" Button is pressed, and do nothing if nothing is changed actually.
>
> There's already a ticket for this:
> http://core.trac.wordpress.org/ticket/7392


And http://core.trac.wordpress.org/ticket/11324, which appears similar to
7392 but doesn't appear to be a duplicate.

From andrew at graymerica.com  Mon Mar 22 15:43:23 2010
From: andrew at graymerica.com (Andrew Gray)
Date: Mon, 22 Mar 2010 11:43:23 -0400
Subject: [wp-hackers] Anyone want to help fix the Geeklog to Wordpress
	importer
In-Reply-To: <4cc4de141003220756l9d071ci1513451af274ef32@mail.gmail.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
	<11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
	<161617691003220747w68429060qaf177bf2242e11da@mail.gmail.com>
	<4cc4de141003220756l9d071ci1513451af274ef32@mail.gmail.com>
Message-ID: <38C969BE-81A2-4A1A-81F3-C5683DF8EF52@graymerica.com>

I am working on moving a World Music Website over to Geeklog for a non-profit.

I have some code that imports the pages, links, posts, etc from Geeklog into Wordpress but it does not work very well and could use some major improvements.  

Is there anyone out there that would like to work on it.  The code would be opensource when done.

This is a great website, but they do not have any money.  I could really use some help on the importer if anyone wants to help,  The code is about 80% working and should not be to bad to finish.

After the import, there is still a bunch of stuff to do and it would be a good learning experience building a complicated WP site for anyone who would like to work on it.

thanks,

Andrew


The site is www.worldmusiccentral.org and musicasdelmundo.org for the spanish verison.



From jer at simianuprising.com  Mon Mar 22 16:01:07 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 22 Mar 2010 12:01:07 -0400
Subject: [wp-hackers] debugging a wordpress hook
In-Reply-To: <B94C2C93-40D4-45CF-AB6D-ED99FD9D3B20@newclarity.net>
References: <863447.18203.qm@web45313.mail.sp1.yahoo.com>
	<B94C2C93-40D4-45CF-AB6D-ED99FD9D3B20@newclarity.net>
Message-ID: <e1202cb11003220901jd8eeb50g5dc122fae71aee82@mail.gmail.com>

FWIW you could have also found the array that held all registered
hooks by going to add_action() in the source and tracking down how
they are saved.

In this case add_action() calls add_filter() which does global
$wp_filter then adds the filter to the specified $tag. It's often a
fairly short road from an API call to the root data management, though
obviously many cases are more convoluted than this one ;)

I use an IDE (netbeans.org) to make it easy to jump to the definition
of a function from a call to it, but you can also use PHPXref's of WP
to jump around the source code, its pretty easy:
http://phpxref.ftwr.co.uk/wordpress/_functions/index.html

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From otto at ottodestruct.com  Mon Mar 22 16:07:20 2010
From: otto at ottodestruct.com (Otto)
Date: Mon, 22 Mar 2010 11:07:20 -0500
Subject: [wp-hackers] GSoC Proposal: Installation System Enhancements
In-Reply-To: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>
References: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>
Message-ID: <161617691003220907y5c7270edoc627d894423a4ac5@mail.gmail.com>

Dion was working on the same sort of thing a while back:
http://wpquickinstall.com/

He had a working version. I used it more than once. It still needed
some major tweaking, but it did do the trick. The SVN version works
somewhat better, as I recall.

-Otto

From raphael.droz at gmail.com  Mon Mar 22 16:53:03 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Mon, 22 Mar 2010 17:53:03 +0100
Subject: [wp-hackers] populate_option : wpmu-upgrade vs freshly created blog
Message-ID: <4BA7A06F.1020901@gmail.com>

All is in the title,
while I would like to change the default options of a blog  I observed
that the populate_option hook is also used at upgrade.

Should I use some kind of workaround like comparing the creation date ?
Or should I forget about the wpdb->query and use update_option's in the
wpmu_new_blog hook which, apparently until now, is only used at the blog 
creation time.
In this latter case, I would be out-context and, to, eg, switch the theme or
add a post, I would have to switch_blog() again.

From jer at simianuprising.com  Mon Mar 22 17:53:08 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 22 Mar 2010 13:53:08 -0400
Subject: [wp-hackers] GSoC Proposal: Ideas Forum
In-Reply-To: <a93cee651003201741j2edf292ak9882548223049c29@mail.gmail.com>
References: <a93cee651003201741j2edf292ak9882548223049c29@mail.gmail.com>
Message-ID: <e1202cb11003221053r5bebb4e2m390f8c1fb504f0a4@mail.gmail.com>

I've been playing with the Ideas forum lately and really enjoying it,
a lot of these ideas came to mind in the process.

This feedback would apply to anyone proposing to improve the ideas
section, or to Automattic if they ever do it themeselves.

One feature that I deeply want but isn't mentioned here is insanely
obvious and just plain missing: email updates. I REALLY REALLY want an
email to tell me if someone comments on my idea, and I want to be able
to subscribe to an idea. This is not controvercial, this is not
complicated. Install subscribe-to-comments or IntenseDebate and it
would be done. While you're at it do so on the WP Forums too ;)


On Sat, Mar 20, 2010 at 8:41 PM, Justin Shreve <justin.shreve at gmail.com> wrote:
> *Promote/Demote System (Promote/Demote)
> *
> The new Ideas Forum would contain a promote/demote system instead of the
> current star rating system. Users would click a thumb up icon to show their
> support for a specific feature or a thumbs down if they think it is a bad
> idea.

I don't really see why this is better than stars. # of stars + total
reviews gives a pretty good sense of things, and personally i like
being able to give things 2-3 stars as a way of lowering the average
to show that someone thought about this but didn't have a strong
feeling either way (i.e. sounds okay but who cares, or sounds useful
but complex and bug-generating).

Maybe +1 -1 style is more popular and inspires more people to use the
feature, though I'm not convinced the effect overall is a good one
(see: Digg)

> *Visual Posting Editor + Attachments
> *
> Not everybody that uses WordPress knows HTML. A visual editor like the one
> included with WordPress (TinyMCE) would make it easier to add some
> formatting to the idea posts. ?Only tags like the ones allowed now would be
> allowed through and the editor would degrade if JavaScript was not enabled.
>
> The posting screen would also allow users to post some kind of screenshot
> with their posting so they could propose a UI screen or show visually what
> they are talking about.

Very good idea. I had this exact need yesterday when posting a
screenshot of a mockup I made for a feature. Since I turned the visual
editor back on in WP and realized it works now I've lost my taste for
editing HTML directly. If it could be implemented in a simple and
elegant way that also allowed editing raw HTML I'm all for wysiwyg
editing fo comments on extend.

Actually, an awesome theme-capable version of tinymce that could be
activated for comments would be an amazing GSOC project I'd support!
I'm sure there's already plugins for it.

> *Improved Comments System (with Solutions System)
> *
> A new comments system would be included that would allow two types of
> comments:
>
> 1) A normal comment giving general feedback on the Idea or additional ideas.
> Just text with some possible formatting or link.
>
> 2) A specific solution to the Idea which would be displayed above regular
> comments. See Ubuntu BrainStorm. A solution would allow attachments and
> would have the ability to be voted up and down just like the main idea. ?An
> example use: A user suggests better export/import with a couple feature
> ideas. A second user votes the idea up and has a specific solution in mind.
> They mockup a screen quickly and want to post it as a solution for the Idea.
> Other users can come in and vote this solution up and down or post their
> own.

I like this too. Stack Overflow uses this methodology and I think it
makes a lot of sense.

That said, what is even more important is the ability to modify the
original idea as time goes on. As the owner of an idea all I can
currently do is add a new comment at the end, which is pretty annoying
since people will just see my first post. If I could either modify the
original post or add an update section to the bottom of it to account
for considerations brought up in comments that would cover a lot of
ground. Even better would be some kind of system that allowed other
people to propose edits to the main idea that clarify it. I often find
good ideas that are terribly written by someone who barely understands
the issues, being able to reword the idea would make me much less
tempted to rewrite it  (and start the star count back at zero on the
new  idea).

> *Integration with Trac*
> *
> *Once a ticket reaches a significant amount of feedback, solutions, comments
> or popularity there should be a way to automatically generate a trac ticket
> with a link back to the idea. This feature could be either for moderators or
> for the creator.

I'm not sure how useful this would be. IMHO the trac ticket needs to
be written by someone who understands Trac as well as the culture of
WP trac. If anything this is a job for the moderator to do by hand at
the point when an idea is acknoledged as a version-dependent "task".

That said, I think a field for 'track url' would be nice on each idea,
so that if there is a related/matching ticket in trac people can go
read the technical details and/or vote for the idea in that locale as
well. All it needs to be is a url with the trac logo next to it. This
would also serve to show that the "idea" for this idea is kind of
irrelevant, as trac is where the real magic happens :P

> *Idea Statuses*
> *
> *Currently there are about 10 different types of ideas (implemented, under
> consideration, etc). I propose condensing them into the following:
>
> ? - Latest Ideas
> ? - Popular Ideas
> ? - Ideas in Development (If they have been finally posted to trac, may
> ? have a patch or if a plugin or theme developer is working on it)
> ? - Implemented Ideas (For ideas implemented either in core, a plugin or a
> ? theme)

Latest and popular aren't types like the others, they are types of
queries. They should be seperate.

IMHO 'under consideration' should not be abandoned. In my use in the
last couple days it seems like it is a curated list by Jane or someone
else who has decisionmaking power within WP and that curation is the
value. I think human-orginzation of the list will be more effective
than any automated heuristics.

> Only a moderator can change a status but users can ?suggest a change? if an
> Idea has been implemented but the status is not updated. This is the
> equivalent of adding a ?modlook? tag on the current system.

+1

> *Popularity Weighting*
> *
> *The system would take into account the number of up votes, comments,
> solutions and views for a popularity score. The ideas with higher popularity
> would be show on the popular section and home page of the Ideas section.
>
> If an idea is linked to in a blog (track-back) then the popularity will
> raise.

Sure. I'm sure the heuristics could use improvement.

> Additional Idea: A tweet this option where retweets would be included in the
> popularity rating.

This makes sense. Could also be more of a share this with a few
options for how to share it.


-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From arlenbee at gmail.com  Mon Mar 22 18:16:22 2010
From: arlenbee at gmail.com (Arlen Beiler)
Date: Mon, 22 Mar 2010 14:16:22 -0400
Subject: [wp-hackers] concatinating PHP code files
Message-ID: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>

Is there a way to specify a start file and have php build a new file out of
the inludes and requires it finds? Say I have 5 files, #1 includes the other
4 at runtime. Can I have it take the code in those other files and insert it
where the include is the way PHP does when it runs?

From stas at nerd.ro  Mon Mar 22 18:20:15 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Mon, 22 Mar 2010 20:20:15 +0200
Subject: [wp-hackers] GSoC Proposal: Ideas Forum
In-Reply-To: <e1202cb11003221053r5bebb4e2m390f8c1fb504f0a4@mail.gmail.com>
References: <a93cee651003201741j2edf292ak9882548223049c29@mail.gmail.com>
	<e1202cb11003221053r5bebb4e2m390f8c1fb504f0a4@mail.gmail.com>
Message-ID: <1269282015.2137.5.camel@rivalry.c7.campus.utcluj.ro>

?n data de Lu, 22-03-2010 la 13:53 -0400, Jeremy Clarke a scris:
> I've been playing with the Ideas forum lately and really enjoying it,
> a lot of these ideas came to mind in the process.
> 
> This feedback would apply to anyone proposing to improve the ideas
> section, or to Automattic if they ever do it themeselves.
> 
> One feature that I deeply want but isn't mentioned here is insanely
> obvious and just plain missing: email updates. I REALLY REALLY want an
> email to tell me if someone comments on my idea, and I want to be able
> to subscribe to an idea. This is not controvercial, this is not
> complicated. Install subscribe-to-comments or IntenseDebate and it
> would be done. While you're at it do so on the WP Forums too ;)
> 

I think this is more like an idea to be part of the bbPress core. Both
forums, and ideas apps are using bbPress afaik.

> 
> On Sat, Mar 20, 2010 at 8:41 PM, Justin Shreve <justin.shreve at gmail.com> wrote:
> > *Promote/Demote System (Promote/Demote)
> > *
> > The new Ideas Forum would contain a promote/demote system instead of the
> > current star rating system. Users would click a thumb up icon to show their
> > support for a specific feature or a thumbs down if they think it is a bad
> > idea.
> 
> I don't really see why this is better than stars. # of stars + total
> reviews gives a pretty good sense of things, and personally i like
> being able to give things 2-3 stars as a way of lowering the average
> to show that someone thought about this but didn't have a strong
> feeling either way (i.e. sounds okay but who cares, or sounds useful
> but complex and bug-generating).
> 
> Maybe +1 -1 style is more popular and inspires more people to use the
> feature, though I'm not convinced the effect overall is a good one
> (see: Digg)
> 
> > *Visual Posting Editor + Attachments
> > *
> > Not everybody that uses WordPress knows HTML. A visual editor like the one
> > included with WordPress (TinyMCE) would make it easier to add some
> > formatting to the idea posts.  Only tags like the ones allowed now would be
> > allowed through and the editor would degrade if JavaScript was not enabled.
> >
> > The posting screen would also allow users to post some kind of screenshot
> > with their posting so they could propose a UI screen or show visually what
> > they are talking about.
> 
> Very good idea. I had this exact need yesterday when posting a
> screenshot of a mockup I made for a feature. Since I turned the visual
> editor back on in WP and realized it works now I've lost my taste for
> editing HTML directly. If it could be implemented in a simple and
> elegant way that also allowed editing raw HTML I'm all for wysiwyg
> editing fo comments on extend.
> 
> Actually, an awesome theme-capable version of tinymce that could be
> activated for comments would be an amazing GSOC project I'd support!
> I'm sure there's already plugins for it.
> 
> > *Improved Comments System (with Solutions System)
> > *
> > A new comments system would be included that would allow two types of
> > comments:
> >
> > 1) A normal comment giving general feedback on the Idea or additional ideas.
> > Just text with some possible formatting or link.
> >
> > 2) A specific solution to the Idea which would be displayed above regular
> > comments. See Ubuntu BrainStorm. A solution would allow attachments and
> > would have the ability to be voted up and down just like the main idea.  An
> > example use: A user suggests better export/import with a couple feature
> > ideas. A second user votes the idea up and has a specific solution in mind.
> > They mockup a screen quickly and want to post it as a solution for the Idea.
> > Other users can come in and vote this solution up and down or post their
> > own.
> 
> I like this too. Stack Overflow uses this methodology and I think it
> makes a lot of sense.
> 
> That said, what is even more important is the ability to modify the
> original idea as time goes on. As the owner of an idea all I can
> currently do is add a new comment at the end, which is pretty annoying
> since people will just see my first post. If I could either modify the
> original post or add an update section to the bottom of it to account
> for considerations brought up in comments that would cover a lot of
> ground. Even better would be some kind of system that allowed other
> people to propose edits to the main idea that clarify it. I often find
> good ideas that are terribly written by someone who barely understands
> the issues, being able to reword the idea would make me much less
> tempted to rewrite it  (and start the star count back at zero on the
> new  idea).
> 
> > *Integration with Trac*
> > *
> > *Once a ticket reaches a significant amount of feedback, solutions, comments
> > or popularity there should be a way to automatically generate a trac ticket
> > with a link back to the idea. This feature could be either for moderators or
> > for the creator.
> 
> I'm not sure how useful this would be. IMHO the trac ticket needs to
> be written by someone who understands Trac as well as the culture of
> WP trac. If anything this is a job for the moderator to do by hand at
> the point when an idea is acknoledged as a version-dependent "task".
> 
> That said, I think a field for 'track url' would be nice on each idea,
> so that if there is a related/matching ticket in trac people can go
> read the technical details and/or vote for the idea in that locale as
> well. All it needs to be is a url with the trac logo next to it. This
> would also serve to show that the "idea" for this idea is kind of
> irrelevant, as trac is where the real magic happens :P
> 
> > *Idea Statuses*
> > *
> > *Currently there are about 10 different types of ideas (implemented, under
> > consideration, etc). I propose condensing them into the following:
> >
> >   - Latest Ideas
> >   - Popular Ideas
> >   - Ideas in Development (If they have been finally posted to trac, may
> >   have a patch or if a plugin or theme developer is working on it)
> >   - Implemented Ideas (For ideas implemented either in core, a plugin or a
> >   theme)
> 
> Latest and popular aren't types like the others, they are types of
> queries. They should be seperate.
> 
> IMHO 'under consideration' should not be abandoned. In my use in the
> last couple days it seems like it is a curated list by Jane or someone
> else who has decisionmaking power within WP and that curation is the
> value. I think human-orginzation of the list will be more effective
> than any automated heuristics.
> 
> > Only a moderator can change a status but users can ?suggest a change? if an
> > Idea has been implemented but the status is not updated. This is the
> > equivalent of adding a ?modlook? tag on the current system.
> 
> +1
> 
> > *Popularity Weighting*
> > *
> > *The system would take into account the number of up votes, comments,
> > solutions and views for a popularity score. The ideas with higher popularity
> > would be show on the popular section and home page of the Ideas section.
> >
> > If an idea is linked to in a blog (track-back) then the popularity will
> > raise.
> 
> Sure. I'm sure the heuristics could use improvement.
> 
> > Additional Idea: A tweet this option where retweets would be included in the
> > popularity rating.
> 
> This makes sense. Could also be more of a share this with a few
> options for how to share it.
> 
> 


-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From jer at simianuprising.com  Mon Mar 22 18:28:42 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 22 Mar 2010 14:28:42 -0400
Subject: [wp-hackers] GSoC Proposal: Ideas Forum
In-Reply-To: <1269282015.2137.5.camel@rivalry.c7.campus.utcluj.ro>
References: <a93cee651003201741j2edf292ak9882548223049c29@mail.gmail.com>
	<e1202cb11003221053r5bebb4e2m390f8c1fb504f0a4@mail.gmail.com>
	<1269282015.2137.5.camel@rivalry.c7.campus.utcluj.ro>
Message-ID: <e1202cb11003221128i58bc2d0dk215e3da809964d84@mail.gmail.com>

FWIW the favorites system on Ideas seems to be broken/missing. If it
worked I could favorite all the ideas I comment on or create then
email sub to the favorites RSS feed but the 'add to favorites' button
mentioned in the favorites page doesn't seem to exist on actual ideas.

http://wordpress.org/extend/ideas/profile/jeremyclarke/favorites

A system to allow auto-favoriting of created/commented-on ideas would
be another good addition.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From gaarai at gaarai.com  Mon Mar 22 18:37:33 2010
From: gaarai at gaarai.com (Chris Jean)
Date: Mon, 22 Mar 2010 13:37:33 -0500
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
Message-ID: <4BA7B8ED.8090609@gaarai.com>

I don't know of anything that does this. I'm really curious to know why 
you would want to.

If you only needed to do it once, just manually merge them (though I 
still don't know why you'd want to). If it needed to handle random code 
in an automated fashion, what application would require this?

If you really needed this, it sounds like you would want to build a 
custom script that uses regex (http://www.regular-expressions.info/) to 
parse the files in order to find the include, include_once, require, 
require_once instances and replace them with the content of the files. 
Of course, if include_once or require_once is used, log the file so it 
is only included once.

Chris Jean (AKA gaarai & chrisbliss18)
Coder for http://ithemes.com/
http://gaarai.com/
@chrisjean



Arlen Beiler wrote:
> Is there a way to specify a start file and have php build a new file out of
> the inludes and requires it finds? Say I have 5 files, #1 includes the other
> 4 at runtime. Can I have it take the code in those other files and insert it
> where the include is the way PHP does when it runs?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From arlenbee at gmail.com  Mon Mar 22 18:40:25 2010
From: arlenbee at gmail.com (Arlen Beiler)
Date: Mon, 22 Mar 2010 14:40:25 -0400
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <4BA7B8ED.8090609@gaarai.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
Message-ID: <e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>

The main thing would be that it would make searching easier. However, for
something like Wordpress, you would have a file so big that only something
like Microsoft Word or a web browser could handle it.

On Mon, Mar 22, 2010 at 2:37 PM, Chris Jean <gaarai at gaarai.com> wrote:

> I don't know of anything that does this. I'm really curious to know why you
> would want to.
>
> If you only needed to do it once, just manually merge them (though I still
> don't know why you'd want to). If it needed to handle random code in an
> automated fashion, what application would require this?
>
> If you really needed this, it sounds like you would want to build a custom
> script that uses regex (http://www.regular-expressions.info/) to parse the
> files in order to find the include, include_once, require, require_once
> instances and replace them with the content of the files. Of course, if
> include_once or require_once is used, log the file so it is only included
> once.
>
> Chris Jean (AKA gaarai & chrisbliss18)
> Coder for http://ithemes.com/
> http://gaarai.com/
> @chrisjean
>
>
>
> Arlen Beiler wrote:
>
>> Is there a way to specify a start file and have php build a new file out
>> of
>> the inludes and requires it finds? Say I have 5 files, #1 includes the
>> other
>> 4 at runtime. Can I have it take the code in those other files and insert
>> it
>> where the include is the way PHP does when it runs?
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From juewang at post.harvard.edu  Mon Mar 22 18:45:12 2010
From: juewang at post.harvard.edu (Jue Wang)
Date: Mon, 22 Mar 2010 14:45:12 -0400
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
Message-ID: <4f8622411003221145k5ec59d1bq73e6bbb6825a9994@mail.gmail.com>

What are you searching for? Is it something you can't use
grep<http://unixhelp.ed.ac.uk/CGI/man-cgi?grep>for?

On Mon, Mar 22, 2010 at 2:40 PM, Arlen Beiler <arlenbee at gmail.com> wrote:

> The main thing would be that it would make searching easier. However, for
> something like Wordpress, you would have a file so big that only something
> like Microsoft Word or a web browser could handle it.
>
> On Mon, Mar 22, 2010 at 2:37 PM, Chris Jean <gaarai at gaarai.com> wrote:
>
> > I don't know of anything that does this. I'm really curious to know why
> you
> > would want to.
> >
> > If you only needed to do it once, just manually merge them (though I
> still
> > don't know why you'd want to). If it needed to handle random code in an
> > automated fashion, what application would require this?
> >
> > If you really needed this, it sounds like you would want to build a
> custom
> > script that uses regex (http://www.regular-expressions.info/) to parse
> the
> > files in order to find the include, include_once, require, require_once
> > instances and replace them with the content of the files. Of course, if
> > include_once or require_once is used, log the file so it is only included
> > once.
> >
> > Chris Jean (AKA gaarai & chrisbliss18)
> > Coder for http://ithemes.com/
> > http://gaarai.com/
> > @chrisjean
> >
> >
> >
> > Arlen Beiler wrote:
> >
> >> Is there a way to specify a start file and have php build a new file out
> >> of
> >> the inludes and requires it finds? Say I have 5 files, #1 includes the
> >> other
> >> 4 at runtime. Can I have it take the code in those other files and
> insert
> >> it
> >> where the include is the way PHP does when it runs?
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From arlenbee at gmail.com  Mon Mar 22 18:48:12 2010
From: arlenbee at gmail.com (Arlen Beiler)
Date: Mon, 22 Mar 2010 14:48:12 -0400
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <4f8622411003221145k5ec59d1bq73e6bbb6825a9994@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
	<4f8622411003221145k5ec59d1bq73e6bbb6825a9994@mail.gmail.com>
Message-ID: <e002a22f1003221148v6452a3f5o3595996b3a2e83cb@mail.gmail.com>

Grep doesn't quite look like what I want. I want to do it mostly to satisfy
my curiousity.

On Mon, Mar 22, 2010 at 2:45 PM, Jue Wang <juewang at post.harvard.edu> wrote:

> What are you searching for? Is it something you can't use
> grep<http://unixhelp.ed.ac.uk/CGI/man-cgi?grep>for?
>
> On Mon, Mar 22, 2010 at 2:40 PM, Arlen Beiler <arlenbee at gmail.com> wrote:
>
> > The main thing would be that it would make searching easier. However, for
> > something like Wordpress, you would have a file so big that only
> something
> > like Microsoft Word or a web browser could handle it.
> >
> > On Mon, Mar 22, 2010 at 2:37 PM, Chris Jean <gaarai at gaarai.com> wrote:
> >
> > > I don't know of anything that does this. I'm really curious to know why
> > you
> > > would want to.
> > >
> > > If you only needed to do it once, just manually merge them (though I
> > still
> > > don't know why you'd want to). If it needed to handle random code in an
> > > automated fashion, what application would require this?
> > >
> > > If you really needed this, it sounds like you would want to build a
> > custom
> > > script that uses regex (http://www.regular-expressions.info/) to parse
> > the
> > > files in order to find the include, include_once, require, require_once
> > > instances and replace them with the content of the files. Of course, if
> > > include_once or require_once is used, log the file so it is only
> included
> > > once.
> > >
> > > Chris Jean (AKA gaarai & chrisbliss18)
> > > Coder for http://ithemes.com/
> > > http://gaarai.com/
> > > @chrisjean
> > >
> > >
> > >
> > > Arlen Beiler wrote:
> > >
> > >> Is there a way to specify a start file and have php build a new file
> out
> > >> of
> > >> the inludes and requires it finds? Say I have 5 files, #1 includes the
> > >> other
> > >> 4 at runtime. Can I have it take the code in those other files and
> > insert
> > >> it
> > >> where the include is the way PHP does when it runs?
> > >> _______________________________________________
> > >> wp-hackers mailing list
> > >> wp-hackers at lists.automattic.com
> > >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >>
> > >>
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From gaarai at gaarai.com  Mon Mar 22 18:48:15 2010
From: gaarai at gaarai.com (Chris Jean)
Date: Mon, 22 Mar 2010 13:48:15 -0500
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
Message-ID: <4BA7BB6F.5040803@gaarai.com>

That would actually make working with the code harder as it would be 
amazingly-large. You need a proper file searching tool.

Personally, I use grep which is available on Linux and Mac systems. 
Using grep allows me to quickly search through hundreds or thousands of 
files quickly and easily. I've blogged on the topic here: 
http://gaarai.com/2009/01/21/grep-why-i-love-linux/. In the post, I even 
talk about using grep to find functions in WordPress code.

There are similar tools for Windows, but as I don't develop on Windows, 
I don't know what to recommend.

Keep in mind that the problem is that you want to search code in 
multiple files, not that you don't have all the code in one file (which 
as you already said, would be very hard to handle).

Chris Jean (AKA gaarai & chrisbliss18)
Coder for http://ithemes.com/
http://gaarai.com/
@chrisjean



Arlen Beiler wrote:
> The main thing would be that it would make searching easier. However, for
> something like Wordpress, you would have a file so big that only something
> like Microsoft Word or a web browser could handle it.
>   

From justin.shreve at gmail.com  Mon Mar 22 18:51:00 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Mon, 22 Mar 2010 14:51:00 -0400
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <4BA7BB6F.5040803@gaarai.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
	<4BA7BB6F.5040803@gaarai.com>
Message-ID: <a93cee651003221151o12e8450dw9dfdefe244c9efc1@mail.gmail.com>

In terms of searching normal stuff I would recommend grep as Chris mentioned
or using Google Code Search. Since the code is open source Google has
indexed it and you can search through project code that way.

On Mon, Mar 22, 2010 at 2:48 PM, Chris Jean <gaarai at gaarai.com> wrote:

> That would actually make working with the code harder as it would be
> amazingly-large. You need a proper file searching tool.
>
> Personally, I use grep which is available on Linux and Mac systems. Using
> grep allows me to quickly search through hundreds or thousands of files
> quickly and easily. I've blogged on the topic here:
> http://gaarai.com/2009/01/21/grep-why-i-love-linux/. In the post, I even
> talk about using grep to find functions in WordPress code.
>
> There are similar tools for Windows, but as I don't develop on Windows, I
> don't know what to recommend.
>
> Keep in mind that the problem is that you want to search code in multiple
> files, not that you don't have all the code in one file (which as you
> already said, would be very hard to handle).
>
>
> Chris Jean (AKA gaarai & chrisbliss18)
> Coder for http://ithemes.com/
> http://gaarai.com/
> @chrisjean
>
>
>
> Arlen Beiler wrote:
>
>> The main thing would be that it would make searching easier. However, for
>> something like Wordpress, you would have a file so big that only something
>> like Microsoft Word or a web browser could handle it.
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From andrew at graymerica.com  Mon Mar 22 18:51:30 2010
From: andrew at graymerica.com (Andrew Gray)
Date: Mon, 22 Mar 2010 14:51:30 -0400
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
Message-ID: <CEE70744-410A-435C-A73A-B4237445BEF3@graymerica.com>

including files has almost no overhead on the server level.   You can use APC encoder to save your self a lot of overhead and statically create php byte code if you are worried about that.

Also, having lots of files makes using source control much easier.  One big file would be a mess.  You would have to update the entire thing instead of the small changes.

As for searching, almost any editor (Textmate, text wrangler, dream weaver for mac) have a directory search. I am sure the same is true on windows / linux.  

> 
> Grep doesn't quite look like what I want. I want to do it mostly to satisfy my curiousity.



Watch out for that, it kill cats. :)

Andrew



On Mar 22, 2010, at 2:40 PM, Arlen Beiler wrote:

> The main thing would be that it would make searching easier. However, for
> something like Wordpress, you would have a file so big that only something
> like Microsoft Word or a web browser could handle it.
> 
> On Mon, Mar 22, 2010 at 2:37 PM, Chris Jean <gaarai at gaarai.com> wrote:
> 
>> I don't know of anything that does this. I'm really curious to know why you
>> would want to.
>> 
>> If you only needed to do it once, just manually merge them (though I still
>> don't know why you'd want to). If it needed to handle random code in an
>> automated fashion, what application would require this?
>> 
>> If you really needed this, it sounds like you would want to build a custom
>> script that uses regex (http://www.regular-expressions.info/) to parse the
>> files in order to find the include, include_once, require, require_once
>> instances and replace them with the content of the files. Of course, if
>> include_once or require_once is used, log the file so it is only included
>> once.
>> 
>> Chris Jean (AKA gaarai & chrisbliss18)
>> Coder for http://ithemes.com/
>> http://gaarai.com/
>> @chrisjean
>> 
>> 
>> 
>> Arlen Beiler wrote:
>> 
>>> Is there a way to specify a start file and have php build a new file out
>>> of
>>> the inludes and requires it finds? Say I have 5 files, #1 includes the
>>> other
>>> 4 at runtime. Can I have it take the code in those other files and insert
>>> it
>>> where the include is the way PHP does when it runs?
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From scribu at gmail.com  Mon Mar 22 19:17:03 2010
From: scribu at gmail.com (scribu)
Date: Mon, 22 Mar 2010 21:17:03 +0200
Subject: [wp-hackers] GSoC Proposal: Ideas Forum
In-Reply-To: <1269282015.2137.5.camel@rivalry.c7.campus.utcluj.ro>
References: <a93cee651003201741j2edf292ak9882548223049c29@mail.gmail.com>
	<e1202cb11003221053r5bebb4e2m390f8c1fb504f0a4@mail.gmail.com>
	<1269282015.2137.5.camel@rivalry.c7.campus.utcluj.ro>
Message-ID: <349fe48b1003221217w30064261qa8efcf4ee2ec5a0e@mail.gmail.com>

On Mon, Mar 22, 2010 at 8:20 PM, Stas Su?cov <stas at nerd.ro> wrote:

> > obvious and just plain missing: email updates. I REALLY REALLY want an
> > email to tell me if someone comments on my idea, and I want to be able
> > to subscribe to an idea. This is not controvercial, this is not
> > complicated. Install subscribe-to-comments or IntenseDebate and it
> > would be done. While you're at it do so on the WP Forums too ;)
> >
>
> > One feature that I deeply want but isn't mentioned here is insanely
> I think this is more like an idea to be part of the bbPress core. Both
> forums, and ideas apps are using bbPress afaik.
>


The development version of bbPress already has email notifications so it
will probably be roled out soon.


-- 
http://scribu.net

From jpotkanski at tribune.com  Mon Mar 22 19:29:13 2010
From: jpotkanski at tribune.com (Potkanski, Jason)
Date: Mon, 22 Mar 2010 14:29:13 -0500
Subject: [wp-hackers] populate_option : wpmu-upgrade vs freshly created
 blog
In-Reply-To: <4BA7A06F.1020901@gmail.com>
Message-ID: <C7CD2F39.2142%jpotkanski@tribune.com>

The Populate_options hook is called before the actual blog defaults are stored. Any defaults set here will just get overridden with schema defaults.

If you are looking for how to set default blog options programmatically, hook wpmu_new_blog.

Here is a code sample on how to hook into wpmu_new_blog:

add_action( 'wpmu_new_blog', 'set_default_options', 10 , 2 );

function set_default_options($blog_id, $user_id) {
    set_default_general_settings($blog_id);
}

function set_default_general_settings($blog_id) {
    update_blog_option($blog_id, 'timezone_string', 'America/New_York');
}

I set defaults for serialized plugin data like recaptcha as well. It's a pretty simple technique.

There is a "Blog Defaults" MU plugin out there as well.

--

Jason Potkanski
Tribune Technology



On 3/22/10 10:53 AM, "Rapha?l Droz" <raphael.droz at gmail.com> wrote:

All is in the title,
while I would like to change the default options of a blog  I observed
that the populate_option hook is also used at upgrade.

Should I use some kind of workaround like comparing the creation date ?
Or should I forget about the wpdb->query and use update_option's in the
wpmu_new_blog hook which, apparently until now, is only used at the blog
creation time.
In this latter case, I would be out-context and, to, eg, switch the theme or
add a post, I would have to switch_blog() again.
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Mon Mar 22 19:56:08 2010
From: otto at ottodestruct.com (Otto)
Date: Mon, 22 Mar 2010 14:56:08 -0500
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
Message-ID: <161617691003221256i14735addke6c75ccfef6ec133@mail.gmail.com>

Amazingly enough, that's actually not simple because of the
include_once and require_once commands. Those can't be evaluated until
the actual runtime, because different conditional values can change
the order things are loaded in. So, you need extra code just to keep
track of what is "loaded" for those to be run at the right times. So
it's more complex than a simple replacement, basically.

-Otto



On Mon, Mar 22, 2010 at 1:16 PM, Arlen Beiler <arlenbee at gmail.com> wrote:
> Is there a way to specify a start file and have php build a new file out of
> the inludes and requires it finds? Say I have 5 files, #1 includes the other
> 4 at runtime. Can I have it take the code in those other files and insert it
> where the include is the way PHP does when it runs?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From meheranandk at gmail.com  Mon Mar 22 20:56:11 2010
From: meheranandk at gmail.com (Meher Anand)
Date: Tue, 23 Mar 2010 02:26:11 +0530
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code 2010
Message-ID: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>

Hi all.

I am currently studying my last semester of Computer Science & Engineering.
I have been using Wordpress heavily for the last 3 years and I am interested
in contributing for it. The Blog Import/Export idea interested me since I
too had faced some issues when I was shifting a blog installation from one
hosting facility to another. Here's the working scenario which I propose:

- User needs to know only the FTP account details. Knowing the database
details is an added plus. The Blog Import Export (BIE) plugin will be
installed only on the new blog. If the user is unaware of the DB details,
BIE will initially download the wp-config file from the remote server and
extract the DB password from it and connect to the database. A check list
will be generated based on both Category and Month-Year and a user can
choose to transfer full or only part of the blog by Category or by
Month-Year.

- User will also be given the following options:
1) Would you like to transfer Media files which are not being used in any of
your articles?
2) Would you like to transfer unpublished articles?

- Once all options are selected, transfers will be done on a post by post
basis i.e. the post and all media referenced by it. This is done so that if
this were a large blog and the transfer were somehow interrupted, atleast
some of the posts will be visible completely with the pictures, documents
and stuff inside the new blog. Also, while the transfer is going on, an AJAX
based status update can be given so that the user is aware of the current
status. It can be of the format, 3 / 140 posts transferred.

- If the transfer were to be interrupted due to some reason, the BIE plugin
can store the user configuration (which posts need to be transferred, FTP
details, DB details etc.) in a separate table in the local database and also
the current state of the transfer. This would help the plugin recover later
on when the transfer would be resumed.

Please review this and let me know if I've missed out on anything.

Also, here's my work related to Wordpress and general PHP coding so far:

1) Faculty pages for my University. Work still in progress and to be
launched soon. Demo link: http://cse.vnit.ac.in/people/ashishtiwari/ . These
blogs are actually meant to be used by faculty as their personal home pages,
so rule 0 is to not make it look like a blog. I had made significant changes
to the code base to remove the concept of comments and side bar etc. Login
is through LDAP. This plugin
http://wordpress.org/extend/plugins/simple-ldap-login/ helped quite a bit
but didn't satisfy requirements mainly because of multiple DNs being used by
the LDAP server. I had to make significant modifications there so as to
allow use of different DNs based on regular expression matching on
user-input username.
2) Installation and maintenance of http://acm.vnit.ac.in/ and
http://axis.vnit.ac.in/blog.
3) Coding of Institute Alumni website to be launched by the end of this
week. Link - http://alumni.vnit.ac.in/ . Coding was done in CakePHP. This
website has features that are parallel to those offered by Facebook and
Twitter and heavily uses AJAX. JQuery was used for Javascript and AJAX.
4) Currently developing the University website http://beta.vnit.ac.in/ on
CakePHP.

Regards.

Meher Anand
Visvesvaraya National Institute of Technology

From meheranandk at gmail.com  Mon Mar 22 21:05:48 2010
From: meheranandk at gmail.com (Meher Anand)
Date: Tue, 23 Mar 2010 02:35:48 +0530
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
Message-ID: <e279cc4f1003221405i6f58e279pe690e8f80a77404f@mail.gmail.com>

On Tue, Mar 23, 2010 at 2:26 AM, Meher Anand <meheranandk at gmail.com> wrote:

> Hi all.
>
> I am currently studying my last semester of Computer Science & Engineering.
> I have been using Wordpress heavily for the last 3 years and I am interested
> in contributing for it. The Blog Import/Export idea interested me since I
> too had faced some issues when I was shifting a blog installation from one
> hosting facility to another. Here's the working scenario which I propose:
>
> - User needs to know only the FTP account details. Knowing the database
> details is an added plus. The Blog Import Export (BIE) plugin will be
> installed only on the new blog. If the user is unaware of the DB details,
> BIE will initially download the wp-config file from the remote server and
> extract the DB password from it and connect to the database. A check list
> will be generated based on both Category and Month-Year and a user can
> choose to transfer full or only part of the blog by Category or by
> Month-Year.
>
> - User will also be given the following options:
> 1) Would you like to transfer Media files which are not being used in any
> of your articles?
> 2) Would you like to transfer unpublished articles?
>
> - Once all options are selected, transfers will be done on a post by post
> basis i.e. the post and all media referenced by it. This is done so that if
> this were a large blog and the transfer were somehow interrupted, atleast
> some of the posts will be visible completely with the pictures, documents
> and stuff inside the new blog. Also, while the transfer is going on, an AJAX
> based status update can be given so that the user is aware of the current
> status. It can be of the format, 3 / 140 posts transferred.
>
> - If the transfer were to be interrupted due to some reason, the BIE plugin
> can store the user configuration (which posts need to be transferred, FTP
> details, DB details etc.) in a separate table in the local database and also
> the current state of the transfer. This would help the plugin recover later
> on when the transfer would be resumed.
>
> Please review this and let me know if I've missed out on anything.
>
> Also, here's my work related to Wordpress and general PHP coding so far:
>
> 1) Faculty pages for my University. Work still in progress and to be
> launched soon. Demo link: http://cse.vnit.ac.in/people/ashishtiwari/ .
> These blogs are actually meant to be used by faculty as their personal home
> pages, so rule 0 is to not make it look like a blog. I had made significant
> changes to the code base to remove the concept of comments and side bar etc.
> Login is through LDAP. This plugin
> http://wordpress.org/extend/plugins/simple-ldap-login/ helped quite a bit
> but didn't satisfy requirements mainly because of multiple DNs being used by
> the LDAP server. I had to make significant modifications there so as to
> allow use of different DNs based on regular expression matching on
> user-input username.
> 2) Installation and maintenance of http://acm.vnit.ac.in/ and
> http://axis.vnit.ac.in/blog.
> 3) Coding of Institute Alumni website to be launched by the end of this
> week. Link - http://alumni.vnit.ac.in/ . Coding was done in CakePHP. This
> website has features that are parallel to those offered by Facebook and
> Twitter and heavily uses AJAX. JQuery was used for Javascript and AJAX.
> 4) Currently developing the University website http://beta.vnit.ac.in/ on
> CakePHP.
>
> Regards.
>
> Meher Anand
> Visvesvaraya National Institute of Technology
>

I realized that I might not have been very clear in point 1 of my profile.
The installation is of Wordpress MU. Each blog on the installation is a
personal webpage of each faculty member and only the LDAP owner of a blog
can edit it. Wordpress was preferred by us over CMS such as Joomla and
Drupal due to its excellent UI and the simplicity of posting material on the
page.

Regards.

Meher Anand
Visvesvaraya National Institute of Technology
Nagpur, India

From aram.bv at gmail.com  Mon Mar 22 21:08:58 2010
From: aram.bv at gmail.com (Aram)
Date: Tue, 23 Mar 2010 01:08:58 +0400
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
Message-ID: <631193761003221408q6417843aie4037cf121285717@mail.gmail.com>

Is that secure to allow the plugin to download the wp-config.php from
another server? it means it will have full access to ftp and mysql...

On Tue, Mar 23, 2010 at 12:56 AM, Meher Anand <meheranandk at gmail.com> wrote:

> Hi all.
>
> I am currently studying my last semester of Computer Science & Engineering.
> I have been using Wordpress heavily for the last 3 years and I am
> interested
> in contributing for it. The Blog Import/Export idea interested me since I
> too had faced some issues when I was shifting a blog installation from one
> hosting facility to another. Here's the working scenario which I propose:
>
> - User needs to know only the FTP account details. Knowing the database
> details is an added plus. The Blog Import Export (BIE) plugin will be
> installed only on the new blog. If the user is unaware of the DB details,
> BIE will initially download the wp-config file from the remote server and
> extract the DB password from it and connect to the database. A check list
> will be generated based on both Category and Month-Year and a user can
> choose to transfer full or only part of the blog by Category or by
> Month-Year.
>
> - User will also be given the following options:
> 1) Would you like to transfer Media files which are not being used in any
> of
> your articles?
> 2) Would you like to transfer unpublished articles?
>
> - Once all options are selected, transfers will be done on a post by post
> basis i.e. the post and all media referenced by it. This is done so that if
> this were a large blog and the transfer were somehow interrupted, atleast
> some of the posts will be visible completely with the pictures, documents
> and stuff inside the new blog. Also, while the transfer is going on, an
> AJAX
> based status update can be given so that the user is aware of the current
> status. It can be of the format, 3 / 140 posts transferred.
>
> - If the transfer were to be interrupted due to some reason, the BIE plugin
> can store the user configuration (which posts need to be transferred, FTP
> details, DB details etc.) in a separate table in the local database and
> also
> the current state of the transfer. This would help the plugin recover later
> on when the transfer would be resumed.
>
> Please review this and let me know if I've missed out on anything.
>
> Also, here's my work related to Wordpress and general PHP coding so far:
>
> 1) Faculty pages for my University. Work still in progress and to be
> launched soon. Demo link: http://cse.vnit.ac.in/people/ashishtiwari/ .
> These
> blogs are actually meant to be used by faculty as their personal home
> pages,
> so rule 0 is to not make it look like a blog. I had made significant
> changes
> to the code base to remove the concept of comments and side bar etc. Login
> is through LDAP. This plugin
> http://wordpress.org/extend/plugins/simple-ldap-login/ helped quite a bit
> but didn't satisfy requirements mainly because of multiple DNs being used
> by
> the LDAP server. I had to make significant modifications there so as to
> allow use of different DNs based on regular expression matching on
> user-input username.
> 2) Installation and maintenance of http://acm.vnit.ac.in/ and
> http://axis.vnit.ac.in/blog.
> 3) Coding of Institute Alumni website to be launched by the end of this
> week. Link - http://alumni.vnit.ac.in/ . Coding was done in CakePHP. This
> website has features that are parallel to those offered by Facebook and
> Twitter and heavily uses AJAX. JQuery was used for Javascript and AJAX.
> 4) Currently developing the University website http://beta.vnit.ac.in/ on
> CakePHP.
>
> Regards.
>
> Meher Anand
> Visvesvaraya National Institute of Technology
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From juewang at post.harvard.edu  Mon Mar 22 21:11:57 2010
From: juewang at post.harvard.edu (Jue Wang)
Date: Mon, 22 Mar 2010 17:11:57 -0400
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
Message-ID: <4f8622411003221411o6c56dd90qbab9b0470513854d@mail.gmail.com>

Great idea. I've always been surprised at how difficult it is, in general,
to migrate data between different (or even the same) CMS's. Wordpress has
gotten much better in recent versions; Movable Type is abysmal.

My question for you is, given the existing import/export functionality in WP
(for beginner/intermediate users), and the ability to do an advanced
migration at the DB level, which users are being served by your plugin?

Also, how do you expect the plugin to get the wp-config file from the source
blog if it is only installed (i.e. has credentials for) the destination
blog? It seems like you need to be installed on both blogs, or at least have
credentials for both.


On Mon, Mar 22, 2010 at 4:56 PM, Meher Anand <meheranandk at gmail.com> wrote:

> Hi all.
>
> I am currently studying my last semester of Computer Science & Engineering.
> I have been using Wordpress heavily for the last 3 years and I am
> interested
> in contributing for it. The Blog Import/Export idea interested me since I
> too had faced some issues when I was shifting a blog installation from one
> hosting facility to another. Here's the working scenario which I propose:
>
> - User needs to know only the FTP account details. Knowing the database
> details is an added plus. The Blog Import Export (BIE) plugin will be
> installed only on the new blog. If the user is unaware of the DB details,
> BIE will initially download the wp-config file from the remote server and
> extract the DB password from it and connect to the database. A check list
> will be generated based on both Category and Month-Year and a user can
> choose to transfer full or only part of the blog by Category or by
> Month-Year.
>
> - User will also be given the following options:
> 1) Would you like to transfer Media files which are not being used in any
> of
> your articles?
> 2) Would you like to transfer unpublished articles?
>
> - Once all options are selected, transfers will be done on a post by post
> basis i.e. the post and all media referenced by it. This is done so that if
> this were a large blog and the transfer were somehow interrupted, atleast
> some of the posts will be visible completely with the pictures, documents
> and stuff inside the new blog. Also, while the transfer is going on, an
> AJAX
> based status update can be given so that the user is aware of the current
> status. It can be of the format, 3 / 140 posts transferred.
>
> - If the transfer were to be interrupted due to some reason, the BIE plugin
> can store the user configuration (which posts need to be transferred, FTP
> details, DB details etc.) in a separate table in the local database and
> also
> the current state of the transfer. This would help the plugin recover later
> on when the transfer would be resumed.
>
> Please review this and let me know if I've missed out on anything.
>
> Also, here's my work related to Wordpress and general PHP coding so far:
>
> 1) Faculty pages for my University. Work still in progress and to be
> launched soon. Demo link: http://cse.vnit.ac.in/people/ashishtiwari/ .
> These
> blogs are actually meant to be used by faculty as their personal home
> pages,
> so rule 0 is to not make it look like a blog. I had made significant
> changes
> to the code base to remove the concept of comments and side bar etc. Login
> is through LDAP. This plugin
> http://wordpress.org/extend/plugins/simple-ldap-login/ helped quite a bit
> but didn't satisfy requirements mainly because of multiple DNs being used
> by
> the LDAP server. I had to make significant modifications there so as to
> allow use of different DNs based on regular expression matching on
> user-input username.
> 2) Installation and maintenance of http://acm.vnit.ac.in/ and
> http://axis.vnit.ac.in/blog.
> 3) Coding of Institute Alumni website to be launched by the end of this
> week. Link - http://alumni.vnit.ac.in/ . Coding was done in CakePHP. This
> website has features that are parallel to those offered by Facebook and
> Twitter and heavily uses AJAX. JQuery was used for Javascript and AJAX.
> 4) Currently developing the University website http://beta.vnit.ac.in/ on
> CakePHP.
>
> Regards.
>
> Meher Anand
> Visvesvaraya National Institute of Technology
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From meheranandk at gmail.com  Mon Mar 22 21:17:28 2010
From: meheranandk at gmail.com (Meher Anand)
Date: Tue, 23 Mar 2010 02:47:28 +0530
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <4f8622411003221411o6c56dd90qbab9b0470513854d@mail.gmail.com>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com> 
	<4f8622411003221411o6c56dd90qbab9b0470513854d@mail.gmail.com>
Message-ID: <e279cc4f1003221417l1483086g243234fa5136cbfe@mail.gmail.com>

On Tue, Mar 23, 2010 at 2:41 AM, Jue Wang <juewang at post.harvard.edu> wrote:

> Great idea. I've always been surprised at how difficult it is, in general,
> to migrate data between different (or even the same) CMS's. Wordpress has
> gotten much better in recent versions; Movable Type is abysmal.
>
> My question for you is, given the existing import/export functionality in
> WP
> (for beginner/intermediate users), and the ability to do an advanced
> migration at the DB level, which users are being served by your plugin?
>
> Also, how do you expect the plugin to get the wp-config file from the
> source
> blog if it is only installed (i.e. has credentials for) the destination
> blog? It seems like you need to be installed on both blogs, or at least
> have
> credentials for both.
>
>
Import/export functionality currently is through download and upload of a
file. Also, media (such as docs and pics) is not transferred unless you do
an FTP transfer manually. So this plugin satisfies the needs of all levels
of users. The wp-config file contains the username and password of the
database of the old blog. Those credentials and other details like server IP
etc. are essential for accessing the database. This file can be initially
downloaded through FTP. If the user may not be advanced enough to know the
database details of that account, he/she will find it convenient to just
enter the FTP details and let the plugin do the job of finding out the
database details. I hope I am clearer now.

Please let me know if you have any more questions.

Regards.
Meher Anand



> On Mon, Mar 22, 2010 at 4:56 PM, Meher Anand <meheranandk at gmail.com>
> wrote:
>
> > Hi all.
> >
> > I am currently studying my last semester of Computer Science &
> Engineering.
> > I have been using Wordpress heavily for the last 3 years and I am
> > interested
> > in contributing for it. The Blog Import/Export idea interested me since I
> > too had faced some issues when I was shifting a blog installation from
> one
> > hosting facility to another. Here's the working scenario which I propose:
> >
> > - User needs to know only the FTP account details. Knowing the database
> > details is an added plus. The Blog Import Export (BIE) plugin will be
> > installed only on the new blog. If the user is unaware of the DB details,
> > BIE will initially download the wp-config file from the remote server and
> > extract the DB password from it and connect to the database. A check list
> > will be generated based on both Category and Month-Year and a user can
> > choose to transfer full or only part of the blog by Category or by
> > Month-Year.
> >
> > - User will also be given the following options:
> > 1) Would you like to transfer Media files which are not being used in any
> > of
> > your articles?
> > 2) Would you like to transfer unpublished articles?
> >
> > - Once all options are selected, transfers will be done on a post by post
> > basis i.e. the post and all media referenced by it. This is done so that
> if
> > this were a large blog and the transfer were somehow interrupted, atleast
> > some of the posts will be visible completely with the pictures, documents
> > and stuff inside the new blog. Also, while the transfer is going on, an
> > AJAX
> > based status update can be given so that the user is aware of the current
> > status. It can be of the format, 3 / 140 posts transferred.
> >
> > - If the transfer were to be interrupted due to some reason, the BIE
> plugin
> > can store the user configuration (which posts need to be transferred, FTP
> > details, DB details etc.) in a separate table in the local database and
> > also
> > the current state of the transfer. This would help the plugin recover
> later
> > on when the transfer would be resumed.
> >
> > Please review this and let me know if I've missed out on anything.
> >
> > Also, here's my work related to Wordpress and general PHP coding so far:
> >
> > 1) Faculty pages for my University. Work still in progress and to be
> > launched soon. Demo link: http://cse.vnit.ac.in/people/ashishtiwari/ .
> > These
> > blogs are actually meant to be used by faculty as their personal home
> > pages,
> > so rule 0 is to not make it look like a blog. I had made significant
> > changes
> > to the code base to remove the concept of comments and side bar etc.
> Login
> > is through LDAP. This plugin
> > http://wordpress.org/extend/plugins/simple-ldap-login/ helped quite a
> bit
> > but didn't satisfy requirements mainly because of multiple DNs being used
> > by
> > the LDAP server. I had to make significant modifications there so as to
> > allow use of different DNs based on regular expression matching on
> > user-input username.
> > 2) Installation and maintenance of http://acm.vnit.ac.in/ and
> > http://axis.vnit.ac.in/blog.
> > 3) Coding of Institute Alumni website to be launched by the end of this
> > week. Link - http://alumni.vnit.ac.in/ . Coding was done in CakePHP.
> This
> > website has features that are parallel to those offered by Facebook and
> > Twitter and heavily uses AJAX. JQuery was used for Javascript and AJAX.
> > 4) Currently developing the University website http://beta.vnit.ac.in/on
> > CakePHP.
> >
> > Regards.
> >
> > Meher Anand
> > Visvesvaraya National Institute of Technology
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From andrew at graymerica.com  Mon Mar 22 21:20:44 2010
From: andrew at graymerica.com (Andrew Gray)
Date: Mon, 22 Mar 2010 17:20:44 -0400
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <631193761003221408q6417843aie4037cf121285717@mail.gmail.com>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
	<631193761003221408q6417843aie4037cf121285717@mail.gmail.com>
Message-ID: <9A5B0C64-932F-4FE8-AFCD-A0B5D5B36AC4@graymerica.com>

What about remote mysql connections,  many hosts do no allow them or use a different IP address.

My question about your methodology is,  how many times do you want to move part of a blog, not just the whole thing.

Here is how I move wordpress sites

1.  Backup Mysql to Text File
2. FTP sync the media / theme  http://sourceforge.net/projects/ftpsync/  or rsync if ssh is available
3. Upload the new DB file into mysql
4. Change the URLs in the config table

If you are going to do post by post, why not use the existing blog importing functions and XML-RPC.  Then have the remote site grab the media and organize it.  Then you can do it with FTP and mysql.  XML-RPC would let you merge two blogs which could be awesome.

neat idea, I just wonder how often people are going to need these functions.



On Mar 22, 2010, at 5:08 PM, Aram wrote:

> Is that secure to allow the plugin to download the wp-config.php from
> another server? it means it will have full access to ftp and mysql...
> 
> On Tue, Mar 23, 2010 at 12:56 AM, Meher Anand <meheranandk at gmail.com> wrote:
> 
>> Hi all.
>> 
>> I am currently studying my last semester of Computer Science & Engineering.
>> I have been using Wordpress heavily for the last 3 years and I am
>> interested
>> in contributing for it. The Blog Import/Export idea interested me since I
>> too had faced some issues when I was shifting a blog installation from one
>> hosting facility to another. Here's the working scenario which I propose:
>> 
>> - User needs to know only the FTP account details. Knowing the database
>> details is an added plus. The Blog Import Export (BIE) plugin will be
>> installed only on the new blog. If the user is unaware of the DB details,
>> BIE will initially download the wp-config file from the remote server and
>> extract the DB password from it and connect to the database. A check list
>> will be generated based on both Category and Month-Year and a user can
>> choose to transfer full or only part of the blog by Category or by
>> Month-Year.
>> 
>> - User will also be given the following options:
>> 1) Would you like to transfer Media files which are not being used in any
>> of
>> your articles?
>> 2) Would you like to transfer unpublished articles?
>> 
>> - Once all options are selected, transfers will be done on a post by post
>> basis i.e. the post and all media referenced by it. This is done so that if
>> this were a large blog and the transfer were somehow interrupted, atleast
>> some of the posts will be visible completely with the pictures, documents
>> and stuff inside the new blog. Also, while the transfer is going on, an
>> AJAX
>> based status update can be given so that the user is aware of the current
>> status. It can be of the format, 3 / 140 posts transferred.
>> 
>> - If the transfer were to be interrupted due to some reason, the BIE plugin
>> can store the user configuration (which posts need to be transferred, FTP
>> details, DB details etc.) in a separate table in the local database and
>> also
>> the current state of the transfer. This would help the plugin recover later
>> on when the transfer would be resumed.
>> 
>> Please review this and let me know if I've missed out on anything.
>> 
>> Also, here's my work related to Wordpress and general PHP coding so far:
>> 
>> 1) Faculty pages for my University. Work still in progress and to be
>> launched soon. Demo link: http://cse.vnit.ac.in/people/ashishtiwari/ .
>> These
>> blogs are actually meant to be used by faculty as their personal home
>> pages,
>> so rule 0 is to not make it look like a blog. I had made significant
>> changes
>> to the code base to remove the concept of comments and side bar etc. Login
>> is through LDAP. This plugin
>> http://wordpress.org/extend/plugins/simple-ldap-login/ helped quite a bit
>> but didn't satisfy requirements mainly because of multiple DNs being used
>> by
>> the LDAP server. I had to make significant modifications there so as to
>> allow use of different DNs based on regular expression matching on
>> user-input username.
>> 2) Installation and maintenance of http://acm.vnit.ac.in/ and
>> http://axis.vnit.ac.in/blog.
>> 3) Coding of Institute Alumni website to be launched by the end of this
>> week. Link - http://alumni.vnit.ac.in/ . Coding was done in CakePHP. This
>> website has features that are parallel to those offered by Facebook and
>> Twitter and heavily uses AJAX. JQuery was used for Javascript and AJAX.
>> 4) Currently developing the University website http://beta.vnit.ac.in/ on
>> CakePHP.
>> 
>> Regards.
>> 
>> Meher Anand
>> Visvesvaraya National Institute of Technology
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Mon Mar 22 21:25:49 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 22 Mar 2010 17:25:49 -0400
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <9A5B0C64-932F-4FE8-AFCD-A0B5D5B36AC4@graymerica.com>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
	<631193761003221408q6417843aie4037cf121285717@mail.gmail.com>
	<9A5B0C64-932F-4FE8-AFCD-A0B5D5B36AC4@graymerica.com>
Message-ID: <6540F13E-35A9-4450-B5CB-8265A30C1FD1@newclarity.net>

On Mar 22, 2010, at 5:20 PM, Andrew Gray wrote:
> 4. Change the URLs in the config table

As I'm working on a domain-switcher plugin for my own use (and possibly to release if there is significant interest in other's testing it) I'm curious for you to elaborate on this step?

-Mike

From meheranandk at gmail.com  Mon Mar 22 21:30:07 2010
From: meheranandk at gmail.com (Meher Anand)
Date: Tue, 23 Mar 2010 03:00:07 +0530
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <9A5B0C64-932F-4FE8-AFCD-A0B5D5B36AC4@graymerica.com>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com> 
	<631193761003221408q6417843aie4037cf121285717@mail.gmail.com> 
	<9A5B0C64-932F-4FE8-AFCD-A0B5D5B36AC4@graymerica.com>
Message-ID: <e279cc4f1003221430j73348d1bn6e04ac4595a0f9c9@mail.gmail.com>

You have demonstrated how lengthy the procedure for migration is yourself.
Plus we are talking about many basic level users here.

We can argue about how useful this plugin is going to be. Many people these
days are buying domain names and hosting spaces for their personal webpages.
They might find use for this plugin. Some are dissatisfied with their
hosting providers and they decide to move on to a new hosting provider. The
causes can be enormous in number.

XML-RPC requires special capabilities at the server end. We're talking being
able to work with a simple HTTP server and a simple MySQL database.

Regards.

Meher Anand

On Tue, Mar 23, 2010 at 2:50 AM, Andrew Gray <andrew at graymerica.com> wrote:

> What about remote mysql connections,  many hosts do no allow them or use a
> different IP address.
>
> My question about your methodology is,  how many times do you want to move
> part of a blog, not just the whole thing.
>
> Here is how I move wordpress sites
>
> 1.  Backup Mysql to Text File
> 2. FTP sync the media / theme  http://sourceforge.net/projects/ftpsync/ or rsync if ssh is available
> 3. Upload the new DB file into mysql
> 4. Change the URLs in the config table
>
> If you are going to do post by post, why not use the existing blog
> importing functions and XML-RPC.  Then have the remote site grab the media
> and organize it.  Then you can do it with FTP and mysql.  XML-RPC would let
> you merge two blogs which could be awesome.
>
> neat idea, I just wonder how often people are going to need these
> functions.
>
>
>
> On Mar 22, 2010, at 5:08 PM, Aram wrote:
>
> > Is that secure to allow the plugin to download the wp-config.php from
> > another server? it means it will have full access to ftp and mysql...
> >
> > On Tue, Mar 23, 2010 at 12:56 AM, Meher Anand <meheranandk at gmail.com>
> wrote:
> >
> >> Hi all.
> >>
> >> I am currently studying my last semester of Computer Science &
> Engineering.
> >> I have been using Wordpress heavily for the last 3 years and I am
> >> interested
> >> in contributing for it. The Blog Import/Export idea interested me since
> I
> >> too had faced some issues when I was shifting a blog installation from
> one
> >> hosting facility to another. Here's the working scenario which I
> propose:
> >>
> >> - User needs to know only the FTP account details. Knowing the database
> >> details is an added plus. The Blog Import Export (BIE) plugin will be
> >> installed only on the new blog. If the user is unaware of the DB
> details,
> >> BIE will initially download the wp-config file from the remote server
> and
> >> extract the DB password from it and connect to the database. A check
> list
> >> will be generated based on both Category and Month-Year and a user can
> >> choose to transfer full or only part of the blog by Category or by
> >> Month-Year.
> >>
> >> - User will also be given the following options:
> >> 1) Would you like to transfer Media files which are not being used in
> any
> >> of
> >> your articles?
> >> 2) Would you like to transfer unpublished articles?
> >>
> >> - Once all options are selected, transfers will be done on a post by
> post
> >> basis i.e. the post and all media referenced by it. This is done so that
> if
> >> this were a large blog and the transfer were somehow interrupted,
> atleast
> >> some of the posts will be visible completely with the pictures,
> documents
> >> and stuff inside the new blog. Also, while the transfer is going on, an
> >> AJAX
> >> based status update can be given so that the user is aware of the
> current
> >> status. It can be of the format, 3 / 140 posts transferred.
> >>
> >> - If the transfer were to be interrupted due to some reason, the BIE
> plugin
> >> can store the user configuration (which posts need to be transferred,
> FTP
> >> details, DB details etc.) in a separate table in the local database and
> >> also
> >> the current state of the transfer. This would help the plugin recover
> later
> >> on when the transfer would be resumed.
> >>
> >> Please review this and let me know if I've missed out on anything.
> >>
> >> Also, here's my work related to Wordpress and general PHP coding so far:
> >>
> >> 1) Faculty pages for my University. Work still in progress and to be
> >> launched soon. Demo link: http://cse.vnit.ac.in/people/ashishtiwari/ .
> >> These
> >> blogs are actually meant to be used by faculty as their personal home
> >> pages,
> >> so rule 0 is to not make it look like a blog. I had made significant
> >> changes
> >> to the code base to remove the concept of comments and side bar etc.
> Login
> >> is through LDAP. This plugin
> >> http://wordpress.org/extend/plugins/simple-ldap-login/ helped quite a
> bit
> >> but didn't satisfy requirements mainly because of multiple DNs being
> used
> >> by
> >> the LDAP server. I had to make significant modifications there so as to
> >> allow use of different DNs based on regular expression matching on
> >> user-input username.
> >> 2) Installation and maintenance of http://acm.vnit.ac.in/ and
> >> http://axis.vnit.ac.in/blog.
> >> 3) Coding of Institute Alumni website to be launched by the end of this
> >> week. Link - http://alumni.vnit.ac.in/ . Coding was done in CakePHP.
> This
> >> website has features that are parallel to those offered by Facebook and
> >> Twitter and heavily uses AJAX. JQuery was used for Javascript and AJAX.
> >> 4) Currently developing the University website http://beta.vnit.ac.in/on
> >> CakePHP.
> >>
> >> Regards.
> >>
> >> Meher Anand
> >> Visvesvaraya National Institute of Technology
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From juewang at post.harvard.edu  Mon Mar 22 21:30:53 2010
From: juewang at post.harvard.edu (Jue Wang)
Date: Mon, 22 Mar 2010 17:30:53 -0400
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <6540F13E-35A9-4450-B5CB-8265A30C1FD1@newclarity.net>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
	<631193761003221408q6417843aie4037cf121285717@mail.gmail.com>
	<9A5B0C64-932F-4FE8-AFCD-A0B5D5B36AC4@graymerica.com>
	<6540F13E-35A9-4450-B5CB-8265A30C1FD1@newclarity.net>
Message-ID: <4f8622411003221430o2e7b1fbbqae984571b0ea56b0@mail.gmail.com>

I think he means the 'blog_url' and 'blog_home' entries in the wp_options
table.

@Andrew, I think there is a role for some kind of "back-up / migrate site"
functionality that only requires going through the WP interface, which could
be partially what Meher is going for. The current export contains an XML of
entries and comments -- what if you could additionally include options,
assets, and media in the same export? Then pop that back into another blog,
click the 'import' button, and you're done. No mucking about in FTP/MySQL.
Incidentally, this is exactly what backup/restore is supposed to do in
Movable Type, but it's horribly buggy and mostly useless.


On Mon, Mar 22, 2010 at 5:25 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> On Mar 22, 2010, at 5:20 PM, Andrew Gray wrote:
> > 4. Change the URLs in the config table
>
> As I'm working on a domain-switcher plugin for my own use (and possibly to
> release if there is significant interest in other's testing it) I'm curious
> for you to elaborate on this step?
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From andrew at graymerica.com  Mon Mar 22 21:47:48 2010
From: andrew at graymerica.com (Andrew Gray)
Date: Mon, 22 Mar 2010 17:47:48 -0400
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <4f8622411003221430o2e7b1fbbqae984571b0ea56b0@mail.gmail.com>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
	<631193761003221408q6417843aie4037cf121285717@mail.gmail.com>
	<9A5B0C64-932F-4FE8-AFCD-A0B5D5B36AC4@graymerica.com>
	<6540F13E-35A9-4450-B5CB-8265A30C1FD1@newclarity.net>
	<4f8622411003221430o2e7b1fbbqae984571b0ea56b0@mail.gmail.com>
Message-ID: <9B99A4D9-EE0D-4DEB-ACBC-0547BB1DD608@graymerica.com>

This was my point exactly,   If you built a system to automatically move the blog via those steps, you would serve the same purpose, but it would be pretty simple.

I think a "move my blog" system would be great if it automated all the steps.  

One of the Amazon S3 backup plugins does this exact thing, but uses Amazon S3 Buckets as the middle step.

I just do know know how much utility there would be in a "move part of my blog" system that only moves some of it, such as a date range.

I could see a system where you install a plugin in on both sites, copy an access key from one to the other, click a button and it moves everything for you.  I just do not think that remotely accessing mysql would be the way to do it.   

This is probably better suited as a plugin, then in the core however.



Andrew


On Mar 22, 2010, at 5:30 PM, Jue Wang wrote:

> I think he means the 'blog_url' and 'blog_home' entries in the wp_options
> table.
> 
> @Andrew, I think there is a role for some kind of "back-up / migrate site"
> functionality that only requires going through the WP interface, which could
> be partially what Meher is going for. The current export contains an XML of
> entries and comments -- what if you could additionally include options,
> assets, and media in the same export? Then pop that back into another blog,
> click the 'import' button, and you're done. No mucking about in FTP/MySQL.
> Incidentally, this is exactly what backup/restore is supposed to do in
> Movable Type, but it's horribly buggy and mostly useless.
> 
> 
> On Mon, Mar 22, 2010 at 5:25 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
> 
>> On Mar 22, 2010, at 5:20 PM, Andrew Gray wrote:
>>> 4. Change the URLs in the config table
>> 
>> As I'm working on a domain-switcher plugin for my own use (and possibly to
>> release if there is significant interest in other's testing it) I'm curious
>> for you to elaborate on this step?
>> 
>> -Mike
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From meheranandk at gmail.com  Mon Mar 22 21:59:12 2010
From: meheranandk at gmail.com (Meher Anand)
Date: Tue, 23 Mar 2010 03:29:12 +0530
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <9B99A4D9-EE0D-4DEB-ACBC-0547BB1DD608@graymerica.com>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com> 
	<631193761003221408q6417843aie4037cf121285717@mail.gmail.com> 
	<9A5B0C64-932F-4FE8-AFCD-A0B5D5B36AC4@graymerica.com>
	<6540F13E-35A9-4450-B5CB-8265A30C1FD1@newclarity.net> 
	<4f8622411003221430o2e7b1fbbqae984571b0ea56b0@mail.gmail.com> 
	<9B99A4D9-EE0D-4DEB-ACBC-0547BB1DD608@graymerica.com>
Message-ID: <e279cc4f1003221459n22c09360reb0ee818c60240b@mail.gmail.com>

On Tue, Mar 23, 2010 at 3:17 AM, Andrew Gray <andrew at graymerica.com> wrote:

> This was my point exactly,   If you built a system to automatically move
> the blog via those steps, you would serve the same purpose, but it would be
> pretty simple.
>
> I think a "move my blog" system would be great if it automated all the
> steps.
>
> One of the Amazon S3 backup plugins does this exact thing, but uses Amazon
> S3 Buckets as the middle step.
>
> I just do know know how much utility there would be in a "move part of my
> blog" system that only moves some of it, such as a date range.
>
> I could see a system where you install a plugin in on both sites, copy an
> access key from one to the other, click a button and it moves everything for
> you.  I just do not think that remotely accessing mysql would be the way to
> do it.
>
> This is probably better suited as a plugin, then in the core however.
>
>
> The user is given an option to move either part of the blog or the entire
blog. That's why the check-list. And sorry I had skipped the SQL connections
question by mistake. If remote SQL connections are not allowed, then what
the user could possibly do is to install the same plugin on the old blog.
The plugin would have an option like "My db server is not remotely
accessible. I would like to take a backup of it" which the user can click
on. The plugin, after executing, would create a zip file with all media and
database in .sql format and this file would then be downloaded by the new
blog, unZIPped into a temp directory and the necessary updations will be
made.

Whether this would be core-functionality or plugin is not my call as this
would not affect my coding part significantly. Please let me know about any
other flaws in my idea.

Thanks and regards.

Meher Anand

>
> Andrew
>
>
> On Mar 22, 2010, at 5:30 PM, Jue Wang wrote:
>
> > I think he means the 'blog_url' and 'blog_home' entries in the wp_options
> > table.
> >
> > @Andrew, I think there is a role for some kind of "back-up / migrate
> site"
> > functionality that only requires going through the WP interface, which
> could
> > be partially what Meher is going for. The current export contains an XML
> of
> > entries and comments -- what if you could additionally include options,
> > assets, and media in the same export? Then pop that back into another
> blog,
> > click the 'import' button, and you're done. No mucking about in
> FTP/MySQL.
> > Incidentally, this is exactly what backup/restore is supposed to do in
> > Movable Type, but it's horribly buggy and mostly useless.
> >
> >
> > On Mon, Mar 22, 2010 at 5:25 PM, Mike Schinkel
> > <mikeschinkel at newclarity.net>wrote:
> >
> >> On Mar 22, 2010, at 5:20 PM, Andrew Gray wrote:
> >>> 4. Change the URLs in the config table
> >>
> >> As I'm working on a domain-switcher plugin for my own use (and possibly
> to
> >> release if there is significant interest in other's testing it) I'm
> curious
> >> for you to elaborate on this step?
> >>
> >> -Mike
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Mon Mar 22 22:06:08 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 22 Mar 2010 18:06:08 -0400
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <4f8622411003221430o2e7b1fbbqae984571b0ea56b0@mail.gmail.com>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
	<631193761003221408q6417843aie4037cf121285717@mail.gmail.com>
	<9A5B0C64-932F-4FE8-AFCD-A0B5D5B36AC4@graymerica.com>
	<6540F13E-35A9-4450-B5CB-8265A30C1FD1@newclarity.net>
	<4f8622411003221430o2e7b1fbbqae984571b0ea56b0@mail.gmail.com>
Message-ID: <4335F483-221D-4C7C-8448-86659A084109@newclarity.net>

On Mar 22, 2010, at 5:30 PM, Jue Wang wrote:
> On Mon, Mar 22, 2010 at 5:25 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
> 
>> On Mar 22, 2010, at 5:20 PM, Andrew Gray wrote:
>>> 4. Change the URLs in the config table
>> 
>> As I'm working on a domain-switcher plugin for my own use (and possibly to
>> release if there is significant interest in other's testing it) I'm curious
>> for you to elaborate on this step?
> 
> I think he means the 'blog_url' and 'blog_home' entries in the wp_options
> table.

Thanks. 

FYI switching domain goes beyond just 'blog_url' and 'blog_home' entries. For example, the TwentyTen theme in wp3.0 stores URLs for header and background.  Many other themes do the same.  Embedded images in posts contain URLs that need to be updated.  Custom menu items in wp3.0 have a menu_link and if they reference local files they need to be updated.

And many plugins have the same issues where they store local URLs. Then there are the domain-related problems, i.e. any plugin that leverages the Google Maps API needs to have the api key switched when the domain changes.

I've built functionality that I can use when I dump SQL from a local site and then import it to another site.  My plugin handles the cases I've identified in core and then exposes a "switch_domain" hook to allow any plugin to handle their special cases. Of course no plugins will support this but I can build the support for any plugins I might need it for. However I've not yet nailed the best way to "bootstrap" from one domain to another and could really use help with brainstorming the best way to do it robustly.  It would also be great if said functionality made it into core so that plugin authors would start thinking about addressing this concern.
 
If there is sufficient interest in this from others I can share the current code and/or add a ticket to trac.


On Mar 22, 2010, at 5:47 PM, Andrew Gray wrote:
> I could see a system where you install a plugin in on both sites, copy an access key from one to the other, click a button and it moves everything for you.  I just do not think that remotely accessing mysql would be the way to do it.   

Agreed.

> This is probably better suited as a plugin, then in the core however.

The problem is with plugins that persist the local domain in some manner, or with the Google Maps api key. There's a need for plugin authors to have a best practice of including a "switch domain" hook to fixup anything that breaks when the domain is switched (or for others to fix in their negligence) and if its not in the core there won't be enough critical mass for people to do it.

-Mike

From bernard.d.tremblay at gmail.com  Mon Mar 22 22:08:41 2010
From: bernard.d.tremblay at gmail.com (Bernard D. Tremblay (ben))
Date: Mon, 22 Mar 2010 16:08:41 -0600
Subject: [wp-hackers] RFE: "more" to open in new window
Message-ID: <4BA7EA69.8040806@gmail.com>

*Apologies if this has been covered; I haven't been able to spend time 
on this list*

Background: I just tranfered a ton of posts from LiveJournal 
http://gnodal.livejournal.com to a new 
http://gnodal.protension.com/journal and couldn't be happier with the 
results ... didn't make use of LJArchive XML or alternative PHP, nuthin' 
... straight outta the box ... formatting: wonderful, comments: 
basically correct ... happy as a pig in you.know.what.

In tweaking I noticed one thing, and this has been the default behaviour 
forever (so far as I know) but it caught my eye just now.

Clicking on post title or -More- on blog front page opens the post in 
that tab ... in effect blowing the frontpage away.

Is this optional?
What controls this behaviour?
I'm guessing it's core ... can it be adjusted using a plug-in?
(I'm sure most of you know that google search preferences include "open 
in new window".)

sorry for being so out of sync
ben

p.s. if you reply to list, please CC me at ab006 at chebucto.ns.ca ... I'm 
swimming hard ATM.

  


From mirepup at gmail.com  Mon Mar 22 22:29:42 2010
From: mirepup at gmail.com (Jeff Rose)
Date: Mon, 22 Mar 2010 15:29:42 -0700
Subject: [wp-hackers] Access files inside a plugin directory?
Message-ID: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>

Hi Everyone, sorry to interrupt, and I hope this is the correct place for
this question.

I have a plugin that has a data file that goes with it. Right now, that
datafile has to be located in the site root in order for the plugin to
access it.

Is it possible to have that data file reside in my plugin directory, so the
user doesn't have to upload it separately?

On my test blog, it's throwing a 404 error with the basic WP .htaccess file.
I have verified the correct path, and even attempting to access the file
directly throws a 404.

Thoughts?

From stas at nerd.ro  Mon Mar 22 23:03:56 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Tue, 23 Mar 2010 01:03:56 +0200
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
	<1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>
	<421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>
Message-ID: <1269299036.2137.34.camel@rivalry.c7.campus.utcluj.ro>


Some brainstorming...
I had a chat with jjj on BP-dev, and some new ideas came up.

A solution would be hacking around bp_activity plugin, and using all
of its db layout for storing updates/karma stuff.

Also, last summer I wrote a small facebook application, where I had to
use their libs written in php (awesome API I must say). What do you
think about following their model, where profiles.wordpress.org (on BP)
will be facebook, and we need to update our profiles using an api?

Writing the api can limit us to: enabling a plugin (call it
wp_profiles) and then adding some special template tags into the
template files to show up the karma points, rating and tags for the
user. Leaving the rest of the updates job to scripts that will use
this api (just like in facebook).

The whole beauty of this approach is that, BP will open a window for
developers who don't want to mess/don't know BP but want to connect
their profiles/BP_ids to some cool webservice...

Any opinions are welcomed. 




-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From will at itsananderson.com  Mon Mar 22 23:17:13 2010
From: will at itsananderson.com (Will Anderson)
Date: Mon, 22 Mar 2010 19:17:13 -0400
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <a93cee651003221151o12e8450dw9dfdefe244c9efc1@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
	<4BA7BB6F.5040803@gaarai.com>
	<a93cee651003221151o12e8450dw9dfdefe244c9efc1@mail.gmail.com>
Message-ID: <a7b7a8481003221617y132b4db6g63edfb46333fedb9@mail.gmail.com>

Decent IDE's have support for source navigation. I use NetBeans and it does
a wonderful job. Wonder what a function is doing? CTRL+Click to go to its
definition and find out. It also has an incredibly fast "Search in project"
feature that is great for finding where actions and filters are
defined/used.

In a pinch, you can also do much of that using a PHPXref of WordPress. Most
of the ones you can find on Google are a little out of date (WordPress 2.8.x
or so) but they work.

From wp at andrewnacin.com  Mon Mar 22 23:28:02 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 22 Mar 2010 19:28:02 -0400
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <a7b7a8481003221617y132b4db6g63edfb46333fedb9@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com> 
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com> 
	<4BA7BB6F.5040803@gaarai.com>
	<a93cee651003221151o12e8450dw9dfdefe244c9efc1@mail.gmail.com> 
	<a7b7a8481003221617y132b4db6g63edfb46333fedb9@mail.gmail.com>
Message-ID: <4cc4de141003221628q6bfa6d86r483204ed624eec3a@mail.gmail.com>

>
> In a pinch, you can also do much of that using a PHPXref of WordPress. Most
> of the ones you can find on Google are a little out of date (WordPress
> 2.8.x
> or so) but they work.


One of them that sometimes sneaks high in Google results is 2.1-alpha2.
Avoid that one. westi's is updated nightly:
http://phpxref.ftwr.co.uk/wordpress/.

From scribu at gmail.com  Mon Mar 22 23:29:18 2010
From: scribu at gmail.com (scribu)
Date: Tue, 23 Mar 2010 01:29:18 +0200
Subject: [wp-hackers] RFE: "more" to open in new window
In-Reply-To: <4BA7EA69.8040806@gmail.com>
References: <4BA7EA69.8040806@gmail.com>
Message-ID: <349fe48b1003221629k570fb132v6a3b8afaf1ec56c4@mail.gmail.com>

On Tue, Mar 23, 2010 at 12:08 AM, Bernard D. Tremblay (ben) <
bernard.d.tremblay at gmail.com> wrote:

> Clicking on post title or -More- on blog front page opens the post in that
> tab ... in effect blowing the frontpage away.
>
> Is this optional?
> What controls this behaviour?

I'm guessing it's core ... can it be adjusted using a plug-in?
>

http://codex.wordpress.org/Customizing_the_Read_More



> (I'm sure most of you know that google search preferences include "open in
> new window".)
>

I don't think I follow.


-- 
http://scribu.net

From scribu at gmail.com  Mon Mar 22 23:32:04 2010
From: scribu at gmail.com (scribu)
Date: Tue, 23 Mar 2010 01:32:04 +0200
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <4cc4de141003221628q6bfa6d86r483204ed624eec3a@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
	<4BA7BB6F.5040803@gaarai.com>
	<a93cee651003221151o12e8450dw9dfdefe244c9efc1@mail.gmail.com>
	<a7b7a8481003221617y132b4db6g63edfb46333fedb9@mail.gmail.com>
	<4cc4de141003221628q6bfa6d86r483204ed624eec3a@mail.gmail.com>
Message-ID: <349fe48b1003221632o690b985ehca284d28df013f73@mail.gmail.com>

I use this one:

<http://xref.yoast.com/wp.html>http://xref.yoast.com/wp.html


-- 
http://scribu.net

From scribu at gmail.com  Mon Mar 22 23:38:17 2010
From: scribu at gmail.com (scribu)
Date: Tue, 23 Mar 2010 01:38:17 +0200
Subject: [wp-hackers] Access files inside a plugin directory?
In-Reply-To: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>
References: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>
Message-ID: <349fe48b1003221638v4a9f0f2cn1c8cf74ec3d48a33@mail.gmail.com>

What exactly is this datafile?


On Tue, Mar 23, 2010 at 12:29 AM, Jeff Rose <mirepup at gmail.com> wrote:

> Is it possible to have that data file reside in my plugin directory, so the
> user doesn't have to upload it separately?
>

Sure:

URL: plugins_url('file_name', __FILE__);

PATH: dirname(__FILE__) . '/file_name';



> On my test blog, it's throwing a 404 error with the basic WP .htaccess
> file.
> I have verified the correct path, and even attempting to access the file
> directly throws a 404.
>

Check it's read permissions.


-- 
http://scribu.net

From richardjennings at gmail.com  Tue Mar 23 00:12:24 2010
From: richardjennings at gmail.com (Richard Jennings)
Date: Tue, 23 Mar 2010 00:12:24 +0000
Subject: [wp-hackers] wp-hackers Digest, Vol 62, Issue 73
In-Reply-To: <mailman.5877.1269300517.1345.wp-hackers@lists.automattic.com>
References: <mailman.5877.1269300517.1345.wp-hackers@lists.automattic.com>
Message-ID: <694edab41003221712k6dc40086n77202bdee564f769@mail.gmail.com>

"I just do know know how much utility there would be in a "move part
of my blog" system that only moves some of it, such as a date range."

There would be utility in specific use cases such as:

Wanting to make part of a blog public, i.e move database from intranet
to public server.

I think this use case will become more pronounced as companies start
using WP as a cms rather than just a blog.

Rich

On Mon, Mar 22, 2010 at 11:28 PM,
<wp-hackers-request at lists.automattic.com> wrote:
> Send wp-hackers mailing list submissions to
> ? ? ? ?wp-hackers at lists.automattic.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
> ? ? ? ?http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
> ? ? ? ?wp-hackers-request at lists.automattic.com
>
> You can reach the person managing the list at
> ? ? ? ?wp-hackers-owner at lists.automattic.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
>
>
> Today's Topics:
>
> ? 1. Re: Blog Import/Export Idea - Google Summer of Code ? ? ? 2010
> ? ? ?(Andrew Gray)
> ? 2. Re: Blog Import/Export Idea - Google Summer of Code ? ? ? 2010
> ? ? ?(Meher Anand)
> ? 3. Re: Blog Import/Export Idea - Google Summer of Code ? ? ? 2010
> ? ? ?(Mike Schinkel)
> ? 4. RFE: "more" to open in new window (Bernard D. Tremblay (ben))
> ? 5. Access files inside a plugin directory? (Jeff Rose)
> ? 6. Re: GSoC 2010, WordPress.org Profiles (Stas Su?cov)
> ? 7. Re: concatinating PHP code files (Will Anderson)
> ? 8. Re: concatinating PHP code files (Andrew Nacin)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Mon, 22 Mar 2010 17:47:48 -0400
> From: Andrew Gray <andrew at graymerica.com>
> Subject: Re: [wp-hackers] Blog Import/Export Idea - Google Summer of
> ? ? ? ?Code ? ?2010
> To: wp-hackers at lists.automattic.com
> Message-ID: <9B99A4D9-EE0D-4DEB-ACBC-0547BB1DD608 at graymerica.com>
> Content-Type: text/plain; charset=us-ascii
>
> This was my point exactly, ? If you built a system to automatically move the blog via those steps, you would serve the same purpose, but it would be pretty simple.
>
> I think a "move my blog" system would be great if it automated all the steps.
>
> One of the Amazon S3 backup plugins does this exact thing, but uses Amazon S3 Buckets as the middle step.
>
> I just do know know how much utility there would be in a "move part of my blog" system that only moves some of it, such as a date range.
>
> I could see a system where you install a plugin in on both sites, copy an access key from one to the other, click a button and it moves everything for you. ?I just do not think that remotely accessing mysql would be the way to do it.
>
> This is probably better suited as a plugin, then in the core however.
>
>
>
> Andrew
>
>
> On Mar 22, 2010, at 5:30 PM, Jue Wang wrote:
>
>> I think he means the 'blog_url' and 'blog_home' entries in the wp_options
>> table.
>>
>> @Andrew, I think there is a role for some kind of "back-up / migrate site"
>> functionality that only requires going through the WP interface, which could
>> be partially what Meher is going for. The current export contains an XML of
>> entries and comments -- what if you could additionally include options,
>> assets, and media in the same export? Then pop that back into another blog,
>> click the 'import' button, and you're done. No mucking about in FTP/MySQL.
>> Incidentally, this is exactly what backup/restore is supposed to do in
>> Movable Type, but it's horribly buggy and mostly useless.
>>
>>
>> On Mon, Mar 22, 2010 at 5:25 PM, Mike Schinkel
>> <mikeschinkel at newclarity.net>wrote:
>>
>>> On Mar 22, 2010, at 5:20 PM, Andrew Gray wrote:
>>>> 4. Change the URLs in the config table
>>>
>>> As I'm working on a domain-switcher plugin for my own use (and possibly to
>>> release if there is significant interest in other's testing it) I'm curious
>>> for you to elaborate on this step?
>>>
>>> -Mike
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> ------------------------------
>
> Message: 2
> Date: Tue, 23 Mar 2010 03:29:12 +0530
> From: Meher Anand <meheranandk at gmail.com>
> Subject: Re: [wp-hackers] Blog Import/Export Idea - Google Summer of
> ? ? ? ?Code ? ?2010
> To: wp-hackers at lists.automattic.com
> Message-ID:
> ? ? ? ?<e279cc4f1003221459n22c09360reb0ee818c60240b at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> On Tue, Mar 23, 2010 at 3:17 AM, Andrew Gray <andrew at graymerica.com> wrote:
>
>> This was my point exactly, ? If you built a system to automatically move
>> the blog via those steps, you would serve the same purpose, but it would be
>> pretty simple.
>>
>> I think a "move my blog" system would be great if it automated all the
>> steps.
>>
>> One of the Amazon S3 backup plugins does this exact thing, but uses Amazon
>> S3 Buckets as the middle step.
>>
>> I just do know know how much utility there would be in a "move part of my
>> blog" system that only moves some of it, such as a date range.
>>
>> I could see a system where you install a plugin in on both sites, copy an
>> access key from one to the other, click a button and it moves everything for
>> you. ?I just do not think that remotely accessing mysql would be the way to
>> do it.
>>
>> This is probably better suited as a plugin, then in the core however.
>>
>>
>> The user is given an option to move either part of the blog or the entire
> blog. That's why the check-list. And sorry I had skipped the SQL connections
> question by mistake. If remote SQL connections are not allowed, then what
> the user could possibly do is to install the same plugin on the old blog.
> The plugin would have an option like "My db server is not remotely
> accessible. I would like to take a backup of it" which the user can click
> on. The plugin, after executing, would create a zip file with all media and
> database in .sql format and this file would then be downloaded by the new
> blog, unZIPped into a temp directory and the necessary updations will be
> made.
>
> Whether this would be core-functionality or plugin is not my call as this
> would not affect my coding part significantly. Please let me know about any
> other flaws in my idea.
>
> Thanks and regards.
>
> Meher Anand
>
>>
>> Andrew
>>
>>
>> On Mar 22, 2010, at 5:30 PM, Jue Wang wrote:
>>
>> > I think he means the 'blog_url' and 'blog_home' entries in the wp_options
>> > table.
>> >
>> > @Andrew, I think there is a role for some kind of "back-up / migrate
>> site"
>> > functionality that only requires going through the WP interface, which
>> could
>> > be partially what Meher is going for. The current export contains an XML
>> of
>> > entries and comments -- what if you could additionally include options,
>> > assets, and media in the same export? Then pop that back into another
>> blog,
>> > click the 'import' button, and you're done. No mucking about in
>> FTP/MySQL.
>> > Incidentally, this is exactly what backup/restore is supposed to do in
>> > Movable Type, but it's horribly buggy and mostly useless.
>> >
>> >
>> > On Mon, Mar 22, 2010 at 5:25 PM, Mike Schinkel
>> > <mikeschinkel at newclarity.net>wrote:
>> >
>> >> On Mar 22, 2010, at 5:20 PM, Andrew Gray wrote:
>> >>> 4. Change the URLs in the config table
>> >>
>> >> As I'm working on a domain-switcher plugin for my own use (and possibly
>> to
>> >> release if there is significant interest in other's testing it) I'm
>> curious
>> >> for you to elaborate on this step?
>> >>
>> >> -Mike
>> >> _______________________________________________
>> >> wp-hackers mailing list
>> >> wp-hackers at lists.automattic.com
>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >>
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
> ------------------------------
>
> Message: 3
> Date: Mon, 22 Mar 2010 18:06:08 -0400
> From: Mike Schinkel <mikeschinkel at newclarity.net>
> Subject: Re: [wp-hackers] Blog Import/Export Idea - Google Summer of
> ? ? ? ?Code ? ?2010
> To: wp-hackers at lists.automattic.com
> Message-ID: <4335F483-221D-4C7C-8448-86659A084109 at newclarity.net>
> Content-Type: text/plain; ? ? ? charset=us-ascii
>
> On Mar 22, 2010, at 5:30 PM, Jue Wang wrote:
>> On Mon, Mar 22, 2010 at 5:25 PM, Mike Schinkel
>> <mikeschinkel at newclarity.net>wrote:
>>
>>> On Mar 22, 2010, at 5:20 PM, Andrew Gray wrote:
>>>> 4. Change the URLs in the config table
>>>
>>> As I'm working on a domain-switcher plugin for my own use (and possibly to
>>> release if there is significant interest in other's testing it) I'm curious
>>> for you to elaborate on this step?
>>
>> I think he means the 'blog_url' and 'blog_home' entries in the wp_options
>> table.
>
> Thanks.
>
> FYI switching domain goes beyond just 'blog_url' and 'blog_home' entries. For example, the TwentyTen theme in wp3.0 stores URLs for header and background. ?Many other themes do the same. ?Embedded images in posts contain URLs that need to be updated. ?Custom menu items in wp3.0 have a menu_link and if they reference local files they need to be updated.
>
> And many plugins have the same issues where they store local URLs. Then there are the domain-related problems, i.e. any plugin that leverages the Google Maps API needs to have the api key switched when the domain changes.
>
> I've built functionality that I can use when I dump SQL from a local site and then import it to another site. ?My plugin handles the cases I've identified in core and then exposes a "switch_domain" hook to allow any plugin to handle their special cases. Of course no plugins will support this but I can build the support for any plugins I might need it for. However I've not yet nailed the best way to "bootstrap" from one domain to another and could really use help with brainstorming the best way to do it robustly. ?It would also be great if said functionality made it into core so that plugin authors would start thinking about addressing this concern.
>
> If there is sufficient interest in this from others I can share the current code and/or add a ticket to trac.
>
>
> On Mar 22, 2010, at 5:47 PM, Andrew Gray wrote:
>> I could see a system where you install a plugin in on both sites, copy an access key from one to the other, click a button and it moves everything for you. ?I just do not think that remotely accessing mysql would be the way to do it.
>
> Agreed.
>
>> This is probably better suited as a plugin, then in the core however.
>
> The problem is with plugins that persist the local domain in some manner, or with the Google Maps api key. There's a need for plugin authors to have a best practice of including a "switch domain" hook to fixup anything that breaks when the domain is switched (or for others to fix in their negligence) and if its not in the core there won't be enough critical mass for people to do it.
>
> -Mike
>
> ------------------------------
>
> Message: 4
> Date: Mon, 22 Mar 2010 16:08:41 -0600
> From: "Bernard D. Tremblay (ben)" <bernard.d.tremblay at gmail.com>
> Subject: [wp-hackers] RFE: "more" to open in new window
> To: wp-hackers at lists.automattic.com
> Message-ID: <4BA7EA69.8040806 at gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> *Apologies if this has been covered; I haven't been able to spend time
> on this list*
>
> Background: I just tranfered a ton of posts from LiveJournal
> http://gnodal.livejournal.com to a new
> http://gnodal.protension.com/journal and couldn't be happier with the
> results ... didn't make use of LJArchive XML or alternative PHP, nuthin'
> ... straight outta the box ... formatting: wonderful, comments:
> basically correct ... happy as a pig in you.know.what.
>
> In tweaking I noticed one thing, and this has been the default behaviour
> forever (so far as I know) but it caught my eye just now.
>
> Clicking on post title or -More- on blog front page opens the post in
> that tab ... in effect blowing the frontpage away.
>
> Is this optional?
> What controls this behaviour?
> I'm guessing it's core ... can it be adjusted using a plug-in?
> (I'm sure most of you know that google search preferences include "open
> in new window".)
>
> sorry for being so out of sync
> ben
>
> p.s. if you reply to list, please CC me at ab006 at chebucto.ns.ca ... I'm
> swimming hard ATM.
>
>
>
>
>
> ------------------------------
>
> Message: 5
> Date: Mon, 22 Mar 2010 15:29:42 -0700
> From: Jeff Rose <mirepup at gmail.com>
> Subject: [wp-hackers] Access files inside a plugin directory?
> To: wp-hackers at lists.automattic.com
> Message-ID:
> ? ? ? ?<b825b2cd1003221529r17f95f48lee082a0eca0d099b at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi Everyone, sorry to interrupt, and I hope this is the correct place for
> this question.
>
> I have a plugin that has a data file that goes with it. Right now, that
> datafile has to be located in the site root in order for the plugin to
> access it.
>
> Is it possible to have that data file reside in my plugin directory, so the
> user doesn't have to upload it separately?
>
> On my test blog, it's throwing a 404 error with the basic WP .htaccess file.
> I have verified the correct path, and even attempting to access the file
> directly throws a 404.
>
> Thoughts?
>
>
> ------------------------------
>
> Message: 6
> Date: Tue, 23 Mar 2010 01:03:56 +0200
> From: Stas Su?cov <stas at nerd.ro>
> Subject: Re: [wp-hackers] GSoC 2010, WordPress.org Profiles
> To: wp-hackers at lists.automattic.com
> Message-ID: <1269299036.2137.34.camel at rivalry.c7.campus.utcluj.ro>
> Content-Type: text/plain; charset="UTF-8"
>
>
> Some brainstorming...
> I had a chat with jjj on BP-dev, and some new ideas came up.
>
> A solution would be hacking around bp_activity plugin, and using all
> of its db layout for storing updates/karma stuff.
>
> Also, last summer I wrote a small facebook application, where I had to
> use their libs written in php (awesome API I must say). What do you
> think about following their model, where profiles.wordpress.org (on BP)
> will be facebook, and we need to update our profiles using an api?
>
> Writing the api can limit us to: enabling a plugin (call it
> wp_profiles) and then adding some special template tags into the
> template files to show up the karma points, rating and tags for the
> user. Leaving the rest of the updates job to scripts that will use
> this api (just like in facebook).
>
> The whole beauty of this approach is that, BP will open a window for
> developers who don't want to mess/don't know BP but want to connect
> their profiles/BP_ids to some cool webservice...
>
> Any opinions are welcomed.
>
>
>
>
> --
> () ?Campania Panglicii ?n ASCII
> /\ ?http://stas.nerd.ro/ascii/
>
>
>
> ------------------------------
>
> Message: 7
> Date: Mon, 22 Mar 2010 19:17:13 -0400
> From: Will Anderson <will at itsananderson.com>
> Subject: Re: [wp-hackers] concatinating PHP code files
> To: wp-hackers at lists.automattic.com
> Message-ID:
> ? ? ? ?<a7b7a8481003221617y132b4db6g63edfb46333fedb9 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Decent IDE's have support for source navigation. I use NetBeans and it does
> a wonderful job. Wonder what a function is doing? CTRL+Click to go to its
> definition and find out. It also has an incredibly fast "Search in project"
> feature that is great for finding where actions and filters are
> defined/used.
>
> In a pinch, you can also do much of that using a PHPXref of WordPress. Most
> of the ones you can find on Google are a little out of date (WordPress 2.8.x
> or so) but they work.
>
>
> ------------------------------
>
> Message: 8
> Date: Mon, 22 Mar 2010 19:28:02 -0400
> From: Andrew Nacin <wp at andrewnacin.com>
> Subject: Re: [wp-hackers] concatinating PHP code files
> To: wp-hackers at lists.automattic.com
> Message-ID:
> ? ? ? ?<4cc4de141003221628q6bfa6d86r483204ed624eec3a at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
>>
>> In a pinch, you can also do much of that using a PHPXref of WordPress. Most
>> of the ones you can find on Google are a little out of date (WordPress
>> 2.8.x
>> or so) but they work.
>
>
> One of them that sometimes sneaks high in Google results is 2.1-alpha2.
> Avoid that one. westi's is updated nightly:
> http://phpxref.ftwr.co.uk/wordpress/.
>
>
> ------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> End of wp-hackers Digest, Vol 62, Issue 73
> ******************************************
>

From wp at andrewnacin.com  Tue Mar 23 00:13:55 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 22 Mar 2010 20:13:55 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
Message-ID: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>

Hackers -- I am constructing a proposal to overhaul the theme editor. I
would appreciate your thoughts on some of the ideas thus far:

* Better theme management
  - Theme revisioning, versioning, snapshots, rollbacks, etc.

* Child theme generation
  - Creating and switching to a child theme when editing a theme (allows
revisions to play nice with upgrades)

* Sandboxing functions.php
  - Unlike templates, a syntax error in functions.php can take down the
whole blog and force you to open an FTP client

* Syntax highlighting
  - Live highlighting in the theme editor, if a suitable replacement for
CodePress can be identified
  - Highlighted diffs of theme revisions

I know most of you are power users and developers, and may despise the theme
editor. For many WordPress users, the theme editor is an indispensable tool
(and it's not going anywhere). Theme developers may also appreciate a theme
editor that, while potentially encouraging revisions, also discourages
editing a theme directly (via child theme generation).

This will probably become a Google Summer of Code proposal.

Thanks for your help,
Nacin
--
(This proposal is also outlined more in depth in a blog post:
http://bit.ly/chQssV)

From mikeschinkel at newclarity.net  Tue Mar 23 00:35:10 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 22 Mar 2010 20:35:10 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>
Message-ID: <C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>

Nice idea.  

It will be nice to see themes saves with AJAX so that saving a theme doesn't have to reload everything and reposition the editor.

What's more if till be nice if you can sandbox an entire theme because a broken php tag in almost any page can bring down a although I know this would increase the scope of work.

-Mike

On Mar 22, 2010, at 8:13 PM, Andrew Nacin wrote:

> Hackers -- I am constructing a proposal to overhaul the theme editor. I
> would appreciate your thoughts on some of the ideas thus far:
> 
> * Better theme management
>  - Theme revisioning, versioning, snapshots, rollbacks, etc.
> 
> * Child theme generation
>  - Creating and switching to a child theme when editing a theme (allows
> revisions to play nice with upgrades)
> 
> * Sandboxing functions.php
>  - Unlike templates, a syntax error in functions.php can take down the
> whole blog and force you to open an FTP client
> 
> * Syntax highlighting
>  - Live highlighting in the theme editor, if a suitable replacement for
> CodePress can be identified
>  - Highlighted diffs of theme revisions
> 
> I know most of you are power users and developers, and may despise the theme
> editor. For many WordPress users, the theme editor is an indispensable tool
> (and it's not going anywhere). Theme developers may also appreciate a theme
> editor that, while potentially encouraging revisions, also discourages
> editing a theme directly (via child theme generation).
> 
> This will probably become a Google Summer of Code proposal.
> 
> Thanks for your help,
> Nacin
> --
> (This proposal is also outlined more in depth in a blog post:
> http://bit.ly/chQssV)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From viniciusandre at gmail.com  Tue Mar 23 00:39:59 2010
From: viniciusandre at gmail.com (Vinicius Massuchetto)
Date: Mon, 22 Mar 2010 21:39:59 -0300
Subject: [wp-hackers] XML controlled SWF files
Message-ID: <4ede8f491003221739r43d35d4auf795d052699fa65f@mail.gmail.com>

Hi all.

I know this thread is more appropriate to be posted in the forums, but
I saw the same issue there for about a month with no response [1].

I'm parsing a page for every local MP3 URL on it, and building a XML
file to be read by a SWF player. The player works nice out of
Wordpress on any host, but once we put it on the theme directory with
the XML, it doesn't work.

I imagine this XML entries always need to be in a relative path from
the SWF file, so maybe it has something to do with Wordpress blocking
relative paths inside themes. SWF won't understand dynamically
generated XML files, also.

Is it possible to embed a SWF file and have its actions controlled by
a external XML file? Has anyone faced a similar problem? I tried
several approaches with no success.

Thanks!
--
Vin?cius Massuchetto
http://vinicius.soylocoporti.org.br

[1] http://wordpress.org/support/topic/361573

From dougal at gunters.org  Tue Mar 23 01:57:23 2010
From: dougal at gunters.org (Dougal Campbell)
Date: Mon, 22 Mar 2010 21:57:23 -0400
Subject: [wp-hackers] RFE: "more" to open in new window
In-Reply-To: <4BA7EA69.8040806@gmail.com>
References: <4BA7EA69.8040806@gmail.com>
Message-ID: <4BA82003.6010409@gunters.org>

On Mar 22 2010 6:08 PM, Bernard D. Tremblay (ben) wrote:
> [...]
> Clicking on post title or -More- on blog front page opens the post in 
> that tab ... in effect blowing the frontpage away.

That's normal browsing behavior.

> Is this optional?
> What controls this behaviour?
> I'm guessing it's core ... can it be adjusted using a plug-in?
> (I'm sure most of you know that google search preferences include 
> "open in new window".)

Opening new windows is so... 1998. Are you sure you really want to do 
that? Maybe it's what you've gotten accustomed to, but some people 
(including myself) don't *want* a post link to open in a new window. 
It's jarring. If I want a new window or tab, I'll CMD-click, CTRL-click, 
SHIFT-click, middle-click, or whatever my preferred method happens to be.

IMHO. :)

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From wp-hackers at striderweb.com  Tue Mar 23 02:09:45 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon, 22 Mar 2010 21:09:45 -0500
Subject: [wp-hackers] RFE: "more" to open in new window
In-Reply-To: <4BA7EA69.8040806@gmail.com>
References: <4BA7EA69.8040806@gmail.com>
Message-ID: <C9C3ED50-BBFC-4891-B2F0-2C951B66F4C4@striderweb.com>


On Mar 22, 2010, at 5:08 PM, Bernard D. Tremblay (ben) wrote:

> Clicking on post title or -More- on blog front page opens the post in that tab ... in effect blowing the frontpage away.
> 
> Is this optional?
> What controls this behaviour?
> I'm guessing it's core ... can it be adjusted using a plug-in?
> (I'm sure most of you know that google search preferences include "open in new window".)

I would think this could be changed in the theme.  If not, you could use a simple plugin to insert a JavaScript that does it.

That being said, I would strongly recommend against it.  As others have said, opening links in new windows is not best practice -- it confuses non-geeks and irritates geeks.  Lose/Lose.

Stephen

From mikeschinkel at newclarity.net  Tue Mar 23 02:34:24 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 22 Mar 2010 22:34:24 -0400
Subject: [wp-hackers] Mailing List for Plugin Selection?
Message-ID: <E4D82281-7AF1-4628-85E0-489CA4EED0E4@newclarity.net>

Hey all,

I'm constantly coming across the need to ask questions about what plugin people recommend. For example, right now I need to select a slideshow/carousel plugin and be able to discuss about the pros and cons of each but I know that the wp-hackers is the wrong place for this.    

The support forums on wordpress.org don't work for me either, mostly because of lack of email notification.

What to you think about establishing a wp-plugins mailing list to support discussion around plugins?

-Mike

From juewang at post.harvard.edu  Tue Mar 23 02:45:03 2010
From: juewang at post.harvard.edu (Jue Wang)
Date: Mon, 22 Mar 2010 22:45:03 -0400
Subject: [wp-hackers] wordpress doesn't let you host example script files
	for download
Message-ID: <4f8622411003221945k4fb2ccecy40d1ea7d65ffdd8b@mail.gmail.com>

Hey all,

I am wondering how to upload and serve script files as downloads on a WP
blog--say, as example code linked to from a blog post. For example, say I
want to provide a file named script.py. The upload dialog blocks the py file
from being uploaded, but I bypassed this by adding a hook to functions.php
to set the mime/type of .py files to text/plain.

However, when trying to download the script, Wordpress seems to block the
url and returns a "sorry, no posts matching that criteria were found"
message.

The above procedure works fine for hosting zip and image files, presumably
because they're not a security hazard.

Should I avoid making script files downloadable ever? I'm not worried about
security since I'm the only user with upload permissions on my blog.

Thanks,
Jue

---
Jue Wang
Science Magazine
juewang at aaas.org

From tvmanukrishnan at gmail.com  Tue Mar 23 03:09:54 2010
From: tvmanukrishnan at gmail.com (Manu Krishnan T.V)
Date: Tue, 23 Mar 2010 08:39:54 +0530
Subject: [wp-hackers] Blog Import/Export Idea - Google Summer of Code
	2010
In-Reply-To: <4335F483-221D-4C7C-8448-86659A084109@newclarity.net>
References: <e279cc4f1003221356gf655d35sf9a39087a43cdb8f@mail.gmail.com>
	<631193761003221408q6417843aie4037cf121285717@mail.gmail.com>
	<9A5B0C64-932F-4FE8-AFCD-A0B5D5B36AC4@graymerica.com>
	<6540F13E-35A9-4450-B5CB-8265A30C1FD1@newclarity.net>
	<4f8622411003221430o2e7b1fbbqae984571b0ea56b0@mail.gmail.com>
	<4335F483-221D-4C7C-8448-86659A084109@newclarity.net>
Message-ID: <ca149b921003222009i72c917bak71aabbb8b92bb346@mail.gmail.com>

I have been explaining my idea on the same topic in a different
thread, but not much comments or feedbacks so far. Have a look at it,
so that you can include the better ideas there, if you find it so.

On 3/23/10, Mike Schinkel <mikeschinkel at newclarity.net> wrote:
> On Mar 22, 2010, at 5:30 PM, Jue Wang wrote:
>> On Mon, Mar 22, 2010 at 5:25 PM, Mike Schinkel
>> <mikeschinkel at newclarity.net>wrote:
>>
>>> On Mar 22, 2010, at 5:20 PM, Andrew Gray wrote:
>>>> 4. Change the URLs in the config table
>>>
>>> As I'm working on a domain-switcher plugin for my own use (and possibly
>>> to
>>> release if there is significant interest in other's testing it) I'm
>>> curious
>>> for you to elaborate on this step?
>>
>> I think he means the 'blog_url' and 'blog_home' entries in the wp_options
>> table.
>
> Thanks.
>
> FYI switching domain goes beyond just 'blog_url' and 'blog_home' entries.
> For example, the TwentyTen theme in wp3.0 stores URLs for header and
> background.  Many other themes do the same.  Embedded images in posts
> contain URLs that need to be updated.  Custom menu items in wp3.0 have a
> menu_link and if they reference local files they need to be updated.
>
> And many plugins have the same issues where they store local URLs. Then
> there are the domain-related problems, i.e. any plugin that leverages the
> Google Maps API needs to have the api key switched when the domain changes.
>
> I've built functionality that I can use when I dump SQL from a local site
> and then import it to another site.  My plugin handles the cases I've
> identified in core and then exposes a "switch_domain" hook to allow any
> plugin to handle their special cases. Of course no plugins will support this
> but I can build the support for any plugins I might need it for. However
> I've not yet nailed the best way to "bootstrap" from one domain to another
> and could really use help with brainstorming the best way to do it robustly.
>  It would also be great if said functionality made it into core so that
> plugin authors would start thinking about addressing this concern.
>
> If there is sufficient interest in this from others I can share the current
> code and/or add a ticket to trac.
>
>
> On Mar 22, 2010, at 5:47 PM, Andrew Gray wrote:
>> I could see a system where you install a plugin in on both sites, copy an
>> access key from one to the other, click a button and it moves everything
>> for you.  I just do not think that remotely accessing mysql would be the
>> way to do it.
>
> Agreed.
>
>> This is probably better suited as a plugin, then in the core however.
>
> The problem is with plugins that persist the local domain in some manner, or
> with the Google Maps api key. There's a need for plugin authors to have a
> best practice of including a "switch domain" hook to fixup anything that
> breaks when the domain is switched (or for others to fix in their
> negligence) and if its not in the core there won't be enough critical mass
> for people to do it.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

-- 
Sent from my mobile device

With love and regards,
Tvm a.k.a Bizzard

Find me @ Bizzard's Hackshop - http://www.bizzard.info/

Quote: I'm not a HANDSOME guy. But I can give my HAND to SOME one who
needs help. Beauty is in heart, not in face..!! - A.P.J Abdul Kalam

From jeremy at visser.name  Tue Mar 23 04:44:48 2010
From: jeremy at visser.name (Jeremy Visser)
Date: Tue, 23 Mar 2010 15:44:48 +1100
Subject: [wp-hackers] XML controlled SWF files
In-Reply-To: <4ede8f491003221739r43d35d4auf795d052699fa65f@mail.gmail.com>
References: <4ede8f491003221739r43d35d4auf795d052699fa65f@mail.gmail.com>
Message-ID: <4BA84740.5000008@visser.name>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 23/03/10 11:39, Vinicius Massuchetto wrote:
> I'm parsing a page for every local MP3 URL on it, and building a XML
> file to be read by a SWF player. The player works nice out of
> Wordpress on any host, but once we put it on the theme directory with
> the XML, it doesn't work.

Read your web server log files. I also highly recommend Wireshark [0]
for diagnosing issues such as this. It's important that you figure out
the differences between the static and dynamic XML files by comparing
them directly.

Can you load the dynamic XML file in a web browser? What HTTP headers
are different? Are they both being served as text/xml, or is one
text/plain or even *shudder* text/html?

> I imagine this XML entries always need to be in a relative path from
> the SWF file, so maybe it has something to do with Wordpress blocking
> relative paths inside themes.

First I've heard of that. Flash won't fetch stuff from an alternative
domain unless it is whitelisted in that domain's crossdomain.xml file,
but there are no subdirectory restrictions that I'm aware of.

[0] http://www.wireshark.org/

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)

iEYEARECAAYFAkuoRz0ACgkQvs6Qqs8TxBrbGACeNzJoCNOFzQ3t7ViDfdr+ARXk
eSAAnjD70EmY7njFSoumJgjfDfjTdgTD
=v43n
-----END PGP SIGNATURE-----

From wp at andrewnacin.com  Tue Mar 23 05:23:01 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 23 Mar 2010 01:23:01 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com> 
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
Message-ID: <4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com>

Quoting Mike Schinkel:

> What's more if till be nice if you can sandbox an entire theme because a
> broken php tag in almost any page can bring down a although I know this
> would increase the scope of work.


Thanks for the feedback. It's not scope of work as much as it is impossible.
That's perhaps a strong word, but testing out a template file by simply
including it in a sandbox would result in fatal errors due to undefined
functions. (Checking for only parse errors can only be achieved via CLI.)
And, on the basis of the file name alone, due to the template system and
various hooks, you cannot determine which page on the frontend will use it
(which you would have to be able to do to ensure no errors are simply
because the files weren't included the way the theme intended them to
be). On the other hand, sandboxing functions.php (and any files it may
include) is easy.

As I alluded, functions.php is the important part. It is loaded always,
including in wp-admin, and before any output, therefore any fatal errors
will kill execution and force you to scramble for an FTP editor. On the
other hand, if you have a parse or fatal error in single.php, it'll still
print out the header before showing you a helpful error, and you'll still
have access to the admin area (and the theme editor).

From mikeschinkel at newclarity.net  Tue Mar 23 05:50:42 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 23 Mar 2010 01:50:42 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com>
Message-ID: <911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>

On Mar 23, 2010, at 1:23 AM, Andrew Nacin wrote:
> Quoting Mike Schinkel:
>> What's more if till be nice if you can sandbox an entire theme because a
>> broken php tag in almost any page can bring down a although I know this
>> would increase the scope of work.
> Thanks for the feedback. It's not scope of work as much as it is impossible.
> That's perhaps a strong word, but testing out a template file by simply
> including it in a sandbox would result in fatal errors due to undefined
> functions. (Checking for only parse errors can only be achieved via CLI.)
> And, on the basis of the file name alone, due to the template system and
> various hooks, you cannot determine which page on the frontend will use it
> (which you would have to be able to do to ensure no errors are simply
> because the files weren't included the way the theme intended them to
> be).

Impossible?  Difficult maybe, but impossible?  What if we eliminate some assumptions?

What if WP is modified to allow a theme to be loaded temporarily via URL parameter without changing the current theme? For example, the following could load the site using a twentyten theme.

http://example.com/?_theme=twentyten

Then, have the new editor create a child theme of the current theme as a sandbox behind the scenes. This child theme would only have the file(s) the user is currently updating. When the user saves a file the new editor would use an HTTP get (via AJAX, via the server or via probably both) to load the site using the sandboxed child theme and check for the closing '</html>'.  If it gets it the editor accepts the change and copies the changed files to the current theme otherwise it keeps the files in the sandbox and notifies the user of the error. 

Why won't this work?  I could easily miss something, but it seems sounds to me.

-Mike

From wp at andrewnacin.com  Tue Mar 23 06:12:15 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 23 Mar 2010 02:12:15 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com> 
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com> 
	<911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
Message-ID: <4cc4de141003222312m37fc86b9q6ccbfcc9a5820adc@mail.gmail.com>

>
> Impossible?  Difficult maybe, but impossible?  What if we eliminate some
> assumptions?


Say you're editing "archive.php". The issue is, you don't know on which
pages "archive.php" is actually used, due to template hierarchy and numerous
filters in the template API and template loader. So you can't request the
home page (which most likely does not include "archive.php") or any other
page and say with certainty that "archive.php" works. And specifically
loading "archive.php" may generate errors simply because the file wasn't
included in the way that the theme intended it to be.

Again, the purpose of sandboxing is to prevent showstoppers. A template file
will not take down every aspect of your blog the way functions.php will.

I appreciate the feedback on this. That said, the proposal revolves around
some bigger ideas -- revisioning and child themes in particular -- and I
would not want those to be overshadowed by discussions on technical
implementation.

From mikeschinkel at newclarity.net  Tue Mar 23 06:44:12 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 23 Mar 2010 02:44:12 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <4cc4de141003222312m37fc86b9q6ccbfcc9a5820adc@mail.gmail.com>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com>
	<911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
	<4cc4de141003222312m37fc86b9q6ccbfcc9a5820adc@mail.gmail.com>
Message-ID: <A285E36D-5D7C-447A-85FB-0798C88D1712@newclarity.net>

On Mar 23, 2010, at 2:12 AM, Andrew Nacin wrote:
>> Impossible?  Difficult maybe, but impossible?  What if we eliminate some
>> assumptions?
> Say you're editing "archive.php". The issue is, you don't know on which
> pages "archive.php" is actually used, due to template hierarchy and numerous
> filters in the template API and template loader. So you can't request the
> home page (which most likely does not include "archive.php") or any other
> page and say with certainty that "archive.php" works. And specifically
> loading "archive.php" may generate errors simply because the file wasn't
> included in the way that the theme intended it to be.

Fair point.  I do think it's possible to map such things manually or even automatically, but I see that's it's not elegant to do that, at least not from where we are now.

> Again, the purpose of sandboxing is to prevent showstoppers. A template file
> will not take down every aspect of your blog the way functions.php will.

Similarly, I was more worried about the global files like header.php and footer.php, ones that kill the entire site albeit don't kill the admin.

> 
> I appreciate the feedback on this. That said, the proposal revolves around
> some bigger ideas -- revisioning and child themes in particular -- and I
> would not want those to be overshadowed by discussions on technical
> implementation.

Hope you can tackle it, even if it's only a smaller scope.  Small steps are good.

-Mike


From wordpress at dd32.id.au  Tue Mar 23 05:58:56 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 23 Mar 2010 17:58:56 +1200
Subject: [wp-hackers] GSoC Proposal: Installation System Enhancements
In-Reply-To: <161617691003220907y5c7270edoc627d894423a4ac5@mail.gmail.com>
References: <a93cee651003201406q63e23ee8oa623ed21480d4556@mail.gmail.com>
	<161617691003220907y5c7270edoc627d894423a4ac5@mail.gmail.com>
Message-ID: <op.u90doihaspxmuu@ho.st>

Yeah, SVN works much better.
I'm -really- going to have it working 90% better before 3.0 release i hope.

On Tue, 23 Mar 2010 04:07:20 +1200, Otto <otto at ottodestruct.com> wrote:

> Dion was working on the same sort of thing a while back:
> http://wpquickinstall.com/
>
> He had a working version. I used it more than once. It still needed
> some major tweaking, but it did do the trick. The SVN version works
> somewhat better, as I recall.
>
> -Otto
-- 
Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

From raphael.droz at gmail.com  Tue Mar 23 08:10:16 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Tue, 23 Mar 2010 09:10:16 +0100
Subject: [wp-hackers] populate_option : wpmu-upgrade vs freshly created
 blog
In-Reply-To: <C7CD2F39.2142%jpotkanski@tribune.com>
References: <C7CD2F39.2142%jpotkanski@tribune.com>
Message-ID: <4BA87768.2070103@gmail.com>

Potkanski, Jason wrote:
> The Populate_options hook is called before the actual blog defaults are stored. Any defaults set here will just get overridden with schema defaults.
>   
In schema.php I saw this :
 if ( in_array($option, $existing_options) )
                        continue;
So if the option is set before it won't be overriden
(except for the blog_public option which is handled differently)
> If you are looking for how to set default blog options programmatically, hook wpmu_new_blog.
>
> Here is a code sample on how to hook into wpmu_new_blog:
>
> add_action( 'wpmu_new_blog', 'set_default_options', 10 , 2 );
>
> function set_default_options($blog_id, $user_id) {
>     set_default_general_settings($blog_id);
> }
>
> function set_default_general_settings($blog_id) {
>     update_blog_option($blog_id, 'timezone_string', 'America/New_York');
> }
>
> I set defaults for serialized plugin data like recaptcha as well. It's a pretty simple technique.
>   
update_blog_option avoid the need to switch_blog again that's right
> There is a "Blog Defaults" MU plugin out there as well.
>   
and for the theme, this plugin switch_blog() again but that no more appears
to me an inelegant step thus I will use it : with this hook I'm sure 
nothing will
mess up at upgrade time.

Thank you for the clarifications Jason,
my next step is to look around widgets but that's another story.

Raph
> --
>
> Jason Potkanski
> Tribune Technology
>
>
>
> On 3/22/10 10:53 AM, "Rapha?l Droz" <raphael.droz at gmail.com> wrote:
>
> All is in the title,
> while I would like to change the default options of a blog  I observed
> that the populate_option hook is also used at upgrade.
>
> Should I use some kind of workaround like comparing the creation date ?
> Or should I forget about the wpdb->query and use update_option's in the
> wpmu_new_blog hook which, apparently until now, is only used at the blog
> creation time.
> In this latter case, I would be out-context and, to, eg, switch the theme or
> add a post, I would have to switch_blog() again.


From raphael.droz at gmail.com  Tue Mar 23 10:49:52 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Tue, 23 Mar 2010 11:49:52 +0100
Subject: [wp-hackers] switch_theme cache inconsistency while
	WP_INSTALLING
In-Reply-To: <C7CD2F39.2142%jpotkanski@tribune.com>
References: <C7CD2F39.2142%jpotkanski@tribune.com>
Message-ID: <4BA89CD0.5080002@gmail.com>

Potkanski, Jason wrote:
> There is a "Blog Defaults" MU plugin out there as well.
The plugins is stuck with this bug that I also encoutered
in my own hooks :
http://wordpress.org/support/topic/373030

The problem I spent hours on is in "switch_theme" but maybe affect other 
settings as well.

Assume you create a new blog :

If you hook into populate_option | wpmu_new_blog
then WP_INSTALLING is defined.
Well, so if you happen to use update_option in your hook ...
(wpmu_new_blog would imply that template already ='default')
... what happens ? :

/* in update_option : */
if ( ! defined( 'WP_INSTALLING' ) )
    /* update cache */
But here WP_INSTALLING is true so our old cached value isn't updated.

Let's have a look at get_option() now :
We can expect that if defined(WP_INSTALLING) we won't use the cache isn't ?
That's not the case, in get_option(), a  $value = wp_cache_get( 
$setting, 'options' ) is done
if defined(WP_INSTALLING) and we retrieve the wrong value.

You can test by doing the following :
In switch_theme(), replace an update_option() by:
if(update_option('template', $template) === true )
    logit(" template update : ok\n")
/* logit can be a fopen(ABSPATH . '/log.log', 'a'); */
then
logit( " template now = " . get_option('template') . "\n");


So, in the successive call to get_current_theme(), get_option() returns 
'default',
so current_theme is set to 'WordPress Default', so the 
user/hook-requested theme is used,
but not shown as used in the theme menu.

From lomegor at gmail.com  Tue Mar 23 12:34:22 2010
From: lomegor at gmail.com (=?ISO-8859-1?Q?Sebasti=E1n_Ventura?=)
Date: Tue, 23 Mar 2010 09:34:22 -0300
Subject: [wp-hackers] [GSOC] Media or Forum
Message-ID: <88a23f801003230534i65724dane565547a94d5acda@mail.gmail.com>

Hello,
I would like to participatein the GSOC helping Wordpress as I find it a
fascinating tool.
I'm still not sure if I should choose improving the media files part of
wordpress or to get involved in bbPress, so if itisn't too much toask, I'm
asking this list to give me advice in what can be more satisfying to the
community and what degrre of difficulty and usefulnes people see in this two
projects.
I have no experience working in an FOSS project, so, although I know a lot
of php and in someway how WP functions, I'm not really sure where to start.

Thank you in advanced!
Sebasti?n Ventura

-- 
Nai Eru varyuva le

From viniciusandre at gmail.com  Tue Mar 23 12:50:47 2010
From: viniciusandre at gmail.com (Vinicius Massuchetto)
Date: Tue, 23 Mar 2010 09:50:47 -0300
Subject: [wp-hackers] XML controlled SWF files
In-Reply-To: <4BA84740.5000008@visser.name>
References: <4ede8f491003221739r43d35d4auf795d052699fa65f@mail.gmail.com>
	<4BA84740.5000008@visser.name>
Message-ID: <4ede8f491003230550n77b27c19lde62b4ea7a09e595@mail.gmail.com>

On Tue, Mar 23, 2010 at 1:44 AM, Jeremy Visser <jeremy at visser.name> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> On 23/03/10 11:39, Vinicius Massuchetto wrote:
>> I'm parsing a page for every local MP3 URL on it, and building a XML
>> file to be read by a SWF player. The player works nice out of
>> Wordpress on any host, but once we put it on the theme directory with
>> the XML, it doesn't work.
>
> Read your web server log files. I also highly recommend Wireshark [0]
> for diagnosing issues such as this. It's important that you figure out
> the differences between the static and dynamic XML files by comparing
> them directly.
>
> Can you load the dynamic XML file in a web browser? What HTTP headers
> are different? Are they both being served as text/xml, or is one
> text/plain or even *shudder* text/html?
>
>> I imagine this XML entries always need to be in a relative path from
>> the SWF file, so maybe it has something to do with Wordpress blocking
>> relative paths inside themes.
>
> First I've heard of that. Flash won't fetch stuff from an alternative
> domain unless it is whitelisted in that domain's crossdomain.xml file,
> but there are no subdirectory restrictions that I'm aware of.
>
> [0] http://www.wireshark.org/

Thanks for your attention.

The solution I found:

1) The path SWF looks for the XML is the page URL, not the folder the
SWF file is. So it is needed to give the full XML path to the load
function into its action:
xmlobject.load("http://path/to/the/xml/file.xml")

2) The same with paths inside the XML. It is needed to always fill
references with the full path;

3) It is recommended to use Kimili Flash Embed Plugin [1], once it
will use all the JavaScript needed to load flash files. The syntax is
very easy:
e.g.: [kml_flashembed movie="<?php bloginfo('template_directory');
?>/swf/file.swf" wmode="transparent" width="300" height="300"]

Well.. that's it. I also posted this on the forum topic I just pasted above.
--
Vinicius Massuchetto
http://vinicius.soylocoporti.org.br

[1] http://kimili.com/plugins/kml_flashembed

From jer at simianuprising.com  Tue Mar 23 14:18:07 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Tue, 23 Mar 2010 10:18:07 -0400
Subject: [wp-hackers] Access files inside a plugin directory?
In-Reply-To: <349fe48b1003221638v4a9f0f2cn1c8cf74ec3d48a33@mail.gmail.com>
References: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>
	<349fe48b1003221638v4a9f0f2cn1c8cf74ec3d48a33@mail.gmail.com>
Message-ID: <e1202cb11003230718h43a96236pe4388939c7dce027@mail.gmail.com>

On Mon, Mar 22, 2010 at 7:38 PM, scribu <scribu at gmail.com> wrote:
> URL: plugins_url('file_name', __FILE__);
>
> PATH: dirname(__FILE__) . '/file_name';

Is using __FILE__ an accepted practice in WP-land? I have many
installs where I use symlinks ( ln -s ) to share plugin/theme
directories between multiple installations, and any use of __file__
completely screws up file includes in that setup. Most plugins manage
to avoid it but the ones that use it need to be modified by hand.

Isn't it presumptive or something? Seems dangerous to have as a best practice.


-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From dougal at gunters.org  Tue Mar 23 15:47:10 2010
From: dougal at gunters.org (Dougal Campbell)
Date: Tue, 23 Mar 2010 11:47:10 -0400
Subject: [wp-hackers] Access files inside a plugin directory?
In-Reply-To: <e1202cb11003230718h43a96236pe4388939c7dce027@mail.gmail.com>
References: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>	<349fe48b1003221638v4a9f0f2cn1c8cf74ec3d48a33@mail.gmail.com>
	<e1202cb11003230718h43a96236pe4388939c7dce027@mail.gmail.com>
Message-ID: <4BA8E27E.8090109@gunters.org>

On Mar 23 2010 10:18 AM, Jeremy Clarke wrote:
> On Mon, Mar 22, 2010 at 7:38 PM, scribu<scribu at gmail.com>  wrote:
>    
>> URL: plugins_url('file_name', __FILE__);
>>
>> PATH: dirname(__FILE__) . '/file_name';
>>      
> Is using __FILE__ an accepted practice in WP-land? I have many
> installs where I use symlinks ( ln -s ) to share plugin/theme
> directories between multiple installations, and any use of __file__
> completely screws up file includes in that setup. Most plugins manage
> to avoid it but the ones that use it need to be modified by hand.
>
> Isn't it presumptive or something? Seems dangerous to have as a best practice.
>    

Well, it presumes that you won't be doing something way-out-of-the-norm, 
like symlinking stuff between multiple installs ;)

That said, yeah, using __FILE__ is definitely a pretty common practice. 
I suppose we really should all be using something more like:

   // Get just the parent directory name of the current file. Path is 
stripped away.
   $my_plugin_dir_slug = '/' . basename( dirname( __FILE__ ) );
   $my_plugin_dir = WP_PLUGIN_DIR . $my_plugin_dir_slug;
   $my_plugin_url = WP_PLUGIN_URL . $my_plugin_dir_slug;

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From johnbillion+wp at gmail.com  Tue Mar 23 16:15:28 2010
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Tue, 23 Mar 2010 16:15:28 +0000
Subject: [wp-hackers] Access files inside a plugin directory?
In-Reply-To: <4BA8E27E.8090109@gunters.org>
References: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>
	<349fe48b1003221638v4a9f0f2cn1c8cf74ec3d48a33@mail.gmail.com>
	<e1202cb11003230718h43a96236pe4388939c7dce027@mail.gmail.com>
	<4BA8E27E.8090109@gunters.org>
Message-ID: <1fa535a71003230915p50c16158sbdc97f078415554c@mail.gmail.com>

Just thinking out loud here. If you use hardlinks instead of symlinks,
__FILE__ should still work, no?

On Tue, Mar 23, 2010 at 3:47 PM, Dougal Campbell <dougal at gunters.org> wrote:
> On Mar 23 2010 10:18 AM, Jeremy Clarke wrote:
>>
>> On Mon, Mar 22, 2010 at 7:38 PM, scribu<scribu at gmail.com> ?wrote:
>>
>>>
>>> URL: plugins_url('file_name', __FILE__);
>>>
>>> PATH: dirname(__FILE__) . '/file_name';
>>>
>>
>> Is using __FILE__ an accepted practice in WP-land? I have many
>> installs where I use symlinks ( ln -s ) to share plugin/theme
>> directories between multiple installations, and any use of __file__
>> completely screws up file includes in that setup. Most plugins manage
>> to avoid it but the ones that use it need to be modified by hand.
>>
>> Isn't it presumptive or something? Seems dangerous to have as a best
>> practice.
>>
>
> Well, it presumes that you won't be doing something way-out-of-the-norm,
> like symlinking stuff between multiple installs ;)
>
> That said, yeah, using __FILE__ is definitely a pretty common practice. I
> suppose we really should all be using something more like:
>
> ?// Get just the parent directory name of the current file. Path is stripped
> away.
> ?$my_plugin_dir_slug = '/' . basename( dirname( __FILE__ ) );
> ?$my_plugin_dir = WP_PLUGIN_DIR . $my_plugin_dir_slug;
> ?$my_plugin_url = WP_PLUGIN_URL . $my_plugin_dir_slug;
>
> --
> Dougal Campbell <dougal at gunters.org>
> http://dougal.gunters.org/
> http://twitter.com/dougal
> http://twitual.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From raphael.droz at gmail.com  Tue Mar 23 16:20:49 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Tue, 23 Mar 2010 17:20:49 +0100
Subject: [wp-hackers] WPMU install_blog() "Already Installed" and ID
	increment checking
Message-ID: <4BA8EA61.9020403@gmail.com>

Hi,
I've experienced a very strange and apparently unpredictable error :
In wp-includes/wpmu-functions.php : install_blog() :
"Blog already installed".

I found the reason of that message, I think blog creation routine may be 
more
robust then.

I had old blog tables from previous experiences (and a rsync without 
--delete kept
them) but I had restored a fresh mysql DB.
When the blog is created its content is checked :
    if ( $wpdb->get_results("SELECT ID FROM $wpdb->posts") )
But if you have old tables laying around, its *their* content which will be
taken into account.
So my point is that before checking the content of a freshly created blog,
its ID should be checked first, probably in insert_blog around 
$wpdb->insert_id
If the table already exists, find another ID, or fail.

Raph

From peter at avirtualhome.com  Tue Mar 23 16:49:35 2010
From: peter at avirtualhome.com (Peter van der Does)
Date: Tue, 23 Mar 2010 12:49:35 -0400
Subject: [wp-hackers] Access files inside a plugin directory?
In-Reply-To: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>
References: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>
Message-ID: <20100323124935.17dfe438@montecarlo.grandprix.int>

On Mon, 22 Mar 2010 15:29:42 -0700
Jeff Rose <mirepup at gmail.com> wrote:

> Hi Everyone, sorry to interrupt, and I hope this is the correct place
> for this question.
> 
> I have a plugin that has a data file that goes with it. Right now,
> that datafile has to be located in the site root in order for the
> plugin to access it.
> 
> Is it possible to have that data file reside in my plugin directory,
> so the user doesn't have to upload it separately?
> 
> On my test blog, it's throwing a 404 error with the basic
> WP .htaccess file. I have verified the correct path, and even
> attempting to access the file directly throws a 404.
> 
> Thoughts?

Let me start by asking if this data file is being updated or modified
by the plugin and then used again.
Because if that is the case residing that data file in your plugin
directory is not a good idea.
This is because when the plugin is being updated automatically through
WordPress the plugin directory is being deleted before installing the
updated version and you will loose your data file.
If the data file is being modified and reused it is better to include
the starting data file with the plugin and within the plugin copy that
file to the upload directory if it doesn't exists there. Your plugin
can use this path.
Use wp_upload_dir( ) to get the upload directory and url.

You could create a directory under upload with your plugin name, so
it's clear why this directory exists.

To answer your 404 error, there are a few possibilities why this
happens:
1. Ownership of the data file is incorrect. The user the webserver in
running under doesn't have the right to read the file.
2. In general wrong file permissions of the file.


-- 
Peter van der Does

GPG key: E77E8E98

IRC: Ganseki on irc.freenode.net
Twitter: @petervanderdoes

WordPress Plugin Developer
Blog: http://blog.avirtualhome.com
Forums: http://forums.avirtualhome.com
Twitter: @avhsoftware

From bernard.d.tremblay at gmail.com  Tue Mar 23 18:48:45 2010
From: bernard.d.tremblay at gmail.com (Bernard D. Tremblay (ben))
Date: Tue, 23 Mar 2010 12:48:45 -0600
Subject: [wp-hackers] Failure in import from Blogger
In-Reply-To: <mailman.15.1269345602.11187.wp-hackers@lists.automattic.com>
References: <mailman.15.1269345602.11187.wp-hackers@lists.automattic.com>
Message-ID: <4BA90D0D.5040106@gmail.com>

see http://gnodal.protension.com/journal/?m=200305
running 2.9.2

No titles.
Exerpt only.
Links are (somehow, mystically) inactive.

In edit the full text c/w fully correct links display.

Import from LiveJournal worked like a charm.
But from blogger ...
... I'm glad I backed up the database!

bdt


From enkrates at gmail.com  Tue Mar 23 19:05:53 2010
From: enkrates at gmail.com (Bill Sullivan)
Date: Tue, 23 Mar 2010 14:05:53 -0500
Subject: [wp-hackers] [GSoC Proposal] bbPress ported to a WordPress plugin
Message-ID: <cfaa38a21003231205j6be70375pc46e3be7e835a9da@mail.gmail.com>

Hello everyone,

I'm working on writing a proposal for Google Summer of Code for
developing bbPress as a plugin for a WordPress blog. I'd really
appreciate any feedback anyone has for the below proposal. I'm
including the project and portion of the schedule of deliverables.


Project Proposal:
-----
I propose to adapt the bbPress project as a WordPress plugin. I would
like to make forums available to bloggers to allow discussions to grow
outside the context of specific blog post. Relatedly, I am very
curious to see how comments and forums could complement each other or
possibly merged. It seems reasonable to imagine that an interesting
discussion in a blog post's comments could branch off and continue
effectively as a forum discussion and I would like to experiment with
some designs that would enable that.

As stated, this project is meant to be a plugin for WordPress.

I expect this project to be a challenge to my database design and UI
design skills, as the possible intermingling of comments and forums
present some interesting and potentially difficult problems. I am also
curious to see what kinds of administration problems will be brought
up by adding forums to the WordPress admin (wp-admin) pages. I expect
to get a lot of inspiration (and hopefully lots of actual code) from
the work already done to integrate standalone installations of bbPress
and WordPress.

If the project is not fully successful, I still hope that my work
could be used in bbPress itself, if only by pointing out whatever
issues prevent me from adapting it as a plugin.
-----

Schedule of Deliverables
------
I would like to have successfully ported the forums themselves over to
WordPress by the halfway point and then spend the rest of the Summer
working on making the administration of the forums as usable as
possible.
------


Thanks,

Bill Sullivan
http://enkrates.com

From bernard.d.tremblay at gmail.com  Tue Mar 23 19:13:23 2010
From: bernard.d.tremblay at gmail.com (Bernard D. Tremblay (ben))
Date: Tue, 23 Mar 2010 13:13:23 -0600
Subject: [wp-hackers] Can Import break theme? [was: Failure in import from
	Blogger]
In-Reply-To: <4BA90D0D.5040106@gmail.com>
References: <mailman.15.1269345602.11187.wp-hackers@lists.automattic.com>
	<4BA90D0D.5040106@gmail.com>
Message-ID: <4BA912D3.6060007@gmail.com>

http://gnodal.protension.com/journal/?p=520 is broken.
http://gnodal.protension.com/journal/?p=521 is fine.
Likewise posts even older, like http://gnodal.protension.com/journal/?p=120

How can that be?

If someone gives me a hint where to start I can debug it.
Comparing source now.

bdt

Bernard D. Tremblay (ben) wrote:
> see http://gnodal.protension.com/journal/?m=200305
> running 2.9.2
>
> No titles.
> Exerpt only.
> Links are (somehow, mystically) inactive.
[...]

  


From beau at dentedreality.com.au  Tue Mar 23 19:31:46 2010
From: beau at dentedreality.com.au (Beau Lebens)
Date: Tue, 23 Mar 2010 12:31:46 -0700
Subject: [wp-hackers] Can Import break theme? [was: Failure in import
	from Blogger]
In-Reply-To: <4BA912D3.6060007@gmail.com>
References: <mailman.15.1269345602.11187.wp-hackers@lists.automattic.com>
	<4BA90D0D.5040106@gmail.com> <4BA912D3.6060007@gmail.com>
Message-ID: <902424491003231231v4eb96b41n6d89a0e93938412f@mail.gmail.com>

I would assume that it's because of invalid markup in your imported content.

Try turning on the option to correct invalidly nested XHTML and then
resaving a couple of the posts that are breaking to see if that helps.

On Tuesday, March 23, 2010, Bernard D. Tremblay (ben)
<bernard.d.tremblay at gmail.com> wrote:
> http://gnodal.protension.com/journal/?p=520 is broken.
> http://gnodal.protension.com/journal/?p=521 is fine.
> Likewise posts even older, like http://gnodal.protension.com/journal/?p=120
>
> How can that be?
>
> If someone gives me a hint where to start I can debug it.
> Comparing source now.
>
> bdt
>
> Bernard D. Tremblay (ben) wrote:
>
> see http://gnodal.protension.com/journal/?m=200305
> running 2.9.2
>
> No titles.
> Exerpt only.
> Links are (somehow, mystically) inactive.
>
> [...]
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Tue Mar 23 19:31:41 2010
From: otto at ottodestruct.com (Otto)
Date: Tue, 23 Mar 2010 14:31:41 -0500
Subject: [wp-hackers] Can Import break theme? [was: Failure in import
	from Blogger]
In-Reply-To: <4BA912D3.6060007@gmail.com>
References: <mailman.15.1269345602.11187.wp-hackers@lists.automattic.com> 
	<4BA90D0D.5040106@gmail.com> <4BA912D3.6060007@gmail.com>
Message-ID: <161617691003231231l7e898f9fg26012c7100a21be8@mail.gmail.com>

Your content is all horked up. Essentially, you have a malformed link
in your post. Probably was there before the import. Check the original
source.

On http://gnodal.protension.com/journal/?p=520 , there is this in the
middle of your post:

<a href="<a href="http://www.andybudd.com/archives/2007/12/on_experts_and/index.php">

That ain't right.

-Otto



On Tue, Mar 23, 2010 at 2:13 PM, Bernard D. Tremblay (ben)
<bernard.d.tremblay at gmail.com> wrote:
> http://gnodal.protension.com/journal/?p=520 is broken.
> http://gnodal.protension.com/journal/?p=521 is fine.
> Likewise posts even older, like http://gnodal.protension.com/journal/?p=120
>
> How can that be?
>
> If someone gives me a hint where to start I can debug it.
> Comparing source now.
>
> bdt
>
> Bernard D. Tremblay (ben) wrote:
>>
>> see http://gnodal.protension.com/journal/?m=200305
>> running 2.9.2
>>
>> No titles.
>> Exerpt only.
>> Links are (somehow, mystically) inactive.
>
> [...]
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Tue Mar 23 20:16:45 2010
From: scribu at gmail.com (scribu)
Date: Tue, 23 Mar 2010 22:16:45 +0200
Subject: [wp-hackers] [GSoC Proposal] bbPress ported to a WordPress
	plugin
In-Reply-To: <cfaa38a21003231205j6be70375pc46e3be7e835a9da@mail.gmail.com>
References: <cfaa38a21003231205j6be70375pc46e3be7e835a9da@mail.gmail.com>
Message-ID: <349fe48b1003231316w57ae7d78ma875416d20356e00@mail.gmail.com>

On Tue, Mar 23, 2010 at 9:05 PM, Bill Sullivan <enkrates at gmail.com> wrote:

> It seems reasonable to imagine that an interesting
> discussion in a blog post's comments could branch off and continue
> effectively as a forum discussion and I would like to experiment with
> some designs that would enable that.
>

I never understood why some people want to move the comments section to a
forum topic.

Maybe your experiments will enlighten me :-)


-- 
http://scribu.net

From info at toscho.de  Tue Mar 23 22:09:59 2010
From: info at toscho.de (Thomas Scholz)
Date: Tue, 23 Mar 2010 23:09:59 +0100
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <4cc4de141003222312m37fc86b9q6ccbfcc9a5820adc@mail.gmail.com>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com>
	<911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
	<4cc4de141003222312m37fc86b9q6ccbfcc9a5820adc@mail.gmail.com>
Message-ID: <op.u91juxy9r6yny2@perplexifikator.speedport-w-303v-typ-a>

Andrew Nacin:

> Say you're editing "archive.php". The issue is, you don't know on which
> pages "archive.php" is actually used, due to template hierarchy and  
> numerous filters in the template API and template loader. So you can't
> request the home page (which most likely does not include "archive.php")
> or any other page and say with certainty that "archive.php" works.

Can?t you reuse the theme preview? In an iframe you could load and  
navigate the edited theme without breaking the real site.

Thomas
-- 
http://toscho.de

From bernard.d.tremblay at gmail.com  Tue Mar 23 22:11:26 2010
From: bernard.d.tremblay at gmail.com (Bernard D. Tremblay (ben))
Date: Tue, 23 Mar 2010 16:11:26 -0600
Subject: [wp-hackers] Update Re: Can Import break theme?
In-Reply-To: <4BA912D3.6060007@gmail.com>
References: <mailman.15.1269345602.11187.wp-hackers@lists.automattic.com>
	<4BA90D0D.5040106@gmail.com> <4BA912D3.6060007@gmail.com>
Message-ID: <4BA93C8E.6010102@gmail.com>

Context:
> http://gnodal.protension.com/journal/?p=520 is broken.
> http://gnodal.protension.com/journal/?p=521 is fine.
> Likewise posts even older, like 
> http://gnodal.protension.com/journal/?p=120
> How can that be?
(I should have added: maybe it's the LJ posts that are fine and the 
Blogger posts that are busted. I'll confirm that.)

Update:
1) I found that a small number of posts imported from blogspot were 
marked draft. Okie dokie.
2) I checked one, tweaked it a bit, and posted it.
3) I found 2 things:
* it had lost its date and gone to the top of the stack. Okie dokie ... 
never done this before; no biggie.
* homepage theme was now broken. Yowza!

I'm going to leave the site broken for a while, in case someone wants to 
snoop this.

@bentrem


From peter at avirtualhome.com  Tue Mar 23 23:06:29 2010
From: peter at avirtualhome.com (Peter van der Does)
Date: Tue, 23 Mar 2010 19:06:29 -0400
Subject: [wp-hackers] How do you store multiple plugin options
Message-ID: <20100323190629.1865a172@montecarlo.grandprix.int>

Everybody knows, or at least should know, that storing every variable
as an option is a bad idea. You usually use an array and store the
array.

How do you store multiple options.
What I mean is, you can have general options, options that are to be
used throughout the plugin. You can have default widget options, so
when you don't enter a value in the widget this option will be used.

Currently I store this as follows:
$general=array('key1'=>'value1', 'key2'=>'value2');
$widget=array('key3'=>'value1', 'key2'=>'value4');
$option=array('general'=>$general,'widget'=>$widget);
update_option( 'myplugin', $options );

I also can see it as follows:
$general=array('key1'=>'value1', 'key2'=>'value2');
$widget=array('key3'=>'value1', 'key2'=>'value4');
update_option( 'myplugin-general', $general );
update_option( 'myplugin-widget', $widget );

So how do you store your options?

-- 
Peter van der Does

GPG key: E77E8E98

IRC: Ganseki on irc.freenode.net
Twitter: @petervanderdoes

WordPress Plugin Developer
Blog: http://blog.avirtualhome.com
Forums: http://forums.avirtualhome.com
Twitter: @avhsoftware

From scribu at gmail.com  Tue Mar 23 23:36:45 2010
From: scribu at gmail.com (scribu)
Date: Wed, 24 Mar 2010 01:36:45 +0200
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <20100323190629.1865a172@montecarlo.grandprix.int>
References: <20100323190629.1865a172@montecarlo.grandprix.int>
Message-ID: <349fe48b1003231636o4ad36cd2u9915a6616b03bb96@mail.gmail.com>

On Wed, Mar 24, 2010 at 1:06 AM, Peter van der Does
<peter at avirtualhome.com>wrote:

> Everybody knows, or at least should know, that storing every variable
> as an option is a bad idea. You usually use an array and store the
> array.
>
> How do you store multiple options.
> What I mean is, you can have general options, options that are to be
> used throughout the plugin. You can have default widget options, so
> when you don't enter a value in the widget this option will be used.
>

There's no point in storing default widget options (that never change) in
the wp_options table.

Just leave them in the code:

function widget($instance) {
    $defaults = array('
        key => value
        ...
    );

    $instance = array_merge($defaults, $instance);
}


-- 
http://scribu.net

From wp-hackers at striderweb.com  Tue Mar 23 23:44:14 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue, 23 Mar 2010 18:44:14 -0500
Subject: [wp-hackers] Access files inside a plugin directory?
In-Reply-To: <e1202cb11003230718h43a96236pe4388939c7dce027@mail.gmail.com>
References: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>
	<349fe48b1003221638v4a9f0f2cn1c8cf74ec3d48a33@mail.gmail.com>
	<e1202cb11003230718h43a96236pe4388939c7dce027@mail.gmail.com>
Message-ID: <DF788D40-49D1-42AE-9BD9-CD67908FDF83@striderweb.com>

Another thought:  If you're customizing WP_PLUGIN_DIR and WP_PLUGIN_URL, you could always set the DIR constant to the **actual** directory of the shared plugins.  Might fix a lot of the __FILE__ problems.  

On Mar 23, 2010, at 9:18 AM, Jeremy Clarke wrote:

> Is using __FILE__ an accepted practice in WP-land? I have many
> installs where I use symlinks ( ln -s ) to share plugin/theme
> directories between multiple installations, and any use of __file__
> completely screws up file includes in that setup. Most plugins manage
> to avoid it but the ones that use it need to be modified by hand.
> 
> Isn't it presumptive or something? Seems dangerous to have as a best practice.


From mikeschinkel at newclarity.net  Tue Mar 23 23:47:11 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 23 Mar 2010 19:47:11 -0400
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <349fe48b1003231636o4ad36cd2u9915a6616b03bb96@mail.gmail.com>
References: <20100323190629.1865a172@montecarlo.grandprix.int>
	<349fe48b1003231636o4ad36cd2u9915a6616b03bb96@mail.gmail.com>
Message-ID: <0D677F0A-148B-446B-B897-06B778AC63FC@newclarity.net>

On Mar 23, 2010, at 7:36 PM, scribu wrote:
> There's no point in storing default widget options (that never change) in
> the wp_options table.
> 
> Just leave them in the code:
> 
> function widget($instance) {
>    $defaults = array('
>        key => value
>        ...
>    );
> 
>    $instance = array_merge($defaults, $instance);
> }

+1. Defaults stored in code are much less fragile and it becomes much better documentation.

Also, similarly, it sure would be nice if there was a standard way for plugins to on-demand persist their option state to code so that people who develop and deliver a site can include said code to reinitializes all plugins from a default install. It would make deploying developed WordPress solutions easier and would make reinitializing WordPress solutions during development much easier.  Thoughts on this?

-Mike

From wp-hackers at striderweb.com  Tue Mar 23 23:58:11 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue, 23 Mar 2010 18:58:11 -0500
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <0D677F0A-148B-446B-B897-06B778AC63FC@newclarity.net>
References: <20100323190629.1865a172@montecarlo.grandprix.int>
	<349fe48b1003231636o4ad36cd2u9915a6616b03bb96@mail.gmail.com>
	<0D677F0A-148B-446B-B897-06B778AC63FC@newclarity.net>
Message-ID: <CCFABBB5-6DAD-45A1-918D-462D83A22C64@striderweb.com>


On Mar 23, 2010, at 6:47 PM, Mike Schinkel wrote:

> Also, similarly, it sure would be nice if there was a standard way for plugins to on-demand persist their option state to code so that people who develop and deliver a site can include said code to reinitializes all plugins from a default install. It would make deploying developed WordPress solutions easier and would make reinitializing WordPress solutions during development much easier.  Thoughts on this?

Recommended reading:
<http://wpbits.wordpress.com/2007/08/10/automating-wordpress-customizations-the-installphp-way/>

custom install.php == awesomeness

From peter at avirtualhome.com  Wed Mar 24 00:00:24 2010
From: peter at avirtualhome.com (Peter van der Does)
Date: Tue, 23 Mar 2010 20:00:24 -0400
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <349fe48b1003231636o4ad36cd2u9915a6616b03bb96@mail.gmail.com>
References: <20100323190629.1865a172@montecarlo.grandprix.int>
	<349fe48b1003231636o4ad36cd2u9915a6616b03bb96@mail.gmail.com>
Message-ID: <20100323200024.3b122707@montecarlo.grandprix.int>

On Wed, 24 Mar 2010 01:36:45 +0200
scribu <scribu at gmail.com> wrote:


> There's no point in storing default widget options (that never
> change) in the wp_options table.
> 
> Just leave them in the code:
> 
> function widget($instance) {
>     $defaults = array('
>         key => value
>         ...
>     );
> 
>     $instance = array_merge($defaults, $instance);
> }
> 
> 

But people can change the default value :-)
For example: The title of the widget. If you have multiple widgets the
user should be able to change the title for every widget without having
to change the title in every widget separately.

A better example would be my AVH Amazon plugin. It makes calls to
Amazon but it allows you to make calls to Amazon locales(.ca, .fr etc).
So instead of having the user enter the desired locale per widget, they
can enter it in the admin section.

-- 
Peter van der Does

GPG key: E77E8E98

IRC: Ganseki on irc.freenode.net
Twitter: @petervanderdoes

WordPress Plugin Developer
Blog: http://blog.avirtualhome.com
Forums: http://forums.avirtualhome.com
Twitter: @avhsoftware

From mirepup at gmail.com  Wed Mar 24 00:25:26 2010
From: mirepup at gmail.com (Jeff Rose)
Date: Tue, 23 Mar 2010 17:25:26 -0700
Subject: [wp-hackers] Access files inside a plugin directory?
Message-ID: <b825b2cd1003231725m24a56989s8b8dc11623f07ebf@mail.gmail.com>

Thanks to everyone for the replies regarding the datafile inside the plugins
directory.

I got it working somehow, even though File Permissions all appeared to be
correct (Read) it started working, which scares me.

I like the idea of moving it to the uploads directory on install as this
data doesn't change and isn't really fit for the database.

From bernard.d.tremblay at gmail.com  Wed Mar 24 00:45:11 2010
From: bernard.d.tremblay at gmail.com (Bernard D. Tremblay (ben))
Date: Tue, 23 Mar 2010 18:45:11 -0600
Subject: [wp-hackers] Can Import break theme? [was: Failure in
In-Reply-To: <mailman.5996.1269388043.1345.wp-hackers@lists.automattic.com>
References: <mailman.5996.1269388043.1345.wp-hackers@lists.automattic.com>
Message-ID: <4BA96097.6040803@gmail.com>

Beau Lebens beau at dentedreality.com.au kindly wrote:

> I would assume that it's because of invalid markup in your imported content.
>   
I never thought post markup could "hork" the theme.
> Try turning on the option to correct invalidly nested XHTML and then
> resaving a couple of the posts that are breaking to see if that helps.
>   
I was going to compare a well rendered page with source from broken, but 
this is a great test.
*looks*
Sorry, I can see no such option. Is that in the post edit screen?
I've never before heard of this ... I just looked through every admin 
page ... thought it might be in Writing Settings ... can find it nowhere.

thanks / sorry / help?

(I'm going to use FileCompare to see if I can spot something.)

====

Otto otto at ottodestruct.com replied:

> Your content is all horked up. Essentially, you have a malformed link
> in your post. Probably was there before the import. Check the original
> source. On http://gnodal.protension.com/journal/?p=520 , there is this in the
> middle of your post: <a href="<a href="http://www.andybudd.com/archives/2007/12/on_experts_and/index.php">
> That ain't right.
>   
Good eye, Otto, it ferr shurr ain't. That 1 is horked, for sure, no 
doubt about it.

But that's 1 of 10 "horked up". So when you write "Your content is all 
horked up" I don't get it. I don't see it.
Sorry, but I just don't follow you.

But anyhow, you figure 1 mal-formed link would break the theme?
I must be missing your point here Otto.
I'm not being intentionally thick here, honest.

ben


From mikeschinkel at newclarity.net  Wed Mar 24 00:48:49 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 23 Mar 2010 20:48:49 -0400
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <CCFABBB5-6DAD-45A1-918D-462D83A22C64@striderweb.com>
References: <20100323190629.1865a172@montecarlo.grandprix.int>
	<349fe48b1003231636o4ad36cd2u9915a6616b03bb96@mail.gmail.com>
	<0D677F0A-148B-446B-B897-06B778AC63FC@newclarity.net>
	<CCFABBB5-6DAD-45A1-918D-462D83A22C64@striderweb.com>
Message-ID: <91E8B888-FBBE-4280-BB49-1538032CEB6C@newclarity.net>

On Mar 23, 2010, at 7:58 PM, Stephen Rider wrote:
> On Mar 23, 2010, at 6:47 PM, Mike Schinkel wrote:
>> Also, similarly, it sure would be nice if there was a standard way for plugins to on-demand persist their option state to code so that people who develop and deliver a site can include said code to reinitializes all plugins from a default install. It would make deploying developed WordPress solutions easier and would make reinitializing WordPress solutions during development much easier.  Thoughts on this?
> 
> Recommended reading:
> <http://wpbits.wordpress.com/2007/08/10/automating-wordpress-customizations-the-installphp-way/>
> 
> custom install.php == awesomeness

Great link, thanks!  Now the next step would be to automate the automation with a hook for plugins called something like 'make_install.php' that could contribute code to an install.php itself based on its current state.  I'm envisioning an admin page where I could copy the generated install.php and past into a file, not something that would automatically overwrite the existing one.

-Mike

From bernard.d.tremblay at gmail.com  Wed Mar 24 01:03:05 2010
From: bernard.d.tremblay at gmail.com (Bernard D. Tremblay (ben))
Date: Tue, 23 Mar 2010 19:03:05 -0600
Subject: [wp-hackers] Fixed - Can Import break theme? [was: Failure in
In-Reply-To: <4BA96097.6040803@gmail.com>
References: <mailman.5996.1269388043.1345.wp-hackers@lists.automattic.com>
	<4BA96097.6040803@gmail.com>
Message-ID: <4BA964C9.6060009@gmail.com>

Bernard D. Tremblay (ben) wrote:
> Beau Lebens beau at dentedreality.com.au kindly wrote:
>> I would assume that it's because of invalid markup in your imported 
>> content.  
> I never thought post markup could "hork" the theme.
> [...]
> (I'm going to use FileCompare to see if I can spot something.)
I used TextPad FileCompare. Nothing evident.
I checked for broken syntax. Nothing found.
I just went through the post and deleted any newline in any non-obvious 
place.
Theme restored.

*blink*

thanks for the help fellows


From leogermani at gmail.com  Wed Mar 24 02:03:06 2010
From: leogermani at gmail.com (Leo germani)
Date: Tue, 23 Mar 2010 23:03:06 -0300
Subject: [wp-hackers] GSoc - here we go !
In-Reply-To: <90E4EF88-6C9B-46E3-B75E-2D693A04D54D@gmail.com>
References: <90E4EF88-6C9B-46E3-B75E-2D693A04D54D@gmail.com>
Message-ID: <s2q32c7967e1003231903j68860d7euaeabd7ee310bb9b7@mail.gmail.com>

Hi there,

about idea number 1:
actually the WP importes does have an option to import all the media. And it
works pretty well already.

about idea number 2, what is a pain when you have to move a wp installation
from domains are all the hardcoded absolute paths and url in the database.
Maybe if wordpress could detect that it is in a different domain from what
is on the database and could deal with it somehow ... but thats not a easy
topic.

by the way, I have my own script to handle with that if anyone is interested
(that replaces all the urls in the database, even the serialized ones)

Leo,,

On Fri, Mar 19, 2010 at 4:03 PM, Perro Hunter <perro.hunter at gmail.com>wrote:

> Hey there everyone !
>
> I'm a computer science engineer student from Mexico
> and this is the first year I'll try out for GSoc
>
> I'm really exited on getting a chance to contribute
> with wordpress since it's a really popular piece of software :)
>
> I think i've got some ideas to develop some of the ideas
> that you proposed this year and I'd love to hear some feedback from
> you. While reading them the first 2 that got my attention were the
> Blog Import/Export feature and the Moving Wordpress feature since
> I've already had to move a wordpress installation before and I know it
> was sorta uncomfortable, from those experience I think I can start
> something, let me know what you think :)
>
> Blog Import/Export idea:
>
> The thing here is that we not only need to move a huge number of post
> we also need to move comments, pages, tags, categories and links current
> import/export feature would give you a dump of XML that you can take to a
> new wordpress installation and upload it yourself. This sometimes is nasty
> if
> the xml dump is huge, also this dump doesn't help you export/import the
> media
> those post are using which is a problem since most of the users don't know
> how
> to deal with FTPs and they should't have to deal with downloading
> everything to
> their PC's and uploading it to the new server.
>
> For this I propose a Plugin that would be needed to be installed on both
> wordpress
> , I'm not sure yet wheter we should attack the next problem from the
> original
> installation or from the target installation.
>
> If we were doing this from the source installation we'd need to first make
> sure
> the plugin is ON on the target installation, we would use the admin user
> and password
> to authenticate remotely.
>
> I know we have to move a great number of post-objects
> (posts,comments,categories,etc)
> for this one we are going to create a queue of things that are going to be
> exported, this
> could latter allow users to personalize what are the elements that they'd
> like to move only, then
> we'd run a quick scan on each of the queued elements to see the media they
> are using
> and queue those file on the table too, I'm using this queue table first so
> when we start
> moving the elements and files from one installation to another if the
> script timeouts we can
> restart the process and take off where it stopped last time ;)
>
> Once the queue is ready to go, we even got a way to calculate percentage (
> 1/3000 elements to move = 0.03%)
> we'd start calling the move method, on the user interface we could have an
> ajax call
> that refresh the status of the script every X seconds or minutes, it could
> get a new percentage
> number to display and even reactive the moving script if it already timed
> out. Every time
> an element was successfully moved it'd be mark as it on the queue, we could
> move
> a large number of post-objects (posts,comments) using curl from one server
> to another,
> I know server to server bandwidth is way better than home-bandwidth, on the
> target
> installation the plugin would be receiving all the elements and inserting
> them in to the db
> with their proper category, tags and everything.
>
> We could use the same procedure when moving medie if the max post value of
> the target
> server allow us to send these files via post, or we could use FTP so after
> moving successfully
> a file we'd notify the target installation plugin about the new file so i
> can work is the way it want's
> (we'd FTP to a tmp folder)
>
> For small blogs this process could take less than a minute, for huge blogs
> it could take a couple
> of hours I don't know we'd need to benchmark this a little, but I think
> this is the best way to
> Import/export wordpress without having to get your hands dirty :P
>
> this could also be extended to be compatible with old versions of WP
>
> What do you think?
>
> Now, this very same algorithm could be used for the next idea:
>
> Moving a Wordpress installation from one domain to another:
>
> For this one we would definitively need FTP to move the basic installation,
> the target server DB name, user and password, and after moving the
> essentials of the installation we could start doing the rest with the old
> procedure(queue items, start cleaning the items periodically)
>
> Two features could be archived with this same idea, please tell me if you
> think there's something missing
> or your thoughts
>
> Cheers ! :D
>
> P.S. I also posted this to
> http://blog.perrohunter.com/ideas-for-wp-at-gsoc/ :)
>
> -perrohunter
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
leogermani.pirex.com.br
leogermani.estudiolivre.org

From jeremy at visser.name  Wed Mar 24 02:37:36 2010
From: jeremy at visser.name (Jeremy Visser)
Date: Wed, 24 Mar 2010 13:37:36 +1100
Subject: [wp-hackers] XML controlled SWF files
In-Reply-To: <4ede8f491003230550n77b27c19lde62b4ea7a09e595@mail.gmail.com>
References: <4ede8f491003221739r43d35d4auf795d052699fa65f@mail.gmail.com>	<4BA84740.5000008@visser.name>
	<4ede8f491003230550n77b27c19lde62b4ea7a09e595@mail.gmail.com>
Message-ID: <4BA97AF0.1000807@visser.name>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 23/03/10 23:50, Vinicius Massuchetto wrote:
> 1) The path SWF looks for the XML is the page URL, not the folder the
> SWF file is. So it is needed to give the full XML path to the load
> function into its action:
> xmlobject.load("http://path/to/the/xml/file.xml")

Ah, there we go. Makes sense. You should also be able to drop the
http://hostname part of it and just use /path/to/the/file.xml.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)

iEYEARECAAYFAkupeusACgkQvs6Qqs8TxBoWkgCg1L0caLUP5T+mkeBOBEVmRZiP
If4AoOZCsvSlLmEp9dUicsQckVrzW7bU
=7I0h
-----END PGP SIGNATURE-----

From chinthakarukshan at gmail.com  Wed Mar 24 03:09:58 2010
From: chinthakarukshan at gmail.com (Chinthaka Rukshan)
Date: Wed, 24 Mar 2010 08:39:58 +0530
Subject: [wp-hackers] Google Summer of Code-Project Proposal for
	feedback(WordPress import/export)-Reminder
Message-ID: <7cd5f9e21003232009o78037329o8de08ca2505f0637@mail.gmail.com>

Hi all,

I sent you a email about mentioning my GSoC idea and anyone didn't gave me
any feedback although I'm waiting for your feedback.Please give me some
feedback regarding the below ideas and if you can answer my questions that
I've asked below,it would be a pleasure for me.

I'm a Computer Science and Engineering student of University of Moratuwa,Sri
Lanka.
This is the first time I'm applying a proposal for GSoC.

It will be very lucky to contribute for WordPress because it is very popular
and I also have a blog on WordPress.

Here I have Provide my Google Summer of Code Project Proposal link for the
project WordPress Import/Export.I would like to hear some feed back about
the proposal from you.After you reading about the proposal I need to know
specially about one thing. I've mentioned about what I have done. A project
that can import WordPress blog posts and comments from a remote WordPress
blog.Is it ok to mention such a thing in my proposal that is submitting to
the Google and to what extent do I have to mention those information?.I've
mentioned about that I've studied to some extent about blogger import and
livejournal import.Is it also ok to mention about that?. If you can help me
with these facts it would be pleasure.

This is the link that I describe about the Project Proposal.

http://chinthakarukshan.wordpress.com/2010/03/21/google-summer-of-code-proposalwordpress-importexport/

<http://chinthakarukshan.wordpress.com/2010/03/21/google-summer-of-code-proposalwordpress-importexport/>Thank
You.

-- 
Chinthaka Rukshan
"Open Your Mind"

From wp at andrewnacin.com  Wed Mar 24 07:04:34 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 24 Mar 2010 03:04:34 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <op.u91juxy9r6yny2@perplexifikator.speedport-w-303v-typ-a>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com> 
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com> 
	<911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
	<4cc4de141003222312m37fc86b9q6ccbfcc9a5820adc@mail.gmail.com> 
	<op.u91juxy9r6yny2@perplexifikator.speedport-w-303v-typ-a>
Message-ID: <4cc4de141003240004h6d22edbcye1386312710dccb@mail.gmail.com>

>
> Can?t you reuse the theme preview? In an iframe you could load and navigate
> the edited theme without breaking the real site.


The theme preview simply tells the blog (via a few GET parameters and a
permissions check) to use a different stylesheet and template directory.
Previewing the active theme is no different than viewing the live site.

Being able to edit an inactive theme and previewing it seems sensible. To do
this for the active theme, we'd need to keep a copy of the active theme for
editing purposes, which gets synced but allows for previews beforehand.
Seems potentially overkill, but it's a consideration, for sure.

From wp-hackers at nicolaskuttler.de  Wed Mar 24 09:25:00 2010
From: wp-hackers at nicolaskuttler.de (Jean-Nicolas Kuttler)
Date: Wed, 24 Mar 2010 10:25:00 +0100
Subject: [wp-hackers] Child themes, theme revisions, and the theme	editor
In-Reply-To: <911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com>
	<911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
Message-ID: <20100324092500.GO5724@nicolaskuttler.de>

On Tue, Mar 23, 2010 at 01:50:42AM -0400, Mike Schinkel wrote:
> What if WP is modified to allow a theme to be loaded temporarily via URL parameter without changing the current theme? For example, the following could load the site using a twentyten theme.
> 
> http://example.com/?_theme=twentyten

http://wordpress.org/extend/plugins/nkthemeswitch/

or much leaner:

http://wordpress.org/extend/plugins/theme-switcher/

I have to admit though that I have no idea if they work with child themes.

Nicolas

--
Nicolas Kuttler
wp at nkuttler.de

http://www.nkuttler.de
http://www.nicolaskuttler.de (deutsch)

From jayarjo at gmail.com  Wed Mar 24 11:29:22 2010
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Wed, 24 Mar 2010 15:29:22 +0400
Subject: [wp-hackers]  do I need to register custom post_status-es?
Message-ID: <9aa12a491003240429h4ad44a93l74df97271e70f1f5@mail.gmail.com>

I'm using the following code to retrieve custom post_type-es:

$wp_query = new
WP_Query("post_type=event&post_status=$post_status&posts_per_page=15&paged=$paged{$search}");

Quoted line resolves for example to:
post_type=event&post_status=active&posts_per_page=15&paged=1 (string
has been printed out not just made up).

Although while I have specific post_status defined, for some
reason it does fetch all of the posts with post_type=event, no matter
are they marked as active in post_status or - inactive. Not sure what
could be the reason. For post_status - trash it filters them as
expected. Do I need to register custom post_status-es
maybe?

-- 
Davit Barbakadze

From dougal at gunters.org  Wed Mar 24 11:35:14 2010
From: dougal at gunters.org (Dougal Campbell)
Date: Wed, 24 Mar 2010 07:35:14 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme	editor
In-Reply-To: <20100324092500.GO5724@nicolaskuttler.de>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com>	<911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
	<20100324092500.GO5724@nicolaskuttler.de>
Message-ID: <4BA9F8F2.8000602@gunters.org>

On Mar 24 2010 5:25 AM, Jean-Nicolas Kuttler wrote:
> On Tue, Mar 23, 2010 at 01:50:42AM -0400, Mike Schinkel wrote:
>    
>> What if WP is modified to allow a theme to be loaded temporarily via URL parameter without changing the current theme? For example, the following could load the site using a twentyten theme.
>>
>> http://example.com/?_theme=twentyten
>>      
> http://wordpress.org/extend/plugins/nkthemeswitch/
>
> or much leaner:
>
> http://wordpress.org/extend/plugins/theme-switcher/
>
> I have to admit though that I have no idea if they work with child themes.
>    
And also:
   http://dougal.gunters.org/plugins/theme-preview

You can even override the themes used for templates and for css separately.

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From otto at ottodestruct.com  Wed Mar 24 14:57:16 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 24 Mar 2010 09:57:16 -0500
Subject: [wp-hackers] Can Import break theme? [was: Failure in
In-Reply-To: <4BA96097.6040803@gmail.com>
References: <mailman.5996.1269388043.1345.wp-hackers@lists.automattic.com> 
	<4BA96097.6040803@gmail.com>
Message-ID: <161617691003240757y3c0a78bfo7def51c3b3c85444@mail.gmail.com>

On Tue, Mar 23, 2010 at 7:45 PM, Bernard D. Tremblay (ben)
<bernard.d.tremblay at gmail.com> wrote:
> Good eye, Otto, it ferr shurr ain't. That 1 is horked, for sure, no doubt
> about it.
>
> But that's 1 of 10 "horked up". So when you write "Your content is all
> horked up" I don't get it. I don't see it.
> Sorry, but I just don't follow you.
>
> But anyhow, you figure 1 mal-formed link would break the theme?
> I must be missing your point here Otto.
> I'm not being intentionally thick here, honest.

Yes, one mal-formed link is messing up that page and any other page
that that link happens to be on.

Bad content can break the display of the entire site. I mean, it's not
like WordPress can magically turn broken HTML into valid HTML. Though
it can try to do so (hint: Settings->Writing: "WordPress should
correct invalidly nested XHTML automatically").

-Otto

From otto at ottodestruct.com  Wed Mar 24 15:06:43 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 24 Mar 2010 10:06:43 -0500
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <20100323190629.1865a172@montecarlo.grandprix.int>
References: <20100323190629.1865a172@montecarlo.grandprix.int>
Message-ID: <161617691003240806n7c9a38c3v500de98fc2bc5fa5@mail.gmail.com>

On Tue, Mar 23, 2010 at 6:06 PM, Peter van der Does
<peter at avirtualhome.com> wrote:
> Everybody knows, or at least should know, that storing every variable
> as an option is a bad idea. You usually use an array and store the
> array.
>
> How do you store multiple options.
> What I mean is, you can have general options, options that are to be
> used throughout the plugin. You can have default widget options, so
> when you don't enter a value in the widget this option will be used.
>
> Currently I store this as follows:
> $general=array('key1'=>'value1', 'key2'=>'value2');
> $widget=array('key3'=>'value1', 'key2'=>'value4');
> $option=array('general'=>$general,'widget'=>$widget);
> update_option( 'myplugin', $options );
>
> I also can see it as follows:
> $general=array('key1'=>'value1', 'key2'=>'value2');
> $widget=array('key3'=>'value1', 'key2'=>'value4');
> update_option( 'myplugin-general', $general );
> update_option( 'myplugin-widget', $widget );
>
> So how do you store your options?

I discuss some of this in my Settings API tutorial:
http://ottopress.com/2009/wordpress-settings-api-tutorial/

But, in general, the way you want to do it is as follows: Anything
that you will load all the options for at once (presumably because
you're using all or most of them) should be in one single option. The
majority of plugins should put all their options in one field, for
simplicity. Only rarely do you actually need extra options fields.

The format of that option's value is up to you, but I recommend
against nested arrays in the way you're suggesting there, and would
say a simple array would be better. Simple array lookups are faster
than nested arrays are, and with prefixing of your keys, it's really
just as easy to use.

So instead of this:
$general=array('key1'=>'value1', 'key2'=>'value2');
$widget=array('key3'=>'value1', 'key2'=>'value4');
$option=array('general'=>$general,'widget'=>$widget);

I'd say to do this:
$option=array('general-key1'=>'value1', 'general-key2'=>'value2',
'widget-key3'=>'value1', 'widget-key2'=>'value4');

-Otto

From otto at ottodestruct.com  Wed Mar 24 15:53:04 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 24 Mar 2010 10:53:04 -0500
Subject: [wp-hackers] RFE: "more" to open in new window
In-Reply-To: <C9C3ED50-BBFC-4891-B2F0-2C951B66F4C4@striderweb.com>
References: <4BA7EA69.8040806@gmail.com>
	<C9C3ED50-BBFC-4891-B2F0-2C951B66F4C4@striderweb.com>
Message-ID: <161617691003240853r2cdd11deqfdf4682fa7e835a6@mail.gmail.com>

On Mon, Mar 22, 2010 at 9:09 PM, Stephen Rider
<wp-hackers at striderweb.com> wrote:
> I would think this could be changed in the theme. ?If not, you could use a simple plugin to insert a JavaScript that does it.
>
> That being said, I would strongly recommend against it. ?As others have said, opening links in new windows is not best practice -- it confuses non-geeks and irritates geeks. ?Lose/Lose.

Agreed. I have a plugin for Firefox specifically to disable this sort
of bad programming practice. No link ever opens in a new window or tab
for me, unless I choose to do so.

Anybody who makes their links open in new windows is doing it wrong.
This is 2010, not 1999.

Also, it's Considered Harmful: http://annevankesteren.nl/2004/09/new-window :)

-Otto

From otto at ottodestruct.com  Wed Mar 24 16:04:13 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 24 Mar 2010 11:04:13 -0500
Subject: [wp-hackers] Access files inside a plugin directory?
In-Reply-To: <DF788D40-49D1-42AE-9BD9-CD67908FDF83@striderweb.com>
References: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com> 
	<349fe48b1003221638v4a9f0f2cn1c8cf74ec3d48a33@mail.gmail.com> 
	<e1202cb11003230718h43a96236pe4388939c7dce027@mail.gmail.com> 
	<DF788D40-49D1-42AE-9BD9-CD67908FDF83@striderweb.com>
Message-ID: <161617691003240904x742e2603ja66b2708ddfcab93@mail.gmail.com>

Just noticed this thread, but yes, that is definitely preferable to
symlinking anything. The whole purpose of those constants is
specifically to allow you to move those directories to elsewhere in
the filesystem.

Constants you'd care about:
WP_PLUGIN_DIR
WP_PLUGIN_URL
PLUGINDIR  (backward compatibility)
WPMU_PLUGIN_DIR
WPMU_PLUGIN_URL
MUPLUGINDIR (backward compatibility)

Using a plugin dir from elsewhere would require you to set at least
the first three of those in the wp-config. That would probably be the
best solution.

-Otto



On Tue, Mar 23, 2010 at 6:44 PM, Stephen Rider
<wp-hackers at striderweb.com> wrote:
> Another thought: ?If you're customizing WP_PLUGIN_DIR and WP_PLUGIN_URL, you could always set the DIR constant to the **actual** directory of the shared plugins. ?Might fix a lot of the __FILE__ problems.
>
> On Mar 23, 2010, at 9:18 AM, Jeremy Clarke wrote:
>
>> Is using __FILE__ an accepted practice in WP-land? I have many
>> installs where I use symlinks ( ln -s ) to share plugin/theme
>> directories between multiple installations, and any use of __file__
>> completely screws up file includes in that setup. Most plugins manage
>> to avoid it but the ones that use it need to be modified by hand.
>>
>> Isn't it presumptive or something? Seems dangerous to have as a best practice.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Wed Mar 24 17:15:54 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 24 Mar 2010 13:15:54 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <4cc4de141003240004h6d22edbcye1386312710dccb@mail.gmail.com>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com>
	<911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
	<4cc4de141003222312m37fc86b9q6ccbfcc9a5820adc@mail.gmail.com>
	<op.u91juxy9r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<4cc4de141003240004h6d22edbcye1386312710dccb@mail.gmail.com>
Message-ID: <D6066C72-5282-49EB-9E21-55B49D08AB33@newclarity.net>

On Mar 24, 2010, at 3:04 AM, Andrew Nacin wrote:
>> Can?t you reuse the theme preview? In an iframe you could load and navigate
>> the edited theme without breaking the real site.
> The theme preview simply tells the blog (via a few GET parameters and a
> permissions check) to use a different stylesheet and template directory.
> Previewing the active theme is no different than viewing the live site.

Ah, I didn't think of that.

> Being able to edit an inactive theme and previewing it seems sensible. To do
> this for the active theme, we'd need to keep a copy of the active theme for
> editing purposes, which gets synced but allows for previews beforehand.
> Seems potentially overkill, but it's a consideration, for sure.

Wouldn't it work to create a child theme of the current theme that only contains the files being edited?

-Mike

From mikeschinkel at newclarity.net  Wed Mar 24 17:28:16 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 24 Mar 2010 13:28:16 -0400
Subject: [wp-hackers] do I need to register custom post_status-es?
In-Reply-To: <9aa12a491003240429h4ad44a93l74df97271e70f1f5@mail.gmail.com>
References: <9aa12a491003240429h4ad44a93l74df97271e70f1f5@mail.gmail.com>
Message-ID: <C904D5A1-54D4-456C-9CD1-D92F4A84A280@newclarity.net>

Davit:

On Mar 24, 2010, at 7:29 AM, Davit Barbakadze wrote:
> I'm using the following code to retrieve custom post_type-es:
> 
> $wp_query = new
> WP_Query("post_type=event&post_status=$post_status&posts_per_page=15&paged=$paged{$search}");
> 
> Quoted line resolves for example to:
> post_type=event&post_status=active&posts_per_page=15&paged=1 (string
> has been printed out not just made up).
> 
> Although while I have specific post_status defined, for some
> reason it does fetch all of the posts with post_type=event, no matter
> are they marked as active in post_status or - inactive. Not sure what
> could be the reason. For post_status - trash it filters them as
> expected. Do I need to register custom post_status-es
> maybe?

I think these two pages might hold your answers:

--------------------
http://osdir.com/ml/wordpress-hackers/2010-01/msg00233.html
--------------------
"Bear in mind that the wp() call only accept query vars which are specified in the $public_query_vars and $private_query_vars arrays which are part of the WP class and these don't include anything to do with post_meta. 

The public_query_vars are those which can be specified in a url and the private_query_vars are the extra ones which can be specified only by code 

You will need to extend the list of private_query_vars which it supports to get the post_meta ones passed through"


--------------------
http://wordpress.org/support/topic/281165?replies=3
--------------------
function custom_pages_query( $query )
{
	global $wp, $wpdb;

	if( isset($_GET["meta_key"]) )
	{
		$wp->private_query_vars[] = 'meta_key';
		$query['meta_key'] = $_GET["meta_key"];
	}

	if( isset($_GET["meta_value"]) )
	{
		$wp->private_query_vars[] = 'meta_value';
		$query['meta_value'] = $_GET["meta_value"];
	}

	if( isset($_GET["post_parent"]) )
	{
		$post_parent = $_GET["post_parent"];
		$wp->private_query_vars[] = 'post_parent';

		if( !is_numeric($post_parent) )
		{
			$post_parent = $wpdb->get_var( $wpdb->prepare("SELECT <code>ID</code> FROM $wpdb->posts WHERE <code>post_name</code>='%s' AND <code>post_type</code>='page' AND <code>post_status</code>='publish'"), $post_parent);

			if( NULL === $post_parent )
				$post_parent = "";
		}

		$query['post_parent'] = $post_parent;
	}

	return $query;
}
add_filter('manage_pages_query', 'custom_pages_query');

HTH

-Mike



From isharaaruna at gmail.com  Wed Mar 24 17:44:53 2010
From: isharaaruna at gmail.com (Ishara Karunarathna)
Date: Wed, 24 Mar 2010 23:14:53 +0530
Subject: [wp-hackers] Like to participate Gsoc praogram
Message-ID: <b9d4ccf61003241044y1e92da3ck391c4e04d9940afb@mail.gmail.com>

Hi,

I?m an undergraduate student from  university of Moratuwa, Srilanka. I?m
interested in participating for the GSOC program for WordPress. Currently
I?m interested in the Idea
"BuddyPress"<http://codex.wordpress.org/GSoC2010#BuddyPress>

Please give me further details on this idea on where to begin and what are
the skills I need. So that I can start working on it.

Thank you.

Ishara

From jpotkanski at tribune.com  Wed Mar 24 17:56:42 2010
From: jpotkanski at tribune.com (Potkanski, Jason)
Date: Wed, 24 Mar 2010 12:56:42 -0500
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <161617691003240806n7c9a38c3v500de98fc2bc5fa5@mail.gmail.com>
Message-ID: <C7CFBC8A.2270%jpotkanski@tribune.com>

Storing database variables in an array should be considered a bad practice. Doing this is as an convenient  hack that shortens plugin design but has significant consequences.

Serialized data in the blog options table denormalizes the database. ReCaptcha uses one blog option setting called reCaptcha. If I want to update the keys across all my blogs in a wordpress MU install, I can not do it via SQL alone, I have to write a php plugin to tinker with the values. (Yes, I know reCaptcha has MU installation option and configuration file). Where I could have help from a DBA to fix something, I now need a developer.

Denormalization also means I couldn't have any systems integration or monitoring on database values without custom plugins. Other programming languages such as Java or Ruby don't have the same serialization functions PHP does, so any other development work that may need access to Wordpress data is restricted to PHP.

There are autoload features of blog options tables which many plugins are not taking advantage of.

There may also be performance penalties to serializing and deserializing arrays all the time that cause performance problems on high traffic sites.

Correct practice should be to avoid serialized arrays where possible and use proper prefixing in blog options to avoid collisions with other plugins.

--

Jason Potkanski
Tribune Technology


On 3/24/10 10:06 AM, "Otto" <otto at ottodestruct.com> wrote:

On Tue, Mar 23, 2010 at 6:06 PM, Peter van der Does
<peter at avirtualhome.com> wrote:
> Everybody knows, or at least should know, that storing every variable
> as an option is a bad idea. You usually use an array and store the
> array.

I discuss some of this in my Settings API tutorial:
http://ottopress.com/2009/wordpress-settings-api-tutorial/

But, in general, the way you want to do it is as follows: Anything
that you will load all the options for at once (presumably because
you're using all or most of them) should be in one single option. The
majority of plugins should put all their options in one field, for
simplicity. Only rarely do you actually need extra options fields.



From jer at simianuprising.com  Wed Mar 24 18:19:56 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 24 Mar 2010 14:19:56 -0400
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <1269299036.2137.34.camel@rivalry.c7.campus.utcluj.ro>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
	<1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>
	<421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>
	<1269299036.2137.34.camel@rivalry.c7.campus.utcluj.ro>
Message-ID: <e1202cb11003241119jc9e3cf8y47e26c8438dcd836@mail.gmail.com>

My biggest request would be to handle various activities more
accurately, especially WRT trac and codex. Any tiny change I make on
the forum is noted in detail but only new trac tickets created are
marked. I'd like to see trac comments or at least patch uploads listed
there, as that is often a better marker of activity than new tickets.
Similarly any  edit on the codex is worth at least as much as a forum
post, so those should be logged as well.

Another small change would be to show numbers next to the links to
different activity types at the top. That would cover a lot of ground
in terms of quickly seeing how much stuff people are doing, as well as
making it easy to check a specific one (like how many codex edits or
how many trac patches).

I'm not sure how hot I am for a karma system, it seems kind of
awkward. If nothing else it should definitely be designed with the
goal of making awesome contributors shine a little extra without
making anyone look bad or inactive.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From otto at ottodestruct.com  Wed Mar 24 18:42:21 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 24 Mar 2010 13:42:21 -0500
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <C7CFBC8A.2270%jpotkanski@tribune.com>
References: <161617691003240806n7c9a38c3v500de98fc2bc5fa5@mail.gmail.com> 
	<C7CFBC8A.2270%jpotkanski@tribune.com>
Message-ID: <161617691003241142v1e100c1ap2d5c4e514baacc28@mail.gmail.com>

On Wed, Mar 24, 2010 at 12:56 PM, Potkanski, Jason
<jpotkanski at tribune.com> wrote:
> Storing database variables in an array should be considered a bad practice. Doing this is as an convenient  hack that shortens plugin design but has significant consequences.

Many people disagree with you on this. I'm one of those people.

Serializing your options is not a "hack". It's the preferred method. Why?
- Speed: Pulling one row out of the database is faster than pulling
dozens of them.
- Simplicity: Having my options all together makes them easier to
reference instead of having dozens of get_options calls.
- Ease of design: Making settings pages which all use similar options
is easier this way. No need for dozens of "register_setting" calls,
dozens of slow get_options calls hitting the memory cache or the
database, reduced numbers of SQL queries, etc.

> Serialized data in the blog options table denormalizes the database. ReCaptcha uses one blog option setting called reCaptcha. If I want to update the keys across all my blogs in a wordpress MU install, I can not do it via SQL alone, I have to write a php plugin to tinker with the values. (Yes, I know reCaptcha has MU installation option and configuration file). Where I could have help from a DBA to fix something, I now need a developer.

MySQL has search and replace capabilities which work very nicely,
actually, and they can search and replace inside serialized data just
as easily as they can in non-serialized data. You don't need a
developer to adjust things. Although it does strike me as rather
trivial to write php code which basically says "include wp-load.php;
$o = get_option('whatever'); $o['whatever'] = new value;
update_option('whatever',$o);"

> Denormalization also means I couldn't have any systems integration or monitoring on database values without custom plugins.

They're stored as strings. What's so hard about monitoring strings?

> Other programming languages such as Java or Ruby don't have the same serialization functions PHP does, so any other development work that may need access to Wordpress data is restricted to PHP.

Java has tons and tons of serialization stuff, actually. I suppose
you've never seen "implements Serializable"?

Admittedly, the syntax is not the same between the two, in which case
you could either implement a parser (google will find one for you
quickly), or you could switch the code to use a common interchange
format. Probably the easiest way would be to use JSON. Or perhaps XML,
if you swing that way.

> There are autoload features of blog options tables which many plugins are not taking advantage of.

Autoload defaults to enabled, so unless the plugin specifically
disables it for its own options, then it is taking advantage of it.

> There may also be performance penalties to serializing and deserializing arrays all the time that cause performance problems on high traffic sites.

Serialization is built into the WP core. ALL options in WordPress get
serialized and unserialized. If performance was a problem, then it
already would be.

> Correct practice should be to avoid serialized arrays where possible and use proper prefixing in blog options to avoid collisions with other plugins.

I disagree. Correct practice would be to store your options in a
single array as much as possible and to let WordPress handle the
serialization for you as necessary. Only separate options out when you
have a different load case for them (such as options you only need in
specific places and not every time, large options, etc).

-Otto

From wp at andrewnacin.com  Wed Mar 24 18:55:11 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 24 Mar 2010 14:55:11 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <D6066C72-5282-49EB-9E21-55B49D08AB33@newclarity.net>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com> 
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com> 
	<911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
	<4cc4de141003222312m37fc86b9q6ccbfcc9a5820adc@mail.gmail.com> 
	<op.u91juxy9r6yny2@perplexifikator.speedport-w-303v-typ-a> 
	<4cc4de141003240004h6d22edbcye1386312710dccb@mail.gmail.com> 
	<D6066C72-5282-49EB-9E21-55B49D08AB33@newclarity.net>
Message-ID: <4cc4de141003241155l47473e14o4f488aa59782fb91@mail.gmail.com>

>
> Wouldn't it work to create a child theme of the current theme that only
> contains the files being edited?


Unless of course it's a child theme itself. One major idea for the project
would be for child themes to be generated as part of the theme editing
process to begin with, that way the initial theme remains unmodified.

From wp at andrewnacin.com  Wed Mar 24 18:58:59 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 24 Mar 2010 14:58:59 -0400
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <161617691003241142v1e100c1ap2d5c4e514baacc28@mail.gmail.com>
References: <161617691003240806n7c9a38c3v500de98fc2bc5fa5@mail.gmail.com> 
	<C7CFBC8A.2270%jpotkanski@tribune.com>
	<161617691003241142v1e100c1ap2d5c4e514baacc28@mail.gmail.com>
Message-ID: <4cc4de141003241158m638dead3w8bc69972eff8aefb@mail.gmail.com>

>> There are autoload features of blog options tables which many plugins are
not taking advantage of.

> Autoload defaults to enabled, so unless the plugin specifically disables
it for its own options, then it is taking advantage of it.

And the converse, if you have a complex plugin with a number of options that
should not be autoloaded, then consider two options for your plugin: one
that contains options to be autoloaded, and one that does not. This is a
rare use case but is helpful.

From wp at andrewnacin.com  Wed Mar 24 19:00:29 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 24 Mar 2010 15:00:29 -0400
Subject: [wp-hackers] Like to participate Gsoc praogram
In-Reply-To: <b9d4ccf61003241044y1e92da3ck391c4e04d9940afb@mail.gmail.com>
References: <b9d4ccf61003241044y1e92da3ck391c4e04d9940afb@mail.gmail.com>
Message-ID: <4cc4de141003241200l14167305x13b215bc766b617f@mail.gmail.com>

>Currently I?m interested in the Idea "BuddyPress"<
http://codex.wordpress.org/GSoC2010#BuddyPress>

I would venture over to #buddypress-dev on IRC and talk with apeatling and
jjj, the two lead BP devs.

From stas at nerd.ro  Wed Mar 24 19:08:34 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Wed, 24 Mar 2010 21:08:34 +0200
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <e1202cb11003241119jc9e3cf8y47e26c8438dcd836@mail.gmail.com>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
	<1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>
	<421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>
	<1269299036.2137.34.camel@rivalry.c7.campus.utcluj.ro>
	<e1202cb11003241119jc9e3cf8y47e26c8438dcd836@mail.gmail.com>
Message-ID: <1269457714.3087.186.camel@rivalry.c7.campus.utcluj.ro>

?n data de Mi, 24-03-2010 la 14:19 -0400, Jeremy Clarke a scris:
> My biggest request would be to handle various activities more
> accurately, especially WRT trac and codex. Any tiny change I make on
> the forum is noted in detail but only new trac tickets created are
> marked. I'd like to see trac comments or at least patch uploads listed
> there, as that is often a better marker of activity than new tickets.
> Similarly any  edit on the codex is worth at least as much as a forum
> post, so those should be logged as well.
> 

You're right, the main goal is to achieve all the user activities
mirrored and the integration with trac will surely take the biggest
slice in the work that has to be done. I'm also familiar with python
programming language, so if there will be something trac can't offer,
we'll hack it.

> Another small change would be to show numbers next to the links to
> different activity types at the top. That would cover a lot of ground
> in terms of quickly seeing how much stuff people are doing, as well as
> making it easy to check a specific one (like how many codex edits or
> how many trac patches).
> 

Well, we said before that stuff like that can be just tagged and after
filtered. (I saw nice tagging on stack overflow,
ex:http://stackoverflow.com/users/4/joel-spolsky ). I believe showing
how many times a user was tagged in `patching` won't be a problem. (ex.
Codex (3 edits), WordPress (30 commits, 10 comments, 2 patches, 1 bug),
Plugins (3 projects), bbPress (1 patch, 10 comments). If I'll manage to
correctly store everything in the db, it will be very easy to show up
the results.

I think my first thing that will be is to sit and decide what services
will be indexed and what kind of activities those will provide, and the
second one is to decide what is the best way to store it in the db
preserving relationships. A good thing is that WordPress uses a lot of
trac, so hacking it in one place will help me everywhere I will have to
deal with code management. 

> I'm not sure how hot I am for a karma system, it seems kind of
> awkward. If nothing else it should definitely be designed with the
> goal of making awesome contributors shine a little extra without
> making anyone look bad or inactive.
> 

Yep, as Justin mentioned, `people like karma points` so it's just an
easy way of showing an active user participation.


Thank you. Hope to hear more and more thoughts on this topic.
For example an interesting thing will be to also index the IRC
participation. I can see a lot of traffic on #wp and #wp-dev, I believe
there are guys who will never contribute to codex, but If you'll ask on
IRC, they will surely help you. Also, a mate from wp-ru (Sulatan, hope
I'm not wrong) asked some weeks ago if it's possible to show up in his
profile the locale site/forums participation. Such aspects of the idea
are also interesting.


-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From mikeschinkel at newclarity.net  Wed Mar 24 19:10:42 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 24 Mar 2010 15:10:42 -0400
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <4cc4de141003241155l47473e14o4f488aa59782fb91@mail.gmail.com>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com>
	<911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
	<4cc4de141003222312m37fc86b9q6ccbfcc9a5820adc@mail.gmail.com>
	<op.u91juxy9r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<4cc4de141003240004h6d22edbcye1386312710dccb@mail.gmail.com>
	<D6066C72-5282-49EB-9E21-55B49D08AB33@newclarity.net>
	<4cc4de141003241155l47473e14o4f488aa59782fb91@mail.gmail.com>
Message-ID: <0BF37548-1300-472D-8558-098FA7037C66@newclarity.net>

On Mar 24, 2010, at 2:55 PM, Andrew Nacin wrote:
>> Wouldn't it work to create a child theme of the current theme that only
>> contains the files being edited?
> Unless of course it's a child theme itself. One major idea for the project
> would be for child themes to be generated as part of the theme editing
> process to begin with, that way the initial theme remains unmodified.

Ah, I made an invalid assumption; that you could chain child themes.  I just tested it and apparently you cannot. 

So you are correct, it would not work. That is unless of course chaining of themes were made possible.  There might be some additional value to doing that.

-Mike

From info at toscho.de  Wed Mar 24 19:14:35 2010
From: info at toscho.de (Thomas Scholz)
Date: Wed, 24 Mar 2010 20:14:35 +0100
Subject: [wp-hackers] Child themes, theme revisions, and the theme editor
In-Reply-To: <4cc4de141003241155l47473e14o4f488aa59782fb91@mail.gmail.com>
References: <4cc4de141003221713n5099e9c3pa49a17f170857c08@mail.gmail.com>
	<C7637A07-5CC6-4947-ABA5-CE6F49319D88@newclarity.net>
	<4cc4de141003222223n34b561dbxeefc9b022deba29e@mail.gmail.com>
	<911BD19E-0FEA-45E5-A2E7-11B128E8875C@newclarity.net>
	<4cc4de141003222312m37fc86b9q6ccbfcc9a5820adc@mail.gmail.com>
	<op.u91juxy9r6yny2@perplexifikator.speedport-w-303v-typ-a>
	<4cc4de141003240004h6d22edbcye1386312710dccb@mail.gmail.com>
	<D6066C72-5282-49EB-9E21-55B49D08AB33@newclarity.net>
	<4cc4de141003241155l47473e14o4f488aa59782fb91@mail.gmail.com>
Message-ID: <op.u926elzhr6yny2@perplexifikator.speedport-w-303v-typ-a>

Andrew Nacin:

>> Wouldn't it work to create a child theme of the current theme that only
>> contains the files being edited?
>
> Unless of course it's a child theme itself.

I guess this can easily be detected. I?m not sure about ?grand child?  
themes, but a sibling thme should be possible?

> One major idea for the project
> would be for child themes to be generated as part of the theme editing
> process to begin with, that way the initial theme remains unmodified.

So WP has to check if the initial theme is a child anyway.

$is_child = (TEMPLATEPATH != STYLESHEETPATH);

Thomas

-- 
http://toscho.de

From peter at avirtualhome.com  Wed Mar 24 19:28:24 2010
From: peter at avirtualhome.com (Peter van der Does)
Date: Wed, 24 Mar 2010 15:28:24 -0400
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <C7CFBC8A.2270%jpotkanski@tribune.com>
References: <161617691003240806n7c9a38c3v500de98fc2bc5fa5@mail.gmail.com>
	<C7CFBC8A.2270%jpotkanski@tribune.com>
Message-ID: <20100324152824.445caaa6@montecarlo.grandprix.int>

On Wed, 24 Mar 2010 12:56:42 -0500
"Potkanski, Jason" <jpotkanski at tribune.com> wrote:

> Storing database variables in an array should be considered a bad
> practice. Doing this is as an convenient  hack that shortens plugin
> design but has significant consequences.
> 
> Serialized data in the blog options table denormalizes the database.
> ReCaptcha uses one blog option setting called reCaptcha. If I want to
> update the keys across all my blogs in a wordpress MU install, I can
> not do it via SQL alone, I have to write a php plugin to tinker with
> the values. (Yes, I know reCaptcha has MU installation option and
> configuration file). Where I could have help from a DBA to fix
> something, I now need a developer.
> 
> Denormalization also means I couldn't have any systems integration or
> monitoring on database values without custom plugins. Other
> programming languages such as Java or Ruby don't have the same
> serialization functions PHP does, so any other development work that
> may need access to Wordpress data is restricted to PHP.
> 
> There are autoload features of blog options tables which many plugins
> are not taking advantage of.
> 
> There may also be performance penalties to serializing and
> deserializing arrays all the time that cause performance problems on
> high traffic sites.
> 
> Correct practice should be to avoid serialized arrays where possible
> and use proper prefixing in blog options to avoid collisions with
> other plugins.
> 
> --
> 
> Jason Potkanski
> Tribune Technology
> 
I understand what you are saying, so what is your solution to this
problem?

Storing every option separately in the WordPress options table creates
an overhead on MySQL calls. Reading the database 10 times for 10
options would be a lot slower as calling the database 1 times and
unserializing the option.

Currently under WordPress you either have to read the database 10 times
for 10 different options or serialize the data and use 1 database call.
I think the 1 call would be quicker.

I can think of a solution that would take out the serialization but it means rewriting the
get/update/set_option functions and adding a table.


-- 
Peter van der Does

GPG key: E77E8E98

IRC: Ganseki on irc.freenode.net
Twitter: @petervanderdoes

WordPress Plugin Developer
Blog: http://blog.avirtualhome.com
Forums: http://forums.avirtualhome.com
Twitter: @avhsoftware

From mikeschinkel at newclarity.net  Wed Mar 24 19:34:59 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 24 Mar 2010 15:34:59 -0400
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <161617691003241142v1e100c1ap2d5c4e514baacc28@mail.gmail.com>
References: <161617691003240806n7c9a38c3v500de98fc2bc5fa5@mail.gmail.com>
	<C7CFBC8A.2270%jpotkanski@tribune.com>
	<161617691003241142v1e100c1ap2d5c4e514baacc28@mail.gmail.com>
Message-ID: <8B4AF37A-F63A-4C17-AA8B-E955CCC7F6C2@newclarity.net>

On Mar 24, 2010, at 2:42 PM, Otto wrote:
> MySQL has search and replace capabilities which work very nicely,
> actually, and they can search and replace inside serialized data just
> as easily as they can in non-serialized data. You don't need a
> developer to adjust things. 

I'm not wading into this debate but am curious how MySQL can replace data back into the database for PHP serialized data?  Let's take, for example, the option for the Twenty Ten template (line break in the email are only for clarity):

	option_name: 
		mods_Twenty Ten

	option_value: 
		a:2:{s:12:"header_image";
			s:66:"http://example.com/wp-content/uploads/2010/03/header.png";
			s:16:"background_image";
			s:70:"http://example.com/wp-content/uploads/2010/03/background.jpg";}

Now if I run this in MySQL:

	UPDATE wp_options
	SET option_value = REPLACE(option_value,'/header.png','/new-header.png')
	WHERE option_name='mods_Twenty Ten'

...it will corrupt the data from PHP's unserialize perspective because the string lengths will no longer be correct. 

Is there some other way to update PHP Serialized arrays directly in MySQL that I do not know about?

-Mike
	

From otto at ottodestruct.com  Wed Mar 24 19:43:48 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 24 Mar 2010 14:43:48 -0500
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <8B4AF37A-F63A-4C17-AA8B-E955CCC7F6C2@newclarity.net>
References: <161617691003240806n7c9a38c3v500de98fc2bc5fa5@mail.gmail.com> 
	<C7CFBC8A.2270%jpotkanski@tribune.com>
	<161617691003241142v1e100c1ap2d5c4e514baacc28@mail.gmail.com> 
	<8B4AF37A-F63A-4C17-AA8B-E955CCC7F6C2@newclarity.net>
Message-ID: <161617691003241243j8ca0e0sde6be7dd96dd48db@mail.gmail.com>

On Wed, Mar 24, 2010 at 2:34 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> ...it will corrupt the data from PHP's unserialize perspective because the string lengths will no longer be correct.
>
> Is there some other way to update PHP Serialized arrays directly in MySQL that I do not know about?

No, you just don't have to care about that. Unserializing an array
with a wrong string length generates a Notice error, but the
unserialize is still successful. And the maybe_unserialize() function
suppresses errors on the call to unserialize. So it'll still work and
the string size will get fixed the next time the option is updated.

-Otto

From jpotkanski at tribune.com  Wed Mar 24 19:53:54 2010
From: jpotkanski at tribune.com (Potkanski, Jason)
Date: Wed, 24 Mar 2010 14:53:54 -0500
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <161617691003241142v1e100c1ap2d5c4e514baacc28@mail.gmail.com>
Message-ID: <C7CFD802.2280%jpotkanski@tribune.com>


On 3/24/10 1:42 PM, "Otto" <otto at ottodestruct.com> wrote:

> On Wed, Mar 24, 2010 at 12:56 PM, Potkanski, Jason
> <jpotkanski at tribune.com> wrote:
>> Storing database variables in an array should be considered a bad practice.
>> Doing this is as an convenient  hack that shortens plugin design but has
>> significant consequences.
>
> Many people disagree with you on this. I'm one of those people.
>
> Serializing your options is not a "hack". It's the preferred method. Why?
> - Speed: Pulling one row out of the database is faster than pulling
> dozens of them
> - Simplicity: Having my options all together makes them easier to
> reference instead of having dozens of get_options calls.
> - Ease of design: Making settings pages which all use similar options
> is easier this way. No need for dozens of "register_setting" calls,
> dozens of slow get_options calls hitting the memory cache or the
> database, reduced numbers of SQL queries, etc.

I'll sum this as this method gives plugin developers:
Fast Development Speed
Lower Network Traffic (via smaller DB call)
versus
More Memory Use (unneeded options potentially being loaded)
Increased Server CPU time (calls to serialize, deserialize and the preg_match to autodetect)
Database Denormalized. (RDBMS nightmare)



>> Serialized data in the blog options table denormalizes the database.
>> ReCaptcha uses one blog option setting called reCaptcha. If I want to update
>> the keys across all my blogs in a wordpress MU install, I can not do it via
>> SQL alone, I have to write a php plugin to tinker with the values. (Yes, I
>> know reCaptcha has MU installation option and configuration file). Where I
>> could have help from a DBA to fix something, I now need a developer.
>
> MySQL has search and replace capabilities which work very nicely,
> actually, and they can search and replace inside serialized data just
> as easily as they can in non-serialized data. You don't need a
> developer to adjust things. Although it does strike me as rather
> trivial to write php code which basically says "include wp-load.php;
> $o = get_option('whatever'); $o['whatever'] = new value;
> update_option('whatever',$o);"

I really want to see this MySQL easy regex search and replace inside serialized data. Easy and regex never go hand in hand.

You didn't address the database denormalization issue. That's a severe one. If plugin developers are not going to normalize their data, why use the blog options table at all? Use a flat file.

>> Denormalization also means I couldn't have any systems integration or
>> monitoring on database values without custom plugins.
>
> They're stored as strings. What's so hard about monitoring strings?

Lets say I want to write a Nagios monitor of a certain DB value of a plugin. In this case I want to monitor the roles of a blog (stored as serialized data) for security reasons. I couldn't just alter a Nagios standard function that can make a simple select call, I would have to write something to pull the data , deserialize it and make sure it is all correct.

>> Other programming languages such as Java or Ruby don't have the same
>> serialization functions PHP does, so any other development work that may need
>> access to Wordpress data is restricted to PHP.
>
> Java has tons and tons of serialization stuff, actually. I suppose
> you've never seen "implements Serializable"?
>
> Admittedly, the syntax is not the same between the two, in which case
> you could either implement a parser (google will find one for you
> quickly), or you could switch the code to use a common interchange
> format. Probably the easiest way would be to use JSON. Or perhaps XML,
> if you swing that way.

I've written stuff in java that implements serializable. You use this technique with Tomcat to make all server variables of an application stay persistent when the server is restarted. Or when you have multiple tomcat instances and want to share session data properly. You don't use it to dump java objects to the DB.

>>
>> Correct practice should be to avoid serialized arrays where possible and use
>> proper prefixing in blog options to avoid collisions with other plugins.
>
> I disagree. Correct practice would be to store your options in a
> single array as much as possible and to let WordPress handle the
> serialization for you as necessary. Only separate options out when you
> have a different load case for them (such as options you only need in
> specific places and not every time, large options, etc).

I think we can have the best of both worlds. From the easy plugin design perspective, if you just throw an array at set_option or plugin option, it should be able to handle storing those options automatically. From my database normalization perspective, the set_option functions probably shouldn't use the serialize/deserialize methods if it can be avoided.

There are some further replies on this thread that will be interesting.

--

Jason Potkanski
Tribune Technology





From mikeschinkel at newclarity.net  Wed Mar 24 20:21:39 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 24 Mar 2010 16:21:39 -0400
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <161617691003241243j8ca0e0sde6be7dd96dd48db@mail.gmail.com>
References: <161617691003240806n7c9a38c3v500de98fc2bc5fa5@mail.gmail.com>
	<C7CFBC8A.2270%jpotkanski@tribune.com>
	<161617691003241142v1e100c1ap2d5c4e514baacc28@mail.gmail.com>
	<8B4AF37A-F63A-4C17-AA8B-E955CCC7F6C2@newclarity.net>
	<161617691003241243j8ca0e0sde6be7dd96dd48db@mail.gmail.com>
Message-ID: <820F4B37-D260-4DB8-A646-DF762B4E93AF@newclarity.net>

On Mar 24, 2010, at 3:43 PM, Otto wrote:
> On Wed, Mar 24, 2010 at 2:34 PM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> ...it will corrupt the data from PHP's unserialize perspective because the string lengths will no longer be correct.
>> 
>> Is there some other way to update PHP Serialized arrays directly in MySQL that I do not know about?
> 
> No, you just don't have to care about that. Unserializing an array
> with a wrong string length generates a Notice error, but the
> unserialize is still successful. And the maybe_unserialize() function
> suppresses errors on the call to unserialize. So it'll still work and
> the string size will get fixed the next time the option is updated.

Thanks for the clarification.

So does WordPress do maybe_unserialize() everywhere it unserializes to ensure the errors are suppressed?

My takeaway is that it's an acceptable hack at time while at other times it can result in data of actual data.  For example, if I wanted to change one but not all similar values in a complex option I could easily overwrite other data that I hadn't intended to overwrite.

So all options in one array, though having numerous benefits, are not a panacea and are not appropriate in all cases.

-Mike

From jpotkanski at tribune.com  Wed Mar 24 20:24:55 2010
From: jpotkanski at tribune.com (Potkanski, Jason)
Date: Wed, 24 Mar 2010 15:24:55 -0500
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <20100324152824.445caaa6@montecarlo.grandprix.int>
Message-ID: <C7CFDF47.2285%jpotkanski@tribune.com>



On 3/24/10 2:28 PM, "Peter van der Does" <peter at avirtualhome.com> wrote:

On Wed, 24 Mar 2010 12:56:42 -0500
"Potkanski, Jason" <jpotkanski at tribune.com> wrote:
>
>>
>> Correct practice should be to avoid serialized arrays where possible
>> and use proper prefixing in blog options to avoid collisions with
>> other plugins.
>>
>
> Ils understand what you are saying, so what is your solution to this
> problem?

> Storing every option separately in the WordPress options table creates
> an overhead on MySQL calls. Reading the database 10 times for 10
> options would be a lot slower as calling the database 1 times and
> unserializing the option.

wp_load_options() bulk loads all these options with one DB call. Most of the time the get_option is going to hit the memory cache.


> I can think of a solution that would take out the serialization but it means
> rewriting the
> get/update/set_option functions and adding a table.

Not sure if you need the separate table.

I would propose the a new define "WP_NORMALIZE_DB" or some such which would use different version of the get/update/set_option functions that wouldn't serialize the data. It would probably require an addition to the schema options table of a 'child' column so that it relates to a master option.

--

Jason Potkanski
Tribune Technology



From otto at ottodestruct.com  Wed Mar 24 20:58:13 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 24 Mar 2010 15:58:13 -0500
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <C7CFD802.2280%jpotkanski@tribune.com>
References: <161617691003241142v1e100c1ap2d5c4e514baacc28@mail.gmail.com> 
	<C7CFD802.2280%jpotkanski@tribune.com>
Message-ID: <161617691003241358s4181f49cme3d4393f323b4308@mail.gmail.com>

Too many posts to reply to. Concatenating responses. Trimming the fat.

On Wed, Mar 24, 2010 at 2:53 PM, Potkanski, Jason
<jpotkanski at tribune.com> wrote:
> More Memory Use (unneeded options potentially being loaded)

Memory use is basically the same, or less. Like you said,
load_all_options loads them up anyway. Array storage is likely more
efficent.

> I really want to see this MySQL easy regex search and replace inside serialized data. Easy and regex never go hand in hand.

I never said anything about regex. If you're having to do regex, then
you're outside the scope of SQL statements to begin with, in which
case you'd have to write PHP regardless.

> You didn't address the database denormalization issue. That's a severe one. If plugin developers are not going to normalize their data, why use the blog options table at all? Use a flat file.

WordPress does not use "normalized" database design in any sense of
the term. IMO, normalization is a crutch for bad development practices
and an excuse to give DBA's too much power that they frankly should
never have been allowed to have in the first place.

> Lets say I want to write a Nagios monitor of a certain DB value of a plugin. In this case I want to monitor the roles of a blog (stored as serialized data) for security reasons. I couldn't just alter a Nagios standard function that can make a simple select call, I would have to write something to pull the data , deserialize it and make sure it is all correct.

Not necessarily. It depends on what you're trying to detect. For
something like that, all you really need to detect is when it changes.
Unless you are concerned about some specific content piece of the
value, of course. If you're wanting to monitor the roles as a whole,
then you're only concerned about changes to them in general instead of
a specific type of change.

> I've written stuff in java that implements serializable. You use this technique with Tomcat to make all server variables of an application stay persistent when the server is restarted. Or when you have multiple tomcat instances and want to share session data properly. You don't use it to dump java objects to the DB.

You're thinking too limited. Serializable can be used anytime you want
to turn a java object (with state information) into a streaming type
of output which can be restored to the object again. And yes, you most
certainly can use this technique to produce, say, a string which you
can store in a database and restore from the database again. I know of
several systems that do things like this.

> I think we can have the best of both worlds. From the easy plugin design perspective, if you just throw an array at set_option or plugin option, it should be able to handle storing those options automatically. From my database normalization perspective, the set_option functions probably shouldn't use the serialize/deserialize methods if it can be avoided.

If set_option and get_option didn't implement serialize automatically,
it would be necessary to do it yourself, to avoid putting multiple
options into the database. In other words, your "database
normalization" is the very thing that I consider undesirable in the
first place.

See, you seem to think that having 10 rows for 10 options is a good
thing. I say that if I always need all of those 10 options together,
then I should have them all together and in only 1 row of the
database. I don't need "1 option" at most places, I need all 10
options at most places.

Think about it, when do most plugins need options?
- At their settings screens, where they are displaying/changing those
options all at once.
- When they produce their output, which means that the options are
needed to produce said output. And usually, you need all of them to
produce that output. Or, if not all, then most of them. It's a very,
very rare case where I only need 1 or 2 of my plugin options in a
single page generation.

On Wed, Mar 24, 2010 at 3:21 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> So does WordPress do maybe_unserialize() everywhere it unserializes to ensure the errors are suppressed?

Yes, get_option calls it.

> My takeaway is that it's an acceptable hack at time while at other times it can result in data of actual data.  For example, if I wanted to change one but not all similar values in a complex option I could easily overwrite other data that I hadn't intended to overwrite.

That would be a plugin programming error though, not a user error. And
it's one that is easy enough to avoid.

> So all options in one array, though having numerous benefits, are not a panacea and are not appropriate in all cases.

Not in all cases, no. Nothing is ever appropriate in "all" cases.

However, in *most* cases it's the best way to do it.


On Wed, Mar 24, 2010 at 3:24 PM, Potkanski, Jason
<jpotkanski at tribune.com> wrote:
> wp_load_options() bulk loads all these options with one DB call. Most of the time the get_option is going to hit the memory cache.

Loading 10 rows of data takes more time than loading 1 row with the
same data. Seriously, it's a measurable amount.

> Not sure if you need the separate table.
>
> I would propose the a new define "WP_NORMALIZE_DB" or some such which would use different version of the get/update/set_option functions that wouldn't serialize the data. It would probably require an addition to the schema options table of a 'child' column so that it relates to a master option.

Negative. That would make plugin programming far more complex, as now
it would have to account for both cases and do it's own
(un)serialization when the user had enabled that. Very bad way to do
things.

-Otto

From bernard.d.tremblay at gmail.com  Wed Mar 24 21:00:21 2010
From: bernard.d.tremblay at gmail.com (Bernard D. Tremblay (ben))
Date: Wed, 24 Mar 2010 15:00:21 -0600
Subject: [wp-hackers] Failure in import
In-Reply-To: <4BA90D0D.5040106@gmail.com>
References: <mailman.15.1269345602.11187.wp-hackers@lists.automattic.com>
	<4BA90D0D.5040106@gmail.com>
Message-ID: <4BAA7D65.6010002@gmail.com>

I just exported the (slightly) mangled blog I created and ... and most 
important: thanks for a lovely export function!
I went through the XML, ran a couple of macros, and cleaned up the glitches.

Q: is there some way I can delete all posts (534 total) and import the 
corrected XML? or is it just simpler to delete the whole thing and start 
from scratch? (I've got my custome theme local, so that's no biggie.)

/me loves getting it done!

bdt


From mikeschinkel at newclarity.net  Wed Mar 24 21:19:05 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 24 Mar 2010 17:19:05 -0400
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <161617691003241358s4181f49cme3d4393f323b4308@mail.gmail.com>
References: <161617691003241142v1e100c1ap2d5c4e514baacc28@mail.gmail.com>
	<C7CFD802.2280%jpotkanski@tribune.com>
	<161617691003241358s4181f49cme3d4393f323b4308@mail.gmail.com>
Message-ID: <837D325D-BA7E-49A9-B73B-A520059794EF@newclarity.net>

On Mar 24, 2010, at 4:58 PM, Otto wrote:
>> My takeaway is that it's an acceptable hack at time while at other times it can result in data of actual data.  For example, if I wanted to change one but not all similar values in a complex option I could easily overwrite other data that I hadn't intended to overwrite.
> 
> That would be a plugin programming error though, not a user error. And
> it's one that is easy enough to avoid.

But one that would be very hard to test for robustness.  It's the edge cases in that data that would cause problems, enough so that I don't think I could recommend updating data in serialized arrays via SQL except in rare cares.  If the data is not in serialized arrays then it's easy to ensure robustness.

The key takeaway here is that, while there are many benefits to storing data, this is one downside for which there is no good solution when SQL is really the best option.  Saying it's "easy" just glosses over the real concerns.  

I'm not arguing that people don't store options in normalized data vs. serialized arrays, I'm saying we just shouldn't imply a recommendation that they use SQL to update serialized arrays by telling them it is easy. They shouldn't do that and if they really do need to then serialized arrays are not the answer. Sadly the person with the use-case where it's not the answer isn't always the same person who decides how to store the option.)

-Mike

From jpotkanski at tribune.com  Wed Mar 24 21:43:31 2010
From: jpotkanski at tribune.com (Potkanski, Jason)
Date: Wed, 24 Mar 2010 16:43:31 -0500
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <161617691003241358s4181f49cme3d4393f323b4308@mail.gmail.com>
Message-ID: <C7CFF1B3.2295%jpotkanski@tribune.com>




On 3/24/10 3:58 PM, "Otto" <otto at ottodestruct.com> wrote:


>> You didn't address the database denormalization issue. That's a severe one.
>> If plugin developers are not going to normalize their data, why use the blog
>> options table at all? Use a flat file.
>
> WordPress does not use "normalized" database design in any sense of
> the term. IMO, normalization is a crutch for bad development practices
> and an excuse to give DBA's too much power that they frankly should
> never have been allowed to have in the first place.

DBAs on power trips are common for various other reasons. I have never seen anyone argue that normalization is a crutch or bad thing. You can skip it for performance reasons when justified - that should be very rare.


>> Not sure if you need the separate table.
>>
>> I would propose the a new define "WP_NORMALIZE_DB" or some such which would
>> use different version of the get/update/set_option functions that wouldn't
>> serialize the data. It would probably require an addition to the schema
>> options table of a 'child' column so that it relates to a master option.
>
> Negative. That would make plugin programming far more complex, as now
> it would have to account for both cases and do it's own
> (un)serialization when the user had enabled that. Very bad way to do
> things.

Set/get/update/wp_load_options/wp_options could be rewritten to not use serialization and provide a one stop point for disassembly and reassembly of an array of options from the db and back without relying on the plugin to do it. Probably two additional columns to the options table.


From otto at ottodestruct.com  Wed Mar 24 21:52:34 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 24 Mar 2010 16:52:34 -0500
Subject: [wp-hackers] How do you store multiple plugin options
In-Reply-To: <C7CFF1B3.2295%jpotkanski@tribune.com>
References: <161617691003241358s4181f49cme3d4393f323b4308@mail.gmail.com> 
	<C7CFF1B3.2295%jpotkanski@tribune.com>
Message-ID: <161617691003241452r7a66a8a8j3f03ee2ede618dd9@mail.gmail.com>

On Wed, Mar 24, 2010 at 4:43 PM, Potkanski, Jason
<jpotkanski at tribune.com> wrote:
> You can skip it for performance reasons when justified - that should be very rare.

I disagree and think that it's far more common than you think. JOINs
are bloody costly, and if your DB is truly normalized, then it often
takes far, far too many of those. And again, pulling 1 row is faster
than pulling 10, even if you only use one SELECT statement to do it.

> Set/get/update/wp_load_options/wp_options could be rewritten to not use serialization and provide a one stop point for disassembly and reassembly of an array of options from the db and back without relying on the plugin to do it. Probably two additional columns to the options table.

So for the case of set_option, having it split the array into pieces
and then execute a dozen SQL INSERT statements to an external database
server is somehow faster than simply running a built-in, compiled,
function across the data? Your logic escapes me here.

Your solution is slower, in all cases. And the "advantage" of having
separated options is basically non-existent for anybody who isn't
accessing the database directly (outside of the WordPress
environment). It just doesn't make any sense to do it that way, as far
as I can tell.

-Otto

From bernard.d.tremblay at gmail.com  Wed Mar 24 21:57:26 2010
From: bernard.d.tremblay at gmail.com (Bernard D. Tremblay (ben))
Date: Wed, 24 Mar 2010 15:57:26 -0600
Subject: [wp-hackers] Fixed Re: Failure in import
In-Reply-To: <4BAA7D65.6010002@gmail.com>
References: <mailman.15.1269345602.11187.wp-hackers@lists.automattic.com>
	<4BA90D0D.5040106@gmail.com> <4BAA7D65.6010002@gmail.com>
Message-ID: <4BAA8AC6.1050209@gmail.com>

In fact and actually there was no problem here.

1) there is a Select All button in Post Edit. (That was my first move: 
to delete all 534 posts.) It's there, but unlabled. (Thanks to JasonP 
for pointing me to it.) Expert users ignore things that trip the rest of 
us ... it's a cultural thing ...

2) WP Import checks for duplicates. Comprehensively and exhaustively? I 
don't know. But since I had made substantial changes in the XML I 
couldn't rely on that.

Bottom line: a wonderful set of tools, really. WP rocks steady!

Bernard D. Tremblay (ben) wrote:
> I just exported the (slightly) mangled blog I created and [...]


From scribu at gmail.com  Wed Mar 24 22:13:33 2010
From: scribu at gmail.com (scribu)
Date: Thu, 25 Mar 2010 00:13:33 +0200
Subject: [wp-hackers] Access files inside a plugin directory?
In-Reply-To: <161617691003240904x742e2603ja66b2708ddfcab93@mail.gmail.com>
References: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>
	<349fe48b1003221638v4a9f0f2cn1c8cf74ec3d48a33@mail.gmail.com>
	<e1202cb11003230718h43a96236pe4388939c7dce027@mail.gmail.com>
	<DF788D40-49D1-42AE-9BD9-CD67908FDF83@striderweb.com>
	<161617691003240904x742e2603ja66b2708ddfcab93@mail.gmail.com>
Message-ID: <349fe48b1003241513i7b9f0afcx87907b9eec23a8bc@mail.gmail.com>

Using the WP_PLUGIN_* constants is the most elegant solution by far.

I was able to set up a WP 2.9 install to point to the same plugin directory
as a trunk install. Makes testing a lot easier.


-- 
http://scribu.net

From jer at simianuprising.com  Thu Mar 25 00:45:01 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 24 Mar 2010 20:45:01 -0400
Subject: [wp-hackers] Access files inside a plugin directory?
In-Reply-To: <161617691003240904x742e2603ja66b2708ddfcab93@mail.gmail.com>
References: <b825b2cd1003221529r17f95f48lee082a0eca0d099b@mail.gmail.com>
	<349fe48b1003221638v4a9f0f2cn1c8cf74ec3d48a33@mail.gmail.com>
	<e1202cb11003230718h43a96236pe4388939c7dce027@mail.gmail.com>
	<DF788D40-49D1-42AE-9BD9-CD67908FDF83@striderweb.com>
	<161617691003240904x742e2603ja66b2708ddfcab93@mail.gmail.com>
Message-ID: <e1202cb11003241745j280de8b0madacf378d25d4014@mail.gmail.com>

On Wed, Mar 24, 2010 at 12:04 PM, Otto <otto at ottodestruct.com> wrote:
> Just noticed this thread, but yes, that is definitely preferable to
> symlinking anything. The whole purpose of those constants is
> specifically to allow you to move those directories to elsewhere in
> the filesystem.
>
> Constants you'd care about:
> WP_PLUGIN_DIR
> WP_PLUGIN_URL
> PLUGINDIR ?(backward compatibility)
> WPMU_PLUGIN_DIR
> WPMU_PLUGIN_URL
> MUPLUGINDIR (backward compatibility)

I considered using these instead of symlinks when they came out but my
experimentation with moving the content dirs let to an onslaught of
plugins that didn't work because they assumed wp-content in various
ways. It's kind of ironic that I am now being bitten in the ass by the
plugins that properly implement the movable directories.

Next time I have to deal with it I'll try out the new way. Maybe most
of the plugins I need will have been updated to the standards
#crossedfingers

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From stephen.tigner at gmail.com  Thu Mar 25 05:20:25 2010
From: stephen.tigner at gmail.com (Stephen Tigner)
Date: Thu, 25 Mar 2010 14:20:25 +0900
Subject: [wp-hackers] Idea for a GSoC project - Image annotation plugin
Message-ID: <19cbec831003242220x55c61ffak9eaf4bf738420bbf@mail.gmail.com>

I have an idea for a GSoC project I wanted to get some feedback on.
What I'd like to do is create an image annotation plugin for Wordpress
using (http://blog.flipbit.co.uk/2009/03/jquery-image-annotation-plugin.html)
this jQuery image annotation plugin and AJAX.

I was inspired by the implementation of this on dannychoo.com and
figure.fm (running on the Mirai Gaia platform), and wanted to bring
similar functionality to my Wordpress blogs.

Basically, in that implementation, readers can leave annotations as
comments that reference specific sections of an image. Much better
than having to say things like, "Who's that guy third from the left in
the second row?" Instead, you can say, "Who is this?" and just put
that as an annotation to the image, where the annotation box on the
image is around the person in question.

Now, as far as how the annotations are presented to the readers, there
are two scenarios that come to mind. One, which I've seen on some
sites, is to keep the annotations and comments completely separate.
The other is, like on Mirai Gaia, to make the annotations a special
kind of comment.

I prefer the latter, because then the annotations aren't removed from
the conversation. Instead, they become part of it, as I feel they
should be, and can be replied to (and handled) just like other
comments.

However, this brings up another question, as while there are post meta
and user meta tables, no such thing exists for comments. While I would
like to not have to add extra tables, it seems that to store the
relevant metadata about the annotation comments, a new table would be
required for this plugin. Does that sound reasonable?

Also, I would like to give said comments a slightly different
presentation than normal comments. For instance, include a thumbnail
link back up to the particular image the annotation is for. I can
probably add a filter to the comment_text function for that. However,
to trigger that, I was thinking of adding an additional comment type
of "annotation," and I was wondering if doing so would break things.

Sorry for the long-winded email, and thanks in advance. ^_^

-- Stephen

From wp at xentek.net  Thu Mar 25 07:54:02 2010
From: wp at xentek.net (Eric Marden)
Date: Thu, 25 Mar 2010 02:54:02 -0500
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <e002a22f1003221148v6452a3f5o3595996b3a2e83cb@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
	<4f8622411003221145k5ec59d1bq73e6bbb6825a9994@mail.gmail.com>
	<e002a22f1003221148v6452a3f5o3595996b3a2e83cb@mail.gmail.com>
Message-ID: <c4a1df4f1003250054q70b819f5odd66abbee89e5a6e@mail.gmail.com>

On Mon, Mar 22, 2010 at 1:48 PM, Arlen Beiler <arlenbee at gmail.com> wrote:

> Grep doesn't quite look like what I want. I want to do it mostly to satisfy
> my curiousity.


Ack is http://betterthangrep.com/ ... I use it for locating the source of
API Functions and its super fast. Still might not meet your needs (you
probably need the XREF docs, that have been linked to already), but ack was
made for grep'ing code (see what i did there).

~ Eric Marden

From wp at xentek.net  Thu Mar 25 07:57:45 2010
From: wp at xentek.net (Eric Marden)
Date: Thu, 25 Mar 2010 02:57:45 -0500
Subject: [wp-hackers] wordpress doesn't let you host example script
	files for download
In-Reply-To: <4f8622411003221945k4fb2ccecy40d1ea7d65ffdd8b@mail.gmail.com>
References: <4f8622411003221945k4fb2ccecy40d1ea7d65ffdd8b@mail.gmail.com>
Message-ID: <c4a1df4f1003250057j3bb34d4alf1498700dce3d9f4@mail.gmail.com>

On Mon, Mar 22, 2010 at 9:45 PM, Jue Wang <juewang at post.harvard.edu> wrote:

> I am wondering how to upload and serve script files as downloads on a WP

blog--say, as example code linked to from a blog post. For example, say I

want to provide a file named script.py.


Name the file *.phps or maybe try gist.github.com for embedding the scripts
source in the body of the post.

~ Eric Marden

From wp at xentek.net  Thu Mar 25 08:02:56 2010
From: wp at xentek.net (Eric Marden)
Date: Thu, 25 Mar 2010 03:02:56 -0500
Subject: [wp-hackers] Anyone want to help fix the Geeklog to Wordpress
	importer
In-Reply-To: <38C969BE-81A2-4A1A-81F3-C5683DF8EF52@graymerica.com>
References: <mailman.5628.1269042434.1345.wp-hackers@lists.automattic.com>
	<11d2290.19683.1277ad9d33d.Coremail.alexandertiger@163.com>
	<161617691003220747w68429060qaf177bf2242e11da@mail.gmail.com>
	<4cc4de141003220756l9d071ci1513451af274ef32@mail.gmail.com>
	<38C969BE-81A2-4A1A-81F3-C5683DF8EF52@graymerica.com>
Message-ID: <c4a1df4f1003250102v406dc39et1dae8742a0184547@mail.gmail.com>

On Mon, Mar 22, 2010 at 10:43 AM, Andrew Gray <andrew at graymerica.com> wrote:

> I am working on moving a World Music Website over to Geeklog for a
> non-profit.
>

You may also try the WP-Pro list:
http://lists.automattic.com/mailman/listinfo/wp-pro
I'm sure there are folks on there that need portfolio pieces and would jump
at the opportunity for some free press.

Just making sure though, you're moving them FROM Geeklog to WP? first line
of your original email didn't make that entirely clear.

Good Luck!



-- 

~ Eric Marden
------------------------------------------------------------------------------------------
I make WordPress do stuff: http://xentek.net/code/
Sometimes, I talk about it too: http://xentek.net/presentations/
Also, I tweet. A lot: http://twitter.com/xentek
------------------------------------------------------------------------------------------

From wp at xentek.net  Thu Mar 25 08:04:19 2010
From: wp at xentek.net (Eric Marden)
Date: Thu, 25 Mar 2010 03:04:19 -0500
Subject: [wp-hackers] Mailing List for Plugin Selection?
In-Reply-To: <E4D82281-7AF1-4628-85E0-489CA4EED0E4@newclarity.net>
References: <E4D82281-7AF1-4628-85E0-489CA4EED0E4@newclarity.net>
Message-ID: <c4a1df4f1003250104w15a33803x11b286bc81fad3d0@mail.gmail.com>

On Mon, Mar 22, 2010 at 9:34 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:
>
> What to you think about establishing a wp-plugins mailing list to support
> discussion around plugins?
>


What's wrong with doing that on this list?

-- 

~ Eric Marden
------------------------------------------------------------------------------------------
I make WordPress do stuff: http://xentek.net/code/
Sometimes, I talk about it too: http://xentek.net/presentations/
Also, I tweet. A lot: http://twitter.com/xentek
------------------------------------------------------------------------------------------

From mikeschinkel at newclarity.net  Thu Mar 25 08:28:19 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 25 Mar 2010 04:28:19 -0400
Subject: [wp-hackers] Mailing List for Plugin Selection?
In-Reply-To: <c4a1df4f1003250104w15a33803x11b286bc81fad3d0@mail.gmail.com>
References: <E4D82281-7AF1-4628-85E0-489CA4EED0E4@newclarity.net>
	<c4a1df4f1003250104w15a33803x11b286bc81fad3d0@mail.gmail.com>
Message-ID: <82B2782A-C0DA-4E8F-A9AD-6CC1745CFE03@newclarity.net>

On Mar 25, 2010, at 4:04 AM, Eric Marden wrote:
> On Mon, Mar 22, 2010 at 9:34 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
>> 
>> What to you think about establishing a wp-plugins mailing list to support
>> discussion around plugins?
> What's wrong with doing that on this list?

Simply because my impression has been that this list isn't really for this asking about what plugin to select but instead to discuss how to codes plugins (and related topics.)  Is that impression wrong?

Anyway, I think that people who have a lot of experience with plugins doing work for clients might either be intimidated by this list or simply leave when the religious wars break out. I was thinking a list where people frequently discuss plugin selection but not what should be added to core would cultivate more discussion on the topic.

-Mike


From listswphackers at mist.org.uk  Thu Mar 25 09:28:57 2010
From: listswphackers at mist.org.uk (mrmist)
Date: Thu, 25 Mar 2010 09:28:57 +0000
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <e1202cb11003241119jc9e3cf8y47e26c8438dcd836@mail.gmail.com>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
	<1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>
	<421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>
	<1269299036.2137.34.camel@rivalry.c7.campus.utcluj.ro>
	<e1202cb11003241119jc9e3cf8y47e26c8438dcd836@mail.gmail.com>
Message-ID: <LBM4CkBZzyqLFwHL@dsl-217-155-35-239.zen.co.uk>

In message <e1202cb11003241119jc9e3cf8y47e26c8438dcd836 at mail.gmail.com>, 
Jeremy Clarke <jer at simianuprising.com> writes
>
>I'm not sure how hot I am for a karma system, it seems kind of
>awkward. If nothing else it should definitely be designed with the
>goal of making awesome contributors shine a little extra without
>making anyone look bad or inactive.
>

Aye.  It would seem like a very difficult thing to achieve, would that. 
At least, to achieve fairly.  I moderate both the Codex and the forums, 
and it would pain me greatly to see someone getting karma points for 
spamming the forum / codex with useless bilge that is fit for the trash 
can, whilst quality responses that take a lot of time to craft "only" 
make 1 karma point.

Perhaps there could be some rating system applied to forum responses, or 
note could be taken over when an answer "resolves" a problem.

Then of course you have the question of how you assign karma for things 
such as time spent editing codex pages, or even moderating the forums 
(not that I'd particularly want such notoriety, but some folk might.)
-- 
mrmist

From wordpress at zed1.com  Thu Mar 25 09:31:14 2010
From: wordpress at zed1.com (Mike Little)
Date: Thu, 25 Mar 2010 09:31:14 +0000
Subject: [wp-hackers] Mailing List for Plugin Selection?
In-Reply-To: <82B2782A-C0DA-4E8F-A9AD-6CC1745CFE03@newclarity.net>
References: <E4D82281-7AF1-4628-85E0-489CA4EED0E4@newclarity.net> 
	<c4a1df4f1003250104w15a33803x11b286bc81fad3d0@mail.gmail.com> 
	<82B2782A-C0DA-4E8F-A9AD-6CC1745CFE03@newclarity.net>
Message-ID: <7235ce781003250231g4707d99fi3529bb2843d43944@mail.gmail.com>

On 25 March 2010 08:28, Mike Schinkel <mikeschinkel at newclarity.net> wrote:

> On Mar 25, 2010, at 4:04 AM, Eric Marden wrote:
> > On Mon, Mar 22, 2010 at 9:34 PM, Mike Schinkel
> > <mikeschinkel at newclarity.net>wrote:
> >>
> >> What to you think about establishing a wp-plugins mailing list to
> support
> >> discussion around plugins?
> > What's wrong with doing that on this list?
>
> Simply because my impression has been that this list isn't really for this
> asking about what plugin to select but instead to discuss how to codes
> plugins (and related topics.)  Is that impression wrong?
>
>
Your impression is correct Mike, this mailing list of for people hacking on
WordPress, writing code for plugins and themes, discussing bugs and patches
etc. (and the regular how-to-do-it-best flamewars)




> Anyway, I think that people who have a lot of experience with plugins doing
> work for clients might either be intimidated by this list or simply leave
> when the religious wars break out. I was thinking a list where people
> frequently discuss plugin selection but not what should be added to core
> would cultivate more discussion on the topic.
>
>
There is a WordPress group on LinkedIn which does a lot of what you are
looking for, people asking for recommendations for plugins, themes, etc. as
well as asking general advice.

You will need to have joined LinkedIn first (they do free memberships), and
the group is simply called WordPress
http://www.linkedin.com/groups?gid=154024  (I'm not sure the link will work
if you are not a member.)


Mike
-- 
Mike Little
http://zed1.com/

From stas at nerd.ro  Thu Mar 25 11:56:44 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Thu, 25 Mar 2010 13:56:44 +0200
Subject: [wp-hackers] Idea for a GSoC project - Image annotation plugin
In-Reply-To: <19cbec831003242220x55c61ffak9eaf4bf738420bbf@mail.gmail.com>
References: <19cbec831003242220x55c61ffak9eaf4bf738420bbf@mail.gmail.com>
Message-ID: <1269518204.2161.17.camel@rivalry.c7.campus.utcluj.ro>

?n data de Jo, 25-03-2010 la 14:20 +0900, Stephen Tigner a scris:
> I have an idea for a GSoC project I wanted to get some feedback on.
> What I'd like to do is create an image annotation plugin for Wordpress
> using (http://blog.flipbit.co.uk/2009/03/jquery-image-annotation-plugin.html)
> this jQuery image annotation plugin and AJAX.
> 
> I was inspired by the implementation of this on dannychoo.com and
> figure.fm (running on the Mirai Gaia platform), and wanted to bring
> similar functionality to my Wordpress blogs.
> 
> Basically, in that implementation, readers can leave annotations as
> comments that reference specific sections of an image. Much better
> than having to say things like, "Who's that guy third from the left in
> the second row?" Instead, you can say, "Who is this?" and just put
> that as an annotation to the image, where the annotation box on the
> image is around the person in question.
> 
> Now, as far as how the annotations are presented to the readers, there
> are two scenarios that come to mind. One, which I've seen on some
> sites, is to keep the annotations and comments completely separate.
> The other is, like on Mirai Gaia, to make the annotations a special
> kind of comment.
> 
> I prefer the latter, because then the annotations aren't removed from
> the conversation. Instead, they become part of it, as I feel they
> should be, and can be replied to (and handled) just like other
> comments.
> 
> However, this brings up another question, as while there are post meta
> and user meta tables, no such thing exists for comments. While I would
> like to not have to add extra tables, it seems that to store the
> relevant metadata about the annotation comments, a new table would be
> required for this plugin. Does that sound reasonable?
> 
> Also, I would like to give said comments a slightly different
> presentation than normal comments. For instance, include a thumbnail
> link back up to the particular image the annotation is for. I can
> probably add a filter to the comment_text function for that. However,
> to trigger that, I was thinking of adding an additional comment type
> of "annotation," and I was wondering if doing so would break things.
> 
> Sorry for the long-winded email, and thanks in advance. ^_^

You might be interested in reading this:
http://stas.nerd.ro/index.php/read/568
and this
http://bennadel.com/blog/1839-jQuery-Photo-Tagger-Plugin-For-Flickr-Style-Photo-Tagging.htm

O believe implementations considered are worth checking.


-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From stas at nerd.ro  Thu Mar 25 12:08:31 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Thu, 25 Mar 2010 14:08:31 +0200
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <LBM4CkBZzyqLFwHL@dsl-217-155-35-239.zen.co.uk>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
	<1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>
	<421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>
	<1269299036.2137.34.camel@rivalry.c7.campus.utcluj.ro>
	<e1202cb11003241119jc9e3cf8y47e26c8438dcd836@mail.gmail.com>
	<LBM4CkBZzyqLFwHL@dsl-217-155-35-239.zen.co.uk>
Message-ID: <1269518911.2161.27.camel@rivalry.c7.campus.utcluj.ro>

?n data de Jo, 25-03-2010 la 09:28 +0000, mrmist a scris:
> In message <e1202cb11003241119jc9e3cf8y47e26c8438dcd836 at mail.gmail.com>, 
> Jeremy Clarke <jer at simianuprising.com> writes
> >
> >I'm not sure how hot I am for a karma system, it seems kind of
> >awkward. If nothing else it should definitely be designed with the
> >goal of making awesome contributors shine a little extra without
> >making anyone look bad or inactive.
> >
> 
> Aye.  It would seem like a very difficult thing to achieve, would that. 
> At least, to achieve fairly.  I moderate both the Codex and the forums, 
> and it would pain me greatly to see someone getting karma points for 
> spamming the forum / codex with useless bilge that is fit for the trash 
> can, whilst quality responses that take a lot of time to craft "only" 
> make 1 karma point.
> 
> Perhaps there could be some rating system applied to forum responses, or 
> note could be taken over when an answer "resolves" a problem.
> 
> Then of course you have the question of how you assign karma for things 
> such as time spent editing codex pages, or even moderating the forums 
> (not that I'd particularly want such notoriety, but some folk might.)


Well, I wouldn't go that deep. As I said, If I go creating some kind of
api, than we can have even some ajax requests against it (something like
thumbs up / down right bellow profile username). Also adding the karma
point value as ametadata to activity and then having that recalculated
from time to time can be a solution.

Anyway, to be fair I can create a polldaddy to see what exactly
community wants.

Thanks for thoughts on forum integration. 



-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From hempsworth at googlemail.com  Thu Mar 25 12:15:21 2010
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Thu, 25 Mar 2010 12:15:21 +0000
Subject: [wp-hackers] Idea for a GSoC project - Image annotation plugin
In-Reply-To: <19cbec831003242220x55c61ffak9eaf4bf738420bbf@mail.gmail.com>
References: <19cbec831003242220x55c61ffak9eaf4bf738420bbf@mail.gmail.com>
Message-ID: <5a1dad881003250515t377a651asd862d5f4d108136f@mail.gmail.com>

Take a look at comment meta which was recently added to WP, which is
where you could save the annotation data.

It would be interesting to see if you could tie in tags, so you could
tag people or things in the photo, which would be added to the tags
for that post perhaps..

On Thursday, March 25, 2010, Stephen Tigner <stephen.tigner at gmail.com> wrote:
> I have an idea for a GSoC project I wanted to get some feedback on.
> What I'd like to do is create an image annotation plugin for Wordpress
> using (http://blog.flipbit.co.uk/2009/03/jquery-image-annotation-plugin.html)
> this jQuery image annotation plugin and AJAX.
>
> I was inspired by the implementation of this on dannychoo.com and
> figure.fm (running on the Mirai Gaia platform), and wanted to bring
> similar functionality to my Wordpress blogs.
>
> Basically, in that implementation, readers can leave annotations as
> comments that reference specific sections of an image. Much better
> than having to say things like, "Who's that guy third from the left in
> the second row?" Instead, you can say, "Who is this?" and just put
> that as an annotation to the image, where the annotation box on the
> image is around the person in question.
>
> Now, as far as how the annotations are presented to the readers, there
> are two scenarios that come to mind. One, which I've seen on some
> sites, is to keep the annotations and comments completely separate.
> The other is, like on Mirai Gaia, to make the annotations a special
> kind of comment.
>
> I prefer the latter, because then the annotations aren't removed from
> the conversation. Instead, they become part of it, as I feel they
> should be, and can be replied to (and handled) just like other
> comments.
>
> However, this brings up another question, as while there are post meta
> and user meta tables, no such thing exists for comments. While I would
> like to not have to add extra tables, it seems that to store the
> relevant metadata about the annotation comments, a new table would be
> required for this plugin. Does that sound reasonable?
>
> Also, I would like to give said comments a slightly different
> presentation than normal comments. For instance, include a thumbnail
> link back up to the particular image the annotation is for. I can
> probably add a filter to the comment_text function for that. However,
> to trigger that, I was thinking of adding an additional comment type
> of "annotation," and I was wondering if doing so would break things.
>
> Sorry for the long-winded email, and thanks in advance. ^_^
>
> -- Stephen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

-- 
-- Alex  (Hempsworth)

From mpwalsh8 at gmail.com  Thu Mar 25 13:11:49 2010
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Thu, 25 Mar 2010 09:11:49 -0400
Subject: [wp-hackers] Mailing List for Plugin Selection?
In-Reply-To: <E4D82281-7AF1-4628-85E0-489CA4EED0E4@newclarity.net>
References: <E4D82281-7AF1-4628-85E0-489CA4EED0E4@newclarity.net>
Message-ID: <bd35beb51003250611l18e745e6u8ea3c5be8b77eba2@mail.gmail.com>

On Mon, Mar 22, 2010 at 10:34 PM, Mike Schinkel <mikeschinkel at newclarity.net
> wrote:

> Hey all,
>
> I'm constantly coming across the need to ask questions about what plugin
> people recommend. For example, right now I need to select a
> slideshow/carousel plugin and be able to discuss about the pros and cons of
> each but I know that the wp-hackers is the wrong place for this.
>
> The support forums on wordpress.org don't work for me either, mostly
> because of lack of email notification.
>
> What to you think about establishing a wp-plugins mailing list to support
> discussion around plugins?
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

+1

I would welcome such a list.  Right now I am scrounging Google looking for a
plugin which allows Pages to be edited by anyone with Edit permissions as
opposed to just the owner or administrator.  It would be nice to bounce a
question out to a relevant group so I wouldn't have to go through the trial
and error process for each plugin I find which sort of meets my search.


-- 
--
Mike Walsh - mpwalsh at gmail.com

From scribu at gmail.com  Thu Mar 25 13:47:16 2010
From: scribu at gmail.com (scribu)
Date: Thu, 25 Mar 2010 15:47:16 +0200
Subject: [wp-hackers] Mailing List for Plugin Selection?
In-Reply-To: <7235ce781003250231g4707d99fi3529bb2843d43944@mail.gmail.com>
References: <E4D82281-7AF1-4628-85E0-489CA4EED0E4@newclarity.net>
	<c4a1df4f1003250104w15a33803x11b286bc81fad3d0@mail.gmail.com>
	<82B2782A-C0DA-4E8F-A9AD-6CC1745CFE03@newclarity.net>
	<7235ce781003250231g4707d99fi3529bb2843d43944@mail.gmail.com>
Message-ID: <349fe48b1003250647k7b80623dp2d1d677df69dde14@mail.gmail.com>

On Thu, Mar 25, 2010 at 11:31 AM, Mike Little <wordpress at zed1.com> wrote:

> There is a WordPress group on LinkedIn which does a lot of what you are
> looking for, people asking for recommendations for plugins, themes, etc. as
> well as asking general advice.
>

I've just joined that group and the discussions look exactly like the ones
in the support forums, just FYI.


-- 
http://scribu.net

From ralph at dasralph.de  Thu Mar 25 14:03:57 2010
From: ralph at dasralph.de (Ralph Bergmann)
Date: Thu, 25 Mar 2010 15:03:57 +0100
Subject: [wp-hackers] GSoC 2010 Project Proposal
Message-ID: <4BAB6D4D.9040106@dasralph.de>

Hi everybody,


I'm Ralph from Berlin, Germany. I study international media and
computing at the HTW Berlin.

I'm interested to develop a extension to manage and organise conferences
like the OpenConf tool (www.openconf.com) but embedded in WordPress.

Main features:
- user can create one or more speaker profile(s)
- user can create one ore more session(s) and link this with the speaker
profile
- user can purchase tickets / advertisements
- archive for previous conferences (with different themes)


later (after GSoC):
- apps f?r Android, iPhone, BlackBerry to see the timetable and add
interesting sessions to the mobile calendar


What do you think about this?


Ralph

-- 

Ralph Bergmann


www              http://www.dasralph.de/
mail             ralph at dasralph.de
skype            dasralph

xing             http://www.xing.com/profile/Ralph_Bergmann3
linkedin         http://www.linkedin.com/in/ralphbergmann
facebook         http://www.facebook.com/dasralph

pgp key id       30C4ECD8
pgp fingerprint  C6E4 3435 7CC8 5008 54EC 1C86 4176 7F75 30C4 ECD8

From lomegor at gmail.com  Thu Mar 25 14:39:36 2010
From: lomegor at gmail.com (=?ISO-8859-1?Q?Sebasti=E1n_Ventura?=)
Date: Thu, 25 Mar 2010 11:39:36 -0300
Subject: [wp-hackers] [GSOC-Proposal] Application prototype
Message-ID: <88a23f801003250739j6f3ab049ib37b4021c4bb041c@mail.gmail.com>

This is my application prototype. I would love if people could comment on my
ideas and complain with the way I want this to be done.

Thanks in advanced,
Sebasti?n Ventura


Project Proposal
----------------
Project proposal on my blog: http://www.botplatypus.com/?p=19

Well that explains pretty much everything without details, so here are the
details:
For video uploading I would like to add the functionality of choosing HTML5
in core WP when you are uploading videos. By default the option should be
"HTML5 or Flash" so when people want to see the video they will have two
tabs on top of the video to choose which one to use; I don't believe in
browser sniffing because as browsers are speeding their way through
improvements I think that this will cause problems (there is a plugin for a
HTML5 that doesn't have Opera, which supports ogg/theora, as one of the
HTML5 browsers), so I think is best for the user of the webpage to decide on
this.
The Flash version is exactly how videos work nowadays in WP. The HTML5
version would try to play the video with the browsers codecs (I think it
will be best only supporting ogg/theora for its "open sourceness" but this
can be changed) and if it fails a link for a download of the video would
appear.
The second proposal is adding a slideshow option to the top of the add new
blog post page, so people can just simply click on the symbol (that would be
next to videos and images when you are posting a new psot) and add as many
pictures as they like as well as different templates on how the slideshow
should look. They should also be able to add descriptions for each image
uploaded that would change as the images change. The blog post would be a
static thing in the slideshow.
I think that AJAX is what should power the slideshow so the browsers don't
have to refresh the whole page to show each image and description. I would
also love if there could be a way for adding different templates to
slideshows.
Lastly, I would like to add a gallery core functionality to WP that would
work in the same way as categories do, with the only difference being that a
gallery would only have images and/or slideshows (maybe videos too). This
would be separate from Categories and there should be a page for each
gallery letting people see thumbnails of the pictures on the galleries and
see the image with the blog post when they click on them (although this last
part is a template thing that should be added to the default template). Each
time someone uploads media they can choose if it should be added to a
gallery (maybe even letting different images on a slideshow have different
galleries).
And, adding on this last topic, I think it would be great to add into the
slideshow thing an option to make a slideshow from an existing gallery.

Schedule of Deliverables
------------------------
The schedule will be divided in the three parts.
I will have the videos upload and the slideshows completely functional, but
not styled nor tested, about one third of the program; the first two weeks
will be for the videos, the third should be for the slideshow, and the
fourth should be for fixing both of them. As I enter more into the code the
second third would be implementing the galleries and having them completely
coded and tested.
The third third of the progam should start with uniting slideshows with
galleries and after that is done (which should only take a week at most),
the testing of the first and styling of both should be done during what is
left of the last third of the program.

As I live in South America, I will have midterms exams through the coding
(June-July) but I don't believe this will be an issue if all goes well (and
the prospective is good).


Work/Internship Experience
--------------------------
I currently work in the Banco Hipotecario del Uruguay in Infraestructure, so
I have to be very versatile to work in different programming environments
and work in group to solve different programming problems that may arise in
Development and in Production envrionments.

Academic Experience
-------------------
I am a student of the Universidad de la Rep?blica here in Uruguay studying
Computer Engineering, and planning of finishing all courses by next year. I
am in the fourth year of a five year program, having only lost one course
(which is somehow optional in fact) and I will be an Engineer Analyst (which
is the mid-career title) by mid-year.
I have done an intensive course of PHP and MySql (and got a 100% in the
final evaluation), and have experience working for myself in this area
having done two webpages that are powered with Wordpress (with modified code
for the templates and some of the core to make it work as I wished); I have
also done a chat prototype that simulates a chat environment with random
answers and random people.

Why WordPress
-------------
I chose Wordpress because I use it a lot. As I said earlier I mantain two
webpages (one still in development) powered by Wordpress and I think it's an
excelent tool for many different things. Giving back to it what I can is one
of my goals.

From scribu at gmail.com  Thu Mar 25 15:43:53 2010
From: scribu at gmail.com (scribu)
Date: Thu, 25 Mar 2010 17:43:53 +0200
Subject: [wp-hackers] [GSOC-Proposal] Application prototype
In-Reply-To: <88a23f801003250739j6f3ab049ib37b4021c4bb041c@mail.gmail.com>
References: <88a23f801003250739j6f3ab049ib37b4021c4bb041c@mail.gmail.com>
Message-ID: <349fe48b1003250843j5d3abef5i2a50b299165d9af@mail.gmail.com>

Sebasti?n, I think your 3 ideas make for 2 (or maybe even 3) separate GSoC
proposals.

Regarding the first one related to videos, take a look at
VideoPress<http://wordpress.org/extend/plugins/video/>
.


-- 
http://scribu.net

From mikeschinkel at newclarity.net  Thu Mar 25 18:23:11 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 25 Mar 2010 14:23:11 -0400
Subject: [wp-hackers] Mailing List for Plugin Selection?
In-Reply-To: <7235ce781003250231g4707d99fi3529bb2843d43944@mail.gmail.com>
References: <E4D82281-7AF1-4628-85E0-489CA4EED0E4@newclarity.net>
	<c4a1df4f1003250104w15a33803x11b286bc81fad3d0@mail.gmail.com>
	<82B2782A-C0DA-4E8F-A9AD-6CC1745CFE03@newclarity.net>
	<7235ce781003250231g4707d99fi3529bb2843d43944@mail.gmail.com>
Message-ID: <952C800D-4D6E-4A12-91ED-55F1D99CD6C4@newclarity.net>

On Mar 25, 2010, at 5:31 AM, Mike Little wrote:
> There is a WordPress group on LinkedIn which does a lot of what you are
> looking for, people asking for recommendations for plugins, themes, etc. as
> well as asking general advice.
> 
> You will need to have joined LinkedIn first (they do free memberships), and
> the group is simply called WordPress
> http://www.linkedin.com/groups?gid=154024  (I'm not sure the link will work
> if you are not a member.)

Thanks for the note.  Is now a good time for me to say how much I despise how the group mechanisms work on LinkedIn? :)  I've unsubscribe from every single one I have been a member of.

There are two things I have found that actually work (for me, at least).  1.) mailing lists like this one, and 2.) vBulletin forums because of how their email notifications are configured (as far as I know no other forums work the same way.)  Since I doubt it would make sense to create a vBulletin forum, I was thinking a mailing list devoted to plugin discussions would make lots of sense, especially if hosted by Automattic.

-Mike


From mikeschinkel at newclarity.net  Thu Mar 25 18:29:55 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 25 Mar 2010 14:29:55 -0400
Subject: [wp-hackers] [GSOC-Proposal] Application prototype
In-Reply-To: <88a23f801003250739j6f3ab049ib37b4021c4bb041c@mail.gmail.com>
References: <88a23f801003250739j6f3ab049ib37b4021c4bb041c@mail.gmail.com>
Message-ID: <D011F7E9-96D6-4625-AE89-8484156B2B91@newclarity.net>

On Mar 25, 2010, at 10:39 AM, Sebasti?n Ventura wrote:
> The second proposal is adding a slideshow option to the top of the add new
> blog post page, so people can just simply click on the symbol (that would be
> next to videos and images when you are posting a new psot) and add as many
> pictures as they like as well as different templates on how the slideshow
> should look. They should also be able to add descriptions for each image
> uploaded that would change as the images change. The blog post would be a
> static thing in the slideshow.
> I think that AJAX is what should power the slideshow so the browsers don't
> have to refresh the whole page to show each image and description. I would
> also love if there could be a way for adding different templates to
> slideshows.


FWIW I just spent a full day researching AJAX slideshow functionality and although the demos are ugly I couldn't find a better mix of functionality and ease of coding than jCarousel Lite:

http://www.gmarwaha.com/jquery/jcarousellite/

I had selected it a year ago for a project but I assumed something better must have come along since then but that wasn't the case, at least that I could find.

-Mike

From jeffc at wptavern.com  Thu Mar 25 18:50:25 2010
From: jeffc at wptavern.com (Jeff Chandler)
Date: Thu, 25 Mar 2010 14:50:25 -0400
Subject: [wp-hackers] Mailing List for Plugin Selection?
Message-ID: <4BABB071.9070008@wptavern.com>

I'm tooting my own horn here but 
http://www.wptavern.com/forum/plugins-hacks/ might be a good place to 
put your questions out there with regards to plugin suggestions or help 
on finding something that performs a particular function. That forum is 
filled with notable members through out the WordPress community. It's 
also filled with a bunch of WordPress consultants.

From zamoose at gmail.com  Thu Mar 25 19:07:27 2010
From: zamoose at gmail.com (Doug Stewart)
Date: Thu, 25 Mar 2010 15:07:27 -0400
Subject: [wp-hackers] Mailing List for Plugin Selection?
In-Reply-To: <4BABB071.9070008@wptavern.com>
References: <4BABB071.9070008@wptavern.com>
Message-ID: <71ddd7491003251207r38b68a62t2c121a02c2068889@mail.gmail.com>

On 3/25/10, Jeff Chandler <jeffc at wptavern.com> wrote:
> I'm tooting my own horn here but
> http://www.wptavern.com/forum/plugins-hacks/ might be a good place to
> put your questions out there with regards to plugin suggestions or help
> on finding something that performs a particular function. That forum is
> filled with notable members through out the WordPress community. It's
> also filled with a bunch of WordPress consultants.

We could start a Google Wave.

*ducks and covers head*

-- 
-Doug
http://literalbarrage.org/blog/

From mikeschinkel at newclarity.net  Thu Mar 25 19:14:43 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 25 Mar 2010 15:14:43 -0400
Subject: [wp-hackers] Mailing List for Plugin Selection?
In-Reply-To: <71ddd7491003251207r38b68a62t2c121a02c2068889@mail.gmail.com>
References: <4BABB071.9070008@wptavern.com>
	<71ddd7491003251207r38b68a62t2c121a02c2068889@mail.gmail.com>
Message-ID: <C715C23D-ABB7-451F-86D8-1F6F299C1506@newclarity.net>

On Mar 25, 2010, at 3:07 PM, Doug Stewart wrote:
> We could start a Google Wave.
> 
> *ducks and covers head*
> 
> -- 
> -Doug
> http://literalbarrage.org/blog/

LOL! Seems there's irony between your comment and your domain name. ;-)

-Mike

From mikeschinkel at newclarity.net  Thu Mar 25 19:18:49 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 25 Mar 2010 15:18:49 -0400
Subject: [wp-hackers] Mailing List for Plugin Selection?
In-Reply-To: <4BABB071.9070008@wptavern.com>
References: <4BABB071.9070008@wptavern.com>
Message-ID: <DB922914-3FC6-4975-B9CB-9410EDA37E67@newclarity.net>

On Mar 25, 2010, at 2:50 PM, Jeff Chandler wrote:
> I'm tooting my own horn here but http://www.wptavern.com/forum/plugins-hacks/ might be a good place to put your questions out there with regards to plugin suggestions or help on finding something that performs a particular function. That forum is filled with notable members through out the WordPress community. It's also filled with a bunch of WordPress consultants.

Awesome, thanks for the note. I will definitely check it out.

I added it to here so that others can learn about it too:
http://codex.wordpress.org/Mailing_Lists#Community_Support

-Mike


From perro.hunter at gmail.com  Thu Mar 25 19:27:34 2010
From: perro.hunter at gmail.com (Perro Hunter)
Date: Thu, 25 Mar 2010 13:27:34 -0600
Subject: [wp-hackers] GSoc - here we go !
In-Reply-To: <s2q32c7967e1003231903j68860d7euaeabd7ee310bb9b7@mail.gmail.com>
References: <90E4EF88-6C9B-46E3-B75E-2D693A04D54D@gmail.com>
	<s2q32c7967e1003231903j68860d7euaeabd7ee310bb9b7@mail.gmail.com>
Message-ID: <6FB0F641-9357-487B-B991-676D65DF56C3@gmail.com>


> Hi there,
> 
> about idea number 1:
> actually the WP importes does have an option to import all the media. And it
> works pretty well already.
> 

In a stand alone installation of WP I haven't seen an option to import media straight from an already existing wordpress, it only allows me to import a XML dump file, previously exported from another wordpress, this idea is aimed for standard users that find it really difficult to move their blog from one location to another, as I mentioned before this idea not necessarily needs a FTP as most of the communication could be done via POST

If I missed the feature please tell me where to find it


> about idea number 2, what is a pain when you have to move a wp installation
> from domains are all the hardcoded absolute paths and url in the database.
> Maybe if wordpress could detect that it is in a different domain from what
> is on the database and could deal with it somehow ... but thats not a easy
> topic.
> 
> by the way, I have my own script to handle with that if anyone is interested
> (that replaces all the urls in the database, even the serialized ones)
> 

I know, the cool thing about having this script running on both sides of the servers is that while 1 is cleaning the queue and sending the post/comments/tags/etc to the target WP, the receiver, which is aware of it's own environment, is adapting what it receives before inserting it to the DB making sure all the paths are going to be correct after the moving process is done

What do you think?

-perrohunter


> Leo,,
> 
> On Fri, Mar 19, 2010 at 4:03 PM, Perro Hunter <perro.hunter at gmail.com>wrote:
> 
>> Hey there everyone !
>> 
>> I'm a computer science engineer student from Mexico
>> and this is the first year I'll try out for GSoc
>> 
>> I'm really exited on getting a chance to contribute
>> with wordpress since it's a really popular piece of software :)
>> 
>> I think i've got some ideas to develop some of the ideas
>> that you proposed this year and I'd love to hear some feedback from
>> you. While reading them the first 2 that got my attention were the
>> Blog Import/Export feature and the Moving Wordpress feature since
>> I've already had to move a wordpress installation before and I know it
>> was sorta uncomfortable, from those experience I think I can start
>> something, let me know what you think :)
>> 
>> Blog Import/Export idea:
>> 
>> The thing here is that we not only need to move a huge number of post
>> we also need to move comments, pages, tags, categories and links current
>> import/export feature would give you a dump of XML that you can take to a
>> new wordpress installation and upload it yourself. This sometimes is nasty
>> if
>> the xml dump is huge, also this dump doesn't help you export/import the
>> media
>> those post are using which is a problem since most of the users don't know
>> how
>> to deal with FTPs and they should't have to deal with downloading
>> everything to
>> their PC's and uploading it to the new server.
>> 
>> For this I propose a Plugin that would be needed to be installed on both
>> wordpress
>> , I'm not sure yet wheter we should attack the next problem from the
>> original
>> installation or from the target installation.
>> 
>> If we were doing this from the source installation we'd need to first make
>> sure
>> the plugin is ON on the target installation, we would use the admin user
>> and password
>> to authenticate remotely.
>> 
>> I know we have to move a great number of post-objects
>> (posts,comments,categories,etc)
>> for this one we are going to create a queue of things that are going to be
>> exported, this
>> could latter allow users to personalize what are the elements that they'd
>> like to move only, then
>> we'd run a quick scan on each of the queued elements to see the media they
>> are using
>> and queue those file on the table too, I'm using this queue table first so
>> when we start
>> moving the elements and files from one installation to another if the
>> script timeouts we can
>> restart the process and take off where it stopped last time ;)
>> 
>> Once the queue is ready to go, we even got a way to calculate percentage (
>> 1/3000 elements to move = 0.03%)
>> we'd start calling the move method, on the user interface we could have an
>> ajax call
>> that refresh the status of the script every X seconds or minutes, it could
>> get a new percentage
>> number to display and even reactive the moving script if it already timed
>> out. Every time
>> an element was successfully moved it'd be mark as it on the queue, we could
>> move
>> a large number of post-objects (posts,comments) using curl from one server
>> to another,
>> I know server to server bandwidth is way better than home-bandwidth, on the
>> target
>> installation the plugin would be receiving all the elements and inserting
>> them in to the db
>> with their proper category, tags and everything.
>> 
>> We could use the same procedure when moving medie if the max post value of
>> the target
>> server allow us to send these files via post, or we could use FTP so after
>> moving successfully
>> a file we'd notify the target installation plugin about the new file so i
>> can work is the way it want's
>> (we'd FTP to a tmp folder)
>> 
>> For small blogs this process could take less than a minute, for huge blogs
>> it could take a couple
>> of hours I don't know we'd need to benchmark this a little, but I think
>> this is the best way to
>> Import/export wordpress without having to get your hands dirty :P
>> 
>> this could also be extended to be compatible with old versions of WP
>> 
>> What do you think?
>> 
>> Now, this very same algorithm could be used for the next idea:
>> 
>> Moving a Wordpress installation from one domain to another:
>> 
>> For this one we would definitively need FTP to move the basic installation,
>> the target server DB name, user and password, and after moving the
>> essentials of the installation we could start doing the rest with the old
>> procedure(queue items, start cleaning the items periodically)
>> 
>> Two features could be archived with this same idea, please tell me if you
>> think there's something missing
>> or your thoughts
>> 
>> Cheers ! :D
>> 
>> P.S. I also posted this to
>> http://blog.perrohunter.com/ideas-for-wp-at-gsoc/ :)
>> 
>> -perrohunter
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> -- 
> leogermani.pirex.com.br
> leogermani.estudiolivre.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Thu Mar 25 19:53:38 2010
From: otto at ottodestruct.com (Otto)
Date: Thu, 25 Mar 2010 14:53:38 -0500
Subject: [wp-hackers] GSoc - here we go !
In-Reply-To: <6FB0F641-9357-487B-B991-676D65DF56C3@gmail.com>
References: <90E4EF88-6C9B-46E3-B75E-2D693A04D54D@gmail.com> 
	<s2q32c7967e1003231903j68860d7euaeabd7ee310bb9b7@mail.gmail.com> 
	<6FB0F641-9357-487B-B991-676D65DF56C3@gmail.com>
Message-ID: <161617691003251253n54fc79dah15f7855111d13bec@mail.gmail.com>

On Thu, Mar 25, 2010 at 2:27 PM, Perro Hunter <perro.hunter at gmail.com> wrote:
> In a stand alone installation of WP I haven't seen an option to import media straight from an already existing wordpress, it only allows me to import a XML dump file, previously exported from another wordpress, this idea is aimed for standard users that find it really difficult to move their blog from one location to another, as I mentioned before this idea not necessarily needs a FTP as most of the communication could be done via POST
>
> If I missed the feature please tell me where to find it

Have you actually tried to import a real live WordPress XML dump? When
you do, it gives you the option to pull the media files directly from
the remote server. It loads them up using sideload, then does
search/replace to fix the URLs in the content and so forth.

-Otto

From zamoose at gmail.com  Thu Mar 25 20:49:28 2010
From: zamoose at gmail.com (Doug Stewart)
Date: Thu, 25 Mar 2010 16:49:28 -0400
Subject: [wp-hackers] WordPress cited as good UI/UX example
Message-ID: <71ddd7491003251349v787d5595u857e403fe40fc474@mail.gmail.com>

...As opposed to GMail:

http://www.codinghorror.com/blog/2010/03/the-opposite-of-fitts-law.html

It's a minor citation, but nice to see good "press" for WP every once
in a while.

-- 
-Doug
http://literalbarrage.org/blog/

From arlenbee at gmail.com  Thu Mar 25 21:25:53 2010
From: arlenbee at gmail.com (Arlen Beiler)
Date: Thu, 25 Mar 2010 17:25:53 -0400
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <c4a1df4f1003250054q70b819f5odd66abbee89e5a6e@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
	<4f8622411003221145k5ec59d1bq73e6bbb6825a9994@mail.gmail.com>
	<e002a22f1003221148v6452a3f5o3595996b3a2e83cb@mail.gmail.com>
	<c4a1df4f1003250054q70b819f5odd66abbee89e5a6e@mail.gmail.com>
Message-ID: <e002a22f1003251425s2bd6a810sfa693ed4a0a5b231@mail.gmail.com>

Worse yet, let's find something that will do that AND replace all the
function calls with the function code.

On Thu, Mar 25, 2010 at 3:54 AM, Eric Marden <wp at xentek.net> wrote:

> On Mon, Mar 22, 2010 at 1:48 PM, Arlen Beiler <arlenbee at gmail.com> wrote:
>
> > Grep doesn't quite look like what I want. I want to do it mostly to
> satisfy
> > my curiousity.
>
>
> Ack is http://betterthangrep.com/ ... I use it for locating the source of
> API Functions and its super fast. Still might not meet your needs (you
> probably need the XREF docs, that have been linked to already), but ack was
> made for grep'ing code (see what i did there).
>
> ~ Eric Marden
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wordpress at dd32.id.au  Thu Mar 25 20:28:53 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 26 Mar 2010 08:28:53 +1200
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <e002a22f1003251425s2bd6a810sfa693ed4a0a5b231@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
	<4f8622411003221145k5ec59d1bq73e6bbb6825a9994@mail.gmail.com>
	<e002a22f1003221148v6452a3f5o3595996b3a2e83cb@mail.gmail.com>
	<c4a1df4f1003250054q70b819f5odd66abbee89e5a6e@mail.gmail.com>
	<e002a22f1003251425s2bd6a810sfa693ed4a0a5b231@mail.gmail.com>
Message-ID: <op.u947afgpspxmuu@ho.st>

Now that could get messy :)

One of the first things i did with QI( WordPress Quick Installer) was  
write a build script which concencated the multiple files i've got into a  
single downloadable file. then wrote a minify'er, then a compressor.  
Result is 300KB accross a dozen files down to a 50kb single file.

Moving code inline is just hell, You've got globals to deal with, amongst  
other things.

Using PHP 5.3's anonymous functions you might be able to achieve it tho..

On Fri, 26 Mar 2010 09:25:53 +1200, Arlen Beiler <arlenbee at gmail.com>  
wrote:
> Worse yet, let's find something that will do that AND replace all the
> function calls with the function code.

-- 
Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

From lilla.molnet at gmail.com  Thu Mar 25 21:58:12 2010
From: lilla.molnet at gmail.com (Jon Mihkkal Inga)
Date: Thu, 25 Mar 2010 22:58:12 +0100
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <op.u947afgpspxmuu@ho.st>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>
	<4BA7B8ED.8090609@gaarai.com>
	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>
	<4f8622411003221145k5ec59d1bq73e6bbb6825a9994@mail.gmail.com>
	<e002a22f1003221148v6452a3f5o3595996b3a2e83cb@mail.gmail.com>
	<c4a1df4f1003250054q70b819f5odd66abbee89e5a6e@mail.gmail.com>
	<e002a22f1003251425s2bd6a810sfa693ed4a0a5b231@mail.gmail.com>
	<op.u947afgpspxmuu@ho.st>
Message-ID: <6225fcee1003251458x9a52790jbe9e0ca2913e1ca6@mail.gmail.com>

I still can't get why you want to do this or how it would make anything
easier. I doubt that having a bigass file to scroll up and down will satisfy
your curiosity. The way to do it is to pick a function and go backward
through all its callers or forward through all its calls. If you make a
single file from all code chances are you'll just end up more confused
'cause you won't know which function came from what file originally if you
don't spend a lot of energy designing the merging script. I suspect that
energy is better spent searching the code manually in the first place. Get
yourself a tabbed code editor with file searching capabilities. I use
notepad++ <http://notepad-plus.sourceforge.net/>, simple yet flexible with
auto completion and goodies.

cheers
/jomik

2010/3/25 Dion Hulse (dd32) <wordpress at dd32.id.au>

> Now that could get messy :)
>
> One of the first things i did with QI( WordPress Quick Installer) was write
> a build script which concencated the multiple files i've got into a single
> downloadable file. then wrote a minify'er, then a compressor. Result is
> 300KB accross a dozen files down to a 50kb single file.
>
> Moving code inline is just hell, You've got globals to deal with, amongst
> other things.
>
> Using PHP 5.3's anonymous functions you might be able to achieve it tho..
>
>
> On Fri, 26 Mar 2010 09:25:53 +1200, Arlen Beiler <arlenbee at gmail.com>
> wrote:
>
>> Worse yet, let's find something that will do that AND replace all the
>> function calls with the function code.
>>
>
> --
> Dion Hulse / dd32
> Contact:
>  e: contact at dd32.id.au
>  Web: http://dd32.id.au/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From gaarai at gaarai.com  Fri Mar 26 03:19:28 2010
From: gaarai at gaarai.com (Chris Jean)
Date: Thu, 25 Mar 2010 22:19:28 -0500
Subject: [wp-hackers] concatinating PHP code files
In-Reply-To: <6225fcee1003251458x9a52790jbe9e0ca2913e1ca6@mail.gmail.com>
References: <e002a22f1003221116x47e186c0g9c700ffde748dfbe@mail.gmail.com>	<4BA7B8ED.8090609@gaarai.com>	<e002a22f1003221140x5d139f48p6afc552e1e93774d@mail.gmail.com>	<4f8622411003221145k5ec59d1bq73e6bbb6825a9994@mail.gmail.com>	<e002a22f1003221148v6452a3f5o3595996b3a2e83cb@mail.gmail.com>	<c4a1df4f1003250054q70b819f5odd66abbee89e5a6e@mail.gmail.com>	<e002a22f1003251425s2bd6a810sfa693ed4a0a5b231@mail.gmail.com>	<op.u947afgpspxmuu@ho.st>
	<6225fcee1003251458x9a52790jbe9e0ca2913e1ca6@mail.gmail.com>
Message-ID: <4BAC27C0.4080901@gaarai.com>

Completely agree Jon. You'll never get a full picture of what is going 
on unless you look at the code as the code is structured.

The best thing to do is learn how to do the following:

    * Search through code using grep or ack as already stated in this
      thread. Doing this helps you understand how other coders structure
      code, functions, etc.
    * Use print_r or var_dump (depending on preference) to inspect data
      structures (classes, arrays, etc). This helps you understand how
      information that is being passed around is structured.
    * Learn to use debug_backtrace to be able to trace exactly how a set
      of code was called. This will show which functions were called,
      with what parameters, and from what file the call originated from.

This isn't something that can be sped through or simplified. There are a 
large number of files with a very large set of functions. If you want to 
understand it, you need to search through it, read it, and experiment 
with it.

Chris Jean (AKA gaarai&  chrisbliss18)
Coder for http://ithemes.com/
http://gaarai.com/
@chrisjean


On 03/25/2010 04:58 PM, Jon Mihkkal Inga wrote:
> I still can't get why you want to do this or how it would make anything
> easier. I doubt that having a bigass file to scroll up and down will satisfy
> your curiosity. The way to do it is to pick a function and go backward
> through all its callers or forward through all its calls. If you make a
> single file from all code chances are you'll just end up more confused
> 'cause you won't know which function came from what file originally if you
> don't spend a lot of energy designing the merging script. I suspect that
> energy is better spent searching the code manually in the first place. Get
> yourself a tabbed code editor with file searching capabilities. I use
> notepad++<http://notepad-plus.sourceforge.net/>, simple yet flexible with
> auto completion and goodies.
>
> cheers
> /jomik

From chinthakarukshan at gmail.com  Fri Mar 26 03:24:32 2010
From: chinthakarukshan at gmail.com (Chinthaka Rukshan)
Date: Fri, 26 Mar 2010 08:54:32 +0530
Subject: [wp-hackers] Google Summer of Code 2010-Project Proposal for
	feedback(WordPress import/export)
Message-ID: <7cd5f9e21003252024g51d510car23d0c717ec8c7a2d@mail.gmail.com>

Hi all,

I sent you a email about mentioning my GSoC idea and anyone didn't gave me
any feedback up to now although I'm waiting for your feedback.I don't know
whether my two emails that I send you previously didn't deliver to you. Any
way this is my third mail for you.Please give me some feedback regarding the
below ideas and if you can answer my questions that I've asked below,it
would be a pleasure for me.

I'm a Computer Science and Engineering student of University of Moratuwa,Sri
Lanka.
This is the first time I'm applying a proposal for GSoC.

It will be very lucky to contribute for WordPress because it is very popular
and I also have a blog on WordPress.

Here I have Provide my Google Summer of Code Project Proposal or the
proposal link for the project WordPress Import/Export.I would like to hear
some feed back about the proposal from you.After you reading about the
proposal I need to know specially about one thing. I've mentioned about what
I have done. A project that can import WordPress blog posts and comments
from a remote WordPress blog.Is it ok to mention such a thing in my proposal
that is submitting to the Google and to what extent do I have to mention
those information?.I've mentioned about that I've studied to some extent
about blogger import and livejournal import.Is it also ok to mention about
that?. If you can help me with these facts it would be pleasure.

Here is the project proposal
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*WordPress Import/Export Idea*
*
*

This idea is from WordPress Ideas list. The  idea of the project is to
develop a wordpress import/export process that doesn?t require a file for
wordpress blog content transfer.

The currently existing wordpress import/export process has many
disadvantages. They are as below.

   - Uses an XML file as an intermediary

If we want to import one WordPress blog content to another, first we have to
export a XML file from the WordPress blog which we need to import blog
content from(Let?s take it as the source WordPress blog). Then we have to
log in to the WordPress blog that we need to import the WordPress blog
content to and import the XML file that we exported from the source blog.
This can be consider as two step process.Also it can be consider as an
performance hit from the users side.

   - It doesn?t support media(Images,Videos etc.) transfer

The currently existing that uses an XML file doesn?t support for media
transfer. It is essential for media transfer from the users side.

Above two are major disadvantages of the current system. For the system I?m
going to implement doesn?t need any type of file as an intermediary for
WordPress blog content transfer between any two wordpress blogs. It uses XML
Remote Procedure Calls (XMLRPC) for the blog content transfer.

In WordPress import processes of blogger import and livejournal import are
examples for the import processes that doesn?t need a intermediary file. It
simply transfer the content to the WordPress blog after validating the given
admin user name and the password for the blogger or the livejournal blog.

For WordPress import/export process that I?m going to implement needs three
inputs(parameters) from the user. In this method i doesn?t import blog
content from or export blog content to  a specified remote server. That
means we can import or export blog content not only from or to the
WordPress.com blogs. We can transfer content from or to any remote WordPress
blog.(For example from the WordPress blog inside the my own machine to
WordPress.com blog or From the WordPress blog inside my own machine to
another WordPress blog inside the same machine etc..). For that we need the
URL of the remote WordPress blog that need to be content transfer and the
admin username of the remote WordPress blog and the admin password of it.
After validating those three parameters if the validation is successful then
the blog content transfer begins.

I already have done some sort of WordPress import that doesn?t uses a file
as an intermediary. For that I used XML Remote Procedure Calls(XMLRPC). It
successfully import posts and comments from any remote WordPress blog after
giving correct URL,admin username and the admin password of the remote
WordPress blog. For each post in the blog I look for comments and store them
in an array and then import them. It always informing the user that the post
or the comment that is currently importing.

I have studied to some extent how the livejournal import and the blogger
import works and I used various functionalities of those two import
processes to build my above project(Mainly for the GUI).


or here is the link for my project idea....


http://chinthakarukshan.wordpress.com/2010/03/21/google-summer-of-code-proposalwordpress-importexport/


Please give me some feed back about the proposal....

<http://chinthakarukshan.wordpress.com/2010/03/21/google-summer-of-code-proposalwordpress-importexport/>Thank
You.

-- 
Chinthaka Rukshan
"Open Your Mind"







-- 
Chinthaka Rukshan
"Open Your Mind"

From scribu at gmail.com  Fri Mar 26 03:55:04 2010
From: scribu at gmail.com (scribu)
Date: Fri, 26 Mar 2010 05:55:04 +0200
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
Message-ID: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com>

Thought I'd try out for GSoC this year. Here's the first part of my
proposal. Let me know what you think:

 Motivation

WordPress uses the GD library to generate thumbnails of uploaded images, as
well as allow users to edit these images directly from the admin area.

The problem is that if the GD library is missing, these features will not be
available. Even worse, there?s no easy way for plugins to replace the GD
library dependency with something else.

ImageMagick <http://www.php.net/manual/en/intro.imagick.php> is an
alternative to GD library, with similar capabilities. Having support for
both would make WordPress fully compatible with a wider range of server
configurations.
Technical Approach

I plan to use the same pattern as the excellent WP_Http class: An interface
class that defines the required functionality and a separate child class for
each library.

GD library would be the primary one, while ImageMagick would be a fallback.

Users would be able to choose which library they want to use, when both are
available.

More importantly, plugins could easily extend the available functionality
and even add support for other libraries.


-- 
http://scribu.net

From dan at dancoulter.com  Fri Mar 26 04:03:07 2010
From: dan at dancoulter.com (Dan Coulter)
Date: Thu, 25 Mar 2010 23:03:07 -0500
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com>
Message-ID: <5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com>

I think having the compatibility (and the option to add more with plugins)
is great, but I do have one comment below.

On Thu, Mar 25, 2010 at 10:55 PM, scribu <scribu at gmail.com> wrote:

> Users would be able to choose which library they want to use, when both are
> available.
>

I don't think users need an option to explicitly choose one. Few will even
know what the option is for, much less what the differences are.  Leaving
that option up to plugins would probably be best.

-- 
Dan Coulter
http://dancoulter.com/
http://phpflickr.com/
http://blogsforbands.com/

Hey, I got nothing to do today but smile
-Simon and Garfunkel

From wp at andrewnacin.com  Fri Mar 26 04:11:54 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 26 Mar 2010 00:11:54 -0400
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com> 
	<5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com>
Message-ID: <4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com>

>
> I don't think users need an option to explicitly choose one. Few will even

know what the option is for, much less what the differences are.  Leaving

that option up to plugins would probably be best.


scribu is referring to a filter, so I think you're on the same page. We have
them in WP_HTTP to allow blocking of transports as well.

From dan at dancoulter.com  Fri Mar 26 04:16:20 2010
From: dan at dancoulter.com (Dan Coulter)
Date: Thu, 25 Mar 2010 23:16:20 -0500
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com> 
	<5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com> 
	<4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com>
Message-ID: <5dc2163e1003252116j9efe855vff454a7e90e638ed@mail.gmail.com>

On Thu, Mar 25, 2010 at 11:11 PM, Andrew Nacin <wp at andrewnacin.com> wrote:

> scribu is referring to a filter, so I think you're on the same page. We
> have
> them in WP_HTTP to allow blocking of transports as well.
>

His wording seemed a big vague on that, but I am a bit tired, so I may have
misunderstood.  I love the way WP_HTTP works, so yes, we're probably all on
the same page (once my tired mind catches up).

-- 
Dan Coulter
http://dancoulter.com/
http://phpflickr.com/
http://blogsforbands.com/

Hey, I got nothing to do today but smile
-Simon and Garfunkel

From scribu at gmail.com  Fri Mar 26 05:49:22 2010
From: scribu at gmail.com (scribu)
Date: Fri, 26 Mar 2010 07:49:22 +0200
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <5dc2163e1003252116j9efe855vff454a7e90e638ed@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com>
	<5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com>
	<4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com>
	<5dc2163e1003252116j9efe855vff454a7e90e638ed@mail.gmail.com>
Message-ID: <349fe48b1003252249p35502d68r21e12d6506b75b4d@mail.gmail.com>

On Fri, Mar 26, 2010 at 6:16 AM, Dan Coulter <dan at dancoulter.com> wrote:

> On Thu, Mar 25, 2010 at 11:11 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
>
> > scribu is referring to a filter, so I think you're on the same page. We
> > have
> > them in WP_HTTP to allow blocking of transports as well.
> >
>
> His wording seemed a big vague on that, but I am a bit tired, so I may have
> misunderstood.  I love the way WP_HTTP works, so yes, we're probably all on
> the same page (once my tired mind catches up).
>

Yeah, by 'option' I meant a filter. (Should have said 'posibility' instead)


-- 
http://scribu.net

From jayarjo at gmail.com  Fri Mar 26 11:44:58 2010
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Fri, 26 Mar 2010 15:44:58 +0400
Subject: [wp-hackers] do I need to register custom post_status-es?
In-Reply-To: <C904D5A1-54D4-456C-9CD1-D92F4A84A280@newclarity.net>
References: <9aa12a491003240429h4ad44a93l74df97271e70f1f5@mail.gmail.com> 
	<C904D5A1-54D4-456C-9CD1-D92F4A84A280@newclarity.net>
Message-ID: <9aa12a491003260444g210651dem75c98df1e36a5ff1@mail.gmail.com>

Hi Mike,

Thanks, but I do not actually use or need to use either meta_value or
meta_key. I just can't filter my custom type posts, by custom
post_status fields.

:(

On Wed, Mar 24, 2010 at 9:28 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> Davit:
>
> On Mar 24, 2010, at 7:29 AM, Davit Barbakadze wrote:
>> I'm using the following code to retrieve custom post_type-es:
>>
>> $wp_query = new
>> WP_Query("post_type=event&post_status=$post_status&posts_per_page=15&paged=$paged{$search}");
>>
>> Quoted line resolves for example to:
>> post_type=event&post_status=active&posts_per_page=15&paged=1 (string
>> has been printed out not just made up).
>>
>> Although while I have specific post_status defined, for some
>> reason it does fetch all of the posts with post_type=event, no matter
>> are they marked as active in post_status or - inactive. Not sure what
>> could be the reason. For post_status - trash it filters them as
>> expected. Do I need to register custom post_status-es
>> maybe?
>
> I think these two pages might hold your answers:
>
> --------------------
> http://osdir.com/ml/wordpress-hackers/2010-01/msg00233.html
> --------------------
> "Bear in mind that the wp() call only accept query vars which are specified in the $public_query_vars and $private_query_vars arrays which are part of the WP class and these don't include anything to do with post_meta.
>
> The public_query_vars are those which can be specified in a url and the private_query_vars are the extra ones which can be specified only by code
>
> You will need to extend the list of private_query_vars which it supports to get the post_meta ones passed through"
>
>
> --------------------
> http://wordpress.org/support/topic/281165?replies=3
> --------------------
> function custom_pages_query( $query )
> {
> ? ? ? ?global $wp, $wpdb;
>
> ? ? ? ?if( isset($_GET["meta_key"]) )
> ? ? ? ?{
> ? ? ? ? ? ? ? ?$wp->private_query_vars[] = 'meta_key';
> ? ? ? ? ? ? ? ?$query['meta_key'] = $_GET["meta_key"];
> ? ? ? ?}
>
> ? ? ? ?if( isset($_GET["meta_value"]) )
> ? ? ? ?{
> ? ? ? ? ? ? ? ?$wp->private_query_vars[] = 'meta_value';
> ? ? ? ? ? ? ? ?$query['meta_value'] = $_GET["meta_value"];
> ? ? ? ?}
>
> ? ? ? ?if( isset($_GET["post_parent"]) )
> ? ? ? ?{
> ? ? ? ? ? ? ? ?$post_parent = $_GET["post_parent"];
> ? ? ? ? ? ? ? ?$wp->private_query_vars[] = 'post_parent';
>
> ? ? ? ? ? ? ? ?if( !is_numeric($post_parent) )
> ? ? ? ? ? ? ? ?{
> ? ? ? ? ? ? ? ? ? ? ? ?$post_parent = $wpdb->get_var( $wpdb->prepare("SELECT <code>ID</code> FROM $wpdb->posts WHERE <code>post_name</code>='%s' AND <code>post_type</code>='page' AND <code>post_status</code>='publish'"), $post_parent);
>
> ? ? ? ? ? ? ? ? ? ? ? ?if( NULL === $post_parent )
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?$post_parent = "";
> ? ? ? ? ? ? ? ?}
>
> ? ? ? ? ? ? ? ?$query['post_parent'] = $post_parent;
> ? ? ? ?}
>
> ? ? ? ?return $query;
> }
> add_filter('manage_pages_query', 'custom_pages_query');
>
> HTH
>
> -Mike
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From lomegor at gmail.com  Fri Mar 26 12:11:04 2010
From: lomegor at gmail.com (=?ISO-8859-1?Q?Sebasti=E1n_Ventura?=)
Date: Fri, 26 Mar 2010 09:11:04 -0300
Subject: [wp-hackers] [GSOC-Proposal] Application prototype
Message-ID: <88a23f801003260511y43877806l70fefb78872fd1f0@mail.gmail.com>

Yaeh, I know it could be a lot of work, but I've been thinking about it and
the first two are just minor changes, and well, the third one is a bit more
complicated but I believe it can be done. I mean, you can already upload a
video to WordPress, I just need to tweak it a bit to allow HTML5; the
difference with that plugin is the abilility for HTML5 and that you can do
it witha simple click on top of the Add New Post page.
And about the Ajax slideshow I want to do it from scratch as I have had bad
experiences of copying AJAX functions (although that jCarousel seems really
nice -but it doesn't seem to use ajax).

Thank you so much for your replies and for those links that will help me
research a bit more about what I want to do!

Message: 7
Date: Thu, 25 Mar 2010 17:43:53 +0200
From: scribu <scribu at gmail.com>
Subject: Re: [wp-hackers] [GSOC-Proposal] Application prototype
To: wp-hackers at lists.automattic.com
Message-ID:
       <349fe48b1003250843j5d3abef5i2a50b299165d9af at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

Sebasti?n, I think your 3 ideas make for 2 (or maybe even 3) separate GSoC
proposals.

Regarding the first one related to videos, take a look at
VideoPress<http://wordpress.org/extend/plugins/video/>
.

-- 
Nai Eru varyuva le

From tim.moore at maine.edu  Fri Mar 26 12:12:31 2010
From: tim.moore at maine.edu (Tim Moore)
Date: Fri, 26 Mar 2010 08:12:31 -0400
Subject: [wp-hackers] do I need to register custom post_status-es?
In-Reply-To: <9aa12a491003260444g210651dem75c98df1e36a5ff1@mail.gmail.com>
References: <9aa12a491003240429h4ad44a93l74df97271e70f1f5@mail.gmail.com>
	<C904D5A1-54D4-456C-9CD1-D92F4A84A280@newclarity.net>
	<9aa12a491003260444g210651dem75c98df1e36a5ff1@mail.gmail.com>
Message-ID: <676e31181003260512p6ebb674fs29669618f0b6ba9b@mail.gmail.com>

Davit:

I think you are using the wrong post_status value. Looking at
http://codex.wordpress.org/Post_Status_Transitions, I'm seeing the following
as built-in post_status's:


   - publish
   - draft
   - private
   - future
   - pending
   - new

Perhaps changing post_status=active to post_status=publish or
post_status=inactive to post_status=draft would help.

Tim

On Fri, Mar 26, 2010 at 7:44 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:

> Hi Mike,
>
> Thanks, but I do not actually use or need to use either meta_value or
> meta_key. I just can't filter my custom type posts, by custom
> post_status fields.
>
> :(
>
> On Wed, Mar 24, 2010 at 9:28 PM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
> > Davit:
> >
> > On Mar 24, 2010, at 7:29 AM, Davit Barbakadze wrote:
> >> I'm using the following code to retrieve custom post_type-es:
> >>
> >> $wp_query = new
> >>
> WP_Query("post_type=event&post_status=$post_status&posts_per_page=15&paged=$paged{$search}");
> >>
> >> Quoted line resolves for example to:
> >> post_type=event&post_status=active&posts_per_page=15&paged=1 (string
> >> has been printed out not just made up).
> >>
>

From nuno.morgadinho at gmail.com  Fri Mar 26 12:35:43 2010
From: nuno.morgadinho at gmail.com (Nuno Morgadinho)
Date: Fri, 26 Mar 2010 13:35:43 +0100
Subject: [wp-hackers] install plugins across different installs
Message-ID: <5721607d1003260535o3c6318b8i2692e2001ae35ca@mail.gmail.com>

Is there a recommended way of installing plugins across different
Wordpress installs?

Thanks,
-- 
Nuno Morgadinho
http://www.morgadinho.org
http://twitter.com/morgadin

From ralph at dasralph.de  Fri Mar 26 15:50:55 2010
From: ralph at dasralph.de (Ralph Bergmann)
Date: Fri, 26 Mar 2010 16:50:55 +0100
Subject: [wp-hackers] GSoC 2010 Project Proposal
In-Reply-To: <4BAB6D4D.9040106@dasralph.de>
References: <4BAB6D4D.9040106@dasralph.de>
Message-ID: <4BACD7DF.10309@dasralph.de>

Is nobody interested?



Am 25.03.10 15:03, schrieb Ralph Bergmann:
> Hi everybody,
> 
> 
> I'm Ralph from Berlin, Germany. I study international media and
> computing at the HTW Berlin.
> 
> I'm interested to develop a extension to manage and organise conferences
> like the OpenConf tool (www.openconf.com) but embedded in WordPress.
> 
> Main features:
> - user can create one or more speaker profile(s)
> - user can create one ore more session(s) and link this with the speaker
> profile
> - user can purchase tickets / advertisements
> - archive for previous conferences (with different themes)
> 
> 
> later (after GSoC):
> - apps f?r Android, iPhone, BlackBerry to see the timetable and add
> interesting sessions to the mobile calendar
> 
> 
> What do you think about this?
> 
> 
> Ralph
> 


-- 

Ralph Bergmann

www              http://www.dasralph.de/
mail             ralph at dasralph.de
skype            dasralph

xing             http://www.xing.com/profile/Ralph_Bergmann3
linkedin         http://www.linkedin.com/in/ralphbergmann
facebook         http://www.facebook.com/dasralph

pgp key id       30C4ECD8
pgp fingerprint  C6E4 3435 7CC8 5008 54EC 1C86 4176 7F75 30C4 ECD8



From scribu at gmail.com  Fri Mar 26 17:16:39 2010
From: scribu at gmail.com (scribu)
Date: Fri, 26 Mar 2010 19:16:39 +0200
Subject: [wp-hackers] install plugins across different installs
In-Reply-To: <5721607d1003260535o3c6318b8i2692e2001ae35ca@mail.gmail.com>
References: <5721607d1003260535o3c6318b8i2692e2001ae35ca@mail.gmail.com>
Message-ID: <349fe48b1003261016v7a2a88f4vfb148f0998c9b3c0@mail.gmail.com>

If you mean across installs on different servers, no, there isn't a
recommended way.

If you mean on the same server, use the WP_PLUGIN_DIR and WP_PLUGIN_URL
constants.


On Fri, Mar 26, 2010 at 2:35 PM, Nuno Morgadinho
<nuno.morgadinho at gmail.com>wrote:

> Is there a recommended way of installing plugins across different
> Wordpress installs?
>
> Thanks,
> --
> Nuno Morgadinho
> http://www.morgadinho.org
> http://twitter.com/morgadin
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From jer at simianuprising.com  Fri Mar 26 17:35:47 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri, 26 Mar 2010 13:35:47 -0400
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <349fe48b1003252249p35502d68r21e12d6506b75b4d@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com>
	<5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com>
	<4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com>
	<5dc2163e1003252116j9efe855vff454a7e90e638ed@mail.gmail.com>
	<349fe48b1003252249p35502d68r21e12d6506b75b4d@mail.gmail.com>
Message-ID: <e1202cb11003261035m43db4173nafd6bf8c394550cc@mail.gmail.com>

+1 seems like an ideal GSOC proposal.

Are there any stats on how many users actually need this? It would
obviously be better to support both rather than depending on one
external library, but there might be other similar work that would
help more people.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From scribu at gmail.com  Fri Mar 26 17:42:57 2010
From: scribu at gmail.com (scribu)
Date: Fri, 26 Mar 2010 19:42:57 +0200
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <e1202cb11003261035m43db4173nafd6bf8c394550cc@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com>
	<5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com>
	<4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com>
	<5dc2163e1003252116j9efe855vff454a7e90e638ed@mail.gmail.com>
	<349fe48b1003252249p35502d68r21e12d6506b75b4d@mail.gmail.com>
	<e1202cb11003261035m43db4173nafd6bf8c394550cc@mail.gmail.com>
Message-ID: <349fe48b1003261042h503ac073v53e1e1f99744188c@mail.gmail.com>

On Fri, Mar 26, 2010 at 7:35 PM, Jeremy Clarke <jer at simianuprising.com>wrote:

> Are there any stats on how many users actually need this? It would
> obviously be better to support both rather than depending on one
> external library, but there might be other similar work that would
> help more people.
>

Could you please clarify what you mean by "other similar work" ?


-- 
http://scribu.net

From jer at simianuprising.com  Fri Mar 26 18:47:53 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri, 26 Mar 2010 14:47:53 -0400
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <349fe48b1003261042h503ac073v53e1e1f99744188c@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com>
	<5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com>
	<4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com>
	<5dc2163e1003252116j9efe855vff454a7e90e638ed@mail.gmail.com>
	<349fe48b1003252249p35502d68r21e12d6506b75b4d@mail.gmail.com>
	<e1202cb11003261035m43db4173nafd6bf8c394550cc@mail.gmail.com>
	<349fe48b1003261042h503ac073v53e1e1f99744188c@mail.gmail.com>
Message-ID: <e1202cb11003261147k189ac5d1tfbb27f826097eb9e@mail.gmail.com>

On Fri, Mar 26, 2010 at 1:42 PM, scribu <scribu at gmail.com> wrote:
> Could you please clarify what you mean by "other similar work" ?

I didn't have anything particular in mind, though my sense is you
could tackle a lot of different problems with the GSOC time/money. If
anything I just wanted to speculate that GD might actually be on 99%
of PHP installs or something like that, in which case abstracting a
new API for it might not be worth your valuable time :)

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From mikeschinkel at newclarity.net  Fri Mar 26 19:09:39 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 26 Mar 2010 15:09:39 -0400
Subject: [wp-hackers] do I need to register custom post_status-es?
In-Reply-To: <9aa12a491003260444g210651dem75c98df1e36a5ff1@mail.gmail.com>
References: <9aa12a491003240429h4ad44a93l74df97271e70f1f5@mail.gmail.com>
	<C904D5A1-54D4-456C-9CD1-D92F4A84A280@newclarity.net>
	<9aa12a491003260444g210651dem75c98df1e36a5ff1@mail.gmail.com>
Message-ID: <376ADF6D-F610-4DFA-8F20-2E780354410F@newclarity.net>

Davit,

After sending that email I feared you might confuse the reason I sent the second link. The first link explains that post_status is private and that you (may) need to set it in manage_pages_query. The second link shows you an example manage_pages_query.  I wasn't 100% sure of this solution so I offered it up by saying "I think..." assuming it would give you what you need to solve the problem.

Before replying today I decided to track down an actual solution. It seems that information I gave might have been was wrong though I still don't fully understand that area of the code. Sorry for the prior inadvertent misdirection but the best I've been able to tell is that maybe you haven't run register_post_status() in your plugin or theme's functions.php file?, i.e.:

	register_post_status('active');  

When I run this query without registering the active status I get all posts, regardless of status:

	$q = new WP_Query('post_type=post&post_status=active');

After registering I only get the one 'active' post I added for testing.

HTH; let me know if not.

-Mike
P.S. I tested on a version of wp.30 so maybe it's not what you need for wp2.9...


On Mar 26, 2010, at 7:44 AM, Davit Barbakadze wrote:

> Hi Mike,
> 
> Thanks, but I do not actually use or need to use either meta_value or
> meta_key. I just can't filter my custom type posts, by custom
> post_status fields.
> 
> :(
> 
> On Wed, Mar 24, 2010 at 9:28 PM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> Davit:
>> 
>> On Mar 24, 2010, at 7:29 AM, Davit Barbakadze wrote:
>>> I'm using the following code to retrieve custom post_type-es:
>>> 
>>> $wp_query = new
>>> WP_Query("post_type=event&post_status=$post_status&posts_per_page=15&paged=$paged{$search}");
>>> 
>>> Quoted line resolves for example to:
>>> post_type=event&post_status=active&posts_per_page=15&paged=1 (string
>>> has been printed out not just made up).
>>> 
>>> Although while I have specific post_status defined, for some
>>> reason it does fetch all of the posts with post_type=event, no matter
>>> are they marked as active in post_status or - inactive. Not sure what
>>> could be the reason. For post_status - trash it filters them as
>>> expected. Do I need to register custom post_status-es
>>> maybe?
>> 
>> I think these two pages might hold your answers:
>> 
>> --------------------
>> http://osdir.com/ml/wordpress-hackers/2010-01/msg00233.html
>> --------------------
>> "Bear in mind that the wp() call only accept query vars which are specified in the $public_query_vars and $private_query_vars arrays which are part of the WP class and these don't include anything to do with post_meta.
>> 
>> The public_query_vars are those which can be specified in a url and the private_query_vars are the extra ones which can be specified only by code
>> 
>> You will need to extend the list of private_query_vars which it supports to get the post_meta ones passed through"
>> 
>> 
>> --------------------
>> http://wordpress.org/support/topic/281165?replies=3
>> --------------------
>> function custom_pages_query( $query )
>> {
>>        global $wp, $wpdb;
>> 
>>        if( isset($_GET["meta_key"]) )
>>        {
>>                $wp->private_query_vars[] = 'meta_key';
>>                $query['meta_key'] = $_GET["meta_key"];
>>        }
>> 
>>        if( isset($_GET["meta_value"]) )
>>        {
>>                $wp->private_query_vars[] = 'meta_value';
>>                $query['meta_value'] = $_GET["meta_value"];
>>        }
>> 
>>        if( isset($_GET["post_parent"]) )
>>        {
>>                $post_parent = $_GET["post_parent"];
>>                $wp->private_query_vars[] = 'post_parent';
>> 
>>                if( !is_numeric($post_parent) )
>>                {
>>                        $post_parent = $wpdb->get_var( $wpdb->prepare("SELECT <code>ID</code> FROM $wpdb->posts WHERE <code>post_name</code>='%s' AND <code>post_type</code>='page' AND <code>post_status</code>='publish'"), $post_parent);
>> 
>>                        if( NULL === $post_parent )
>>                                $post_parent = "";
>>                }
>> 
>>                $query['post_parent'] = $post_parent;
>>        }
>> 
>>        return $query;
>> }
>> add_filter('manage_pages_query', 'custom_pages_query');
>> 
>> HTH
>> 
>> -Mike
>> 
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> -- 
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From kpgraham at gmail.com  Fri Mar 26 19:45:37 2010
From: kpgraham at gmail.com (Keith P. Graham)
Date: Fri, 26 Mar 2010 15:45:37 -0400
Subject: [wp-hackers] Best way to abort Plugin installation
Message-ID: <bbdab5d41003261245s2b73148fm4d4496546265f95b@mail.gmail.com>

I have a plugin that requires PHP 5 and SimpleXML. I would like to
check the requirements on installation and show a message if the
installation can't proceed.

I think that this belongs in the activation hook, but the only
suggestion that I can find is to perform a die() with my message. This
will show up as a fatal error.

I think that a fatal error is not what is called for. I'd like a more
graceful way to back out of the installation and die() seems too
drastic.

What I would like to see is the opportunity to display a well
formatted message explaining what is wrong and some possible
solutions, but without the user seeing some scary error messages which
cause them to go running over and giving the plugin a zero rating.

Has anyone done this?

Keith

From otto at ottodestruct.com  Fri Mar 26 20:23:51 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 26 Mar 2010 15:23:51 -0500
Subject: [wp-hackers] Best way to abort Plugin installation
In-Reply-To: <bbdab5d41003261245s2b73148fm4d4496546265f95b@mail.gmail.com>
References: <bbdab5d41003261245s2b73148fm4d4496546265f95b@mail.gmail.com>
Message-ID: <161617691003261323g7b7e2342ic4bc6f923865de8b@mail.gmail.com>

Use a wp_die(). It's a prettier version of die.

-Otto



On Fri, Mar 26, 2010 at 2:45 PM, Keith P. Graham <kpgraham at gmail.com> wrote:
> I have a plugin that requires PHP 5 and SimpleXML. I would like to
> check the requirements on installation and show a message if the
> installation can't proceed.
>
> I think that this belongs in the activation hook, but the only
> suggestion that I can find is to perform a die() with my message. This
> will show up as a fatal error.
>
> I think that a fatal error is not what is called for. I'd like a more
> graceful way to back out of the installation and die() seems too
> drastic.
>
> What I would like to see is the opportunity to display a well
> formatted message explaining what is wrong and some possible
> solutions, but without the user seeing some scary error messages which
> cause them to go running over and giving the plugin a zero rating.
>
> Has anyone done this?
>
> Keith
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Fri Mar 26 20:34:34 2010
From: otto at ottodestruct.com (Otto)
Date: Fri, 26 Mar 2010 15:34:34 -0500
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <e1202cb11003261147k189ac5d1tfbb27f826097eb9e@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com> 
	<5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com> 
	<4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com> 
	<5dc2163e1003252116j9efe855vff454a7e90e638ed@mail.gmail.com> 
	<349fe48b1003252249p35502d68r21e12d6506b75b4d@mail.gmail.com> 
	<e1202cb11003261035m43db4173nafd6bf8c394550cc@mail.gmail.com> 
	<349fe48b1003261042h503ac073v53e1e1f99744188c@mail.gmail.com> 
	<e1202cb11003261147k189ac5d1tfbb27f826097eb9e@mail.gmail.com>
Message-ID: <161617691003261334pb6510c5v80d70e45c8129364@mail.gmail.com>

Has anybody ever seen a real-world install of PHP hosting that lacked
GD? I never have.

-Otto



On Fri, Mar 26, 2010 at 1:47 PM, Jeremy Clarke <jer at simianuprising.com> wrote:
> On Fri, Mar 26, 2010 at 1:42 PM, scribu <scribu at gmail.com> wrote:
>> Could you please clarify what you mean by "other similar work" ?
>
> I didn't have anything particular in mind, though my sense is you
> could tackle a lot of different problems with the GSOC time/money. If
> anything I just wanted to speculate that GD might actually be on 99%
> of PHP installs or something like that, in which case abstracting a
> new API for it might not be worth your valuable time :)
>
> --
> Jeremy Clarke
> Code and Design | globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From aaron at jorb.in  Fri Mar 26 20:44:08 2010
From: aaron at jorb.in (Aaron Jorbin)
Date: Fri, 26 Mar 2010 13:44:08 -0700
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <161617691003261334pb6510c5v80d70e45c8129364@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com>
	<5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com>
	<4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com>
	<5dc2163e1003252116j9efe855vff454a7e90e638ed@mail.gmail.com>
	<349fe48b1003252249p35502d68r21e12d6506b75b4d@mail.gmail.com>
	<e1202cb11003261035m43db4173nafd6bf8c394550cc@mail.gmail.com>
	<349fe48b1003261042h503ac073v53e1e1f99744188c@mail.gmail.com>
	<e1202cb11003261147k189ac5d1tfbb27f826097eb9e@mail.gmail.com>
	<161617691003261334pb6510c5v80d70e45c8129364@mail.gmail.com>
Message-ID: <dc89e3ef1003261344q3c9a257fmf04ba93031d171e6@mail.gmail.com>

On Fri, Mar 26, 2010 at 1:34 PM, Otto <otto at ottodestruct.com> wrote:
> Has anybody ever seen a real-world install of PHP hosting that lacked
> GD? I never have.
>
> -Otto

Until recently (10.6) the PHP that shipped with OSx server lacked GD.

Overall I like this idea.  I would hope that the class could also be
built in a way that it could be easy to extend and include ffmpeg for
video conversion.

-Aaron

From charles at cefm.ca  Fri Mar 26 22:09:29 2010
From: charles at cefm.ca (Charles Frees-Melvin)
Date: Fri, 26 Mar 2010 18:09:29 -0400
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <dc89e3ef1003261344q3c9a257fmf04ba93031d171e6@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com>
	<5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com>
	<4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com>
	<5dc2163e1003252116j9efe855vff454a7e90e638ed@mail.gmail.com>
	<349fe48b1003252249p35502d68r21e12d6506b75b4d@mail.gmail.com>
	<e1202cb11003261035m43db4173nafd6bf8c394550cc@mail.gmail.com>
	<349fe48b1003261042h503ac073v53e1e1f99744188c@mail.gmail.com>
	<e1202cb11003261147k189ac5d1tfbb27f826097eb9e@mail.gmail.com>
	<161617691003261334pb6510c5v80d70e45c8129364@mail.gmail.com>
	<dc89e3ef1003261344q3c9a257fmf04ba93031d171e6@mail.gmail.com>
Message-ID: <37559D7A-832F-40FA-ABAD-37E1C16185D7@cefm.ca>

I totally agree that WordPress should be flexible to be considered a  
platform that pretty much any additional functionality could be added  
on. ffmpeg would be a good addition not nessesarily put in core but  
there should be the support to add as a plugin.

--
Charles E. Frees-Melvin
charles at cefm.ca
www.cefm.ca
506-640-1007

Sent from my iPhone

On 2010-03-26, at 16:44, Aaron Jorbin <aaron at jorb.in> wrote:

> On Fri, Mar 26, 2010 at 1:34 PM, Otto <otto at ottodestruct.com> wrote:
>> Has anybody ever seen a real-world install of PHP hosting that lacked
>> GD? I never have.
>>
>> -Otto
>
> Until recently (10.6) the PHP that shipped with OSx server lacked GD.
>
> Overall I like this idea.  I would hope that the class could also be
> built in a way that it could be easy to extend and include ffmpeg for
> video conversion.
>
> -Aaron
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Fri Mar 26 22:38:47 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 26 Mar 2010 18:38:47 -0400
Subject: [wp-hackers] Add Post Statuses?
Message-ID: <00787BB2-F19E-4B7F-9BCA-56A970452B73@newclarity.net>

I'm trying to figure out how to add a new post status in wp3.0.  I run register_post_status() and it enables querying for that post type:

register_post_status(
	'hidden',
	array(
		'label' => _x('Hidden', 'post'),
		'public' => true,
		'label_count' => _n_noop('Hidden <span class="count">(%s)</span>', 'Hidden <span class="count">(%s)</span>')
	)
);

...however when I go to a post or page editor in the admin the "Hidden" status does not show up.  Clearly I need to do something else.  Can anyone suggest what that would be?  

Thanks in advance.

-Mike

From wp-hackers at striderweb.com  Fri Mar 26 23:56:15 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri, 26 Mar 2010 18:56:15 -0500
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <LBM4CkBZzyqLFwHL@dsl-217-155-35-239.zen.co.uk>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
	<1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>
	<421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>
	<1269299036.2137.34.camel@rivalry.c7.campus.utcluj.ro>
	<e1202cb11003241119jc9e3cf8y47e26c8438dcd836@mail.gmail.com>
	<LBM4CkBZzyqLFwHL@dsl-217-155-35-239.zen.co.uk>
Message-ID: <BBB29309-2987-493A-91CD-CE27FA4E8AD9@striderweb.com>


On Mar 25, 2010, at 4:28 AM, mrmist wrote:

> it would pain me greatly to see someone getting karma points for spamming the forum / codex with useless bilge that is fit for the trash can, whilst quality responses that take a lot of time to craft "only" make 1 karma point.
> 
> Perhaps there could be some rating system applied to forum responses, or note could be taken over when an answer "resolves" a problem.

Yes -- I think a simple thumbsup/thumbsdown switch that readers can hit would be useful here.  Karma shouldn't be automated -- real people should have to indicate that something is good.

Stephen

From wp-hackers at striderweb.com  Sat Mar 27 00:03:40 2010
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri, 26 Mar 2010 19:03:40 -0500
Subject: [wp-hackers] [GSOC-Proposal] Application prototype
In-Reply-To: <88a23f801003250739j6f3ab049ib37b4021c4bb041c@mail.gmail.com>
References: <88a23f801003250739j6f3ab049ib37b4021c4bb041c@mail.gmail.com>
Message-ID: <CAF6A059-0DE6-4156-800D-397D27C8221B@striderweb.com>


On Mar 25, 2010, at 9:39 AM, Sebasti?n Ventura wrote:

> I don't believe in
> browser sniffing because as browsers are speeding their way through
> improvements

You shouldn't sniff for browser, but you certainly *can* snif for capabilities.  I would try to put in code that tests for the ability to render HTML5 video. If that's there use HTML5; if not, try Flash.  (anyone know a good way to test for HTML5 ?)

No interface for the end user, if possible.  The code should do the work.

Stephen

From batmoo at gmail.com  Sat Mar 27 00:36:54 2010
From: batmoo at gmail.com (Mohammad Jangda)
Date: Fri, 26 Mar 2010 20:36:54 -0400
Subject: [wp-hackers] [GSOC-Proposal] Application prototype
In-Reply-To: <CAF6A059-0DE6-4156-800D-397D27C8221B@striderweb.com>
References: <88a23f801003250739j6f3ab049ib37b4021c4bb041c@mail.gmail.com> 
	<CAF6A059-0DE6-4156-800D-397D27C8221B@striderweb.com>
Message-ID: <eaaa36c91003261736v59026accoe041b253126246e6@mail.gmail.com>

>
> You shouldn't sniff for browser, but you certainly *can* snif for
> capabilities.  I would try to put in code that tests for the ability to
> render HTML5 video. If that's there use HTML5; if not, try Flash.  (anyone
> know a good way to test for HTML5 ?)
>


Pretty easy to check for video tag support:
http://diveintohtml5.org/detect.html#video

Alternatively, here's a link that shows you how to fallback to Flash if
<video> is not supported:
http://henriksjokvist.net/archive/2009/2/using-the-html5-video-tag-with-a-flash-fallback

--
Mohammad Jangda
www.digitalize.ca | @mjangda

From stas at nerd.ro  Sat Mar 27 00:40:31 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Sat, 27 Mar 2010 02:40:31 +0200
Subject: [wp-hackers] [GSOC-Proposal] Application prototype
In-Reply-To: <CAF6A059-0DE6-4156-800D-397D27C8221B@striderweb.com>
References: <88a23f801003250739j6f3ab049ib37b4021c4bb041c@mail.gmail.com>
	<CAF6A059-0DE6-4156-800D-397D27C8221B@striderweb.com>
Message-ID: <1269650431.2176.8.camel@rivalry.c7.campus.utcluj.ro>

?n data de Vi, 26-03-2010 la 19:03 -0500, Stephen Rider a scris:
> On Mar 25, 2010, at 9:39 AM, Sebasti?n Ventura wrote:
> 
> > I don't believe in
> > browser sniffing because as browsers are speeding their way through
> > improvements
> 
> You shouldn't sniff for browser, but you certainly *can* snif for capabilities.  I would try to put in code that tests for the ability to render HTML5 video. If that's there use HTML5; if not, try Flash.  (anyone know a good way to test for HTML5 ?)
> 
> No interface for the end user, if possible.  The code should do the work.
> 

I've heard only good things about Modernizr [1].

I think that can be a good starting point to understand what needs
sniffing and how to do that.

[1]: http://www.modernizr.com/


-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From matt at mattjacob.com  Sat Mar 27 01:40:46 2010
From: matt at mattjacob.com (Matt Jacob)
Date: Fri, 26 Mar 2010 18:40:46 -0700
Subject: [wp-hackers] Best way to abort Plugin installation
In-Reply-To: <bbdab5d41003261245s2b73148fm4d4496546265f95b@mail.gmail.com>
References: <bbdab5d41003261245s2b73148fm4d4496546265f95b@mail.gmail.com>
Message-ID: <4BAD621E.7050405@mattjacob.com>

On 3/26/10 12:45 PM, Keith P. Graham wrote:
> I think that this belongs in the activation hook, but the only
> suggestion that I can find is to perform a die() with my message. This
> will show up as a fatal error.

You should do it *before* the activation hook. I have a bootstrap file 
that contains my plugin's header and license information, and it 
performs checks to make sure everything is in place. If the requirements 
are met, it includes and instantiates my plugin's main controller class.

If an error is found (PHP version too old, missing lib, etc.), it 
displays a standard admin error message via the add_action hook.

Does that make sense?

Matt

From stephen.tigner at gmail.com  Sat Mar 27 06:35:27 2010
From: stephen.tigner at gmail.com (Stephen Tigner)
Date: Sat, 27 Mar 2010 15:35:27 +0900
Subject: [wp-hackers] Idea for a GSoC project - Image annotation plugin
In-Reply-To: <5a1dad881003250515t377a651asd862d5f4d108136f@mail.gmail.com>
References: <19cbec831003242220x55c61ffak9eaf4bf738420bbf@mail.gmail.com> 
	<5a1dad881003250515t377a651asd862d5f4d108136f@mail.gmail.com>
Message-ID: <19cbec831003262335k2f2f6e27o3a1edf51b9384c26@mail.gmail.com>

Yeah, that looks like the perfect place to store the annotation metadata.
As for tagging using annotations, that could be possible, but I think
that would only be feasible to allow the post author to add such
annotations, since (I believe) readers/comnenters shouldn't be able to
change the tags on a post. I think that could be feasible, but would
likely require a different approach from the comments-based one I'm
taking.

After doing some research, poking at the database, and experimenting a
bit, it seems that all values in the comment_type are treated as
trackbacks/pingbacks by default. (Normal comments have that field
blank.) I'm going to keep digging, but does anyone know offhand if
this is something that can be handled on the backend (i.e. in a
plugin), or if its theme-dependent?

Also, I've been thinking about how to approach identifying which
annotations go with which image. One approach would be to base it on
the image id ("wp-image-X") that shows up in the class attribute for
each image that is uploaded to WP's internal "gallery" and then
embedded in a post. However, this only works if you are using that
built-in functionality. If, for instance, you are serving images from
another (sub)domain, and just embedding them with image tags, they
won't have those identifiers. So, the other idea I had was to hash the
image's URL and use that as an identifier. Why the full URL and not
just the filename? To avoid possible collisions when image files (that
can be completely different) have the same name, but different
locations. I was wondering about your thoughts on that approach. n.n

Sorry for the long email. ^^; Thanks in advance for your feedback!
-- Stephen


On Thu, Mar 25, 2010 at 9:15 PM, Alex Hempton-Smith
<hempsworth at googlemail.com> wrote:
> Take a look at comment meta which was recently added to WP, which is
> where you could save the annotation data.
>
> It would be interesting to see if you could tie in tags, so you could
> tag people or things in the photo, which would be added to the tags
> for that post perhaps..
>
> On Thursday, March 25, 2010, Stephen Tigner <stephen.tigner at gmail.com> wrote:
>> I have an idea for a GSoC project I wanted to get some feedback on.
>> What I'd like to do is create an image annotation plugin for Wordpress
>> using (http://blog.flipbit.co.uk/2009/03/jquery-image-annotation-plugin.html)
>> this jQuery image annotation plugin and AJAX.
>>
>> I was inspired by the implementation of this on dannychoo.com and
>> figure.fm (running on the Mirai Gaia platform), and wanted to bring
>> similar functionality to my Wordpress blogs.
>>
>> Basically, in that implementation, readers can leave annotations as
>> comments that reference specific sections of an image. Much better
>> than having to say things like, "Who's that guy third from the left in
>> the second row?" Instead, you can say, "Who is this?" and just put
>> that as an annotation to the image, where the annotation box on the
>> image is around the person in question.
>>
>> Now, as far as how the annotations are presented to the readers, there
>> are two scenarios that come to mind. One, which I've seen on some
>> sites, is to keep the annotations and comments completely separate.
>> The other is, like on Mirai Gaia, to make the annotations a special
>> kind of comment.
>>
>> I prefer the latter, because then the annotations aren't removed from
>> the conversation. Instead, they become part of it, as I feel they
>> should be, and can be replied to (and handled) just like other
>> comments.
>>
>> However, this brings up another question, as while there are post meta
>> and user meta tables, no such thing exists for comments. While I would
>> like to not have to add extra tables, it seems that to store the
>> relevant metadata about the annotation comments, a new table would be
>> required for this plugin. Does that sound reasonable?
>>
>> Also, I would like to give said comments a slightly different
>> presentation than normal comments. For instance, include a thumbnail
>> link back up to the particular image the annotation is for. I can
>> probably add a filter to the comment_text function for that. However,
>> to trigger that, I was thinking of adding an additional comment type
>> of "annotation," and I was wondering if doing so would break things.
>>
>> Sorry for the long-winded email, and thanks in advance. ^_^
>>
>> -- Stephen
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> --
> -- Alex ?(Hempsworth)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Sat Mar 27 09:30:08 2010
From: scribu at gmail.com (scribu)
Date: Sat, 27 Mar 2010 11:30:08 +0200
Subject: [wp-hackers] Add Post Statuses?
In-Reply-To: <00787BB2-F19E-4B7F-9BCA-56A970452B73@newclarity.net>
References: <00787BB2-F19E-4B7F-9BCA-56A970452B73@newclarity.net>
Message-ID: <349fe48b1003270230w73a31a19g1ced8fd25e2823@mail.gmail.com>

You need to have at least one post with that status for the filter
link to appear.

On 3/27/10, Mike Schinkel <mikeschinkel at newclarity.net> wrote:
> I'm trying to figure out how to add a new post status in wp3.0.  I run
> register_post_status() and it enables querying for that post type:
>
> register_post_status(
> 	'hidden',
> 	array(
> 		'label' => _x('Hidden', 'post'),
> 		'public' => true,
> 		'label_count' => _n_noop('Hidden <span class="count">(%s)</span>', 'Hidden
> <span class="count">(%s)</span>')
> 	)
> );
>
> ...however when I go to a post or page editor in the admin the "Hidden"
> status does not show up.  Clearly I need to do something else.  Can anyone
> suggest what that would be?
>
> Thanks in advance.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://scribu.net

From scribu at gmail.com  Sat Mar 27 09:31:08 2010
From: scribu at gmail.com (scribu)
Date: Sat, 27 Mar 2010 11:31:08 +0200
Subject: [wp-hackers] Add Post Statuses?
In-Reply-To: <349fe48b1003270230w73a31a19g1ced8fd25e2823@mail.gmail.com>
References: <00787BB2-F19E-4B7F-9BCA-56A970452B73@newclarity.net>
	<349fe48b1003270230w73a31a19g1ced8fd25e2823@mail.gmail.com>
Message-ID: <349fe48b1003270231x6875e2f4h5e185bb6c80c0563@mail.gmail.com>

Oh, and I don't think the quick editor or the publish metabox have
support for custom post statuses yet.

On 3/27/10, scribu <scribu at gmail.com> wrote:
> You need to have at least one post with that status for the filter
> link to appear.
>
> On 3/27/10, Mike Schinkel <mikeschinkel at newclarity.net> wrote:
>> I'm trying to figure out how to add a new post status in wp3.0.  I run
>> register_post_status() and it enables querying for that post type:
>>
>> register_post_status(
>> 	'hidden',
>> 	array(
>> 		'label' => _x('Hidden', 'post'),
>> 		'public' => true,
>> 		'label_count' => _n_noop('Hidden <span class="count">(%s)</span>',
>> 'Hidden
>> <span class="count">(%s)</span>')
>> 	)
>> );
>>
>> ...however when I go to a post or page editor in the admin the "Hidden"
>> status does not show up.  Clearly I need to do something else.  Can
>> anyone
>> suggest what that would be?
>>
>> Thanks in advance.
>>
>> -Mike
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
> --
> http://scribu.net
>


-- 
http://scribu.net

From mikeschinkel at newclarity.net  Sat Mar 27 09:50:38 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 27 Mar 2010 05:50:38 -0400
Subject: [wp-hackers] Add Post Statuses?
In-Reply-To: <349fe48b1003270231x6875e2f4h5e185bb6c80c0563@mail.gmail.com>
References: <00787BB2-F19E-4B7F-9BCA-56A970452B73@newclarity.net>
	<349fe48b1003270230w73a31a19g1ced8fd25e2823@mail.gmail.com>
	<349fe48b1003270231x6875e2f4h5e185bb6c80c0563@mail.gmail.com>
Message-ID: <E8CCF0BC-DC74-4089-8D25-B6FED2DA7E97@newclarity.net>

Thanks. 

(I was about to say your just previous suggestion was a chicken-or-egg problem. :-)

So I guess this is the ticket that addresses this issue?  http://core.trac.wordpress.org/ticket/12567

-Mike

On Mar 27, 2010, at 5:31 AM, scribu wrote:

> Oh, and I don't think the quick editor or the publish metabox have
> support for custom post statuses yet.
> 
> On 3/27/10, scribu <scribu at gmail.com> wrote:
>> You need to have at least one post with that status for the filter
>> link to appear.
>> 
>> On 3/27/10, Mike Schinkel <mikeschinkel at newclarity.net> wrote:
>>> I'm trying to figure out how to add a new post status in wp3.0.  I run
>>> register_post_status() and it enables querying for that post type:
>>> 
>>> register_post_status(
>>> 	'hidden',
>>> 	array(
>>> 		'label' => _x('Hidden', 'post'),
>>> 		'public' => true,
>>> 		'label_count' => _n_noop('Hidden <span class="count">(%s)</span>',
>>> 'Hidden
>>> <span class="count">(%s)</span>')
>>> 	)
>>> );
>>> 
>>> ...however when I go to a post or page editor in the admin the "Hidden"
>>> status does not show up.  Clearly I need to do something else.  Can
>>> anyone
>>> suggest what that would be?
>>> 
>>> Thanks in advance.
>>> 
>>> -Mike
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>> 
>> 
>> --
>> http://scribu.net
>> 
> 
> 
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From pt at ptahd.com  Sat Mar 27 10:44:09 2010
From: pt at ptahd.com (Ptah Dunbar)
Date: Sat, 27 Mar 2010 11:44:09 +0100
Subject: [wp-hackers] Add Post Statuses?
In-Reply-To: <E8CCF0BC-DC74-4089-8D25-B6FED2DA7E97@newclarity.net>
References: <00787BB2-F19E-4B7F-9BCA-56A970452B73@newclarity.net>
	<349fe48b1003270230w73a31a19g1ced8fd25e2823@mail.gmail.com>
	<349fe48b1003270231x6875e2f4h5e185bb6c80c0563@mail.gmail.com>
	<E8CCF0BC-DC74-4089-8D25-B6FED2DA7E97@newclarity.net>
Message-ID: <64FA7DD3-507F-4A36-A5B2-82295A517346@ptahd.com>

Related: http://core.trac.wordpress.org/ticket/12706

On Mar 27, 2010, at 10:50 AM, Mike Schinkel wrote:

> Thanks. 
> 
> (I was about to say your just previous suggestion was a chicken-or-egg problem. :-)
> 
> So I guess this is the ticket that addresses this issue?  http://core.trac.wordpress.org/ticket/12567
> 
> -Mike
> 
> On Mar 27, 2010, at 5:31 AM, scribu wrote:
> 
>> Oh, and I don't think the quick editor or the publish metabox have
>> support for custom post statuses yet.
>> 
>> On 3/27/10, scribu <scribu at gmail.com> wrote:
>>> You need to have at least one post with that status for the filter
>>> link to appear.
>>> 
>>> On 3/27/10, Mike Schinkel <mikeschinkel at newclarity.net> wrote:
>>>> I'm trying to figure out how to add a new post status in wp3.0.  I run
>>>> register_post_status() and it enables querying for that post type:
>>>> 
>>>> register_post_status(
>>>> 	'hidden',
>>>> 	array(
>>>> 		'label' => _x('Hidden', 'post'),
>>>> 		'public' => true,
>>>> 		'label_count' => _n_noop('Hidden <span class="count">(%s)</span>',
>>>> 'Hidden
>>>> <span class="count">(%s)</span>')
>>>> 	)
>>>> );
>>>> 
>>>> ...however when I go to a post or page editor in the admin the "Hidden"
>>>> status does not show up.  Clearly I need to do something else.  Can
>>>> anyone
>>>> suggest what that would be?
>>>> 
>>>> Thanks in advance.
>>>> 
>>>> -Mike
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>> 
>>> 
>>> --
>>> http://scribu.net
>>> 
>> 
>> 
>> -- 
>> http://scribu.net
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp-hackers at tobias.baethge.com  Sat Mar 27 10:53:19 2010
From: wp-hackers at tobias.baethge.com (TobiasBg)
Date: Sat, 27 Mar 2010 11:53:19 +0100 (CET)
Subject: [wp-hackers] Best way to abort Plugin installation
In-Reply-To: <4BAD621E.7050405@mattjacob.com>
Message-ID: <20100327105320.0E470180CEBB1@dd19416.kasserver.com>

Hi,

> You should do it *before* the activation hook. I have a bootstrap file 
> that contains my plugin's header and license information, and it 
> performs checks to make sure everything is in place. If the requirements 
> are met, it includes and instantiates my plugin's main controller class.

So this means, that you allow the plugin to actually get activated (in the WP sense), it just has no functionality if those checks aren't fulfilled (because the bootstrapper doesn't load the plugin's core)?

Doesn't that mean that the checks are performed on every page load?

Do you have sample code to share? Or maybe the link to your plugin in the repository?

Does anyone know other plugins that are doing a kind of activation check?

Thanks!
Tobias




From n.prasath.002 at gmail.com  Sat Mar 27 13:02:17 2010
From: n.prasath.002 at gmail.com (nadarajah prasath)
Date: Sat, 27 Mar 2010 18:32:17 +0530
Subject: [wp-hackers] User roles - GSOC proposal
Message-ID: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>

Hi hackers,
I,m interested in the idea user roles.

The objectives of this project is to

   - Simplify the current implementation of roles.
   - Allow category level permissions for roles.
   - Optimized storage for querying user permissions.


The current role system allows you to set capabilities per user basis. It's
flexible but also complicated.
 Capabilities are saved for individual users and it requires loading all the
users into the memory to determine for capability X.
this may give performance issues with high number of users.

I propose to eliminate individual capabilities of user and assign
capabilities for roles.

*Entities*

   - Users ? a blog can have any number of user.
   - Roles ? a blog can any number of roles. Admin can create custom roles.
   - Categories ? post categories.


*Relationships*

   - Users&Roles ? a single user can act multiple roles in different
   categories. For example in a news blog the user can act as a contributor to
   sports category and editor  in   entertainment category.
   - Users&Categories ? a single user can be assigned to multiple
   categories. For example a user can act as editor for both
   sports&entertainment category.

*Views*

   - Users&Roles&Categories ? In individual user view a widget that display
   all roles and a  tree view within the roles to select multiple categories
   (similar in post view where we select categories that post belong).
   - Roles ? ability to create custom roles. Capabilities of roles in one
   view so admin has more control and information over capabilities (similar to
   drupal)

*database*
wp_usermap ? A database table that maps userId with roleId & termId. So now
checking for user with capability X or checking for a user for a specific
category will be easy. This will increase the performance.

I have given a lot of thought whether to allow users to act in multiple
roles and I think it,s essential for blogs having large users.
 What do you think?.

Feel free to add your comments and feedback on this. i,m eagerly waiting for
it.
Prasath.N

From leemagpie at gmail.com  Sat Mar 27 14:43:23 2010
From: leemagpie at gmail.com (=?GB2312?B?wO641g==?=)
Date: Sat, 27 Mar 2010 22:43:23 +0800
Subject: [wp-hackers] WordPress Import/Outport Project for GSoC2010 --
	Beijing Li Gang
Message-ID: <148fc4161003270743p53aaaf18u8f037d2349f79504@mail.gmail.com>

Hi everyone. I am Li Gang and in my junior year in Beijing Institute of
Technology. This is my first year participating in GSoC. I have finished my
proposal and posted it at http://leebird.misland.org/?p=37

Maybe it is a little late, but I still hope for any feedback and thank you
very much!

From ralph at dasralph.de  Sat Mar 27 17:22:30 2010
From: ralph at dasralph.de (Ralph Bergmann)
Date: Sat, 27 Mar 2010 18:22:30 +0100
Subject: [wp-hackers] GSoC 2010
Message-ID: <4BAE3ED6.40204@dasralph.de>

Hi,


currently I got no answers to my GSoC proposal :(
Are you only interested in mainstream plugins?

Ralph

-- 

Ralph Bergmann


www              http://www.dasralph.de/
mail             ralph at dasralph.de
skype            dasralph

xing             http://www.xing.com/profile/Ralph_Bergmann3
linkedin         http://www.linkedin.com/in/ralphbergmann
facebook         http://www.facebook.com/dasralph

pgp key id       30C4ECD8
pgp fingerprint  C6E4 3435 7CC8 5008 54EC 1C86 4176 7F75 30C4 ECD8

From jayarjo at gmail.com  Sat Mar 27 19:24:35 2010
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sat, 27 Mar 2010 23:24:35 +0400
Subject: [wp-hackers] do I need to register custom post_status-es?
In-Reply-To: <376ADF6D-F610-4DFA-8F20-2E780354410F@newclarity.net>
References: <9aa12a491003240429h4ad44a93l74df97271e70f1f5@mail.gmail.com> 
	<C904D5A1-54D4-456C-9CD1-D92F4A84A280@newclarity.net>
	<9aa12a491003260444g210651dem75c98df1e36a5ff1@mail.gmail.com> 
	<376ADF6D-F610-4DFA-8F20-2E780354410F@newclarity.net>
Message-ID: <9aa12a491003271224n73efd9caw3f9dccd509dad0ab@mail.gmail.com>

Thanks Mike,

Actually this is something I was looking for, but then you are right
it's not available in wp 2.9.x. Obviously something similar has to be
done in wp < 3.0, but wondering what exactly.

@Tim,

Yes, those are not built in post_status-es, and probably if I not come
to some solution somehow, I will turn to use publish and draft instead
of active/inactive. But making custom post_statuses work can be very
useful later on.

On Fri, Mar 26, 2010 at 11:09 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> Davit,
>
> After sending that email I feared you might confuse the reason I sent the second link. The first link explains that post_status is private and that you (may) need to set it in manage_pages_query. The second link shows you an example manage_pages_query. ?I wasn't 100% sure of this solution so I offered it up by saying "I think..." assuming it would give you what you need to solve the problem.
>
> Before replying today I decided to track down an actual solution. It seems that information I gave might have been was wrong though I still don't fully understand that area of the code. Sorry for the prior inadvertent misdirection but the best I've been able to tell is that maybe you haven't run register_post_status() in your plugin or theme's functions.php file?, i.e.:
>
> ? ? ? ?register_post_status('active');
>
> When I run this query without registering the active status I get all posts, regardless of status:
>
> ? ? ? ?$q = new WP_Query('post_type=post&post_status=active');
>
> After registering I only get the one 'active' post I added for testing.
>
> HTH; let me know if not.
>
> -Mike
> P.S. I tested on a version of wp.30 so maybe it's not what you need for wp2.9...
>
>
> On Mar 26, 2010, at 7:44 AM, Davit Barbakadze wrote:
>
>> Hi Mike,
>>
>> Thanks, but I do not actually use or need to use either meta_value or
>> meta_key. I just can't filter my custom type posts, by custom
>> post_status fields.
>>
>> :(
>>
>> On Wed, Mar 24, 2010 at 9:28 PM, Mike Schinkel
>> <mikeschinkel at newclarity.net> wrote:
>>> Davit:
>>>
>>> On Mar 24, 2010, at 7:29 AM, Davit Barbakadze wrote:
>>>> I'm using the following code to retrieve custom post_type-es:
>>>>
>>>> $wp_query = new
>>>> WP_Query("post_type=event&post_status=$post_status&posts_per_page=15&paged=$paged{$search}");
>>>>
>>>> Quoted line resolves for example to:
>>>> post_type=event&post_status=active&posts_per_page=15&paged=1 (string
>>>> has been printed out not just made up).
>>>>
>>>> Although while I have specific post_status defined, for some
>>>> reason it does fetch all of the posts with post_type=event, no matter
>>>> are they marked as active in post_status or - inactive. Not sure what
>>>> could be the reason. For post_status - trash it filters them as
>>>> expected. Do I need to register custom post_status-es
>>>> maybe?
>>>
>>> I think these two pages might hold your answers:
>>>
>>> --------------------
>>> http://osdir.com/ml/wordpress-hackers/2010-01/msg00233.html
>>> --------------------
>>> "Bear in mind that the wp() call only accept query vars which are specified in the $public_query_vars and $private_query_vars arrays which are part of the WP class and these don't include anything to do with post_meta.
>>>
>>> The public_query_vars are those which can be specified in a url and the private_query_vars are the extra ones which can be specified only by code
>>>
>>> You will need to extend the list of private_query_vars which it supports to get the post_meta ones passed through"
>>>
>>>
>>> --------------------
>>> http://wordpress.org/support/topic/281165?replies=3
>>> --------------------
>>> function custom_pages_query( $query )
>>> {
>>> ? ? ? ?global $wp, $wpdb;
>>>
>>> ? ? ? ?if( isset($_GET["meta_key"]) )
>>> ? ? ? ?{
>>> ? ? ? ? ? ? ? ?$wp->private_query_vars[] = 'meta_key';
>>> ? ? ? ? ? ? ? ?$query['meta_key'] = $_GET["meta_key"];
>>> ? ? ? ?}
>>>
>>> ? ? ? ?if( isset($_GET["meta_value"]) )
>>> ? ? ? ?{
>>> ? ? ? ? ? ? ? ?$wp->private_query_vars[] = 'meta_value';
>>> ? ? ? ? ? ? ? ?$query['meta_value'] = $_GET["meta_value"];
>>> ? ? ? ?}
>>>
>>> ? ? ? ?if( isset($_GET["post_parent"]) )
>>> ? ? ? ?{
>>> ? ? ? ? ? ? ? ?$post_parent = $_GET["post_parent"];
>>> ? ? ? ? ? ? ? ?$wp->private_query_vars[] = 'post_parent';
>>>
>>> ? ? ? ? ? ? ? ?if( !is_numeric($post_parent) )
>>> ? ? ? ? ? ? ? ?{
>>> ? ? ? ? ? ? ? ? ? ? ? ?$post_parent = $wpdb->get_var( $wpdb->prepare("SELECT <code>ID</code> FROM $wpdb->posts WHERE <code>post_name</code>='%s' AND <code>post_type</code>='page' AND <code>post_status</code>='publish'"), $post_parent);
>>>
>>> ? ? ? ? ? ? ? ? ? ? ? ?if( NULL === $post_parent )
>>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?$post_parent = "";
>>> ? ? ? ? ? ? ? ?}
>>>
>>> ? ? ? ? ? ? ? ?$query['post_parent'] = $post_parent;
>>> ? ? ? ?}
>>>
>>> ? ? ? ?return $query;
>>> }
>>> add_filter('manage_pages_query', 'custom_pages_query');
>>>
>>> HTH
>>>
>>> -Mike
>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
>>
>> --
>> Davit Barbakadze
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From ankitsultania2007 at gmail.com  Sat Mar 27 20:03:15 2010
From: ankitsultania2007 at gmail.com (Ankit Sultania)
Date: Sun, 28 Mar 2010 01:33:15 +0530
Subject: [wp-hackers] query
Message-ID: <8aa2156e1003271303y671e2f1ft8b2ae1460344cce1@mail.gmail.com>

hi,

this query is regarding the project ideas posted by wordpress. I am a 3rd
year undergraduate .I just want to know what is required to know regarding
the project ideas mentioned in your ideas page.

Regards,
Ankit

From bernard.d.tremblay at gmail.com  Sat Mar 27 21:38:12 2010
From: bernard.d.tremblay at gmail.com (Bernard D. Tremblay (ben))
Date: Sat, 27 Mar 2010 15:38:12 -0600
Subject: [wp-hackers] Failure in import from LiveJournal
In-Reply-To: <4BAA7D65.6010002@gmail.com>
References: <mailman.15.1269345602.11187.wp-hackers@lists.automattic.com>
	<4BA90D0D.5040106@gmail.com> <4BAA7D65.6010002@gmail.com>
Message-ID: <4BAE7AC4.50508@gmail.com>

Worst possible?
Having the end product looking reasonable 
(http://gnodal.protension.com/journal/) I just spent some time with the 
contents.

uh-oh

Compare it with http://gnodal.livejournal.com

The item from Mar. 5th, 2010 is there ... fine stuff. And there's my 
post of December 18, 2009 ... dandy.
But wait.
What happened to the intervening items? Feb. 25th, 2010 and Feb. 5th, 2010?

Loss of data integrity.
Some items made it in, but others didn't? As though arbitrarily?
I can't work like that.

If someone knows how this is other than random, please let me know.
Cuz I think I just wasted a ton of time / had a huge door slammed in my 
face.

bdt

p.s. if I find the energy to start again I will use an XML approach i.e. 
LJArchive. painful, this.


From scribu at gmail.com  Sat Mar 27 23:23:40 2010
From: scribu at gmail.com (scribu)
Date: Sun, 28 Mar 2010 01:23:40 +0200
Subject: [wp-hackers] GSoC 2010
In-Reply-To: <4BAE3ED6.40204@dasralph.de>
References: <4BAE3ED6.40204@dasralph.de>
Message-ID: <349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>

I think GSoc projects should focus on things that the majority of WP
users would find useful.

Since you didn't provide a link to your proposal, I can't say if it
fits this criteria or not.

Anyway, getting feedback on this mailing list isn't a requirement for
your proposal to be accepted.

On 3/27/10, Ralph Bergmann <ralph at dasralph.de> wrote:
> Hi,
>
>
> currently I got no answers to my GSoC proposal :(
> Are you only interested in mainstream plugins?
>
> Ralph
>
> --
>
> Ralph Bergmann
>
>
> www              http://www.dasralph.de/
> mail             ralph at dasralph.de
> skype            dasralph
>
> xing             http://www.xing.com/profile/Ralph_Bergmann3
> linkedin         http://www.linkedin.com/in/ralphbergmann
> facebook         http://www.facebook.com/dasralph
>
> pgp key id       30C4ECD8
> pgp fingerprint  C6E4 3435 7CC8 5008 54EC 1C86 4176 7F75 30C4 ECD8
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://scribu.net

From scribu at gmail.com  Sat Mar 27 23:30:16 2010
From: scribu at gmail.com (scribu)
Date: Sun, 28 Mar 2010 01:30:16 +0200
Subject: [wp-hackers] query
In-Reply-To: <8aa2156e1003271303y671e2f1ft8b2ae1460344cce1@mail.gmail.com>
References: <8aa2156e1003271303y671e2f1ft8b2ae1460344cce1@mail.gmail.com>
Message-ID: <349fe48b1003271630l69a1970dh25a527e7afbef486@mail.gmail.com>

There isn't anything more to know about the project ideas themselves.

If you need more context, get familiar with the WordPress ecosystem:
read the code, read this mailing list, etc.

On 3/27/10, Ankit Sultania <ankitsultania2007 at gmail.com> wrote:
> hi,
>
> this query is regarding the project ideas posted by wordpress. I am a 3rd
> year undergraduate .I just want to know what is required to know regarding
> the project ideas mentioned in your ideas page.
>
> Regards,
> Ankit
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://scribu.net

From eitanadlerlist at gmail.com  Sun Mar 28 12:13:21 2010
From: eitanadlerlist at gmail.com (Eitan Adler)
Date: Sun, 28 Mar 2010 15:13:21 +0300
Subject: [wp-hackers] GSOC - widget repository
Message-ID: <a0777e081003280513t6ffaeb63w6937bb909973c711@mail.gmail.com>

I am interested in working on a widget repository for wordpress.

Project Description
Description from webpage:
Currently we have a handful of widgets in WordPress core, with other
widgets available via plugin. In some cases, this means a lot of
plugins just to add widgets to sidebars. Project idea: Create a widget
repository on WordPress.org, and introduce a widget search/install
feature tied to this repository in the admin tool (similar to plugins
and themes).

At the link http://codex.wordpress.org/GSoC_2010_Application_Template
it says to "Sharing the project idea on the wp-hackers  mailing list
in advance of your application is a good idea; if you have done so,
summarize the list response to your project idea/approach. "

I have a few questions about this project:
1) Since this is something I found at
http://codex.wordpress.org/GSoC2010#Widgets I'm assuming that this is
something that is desired by the wordpress community. However when
searching the mailing list archives I was unable to find specific
details about how the widgets repository would differ from the plugins
repository - if at all.
I'm looking for any details that would help me complete my GSOC application
2) The page where the project listed doesn't have any mentor listed.
The page with the mentors doesn't have anyone specific for this
project - who would be my mentor?

From piemanek at gmail.com  Sun Mar 28 12:39:22 2010
From: piemanek at gmail.com (Simon B)
Date: Sun, 28 Mar 2010 13:39:22 +0100
Subject: [wp-hackers] Specific hooks for working with custom post types?
Message-ID: <65b196651003280539h486ff035j3b0be3b2791b67c3@mail.gmail.com>

Hi

I've been learning my way round all the great new support for custom post
types in WordPress 3.0, but just wondering if there are plans to make
specific hooks available, for example when saving a custom post type?

Say I have a custom post type called "case-study", will there be a hook
"save_case-study" (and "delete_case-study", etc)?

If not, what's the best way to check the type of the current post?

At the moment I hook into save_post then check the post type like this:

if ( 'case-study' == $_POST['post_type'] ) {
    # save case-study meta...
}

but not sure if this is the best method.

Thanks
Simon

From mikeschinkel at newclarity.net  Sun Mar 28 13:03:35 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 28 Mar 2010 09:03:35 -0400
Subject: [wp-hackers] Specific hooks for working with custom post types?
In-Reply-To: <65b196651003280539h486ff035j3b0be3b2791b67c3@mail.gmail.com>
References: <65b196651003280539h486ff035j3b0be3b2791b67c3@mail.gmail.com>
Message-ID: <E8EAD2B1-04EB-4447-8D5B-8A698FDF08E1@newclarity.net>

On Mar 28, 2010, at 8:39 AM, Simon B wrote:
> I've been learning my way round all the great new support for custom post
> types in WordPress 3.0, but just wondering if there are plans to make
> specific hooks available, for example when saving a custom post type?
> 
> Say I have a custom post type called "case-study", will there be a hook
> "save_case-study" (and "delete_case-study", etc)?
> 
> If not, what's the best way to check the type of the current post?
> 
> At the moment I hook into save_post then check the post type like this:
> 
> if ( 'case-study' == $_POST['post_type'] ) {
>    # save case-study meta...
> }
> 
> but not sure if this is the best method.


In what context are you planning to use this?  Why are you wanting to use $_POST?  

I think what you need would be this:

add_action('wp_insert_post','my_wp_insert_post');

function my_wp_insert_post($post_id,$post) {
	if ( 'case-study' == $post['post_type'] ) {
   		# save case-study meta...
	}
}

Is this not what you need?

-Mike

From piemanek at gmail.com  Sun Mar 28 13:19:56 2010
From: piemanek at gmail.com (Simon B)
Date: Sun, 28 Mar 2010 14:19:56 +0100
Subject: [wp-hackers] Specific hooks for working with custom post types?
In-Reply-To: <E8EAD2B1-04EB-4447-8D5B-8A698FDF08E1@newclarity.net>
References: <65b196651003280539h486ff035j3b0be3b2791b67c3@mail.gmail.com>
	<E8EAD2B1-04EB-4447-8D5B-8A698FDF08E1@newclarity.net>
Message-ID: <65b196651003280619j527f0db6n35f00dbd664bd6a0@mail.gmail.com>

No, I don't need wp_insert_post because I am doing something when a post is
being saved. Here's a clarification:

I've got a meta box on my custom post type edit screen (called using
register_meta_box_cb from within register_post_type), with various fields
into which the user enters metadata.

So when "Publish" or "Save Draft" is clicked, I'm hooking into save_post to
save that data as postmeta. I've used this general idea in loads of sites,
but only now looking into using custom post types.

I was asking because I may want to do different things when the post saves,
depending on the post type.

Hope that makes it a bit clearer!
Simon


On 28 March 2010 14:03, Mike Schinkel <mikeschinkel at newclarity.net> wrote:

> On Mar 28, 2010, at 8:39 AM, Simon B wrote:
> > I've been learning my way round all the great new support for custom post
> > types in WordPress 3.0, but just wondering if there are plans to make
> > specific hooks available, for example when saving a custom post type?
> >
> > Say I have a custom post type called "case-study", will there be a hook
> > "save_case-study" (and "delete_case-study", etc)?
> >
> > If not, what's the best way to check the type of the current post?
> >
> > At the moment I hook into save_post then check the post type like this:
> >
> > if ( 'case-study' == $_POST['post_type'] ) {
> >    # save case-study meta...
> > }
> >
> > but not sure if this is the best method.
>
>
> In what context are you planning to use this?  Why are you wanting to use
> $_POST?
>
> I think what you need would be this:
>
> add_action('wp_insert_post','my_wp_insert_post');
>
> function my_wp_insert_post($post_id,$post) {
>        if ( 'case-study' == $post['post_type'] ) {
>                # save case-study meta...
>        }
> }
>
> Is this not what you need?
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From matt at mattjacob.com  Sun Mar 28 14:53:38 2010
From: matt at mattjacob.com (Matt Jacob)
Date: Sun, 28 Mar 2010 07:53:38 -0700
Subject: [wp-hackers] Best way to abort Plugin installation
In-Reply-To: <20100327105320.0E470180CEBB1@dd19416.kasserver.com>
References: <20100327105320.0E470180CEBB1@dd19416.kasserver.com>
Message-ID: <4BAF6D72.6060908@mattjacob.com>

On 3/27/10 3:53 AM, TobiasBg wrote:
> So this means, that you allow the plugin to actually get activated
> (in the WP sense), it just has no functionality if those checks
> aren't fulfilled (because the bootstrapper doesn't load the plugin's
> core)?

Right. It gets activated and it shows the error message in the admin 
until the user upgrades their setup or deactivates the plugin.

> Doesn't that mean that the checks are performed on every page load?

Yes, but it's not like the checks are computationally intensive. PHP 
will recall its version pretty readily, and checking for the existence 
of PHP modules or their version uses hardly any resources at all.

> Do you have sample code to share? Or maybe the link to your plugin in
> the repository?

Here's a shortened link for email wrapping:
http://ma2t.me/h

Check out pingfm-bootstrap.php for the gist of it. It's more or less 
just a single conditional (simple example):

if (version_compare(PHP_VERSION, '5.1.0', '<')) {
     add_action('admin_notices', 'wp_pingfm_php_version');
}
else {
     require_once(dirname(__FILE__) . '/pingfm-class.php');
     require_once(dirname(__FILE__) . '/pingfm-tags.php');

     // Instantiate the object and let's get rolling!
     $wp_pingfm = new WP_PingFmCustomUrl(__FILE__);
}

I'm sure someone else must be doing the same thing, or at least 
something very similar...

Matt

From scribu at gmail.com  Sun Mar 28 15:37:09 2010
From: scribu at gmail.com (scribu)
Date: Sun, 28 Mar 2010 18:37:09 +0300
Subject: [wp-hackers] Specific hooks for working with custom post types?
In-Reply-To: <65b196651003280619j527f0db6n35f00dbd664bd6a0@mail.gmail.com>
References: <65b196651003280539h486ff035j3b0be3b2791b67c3@mail.gmail.com>
	<E8EAD2B1-04EB-4447-8D5B-8A698FDF08E1@newclarity.net>
	<65b196651003280619j527f0db6n35f00dbd664bd6a0@mail.gmail.com>
Message-ID: <349fe48b1003280837i20a3530ayff5d9a45ac94f908@mail.gmail.com>

You hava an additional parameter on the save_post hook:

function save_post_callback($post_id, $post) {
if ( 'case-study' == $post->post_type {
...
}
}
add_action('save_post', 'save_post_callback', 10, 2);


-- 
http://scribu.net

From scribu at gmail.com  Sun Mar 28 15:41:40 2010
From: scribu at gmail.com (scribu)
Date: Sun, 28 Mar 2010 18:41:40 +0300
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <a0777e081003280513t6ffaeb63w6937bb909973c711@mail.gmail.com>
References: <a0777e081003280513t6ffaeb63w6937bb909973c711@mail.gmail.com>
Message-ID: <349fe48b1003280841g5d43f1e9h8a142e471de9634f@mail.gmail.com>

I'm not convinced having a distinct repository just for widgets is such a
good idea.

For example, where do you put a plugin that adds a widget, but also adds an
additional template tag?

You can easily browse for widgets using the 'widget' tag on the plugin
repository.


-- 
http://scribu.net

From eitanadlerlist at gmail.com  Sun Mar 28 16:09:09 2010
From: eitanadlerlist at gmail.com (Eitan Adler)
Date: Sun, 28 Mar 2010 19:09:09 +0300
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <349fe48b1003280841g5d43f1e9h8a142e471de9634f@mail.gmail.com>
References: <a0777e081003280513t6ffaeb63w6937bb909973c711@mail.gmail.com> 
	<349fe48b1003280841g5d43f1e9h8a142e471de9634f@mail.gmail.com>
Message-ID: <a0777e081003280909q1e61a53bn2d6ce44775428dff@mail.gmail.com>

On Sun, Mar 28, 2010 at 6:41 PM, scribu <scribu at gmail.com> wrote:
> I'm not convinced having a distinct repository just for widgets is such a
> good idea.
This was part of my reason for posting my email - what exactly did the
author of the ideas page have in mind. Was there a different mechanism
for searching or installing that s/he intended?

From stas at nerd.ro  Sun Mar 28 16:14:47 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Sun, 28 Mar 2010 19:14:47 +0300
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <349fe48b1003280841g5d43f1e9h8a142e471de9634f@mail.gmail.com>
References: <a0777e081003280513t6ffaeb63w6937bb909973c711@mail.gmail.com>
	<349fe48b1003280841g5d43f1e9h8a142e471de9634f@mail.gmail.com>
Message-ID: <1269792887.2176.29.camel@rivalry.c7.campus.utcluj.ro>

?n data de Du, 28-03-2010 la 18:41 +0300, scribu a scris:
> I'm not convinced having a distinct repository just for widgets is such a
> good idea.
> 
> For example, where do you put a plugin that adds a widget, but also adds an
> additional template tag?
> 
> You can easily browse for widgets using the 'widget' tag on the plugin
> repository.
> 
> 

+1 for no additional repo.
BuddyPress plugins has no separate repo, why would widgets need one?
bbPress much probably will become a WordPress plugin in short time, so
far they have just a plugins directory, no separate repo/portal.

What were the original reasons for getting a repository?

-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From eitanadlerlist at gmail.com  Sun Mar 28 16:15:07 2010
From: eitanadlerlist at gmail.com (Eitan Adler)
Date: Sun, 28 Mar 2010 19:15:07 +0300
Subject: [wp-hackers] GSOC - comment moderation
Message-ID: <a0777e081003280915y1ea1414scac5c27dc494c75f@mail.gmail.com>

Comment Moderation
   Improve comment moderation in the administration pages so that when
threaded comments are enabled they are displayed when moderating
individual posts comments. It would also be useful to allow comment
re-parenting so as to fix issues where a comment reply is not
associated with the correct parent. Support should also be added to
the XML-RPC api to allow an external app to implement similar
functionality.

Regarding this GSOC idea other than
1) displaying threaded comments on the moderation page
2) Allowing the admin to re-parent comments
3) Adding #1 and #2 to the XML-RPC api
are there other specific things having to do with comments that I
could use for my GSOC proposal.

Also - this being my first summer attempting to do GSOC I'm unsure of
what scope of work I should be aiming for.

From fidler.brian at gmail.com  Sun Mar 28 16:22:00 2010
From: fidler.brian at gmail.com (Brian Fidler)
Date: Sun, 28 Mar 2010 09:22:00 -0700
Subject: [wp-hackers] problem with $post->post_parent
Message-ID: <70d23f011003280922o1c228944x6baf662e0f817b4c@mail.gmail.com>

I'm running the following code to set the gallery displayed based on the
page or the page's parent that a user is currently on.

However it is ignoring the $post->post_parent portion.

if ( is_page('paintings') || $post->post_parent == '912' ) {
    // the page is "About", or the parent of the page is "About"
    $myGallery='3';

} elseif ( is_page('loteria') || $post->post_parent == '25' ) {
    $myGallery='2';

} elseif ( is_page('prints') || $post->post_parent == '914' ) {
    $myGallery='18';

} elseif ( is_page('public-art') || $post->post_parent == '915' ) {
    $myGallery='18';

} elseif ( is_page('shop') || $post->post_parent == '29' ) {
    $myGallery='4';

} else {
    $myGallery='2'; // just in case we are at an unclassified page, perhaps
the home page
}

Any ideas what might be going wrong?

brian

From matt at sivel.net  Sun Mar 28 16:24:09 2010
From: matt at sivel.net (Matt Martz)
Date: Sun, 28 Mar 2010 11:24:09 -0500
Subject: [wp-hackers] problem with $post->post_parent
In-Reply-To: <70d23f011003280922o1c228944x6baf662e0f817b4c@mail.gmail.com>
References: <70d23f011003280922o1c228944x6baf662e0f817b4c@mail.gmail.com>
Message-ID: <dc2b0e8a1003280924r1fe45170w693d8ad4f6ba65f3@mail.gmail.com>

>
> Any ideas what might be going wrong?
>

Did you do:

global $post;

before trying to use $post?

--
Matt Martz
matt at sivel.net

From jane at automattic.com  Sun Mar 28 18:44:07 2010
From: jane at automattic.com (Jane Wells)
Date: Sun, 28 Mar 2010 14:44:07 -0400
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <mailman.6441.1269792903.1345.wp-hackers@lists.automattic.com>
References: <mailman.6441.1269792903.1345.wp-hackers@lists.automattic.com>
Message-ID: <31F4E95E-BE37-4A40-A5CF-CD4207C81EB5@automattic.com>

> I have a few questions about this project:
> 1) Since this is something I found at
> http://codex.wordpress.org/GSoC2010#Widgets I'm assuming that this is
> something that is desired by the wordpress community. However when
> searching the mailing list archives I was unable to find specific
> details about how the widgets repository would differ from the plugins
> repository - if at all.
> I'm looking for any details that would help me complete my GSOC  
> application
This idea arose at the lead developer summit that happened in December  
2009 in Orlando. I think Matt Mullenweg was the one who suggested it.  
Basically, the idea was that plugins that just add widgets create an  
extra layer of code and administration that isn't really needed, and  
makes the user experience less smooth. If we had a repository for  
widgets, instead of going to the plugin repo and searching for widget  
plugins, then installing the plugin, then activating it, then going to  
manage the new widget, we could make widgets more autonomous by having  
a widget repo. Developers would submit widget code, and when users  
wanted a new widget, they would go straight to an 'add new widgets'  
screen, select/install and immediately begin filling in the widget  
settings.  Basically the idea reduces the overhead for users adding  
new widgets.

Maybe Matt can chime in with what he was originally envisioning in  
case I described it incorrectly.


> 2) The page where the project listed doesn't have any mentor listed.
> The page with the mentors doesn't have anyone specific for this
> project - who would be my mentor?
There are not mentors assigned to specific projects because mentors  
will choose students from all the applications we receive, many of  
which may not come from the list on the Codex Ideas page. Basically,  
all mentors will review all applications, and will identify the  
students/projects they are interested in mentoring. If there's someone  
you're interested in working with, you should get in touch with that  
person (the list of mentors is on our Ideas page) and start talking  
about your project ideas so that when it comes time for them to review  
all the applications, they'll have a better sense of who you are and  
what you want to do.
Jane (GSoC administrator for WP)

From raphael.droz at gmail.com  Sun Mar 28 20:16:58 2010
From: raphael.droz at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_Droz?=)
Date: Sun, 28 Mar 2010 22:16:58 +0200
Subject: [wp-hackers] request for a WPMU get_blogid_by_url()
Message-ID: <4BAFB93A.9010205@gmail.com>

Hi,
it recently happened two times to me to request the following :
while your on a site of a network, you want to know if you can handle
the content an URL point to.
It may be "directly modify a resource (an image or any other data, ...)" or
"obtain more info about this resource (eg, a site itself)", like 
"compressing image" or getting
the blog_id of a given guid in the_post() of feedWordPress, ...
That would imply split the string (URL) (with php built-ins) compare the 
subdomain or
URI to see if "is it on the same network ?" then 
get_blogaddress_by_domain().
As an extra it may even return the object itself.
I think that would ease to sometimes cross a kind of "site frontier" 
when a network
contains commons thematics or interactions between its sites.
I attempted to use what I believe is the semantics of sites and network 
to adhere to nowadays.

Raph



From peter.westwood at ftwr.co.uk  Sun Mar 28 20:46:14 2010
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun, 28 Mar 2010 21:46:14 +0100
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <31F4E95E-BE37-4A40-A5CF-CD4207C81EB5@automattic.com>
References: <mailman.6441.1269792903.1345.wp-hackers@lists.automattic.com>
	<31F4E95E-BE37-4A40-A5CF-CD4207C81EB5@automattic.com>
Message-ID: <C257AB30-8F51-4181-9B09-3FBC9A36D07D@ftwr.co.uk>


On 28 Mar 2010, at 19:44, Jane Wells wrote:

>> I have a few questions about this project:
>> 1) Since this is something I found at
>> http://codex.wordpress.org/GSoC2010#Widgets I'm assuming that this is
>> something that is desired by the wordpress community. However when
>> searching the mailing list archives I was unable to find specific
>> details about how the widgets repository would differ from the plugins
>> repository - if at all.
>> I'm looking for any details that would help me complete my GSOC application
> This idea arose at the lead developer summit that happened in December 2009 in Orlando. I think Matt Mullenweg was the one who suggested it. Basically, the idea was that plugins that just add widgets create an extra layer of code and administration that isn't really needed, and makes the user experience less smooth. If we had a repository for widgets, instead of going to the plugin repo and searching for widget plugins, then installing the plugin, then activating it, then going to manage the new widget, we could make widgets more autonomous by having a widget repo. Developers would submit widget code, and when users wanted a new widget, they would go straight to an 'add new widgets' screen, select/install and immediately begin filling in the widget settings.  Basically the idea reduces the overhead for users adding new widgets.
> 
> Maybe Matt can chime in with what he was originally envisioning in case I described it incorrectly.


From my hazy memory the idea may have been a little like.

1) Have a way of marking plugins in the repo as "widget plugins".
2) Have a section of Extend which is just widgets
3) Have a way of selecting from these plugins from the widgets page
4) Auto-install the plugin if someone wants to add that widget to the side bar.

Of course this makes it sound really simple but I would expect there is quite a bit of work needed to get it all working - especially when you consider it will likely need a new api or extension of the current one to make it work

Hope that helps

Peter
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From peter.westwood at ftwr.co.uk  Sun Mar 28 20:56:40 2010
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun, 28 Mar 2010 21:56:40 +0100
Subject: [wp-hackers] GSOC - comment moderation
In-Reply-To: <a0777e081003280915y1ea1414scac5c27dc494c75f@mail.gmail.com>
References: <a0777e081003280915y1ea1414scac5c27dc494c75f@mail.gmail.com>
Message-ID: <35544B0A-306E-4EDD-A1B6-AF85A4549D3B@ftwr.co.uk>


On 28 Mar 2010, at 17:15, Eitan Adler wrote:

> Comment Moderation
>   Improve comment moderation in the administration pages so that when
> threaded comments are enabled they are displayed when moderating
> individual posts comments. It would also be useful to allow comment
> re-parenting so as to fix issues where a comment reply is not
> associated with the correct parent. Support should also be added to
> the XML-RPC api to allow an external app to implement similar
> functionality.
> 
> Regarding this GSOC idea other than
> 1) displaying threaded comments on the moderation page
> 2) Allowing the admin to re-parent comments
> 3) Adding #1 and #2 to the XML-RPC api
> are there other specific things having to do with comments that I
> could use for my GSOC proposal.
> 
> Also - this being my first summer attempting to do GSOC I'm unsure of
> what scope of work I should be aiming for.
> 

As the suggester for this GSOC project I hoped that the work covered by those points would be about the right size project for someone.

As far as scope you should be aiming for what you think you can achieve in the time available.

Ideally, I would suggest that you think in detail about how you might break your time down into sections of work (say 1-2 weeks) and have a good idea of the the flow through you propose which you then include in your application.

It is also worth getting familiar with the area of code you might be working on - maybe have a look and see if there are any simple bugs in trac you could provide a fix for.

Cheers

Peter
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From scribu at gmail.com  Sun Mar 28 20:57:49 2010
From: scribu at gmail.com (scribu)
Date: Sun, 28 Mar 2010 23:57:49 +0300
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <31F4E95E-BE37-4A40-A5CF-CD4207C81EB5@automattic.com>
References: <mailman.6441.1269792903.1345.wp-hackers@lists.automattic.com>
	<31F4E95E-BE37-4A40-A5CF-CD4207C81EB5@automattic.com>
Message-ID: <349fe48b1003281357k3f76b133n615de87157059f4e@mail.gmail.com>

On Sun, Mar 28, 2010 at 9:44 PM, Jane Wells <jane at automattic.com> wrote:

> Basically, the idea was that plugins that just add widgets create an extra
> layer of code and administration that isn't really needed, and makes the
> user experience less smooth. If we had a repository for widgets, instead of
> going to the plugin repo and searching for widget plugins, then installing
> the plugin, then activating it, then going to manage the new widget, we
> could make widgets more autonomous by having a widget repo. Developers would
> submit widget code, and when users wanted a new widget, they would go
> straight to an 'add new widgets' screen, select/install and immediately
> begin filling in the widget settings.  Basically the idea reduces the
> overhead for users adding new widgets.
>


Hm... that actually makes a lot of sense.


-- 
http://scribu.net

From 24-7 at gmx.net  Mon Mar 29 01:51:33 2010
From: 24-7 at gmx.net (24/7)
Date: Mon, 29 Mar 2010 03:51:33 +0200
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>
Message-ID: <006901cacee2$5c492a30$14db7e90$@net>

Better user-management: +1
Reworking the system: +1
Category level permissions: +1
Multiple Roles: +10!!

I think bundling capabilities in roles is perfect. I don't think you have to
scale roles hierarchically, like we had it with (depr.) user_level. The best
approach would be custom roles and then assign multiple roles to users on a
"on demand" base. Ex. You got someone who writes posts, but he's also
responsible for managing your subscribers. So you could give him the role of
"Author" and "HR-Manager". Nice!

Sidenote (maybe a reference): There's a nice plugin called "capability
manager" that does pretty everything that's needed in a nice modular way.

I made a small plugin for myself some time ago to get a better overview of
all the user related data. I posted it on pastebin, so you can grab it
http://pastebin.com/HbJ8Cdvm  Maybe you can use it or it helps you some way.
It's not pretty good coded, but it does it's job. You just upload, activate
and then find it with "tools>show user data".

Hope you make it! 

-K.

-----Urspr?ngliche Nachricht-----
Von: nadarajah prasath [mailto:n.prasath.002 at gmail.com] 
Gesendet: Samstag, 27. M?rz 2010 14:02
An: wp-hackers at lists.automattic.com
Betreff: [wp-hackers] User roles - GSOC proposal

Hi hackers,
I,m interested in the idea user roles.

The objectives of this project is to

   - Simplify the current implementation of roles.
   - Allow category level permissions for roles.
   - Optimized storage for querying user permissions.


The current role system allows you to set capabilities per user basis. It's
flexible but also complicated.
 Capabilities are saved for individual users and it requires loading all the
users into the memory to determine for capability X.
this may give performance issues with high number of users.

I propose to eliminate individual capabilities of user and assign
capabilities for roles.

*Entities*

   - Users ? a blog can have any number of user.
   - Roles ? a blog can any number of roles. Admin can create custom roles.
   - Categories ? post categories.


*Relationships*

   - Users&Roles ? a single user can act multiple roles in different
   categories. For example in a news blog the user can act as a contributor
to
   sports category and editor  in   entertainment category.
   - Users&Categories ? a single user can be assigned to multiple
   categories. For example a user can act as editor for both
   sports&entertainment category.

*Views*

   - Users&Roles&Categories ? In individual user view a widget that display
   all roles and a  tree view within the roles to select multiple categories
   (similar in post view where we select categories that post belong).
   - Roles ? ability to create custom roles. Capabilities of roles in one
   view so admin has more control and information over capabilities (similar
to
   drupal)

*database*
wp_usermap ? A database table that maps userId with roleId & termId. So now
checking for user with capability X or checking for a user for a specific
category will be easy. This will increase the performance.

I have given a lot of thought whether to allow users to act in multiple
roles and I think it,s essential for blogs having large users.
 What do you think?.

Feel free to add your comments and feedback on this. i,m eagerly waiting for
it.
Prasath.N



From stas at nerd.ro  Mon Mar 29 03:33:08 2010
From: stas at nerd.ro (Stas =?UTF-8?Q?Su=C8=99cov?=)
Date: Mon, 29 Mar 2010 06:33:08 +0300
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <BBB29309-2987-493A-91CD-CE27FA4E8AD9@striderweb.com>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>
	<38D69093-5EC3-4FF7-A679-9F840CE2137B@newclarity.net>
	<1269133402.2116.126.camel@rivalry.c7.campus.utcluj.ro>
	<421FA245-D00C-4818-B7E4-1173FFD0AEB5@newclarity.net>
	<1269299036.2137.34.camel@rivalry.c7.campus.utcluj.ro>
	<e1202cb11003241119jc9e3cf8y47e26c8438dcd836@mail.gmail.com>
	<LBM4CkBZzyqLFwHL@dsl-217-155-35-239.zen.co.uk>
	<BBB29309-2987-493A-91CD-CE27FA4E8AD9@striderweb.com>
Message-ID: <1269833588.2176.55.camel@rivalry.c7.campus.utcluj.ro>

?n data de Vi, 26-03-2010 la 18:56 -0500, Stephen Rider a scris:
> On Mar 25, 2010, at 4:28 AM, mrmist wrote:
> 
> > it would pain me greatly to see someone getting karma points for spamming the forum / codex with useless bilge that is fit for the trash can, whilst quality responses that take a lot of time to craft "only" make 1 karma point.
> > 
> > Perhaps there could be some rating system applied to forum responses, or note could be taken over when an answer "resolves" a problem.
> 
> Yes -- I think a simple thumbsup/thumbsdown switch that readers can hit would be useful here.  Karma shouldn't be automated -- real people should have to indicate that something is good.
> 

Hey everybody,
I followed Jane's advice and wrote some code just to get familiar with
BP and see what's all about.

Here's a small plugin I wrote that actually implements a simple API into
BuddyPress with the following features:
* Admin screen to add applications to API and delete them
* User screen with the latest logs from API's actions related to him
* Ability to add a new activity into user's profile using a POST

How to use it, you will need curl, bellow is the result of such a query:
---
stas at rivalry:~ ~? curl -i -X POST -d
"api_key=ca6ba9de07a1709605588d0510a33cd0fde0e228&username=c00l2sv&data_uri="http://plugins.svn.wordpress.org/buddypress-am-i-gcoder"&ts=2010-03-29 03:22:33&data=First update using POST" http://reteaua.utcluj.ro/members/c00l2sv/api/update/
HTTP/1.1 404 Not Found
Date: Mon, 29 Mar 2010 03:02:18 GMT
Server: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.10 with Suhosin-Patch
X-Powered-By: PHP/5.2.4-2ubuntu5.10
X-Pingback: http://reteaua.utcluj.ro/xmlrpc.php
Expires: Wed, 11 Jan 1984 05:00:00 GMT
Last-Modified: Mon, 29 Mar 2010 03:02:18 GMT
Cache-Control: no-cache, must-revalidate, max-age=0
Pragma: no-cache
Content-Length: 15
Content-Type: text/html; charset=UTF-8

{"status":true}%
--- 
the above resulted into this
http://reteaua.utcluj.ro/members/c00l2sv/activity/21


So the idea is to `POST` to `/members/%username%/api/update` using the
`api_key` and the rest of the details, and that will register a new
activity of `application_name` type with the posted data. The response
is a json with the resulted status: `true` on success and `false` on
failure.

The code is available at
http://plugins.trac.wordpress.org/browser/buddypress-am-i-gcoder/trunk

Sorry, I misspelled the name of the plugin repo, the idea was to call it
`Am I a gsocr?`

I believe implementing this kind of API into profiles.wp.org and
connecting it with hooks from trac/wiki/forum is the best and easiest
solution to finish the task. As I mentioned before, this API will also
offer to any kind of developers an option to connect (web)services to
BuddyPress.

I would be very thankful to get some input on my ideas and possible
implementation/features. It's the first time I'm designing/writing an
API.


-- 
()  Campania Panglicii ?n ASCII
/\  http://stas.nerd.ro/ascii/


From wp at andrewnacin.com  Mon Mar 29 04:07:15 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 29 Mar 2010 00:07:15 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <006901cacee2$5c492a30$14db7e90$@net>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com> 
	<006901cacee2$5c492a30$14db7e90$@net>
Message-ID: <4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com>

On Sun, Mar 28, 2010 at 9:51 PM, 24/7 <24-7 at gmx.net> wrote:

> Better user-management: +1
> Reworking the system: +1
> Category level permissions: +1
> Multiple Roles: +10!!
>

Roles per category is a non-starter, honestly, for the reasons outlined
below -- there are intentions to move in the opposite direction.
(Workaround: A custom post type has its own set of capabilities.)

So, currently:
 - users can have multiple roles
 - users can have multiple caps that override those of roles
 - for each user, we store the roles and caps as a serialized array in
usermeta
 - to get all users who have a role or cap, we query all users in the DB,
load up their roles and capabilities, and filter out those that don't have
the role or cap

There aren't too many plugins that actually use multiple roles -- membership
or newsletter plugins is the main use case.

These two tickets should be studied closely:
http://core.trac.wordpress.org/ticket/10201, and
http://core.trac.wordpress.org/ticket/2531. The IRC log in #10201 in
particular (from summer 2009) was a conversation among at least four core
developers, and a consensus was reached.

The general (and admittedly controversial) idea for 3.1 would be the
following:
 - users can have *one* role
 - users cannot have any user-specific caps
 - for each user, we store the role in usermeta (unserialized)
 - to get all users with a role or cap, we can query usermeta

(Just something to keep in mind, roles/capabilities are stored in usermeta *per
blog*, not per user. Hence, in a shared user table or multisite/MU setup,
the user still has a different role for each blog, even with #10201.)

From fidler.brian at gmail.com  Mon Mar 29 04:27:34 2010
From: fidler.brian at gmail.com (Brian Fidler)
Date: Sun, 28 Mar 2010 21:27:34 -0700
Subject: [wp-hackers] problem with $post->post_parent
In-Reply-To: <dc2b0e8a1003280924r1fe45170w693d8ad4f6ba65f3@mail.gmail.com>
References: <70d23f011003280922o1c228944x6baf662e0f817b4c@mail.gmail.com>
	<dc2b0e8a1003280924r1fe45170w693d8ad4f6ba65f3@mail.gmail.com>
Message-ID: <70d23f011003282127l7ebe15c6p249b7c45b0e3e52c@mail.gmail.com>

yes, just above the first if statement...

global $post;

if ( is_page('paintings') || $post->post_parent == '912' ) {

[image: brian fidler interactive] <http://www.brianfidler.com>
email: interactive at brianfidler.com
phone: 602.758.4733
[image: View Brian Fidler's profile on
LinkedIn]<http://www.linkedin.com/in/brianfidler>


On Sun, Mar 28, 2010 at 9:24 AM, Matt Martz <matt at sivel.net> wrote:

> >
> > Any ideas what might be going wrong?
> >
>
> Did you do:
>
> global $post;
>
> before trying to use $post?
>
> --
> Matt Martz
> matt at sivel.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From will at itsananderson.com  Mon Mar 29 04:58:03 2010
From: will at itsananderson.com (Will Anderson)
Date: Mon, 29 Mar 2010 00:58:03 -0400
Subject: [wp-hackers] problem with $post->post_parent
In-Reply-To: <70d23f011003282127l7ebe15c6p249b7c45b0e3e52c@mail.gmail.com>
References: <70d23f011003280922o1c228944x6baf662e0f817b4c@mail.gmail.com>
	<dc2b0e8a1003280924r1fe45170w693d8ad4f6ba65f3@mail.gmail.com>
	<70d23f011003282127l7ebe15c6p249b7c45b0e3e52c@mail.gmail.com>
Message-ID: <a7b7a8481003282158u1e160369k878f8acb33068a9a@mail.gmail.com>

Perhaps a silly question, but you've actually set up the page hierarchy
correctly, right?

Also, depending on when this code is running, $post may not have been
populated yet. If you're trying to do this from a plugin you may need to do
some hook foo.

A judiciously placed  print_r of the $post variable should clear up both of
these questions.

From eitanadlerlist at gmail.com  Mon Mar 29 06:53:14 2010
From: eitanadlerlist at gmail.com (Eitan Adler)
Date: Mon, 29 Mar 2010 09:53:14 +0300
Subject: [wp-hackers] GSOC - comment moderation
In-Reply-To: <35544B0A-306E-4EDD-A1B6-AF85A4549D3B@ftwr.co.uk>
References: <a0777e081003280915y1ea1414scac5c27dc494c75f@mail.gmail.com> 
	<35544B0A-306E-4EDD-A1B6-AF85A4549D3B@ftwr.co.uk>
Message-ID: <a0777e081003282353j2b0d41c4y988d141548ac5cc0@mail.gmail.com>

> As the suggester for this GSOC project I hoped that the work covered by those points would be about the right size project for someone.

OK perfect - I'll post my proposal on a wordpress powered blog soon.
For now I'm sending this pre-proposal to the mailing list to get
suggestions on how to improve it.

Personal Details

    * Name: Eitan Adler
    * Email: Eitan Adler at gmail dot com (EitanAdlerList at gmail.com
for mailing lists)
    * Skype ID or GTalk (for IM and voice chats): EitanAdler
    * Phone number: Will be provided to my mentor if accepted

Project Description

    * Please document your proposal on a WordPress-powered blog first,
---- this is not my application and I will do so once I get feedback
from the mailing list

    * Tell us if the software you will be working on is meant to exist
as a plugin or be included in the core of WordPress. ---  The work is
intended to improve the comment moderation experience and modifies
current core code.

Schedule of Deliverables

    * What are the milestones and deliverables for your project?
These are preliminary milestones and are likely to change as I work on
the project.
Documentation will be done while I am writing the code.
1) Create api for changing parent of comment
2) Adding option in the admin screen for changing comment parents
3) Add notification option to poster if he opted receive replies to his post
4) Add threaded comments to comments in moderation
5) Add method of re-parenting through the xml-rpc api
6) Add method to request all sub-comments

    * Do you have any other commitments during this time? Include
school, work and family commitments.
-- I have minimal other commitments during the summer

Open Source Development Experience

If you have experience with open source development in any form, even
a few bug reports or some tiny 2-line patch to something obscure, tell
us! More specifically, link to it!

-- I'm active on the freeBSD mailing lists and have submitted patches
to the freeBSD core. I am also a port maintainer for a about 10-15
ports.
patch to modify "pkill" http://www.freebsd.org/cgi/query-pr.cgi?pr=bin/143558

-- I've reported a number of bugs to the nano editor project
http://www.nano-editor.org/dist/v2.2/ChangeLog

-- I run a nightly firefox and report bugs as I find them

-- If I find a bug in any software I use I attempt to report bugs and
work with the vendor to fix them.

Work/Internship Experience

List any work experience you've had relevant to the proposed project,
blogging, or software development.
-- I'd rather not post a full resume online - however I'd be happy
email my resume to whomever is doing the review of applicants.

List what you're studying in university/college that is relevant, how
you're doing in your program, etc.
I'm currently studying Software Engineering. My courses thus far:
Semester 1:
- Programming using C++
- Psychology 1
- Calculus I
Semester 2:
- Advanced C++
- Data Structures I
- Organizational Behavior
- Internet Programming (teaching assistant)
- Probability theory

Are you planning to use your GSoC project as an independent study for
college credit?
As of now I am not planning on using this for independent study.

Why WordPress

Tell us why you chose to apply with us. Be as specific as possible.
I've used wordpress for a variety of projects. I find wordpress to be
easiest blogging platform to use and I want to contribute to a
platform that I've been using for years.
(from the audience) So why don't you use wordpress for your current
blog? I needed custom css and I don't have my own web hosting. When I
do get it I already have a local copy of wordpress ready and running
to switch over.

I've also made a few wordpress plugins which I have yet to submit to
the repo. I plan on submitting them soon.

Also, in what way would you envision your participation with the
WordPress development community evolving after GSoC2010 comes to an
end?
I don't plan on leaving. As I work on my project I'm sure I will find
many other interesting things that need fixing or extending on
wordpress. I plan on continuing with the project and submitting new
patches and plugins.

From eitanadlerlist at gmail.com  Mon Mar 29 11:20:26 2010
From: eitanadlerlist at gmail.com (Eitan Adler)
Date: Mon, 29 Mar 2010 14:20:26 +0300
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <31F4E95E-BE37-4A40-A5CF-CD4207C81EB5@automattic.com>
References: <mailman.6441.1269792903.1345.wp-hackers@lists.automattic.com> 
	<31F4E95E-BE37-4A40-A5CF-CD4207C81EB5@automattic.com>
Message-ID: <a0777e081003290420w3a603023n620a38febe98b1c4@mail.gmail.com>

 Developers would submit widget code, and when users wanted a new
widget, they would go straight to an 'add new widgets' screen,
select/install and immediately
> begin filling in the widget settings. ?Basically the idea reduces the
> overhead for users adding new widgets.

Something like a separate interface for adding plugins with the
"widget" tag? That way it would avoid the need to change anything on
the infrastructure side.


> There are not mentors assigned to specific projects because mentors will
> choose students from all the applications we receive, many of which may not
> come from the list on the Codex Ideas page. Basically, all mentors will
> review all applications, and will identify the students/projects they are
> interested in mentoring.
Alright - good to know.

> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From zamoose at gmail.com  Mon Mar 29 11:25:19 2010
From: zamoose at gmail.com (Doug Stewart)
Date: Mon, 29 Mar 2010 07:25:19 -0400
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <a0777e081003290420w3a603023n620a38febe98b1c4@mail.gmail.com>
References: <mailman.6441.1269792903.1345.wp-hackers@lists.automattic.com> 
	<31F4E95E-BE37-4A40-A5CF-CD4207C81EB5@automattic.com>
	<a0777e081003290420w3a603023n620a38febe98b1c4@mail.gmail.com>
Message-ID: <71ddd7491003290425l131bdbf2q29041bea3b0e5b67@mail.gmail.com>

On Mon, Mar 29, 2010 at 7:20 AM, Eitan Adler <eitanadlerlist at gmail.com>wrote:

>  Developers would submit widget code, and when users wanted a new
> widget, they would go straight to an 'add new widgets' screen,
> select/install and immediately
> > begin filling in the widget settings.  Basically the idea reduces the
> > overhead for users adding new widgets.
>
> Something like a separate interface for adding plugins with the
> "widget" tag? That way it would avoid the need to change anything on
> the infrastructure side.
>
>
There'd need to be a distinction drawn, of course -- something like
'provides-widget' or 'has-widget' vs. 'only-widget' or the like.

-- 
-Doug
http://literalbarrage.org/blog/
@zamoose

From n.prasath.002 at gmail.com  Mon Mar 29 12:48:49 2010
From: n.prasath.002 at gmail.com (prasath nadarajah)
Date: Mon, 29 Mar 2010 18:18:49 +0530
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>
	<006901cacee2$5c492a30$14db7e90$@net>
	<4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com>
Message-ID: <c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com>

@24-7
I also think scaling roles hierarchically I not a good idea.
(Currently joomla 1.6 ACL scales roles hierarchically and I also
experience difficulties with that)
I,m trying to implement a friendly UI to set permissions for roles in one view
(like drupal permission settings).
I installed your plugin, but it only shows userdata when you are
logged in as admin.
Thank for your suggestions.

@andrew
>> roles per category is a non-starter
I wonder why it I not desirable to have category level roles within a
single blog.
It has been requested by many in the forum and mailing lists.
It is also mentioned in the ideas list.

>>from 3.1 storing capabilities in user meta is to be removed and and replaced with roles(unserialized).
If I,m not wrong the implemetation would be an additional
table(wp_roles) to store information about roles which will include
userId's belonging to that role.
It I possible to have category level permissions by having a table which maps
 userId , roleId, categroyId(termId).
Querying for users will also be easy by filtering
categoryId ? roleId ? userId.
I,m from a joomla backround and joomla does access control like this.

in addition to multiple roles in multiple blog this would be an
additional feature.

Correct me if I,m wrong
thanks for the feedback.

Prasath.N



On Mon, Mar 29, 2010 at 9:37 AM, Andrew Nacin <wp at andrewnacin.com> wrote:
>
> On Sun, Mar 28, 2010 at 9:51 PM, 24/7 <24-7 at gmx.net> wrote:
>
> > Better user-management: +1
> > Reworking the system: +1
> > Category level permissions: +1
> > Multiple Roles: +10!!
> >
>
> Roles per category is a non-starter, honestly, for the reasons outlined
> below -- there are intentions to move in the opposite direction.
> (Workaround: A custom post type has its own set of capabilities.)
>
> So, currently:
> ?- users can have multiple roles
> ?- users can have multiple caps that override those of roles
> ?- for each user, we store the roles and caps as a serialized array in
> usermeta
> ?- to get all users who have a role or cap, we query all users in the DB,
> load up their roles and capabilities, and filter out those that don't have
> the role or cap
>
> There aren't too many plugins that actually use multiple roles -- membership
> or newsletter plugins is the main use case.
>
> These two tickets should be studied closely:
> http://core.trac.wordpress.org/ticket/10201, and
> http://core.trac.wordpress.org/ticket/2531. The IRC log in #10201 in
> particular (from summer 2009) was a conversation among at least four core
> developers, and a consensus was reached.
>
> The general (and admittedly controversial) idea for 3.1 would be the
> following:
> ?- users can have *one* role
> ?- users cannot have any user-specific caps
> ?- for each user, we store the role in usermeta (unserialized)
> ?- to get all users with a role or cap, we can query usermeta
>
> (Just something to keep in mind, roles/capabilities are stored in usermeta *per
> blog*, not per user. Hence, in a shared user table or multisite/MU setup,
> the user still has a different role for each blog, even with #10201.)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From contact at hervedesign.com  Mon Mar 29 12:51:23 2010
From: contact at hervedesign.com (Jeremy Herve)
Date: Mon, 29 Mar 2010 14:51:23 +0200
Subject: [wp-hackers] Use of admin_url() for images - Changeset 13256 - P2
	broken with WordPress 3.0
Message-ID: <3c327eda1003290551m2558d903n12be38b32d96fded@mail.gmail.com>

Hi!

I am playing a lot with P2 and WordPress 3.0 these days, discovering custom
post types, taxonomies, and the potential all this can have when used with a
powerful tool like the P2 theme.

Problem is, this theme is not entirely compatible with WordPress 3.0. And my
level in development is really too low to investigate too much I am afraid.

The biggest issue regards the frontend posting interface, and more exactly
the Upload / Insert media buttons. I have addressed the issue on the
WordPress forums (http://wordpress.org/support/topic/380872?replies=3), and
tried to get back to the changes that could have caused that. It seems (but
I may be wrong) that it is caused by a change made by Andrew Nacin a while
ago (http://core.trac.wordpress.org/changeset/13256).

What could I do from there? Do you know if somebody is working on an updated
version of P2 compatible with WordPress 3.0? Who could I contact to get some
help in your opinion?

Thank you!


Jeremy Herve
Budapest, Hungary
http://twitter.com/jeherve

From otto at ottodestruct.com  Mon Mar 29 13:58:24 2010
From: otto at ottodestruct.com (Otto)
Date: Mon, 29 Mar 2010 08:58:24 -0500
Subject: [wp-hackers] Best way to abort Plugin installation
In-Reply-To: <4BAF6D72.6060908@mattjacob.com>
References: <20100327105320.0E470180CEBB1@dd19416.kasserver.com> 
	<4BAF6D72.6060908@mattjacob.com>
Message-ID: <161617691003290658v2b3c1a29o8f91bb1dc7a5d7a3@mail.gmail.com>

Making a plugin deactivate itself is easy. Showing a pretty error
message when doing it, not so much.

Here's a simple way to deactivate:

// require PHP 5
function plugin_activation_check(){
	if (version_compare(PHP_VERSION, '5.0.0', '<')) {
		deactivate_plugins(basename(__FILE__)); // Deactivate ourself
		wp_die("Sorry, you can't activate without PHP 5.");
	}
}
register_activation_hook(__FILE__, 'plugin_activation_check');

The problem is that you really can't do anything else here in a nice
way except wp_die.

The page call that actually activates the plugin does a wp_redirect
back to the plugins.php page. So on that redirected page load, your
plugin isn't active anymore, and thus you have no way to display a
message.

-Otto

From eitanadlerlist at gmail.com  Mon Mar 29 15:05:06 2010
From: eitanadlerlist at gmail.com (Eitan Adler)
Date: Mon, 29 Mar 2010 18:05:06 +0300
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <71ddd7491003290425l131bdbf2q29041bea3b0e5b67@mail.gmail.com>
References: <mailman.6441.1269792903.1345.wp-hackers@lists.automattic.com> 
	<31F4E95E-BE37-4A40-A5CF-CD4207C81EB5@automattic.com>
	<a0777e081003290420w3a603023n620a38febe98b1c4@mail.gmail.com> 
	<71ddd7491003290425l131bdbf2q29041bea3b0e5b67@mail.gmail.com>
Message-ID: <a0777e081003290805w4bab06cci6962811dba803b98@mail.gmail.com>

Alright - so it is between either this proposal or the comment
moderation idea. Am I allowed to post multiple proposals?

On Mon, Mar 29, 2010 at 2:25 PM, Doug Stewart <zamoose at gmail.com> wrote:
> On Mon, Mar 29, 2010 at 7:20 AM, Eitan Adler <eitanadlerlist at gmail.com>wrote:
>
>> ?Developers would submit widget code, and when users wanted a new
>> widget, they would go straight to an 'add new widgets' screen,
>> select/install and immediately
>> > begin filling in the widget settings. ?Basically the idea reduces the
>> > overhead for users adding new widgets.
>>
>> Something like a separate interface for adding plugins with the
>> "widget" tag? That way it would avoid the need to change anything on
>> the infrastructure side.
>>
>>
> There'd need to be a distinction drawn, of course -- something like
> 'provides-widget' or 'has-widget' vs. 'only-widget' or the like.
>
> --
> -Doug
> http://literalbarrage.org/blog/
> @zamoose
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jeffc at wptavern.com  Mon Mar 29 15:08:32 2010
From: jeffc at wptavern.com (Jeff Chandler)
Date: Mon, 29 Mar 2010 11:08:32 -0400
Subject: [wp-hackers] GSOC - widget repository
Message-ID: <4BB0C270.6060008@wptavern.com>

Interesting idea once Jane laid out the details of it in action. 
However, we've been discussing this idea further on the forum 
http://www.wptavern.com/forum/plugins-hacks/1439-separate-repository-widgets.html 
and one of the most interesting questions regarding this entire idea is 
trying to figure out what the difference is between a Widget and a 
Plugin considering it's really a large gray area. I encourage the person 
who submitted the idea to check out this forum thread and maybe chime in 
with their thoughts.

From fscan at chilicode.com  Mon Mar 29 15:00:11 2010
From: fscan at chilicode.com (fscan)
Date: Mon, 29 Mar 2010 15:00:11 +0000 (UTC)
Subject: [wp-hackers]
	=?utf-8?q?Please_Help=3A_How_to_compare_2_float_valu?=
	=?utf-8?q?es_in_meta=5Fvalue_column=3F?=
References: <27435706.post@talk.nabble.com>
Message-ID: <loom.20100329T165240-378@post.gmane.org>

babyboy808 <hi <at> eirestudio.net> writes:

> 
> 
> Hi Guys,
> 
> I have about 100 posts in wordpress, all with a meta_key of price and a
> value. How would I go about searching through all posts with a value between
> 23.00 and 41.00 for example?
> 
> I know that 'meta_compare ' treats 'meta_value' as a string, so I can't use
> this to solve my problem.
> 
> Anybody have any clues?
> 
> Thanks


i just hacked a little bit around ind wp-includes/query.php (2.8.4 ubuntu) to
support numeric compares. introduced a new query variable: meta_compare_num.
only tested with mysql backend. you could add an between operator like this.

line 2149: replace the whole if block with:

if ( ! empty($q['meta_value']) ) {
    if ( ! isset($q['meta_compare']) || empty($q['meta_compare']) || !
in_array($q['meta_compare'], array('=', '!=', '>', '>=', '<', '<=')) )
        if ( ! isset($q['meta_compare_num']) || empty($q['meta_compare_num']) ||
! in_array($q['meta_compare_num'], array('=', '!=', '>', '>=', '<', '<=')) )
            $q['meta_compare'] = '=';
    if( isset($q['meta_compare']) )
        $where .= $wpdb->prepare("AND $wpdb->postmeta.meta_value
{$q['meta_compare']} %s ", $q['meta_value']);
    else
        $where .= $wpdb->prepare("AND CAST($wpdb->postmeta.meta_value AS
DECIMAL) {$q['meta_compare_num']} CAST(%s AS DECIMAL) ", $q['meta_value']);
}




From ralph at dasralph.de  Mon Mar 29 15:20:20 2010
From: ralph at dasralph.de (Ralph Bergmann)
Date: Mon, 29 Mar 2010 17:20:20 +0200
Subject: [wp-hackers] GSoC 2010
In-Reply-To: <349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>
References: <4BAE3ED6.40204@dasralph.de>
	<349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>
Message-ID: <4BB0C534.9070800@dasralph.de>

Am 28.03.10 00:23, schrieb scribu:
> I think GSoc projects should focus on things that the majority of WP
> users would find useful.

Okay it isn't the cool plugin which everybody needs but not all need
buddypress or bbpress. I would like to develop an plugin to manage /
organise conferences, see
http://lists.automattic.com/pipermail/wp-hackers/2010-March/031151.html

> Anyway, getting feedback on this mailing list isn't a requirement for
> your proposal to be accepted.

But when nobody is interested in my proposal, no one accept me for GSoC :(


Ralph

-- 

Ralph Bergmann


www              http://www.dasralph.de/
mail             ralph at dasralph.de
skype            dasralph

xing             http://www.xing.com/profile/Ralph_Bergmann3
linkedin         http://www.linkedin.com/in/ralphbergmann
facebook         http://www.facebook.com/dasralph

pgp key id       30C4ECD8
pgp fingerprint  C6E4 3435 7CC8 5008 54EC 1C86 4176 7F75 30C4 ECD8



From justin.shreve at gmail.com  Mon Mar 29 15:28:15 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Mon, 29 Mar 2010 11:28:15 -0400
Subject: [wp-hackers] GSoC 2010
In-Reply-To: <4BB0C534.9070800@dasralph.de>
References: <4BAE3ED6.40204@dasralph.de>
	<349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>
	<4BB0C534.9070800@dasralph.de>
Message-ID: <a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>

I think it's an interesting idea. You should check into what is already
being done first. For example check out the various conference sites at
http://wordcamp.org - and see what they are using and how the different
sites are setup.

I would also look at http://wccpco.eventstart.com/ and the various features
there and http://www.eventbrite.com/ (which I think powers some of the
WordCamps).

In terms of your proposal:

- user can create one or more speaker profile(s)
- user can create one ore more session(s) and link this with the speaker
profile

I think you need to elaborate a bit more on some of the features you can
bring. These two items for example can be done pretty easily with custom
pots types or just linking a "user" (speaker) to a "post" (event/session).

Do you have a full proposal you can paste here?

- Justin

On Mon, Mar 29, 2010 at 11:20 AM, Ralph Bergmann <ralph at dasralph.de> wrote:

> Am 28.03.10 00:23, schrieb scribu:
> > I think GSoc projects should focus on things that the majority of WP
> > users would find useful.
>
> Okay it isn't the cool plugin which everybody needs but not all need
> buddypress or bbpress. I would like to develop an plugin to manage /
> organise conferences, see
> http://lists.automattic.com/pipermail/wp-hackers/2010-March/031151.html
>
> > Anyway, getting feedback on this mailing list isn't a requirement for
> > your proposal to be accepted.
>
> But when nobody is interested in my proposal, no one accept me for GSoC :(
>
>
> Ralph
>
> --
>
> Ralph Bergmann
>
>
> www              http://www.dasralph.de/
> mail             ralph at dasralph.de
> skype            dasralph
>
> xing             http://www.xing.com/profile/Ralph_Bergmann3
> linkedin         http://www.linkedin.com/in/ralphbergmann
> facebook         http://www.facebook.com/dasralph
>
> pgp key id       30C4ECD8
> pgp fingerprint  C6E4 3435 7CC8 5008 54EC 1C86 4176 7F75 30C4 ECD8
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From hempsworth at googlemail.com  Mon Mar 29 15:50:41 2010
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Mon, 29 Mar 2010 16:50:41 +0100
Subject: [wp-hackers] GSoC 2010
In-Reply-To: <a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>
References: <4BAE3ED6.40204@dasralph.de>
	<349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>
	<4BB0C534.9070800@dasralph.de>
	<a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>
Message-ID: <5a1dad881003290850u49a47736p84810b8537c056dc@mail.gmail.com>

Although the plugin wouldn't have a huge number of installs, it could
still be an extremely useful addition to the wordpress community, even
if it just powered the WordCamp systems.

Obviously make it compatible for single installs, but think of the
power of making it multi-site aware... 3.0 allows you to run multiple
blogs off one install, with different subdomains.

Imagine installing this on WordCamp.org, having each subdomain as a
new blog and this plugin powering the conference functionality. Being
able to have speakers assigned to conferences across the network..?

On Monday, March 29, 2010, Justin Shreve <justin.shreve at gmail.com> wrote:
> I think it's an interesting idea. You should check into what is already
> being done first. For example check out the various conference sites at
> http://wordcamp.org - and see what they are using and how the different
> sites are setup.
>
> I would also look at http://wccpco.eventstart.com/ and the various features
> there and http://www.eventbrite.com/ (which I think powers some of the
> WordCamps).
>
> In terms of your proposal:
>
> - user can create one or more speaker profile(s)
> - user can create one ore more session(s) and link this with the speaker
> profile
>
> I think you need to elaborate a bit more on some of the features you can
> bring. These two items for example can be done pretty easily with custom
> pots types or just linking a "user" (speaker) to a "post" (event/session).
>
> Do you have a full proposal you can paste here?
>
> - Justin
>
> On Mon, Mar 29, 2010 at 11:20 AM, Ralph Bergmann <ralph at dasralph.de> wrote:
>
>> Am 28.03.10 00:23, schrieb scribu:
>> > I think GSoc projects should focus on things that the majority of WP
>> > users would find useful.
>>
>> Okay it isn't the cool plugin which everybody needs but not all need
>> buddypress or bbpress. I would like to develop an plugin to manage /
>> organise conferences, see
>> http://lists.automattic.com/pipermail/wp-hackers/2010-March/031151.html
>>
>> > Anyway, getting feedback on this mailing list isn't a requirement for
>> > your proposal to be accepted.
>>
>> But when nobody is interested in my proposal, no one accept me for GSoC :(
>>
>>
>> Ralph
>>
>> --
>>
>> Ralph Bergmann
>>
>>
>> www ? ? ? ? ? ? ?http://www.dasralph.de/
>> mail ? ? ? ? ? ? ralph at dasralph.de
>> skype ? ? ? ? ? ?dasralph
>>
>> xing ? ? ? ? ? ? http://www.xing.com/profile/Ralph_Bergmann3
>> linkedin ? ? ? ? http://www.linkedin.com/in/ralphbergmann
>> facebook ? ? ? ? http://www.facebook.com/dasralph
>>
>> pgp key id ? ? ? 30C4ECD8
>> pgp fingerprint ?C6E4 3435 7CC8 5008 54EC 1C86 4176 7F75 30C4 ECD8
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

-- 
-- Alex  (Hempsworth)

From jane at automattic.com  Mon Mar 29 16:09:26 2010
From: jane at automattic.com (Jane Wells)
Date: Mon, 29 Mar 2010 12:09:26 -0400
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <mailman.6526.1269877854.1345.wp-hackers@lists.automattic.com>
References: <mailman.6526.1269877854.1345.wp-hackers@lists.automattic.com>
Message-ID: <F3E951B1-590F-43F8-8915-521D6D0D5537@automattic.com>

> From: Eitan Adler <eitanadlerlist at gmail.com>
> Subject: Re: [wp-hackers] GSOC - widget repository
> Alright - so it is between either this proposal or the comment
> moderation idea. Am I allowed to post multiple proposals?
Hi Ethan. Yes, you can submit multiple proposals. If it's just two,  
that is fine. If a students floods us with proposals it's less  
desirable, but two is good.

> From: Jeff Chandler <jeffc at wptavern.com>
> Subject: Re: [wp-hackers] GSOC - widget repository
> Interesting idea once Jane laid out the details of it in action.
> However, we've been discussing this idea further on the forum
> http://www.wptavern.com/forum/plugins-hacks/1439-separate-repository-widgets.html
> and one of the most interesting questions regarding this entire idea  
> is
> trying to figure out what the difference is between a Widget and a
> Plugin considering it's really a large gray area. I encourage the  
> person
> who submitted the idea to check out this forum thread and maybe  
> chime in
> with their thoughts.
While obviously any student is free to write about their ideas  
anywhere they like on the web, it is very important to clarify that  
wptavern is NOT an official WordPress.org site, and will not be  
referenced during the decision-making process. Students are meant to  
discuss their proposals here on the hackers list and in IRC with core  
contributors. We've just set up a new IRC channel so that students  
don't feel intimidated by interrupting 3.0 dev chatter in #wordpress- 
dev. Students can use the #wordpress-gsoc channel at irc.freenode.net  
to discuss proposals with any community member. We'll have three  
scheduled chats in there during the application period to give  
students a chance to talk directly with mentors:
Wednesday, March March 31 at 20:30 UTC (4:30pm eastern)
Saturday, April 3 at 21:30 UTC (5:30pm eastern)
Wednesday, April 7 at 20:30 UTC (4:30pm eastern)

Jane

From ralph at dasralph.de  Mon Mar 29 16:53:33 2010
From: ralph at dasralph.de (Ralph Bergmann)
Date: Mon, 29 Mar 2010 18:53:33 +0200
Subject: [wp-hackers] GSoC 2010
In-Reply-To: <a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>
References: <4BAE3ED6.40204@dasralph.de>	<349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>	<4BB0C534.9070800@dasralph.de>
	<a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>
Message-ID: <4BB0DB0D.1000802@dasralph.de>

Am 29.03.10 17:28, schrieb Justin Shreve:
> I think it's an interesting idea. You should check into what is already
> being done first. For example check out the various conference sites at
> http://wordcamp.org - and see what they are using and how the different
> sites are setup.

The idea was born in 2008. I have organised a Java conference in Berlin
and was frustrated to add the speakers profil and the talks.

The main feature should be: make it easier.

> I would also look at http://wccpco.eventstart.com/ and the various features
> there and http://www.eventbrite.com/ (which I think powers some of the
> WordCamps).

There are a lot of tools which can do it. But I would a tool which is
embedded in my website with the same still and the same domain.

> In terms of your proposal:
> 
> - user can create one or more speaker profile(s)
> - user can create one ore more session(s) and link this with the speaker
> profile
> 
> I think you need to elaborate a bit more on some of the features you can
> bring. These two items for example can be done pretty easily with custom
> pots types or just linking a "user" (speaker) to a "post" (event/session).

I think of a workflow with some users. Speakers which add his / hers
profil and talks. A program committee which accepts or rejects speaker
and/or talk. A manager for the timetable and available rooms. Financer
for ticket and advertising space sale. And all this with one tool.

When the speaker adds his / hers profil, he / she post all needed datas
incl. an picture which will be crop to fit the theme.

The financer can see how many tickes was sold and who has bought
advertisments. After the money arrived he / she can send out the tickets
(per email) or can activate the ad banner upload.

An other great feature should be an app for Android / iPhone /
BlackBerry to see the timetable, profils and talks on the divice and to
create the own plan with the prefered talks.


Ralph


From piemanek at gmail.com  Mon Mar 29 16:57:19 2010
From: piemanek at gmail.com (Simon B)
Date: Mon, 29 Mar 2010 17:57:19 +0100
Subject: [wp-hackers] Specific hooks for working with custom post types?
In-Reply-To: <349fe48b1003280837i20a3530ayff5d9a45ac94f908@mail.gmail.com>
References: <65b196651003280539h486ff035j3b0be3b2791b67c3@mail.gmail.com>
	<E8EAD2B1-04EB-4447-8D5B-8A698FDF08E1@newclarity.net>
	<65b196651003280619j527f0db6n35f00dbd664bd6a0@mail.gmail.com>
	<349fe48b1003280837i20a3530ayff5d9a45ac94f908@mail.gmail.com>
Message-ID: <65b196651003290957j3793f674kf904334fbf19bd41@mail.gmail.com>

On 28 March 2010 16:37, scribu <scribu at gmail.com> wrote:

> You hava an additional parameter on the save_post hook:
>
> function save_post_callback($post_id, $post) {
> if ( 'case-study' == $post->post_type {
> ...
> }
> }
> add_action('save_post', 'save_post_callback', 10, 2);
>
>

Thanks very much, I'd forgotten there was the $post parameter available on
that hook. Works perfectly.

From justin.shreve at gmail.com  Mon Mar 29 17:01:27 2010
From: justin.shreve at gmail.com (Justin Shreve)
Date: Mon, 29 Mar 2010 13:01:27 -0400
Subject: [wp-hackers] GSoC 2010
In-Reply-To: <4BB0DB0D.1000802@dasralph.de>
References: <4BAE3ED6.40204@dasralph.de>
	<349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>
	<4BB0C534.9070800@dasralph.de>
	<a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>
	<4BB0DB0D.1000802@dasralph.de>
Message-ID: <a93cee651003291001k55eedc28r6604ec58ace2972@mail.gmail.com>

I included those two links for inspiration. You could get some feature ideas
from them.
*
A program committee which accepts or rejects speaker
and/or talk. A manager for the timetable and available rooms. Financer
for ticket and advertising space sale. And all this with one tool.*

Those sound like some nice features.

Take a look at
http://codex.wordpress.org/GSoC2009#Community.2FEvent_Organizing_Framework

You could create a plugin for entering hotel information and the plugin
would automatically plot them on a map, etc.

On Mon, Mar 29, 2010 at 12:53 PM, Ralph Bergmann <ralph at dasralph.de> wrote:

> Am 29.03.10 17:28, schrieb Justin Shreve:
> > I think it's an interesting idea. You should check into what is already
> > being done first. For example check out the various conference sites at
> > http://wordcamp.org - and see what they are using and how the different
> > sites are setup.
>
> The idea was born in 2008. I have organised a Java conference in Berlin
> and was frustrated to add the speakers profil and the talks.
>
> The main feature should be: make it easier.
>
> > I would also look at http://wccpco.eventstart.com/ and the various
> features
> > there and http://www.eventbrite.com/ (which I think powers some of the
> > WordCamps).
>
> There are a lot of tools which can do it. But I would a tool which is
> embedded in my website with the same still and the same domain.
>
> > In terms of your proposal:
> >
> > - user can create one or more speaker profile(s)
> > - user can create one ore more session(s) and link this with the speaker
> > profile
> >
> > I think you need to elaborate a bit more on some of the features you can
> > bring. These two items for example can be done pretty easily with custom
> > pots types or just linking a "user" (speaker) to a "post"
> (event/session).
>
> I think of a workflow with some users. Speakers which add his / hers
> profil and talks. A program committee which accepts or rejects speaker
> and/or talk. A manager for the timetable and available rooms. Financer
> for ticket and advertising space sale. And all this with one tool.
>
> When the speaker adds his / hers profil, he / she post all needed datas
> incl. an picture which will be crop to fit the theme.
>
> The financer can see how many tickes was sold and who has bought
> advertisments. After the money arrived he / she can send out the tickets
> (per email) or can activate the ad banner upload.
>
> An other great feature should be an app for Android / iPhone /
> BlackBerry to see the timetable, profils and talks on the divice and to
> create the own plan with the prefered talks.
>
>
> Ralph
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jane at automattic.com  Mon Mar 29 17:15:28 2010
From: jane at automattic.com (Jane Wells)
Date: Mon, 29 Mar 2010 13:15:28 -0400
Subject: [wp-hackers] GSoC 2010 (event management plugin)
In-Reply-To: <4BB0DB0D.1000802@dasralph.de>
References: <4BAE3ED6.40204@dasralph.de>	<349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>	<4BB0C534.9070800@dasralph.de>
	<a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>
	<4BB0DB0D.1000802@dasralph.de>
Message-ID: <93C936E9-A7AA-49A3-AF40-721F0106C39E@automattic.com>

On Mar 29, 2010, at 12:53 PM, Ralph Bergmann wrote:
> The idea was born in 2008. I have organised a Java conference in  
> Berlin
> and was frustrated to add the speakers profil and the talks.
> The main feature should be: make it easier.
> There are a lot of tools which can do it. But I would a tool which is
> embedded in my website with the same still and the same domain.
Since a few people have mentioned a potential application for this on  
WordCamp sites, I'll chime in with the status of WordCamp.org. We're  
currently starting on a project to redo the WordCamp.org site using  
BuddyPress to manage user profiles (tied to WordPress.org profiles)  
and using an e-commerce plugin for the ticketing. Each WC event will  
be a BuddyPress 'group' and have it's own site under the WordCamp.org  
domain, so if you wanted to propose this for use with WordCamps, you'd  
need to tie it into BuddyPress, since we're committed to using it for  
the variety of community features it offers and the ability to share  
information with WordPress.org profiles.

> I think of a workflow with some users. Speakers which add his / hers
> profil and talks. A program committee which accepts or rejects speaker
> and/or talk. A manager for the timetable and available rooms. Financer
> for ticket and advertising space sale. And all this with one tool.
A panel submission and voting piece would be cool, but I believe there  
are already plugins that do this, no? A room setup app would be cool,  
but since WordCamps do room assignments in so many ways, an app that  
could serve them all would be extremely complex. Probably not a high  
priority for our GSoC allotment. Also, this is sounding like a full- 
scale application, possibly too big for a GSoC project. Managing scope  
is important.

> When the speaker adds his / hers profil, he / she post all needed  
> datas
> incl. an picture which will be crop to fit the theme.
We're using BuddyPress profiles and gravatars for profile images  
(which also ties into our nametag script, which generates the name  
tags for the event from the ticketing module).

> The financer can see how many tickes was sold and who has bought
> advertisments. After the money arrived he / she can send out the  
> tickets
> (per email) or can activate the ad banner upload.
We can already see all the details on our ticket sales and stats  
(tshirt sizes, meal requests, etc.) in our ticketing plugin. Since  
WordCamp.org is non-commercial, we do not sell ads. You could perhaps  
translate to sponsorships, but it's not really a one to one  
relationship.

> An other great feature should be an app for Android / iPhone /
> BlackBerry to see the timetable, profils and talks on the divice and  
> to
> create the own plan with the prefered talks.
That would be an awesome project component. Based on what I see at  
WordCamps, iPhone would be the most used platform (right now, anyway).

Focusing on a plugin that could be used to create the conference  
schedule on a (BuddyPress-driven) WordCamp site, with a 'my wordcamp'  
schedule creator (basically selecting sessions and then displaying  
them as a schedule)
with a mobile version would be something I could get behind as being  
useful to WordCamp.
jane


From otto at ottodestruct.com  Mon Mar 29 17:38:41 2010
From: otto at ottodestruct.com (Otto)
Date: Mon, 29 Mar 2010 12:38:41 -0500
Subject: [wp-hackers] [GSoC Proposal] ImageMagick Support
In-Reply-To: <dc89e3ef1003261344q3c9a257fmf04ba93031d171e6@mail.gmail.com>
References: <349fe48b1003252055g67ca64afr10e39b7334e4f6c9@mail.gmail.com> 
	<5dc2163e1003252103k5d7c8cc8s767bb42e6fd4b125@mail.gmail.com> 
	<4cc4de141003252111y2859521di748bccacfdf628a6@mail.gmail.com> 
	<5dc2163e1003252116j9efe855vff454a7e90e638ed@mail.gmail.com> 
	<349fe48b1003252249p35502d68r21e12d6506b75b4d@mail.gmail.com> 
	<e1202cb11003261035m43db4173nafd6bf8c394550cc@mail.gmail.com> 
	<349fe48b1003261042h503ac073v53e1e1f99744188c@mail.gmail.com> 
	<e1202cb11003261147k189ac5d1tfbb27f826097eb9e@mail.gmail.com> 
	<161617691003261334pb6510c5v80d70e45c8129364@mail.gmail.com> 
	<dc89e3ef1003261344q3c9a257fmf04ba93031d171e6@mail.gmail.com>
Message-ID: <161617691003291038t14423516ue5221134591387e4@mail.gmail.com>

On Fri, Mar 26, 2010 at 3:44 PM, Aaron Jorbin <aaron at jorb.in> wrote:
> Overall I like this idea.  I would hope that the class could also be
> built in a way that it could be easy to extend and include ffmpeg for
> video conversion.


If you're wanting to add video, you should look into the WordPress
video solutions framework: http://code.trac.wordpress.org/

It's what wp.com uses for all the video support and such.

-Otto

From 24-7 at gmx.net  Mon Mar 29 19:38:40 2010
From: 24-7 at gmx.net (24/7)
Date: Mon, 29 Mar 2010 21:38:40 +0200
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>	<006901cacee2$5c492a30$14db7e90$@net>	<4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com>
	<c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com>
Message-ID: <000f01cacf77$75478640$5fd692c0$@net>

@24-7
> I installed your plugin, but it only shows userdata when you are
> logged in as admin.

The access-user_level to the page is set to 8 on line 57. Just set it to 0 and you'll be fine. Just a sidenote: It's not a real "plugin". It's more something to give you a nice and straight overlook on which get's handled how (at the moment). Grap a new version here: http://pastebin.com/eKJTq2qp

Btw: Another point where wp *still* makes use of the depr. User_level... when will we get rid of it anywhere? Does the user-system not really get reworked completely because of the references everywhere or is it the usual "this is plugin material"-answer?


@andrew
>> roles per category is a non-starter
> I wonder why it I not desirable to have category level roles within a
> single blog.
> It has been requested by many in the forum and mailing lists.
> It is also mentioned in the ideas list.

Me too. Explanation please.

>>from 3.1 storing capabilities in user meta is to be removed and and replaced with roles(unserialized).
> If I,m not wrong the implemetation would be an additional
> table(wp_roles) to store information about roles which will include
> userId's belonging to that role.
> It I possible to have category level permissions by having a table which maps
>  userId , roleId, categroyId(termId).
> Querying for users will also be easy by filtering
> categoryId ? roleId ? userId.
> I,m from a joomla backround and joomla does access control like this.

> in addition to multiple roles in multiple blog this would be an
> additional feature.

Agree.


From wlangiewicz at gmail.com  Mon Mar 29 20:06:17 2010
From: wlangiewicz at gmail.com (Wojciech Langiewicz)
Date: Mon, 29 Mar 2010 22:06:17 +0200
Subject: [wp-hackers] GSOC 2010: question about "Template Versioning" idea
Message-ID: <4BB10839.4050404@gmail.com>

Hello,
My name is Wojciech Langiewicz, I'm a student at Wroclaw University of 
Technology, Poland.
I would like on idea "Template Versioning", but before I have some 
questions to person who will be mentor here, or person who had that idea.

When working on this idea I see here 2 options:
1) build this as an integrated feature within wordpress
  - this is harder, but everyone could benefit from it
2) create a plug-in that would do it
  - which is probably easier, but won't be available to everyone

What is your opinion about this two solutions and how do you see it?

--
Wojciech Langiewicz

From jane at automattic.com  Mon Mar 29 20:10:23 2010
From: jane at automattic.com (Jane Wells)
Date: Mon, 29 Mar 2010 16:10:23 -0400
Subject: [wp-hackers] GSOC 2010: question about "Template Versioning"
	idea
In-Reply-To: <4BB10839.4050404@gmail.com>
References: <4BB10839.4050404@gmail.com>
Message-ID: <2EDD78CC-E0BF-45FD-8157-4B81D804C2A6@automattic.com>


On Mar 29, 2010, at 4:06 PM, Wojciech Langiewicz wrote:
> "Template Versioning",
> 1) build this as an integrated feature within wordpress
> 2) create a plug-in that would do it

We intended this to be an integrated feature, working similarly to  
Post Revisions in WordPress now. Jane

From wp at andrewnacin.com  Mon Mar 29 20:20:21 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 29 Mar 2010 16:20:21 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <000f01cacf77$75478640$5fd692c0$@net>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com> 
	<006901cacee2$5c492a30$14db7e90$@net>
	<4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com> 
	<c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com> 
	<000f01cacf77$75478640$5fd692c0$@net>
Message-ID: <4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com>

I would read through http://core.trac.wordpress.org/ticket/10201. In a
nutshell, the consensus among the core developers is that the
roles/capabilities system was overdone initially, and that it should be
scaled back for performance and optimization purposes (more or less, scale
it back, so it can be scaled up). The core developers have committed to the
following: one user, one role (per blog). That would mean we remove two
hardly used aspects of the system: user-specific +/- capabilities, and
multiple roles per user.

I have not seen any indication that adding roles on a per-category/term
basis would be part of this, as the goal is to simplify the roles and
capabilities schema, not add a new layer of complexity. As a trade-off, you
would likely see basic role management become a part of core (perhaps more
likely as a core plugin, a concept that is newer than these discussions).

For what it's worth, the idea on http://codex.wordpress.org/GSoC2010 is a
copy-paste from the 2009 page, which was written before the conversations in
the summer of 2009 (see the IRC log in particular in #10201) and the
consensus and committments that followed.

I'm not saying it that category-level cannot be done (nor am I a GSoC
mentor, so I have no say over these projects).  I just know what the core
developers have previously committed to, and I also can't think of a way to
do it without a huge amount of overhead. Maybe with the right hooks, a
plugin could do it, I'm not sure.

Re wp_roles: Yes, a separate table has also been discussed as an option.
That debate has yet to be held, however.

Side note:

Another point where wp *still* makes use of the depr. User_level... when
> will we get rid of it anywhere?


User levels are not used anywhere in core. We support it for backwards
compatibility. (In 3.0, we also now emit a deprecated notice.)

Nacin

From mikeschinkel at newclarity.net  Mon Mar 29 20:40:37 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 29 Mar 2010 16:40:37 -0400
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <4BB0C270.6060008@wptavern.com>
References: <4BB0C270.6060008@wptavern.com>
Message-ID: <B61CBDEC-A11F-4862-B414-5A1CB4ED3B9B@newclarity.net>

That really makes me think....  If users can find widgets by looking for plugins with tags of "has-a-widget" or similar, why not for Shortcodes?  Custom post  types? Custom post statuses? Importers?  Metaboxes? Custom taxonomies?   

I'm not arguing reductio ad absurdum against letting users select widgets in the UI, I actually think it's a brilliant idea. But I think there are many other functionalities that would, in their appropriate context, be great for users to search for a related plugin.  Essentially almost any plugin that "registers" something would apply and possibly even those that support specific hooks.

So I'm suggesting that you view this concept to be larger than widgets. Yes, the initial UI could be only for widgets but it could also be implemented in a way that it would easily be reused for all the other features a plugin could add.

-Mike

On Mar 29, 2010, at 11:08 AM, Jeff Chandler wrote:

> Interesting idea once Jane laid out the details of it in action. However, we've been discussing this idea further on the forum http://www.wptavern.com/forum/plugins-hacks/1439-separate-repository-widgets.html and one of the most interesting questions regarding this entire idea is trying to figure out what the difference is between a Widget and a Plugin considering it's really a large gray area. I encourage the person who submitted the idea to check out this forum thread and maybe chime in with their thoughts.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From scribu at gmail.com  Mon Mar 29 20:42:48 2010
From: scribu at gmail.com (scribu)
Date: Mon, 29 Mar 2010 23:42:48 +0300
Subject: [wp-hackers] Please Help: How to compare 2 float values in
	meta_value column?
In-Reply-To: <loom.20100329T165240-378@post.gmane.org>
References: <27435706.post@talk.nabble.com>
	<loom.20100329T165240-378@post.gmane.org>
Message-ID: <349fe48b1003291342g313d000v4740913edabfcf90@mail.gmail.com>

On Mon, Mar 29, 2010 at 6:00 PM, fscan <fscan at chilicode.com> wrote:

> i just hacked a little bit around ind wp-includes/query.php (2.8.4 ubuntu)
> to
> support numeric compares. introduced a new query variable:
> meta_compare_num.
> only tested with mysql backend. you could add an between operator like
> this.
>
> line 2149: replace the whole if block with:
>
> if ( ! empty($q['meta_value']) ) {
>    if ( ! isset($q['meta_compare']) || empty($q['meta_compare']) || !
> in_array($q['meta_compare'], array('=', '!=', '>', '>=', '<', '<=')) )
>        if ( ! isset($q['meta_compare_num']) ||
> empty($q['meta_compare_num']) ||
> ! in_array($q['meta_compare_num'], array('=', '!=', '>', '>=', '<', '<='))
> )
>            $q['meta_compare'] = '=';
>    if( isset($q['meta_compare']) )
>        $where .= $wpdb->prepare("AND $wpdb->postmeta.meta_value
> {$q['meta_compare']} %s ", $q['meta_value']);
>    else
>        $where .= $wpdb->prepare("AND CAST($wpdb->postmeta.meta_value AS
> DECIMAL) {$q['meta_compare_num']} CAST(%s AS DECIMAL) ", $q['meta_value']);
> }
>


Instead of modifying a core file, I would use the 'posts_where' filter.


-- 
http://scribu.net

From mikeschinkel at newclarity.net  Mon Mar 29 22:13:22 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 29 Mar 2010 18:13:22 -0400
Subject: [wp-hackers] GSoC 2010
In-Reply-To: <a93cee651003291001k55eedc28r6604ec58ace2972@mail.gmail.com>
References: <4BAE3ED6.40204@dasralph.de>
	<349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>
	<4BB0C534.9070800@dasralph.de>
	<a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>
	<4BB0DB0D.1000802@dasralph.de>
	<a93cee651003291001k55eedc28r6604ec58ace2972@mail.gmail.com>
Message-ID: <D9A270E9-740A-43F9-9BFF-AE17692E0A07@newclarity.net>

Hi all,

Just to let you know I'm currently working on an EventPress plugin which I developed because of the WordPress conference we are having in Atlanta May 6th.

You can see some of it here (don't worry, the designer has not applied their design yet!):

http://stage.thebusinessof.net/agenda/
http://stage.thebusinessof.net/sessions/
http://stage.thebusinessof.net/presenters/
http://stage.thebusinessof.net/sponsors/
http://stage.thebusinessof.net/venue/
http://stage.thebusinessof.net/register/

The agenda is automatically generated based on sessions, rooms, time-slots, etc.

The plan it to make it release all its components as GPL and to enable it to work with practically any theme.

-Mike Schinkel

On Mar 29, 2010, at 1:01 PM, Justin Shreve wrote:

> I included those two links for inspiration. You could get some feature ideas
> from them.
> *
> A program committee which accepts or rejects speaker
> and/or talk. A manager for the timetable and available rooms. Financer
> for ticket and advertising space sale. And all this with one tool.*
> 
> Those sound like some nice features.
> 
> Take a look at
> http://codex.wordpress.org/GSoC2009#Community.2FEvent_Organizing_Framework
> 
> You could create a plugin for entering hotel information and the plugin
> would automatically plot them on a map, etc.
> 
> On Mon, Mar 29, 2010 at 12:53 PM, Ralph Bergmann <ralph at dasralph.de> wrote:
> 
>> Am 29.03.10 17:28, schrieb Justin Shreve:
>>> I think it's an interesting idea. You should check into what is already
>>> being done first. For example check out the various conference sites at
>>> http://wordcamp.org - and see what they are using and how the different
>>> sites are setup.
>> 
>> The idea was born in 2008. I have organised a Java conference in Berlin
>> and was frustrated to add the speakers profil and the talks.
>> 
>> The main feature should be: make it easier.
>> 
>>> I would also look at http://wccpco.eventstart.com/ and the various
>> features
>>> there and http://www.eventbrite.com/ (which I think powers some of the
>>> WordCamps).
>> 
>> There are a lot of tools which can do it. But I would a tool which is
>> embedded in my website with the same still and the same domain.
>> 
>>> In terms of your proposal:
>>> 
>>> - user can create one or more speaker profile(s)
>>> - user can create one ore more session(s) and link this with the speaker
>>> profile
>>> 
>>> I think you need to elaborate a bit more on some of the features you can
>>> bring. These two items for example can be done pretty easily with custom
>>> pots types or just linking a "user" (speaker) to a "post"
>> (event/session).
>> 
>> I think of a workflow with some users. Speakers which add his / hers
>> profil and talks. A program committee which accepts or rejects speaker
>> and/or talk. A manager for the timetable and available rooms. Financer
>> for ticket and advertising space sale. And all this with one tool.
>> 
>> When the speaker adds his / hers profil, he / she post all needed datas
>> incl. an picture which will be crop to fit the theme.
>> 
>> The financer can see how many tickes was sold and who has bought
>> advertisments. After the money arrived he / she can send out the tickets
>> (per email) or can activate the ad banner upload.
>> 
>> An other great feature should be an app for Android / iPhone /
>> BlackBerry to see the timetable, profils and talks on the divice and to
>> create the own plan with the prefered talks.
>> 
>> 
>> Ralph
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Mon Mar 29 22:23:00 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 29 Mar 2010 18:23:00 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>
	<006901cacee2$5c492a30$14db7e90$@net>
	<4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com>
	<c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com>
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com>
Message-ID: <410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>

On Mar 29, 2010, at 4:20 PM, Andrew Nacin wrote:
> I would read through http://core.trac.wordpress.org/ticket/10201. In a
> nutshell, the consensus among the core developers is that the
> roles/capabilities system was overdone initially, and that it should be
> scaled back for performance and optimization purposes (more or less, scale
> it back, so it can be scaled up). The core developers have committed to the
> following: one user, one role (per blog). That would mean we remove two
> hardly used aspects of the system: user-specific +/- capabilities, and
> multiple roles per user.

Really?  With custom post types and CMS functionality I can see this being problematic as I can easily see a user have different roles for each content type.

-Mike


From ralph at dasralph.de  Mon Mar 29 22:39:47 2010
From: ralph at dasralph.de (Ralph Bergmann)
Date: Tue, 30 Mar 2010 00:39:47 +0200
Subject: [wp-hackers] GSoC 2010
In-Reply-To: <D9A270E9-740A-43F9-9BFF-AE17692E0A07@newclarity.net>
References: <4BAE3ED6.40204@dasralph.de>	<349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>	<4BB0C534.9070800@dasralph.de>	<a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>	<4BB0DB0D.1000802@dasralph.de>	<a93cee651003291001k55eedc28r6604ec58ace2972@mail.gmail.com>
	<D9A270E9-740A-43F9-9BFF-AE17692E0A07@newclarity.net>
Message-ID: <4BB12C33.3000003@dasralph.de>

Am 30.03.10 00:13, schrieb Mike Schinkel:
> I'm currently working on an EventPress plugin

there is an error :(

-- 

Ralph Bergmann


www              http://www.dasralph.de/
mail             ralph at dasralph.de
skype            dasralph

xing             http://www.xing.com/profile/Ralph_Bergmann3
linkedin         http://www.linkedin.com/in/ralphbergmann
facebook         http://www.facebook.com/dasralph

pgp key id       30C4ECD8
pgp fingerprint  C6E4 3435 7CC8 5008 54EC 1C86 4176 7F75 30C4 ECD8

From mikeschinkel at newclarity.net  Mon Mar 29 22:53:53 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 29 Mar 2010 18:53:53 -0400
Subject: [wp-hackers] GSoC 2010
In-Reply-To: <4BB12C33.3000003@dasralph.de>
References: <4BAE3ED6.40204@dasralph.de>	<349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>	<4BB0C534.9070800@dasralph.de>	<a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>	<4BB0DB0D.1000802@dasralph.de>	<a93cee651003291001k55eedc28r6604ec58ace2972@mail.gmail.com>
	<D9A270E9-740A-43F9-9BFF-AE17692E0A07@newclarity.net>
	<4BB12C33.3000003@dasralph.de>
Message-ID: <236601B7-081B-4F09-AF11-CCDFCAA0CAFB@newclarity.net>

On Mar 29, 2010, at 6:39 PM, Ralph Bergmann wrote:

> Am 30.03.10 00:13, schrieb Mike Schinkel:
>> I'm currently working on an EventPress plugin
> 
> there is an error :(

That's a testing site, not a "live" site, but the discussion of event plugins made it relevant for me to bring up. 

-Mike



From wp at andrewnacin.com  Mon Mar 29 23:19:31 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 29 Mar 2010 19:19:31 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com> 
	<006901cacee2$5c492a30$14db7e90$@net>
	<4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com> 
	<c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com> 
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com> 
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
Message-ID: <4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com>

>
> Really? With custom post types and CMS functionality I can see this being
> problematic as I can easily see a user have different roles for each content
> type.


A custom post type has its own complete set of capabilities you can assign.

From ralph at dasralph.de  Mon Mar 29 23:31:27 2010
From: ralph at dasralph.de (Ralph Bergmann)
Date: Tue, 30 Mar 2010 01:31:27 +0200
Subject: [wp-hackers] GSoC 2010
In-Reply-To: <5a1dad881003290850u49a47736p84810b8537c056dc@mail.gmail.com>
References: <4BAE3ED6.40204@dasralph.de>	<349fe48b1003271623j630c795ahd330c212395db1af@mail.gmail.com>	<4BB0C534.9070800@dasralph.de>	<a93cee651003290828m1d0cb9b8ucf54599a209ece8f@mail.gmail.com>
	<5a1dad881003290850u49a47736p84810b8537c056dc@mail.gmail.com>
Message-ID: <4BB1384F.1050803@dasralph.de>

Am 29.03.10 17:50, schrieb Alex Hempton-Smith:
> Obviously make it compatible for single installs, but think of the 
> power of making it multi-site aware... 3.0 allows you to run
> multiple blogs off one install, with different subdomains.

I think the most common way is to use it on one site (www.eclipsecon.org
as an example) but they have an archive. Such an
archive is a feature of this plugin.

On the other hand there are some conferences which can have multiple
sites (wordcamp, eclipse demo camp
(http://wiki.eclipse.org/Eclipse_DemoCamp)).

It should work with both types.

> Being able to have speakers assigned to conferences across the
> network..?

I think this is a cool feature for speakers which goes from conference
to conference. But it need a way (and the permission) to share the data
between different blogs.

A other problem is, that I would like to embed a image-crop-feature for
the speakers profile image to fit it into the theme. But different blogs
can have different themes with different profil image dimensions :(


Okay it is time to go to bed... here in Germany... good night


Ralph

-- 

Ralph Bergmann


www              http://www.dasralph.de/
mail             ralph at dasralph.de
skype            dasralph

xing             http://www.xing.com/profile/Ralph_Bergmann3
linkedin         http://www.linkedin.com/in/ralphbergmann
facebook         http://www.facebook.com/dasralph

pgp key id       30C4ECD8
pgp fingerprint  C6E4 3435 7CC8 5008 54EC 1C86 4176 7F75 30C4 ECD8

From dkoopersmith at gmail.com  Tue Mar 30 00:37:17 2010
From: dkoopersmith at gmail.com (Daryl Koopersmith)
Date: Tue, 30 Mar 2010 02:37:17 +0200
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
Message-ID: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>

Hey hackers,

In short, I would like to create a CSS editor that will be easily integrated
to existing themes and provide users with a better alternative to theme
options.

As some of you may know, I worked on a similar project (
http://elastictheme.org) for WordPress in last year?s summer of code. This
proposal represents a year?s worth of thought and revision with regard to
the larger subject of theme editing and development. Put simply, this is
what I want to do this summer, so if you have any feedback or ideas please
let me know!
 <http://wp.me/pS0xt-7>

Features:
*  Edit CSS: A given. Edit backgrounds, typography, margins and padding?the
works.
*  Visual, interactive theme editing
*  Automatic child themes
*  MS support
*  Theme export
*  Developer friendly API
*  Extensible for plugins

If you're interested in this proposal, please read more at
http://wp.me/pS0xt-7 .

Thanks,
Daryl

From mikeschinkel at newclarity.net  Tue Mar 30 00:53:40 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 29 Mar 2010 20:53:40 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>
	<006901cacee2$5c492a30$14db7e90$@net>
	<4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com>
	<c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com>
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com>
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
	<4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com>
Message-ID: <0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>

Andrew:

Thanks. I assumed by your comments that those capabilities might be going away.  Very cool, glad they are not.

-Mike

On Mar 29, 2010, at 7:19 PM, Andrew Nacin wrote:

>> 
>> Really? With custom post types and CMS functionality I can see this being
>> problematic as I can easily see a user have different roles for each content
>> type.
> 
> 
> A custom post type has its own complete set of capabilities you can assign.
> From the inline documentation of register_post_type:
> 
> edit_cap - The capability that controls editing a particular object of this
> post type. Defaults to "edit_$capability_type" (edit_post).
> 
> edit_type_cap - The capability that controls editing objects of this post
> type as a class. Defaults to "edit_ . $capability_type . s" (edit_posts).
> 
> edit_others_cap - The capability that controls editing objects of this post
> type that are owned by other users. Defaults to "edit_others_ .
> $capability_type . s" (edit_others_posts).
> 
> publish_others_cap - The capability that controls publishing objects of this
> post type. Defaults to "publish_ . $capability_type . s" (publish_posts).
> 
> read_cap - The capability that controls reading a particular object of this
> post type. Defaults to "read_$capability_type" (read_post).
> 
> delete_cap - The capability that controls deleting a particular object of
> this post type. Defaults to "delete_$capability_type" (delete_post).
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From fidler.brian at gmail.com  Tue Mar 30 01:10:49 2010
From: fidler.brian at gmail.com (Brian Fidler)
Date: Mon, 29 Mar 2010 18:10:49 -0700
Subject: [wp-hackers] problem with $post->post_parent
In-Reply-To: <a7b7a8481003282158u1e160369k878f8acb33068a9a@mail.gmail.com>
References: <70d23f011003280922o1c228944x6baf662e0f817b4c@mail.gmail.com>
	<dc2b0e8a1003280924r1fe45170w693d8ad4f6ba65f3@mail.gmail.com>
	<70d23f011003282127l7ebe15c6p249b7c45b0e3e52c@mail.gmail.com>
	<a7b7a8481003282158u1e160369k878f8acb33068a9a@mail.gmail.com>
Message-ID: <70d23f011003291810o1fd378dbn9bc4b07ead5d434@mail.gmail.com>

As far as I know the page hierarchy is set up correctly. In WP's admin view
my Shop Page has a number of children and when editing them they show Shop
as their parent page.

When I am on the Shop page and echo out the page ID I get the correct post
ID which is 29, however if I go to one of the Shop page's children it won't
fetch the Parent ID at all. This holds true for each of my main level pages
(pages w/o parents).

I tested with this code :

global $post;

function checkPostID() {
    global $wp_query;
    $thePostID = $wp_query->post->ID;
    $myParent = $post->post_parent;
    echo "i am post ". $thePostID . " and my parent is " . $myParent;
}


if ( is_page('paintings')) {
    checkPostID();
   $myGallery='3';

} elseif ( is_page('loteria')) {
    checkPostID();
   $myGallery='2';

} elseif ( is_page('prints')) {
    checkPostID();
   $myGallery='18';

} elseif ( is_page('public-art')) {
   checkPostID();
   $myGallery='18';

} elseif ( is_page('shop')) {
    checkPostID();
    $myGallery='4';

} else {
    checkPostID();
    echo "and I don't know my parent!";
    $myGallery='2'; // just in case we are at an unclassified page, perhaps
the home page
}

?>





[image: brian fidler interactive] <http://www.brianfidler.com>
email: interactive at brianfidler.com
phone: 602.758.4733
[image: View Brian Fidler's profile on
LinkedIn]<http://www.linkedin.com/in/brianfidler>


On Sun, Mar 28, 2010 at 9:58 PM, Will Anderson <will at itsananderson.com>wrote:

> Perhaps a silly question, but you've actually set up the page hierarchy
> correctly, right?
>
> Also, depending on when this code is running, $post may not have been
> populated yet. If you're trying to do this from a plugin you may need to do
> some hook foo.
>
> A judiciously placed  print_r of the $post variable should clear up both of
> these questions.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From will at itsananderson.com  Tue Mar 30 01:56:50 2010
From: will at itsananderson.com (Will Anderson)
Date: Mon, 29 Mar 2010 21:56:50 -0400
Subject: [wp-hackers] problem with $post->post_parent
In-Reply-To: <70d23f011003291810o1fd378dbn9bc4b07ead5d434@mail.gmail.com>
References: <70d23f011003280922o1c228944x6baf662e0f817b4c@mail.gmail.com>
	<dc2b0e8a1003280924r1fe45170w693d8ad4f6ba65f3@mail.gmail.com>
	<70d23f011003282127l7ebe15c6p249b7c45b0e3e52c@mail.gmail.com>
	<a7b7a8481003282158u1e160369k878f8acb33068a9a@mail.gmail.com>
	<70d23f011003291810o1fd378dbn9bc4b07ead5d434@mail.gmail.com>
Message-ID: <a7b7a8481003291856h43f20d02h100abf9d302f40c6@mail.gmail.com>

Inside the checkPostID function, you're using $post, but you never declare
it as a global, so it will be null. Try this and see what happens

function checkPostID() {
   global $wp_query, $post; // global $post as well
   $thePostID = $wp_query->post->ID;
   $myParent = $post->post_parent;
   echo "i am post ". $thePostID . " and my parent is " . $myParent;
}

If this code is being executed before the $post variable is populated, it
will still not contain the post parent.

From eric at eamann.com  Tue Mar 30 05:24:25 2010
From: eric at eamann.com (Eric Mann)
Date: Mon, 29 Mar 2010 22:24:25 -0700
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
Message-ID: <004f01cacfc9$44d16470$ce742d50$@com>

While I agree with the general "I don't want users editing the theme"
sentiment, I think this is a fantastic idea!  It makes customization of
commonly available stock themes more accessible to users ... I spend more
time helping people fix sites they've broken in attempts to personalize them
than I spend actually developing new themes.

Like the Elastic Theme editor, I see this as having a very graphical UI.
The last thing we want to do is overwhelm users with code.  One feature I'd
recommend would be some kind of standards validation.  We all know that not
every browser works perfectly with ALL CSS3 declarations ... so maybe
pointing out that text-shadow will fail in IE and offering an alternative
(or maybe just not offering attributes that fail cross-browser) would work
... forcing a valid output would be a bonus, too.

~Eric

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Daryl
Koopersmith
Sent: Monday, March 29, 2010 5:37 PM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor

Hey hackers,

In short, I would like to create a CSS editor that will be easily integrated
to existing themes and provide users with a better alternative to theme
options.

As some of you may know, I worked on a similar project (
http://elastictheme.org) for WordPress in last year's summer of code. This
proposal represents a year's worth of thought and revision with regard to
the larger subject of theme editing and development. Put simply, this is
what I want to do this summer, so if you have any feedback or ideas please
let me know!
 <http://wp.me/pS0xt-7>

Features:
*  Edit CSS: A given. Edit backgrounds, typography, margins and padding-the
works.
*  Visual, interactive theme editing
*  Automatic child themes
*  MS support
*  Theme export
*  Developer friendly API
*  Extensible for plugins

If you're interested in this proposal, please read more at
http://wp.me/pS0xt-7 .

Thanks,
Daryl
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Tue Mar 30 05:45:50 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 01:45:50 -0400
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
Message-ID: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>

Hi all,

I've been wondering this for a long time but never asked this.  Anyone know why WordPress doesn't just use $_SERVER['HTTP_HOST'] and instead requires setting of WP_SITEURL (and WP_HOME?)  

There's obviously a good reason why it wasn't used, right?  I'm trying to write a plugin to switch domains and I'd like to know if there are cases where $_SERVER['HTTP_HOST'] is unreliable?   Anyone know the history and rationale?

Thanks in advance.

-Mike 

From fidler.brian at gmail.com  Tue Mar 30 06:19:54 2010
From: fidler.brian at gmail.com (Brian Fidler)
Date: Mon, 29 Mar 2010 23:19:54 -0700
Subject: [wp-hackers] problem with $post->post_parent
In-Reply-To: <a7b7a8481003291856h43f20d02h100abf9d302f40c6@mail.gmail.com>
References: <70d23f011003280922o1c228944x6baf662e0f817b4c@mail.gmail.com>
	<dc2b0e8a1003280924r1fe45170w693d8ad4f6ba65f3@mail.gmail.com>
	<70d23f011003282127l7ebe15c6p249b7c45b0e3e52c@mail.gmail.com>
	<a7b7a8481003282158u1e160369k878f8acb33068a9a@mail.gmail.com>
	<70d23f011003291810o1fd378dbn9bc4b07ead5d434@mail.gmail.com>
	<a7b7a8481003291856h43f20d02h100abf9d302f40c6@mail.gmail.com>
Message-ID: <70d23f011003292319q69f8b995n1e70de4c2a1d9214@mail.gmail.com>

got it. Thanks everyone!

brian


 [image: brian fidler interactive] <http://www.brianfidler.com>
email: interactive at brianfidler.com
phone: 602.758.4733
[image: View Brian Fidler's profile on
LinkedIn]<http://www.linkedin.com/in/brianfidler>


On Mon, Mar 29, 2010 at 6:56 PM, Will Anderson <will at itsananderson.com>wrote:

> Inside the checkPostID function, you're using $post, but you never declare
> it as a global, so it will be null. Try this and see what happens
>
> function checkPostID() {
>   global $wp_query, $post; // global $post as well
>    $thePostID = $wp_query->post->ID;
>   $myParent = $post->post_parent;
>   echo "i am post ". $thePostID . " and my parent is " . $myParent;
> }
>
> If this code is being executed before the $post variable is populated, it
> will still not contain the post parent.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From peter.westwood at ftwr.co.uk  Tue Mar 30 06:46:42 2010
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue, 30 Mar 2010 07:46:42 +0100
Subject: [wp-hackers] GSOC 2010: question about "Template Versioning"
	idea
In-Reply-To: <2EDD78CC-E0BF-45FD-8157-4B81D804C2A6@automattic.com>
References: <4BB10839.4050404@gmail.com>
	<2EDD78CC-E0BF-45FD-8157-4B81D804C2A6@automattic.com>
Message-ID: <96AEEB3D-BBD5-453E-94F5-AA48F83DEB33@ftwr.co.uk>


On 29 Mar 2010, at 21:10, Jane Wells wrote:

> 
> On Mar 29, 2010, at 4:06 PM, Wojciech Langiewicz wrote:
>> "Template Versioning",
>> 1) build this as an integrated feature within wordpress
>> 2) create a plug-in that would do it
> 
> We intended this to be an integrated feature, working similarly to Post Revisions in WordPress now. Jane
> 

I would however recommend for a GSOC project to build it as a plugin first if it can work as a plugin.

It makes it much easier to review the code and pass it around and give feedback if it is not being coded against a moving target (and also easier for you to write it while not working against a moving target)

Peter
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From beau at dentedreality.com.au  Tue Mar 30 06:47:34 2010
From: beau at dentedreality.com.au (Beau Lebens)
Date: Mon, 29 Mar 2010 23:47:34 -0700
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
Message-ID: <902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>

> I've been wondering this for a long time but never asked this. ?Anyone know why WordPress doesn't just use $_SERVER['HTTP_HOST'] and instead requires setting of WP_SITEURL (and WP_HOME?)

All of the $_SERVER variables are writeable, so
plugins/themes/anything could modify what they contain, "corrupting"
your theoretically "pristine" way of referring the the URL of the
current site.

Setting it as a constant is really about the only way of knowing that
it's set once, never modified, and contains exactly what it's supposed
to contain.

Beau

From mikeschinkel at newclarity.net  Tue Mar 30 08:03:41 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 04:03:41 -0400
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>
Message-ID: <4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>

On Mar 30, 2010, at 2:47 AM, Beau Lebens wrote:
>> I've been wondering this for a long time but never asked this.  Anyone know why WordPress doesn't just use $_SERVER['HTTP_HOST'] and instead requires setting of WP_SITEURL (and WP_HOME?)
> 
> All of the $_SERVER variables are writeable, so
> plugins/themes/anything could modify what they contain, "corrupting"
> your theoretically "pristine" way of referring the the URL of the
> current site.
> 
> Setting it as a constant is really about the only way of knowing that
> it's set once, never modified, and contains exactly what it's supposed
> to contain.

Thanks.  

So a follow up, is it fair to test $_SERVER['HTTP_HOST'] against the expected value as early in the code bootstrap as possible and if different go into a special "switch domain" state similar to how WordPress enters a "database needs to be upgraded" state immediately after upgrading the PHP code?  Or would testing $_SERVER['HTTP_HOST'] there still be problematic for some reason?

-Mike
P.S. Hmm.  If we need a constant, is there a reason why WP_SITEURL is not just set in wp-config.php based on the value of $_SERVER['HTTP_HOST']?

From fidler.brian at gmail.com  Tue Mar 30 08:12:16 2010
From: fidler.brian at gmail.com (Brian Fidler)
Date: Tue, 30 Mar 2010 01:12:16 -0700
Subject: [wp-hackers] Accessing custom fields in a post
Message-ID: <70d23f011003300112n471e2595r72bac9e008140e42@mail.gmail.com>

I have a number of Page sections on my site where I am using a Page as a
product. I've added a custom field for Image, a custom field for Price and a
custom field for ShippingCost. There are separate Page sections for
Paintings, Prints, and Misc items where the child items of that section are
the actual product. Some items in each section have the associated Price and
Shipping but not all items.

How can I access the data in a loop so that I can display a list of all
pages/products that include Image, the Price, and the ShippingCost
associated with the product/page?

So for example I might display 2 items from Paintings (w/12 total items), 5
items from Prints (w/8 total items) and 4 items from Misc (w/16 total
items).

I hope that makes sense, let me know if it doesn't.

thanks,
brian


[image: brian fidler interactive] <http://www.brianfidler.com>
email: interactive at brianfidler.com
phone: 602.758.4733
[image: View Brian Fidler's profile on
LinkedIn]<http://www.linkedin.com/in/brianfidler>

From fidler.brian at gmail.com  Tue Mar 30 08:57:47 2010
From: fidler.brian at gmail.com (Brian Fidler)
Date: Tue, 30 Mar 2010 01:57:47 -0700
Subject: [wp-hackers] Accessing custom fields in a post
In-Reply-To: <70d23f011003300112n471e2595r72bac9e008140e42@mail.gmail.com>
References: <70d23f011003300112n471e2595r72bac9e008140e42@mail.gmail.com>
Message-ID: <70d23f011003300157g7d4a0540x420cde8dc90cb8fe@mail.gmail.com>

Nevermind, I figured it out.

I added the following to my functions.php file:

function get_custom_field_value($bfiKey, $bPrint = false) {
   global $post;
   $bfiValue = get_post_meta($post->ID, $bfiKey, true);
   return $bfiValue;
}

and I added this to my Page template:

<?php
    if ( function_exists('get_custom_field_value') ){
      $myPrice = get_custom_field_value('price', true);
      $myShipping = get_custom_field_value('shipping', true);

      $myTotal = $myPrice + $myShipping;

      echo "<h3>Price: $" . $myPrice . "</h3>";
      echo "<h3>Shipping: $" . $myShipping . "</h3>";
      echo "<h3>Total: $" . $myTotal . "</h3>";
   }
?>


[image: brian fidler interactive] <http://www.brianfidler.com>
email: interactive at brianfidler.com
phone: 602.758.4733
[image: View Brian Fidler's profile on
LinkedIn]<http://www.linkedin.com/in/brianfidler>


On Tue, Mar 30, 2010 at 1:12 AM, Brian Fidler <fidler.brian at gmail.com>wrote:

> I have a number of Page sections on my site where I am using a Page as a
> product. I've added a custom field for Image, a custom field for Price and a
> custom field for ShippingCost. There are separate Page sections for
> Paintings, Prints, and Misc items where the child items of that section are
> the actual product. Some items in each section have the associated Price and
> Shipping but not all items.
>
> How can I access the data in a loop so that I can display a list of all
> pages/products that include Image, the Price, and the ShippingCost
> associated with the product/page?
>
> So for example I might display 2 items from Paintings (w/12 total items), 5
> items from Prints (w/8 total items) and 4 items from Misc (w/16 total
> items).
>
> I hope that makes sense, let me know if it doesn't.
>
> thanks,
> brian
>
>
> [image: brian fidler interactive] <http://www.brianfidler.com>
> email: interactive at brianfidler.com
> phone: 602.758.4733
> [image: View Brian Fidler's profile on LinkedIn]<http://www.linkedin.com/in/brianfidler>
>
>

From wordpress at zed1.com  Tue Mar 30 09:11:37 2010
From: wordpress at zed1.com (Mike Little)
Date: Tue, 30 Mar 2010 10:11:37 +0100
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net> 
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com> 
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
Message-ID: <7235ce781003300211v6c61d70n43c3cc271487d5f0@mail.gmail.com>

On 30 March 2010 09:03, Mike Schinkel <mikeschinkel at newclarity.net> wrote:

> P.S. Hmm.  If we need a constant, is there a reason why WP_SITEURL is not
> just set in wp-config.php based on the value of $_SERVER['HTTP_HOST']?
> _______________________________________________
>



You also have to take into account that $_SERVER['HTTP_HOST'] does not
contain the schema, the port number, or any path part.

The path part in particular is a problem even if you try to use the various
other $_SERVER variables.

If the very first hit to a site is http://domain.com/a/b/c/d/, which part of
that is site url?


Mike
-- 
Mike Little
http://zed1.com/

From hal at burgiss.net  Tue Mar 30 10:27:16 2010
From: hal at burgiss.net (Hal Burgiss)
Date: Tue, 30 Mar 2010 06:27:16 -0400
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
Message-ID: <20100330102716.GF24698@honey.burgiss.net>

On Tue, Mar 30, 2010 at 04:03:41AM -0400, Mike Schinkel wrote:
> P.S. Hmm.  If we need a constant, is there a reason why WP_SITEURL is not
> just set in wp-config.php based on the value of $_SERVER['HTTP_HOST']?

See http://codex.wordpress.org/Editing_wp-config.php, which mentions just
this. I find it very useful for moving projects around from development
environments to production, and never had it cause a problem.

-- 
Hal

From mikeschinkel at newclarity.net  Tue Mar 30 10:32:42 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 06:32:42 -0400
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <7235ce781003300211v6c61d70n43c3cc271487d5f0@mail.gmail.com>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<7235ce781003300211v6c61d70n43c3cc271487d5f0@mail.gmail.com>
Message-ID: <BD962605-5BB0-4FE5-87DB-8609BEC6E3A1@newclarity.net>

On Mar 30, 2010, at 5:11 AM, Mike Little wrote:
> On 30 March 2010 09:03, Mike Schinkel <mikeschinkel at newclarity.net> wrote:
>> P.S. Hmm.  If we need a constant, is there a reason why WP_SITEURL is not
>> just set in wp-config.php based on the value of $_SERVER['HTTP_HOST']?
> 
> You also have to take into account that $_SERVER['HTTP_HOST'] does not
> contain the schema, the port number, or any path part. The path part in
> particular is a problem even if you try to use the various other
> $_SERVER variables. If the very first hit to a site is http://domain.com/a/b/c/d/,
> which part of that is site url?


Thanks.  

The follow up is: Why then don't we just store "a/b/c/d/" to WP_SITEPATH and you get the domain from $_SERVER['HTTP_HOST'] and the port from $_SERVER['SERVER_PORT']?  (we can hardcode the "http(s)", that's okay. :-)  Changing the domain name trips up so many people when it seems like it shouldn't have to be so hard:

http://codex.wordpress.org/Changing_The_Site_URL
http://www.mydigitallife.info/2007/10/01/how-to-move-wordpress-blog-to-new-domain-or-location/
http://yoast.com/move-wordpress-blog-domain-10-steps/
http://chrisschuld.com/2009/10/moving-a-wordpress-install-from-one-domain-a-to-another-domain-b/
http://www.venukb.com/2008/05/05/moving-wordpress-to-another-domain/

Anyway, I'm not going to take on a fight to get it changed at this point, I have just been trying to understand the pitfalls of using $_SERVER['HTTP_HOST']  to *recognize* that the site has loaded via a domain that isn't what it is configured to be.  IOW, if I were to run this code as early as I can in the bootstrap, what problems might it cause?:

	$old_domain = get_option('siteurl');
	$new_domain = $_SERVER['HTTP_HOST'];
	if ($old_domain != $new_domain) {
		$valid_domains = array('dev.examples.com','test.example.com','stage.example.com','www.example.com');
		if (in_array($new_domain,$valid_domains) && in_array($old_domain,$valid_domains)) 
			do_action('switch_domain',array('old'=>$old_domain,'new'=>$new_domain));
	}

Thanks in advance.

-Mike

From mikeschinkel at newclarity.net  Tue Mar 30 10:37:21 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 06:37:21 -0400
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <20100330102716.GF24698@honey.burgiss.net>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<20100330102716.GF24698@honey.burgiss.net>
Message-ID: <0AF4A175-7599-4885-879B-AC2347B9FB61@newclarity.net>

On Mar 30, 2010, at 6:27 AM, Hal Burgiss wrote:
> On Tue, Mar 30, 2010 at 04:03:41AM -0400, Mike Schinkel wrote:
>> P.S. Hmm.  If we need a constant, is there a reason why WP_SITEURL is not
>> just set in wp-config.php based on the value of $_SERVER['HTTP_HOST']?
> 
> See http://codex.wordpress.org/Editing_wp-config.php, which mentions just
> this. I find it very useful for moving projects around from development
> environments to production, and never had it cause a problem.

Thanks Hal.  I've been doing exactly that for about 2 years now and I'm finally tired of it.  Not that the part you mention is hard, it's the other embedded paths in the database and the items that are domain related that get stored in the database (i.e. Google Maps API keys.)   I want to create a plugin that will automate this process as much as possible so I can not longer have to worry about setting things "just right" and no longer have to worry that I forgot to make that one critical change.  Better yet, I'd like to enable plugin and theme developers to make handle this process for their plugins and themes for me.

See http://www.wptavern.com/forum/plugins-hacks/1445-domain-switcher-plugin-functionality.html for more details.

-Mike

From mikeschinkel at newclarity.net  Tue Mar 30 10:53:37 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 06:53:37 -0400
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
Message-ID: <ACE05103-F1EF-443D-80EE-A5066CED4676@newclarity.net>

On Mar 29, 2010, at 8:37 PM, Daryl Koopersmith wrote:
> Hey hackers,
> 
> In short, I would like to create a CSS editor that will be easily integrated
> to existing themes and provide users with a better alternative to theme
> options.
> 
> As some of you may know, I worked on a similar project (
> http://elastictheme.org) for WordPress in last year?s summer of code. This
> proposal represents a year?s worth of thought and revision with regard to
> the larger subject of theme editing and development. Put simply, this is
> what I want to do this summer, so if you have any feedback or ideas please
> let me know!
> <http://wp.me/pS0xt-7>
> 
> Features:
> *  Edit CSS: A given. Edit backgrounds, typography, margins and padding?the
> works.
> *  Visual, interactive theme editing
> *  Automatic child themes
> *  MS support
> *  Theme export
> *  Developer friendly API
> *  Extensible for plugins
> 
> If you're interested in this proposal, please read more at
> http://wp.me/pS0xt-7 .

This sounds like a great idea!

I do have one caveat, the "MS Support."  I'd prefer you not store child themes in the database at all as it make deployment that much harder and it makes debugging with XDEBUG impossible.  
But if you must store them in the database please make it *optional*.

-Mike

From wordpress at zed1.com  Tue Mar 30 11:19:25 2010
From: wordpress at zed1.com (Mike Little)
Date: Tue, 30 Mar 2010 12:19:25 +0100
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <BD962605-5BB0-4FE5-87DB-8609BEC6E3A1@newclarity.net>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net> 
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com> 
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<7235ce781003300211v6c61d70n43c3cc271487d5f0@mail.gmail.com> 
	<BD962605-5BB0-4FE5-87DB-8609BEC6E3A1@newclarity.net>
Message-ID: <7235ce781003300419x1599c6c6q7d2b519afaef88e3@mail.gmail.com>

On 30 March 2010 11:32, Mike Schinkel <mikeschinkel at newclarity.net> wrote:

>
> The follow up is: Why then don't we just store "a/b/c/d/" to WP_SITEPATH
> and you get the domain from $_SERVER['HTTP_HOST'] and the port from
> $_SERVER['SERVER_PORT']?  (we can hardcode the "http(s)", that's okay. :-)



Because a/b may be the site url (and c/d a page name), or it may be a/b/c;
there's no way of knowing until it's manually set up.

There are (perhaps 'were' now ) places in both WP and WPMU that assumed no
port number, and, in WPMU, that assume only http.


Changing the domain name trips up so many people when it seems like it
> shouldn't have to be so hard:
>
>
This I agree with.


> Anyway, I'm not going to take on a fight to get it changed at this point, I
> have just been trying to understand the pitfalls of using
> $_SERVER['HTTP_HOST']  to *recognize* that the site has loaded via a domain
> that isn't what it is configured to be.  IOW, if I were to run this code as
> early as I can in the bootstrap, what problems might it cause?:
>
>        $old_domain = get_option('siteurl');
>
       $new_domain = $_SERVER['HTTP_HOST'];
>        if ($old_domain != $new_domain) {
>                $valid_domains = array('dev.examples.com','test.example.com
> ','stage.example.com','www.example.com');
>                if (in_array($new_domain,$valid_domains) &&
> in_array($old_domain,$valid_domains))
>
>  do_action('switch_domain',array('old'=>$old_domain,'new'=>$new_domain));
>        }
>
>

I've already written some code like this for a pre-packaged and populated WP
install, and the *first time* it got used it was installed on
http://ip.add.re.ss:5017/wrong-path/ -- my code didn't work at all!

I managed to convince them to accept the path part as pre-defined (otherwise
internal links would break), but they wouldn't budge on the ip address and
port number.



Mike
-- 
Mike Little
http://zed1.com/

From jeremy at visser.name  Tue Mar 30 11:37:26 2010
From: jeremy at visser.name (Jeremy Visser)
Date: Tue, 30 Mar 2010 22:37:26 +1100
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
Message-ID: <4BB1E276.4080803@visser.name>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 30/03/10 16:45, Mike Schinkel wrote:
> Anyone know why WordPress doesn't just use $_SERVER['HTTP_HOST'] and
> instead requires setting of WP_SITEURL (and WP_HOME?)
> 
> There's obviously a good reason why it wasn't used, right?

  GET / HTTP/1.1
  Host: " onclick="nastyCode()" dummy="

I can't really think of any practical applications for this, but using
HTTP_HOST is a possible path for arbitrary unfiltered strings to be
echoed out. My above example is a bit na?ve though ? do forgive me.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)

iEYEARECAAYFAkux4nMACgkQvs6Qqs8TxBphBgCgvTKuGQOn3G+EnulId0+GMCLG
d/UAoJqoTa0AtxWODtKHks/fxWf/ZUB9
=vTAv
-----END PGP SIGNATURE-----

From wp at andrewnacin.com  Tue Mar 30 12:29:40 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 30 Mar 2010 08:29:40 -0400
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
Message-ID: <4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com>

"Automatic child themes" was also included in another proposal,
http://wp.me/pQEdq-q, as an extension of a theme revisioning system. Seems
like an interesting cross-over that both proposals could make good use of.

From wp at andrewnacin.com  Tue Mar 30 12:35:48 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 30 Mar 2010 08:35:48 -0400
Subject: [wp-hackers] Accessing custom fields in a post
In-Reply-To: <70d23f011003300157g7d4a0540x420cde8dc90cb8fe@mail.gmail.com>
References: <70d23f011003300112n471e2595r72bac9e008140e42@mail.gmail.com> 
	<70d23f011003300157g7d4a0540x420cde8dc90cb8fe@mail.gmail.com>
Message-ID: <4cc4de141003300535w32688f0ey997347963d5bfa48@mail.gmail.com>

You could just use get_post_meta() there, instead of creating a wrapper
function. You also don't seem to implement the second argument even though
you use it, but that's easy enough -- either echo get_post_meta(), or don't.

You may also want to look into the get_post_custom_* functions:
http://codex.wordpress.org/Custom_Fields.

From beau at dentedreality.com.au  Tue Mar 30 15:54:16 2010
From: beau at dentedreality.com.au (Beau Lebens)
Date: Tue, 30 Mar 2010 08:54:16 -0700
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com> 
	<4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com>
Message-ID: <902424491003300854h5e60b306n9a79bc0dee7f1013@mail.gmail.com>

Full disclosure: I was Daryl's mentor for GSoC last year, and reviewed
his proposal before he mailed it out to the group, but I'd like to add
a few comments anyway:

- This proposal has stemmed from Daryl's experience working on
Elastic, and realizing that a decent style editor is not only a big
part of a good visual theme editor, but entirely a project of it's own
- Splitting things up and making parts of the editor modular mean the
entire thing is potentially pluggable, a very cool feature (and very
"WordPressish")
- MikeS: saving to the DB by default definitely doesn't preclude from
saving out/exporting to file. There would need to be a way to get at
the CSS as raw CSS either way
- AndrewN: Absolutely, if the theme revisioning project happened this
summer, it'd be perfect to be able to just tie into whatever API that
provided and just trigger a new revision via this editor.
- There's a lot of tricky UI to be figured out here to avoid making
this just a blunt CSS tool (add selector, add attribute, select from
list, enter value, save). I think there's also some real potential for
concepts like palettes and presets and whatnot that could make this
really powerful, without being overly complex for the end user.

In summary, "I like it" :)

Cheers,
Beau


On Tue, Mar 30, 2010 at 5:29 AM, Andrew Nacin <wp at andrewnacin.com> wrote:
> "Automatic child themes" was also included in another proposal,
> http://wp.me/pQEdq-q, as an extension of a theme revisioning system. Seems
> like an interesting cross-over that both proposals could make good use of.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From aaron at xavisys.com  Tue Mar 30 16:08:15 2010
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Tue, 30 Mar 2010 09:08:15 -0700
Subject: [wp-hackers] GSoC 2010, WordPress.org Profiles
In-Reply-To: <a93cee651003201646i7c3f16ebx4fdb2061f34e265a@mail.gmail.com>
References: <1269126974.2116.55.camel@rivalry.c7.campus.utcluj.ro>	<a93cee651003201627k46fd0fds6ab46566e253f9fe@mail.gmail.com>	<1269128446.2116.77.camel@rivalry.c7.campus.utcluj.ro>
	<a93cee651003201646i7c3f16ebx4fdb2061f34e265a@mail.gmail.com>
Message-ID: <4BB221EF.9070306@xavisys.com>

I think the differences in score are a good idea, but maybe not just as 
he laid them out.  The idea would be to make sure that participating in 
Trac would be worth something, but submitting a patch that's accepted 
would be worth more.  Additionally, we'd have to have some way to add 
reputation for editing the codex, but penalties if your changes to the 
codex are reverted (so people don't bump their reputation by adding 
bogus info to the codex).  It definitely needs some serious thought.

Justin Shreve wrote:
> Yes I guess grouped is the wrong word. Then it sounds like I'm
> an official developer when I'm not. Tagged as "codex writer", whatever makes
> more sense.
>
> True - I don't like having to write documentation all that much either but I
> just worry about having significantly different rankings for things. That's
> a minor detail though. People like karma points so it's a necessary feature!
>   


From scribu at gmail.com  Tue Mar 30 16:44:59 2010
From: scribu at gmail.com (scribu)
Date: Tue, 30 Mar 2010 19:44:59 +0300
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <0AF4A175-7599-4885-879B-AC2347B9FB61@newclarity.net>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<20100330102716.GF24698@honey.burgiss.net>
	<0AF4A175-7599-4885-879B-AC2347B9FB61@newclarity.net>
Message-ID: <349fe48b1003300944l43ca07eei419d1e7f64d3ba5a@mail.gmail.com>

On Tue, Mar 30, 2010 at 1:37 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> I want to create a plugin that will automate this process as much as
> possible so I can not longer have to worry about setting things "just right"
> and no longer have to worry that I forgot to make that one critical change.
>  Better yet, I'd like to enable plugin and theme developers to make handle
> this process for their plugins and themes for me.
>

Looks like there's a plugin for this already:

http://wordpress.org/extend/plugins/ezmigrate/


-- 
http://scribu.net

From eitanadlerlist at gmail.com  Tue Mar 30 16:47:16 2010
From: eitanadlerlist at gmail.com (Eitan Adler)
Date: Tue, 30 Mar 2010 19:47:16 +0300
Subject: [wp-hackers] GSOC - comment moderation proposal
Message-ID: <a0777e081003300947td7366c1m6fef905b56185d24@mail.gmail.com>

Would the following be sufficient for a GSOC proposal? Assuming the
rest of my appliacation is OK would this project be accepted? What if
anything should I revise? Are there any specific suggstions on how I
should implement this?

These are preliminary milestones and are likely to change as I work on
the project.
Documentation will be done while I am writing the code.
1) Create api for changing parent of comment
2) Adding option in the admin screen for changing comment parents
3) Add notification option to poster if he opted receive replies to his post
4) Add threaded comments to comments in moderation
5) Add method of re-parenting through the xml-rpc api
6) Add method to request all sub-comments

From otto at ottodestruct.com  Tue Mar 30 16:50:10 2010
From: otto at ottodestruct.com (Otto)
Date: Tue, 30 Mar 2010 11:50:10 -0500
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <349fe48b1003300944l43ca07eei419d1e7f64d3ba5a@mail.gmail.com>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net> 
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com> 
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<20100330102716.GF24698@honey.burgiss.net> 
	<0AF4A175-7599-4885-879B-AC2347B9FB61@newclarity.net>
	<349fe48b1003300944l43ca07eei419d1e7f64d3ba5a@mail.gmail.com>
Message-ID: <161617691003300950q75e4c14al8a37585415d3a467@mail.gmail.com>

The RELOCATE define does much the same thing, no?

http://codex.wordpress.org/Changing_The_Site_URL#Relocate_method

Anyway, the reason for not leaving it on all the time: $_SERVER
variables are not particularly reliable. Nobody likes their site
breaking for no obvious reason, and relying on them tends to leave you
open to unusual hacking approaches (since the data in them can
sometimes be controlled by the client).

-Otto

From jer at simianuprising.com  Tue Mar 30 16:50:41 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Tue, 30 Mar 2010 12:50:41 -0400
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <B61CBDEC-A11F-4862-B414-5A1CB4ED3B9B@newclarity.net>
References: <4BB0C270.6060008@wptavern.com>
	<B61CBDEC-A11F-4862-B414-5A1CB4ED3B9B@newclarity.net>
Message-ID: <e1202cb11003300950o34acb9a6t5dfe6c9e3a744ab9@mail.gmail.com>

-1 on this idea of a widget specific repo or UI.  Most widget-plugins
are not composed entirely of widgets holding standard WP functions,
they also define functions that they use inside the widget, they are
simple plugins but they are plugins nonetheless. Splitting them into
their own repo will create tons of work and complication and will
confuse users with little or no benefit to usability that couldn't be
achieved by applying the same amount of effort to the existing repo
and its taxonomy-based search.

On Sun, Mar 28, 2010 at 2:44 PM, Jane Wells <jane at automattic.com> wrote:
> the idea was that plugins that just add widgets create an extra layer of
> code and administration that isn't really needed, and makes the user
> experience less smooth.

I don't think there is much meat to this speculation.

 * A widgets repository would contain plugins that happen to not do
much except define widgets, but would come with pretty much all the
same burdens as the plugin repo, effectively replicating most of the
functionality.

 * The 'administration and code' needed to build a widget-only plugin
will not go down due to the widgets repo. Simple plugins are simple
and that won't change.

 * That said, the 'administration and code' of publishing a plugin
that has widgets WOULD go up. What if you have a plugin with a widget,
but also want it to exist for the widgets repo? Do you publish it
twice, once for each repo? Do you publish the same plugin for both, or
do you need to strip down the full plugin to be only the widget?

 * The user experience for installing plugins is already pretty
smooth, and has the huge benefit of being a one-stop-shop for all
extension needs (other than themes, which are distinct in a very
meaningful and understandable way). Creating two sources of
plugins/widgets would confuse things a lot for pretty much no reason.
WordPress administrators need to understand what plugins are and what
they can do. If they know 3 sentences worth of what plugins are then
they should understand that plugins can add new widgets. Making
widgets seperate will imply that plugins don't add widgets, or that an
accompanying widget needs to be installed. Why confused users with
these questions? If it says it has a widget in the description then
the plugin has a widget. If it says its only widgets and thus
light-weight, then all the better.

 * As stated the 'widgets' tag in the existing plugin repo should be
able to handle whatever situations this widget repo is purported to
solve, and I don't think we can  imagine a situation where using the
'widgets' tag creatively wouldn't be a good solution.

 * i.e. If we want to make installing widgets easy from the widgets
management screen then link to a search in the add-plugin screen with
the widget tag loaded.

 * If the existing plugins system+tags aren't good enough then that
should be fixed. Using this widgets-only-plugins situation as
inspiration the plugin screens could probably be refactored to deal
better with this situation as well as existing use-cases.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From wp at andrewnacin.com  Tue Mar 30 16:54:45 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 30 Mar 2010 12:54:45 -0400
Subject: [wp-hackers] GSOC - comment moderation proposal
In-Reply-To: <a0777e081003300947td7366c1m6fef905b56185d24@mail.gmail.com>
References: <a0777e081003300947td7366c1m6fef905b56185d24@mail.gmail.com>
Message-ID: <4cc4de141003300954v54e95c9cy36b203b4e39207c7@mail.gmail.com>

I like this. Some quick notes:

Check out the Subscribe to Comments plugin (re bullet #3).

Thread comments in moderation panel (re bullet #4) is a good idea in theory,
but it will be more about the UI/UX decisions on how to implement it
(particularly re: keyword shortcuts and the river of comments), rather than
actually implementing it. Of course, once decisions are made, it's gotta be
implemented, too :)

From eitanadlerlist at gmail.com  Tue Mar 30 16:55:08 2010
From: eitanadlerlist at gmail.com (Eitan Adler)
Date: Tue, 30 Mar 2010 19:55:08 +0300
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <B61CBDEC-A11F-4862-B414-5A1CB4ED3B9B@newclarity.net>
References: <4BB0C270.6060008@wptavern.com>
	<B61CBDEC-A11F-4862-B414-5A1CB4ED3B9B@newclarity.net>
Message-ID: <a0777e081003300955o4b1ff042tb1d646f133939653@mail.gmail.com>

My understanding of the widget plugin repo is NOT that we want a
seperate repository for plugins but rather a simplified procedure for
installing and manipulating them. Perhaps instead of creating an
entirely new repo the installation code would detect that you are
installing a "provides-widget" plugin and immediately activate it and
go to the widget managment page.

Another option would be the ability to install plugins directly from
the widgets page (or at least link to the installation page from the
widgets page)

From wp at andrewnacin.com  Tue Mar 30 17:27:41 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 30 Mar 2010 13:27:41 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com> 
	<006901cacee2$5c492a30$14db7e90$@net>
	<4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com> 
	<c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com> 
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com> 
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
	<4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com> 
	<0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>
Message-ID: <4cc4de141003301027w7f24058bw2d4140f19630b8d9@mail.gmail.com>

On Mon, Mar 29, 2010 at 8:53 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> Thanks. I assumed by your comments that those capabilities might be going
> away.  Very cool, glad they are not.


I had said "user-specific +/- capabilities," so I understand the confusion.
The current system has three rarely used features, and I was referring to
the second and third I list here:

1. A user can have multiple roles (in the same blog).

     Ex: A user can be given the Editor and Administrator roles at once.
(Since all capabilities in the Editor role are also in the Administrator
role, then this would have no effect.)

2. A user can have capabilities assigned to them individually, in addition
to the capabilities they get through roles.

     Ex: A user with the Editor role can also be given the activate_plugins
capability.

3. A user can have capabilities removed from them, negating capabilities
they get through roles.

     Ex: A user with the Editor role can be stripped individually of the
unfiltered_html capability.

These three features of the roles/capability API are precisely what cause
scalability problems, particularly in the users API. Sure, they sound
useful, but how many people actually use them? Instead, this would be the
new system:

    1. The user with both the Administrator and Editor roles would just have
the Administrator role. If the Editor role had capabilities that the
Administrator role did not have, then the user would be assigned instead to
a third role with the merged capabilities of Administrator and Editor.

    2. A user with the Editor role plus activate_plugins would need to be
assigned to a new Super Editor role with the activate_plugins capability,
plus the capabilities that make up the Editor role.

    3. A user with the Editor role without the unfiltered_html capability
would need to be assigned to a new Filtered Editor role with the
capabilities that make up the Editor role, minus unfiltered_html.

Moving capabilities squarely to roles make the entire system much more
scalable, and hence why it is desired.

From wp-hackers at tobias.baethge.com  Tue Mar 30 17:33:57 2010
From: wp-hackers at tobias.baethge.com (TobiasBg)
Date: Tue, 30 Mar 2010 19:33:57 +0200 (CEST)
Subject: [wp-hackers] GSOC - comment moderation proposal
In-Reply-To: <a0777e081003300947td7366c1m6fef905b56185d24@mail.gmail.com>
Message-ID: <20100330173358.19077183D51C2@dd19416.kasserver.com>

Hi,

while I generally like the idea, I'm not sure that this is enough for a project.

The parent changing is already available: http://wordpress.org/extend/plugins/move-wordpress-comments/
As well as moving to another page with the same plugin (on frontend and backend).

As nacin already said, there's also a plugin for comment reply notifications.

(I'm not saying that you should rather not submit your application, it's just that it seems that you could use a lot of already existing code, so that your own work would be rather small (just judging from those 6 things you mention, I don't know how much work it really is).)

Best wishes,
Tobias




From zamoose at gmail.com  Tue Mar 30 17:57:46 2010
From: zamoose at gmail.com (Doug Stewart)
Date: Tue, 30 Mar 2010 13:57:46 -0400
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <a0777e081003300955o4b1ff042tb1d646f133939653@mail.gmail.com>
References: <4BB0C270.6060008@wptavern.com>
	<B61CBDEC-A11F-4862-B414-5A1CB4ED3B9B@newclarity.net>
	<a0777e081003300955o4b1ff042tb1d646f133939653@mail.gmail.com>
Message-ID: <71ddd7491003301057h65abd74fucf30902a49bf863f@mail.gmail.com>

On 3/30/10, Eitan Adler <eitanadlerlist at gmail.com> wrote:
> My understanding of the widget plugin repo is NOT that we want a
> seperate repository for plugins but rather a simplified procedure for
> installing and manipulating them. Perhaps instead of creating an
> entirely new repo the installation code would detect that you are
> installing a "provides-widget" plugin and immediately activate it and
> go to the widget managment page.
>
> Another option would be the ability to install plugins directly from
> the widgets page (or at least link to the installation page from the
> widgets page)


Perhaps we're looking at this the wrong way.

In this day and age, with Widgets having been in WP trunk for ages,
shouldn't the expectation be that any plugin providing a block of
output (as opposed to one that modifies the_content(), etc.) should
provide a widget in which to display said output?  I.e., that which
has previously been accomplished largely through custom template tags
ought now be available as widgets as well?

The question then becomes: how do we encourage/enforce the expectation
that all plugins producing output ought to at least provide an
optional widget interface as a bare minimum? (I know that, in many
ways, it's a "marketplace" enforcement, as it's now rare for me to
find such a plugin that DOESN'T at least provide a skeleton widget...)

-- 
-Doug
http://literalbarrage.org/blog/
@zamoose

From bradw at illiams.com  Tue Mar 30 18:02:00 2010
From: bradw at illiams.com (Brad Williams)
Date: Tue, 30 Mar 2010 14:02:00 -0400
Subject: [wp-hackers] GSOC - widget repository
In-Reply-To: <e1202cb11003300950o34acb9a6t5dfe6c9e3a744ab9@mail.gmail.com>
References: <4BB0C270.6060008@wptavern.com>	<B61CBDEC-A11F-4862-B414-5A1CB4ED3B9B@newclarity.net>
	<e1202cb11003300950o34acb9a6t5dfe6c9e3a744ab9@mail.gmail.com>
Message-ID: <011f01cad033$18ae8340$4a0b89c0$@com>

Maybe a good solution is to just create a separate widget search on
WordPress.org that only searches plugins with the "widget" tag added 

-Brad Williams
@williamsba

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Jeremy Clarke
Sent: Tuesday, March 30, 2010 12:51 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] GSOC - widget repository

-1 on this idea of a widget specific repo or UI.  Most widget-plugins
are not composed entirely of widgets holding standard WP functions,
they also define functions that they use inside the widget, they are
simple plugins but they are plugins nonetheless. Splitting them into
their own repo will create tons of work and complication and will
confuse users with little or no benefit to usability that couldn't be
achieved by applying the same amount of effort to the existing repo
and its taxonomy-based search.

On Sun, Mar 28, 2010 at 2:44 PM, Jane Wells <jane at automattic.com> wrote:
> the idea was that plugins that just add widgets create an extra layer of
> code and administration that isn't really needed, and makes the user
> experience less smooth.

I don't think there is much meat to this speculation.

 * A widgets repository would contain plugins that happen to not do
much except define widgets, but would come with pretty much all the
same burdens as the plugin repo, effectively replicating most of the
functionality.

 * The 'administration and code' needed to build a widget-only plugin
will not go down due to the widgets repo. Simple plugins are simple
and that won't change.

 * That said, the 'administration and code' of publishing a plugin
that has widgets WOULD go up. What if you have a plugin with a widget,
but also want it to exist for the widgets repo? Do you publish it
twice, once for each repo? Do you publish the same plugin for both, or
do you need to strip down the full plugin to be only the widget?

 * The user experience for installing plugins is already pretty
smooth, and has the huge benefit of being a one-stop-shop for all
extension needs (other than themes, which are distinct in a very
meaningful and understandable way). Creating two sources of
plugins/widgets would confuse things a lot for pretty much no reason.
WordPress administrators need to understand what plugins are and what
they can do. If they know 3 sentences worth of what plugins are then
they should understand that plugins can add new widgets. Making
widgets seperate will imply that plugins don't add widgets, or that an
accompanying widget needs to be installed. Why confused users with
these questions? If it says it has a widget in the description then
the plugin has a widget. If it says its only widgets and thus
light-weight, then all the better.

 * As stated the 'widgets' tag in the existing plugin repo should be
able to handle whatever situations this widget repo is purported to
solve, and I don't think we can  imagine a situation where using the
'widgets' tag creatively wouldn't be a good solution.

 * i.e. If we want to make installing widgets easy from the widgets
management screen then link to a search in the add-plugin screen with
the widget tag loaded.

 * If the existing plugins system+tags aren't good enough then that
should be fixed. Using this widgets-only-plugins situation as
inspiration the plugin screens could probably be refactored to deal
better with this situation as well as existing use-cases.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers



From wlangiewicz at gmail.com  Tue Mar 30 20:31:47 2010
From: wlangiewicz at gmail.com (Wojciech Langiewicz)
Date: Tue, 30 Mar 2010 22:31:47 +0200
Subject: [wp-hackers] GSOC 2010: question about "Template Versioning"
 idea
In-Reply-To: <96AEEB3D-BBD5-453E-94F5-AA48F83DEB33@ftwr.co.uk>
References: <4BB10839.4050404@gmail.com>	<2EDD78CC-E0BF-45FD-8157-4B81D804C2A6@automattic.com>
	<96AEEB3D-BBD5-453E-94F5-AA48F83DEB33@ftwr.co.uk>
Message-ID: <4BB25FB3.9000706@gmail.com>

Peter Westwood pisze:
> On 29 Mar 2010, at 21:10, Jane Wells wrote:
> 
>>> "Template Versioning",
>>> 1) build this as an integrated feature within wordpress
>>> 2) create a plug-in that would do it
>> We intended this to be an integrated feature, working similarly to Post Revisions in WordPress now. Jane
>>
> I would however recommend for a GSOC project to build it as a plugin first if it can work as a plugin.
> 
> It makes it much easier to review the code and pass it around and give feedback if it is not being coded against a moving target (and also easier for you to write it while not working against a moving target)

Thanks for commenting, I think that is a good idea.
Draft of my proposal is available here: 
http://binary10.info/blog/2010/03/gsoc-wp/
If you have any comments, or ideas please feel free to post them.

--
Wojciech Langiewicz

From eitanadlerlist at gmail.com  Tue Mar 30 20:46:22 2010
From: eitanadlerlist at gmail.com (Eitan Adler)
Date: Tue, 30 Mar 2010 23:46:22 +0300
Subject: [wp-hackers] GSOC - comment moderation proposal
In-Reply-To: <20100330173358.19077183D51C2@dd19416.kasserver.com>
References: <a0777e081003300947td7366c1m6fef905b56185d24@mail.gmail.com> 
	<20100330173358.19077183D51C2@dd19416.kasserver.com>
Message-ID: <a0777e081003301346r6c93eb55t303bf4b1d049f72a@mail.gmail.com>

On Tue, Mar 30, 2010 at 8:33 PM, TobiasBg <wp-hackers at tobias.baethge.com> wrote:
> Hi,
>
> while I generally like the idea, I'm not sure that this is enough for a project.
>
> (I'm not saying that you should rather not submit your application, it's just that it seems that you could use a lot of already existing code, so that your own work would be rather small (just judging from those 6 things you mention, I don't know how much work it really is).)
>

I looked through the bug list and the ideas page but I didn't find
that many feature requests having to do with the comment page. I'd be
happy to extend the scope of the project if anyone has any other
ideas.

From peter.westwood at ftwr.co.uk  Tue Mar 30 20:48:56 2010
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue, 30 Mar 2010 21:48:56 +0100
Subject: [wp-hackers] GSOC - comment moderation proposal
In-Reply-To: <20100330173358.19077183D51C2@dd19416.kasserver.com>
References: <20100330173358.19077183D51C2@dd19416.kasserver.com>
Message-ID: <6ACC589D-78E9-4122-96B6-75EAAA5E7FBB@ftwr.co.uk>


On 30 Mar 2010, at 18:33, TobiasBg wrote:

> Hi,
> 
> while I generally like the idea, I'm not sure that this is enough for a project.
> 

I strongly disagree.

Just because there are examples of implementations for what people are proposing to work on does not mean that there is not enough for a project.

I think the is a lot of work going to be involved to get something which works really well for this and is intuitive to use.

> The parent changing is already available: http://wordpress.org/extend/plugins/move-wordpress-comments/
> As well as moving to another page with the same plugin (on frontend and backend).
> 

Just checked this out and yes it provides the functionality but not in the slick kind of way it could be provided.

> As nacin already said, there's also a plugin for comment reply notifications.
> 

I wouldn't see that as something we would expect to bundle into core at the moment and does have a good "solution" so I would definitely recommend keeping this outside the scope of the GSOC application

Cheers

Peter
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From eitanadlerlist at gmail.com  Tue Mar 30 20:53:59 2010
From: eitanadlerlist at gmail.com (Eitan Adler)
Date: Tue, 30 Mar 2010 23:53:59 +0300
Subject: [wp-hackers] XML-RPC - are there any APIs should be supported
Message-ID: <a0777e081003301353v4b016b1bld033b4e02da39ebb@mail.gmail.com>

Per http://codex.wordpress.org/XML-RPC_Support only three (+1 for
wordpress) APIs are supported.
Is there anything I could to improve the XML-RPC implementation? Are
there any services that support XML-RPC that might be useful to have
in wordpress either as a plugin or in core?
Perhaps a plugin for http://www.xmlrpc.com/weblogsCom ?

From mikeschinkel at newclarity.net  Tue Mar 30 21:06:46 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 17:06:46 -0400
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <7235ce781003300419x1599c6c6q7d2b519afaef88e3@mail.gmail.com>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<7235ce781003300211v6c61d70n43c3cc271487d5f0@mail.gmail.com>
	<BD962605-5BB0-4FE5-87DB-8609BEC6E3A1@newclarity.net>
	<7235ce781003300419x1599c6c6q7d2b519afaef88e3@mail.gmail.com>
Message-ID: <EA8E25C0-4C3F-49FF-9FBD-9D79BBFFBDE0@newclarity.net>

On Mar 30, 2010, at 7:37 AM, Jeremy Visser wrote:
>> Anyone know why WordPress doesn't just use $_SERVER['HTTP_HOST'] and
>> instead requires setting of WP_SITEURL (and WP_HOME?)
>> 
>> There's obviously a good reason why it wasn't used, right?
> 
>  GET / HTTP/1.1
>  Host: " onclick="nastyCode()" dummy="
> 
> I can't really think of any practical applications for this, but using
> HTTP_HOST is a possible path for arbitrary unfiltered strings to be
> echoed out. My above example is a bit na?ve though ? do forgive me.


Thanks.  

This would solve that problem, right?

$valid_domains = array(
	'dev.examples.com',
	'test.example.com',
	'stage.example.com',
	'www.example.com');
if (in_array($_SERVER['HTTP_HOST']),$valid_domains))
	define('site_url',$_SERVER['HTTP_HOST']))


On Mar 30, 2010, at 7:19 AM, Mike Little wrote:
> On 30 March 2010 11:32, Mike Schinkel <mikeschinkel at newclarity.net> wrote:
>> The follow up is: Why then don't we just store "a/b/c/d/" to WP_SITEPATH
>> and you get the domain from $_SERVER['HTTP_HOST'] and the port from
>> $_SERVER['SERVER_PORT']?  (we can hardcode the "http(s)", that's okay. :-)
> 
> Because a/b may be the site url (and c/d a page name), or it may be a/b/c;
> there's no way of knowing until it's manually set up.

If it's "a/b", set it as "a/b."  My question *assumed* it was "a/b/c/d" based on your comment and not "a/b."
OTOH, my question really asked why must it be set to "http://example.com/a/b" or "http://example.com/a/b/c/d" instead of just "a/b" or "a/b/c/d."  The distinction between "a/b" and "a/b/c/d" is not relevant to the question. 

> There are (perhaps 'were' now ) places in both WP and WPMU that assumed no
> port number, and, in WPMU, that assume only http.

Then don't set the port number and assume http, that's easy.  Neither of those affect the question which is "why force the domain portion of WP_SITEURL to be set?"

>> IOW, if I were to run this code as
>> early as I can in the bootstrap, what problems might it cause?:
>> 
>>       $old_domain = get_option('siteurl');
>> 
>>       $new_domain = $_SERVER['HTTP_HOST'];
>>       if ($old_domain != $new_domain) {
>>               $valid_domains = array('dev.examples.com','test.example.com
>> ','stage.example.com','www.example.com');
>>               if (in_array($new_domain,$valid_domains) &&
>> in_array($old_domain,$valid_domains))
>> 
>> do_action('switch_domain',array('old'=>$old_domain,'new'=>$new_domain));
>>       }
> 
> I've already written some code like this for a pre-packaged and populated WP
> install, and the *first time* it got used it was installed on
> http://ip.add.re.ss:5017/wrong-path/ -- my code didn't work at all!

Who used it?  Why did this happen?  Was it because you didn't require them to authenticate before the switch?

Was is in active development/deployment situation or was it someone using your code and something without your direct involvement?

> I managed to convince them to accept the path part as pre-defined (otherwise
> internal links would break), but they wouldn't budge on the ip address and
> port number.

Who are "they?"  Sorry, but I'm very confused by the anecdote and would like to understand it better.

-Mike



From wp at andrewnacin.com  Tue Mar 30 21:14:10 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 30 Mar 2010 17:14:10 -0400
Subject: [wp-hackers] XML-RPC - are there any APIs should be supported
In-Reply-To: <a0777e081003301353v4b016b1bld033b4e02da39ebb@mail.gmail.com>
References: <a0777e081003301353v4b016b1bld033b4e02da39ebb@mail.gmail.com>
Message-ID: <4cc4de141003301414o65ca9a6aia2df0a551c12643@mail.gmail.com>

Hypothetically, it'd be good to see XML-RPC support for everything. Scaling
that lofty goal down a bit, there are definitely some areas where support
could be added. Take post thumbnails, for instance.

Joseph Scott would be a good person to talk to, you may be able to find him
in #wordpress-dev or #wordpress-gsoc.

On Tue, Mar 30, 2010 at 4:53 PM, Eitan Adler <eitanadlerlist at gmail.com>wrote:

> Per http://codex.wordpress.org/XML-RPC_Support only three (+1 for
> wordpress) APIs are supported.
> Is there anything I could to improve the XML-RPC implementation? Are
> there any services that support XML-RPC that might be useful to have
> in wordpress either as a plugin or in core?
> Perhaps a plugin for http://www.xmlrpc.com/weblogsCom ?

From joseph at josephscott.org  Tue Mar 30 21:15:10 2010
From: joseph at josephscott.org (Joseph Scott)
Date: Tue, 30 Mar 2010 15:15:10 -0600
Subject: [wp-hackers] XML-RPC - are there any APIs should be supported
In-Reply-To: <a0777e081003301353v4b016b1bld033b4e02da39ebb@mail.gmail.com>
References: <a0777e081003301353v4b016b1bld033b4e02da39ebb@mail.gmail.com>
Message-ID: <r2nbbd639f51003301415q3a19e5a9la07891e49cf550e9@mail.gmail.com>

On Tue, Mar 30, 2010 at 2:53 PM, Eitan Adler <eitanadlerlist at gmail.com> wrote:
> Per http://codex.wordpress.org/XML-RPC_Support only three (+1 for
> wordpress) APIs are supported.
> Is there anything I could to improve the XML-RPC implementation? Are
> there any services that support XML-RPC that might be useful to have
> in wordpress either as a plugin or in core?
> Perhaps a plugin for http://www.xmlrpc.com/weblogsCom ?

weblogUpdates.ping is just an XML-RPC ping.  Looks like
http://pingomatic.com/ already pings weblogs.com, so there's nothing
really to add there.

There is plenty to do to improve the WordPress XML-RPC API though.  If
you are interested in this the wp-xmlrpc email list is a good place to
solicit feedback from blog client authors.


-- 
Joseph Scott
joseph at josephscott.org
http://josephscott.org/

From wordpress at zed1.com  Tue Mar 30 21:19:07 2010
From: wordpress at zed1.com (Mike Little)
Date: Tue, 30 Mar 2010 22:19:07 +0100
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <EA8E25C0-4C3F-49FF-9FBD-9D79BBFFBDE0@newclarity.net>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net> 
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com> 
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<7235ce781003300211v6c61d70n43c3cc271487d5f0@mail.gmail.com> 
	<BD962605-5BB0-4FE5-87DB-8609BEC6E3A1@newclarity.net>
	<7235ce781003300419x1599c6c6q7d2b519afaef88e3@mail.gmail.com> 
	<EA8E25C0-4C3F-49FF-9FBD-9D79BBFFBDE0@newclarity.net>
Message-ID: <7235ce781003301419t17964509hdf00b8bf71cfc87b@mail.gmail.com>

On 30 March 2010 22:06, Mike Schinkel <mikeschinkel at newclarity.net> wrote:

> On Mar 30, 2010, at 7:19 AM, Mike Little wrote:
> > On 30 March 2010 11:32, Mike Schinkel <mikeschinkel at newclarity.net>
> wrote:
> >> The follow up is: Why then don't we just store "a/b/c/d/" to WP_SITEPATH
> >> and you get the domain from $_SERVER['HTTP_HOST'] and the port from
> >> $_SERVER['SERVER_PORT']?  (we can hardcode the "http(s)", that's okay.
> :-)
> >
> > Because a/b may be the site url (and c/d a page name), or it may be
> a/b/c;
> > there's no way of knowing until it's manually set up.
>
> If it's "a/b", set it as "a/b."  My question *assumed* it was "a/b/c/d"
> based on your comment and not "a/b."
> OTOH, my question really asked why must it be set to "
> http://example.com/a/b" or "http://example.com/a/b/c/d" instead of just
> "a/b" or "a/b/c/d."  The distinction between "a/b" and "a/b/c/d" is not
> relevant to the question.
>
> > There are (perhaps 'were' now ) places in both WP and WPMU that assumed
> no
> > port number, and, in WPMU, that assume only http.
>
> Then don't set the port number and assume http, that's easy.  Neither of
> those affect the question which is "why force the domain portion of
> WP_SITEURL to be set?"
>
>
So what you really need is not site url but a separate setting for domain of
a site, which could be auto adjusted when moved to a different domain. Which
is a different thing from the current 'siteurl' option.

WPMU does something a little like that, where the domain and path part are
separate (in order to support multiple domains and subdirectories. Perhaps
some of that has gone into WP 3.0?



> >
> > I've already written some code like this for a pre-packaged and populated
> WP
> > install, and the *first time* it got used it was installed on
> > http://ip.add.re.ss:5017/wrong-path/ -- my code didn't work at all!
>
>  Sorry, but I'm very confused by the anecdote and would like to understand
> it better.
>
>

My anecdote was merely to illustrate that the code to automatically detect
and adjust settings for moving an existing site to a new domain needs to be
quite sophisticated as, in theory, it may need to cope with someone moving
to an installation using an IP address and a non standard port number.


Mike
-- 
Mike Little
http://zed1.com/

From mikeschinkel at newclarity.net  Tue Mar 30 21:40:51 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 17:40:51 -0400
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <161617691003300950q75e4c14al8a37585415d3a467@mail.gmail.com>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<20100330102716.GF24698@honey.burgiss.net>
	<0AF4A175-7599-4885-879B-AC2347B9FB61@newclarity.net>
	<349fe48b1003300944l43ca07eei419d1e7f64d3ba5a@mail.gmail.com>
	<161617691003300950q75e4c14al8a37585415d3a467@mail.gmail.com>
Message-ID: <D52D1A87-71A6-4BC0-805E-07331FC8E1A9@newclarity.net>

On Mar 30, 2010, at 12:50 PM, Otto wrote:
> The RELOCATE define does much the same thing, no?
> 
> http://codex.wordpress.org/Changing_The_Site_URL#Relocate_method
> 

Thanks.  

I found the RELOCATE after emailing the question and explored it.  Seems it only works for the wp-login.php page.  It also seems (in a good way) like it started to address this issue in a first step kind of way. The next step might be to add a 'relocate' hook to run when that flag is detected, assuming that is the right place for it (as I've not tried it yet I can't be sure.)

Another thing is RELOCATE being in wp-login.php doesn't address taking the site offline until everything has been fixed-up.

On Mar 30, 2010, at 12:44 PM, scribu wrote:
> On Tue, Mar 30, 2010 at 1:37 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
>> I want to create a plugin that will automate this process as much as
>> possible so I can not longer have to worry about setting things "just right"
>> and no longer have to worry that I forgot to make that one critical change.
>> Better yet, I'd like to enable plugin and theme developers to make handle
>> this process for their plugins and themes for me.
>> 
> 
> Looks like there's a plugin for this already:
> 
> http://wordpress.org/extend/plugins/ezmigrate/

VERY interesting.  Thanks for this link.  I will definitely check out it's code because it's not quite what I'm trying to do though it's close.

A couple concerns about it:
=============
When a post is saved into the database it replaces all root urls in href and src attributes with a placeholder. (This is also done for all posts when the plugin is activated).
When a post is retrieved from the database it replaces all placeholders with the current calculated root url. (This is also done for all posts when the plugin is deactivated).
What this plugin doesn?t do (but might do in the future):
Replace urls outside of the four mentioned options or outside of href and src attributes in posts. But so far it has been sufficient for my projects.
=============

So I tend to agree with what Otto has said[1] about having HTML in the database and not placeholders.

But the latter part is the most troubling. What's needed IMO is a hookable system that allows any plugin developer to add support for domain migration, and for any PHP developer to add the needed support for any plugins that don't have the support. THAT is the primary thing I'm trying to accomplish because the core stuff is relatively easy, and ideally the hook(s) would get rolled into core just like RELOCATE is in core.

Now maybe the authors of the plugin will add that kind of support in which case my primary concern would be moot.  We'll see.
-Mike

[1] http://core.trac.wordpress.org/ticket/11394#comment:29

From mikeschinkel at newclarity.net  Tue Mar 30 21:46:24 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 17:46:24 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <4cc4de141003301027w7f24058bw2d4140f19630b8d9@mail.gmail.com>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>
	<006901cacee2$5c492a30$14db7e90$@net>
	<4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com>
	<c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com>
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com>
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
	<4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com>
	<0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>
	<4cc4de141003301027w7f24058bw2d4140f19630b8d9@mail.gmail.com>
Message-ID: <88F5F1B6-E31C-4800-9C12-D28D63D4B0CD@newclarity.net>

On Mar 30, 2010, at 1:27 PM, Andrew Nacin wrote:
>    1. The user with both the Administrator and Editor roles would just have
> the Administrator role. If the Editor role had capabilities that the
> Administrator role did not have, then the user would be assigned instead to
> a third role with the merged capabilities of Administrator and Editor.

With a large number of roles these merged capabilities could get very large; the number will grow exponentially for each new role added.
In your example are you proposing there would be a new *named* "AdminEditor" role, or it would just be handled behind the scenes and if someone modified Editor it will also modify the merged role too?  

If the latter, that's cool.  If the former, I think that could overwhelm end users.

-Mike

From mikeschinkel at newclarity.net  Tue Mar 30 21:48:23 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 17:48:23 -0400
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <7235ce781003301419t17964509hdf00b8bf71cfc87b@mail.gmail.com>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<7235ce781003300211v6c61d70n43c3cc271487d5f0@mail.gmail.com>
	<BD962605-5BB0-4FE5-87DB-8609BEC6E3A1@newclarity.net>
	<7235ce781003300419x1599c6c6q7d2b519afaef88e3@mail.gmail.com>
	<EA8E25C0-4C3F-49FF-9FBD-9D79BBFFBDE0@newclarity.net>
	<7235ce781003301419t17964509hdf00b8bf71cfc87b@mail.gmail.com>
Message-ID: <5C006D0F-DB18-4923-9F36-D62D02C85AF5@newclarity.net>

On Mar 30, 2010, at 5:19 PM, Mike Little wrote:
> So what you really need is not site url but a separate setting for domain of
> a site, which could be auto adjusted when moved to a different domain. Which
> is a different thing from the current 'siteurl' option.

Exactly!

> WPMU does something a little like that, where the domain and path part are
> separate (in order to support multiple domains and subdirectories. Perhaps
> some of that has gone into WP 3.0?

Dunno.

> My anecdote was merely to illustrate that the code to automatically detect
> and adjust settings for moving an existing site to a new domain needs to be
> quite sophisticated as, in theory, it may need to cope with someone moving
> to an installation using an IP address and a non standard port number.

Yes, agreed. That's actually why I'm discussing it, to try to figure out all the requirements, and more importantly, the pitfalls.

-Mike

From wp at andrewnacin.com  Tue Mar 30 22:13:29 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 30 Mar 2010 18:13:29 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <88F5F1B6-E31C-4800-9C12-D28D63D4B0CD@newclarity.net>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com> 
	<4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com> 
	<c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com> 
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com> 
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
	<4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com> 
	<0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>
	<4cc4de141003301027w7f24058bw2d4140f19630b8d9@mail.gmail.com> 
	<88F5F1B6-E31C-4800-9C12-D28D63D4B0CD@newclarity.net>
Message-ID: <4cc4de141003301513i557ea7cap66f151510c3b5e57@mail.gmail.com>

>
> With a large number of roles these merged capabilities could get very
> large; the number will grow exponentially for each new role added.


> In your example are you proposing there would be a new *named*
> "AdminEditor" role, or it would just be handled behind the scenes and if
> someone modified Editor it will also modify the merged role too?


Not sure I follow. I was only referring to the upgrade path, that way a
simplification of the roles/capabilities system in a future WP version would
be 100% lossless. If a site did not have any user with multiple roles, and
no users had no user-specific capabilities, then nothing would need to be
changed. Otherwise, for each user with multiple roles or user-specific caps,
we would run them through a script that:

- Computes exactly which capabilities they possess, based on their role(s)
and user-specific capabilities.
- Checks for any other roles has exactly these capabilities.
- If a matching role exists: Assign them to that role, and remove their old
roles and old user-specific capabilities.
- If a matching role does not exist: Create a new role for them with those
exact capabilities. (If User B has the same capabilities as User A, then
User B would get the same role that was created for User A.)

The end result would be that every user has no user-specific capabilities,
and exactly one role, with that role consisting of exactly the capabilities
they had before.

Best I can tell, this upgrade path would be the only code that would need to
be written from scratch. For the most part, the rest would be chunks of code
removed from wp-includes/capability.php.

From mikeschinkel at newclarity.net  Tue Mar 30 22:30:32 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 18:30:32 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <4cc4de141003301513i557ea7cap66f151510c3b5e57@mail.gmail.com>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>
	<4cc4de141003282107h2a031bb1l59e773e83a948a61@mail.gmail.com>
	<c6a0bd561003290548u771d7858x23098e518176f63e@mail.gmail.com>
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com>
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
	<4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com>
	<0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>
	<4cc4de141003301027w7f24058bw2d4140f19630b8d9@mail.gmail.com>
	<88F5F1B6-E31C-4800-9C12-D28D63D4B0CD@newclarity.net>
	<4cc4de141003301513i557ea7cap66f151510c3b5e57@mail.gmail.com>
Message-ID: <D0F935C3-93C7-4010-8B42-8663F3612FEB@newclarity.net>

On Mar 30, 2010, at 6:13 PM, Andrew Nacin wrote:
>> With a large number of roles these merged capabilities could get very
>> large; the number will grow exponentially for each new role added.
>> In your example are you proposing there would be a new *named*
>> "AdminEditor" role, or it would just be handled behind the scenes and if
>> someone modified Editor it will also modify the merged role too?
> 
> Not sure I follow. I was only referring to the upgrade path, that way a
> simplification of the roles/capabilities system in a future WP version would
> be 100% lossless.

I was assuming you were referring to ongoing, not just upgrade.

> If a site did not have any user with multiple roles, and
> no users had no user-specific capabilities, then nothing would need to be
> changed. Otherwise, for each user with multiple roles or user-specific caps,
> we would run them through a script that:
> 
> - Computes exactly which capabilities they possess, based on their role(s)
> and user-specific capabilities.
> - Checks for any other roles has exactly these capabilities.
> - If a matching role exists: Assign them to that role, and remove their old
> roles and old user-specific capabilities.
> - If a matching role does not exist: Create a new role for them with those
> exact capabilities. (If User B has the same capabilities as User A, then
> User B would get the same role that was created for User A.)

That will create a maintenance nightmare for the admin if the have even a small number of roles to handle.

> The end result would be that every user has no user-specific capabilities,
> and exactly one role, with that role consisting of exactly the capabilities
> they had before.

For a complex system you'll end up with nearly as many named roles as users.  That really doesn't make sense to me.  I've worked on a Drupal system where the only way I could manage the complexity of the roles was by being able to create different roles and assigning multiple roles to the user.

I do see why you want to go this route but I'd like to propose you consider and 3rd solution:

Implement it the way you are thinking for performance but make it appear in the admin that there are distinct roles.  Allow some roles to be *defined* roles and others to be *derived* roles.  

For example, let's assume we have ContentEditor and FilesModerator roles; both would be *defined* by the admin.  In the UI the admin could assign both roles to a user but behind the scenes a *derived* role of "ContentEditor-FilesModerator" would be created using the combination of the two roles (though this role would never be shown to the admin or to users.)  When the admin later updates the capabilities of ContentEditor the ContentEditor-FilesModerator role is also updated behind the scenes.

Simple for the end user and accomplishes the same performance goals you mention with the only downside it taking slightly longer to save a role when the role's capabilities are updated.

-Mike




From mikeschinkel at newclarity.net  Tue Mar 30 22:31:50 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 18:31:50 -0400
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <349fe48b1003300944l43ca07eei419d1e7f64d3ba5a@mail.gmail.com>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net>
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com>
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<20100330102716.GF24698@honey.burgiss.net>
	<0AF4A175-7599-4885-879B-AC2347B9FB61@newclarity.net>
	<349fe48b1003300944l43ca07eei419d1e7f64d3ba5a@mail.gmail.com>
Message-ID: <9248D458-B717-4EC9-B950-4A4AD21A8E27@newclarity.net>

On Mar 30, 2010, at 12:44 PM, scribu wrote:
> On Tue, Mar 30, 2010 at 1:37 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
>> I want to create a plugin that will automate this process as much as
>> possible so I can not longer have to worry about setting things "just right"
>> and no longer have to worry that I forgot to make that one critical change.
>> Better yet, I'd like to enable plugin and theme developers to make handle
>> this process for their plugins and themes for me.
>> 
> 
> Looks like there's a plugin for this already:
> 
> http://wordpress.org/extend/plugins/ezmigrate/

VERY interesting.  Thanks for this link.  I will definitely check out it's code because it's not quite what I'm trying to do though it's close.

A couple concerns about it:
=============
When a post is saved into the database it replaces all root urls in href and src attributes with a placeholder. (This is also done for all posts when the plugin is activated).
When a post is retrieved from the database it replaces all placeholders with the current calculated root url. (This is also done for all posts when the plugin is deactivated).
What this plugin doesn?t do (but might do in the future):
Replace urls outside of the four mentioned options or outside of href and src attributes in posts. But so far it has been sufficient for my projects.
=============

So I tend to agree with what Otto has said[1] about having HTML in the database and not placeholders.

But the latter part is the most troubling. What's needed IMO is a hookable system that allows any plugin developer to add support for this, and for any PHP developer to add the needed support for any plugins that don't have the support. THAT is the primary thing I'm trying to accomplish, and ideally the hook(s) would get rolled into core just like RELOCATE is in core.

Now maybe the authors of the plugin will add that kind of support in which case my primary concern would be moot.  We'll see.
-Mike

[1] http://core.trac.wordpress.org/ticket/11394#comment:29

From puffnfresh at gmail.com  Tue Mar 30 23:06:27 2010
From: puffnfresh at gmail.com (Brian McKenna)
Date: Wed, 31 Mar 2010 09:06:27 +1000
Subject: [wp-hackers] GSoC 2010: Automatic WordPress Migration Proposal
Message-ID: <s2jdef69ef61003301606rff899375zf43c3d9148a14913@mail.gmail.com>

Hi everyone,

I just want to let everyone know that I'm looking for feedback on my
proposal, Automatic WordPress Migration. You can read it online, here:

http://brianmckenna.org/blog/2010/03/automatic-wordpress-migration/

I'm really interested to hear what people think about the scope and
complexity. How suitable is this project for Summer of Code this year?

Please feel free to send me suggestions!

Thanks,
Brian McKenna

From wp at andrewnacin.com  Tue Mar 30 23:20:15 2010
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 30 Mar 2010 19:20:15 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <D0F935C3-93C7-4010-8B42-8663F3612FEB@newclarity.net>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com> 
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com> 
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
	<4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com> 
	<0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>
	<4cc4de141003301027w7f24058bw2d4140f19630b8d9@mail.gmail.com> 
	<88F5F1B6-E31C-4800-9C12-D28D63D4B0CD@newclarity.net>
	<4cc4de141003301513i557ea7cap66f151510c3b5e57@mail.gmail.com> 
	<D0F935C3-93C7-4010-8B42-8663F3612FEB@newclarity.net>
Message-ID: <4cc4de141003301620i5523e210n1377c7d40a5e6da9@mail.gmail.com>

Keep in mind that nothing that has been placed on the chopping block --
multiple roles and user-specific capabilities -- are supported in the core
UI, anywhere. (In fact, the users panels might look at you funny if a user
has multiple roles.)

Thus, this would only affect sites that use capability/role management
plugins. I would imagine that most plugins handle role management, not user
management, or at the very least, most administrators utilize role
management, as administering user-specific capabilities is much more
difficult and time-consuming. If you have enough user-specific caps to make
this nightmarish, then you probably don't have that many users, for that
reason.

So, I would propose two things:

1. That the upgrade path is released early in the development cycle as a
plugin, enabling administrators to handle this before the upgrade. Such a
plugin could have mapping capabilities such as how authors are handled in a
WP import, for example, and identify users with unique sets of caps.

2. That, for diligence purposes, we explore an option that eliminates
user-specific capabilities but keeps multiple role support. I can think of
an effective schema that keeps support for multiple roles that simply merge
the allowed capabilities, and still allow easy querying for, say, all users
with capability X. This could prevent us from oversimplification, which is
also something we wouldn't want.

The idea outlined in #10201 is controversial, which explains its
postponement for multiple releases, but appears to be gaining traction for
3.1. I had hinted earlier that I would expect a compromise of some sort. If
multiple roles can be implemented sanely in the new schema, that may very
well be a good thing to keep, for the CMS benefits.

From mikeschinkel at newclarity.net  Tue Mar 30 23:28:07 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 30 Mar 2010 19:28:07 -0400
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <4cc4de141003301620i5523e210n1377c7d40a5e6da9@mail.gmail.com>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com>
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
	<4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com>
	<0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>
	<4cc4de141003301027w7f24058bw2d4140f19630b8d9@mail.gmail.com>
	<88F5F1B6-E31C-4800-9C12-D28D63D4B0CD@newclarity.net>
	<4cc4de141003301513i557ea7cap66f151510c3b5e57@mail.gmail.com>
	<D0F935C3-93C7-4010-8B42-8663F3612FEB@newclarity.net>
	<4cc4de141003301620i5523e210n1377c7d40a5e6da9@mail.gmail.com>
Message-ID: <4645C03D-DB8D-4A86-8CEA-53352AC8DA86@newclarity.net>

On Mar 30, 2010, at 7:20 PM, Andrew Nacin wrote:
> Thus, this would only affect sites that use capability/role management
> plugins. I would imagine that most plugins handle role management, not user
> management, or at the very least, most administrators utilize role
> management, as administering user-specific capabilities is much more
> difficult and time-consuming. If you have enough user-specific caps to make
> this nightmarish, then you probably don't have that many users, for that
> reason.

I guess I'm more concerned about newer sites that will have more CMS related functionality and not so much about the majority of the blog-oriented sites of today because, as you say, they aren't that many it will affect currently.

> So, I would propose two things:
> 2. That, for diligence purposes, we explore an option that eliminates
> user-specific capabilities but keeps multiple role support. I can think of
> an effective schema that keeps support for multiple roles that simply merge
> the allowed capabilities, and still allow easy querying for, say, all users
> with capability X. This could prevent us from oversimplification, which is
> also something we wouldn't want.
> 
> The idea outlined in #10201 is controversial, which explains its
> postponement for multiple releases, but appears to be gaining traction for
> 3.1. I had hinted earlier that I would expect a compromise of some sort. If
> multiple roles can be implemented sanely in the new schema, that may very
> well be a good thing to keep, for the CMS benefits.

#2 and the summary sounds good to me.  Thanks for detailing it out.

-Mike

From websweetweb at gmail.com  Wed Mar 31 03:53:54 2010
From: websweetweb at gmail.com (raj)
Date: Wed, 31 Mar 2010 09:23:54 +0530
Subject: [wp-hackers] Check if the administrator is logged in
Message-ID: <4BB2C752.8050102@gmail.com>

Hi,

I am developing a plugin where I need to do this. How do you check if 
the administrator is logged in?

Raj

From dan at dancoulter.com  Wed Mar 31 04:19:59 2010
From: dan at dancoulter.com (Dan Coulter)
Date: Tue, 30 Mar 2010 23:19:59 -0500
Subject: [wp-hackers] Check if the administrator is logged in
In-Reply-To: <4BB2C752.8050102@gmail.com>
References: <4BB2C752.8050102@gmail.com>
Message-ID: <m2k5dc2163e1003302119s455e8558g43d0b1be7c4aa8f5@mail.gmail.com>

http://markjaquith.wordpress.com/2006/03/27/how-to-check-if-a-wordpress-user-is-an-administrator/

On Tue, Mar 30, 2010 at 10:53 PM, raj <websweetweb at gmail.com> wrote:

> Hi,
>
> I am developing a plugin where I need to do this. How do you check if the
> administrator is logged in?
>
> Raj
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Dan Coulter
http://dancoulter.com/
http://phpflickr.com/
http://blogsforbands.com/

Hey, I got nothing to do today but smile
-Simon and Garfunkel

From wordpress at dd32.id.au  Wed Mar 31 06:31:43 2010
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Wed, 31 Mar 2010 18:31:43 +1200
Subject: [wp-hackers] Check if the administrator is logged in
In-Reply-To: <m2k5dc2163e1003302119s455e8558g43d0b1be7c4aa8f5@mail.gmail.com>
References: <4BB2C752.8050102@gmail.com>
	<m2k5dc2163e1003302119s455e8558g43d0b1be7c4aa8f5@mail.gmail.com>
Message-ID: <op.vae8i5fsspxmuu@ho.st>

As an extension to that, You should only check for 'manage_options' when  
you're literally, after someone who can manage options.
If you're interested in knowing if the user can publish posts, use  
'publish_posts', if they can create users, 'create_users', etc.
Its always best to use the right capability for the right purpose.

For a (near full, but incomplete) listing of all the capabilities, see  
this page: http://codex.wordpress.org/Roles_and_Capabilities#Capabilities

Please also note, That page will list "level_*" capabilities, please do  
NOT use these. They stem from before WordPress 2.0, before the Roles and  
Capabilities functionality, they're not as flexible as capabilities and  
can lead to an incorrect assumption of what the user can actually do.

Cheers

Dion Hulse / dd32
Contact:
  e: contact at dd32.id.au
  Web: http://dd32.id.au/

On Wed, 31 Mar 2010 16:19:59 +1200, Dan Coulter <dan at dancoulter.com> wrote:

> http://markjaquith.wordpress.com/2006/03/27/how-to-check-if-a-wordpress-user-is-an-administrator/
>
> On Tue, Mar 30, 2010 at 10:53 PM, raj <websweetweb at gmail.com> wrote:
>
>> Hi,
>>
>> I am developing a plugin where I need to do this. How do you check if  
>> the
>> administrator is logged in?
>>
>> Raj

From otto at ottodestruct.com  Wed Mar 31 13:52:40 2010
From: otto at ottodestruct.com (Otto)
Date: Wed, 31 Mar 2010 08:52:40 -0500
Subject: [wp-hackers] Why WP_SITEURL and not $_SERVER['HTTP_HOST']?
In-Reply-To: <D52D1A87-71A6-4BC0-805E-07331FC8E1A9@newclarity.net>
References: <D2526ECB-8C8F-40DF-A5F6-9054D2B0698D@newclarity.net> 
	<902424491003292347u740c2825i9900e49b2332399e@mail.gmail.com> 
	<4394B69C-403E-4FB0-ACAC-9C7B0A9049F7@newclarity.net>
	<20100330102716.GF24698@honey.burgiss.net> 
	<0AF4A175-7599-4885-879B-AC2347B9FB61@newclarity.net>
	<349fe48b1003300944l43ca07eei419d1e7f64d3ba5a@mail.gmail.com> 
	<161617691003300950q75e4c14al8a37585415d3a467@mail.gmail.com> 
	<D52D1A87-71A6-4BC0-805E-07331FC8E1A9@newclarity.net>
Message-ID: <k2g161617691003310652he9b47489i5b716da87e03b431@mail.gmail.com>

On Tue, Mar 30, 2010 at 4:40 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> I found the RELOCATE after emailing the question and explored it. ?Seems it only works for the wp-login.php page. ?It also seems (in a good way) like it started to address this issue in a first step kind of way.

Well, it mainly only addresses the one point from your first post in
this thread. Basically, setting RELOCATE causes it to change the
siteurl in the database based on the HTTP_HOST variable. The idea
being that you move the files to the new domain, set relocate, then
load the page for the first time, and it recognizes and fixes up the
url by itself.

This doesn't address changing anything else in the database,
obviously. URLs in posts are the same, etc. It's just to get the
wp-admin section working. It only works for the wp-login because after
it's changed, you would then remove the relocate flag.

> The next step might be to add a 'relocate' hook to run when that flag is detected, assuming that is the right place for it (as I've not tried it yet I can't be sure.)

Hook to update_option_siteurl. Then you can take appropriate action
whenever the siteurl is changed.

> Another thing is RELOCATE being in wp-login.php doesn't address taking the site offline until everything has been fixed-up.

Creating a .maintenance file will do that.

-Otto

From n.prasath.002 at gmail.com  Wed Mar 31 16:09:58 2010
From: n.prasath.002 at gmail.com (prasath nadarajah)
Date: Wed, 31 Mar 2010 09:09:58 -0700 (PDT)
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <4645C03D-DB8D-4A86-8CEA-53352AC8DA86@newclarity.net>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com> 
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com> 
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
	<4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com> 
	<0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>
	<4cc4de141003301027w7f24058bw2d4140f19630b8d9@mail.gmail.com> 
	<88F5F1B6-E31C-4800-9C12-D28D63D4B0CD@newclarity.net>
	<4cc4de141003301513i557ea7cap66f151510c3b5e57@mail.gmail.com> 
	<D0F935C3-93C7-4010-8B42-8663F3612FEB@newclarity.net>
	<4cc4de141003301620i5523e210n1377c7d40a5e6da9@mail.gmail.com> 
	<4645C03D-DB8D-4A86-8CEA-53352AC8DA86@newclarity.net>
Message-ID: <ba0fac38-e9db-4d03-bfd9-202e3bf3ce42@s21g2000pri.googlegroups.com>

hi,
I just played with some plugins which deal with capabilities.
There is an option to add custom capabilities (members plugin) where
you can define your own capability.
Where it is actually used?
what is the use of this option?
I think this capability would be an additional entry for the
wp_capability array in the user_meta table.
When we are coming up with a plan for an looseless upgrade how does
this affect when assigning roles for users.
Between where these capabilities being validated within the wordpress?

On Mar 31, 4:28?am, Mike Schinkel <mikeschin... at newclarity.net> wrote:
> On Mar 30, 2010, at 7:20 PM, Andrew Nacin wrote:
>
> > Thus, this would only affect sites that use capability/role management
> > plugins. I would imagine that most plugins handle role management, not user
> > management, or at the very least, most administrators utilize role
> > management, as administering user-specific capabilities is much more
> > difficult and time-consuming. If you have enough user-specific caps to make
> > this nightmarish, then you probably don't have that many users, for that
> > reason.
>
> I guess I'm more concerned about newer sites that will have more CMS related functionality and not so much about the majority of the blog-oriented sites of today because, as you say, they aren't that many it will affect currently.
>
> > So, I would propose two things:
> > 2. That, for diligence purposes, we explore an option that eliminates
> > user-specific capabilities but keeps multiple role support. I can think of
> > an effective schema that keeps support for multiple roles that simply merge
> > the allowed capabilities, and still allow easy querying for, say, all users
> > with capability X. This could prevent us from oversimplification, which is
> > also something we wouldn't want.
>
> > The idea outlined in #10201 is controversial, which explains its
> > postponement for multiple releases, but appears to be gaining traction for
> > 3.1. I had hinted earlier that I would expect a compromise of some sort. If
> > multiple roles can be implemented sanely in the new schema, that may very
> > well be a good thing to keep, for the CMS benefits.
>
> #2 and the summary sounds good to me. ?Thanks for detailing it out.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hack... at lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers

From jane at automattic.com  Wed Mar 31 16:30:40 2010
From: jane at automattic.com (Jane Wells)
Date: Wed, 31 Mar 2010 12:30:40 -0400
Subject: [wp-hackers] GSoC updated application template and Ideas list, chats
Message-ID: <A567C9B1-68B3-4C67-A884-77D02BFAE201@automattic.com>

We've gotten a handful of applications already for GSoC, but they are  
largely terrible in format, with students pasting the template in and  
just posting a link to wp-hackers archives or their own blogs. To  
prevent this from happening anymore (since it means the students just  
get an email from me telling them to fix their apps), I've updated the  
application template to be very clear on what to include and what not  
to include. Any student planning to apply to GSoC, please get the new  
template to submit your application:

http://codex.wordpress.org/GSoC_2010_Application_Template

Also, I've updated the Ideas list after a conversation with Matt  
(Mullenweg) about priorities, so it's worth looking to see the couple  
of new things. Of note, I've removed the widgets repository idea,  
since it has clearly caused some kerfuffle, and that's not something a  
student project should have to deal with. Likewise, Ryan removed the  
user roles project idea, which also has too many politics around it  
for it to be a good fit for a student. Newly added project ideas  
include things like progress bars for plugin installation, ajax paging  
in the admin, column sorting, mega Trac ticket attacking, etc. The  
updated list is at:

http://codex.wordpress.org/GSoC2010.

Note: a lot of students are asking about ideas from this list. That's  
awesome. However, we expect more than a hundred applications, and  
probably only around 10 slots. Therefore, if you propose an idea from  
the list, and 20 other students propose the same idea from the list,  
your chances go down. If you love one of the list ideas, great: apply  
for it. You may also want to apply for an idea of your own creation,  
just to up your chances that it won't be a duplicate idea. If you do  
this, make sure each project idea is submitted in a separate  
application; don't put them both in one. Also, indicate in each  
application that you have submitted a second idea, and identify which  
one would be your first choice.

Don't forget, we have scheduled IRC chats with potential mentors to  
let you bounce ideas around and get some live feedback that will help  
improve your applications. These chats will be held in #wordpress-gsoc  
on irc.freenode.net at the following dates/times, the first of which  
is a few hours from now:
Wednesday, March March 31 at 20:30 UTC (4:30pm eastern)
Saturday, April 3 at 21:30 UTC (5:30pm eastern)
Wednesday, April 7 at 20:30 UTC (4:30pm eastern)

Thanks, and good luck!
Jane

From 24-7 at gmx.net  Wed Mar 31 16:53:38 2010
From: 24-7 at gmx.net (kaiiser)
Date: Wed, 31 Mar 2010 09:53:38 -0700 (PDT)
Subject: [wp-hackers] Check if the administrator is logged in
In-Reply-To: <4BB2C752.8050102@gmail.com>
References: <4BB2C752.8050102@gmail.com>
Message-ID: <3d8eddef-6d72-49c9-b405-ee89adcecf89@k17g2000yqb.googlegroups.com>

> I am developing a plugin where I need to do this. How do you check if
> the administrator is logged in?

If you check the capabilities of the current user (global
$current_user;) with current_user->allcaps; you will get a list of all
capabilities as an array.

To get a viewable result try this:
global $current_user;
$cur_user_allcaps = $current_user->allcaps;
  if(!empty($cur_user_allcaps)) {
    ksort($cur_user_allcaps);
    foreach($cur_user_allcaps as $key => $val) {
      if($val == 1) {
        echo $key . " = Yes; ";
      } elseif($cur_user_allcaps_value == 0) {
        echo $key . " = No; ";
      }
    }
  } else { echo "<i>EMPTY (There are no assigned capabilities)</i>"; }

AND: More easy: if(current_user_can('administrator')) { echo "is
admin"; } else { echo "is no admin"; }

From 24-7 at gmx.net  Wed Mar 31 17:02:02 2010
From: 24-7 at gmx.net (kaiiser)
Date: Wed, 31 Mar 2010 10:02:02 -0700 (PDT)
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <ba0fac38-e9db-4d03-bfd9-202e3bf3ce42@s21g2000pri.googlegroups.com>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com> 
	<000f01cacf77$75478640$5fd692c0$@net>
	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com> 
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>
	<4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com> 
	<0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>
	<4cc4de141003301027w7f24058bw2d4140f19630b8d9@mail.gmail.com> 
	<88F5F1B6-E31C-4800-9C12-D28D63D4B0CD@newclarity.net>
	<4cc4de141003301513i557ea7cap66f151510c3b5e57@mail.gmail.com> 
	<D0F935C3-93C7-4010-8B42-8663F3612FEB@newclarity.net>
	<4cc4de141003301620i5523e210n1377c7d40a5e6da9@mail.gmail.com> 
	<4645C03D-DB8D-4A86-8CEA-53352AC8DA86@newclarity.net>
	<ba0fac38-e9db-4d03-bfd9-202e3bf3ce42@s21g2000pri.googlegroups.com>
Message-ID: <29f55357-912d-42cf-b3cf-2f97d037209d@33g2000yqj.googlegroups.com>

> I do see why you want to go this route but I'd like to propose you consider and 3rd solution:

> Implement it the way you are thinking for performance but make it appear in the admin that there are distinct roles.  Allow some roles to be *defined* roles and others to be *derived* roles.

> For example, let's assume we have ContentEditor and FilesModerator roles; both would be *defined* by the admin.  In the UI the admin could assign both roles to a user but behind the scenes a *derived* role of "ContentEditor-FilesModerator" would be created using the combination of the two roles (though this role would never be shown > to the admin or to users.)  When the admin later updates the capabilities of ContentEditor the ContentEditor-FilesModerator role is also updated behind the scenes.

> Simple for the end user and accomplishes the same performance goals you mention with the only downside it taking slightly longer to save a role when the role's capabilities are updated.

+1 (!!)

This is what i think, should really be considered: When someone
installs WP, he autom. get's an "admin"-account... with no
restrictions. So the only really "preconfigured" role we need is the
100%-"AAA"-admin(istrator). Looking at a lot of system that use WP as
a CMS and looking at all those discussions where "canonical plugins"
or "core plugins" (like comments) take place, i can see nothing that
holds us (the community) back from asking: Why do we have
preconfigured roles, when WP can take such an ammount of possible
usage-scenarios?

So: We don't need anything more than a capability-system with a "All
CAPs"-role of admin. Plus: If we take this route and we consider a
way, where plugins could hook their capabilities into, we would have a
pretty flat, small and (perhaps clever?) system that could fit any
purpose from 1 to 10.000k-user and -role systems.

Why do we make everything so complicated and over-preconfigured? Is it
because we love traditions (for ex. posts-table instead of content-
table"s")?

-K.

From eric at eamann.com  Wed Mar 31 17:19:30 2010
From: eric at eamann.com (Eric Mann)
Date: Wed, 31 Mar 2010 10:19:30 -0700
Subject: [wp-hackers] User roles - GSOC proposal
In-Reply-To: <29f55357-912d-42cf-b3cf-2f97d037209d@33g2000yqj.googlegroups.com>
References: <c6a0bd561003270602lfdd8408m7dcb9f36b9cbd6e5@mail.gmail.com>
	<000f01cacf77$75478640$5fd692c0$@net>	<4cc4de141003291320i47dafc07q777bbc6070e97195@mail.gmail.com>
	<410BE30F-3533-4C9A-AEA6-BFFFFC1C01BE@newclarity.net>	<4cc4de141003291619m734f4aa5uc1d9f8bc44bc642f@mail.gmail.com>
	<0E928E1D-0A1C-4653-AD98-986941648F15@newclarity.net>	<4cc4de141003301027w7f24058bw2d4140f19630b8d9@mail.gmail.com>
	<88F5F1B6-E31C-4800-9C12-D28D63D4B0CD@newclarity.net>	<4cc4de141003301513i557ea7cap66f151510c3b5e57@mail.gmail.com>
	<D0F935C3-93C7-4010-8B42-8663F3612FEB@newclarity.net>	<4cc4de141003301620i5523e210n1377c7d40a5e6da9@mail.gmail.com>
	<4645C03D-DB8D-4A86-8CEA-53352AC8DA86@newclarity.net>	<ba0fac38-e9db-4d03-bfd9-202e3bf3ce42@s21g2000pri.googlegroups.com>
	<29f55357-912d-42cf-b3cf-2f97d037209d@33g2000yqj.googlegroups.com>
Message-ID: <01f701cad0f6$53d4aee0$fb7e0ca0$@com>

The idea of having one preconfigured "role" as an all-access administrator
and then assigning capabilities on a per-user basis is, in my opinion, what
would work best in the majority of cases.  The sites I've worked on in the
past fit one of two types:

1 - Blogs which allow comments but not registration.  There is one author
(with unlimited access) and all other "users" are unauthenticated commentors
that are identified by their email address.  They don't even appear in the
user system.

2 - CMS-type sites that allow limited registration but no comments (think
front-end website and back-end pseudo-intranet).  There is one superadmin
and every individual has a different role with custom capabilities ... none
of the pre-defined "subscriber" "contributor" etc roles make sense in this
case and end up being deleted in favor of "intern" "project manager" etc.

The outside case is where people use user roles to identify affiliate sales.
My RegLevel plugin allows for custom user roles to be assigned from
different registration pages, and people use this to create "roles" like
"Sales from Frank" that are identical to "subscriber" merely as a way to
segregate new users and better track sales.

In reality, though, "roles" don't have much meaning when you are talking
about a platform that powers both blogs and CMS.  What we're talking about
is a way to easily apply capabilities on registration ... so perhaps 1
pre-configured "role" for the super administrator.  Then rather than asking
which "role" to assign to new registrations, allow the user to specific
which capabilities to assign to new registrations.  You'd still have the
same end effect.

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of kaiiser
Sent: Wednesday, March 31, 2010 10:02 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] User roles - GSOC proposal

> I do see why you want to go this route but I'd like to propose you
consider and 3rd solution:

> Implement it the way you are thinking for performance but make it appear
in the admin that there are distinct roles.  Allow some roles to be
*defined* roles and others to be *derived* roles.

> For example, let's assume we have ContentEditor and FilesModerator roles;
both would be *defined* by the admin.  In the UI the admin could assign both
roles to a user but behind the scenes a *derived* role of
"ContentEditor-FilesModerator" would be created using the combination of the
two roles (though this role would never be shown > to the admin or to
users.)  When the admin later updates the capabilities of ContentEditor the
ContentEditor-FilesModerator role is also updated behind the scenes.

> Simple for the end user and accomplishes the same performance goals you
mention with the only downside it taking slightly longer to save a role when
the role's capabilities are updated.

+1 (!!)

This is what i think, should really be considered: When someone
installs WP, he autom. get's an "admin"-account... with no
restrictions. So the only really "preconfigured" role we need is the
100%-"AAA"-admin(istrator). Looking at a lot of system that use WP as
a CMS and looking at all those discussions where "canonical plugins"
or "core plugins" (like comments) take place, i can see nothing that
holds us (the community) back from asking: Why do we have
preconfigured roles, when WP can take such an ammount of possible
usage-scenarios?

So: We don't need anything more than a capability-system with a "All
CAPs"-role of admin. Plus: If we take this route and we consider a
way, where plugins could hook their capabilities into, we would have a
pretty flat, small and (perhaps clever?) system that could fit any
purpose from 1 to 10.000k-user and -role systems.

Why do we make everything so complicated and over-preconfigured? Is it
because we love traditions (for ex. posts-table instead of content-
table"s")?

-K.
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From jer at simianuprising.com  Wed Mar 31 18:23:43 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 31 Mar 2010 14:23:43 -0400
Subject: [wp-hackers] GSOC - comment moderation proposal
In-Reply-To: <a0777e081003300947td7366c1m6fef905b56185d24@mail.gmail.com>
References: <a0777e081003300947td7366c1m6fef905b56185d24@mail.gmail.com>
Message-ID: <n2ie1202cb11003311123t873e2285v5c704cf6ad6f562a@mail.gmail.com>

On Tue, Mar 30, 2010 at 12:47 PM, Eitan Adler <eitanadlerlist at gmail.com> wrote:
> These are preliminary milestones and are likely to change as I work on
> the project.
> Documentation will be done while I am writing the code.
> 1) Create api for changing parent of comment
> 2) Adding option in the admin screen for changing comment parents
> 3) Add notification option to poster if he opted receive replies to his post
> 4) Add threaded comments to comments in moderation
> 5) Add method of re-parenting through the xml-rpc api
> 6) Add method to request all sub-comments

If you're looking to improve the comment editing process I have a
fairly major request that seems like it would fit in and give you some
productive work: Add user-awareness to comment editing screens.

Currently if you are logged in when you leave a comment WP saves your
user id in the comment record and treats your user account as the
author rather than depending on the other data in the comments record.
This has various effects at display time such as adding the 'byuser'
and 'author-$authorname' classes onto the comment. The problem is that
if you leave a comment while logged out WP does not record your user,
even if you enter the same email address as is used on the account
(which makes sense as otherwise strangers could enter your email
address and masquerade as you, fancy 'byuser' styles and all).

What's needed is a way to edit a comment after its posted to add a
user-relationship. This should be present in both the individual
comment editing screen and in the comment moderation list. I'm not
sure of the ideal UI for it but it should probably deactivate the
email/name/url fields if a user is set to make it clear that the
user's profile info will be used instead. If a comment is edited it
should also predict the 'non-logged-in-author' use-case by checking if
the email is in the users db and offering to convert the comment into
a user-comment.

 In the current setup the only way to control the user-author of a
comment is by editing the database which is insane. Adding
user-awareness to the comment edit/moderation screens would also have
the bonus effect of teaching users about the user-awareness of
comments while they are moderating. I think there is a general lack of
awareness of the user-awareness of comments due to the fact that
editing a comment makes it seem like only the email and stated user
name are recorded.

If it fits in with your work a related feature would be to show a
warning to non-logged-in commenters who use the email of a user on the
site. Something like "Woah dude, that email belongs a user on this
site! Maybe you should [log in] so your comment is recorded properly".

Not sure if there is a Trac ticket about this issue or not, but there
probably should be.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From jer at simianuprising.com  Wed Mar 31 18:35:58 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 31 Mar 2010 14:35:58 -0400
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <902424491003300854h5e60b306n9a79bc0dee7f1013@mail.gmail.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
	<4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com>
	<902424491003300854h5e60b306n9a79bc0dee7f1013@mail.gmail.com>
Message-ID: <k2le1202cb11003311135k9f2debe8j9a6e789f9d8478c4@mail.gmail.com>

It seems to me that this should be part of the custom CSS plugin
recently released by automattic (based on the paid feature in
wordpress.com) and that it should be in the realm of canonical
plugins.

In terms of UI I'd vote for something along the lines of CSSEdit for
mac mixed with the visual/html editor in WP. Allow the user to swich
back and forth between raw code view and menu based manipulation, with
a focus on individual selector declarations as a list seperate from
both views.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From jane at automattic.com  Wed Mar 31 18:37:47 2010
From: jane at automattic.com (Jane Wells)
Date: Wed, 31 Mar 2010 14:37:47 -0400
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <k2le1202cb11003311135k9f2debe8j9a6e789f9d8478c4@mail.gmail.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
	<4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com>
	<902424491003300854h5e60b306n9a79bc0dee7f1013@mail.gmail.com>
	<k2le1202cb11003311135k9f2debe8j9a6e789f9d8478c4@mail.gmail.com>
Message-ID: <B3D90745-8631-40FD-AF19-73ADFA902C9B@automattic.com>

Wasn't that just for MU (soon to be multisite)? Since Automattic will  
continue to update that plugin based on the wordpress.com feature, I  
don't think they should be combined.
j

On Mar 31, 2010, at 2:35 PM, Jeremy Clarke wrote:

> It seems to me that this should be part of the custom CSS plugin
> recently released by automattic (based on the paid feature in
> wordpress.com) and that it should be in the realm of canonical
> plugins.
>
> In terms of UI I'd vote for something along the lines of CSSEdit for
> mac mixed with the visual/html editor in WP. Allow the user to swich
> back and forth between raw code view and menu based manipulation, with
> a focus on individual selector declarations as a list seperate from
> both views.
>
> -- 
> Jeremy Clarke
> Code and Design | globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From bhalla.kunal at gmail.com  Wed Mar 31 18:43:44 2010
From: bhalla.kunal at gmail.com (Kunal Bhalla)
Date: Thu, 1 Apr 2010 00:13:44 +0530
Subject: [wp-hackers] GSoC Proposal: Events plugin for Buddypress
Message-ID: <p2oe50820d81003311143z221dea90hbf32158c773a49cd@mail.gmail.com>

Hi

I've been working on my proposal for an Events Plugin for Buddypress:
http://kunal-b.in/labs/index.php/gsoc-proposal/ .

Events are integral to social networks ? Facebook being a prime example (and
a great source of ideas about what events should behave like).
Handling Events/Registration was an idea suggested in GSoC/Wordpress 2009
and is something that has been requested for many times in the
Buddypress Forums.

You can see the rest of the proposal in the link.

Comments, Feedback, Suggestions?

Thanks.

Kunal
http://kunal-b.in

From jer at simianuprising.com  Wed Mar 31 18:54:08 2010
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 31 Mar 2010 14:54:08 -0400
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <B3D90745-8631-40FD-AF19-73ADFA902C9B@automattic.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
	<4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com>
	<902424491003300854h5e60b306n9a79bc0dee7f1013@mail.gmail.com>
	<k2le1202cb11003311135k9f2debe8j9a6e789f9d8478c4@mail.gmail.com>
	<B3D90745-8631-40FD-AF19-73ADFA902C9B@automattic.com>
Message-ID: <o2ue1202cb11003311154r33cc635dg4aeb45a776b4368d@mail.gmail.com>

On Wed, Mar 31, 2010 at 2:37 PM, Jane Wells <jane at automattic.com> wrote:
> Wasn't that just for MU (soon to be multisite)? Since Automattic will
> continue to update that plugin based on the wordpress.com feature, I don't
> think they should be combined.

I actually haven't used that particular plugin but have found that
"custom css" as a feature (I had already created a simple tool to
accomplish it internally before the plugin came out) can often be
useful for any WP site, even individual ones. A plugin like that
effectively removes the need to create a child theme if all you wanted
to do was edit the CSS. It's also an excellent place for temporary CSS
that you don't want to put in the long term stylesheet (which might be
on a CDN etc.)

I didn't think through the idea of putting this stuff in the wp.com
plugin deeply before suggesting it, and there might be other good
reasons not to merge these things together, but I don't think the
MU/MS/single-site distinction is a reason either way.

Also: If this is completed the CSS editing features should apply to
that plugin somehow, so either way compatibility is ideal.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From skeltoac at gmail.com  Wed Mar 31 19:15:58 2010
From: skeltoac at gmail.com (Andy Skelton)
Date: Wed, 31 Mar 2010 13:15:58 -0600
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <k2le1202cb11003311135k9f2debe8j9a6e789f9d8478c4@mail.gmail.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
	<4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com>
	<902424491003300854h5e60b306n9a79bc0dee7f1013@mail.gmail.com>
	<k2le1202cb11003311135k9f2debe8j9a6e789f9d8478c4@mail.gmail.com>
Message-ID: <m2re6ec604d1003311215l5135a0d9m400639519aeb42fb@mail.gmail.com>

On Wed, Mar 31, 2010 at 12:35 PM, Jeremy Clarke <jer at simianuprising.com> wrote:
> It seems to me that this should be part of the custom CSS plugin
> recently released by automattic (based on the paid feature in
> wordpress.com) and that it should be in the realm of canonical
> plugins.

The Automattic Custom CSS plugin is just one simple implementation; it
doesn't necessarily deserve to be canonical. It could stand to be
improved or a better plugin could be written from scratch.

My killer feature in a web-based CSS editor is sadly absent: edit CSS
in one window while any number of preview windows in any number of
browsers simultaneously receive style changes.

In general, I wouldn't mind seeing proposals to improve existing plugins.

Andy

From daryl.koopersmith at gmail.com  Wed Mar 31 22:05:33 2010
From: daryl.koopersmith at gmail.com (Daryl Koopersmith)
Date: Thu, 1 Apr 2010 00:05:33 +0200
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <m2re6ec604d1003311215l5135a0d9m400639519aeb42fb@mail.gmail.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com> 
	<4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com> 
	<902424491003300854h5e60b306n9a79bc0dee7f1013@mail.gmail.com> 
	<k2le1202cb11003311135k9f2debe8j9a6e789f9d8478c4@mail.gmail.com> 
	<m2re6ec604d1003311215l5135a0d9m400639519aeb42fb@mail.gmail.com>
Message-ID: <s2mbf58ca3c1003311505k11ce4417s8d6a8d6e0e6e1472@mail.gmail.com>

I'm currently abroad in Italy and just got internet for the first time since
this has been posted, so pardon the long post full of replies. ;)

Also, I'm not going to retype it all, but Beau's earlier post makes a bunch
of valid points, especially 1, 2, and 5.

***

Eric,

The UI is definitely a crucial part of this project, as is maintaining
cross-browser compatibility. Any CSS that the editor outputs will be
standards compatible, as it will be automatically generated. Since the
project will also have to parse the user's CSS, that will have to be valid
as well. Standards compatibility all around!

***

Andrew,

I'd seen your proposal and had the same thought. As Beau said, it'd be great
to just tie into the theme revisions API. I'll be in touch. :)

***

Mike,

While I'm not sure if storing items in the database will be the approach I
take (in fact, a theme revisions API would be the ideal option), it will be
possible to alter the process through multiple hooks within the plugin.

I plan on including MS support, and database storage is one potential way of
achieving that goal.

***

Beau,

Thanks. ;)

***

Jeremy,

I plan to include a more interactive experience than the current WP.com
plugin offers--namely the ability to directly interact with the theme and
make live changes. Think Firebug's "Inspect" feature.

That said, I do plan on looking at all available CSS editor plugins and
determining if any features are adaptable (for example, WP.com's
restrictions for MS users).

***

Andy,

I think that would be a FANTASTIC feature, though definitely oriented
towards advanced users. I'm planning on creating a JS core with a
centralized events system (based on the EventBus/MVP paradigm found in
Google Web Toolkit[1]). Implementing this would require tracking editor
sessions server-side and pushing certain events across sessions. It will
definitely fall into the category of "harder features". Whether or not it
would fit into the scope of GSoC remains to be seen, but either way the
infrastructure necessary to support multiple sessions will exist. That said,
I'd love to give it a shot!

***

Thanks for reading, everyone.
?Daryl


[1] To clarify, I don't plan on using GWT, but the concept of a centralized
events system (EventBus) is incredibly useful when attempting to synchronize
a UI. If you're curious, check out the slides/video here.
http://code.google.com/events/io/2009/sessions/GoogleWebToolkitBestPractices.html

On Wed, Mar 31, 2010 at 9:15 PM, Andy Skelton <skeltoac at gmail.com> wrote:

> On Wed, Mar 31, 2010 at 12:35 PM, Jeremy Clarke <jer at simianuprising.com>
> wrote:
> > It seems to me that this should be part of the custom CSS plugin
> > recently released by automattic (based on the paid feature in
> > wordpress.com) and that it should be in the realm of canonical
> > plugins.
>
> The Automattic Custom CSS plugin is just one simple implementation; it
> doesn't necessarily deserve to be canonical. It could stand to be
> improved or a better plugin could be written from scratch.
>
> My killer feature in a web-based CSS editor is sadly absent: edit CSS
> in one window while any number of preview windows in any number of
> browsers simultaneously receive style changes.
>
> In general, I wouldn't mind seeing proposals to improve existing plugins.
>
> Andy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Wed Mar 31 22:12:33 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 31 Mar 2010 18:12:33 -0400
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <s2mbf58ca3c1003311505k11ce4417s8d6a8d6e0e6e1472@mail.gmail.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
	<4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com>
	<902424491003300854h5e60b306n9a79bc0dee7f1013@mail.gmail.com>
	<k2le1202cb11003311135k9f2debe8j9a6e789f9d8478c4@mail.gmail.com>
	<m2re6ec604d1003311215l5135a0d9m400639519aeb42fb@mail.gmail.com>
	<s2mbf58ca3c1003311505k11ce4417s8d6a8d6e0e6e1472@mail.gmail.com>
Message-ID: <932626F1-1451-474F-879B-63F9237CF2D4@newclarity.net>

On Mar 31, 2010, at 6:05 PM, Daryl Koopersmith wrote:
> While I'm not sure if storing items in the database will be the approach I
> take (in fact, a theme revisions API would be the ideal option), it will be
> possible to alter the process through multiple hooks within the plugin.
> 
> I plan on including MS support, and database storage is one potential way of
> achieving that goal.

Thanks for the follow up.  

I'm afraid to ask because as soon as you tell me I'm sure I'll realize that I should already know, but what does "MS support" mean?  
Does MS mean Microsoft and if yes, what does that mean?

-Mike

From scribu at gmail.com  Wed Mar 31 22:14:43 2010
From: scribu at gmail.com (scribu)
Date: Thu, 1 Apr 2010 01:14:43 +0300
Subject: [wp-hackers] GSoC Proposal: Sort By Column
Message-ID: <s2n349fe48b1003311514v7a4ed392gc46277d1b001bd61@mail.gmail.com>


From scribu at gmail.com  Wed Mar 31 22:22:53 2010
From: scribu at gmail.com (scribu)
Date: Thu, 1 Apr 2010 01:22:53 +0300
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <932626F1-1451-474F-879B-63F9237CF2D4@newclarity.net>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
	<4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com>
	<902424491003300854h5e60b306n9a79bc0dee7f1013@mail.gmail.com>
	<k2le1202cb11003311135k9f2debe8j9a6e789f9d8478c4@mail.gmail.com>
	<m2re6ec604d1003311215l5135a0d9m400639519aeb42fb@mail.gmail.com>
	<s2mbf58ca3c1003311505k11ce4417s8d6a8d6e0e6e1472@mail.gmail.com>
	<932626F1-1451-474F-879B-63F9237CF2D4@newclarity.net>
Message-ID: <w2w349fe48b1003311522ra7a787ccvd05c851260e39ebe@mail.gmail.com>

On Thu, Apr 1, 2010 at 1:12 AM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> I'm afraid to ask because as soon as you tell me I'm sure I'll realize that
> I should already know, but what does "MS support" mean?
> Does MS mean Microsoft and if yes, what does that mean?
>

Lol. MicroSoft is what I thought too when I first saw it.

MS = MultiSite (formerly WPMU)


-- 
http://scribu.net

From jpotkanski at tribune.com  Wed Mar 31 22:25:35 2010
From: jpotkanski at tribune.com (Potkanski, Jason)
Date: Wed, 31 Mar 2010 17:25:35 -0500
Subject: [wp-hackers] GSoC Proposal: Sort By Column
Message-ID: <D112F596946B944A911B2CDE8BD262E9260B845C26@FCWPMB01.usa.tribune.com>

Could wordpress use the jquery tablesorter plugin?

Jason Potkanski
Tribune Technology
Sent via mobile

-----Original Message-----
From: scribu <scribu at gmail.com>
Sent: Wednesday, March 31, 2010 5:15 PM
To: wp-hackers <wp-hackers at lists.automattic.com>
Subject: [wp-hackers] GSoC Proposal: Sort By Column



From mikeschinkel at newclarity.net  Wed Mar 31 22:26:21 2010
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 31 Mar 2010 18:26:21 -0400
Subject: [wp-hackers] GSoC 2010: Visual CSS Editor
In-Reply-To: <w2w349fe48b1003311522ra7a787ccvd05c851260e39ebe@mail.gmail.com>
References: <bf58ca3c1003291737s5c296611v8e28c1bf71534cc8@mail.gmail.com>
	<4cc4de141003300529s74e82cb2n54a0910e75dd4c3a@mail.gmail.com>
	<902424491003300854h5e60b306n9a79bc0dee7f1013@mail.gmail.com>
	<k2le1202cb11003311135k9f2debe8j9a6e789f9d8478c4@mail.gmail.com>
	<m2re6ec604d1003311215l5135a0d9m400639519aeb42fb@mail.gmail.com>
	<s2mbf58ca3c1003311505k11ce4417s8d6a8d6e0e6e1472@mail.gmail.com>
	<932626F1-1451-474F-879B-63F9237CF2D4@newclarity.net>
	<w2w349fe48b1003311522ra7a787ccvd05c851260e39ebe@mail.gmail.com>
Message-ID: <33877A31-6431-4EF6-8203-5FAE0219B704@newclarity.net>

On Mar 31, 2010, at 6:22 PM, scribu wrote:
> On Thu, Apr 1, 2010 at 1:12 AM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
> 
>> I'm afraid to ask because as soon as you tell me I'm sure I'll realize that
>> I should already know, but what does "MS support" mean?
>> Does MS mean Microsoft and if yes, what does that mean?
> 
> Lol. MicroSoft is what I thought too when I first saw it.
> 
> MS = MultiSite (formerly WPMU)

Doh!    Thanks  (I was right, I should have known.  Having a brain-fart kinda day... :-)

-Mike\

From ron at cavemonkey50.com  Wed Mar 31 22:28:00 2010
From: ron at cavemonkey50.com (Ronald Heft)
Date: Wed, 31 Mar 2010 18:28:00 -0400
Subject: [wp-hackers] GSoC Proposal: Sort By Column
In-Reply-To: <D112F596946B944A911B2CDE8BD262E9260B845C26@FCWPMB01.usa.tribune.com>
References: <D112F596946B944A911B2CDE8BD262E9260B845C26@FCWPMB01.usa.tribune.com>
Message-ID: <j2heff2e86c1003311528q87391b7aj156a01b12c41bbef@mail.gmail.com>

I would think not, since you have pagination to worry about. The sorting
would have to be done through AJAX or page reloads.

--
Ronald Heft

Student - Information Sciences and Technology, Pennsylvania State University
Blogger - ronaldheft.com


On Wed, Mar 31, 2010 at 6:25 PM, Potkanski, Jason <jpotkanski at tribune.com>wrote:

> Could wordpress use the jquery tablesorter plugin?
>
> Jason Potkanski
> Tribune Technology
> Sent via mobile
>
> -----Original Message-----
> From: scribu <scribu at gmail.com>
> Sent: Wednesday, March 31, 2010 5:15 PM
> To: wp-hackers <wp-hackers at lists.automattic.com>
> Subject: [wp-hackers] GSoC Proposal: Sort By Column
>
>
> From the Ideas Page:
>
> A frequently requested feature is the ability to sort by columns on
> > list-type screens. We don't want to make every column sortable -- columns
> > with multiple values are better dealt with using the existing filters --
> but
> > some things would be great to have. For example, on edit.php, sorting by
> > column might include the publish date, last modified time (would be a new
> > column), title, number of comments, etc. How the list sorting would be
> > affected by paging would need to be considered. This could be combined
> with
> > the ajax paging idea for a great summer project.
> >
>
>
> Here's how hierarchical post types (pages) are listed in the admin (or at
> least how I understand it):
>
> If you're on page 1 and there's a post that has children that continue on
> page two, when you go to page 2, the parent  is displayed again, above the
> remaining children. This is helpful in a sense, but it's also kind of
> confusing.
>
> It would get even more confusing when a user attempts to sort those posts
> by
> title, for example.
>
> So, I think the best approach would be to ignore the hierarchy completely,
> when sorting. Displaying a flat list of sorted items would also make paging
> trivial. (We can still display the parent's title for each child item, as a
> hint)
>
> Thoughts?
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Wed Mar 31 22:38:55 2010
From: scribu at gmail.com (scribu)
Date: Thu, 1 Apr 2010 01:38:55 +0300
Subject: [wp-hackers] GSoC Proposal: Sort By Column
In-Reply-To: <j2heff2e86c1003311528q87391b7aj156a01b12c41bbef@mail.gmail.com>
References: <D112F596946B944A911B2CDE8BD262E9260B845C26@FCWPMB01.usa.tribune.com>
	<j2heff2e86c1003311528q87391b7aj156a01b12c41bbef@mail.gmail.com>
Message-ID: <h2h349fe48b1003311538y962b8e1aw64ade66ed08c4109@mail.gmail.com>

On Thu, Apr 1, 2010 at 1:28 AM, Ronald Heft <ron at cavemonkey50.com> wrote:

> I would think not, since you have pagination to worry about. The sorting
> would have to be done through AJAX or page reloads.
>

Yes, I'm going with page reloads. AJAX requests could be added as a
progressive enhancement.


-- 
http://scribu.net

