From chris at lod.com  Fri Mar  1 00:08:43 2013
From: chris at lod.com (chris)
Date: Thu, 28 Feb 2013 19:08:43 -0500
Subject: [wp-hackers] possible to add data for scripts like you can with
	styles?
Message-ID: <000f01ce1610$efa7ea50$cef7bef0$@lod.com>

Is it possible to do this?

add_action('wp_enqueue_scripts', 'fresh_scripts');

function fresh_scripts() {
        global $wp_scripts;

        wp_register_script( 'css3_media_queries',
'http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js')
;
        $wp_scripts->add_data( 'css3_media_queries', 'conditional', 'lt IE
9' );
    wp_enqueue_script('css3_media_queries');
}

Is what im using but no conditional gets added.




From sabreuse at gmail.com  Fri Mar  1 00:15:28 2013
From: sabreuse at gmail.com (Amy Hendrix)
Date: Thu, 28 Feb 2013 19:15:28 -0500
Subject: [wp-hackers] possible to add data for scripts like you can with
	styles?
In-Reply-To: <000f01ce1610$efa7ea50$cef7bef0$@lod.com>
References: <000f01ce1610$efa7ea50$cef7bef0$@lod.com>
Message-ID: <CAKnJ9+wor90AT9xxiYKr2eQUnx4maAW+2wr73B=N3pcacjNkog@mail.gmail.com>

It's not possible. There's a Trac ticket for it (
http://core.trac.wordpress.org/ticket/16024) but given the latest comments
there, I'd say it doesn't look too likely. A better practice is to use
feature detection with like Modernizr for the specific features you're
trying to use.


On Thu, Feb 28, 2013 at 7:08 PM, chris <chris at lod.com> wrote:

> Is it possible to do this?
>
> add_action('wp_enqueue_scripts', 'fresh_scripts');
>
> function fresh_scripts() {
>         global $wp_scripts;
>
>         wp_register_script( 'css3_media_queries',
> 'http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js
> ')
> ;
>         $wp_scripts->add_data( 'css3_media_queries', 'conditional', 'lt IE
> 9' );
>     wp_enqueue_script('css3_media_queries');
> }
>
> Is what im using but no conditional gets added.
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From patty at ayersvirtual.com  Sat Mar  2 13:14:09 2013
From: patty at ayersvirtual.com (Patty Ayers)
Date: Sat, 2 Mar 2013 08:14:09 -0500
Subject: [wp-hackers]  NNTP newsgroup invitation
Message-ID: <CADR_XNwg9dTj1zU44S0h9tNGTB00sUu8SJ4vzDVaz6E0VCo8tQ@mail.gmail.com>

Hello all - I enjoy & appreciate this mailing list. Just wanted to extend
an invitation to visit our active NNTP Newsgroup for people who work with
WordPress :

[server] news.gowestweb.com <http://t.co/0rnTFBQPem>
[group] gowest.wordpress

Cheers,
P at tty

From dianakac at gmail.com  Mon Mar  4 23:58:28 2013
From: dianakac at gmail.com (Diana K. C)
Date: Mon, 4 Mar 2013 20:58:28 -0300
Subject: [wp-hackers] Can't remove filter
Message-ID: <00f201ce1934$2c9aa850$227b0c46@TITA>

Hello,


I created a plugin and then a filter to add content after post titles but I can't figure out how to override some theme functions for excerpt_lenght:

Filter works ok with the_content, but not in the_excerpt because theme uses tie_excerpt instead, I tried remove_filter and create another function tied to excerpt_lenght but nothing happens.


function tie_excerpt_global_length( $length ) {
 if( tie_get_option( 'exc_length' ) )
  return tie_get_option( 'exc_length' );
 else return 60;
}


function tie_excerpt(){
 add_filter( 'excerpt_length', 'tie_excerpt_global_length', 999 );
 echo get_the_excerpt();
}

Thanks for any clue!


From halukkaramete at gmail.com  Tue Mar  5 00:51:08 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Mon, 4 Mar 2013 16:51:08 -0800
Subject: [wp-hackers] advanced taxonomy query include_children problem
Message-ID: <CAHERW=2-AHSz3qpUDrSJGrkTbWM-_PaOwC2AfcwbNLMynx=iAQ@mail.gmail.com>

I got this query

Array
(
    [tax_query] => Array
        (
            [0] => Array
                (
                    [taxonomy] => category
                    [terms] => Array
                        (
                            [0] => featured
                            [1] => science // here, if I replace the term
"science" with the term "topics" (which happens to be the parent term of
"science"), I get 0 match.
                        )

                    [field] => slug
                    [operator] => AND
                )

        )

)

Isn't it that In advanced taxonomy queries like this the include_children
is supposed to be by default TRUE?
But even if I were to enforce the include_children as TRUE, results do not
change. There is something ging on here, I'm unable to see.

The fact of the matter is "topics" category got 0 posts on the dashboard's
"Categories" page too. That's because we use the "term" only as a place
holder for its children which are "science", "politics", "finance" and so
on.

I also tried the none advanced taxonomy route which is using
the 'category__and' => array('12','3'). No luck same thing. Can't get to
the children.

From otto at ottodestruct.com  Tue Mar  5 13:48:07 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 5 Mar 2013 07:48:07 -0600
Subject: [wp-hackers] advanced taxonomy query include_children problem
In-Reply-To: <CAHERW=2-AHSz3qpUDrSJGrkTbWM-_PaOwC2AfcwbNLMynx=iAQ@mail.gmail.com>
References: <CAHERW=2-AHSz3qpUDrSJGrkTbWM-_PaOwC2AfcwbNLMynx=iAQ@mail.gmail.com>
Message-ID: <CAD-FghyoiZiqpok2rfu2YdbH+1fYTGoH3wdUhf2eM2nbr4zfvg@mail.gmail.com>

Using operator => AND is incompatible with wanting to
include_children, because AND is explicitly checking for the given
terms. Think about it, let's say your hierarchy looked like this:

> topics
>> childa
>> childb
> other
>> childc
>> childd

Now, if I said category of topics AND other with include children,
what does that actually mean? Does it have to be in (childa OR childb)
AND (childc OR childd)? The query system isn't sophisticated enough to
parse that sort of thing out. The AND operator takes the given terms
at face value and checks for their existence explicitly.

If you want to use include_children, use operator => IN instead.

-Otto


On Mon, Mar 4, 2013 at 6:51 PM, Haluk Karamete <halukkaramete at gmail.com> wrote:
> I got this query
>
> Array
> (
>     [tax_query] => Array
>         (
>             [0] => Array
>                 (
>                     [taxonomy] => category
>                     [terms] => Array
>                         (
>                             [0] => featured
>                             [1] => science // here, if I replace the term
> "science" with the term "topics" (which happens to be the parent term of
> "science"), I get 0 match.
>                         )
>
>                     [field] => slug
>                     [operator] => AND
>                 )
>
>         )
>
> )
>
> Isn't it that In advanced taxonomy queries like this the include_children
> is supposed to be by default TRUE?
> But even if I were to enforce the include_children as TRUE, results do not
> change. There is something ging on here, I'm unable to see.
>
> The fact of the matter is "topics" category got 0 posts on the dashboard's
> "Categories" page too. That's because we use the "term" only as a place
> holder for its children which are "science", "politics", "finance" and so
> on.
>
> I also tried the none advanced taxonomy route which is using
> the 'category__and' => array('12','3'). No luck same thing. Can't get to
> the children.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From webdev at ms-studio.net  Tue Mar  5 23:45:24 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Wed, 6 Mar 2013 00:45:24 +0100
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
Message-ID: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>

I am searching for a method that would allow me to assign a language
to specific posts/pages by using a *taxonomy*.

What I'm struggling with, is that there appears to be no easy way to
override the base language defined in wp-config.php (WPLANG).

Ideally, I would run a test in my header.php to detect the presence of
the "language" taxonomy, and change the WPLANG accordingly.

This would allow an extremely simple multi-language system, using only
a taxonomy, and something like posts-to-posts would link the
translated articles together. If only I could bring the built-in
translation features of WP to play nicely...

The basic php function setlocale(LC_ALL, 'fr_FR') doesn't have any impact.

I would be thankful for any hint towards a solution.

From otto at ottodestruct.com  Wed Mar  6 00:24:41 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 5 Mar 2013 18:24:41 -0600
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
Message-ID: <CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>

Don't try to change WPLANG, you can't change a define'd constant.

Instead, change the global $locale, or put a filter on 'locale'.

-Otto



On Tue, Mar 5, 2013 at 5:45 PM, Manuel Schmalstieg <webdev at ms-studio.net> wrote:
> I am searching for a method that would allow me to assign a language
> to specific posts/pages by using a *taxonomy*.
>
> What I'm struggling with, is that there appears to be no easy way to
> override the base language defined in wp-config.php (WPLANG).
>
> Ideally, I would run a test in my header.php to detect the presence of
> the "language" taxonomy, and change the WPLANG accordingly.
>
> This would allow an extremely simple multi-language system, using only
> a taxonomy, and something like posts-to-posts would link the
> translated articles together. If only I could bring the built-in
> translation features of WP to play nicely...
>
> The basic php function setlocale(LC_ALL, 'fr_FR') doesn't have any impact.
>
> I would be thankful for any hint towards a solution.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From webdev at ms-studio.net  Wed Mar  6 13:11:16 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Wed, 6 Mar 2013 14:11:16 +0100
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
Message-ID: <CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>

Alright, that's what I thought, thanks for confirming.

However, when I try this in a template file:

global $locale;
$locale = "de_DE";

...on a site which by default is in French, this doesn't have any
effect on the output of the date_i18n() function - it will still
generate all the days and months in French.

If I try using a filter in functions.php:

function nfo_redefine_locale($locale) {
  global $locale;
  $locale = 'de_DE';
  return $locale;
}
add_filter('locale','nfo_redefine_locale');

...it still doesn't switch the output to German.

Very mysterious :-/


Otto <otto at ottodestruct.com> wrote:
> Don't try to change WPLANG, you can't change a define'd constant.
>
> Instead, change the global $locale, or put a filter on 'locale'.
>

From webdev at ms-studio.net  Wed Mar  6 13:23:51 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Wed, 6 Mar 2013 14:23:51 +0100
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
Message-ID: <CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>

One more observation:

The filter below *does* work partly, I can see that the
language_attributes() in my header.php template react upon it,
switching to lang="de_DE".

But the date_i18n() function, and terms defined in the po/mo files
with _e(), are not reacting to the locale change. How can I persuade
them to collaborate?


> If I try using a filter in functions.php:
>
> function nfo_redefine_locale($locale) {
>   global $locale;
>   $locale = 'de_DE';
>   return $locale;
> }
> add_filter('locale','nfo_redefine_locale');
>
> ...it still doesn't switch the output to German.

From kwight at kwight.ca  Wed Mar  6 17:21:37 2013
From: kwight at kwight.ca (Kirk Wight)
Date: Wed, 6 Mar 2013 12:21:37 -0500
Subject: [wp-hackers] redirects for /admin
Message-ID: <CAFQFuXP7RvvcgPaiFFyxTdcznX6QYTKS9OBEWEvtSuvix+nnqQ@mail.gmail.com>

Hello,

I'm working with a client that needs a redirect in our top level install
directory for /admin, pointing to an external tool. This is causing
problems for anyone logged in, or doing anything at /wp-admin.

I'm having trouble finding info on it, but isn't there a built-in WordPress
redirect for /admin that could be causing my problems? What would be the
best way to disable it?

From wp at andrewnacin.com  Wed Mar  6 17:26:13 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 6 Mar 2013 12:26:13 -0500
Subject: [wp-hackers] redirects for /admin
In-Reply-To: <CAFQFuXP7RvvcgPaiFFyxTdcznX6QYTKS9OBEWEvtSuvix+nnqQ@mail.gmail.com>
References: <CAFQFuXP7RvvcgPaiFFyxTdcznX6QYTKS9OBEWEvtSuvix+nnqQ@mail.gmail.com>
Message-ID: <CAP29Pvg6k9E2WqFfrUOpEBNHLZvu7sGWLocVBZ=20PPyk1i9ng@mail.gmail.com>

On Wed, Mar 6, 2013 at 12:21 PM, Kirk Wight <kwight at kwight.ca> wrote:

> Hello,
>
> I'm working with a client that needs a redirect in our top level install
> directory for /admin, pointing to an external tool. This is causing
> problems for anyone logged in, or doing anything at /wp-admin.
>
> I'm having trouble finding info on it, but isn't there a built-in WordPress
> redirect for /admin that could be causing my problems? What would be the
> best way to disable it?


There is a redirect for /admin built into WordPress, but I doubt it is
causing your problem as it happens in PHP. If you do a redirect for /admin
at the server level (Apache, nginx), you'll avoid it entirely.

From kwight at kwight.ca  Wed Mar  6 17:59:51 2013
From: kwight at kwight.ca (Kirk Wight)
Date: Wed, 6 Mar 2013 12:59:51 -0500
Subject: [wp-hackers] redirects for /admin
In-Reply-To: <CAP29Pvg6k9E2WqFfrUOpEBNHLZvu7sGWLocVBZ=20PPyk1i9ng@mail.gmail.com>
References: <CAFQFuXP7RvvcgPaiFFyxTdcznX6QYTKS9OBEWEvtSuvix+nnqQ@mail.gmail.com>
	<CAP29Pvg6k9E2WqFfrUOpEBNHLZvu7sGWLocVBZ=20PPyk1i9ng@mail.gmail.com>
Message-ID: <CAFQFuXP8Bth6istJ1tOPYxR+W9BnfAE8iAP1NmuDxmV7OpGhLw@mail.gmail.com>

The redirect is happening through a redirect tool on WP Engine, which I
thought would be at the server level; I'll dig deeper with them.

Still, out of curiosity, what is the best way to filter or remove that
/admin redirect? I'm combing through rewrite.php and filters now.

On 6 March 2013 12:26, Andrew Nacin <wp at andrewnacin.com> wrote:

> On Wed, Mar 6, 2013 at 12:21 PM, Kirk Wight <kwight at kwight.ca> wrote:
>
> > Hello,
> >
> > I'm working with a client that needs a redirect in our top level install
> > directory for /admin, pointing to an external tool. This is causing
> > problems for anyone logged in, or doing anything at /wp-admin.
> >
> > I'm having trouble finding info on it, but isn't there a built-in
> WordPress
> > redirect for /admin that could be causing my problems? What would be the
> > best way to disable it?
>
>
> There is a redirect for /admin built into WordPress, but I doubt it is
> causing your problem as it happens in PHP. If you do a redirect for /admin
> at the server level (Apache, nginx), you'll avoid it entirely.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dyordan1 at ramapo.edu  Wed Mar  6 18:09:55 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Wed, 6 Mar 2013 13:09:55 -0500
Subject: [wp-hackers] redirects for /admin
In-Reply-To: <CAFQFuXP8Bth6istJ1tOPYxR+W9BnfAE8iAP1NmuDxmV7OpGhLw@mail.gmail.com>
References: <CAFQFuXP7RvvcgPaiFFyxTdcznX6QYTKS9OBEWEvtSuvix+nnqQ@mail.gmail.com>
	<CAP29Pvg6k9E2WqFfrUOpEBNHLZvu7sGWLocVBZ=20PPyk1i9ng@mail.gmail.com>
	<CAFQFuXP8Bth6istJ1tOPYxR+W9BnfAE8iAP1NmuDxmV7OpGhLw@mail.gmail.com>
Message-ID: <EDA4E122-A57D-46A0-BF06-53E590BF434B@ramapo.edu>

Despite the risk of being ostracized here's my suggestion:

Have a physical file on the server, say admin/index.php (any file that would be treated as index is fine, pick a language)
Have a 301 Moved Permanently in that file
Also don't forget to actually redirect it

Flat files always(?) take precedence over Wordpress so it should be fine. Here's a PHP code sample for the content:

<?php
header("HTTP/1.1 301 Moved Permanently");
header("Location: http://www.whatever.com");
exit();
?>

On Wed, 6 Mar 2013, at 12:59 PM, Kirk Wight wrote:

> The redirect is happening through a redirect tool on WP Engine, which I
> thought would be at the server level; I'll dig deeper with them.
> 
> Still, out of curiosity, what is the best way to filter or remove that
> /admin redirect? I'm combing through rewrite.php and filters now.
> 
> On 6 March 2013 12:26, Andrew Nacin <wp at andrewnacin.com> wrote:
> 
>> On Wed, Mar 6, 2013 at 12:21 PM, Kirk Wight <kwight at kwight.ca> wrote:
>> 
>>> Hello,
>>> 
>>> I'm working with a client that needs a redirect in our top level install
>>> directory for /admin, pointing to an external tool. This is causing
>>> problems for anyone logged in, or doing anything at /wp-admin.
>>> 
>>> I'm having trouble finding info on it, but isn't there a built-in
>> WordPress
>>> redirect for /admin that could be causing my problems? What would be the
>>> best way to disable it?
>> 
>> 
>> There is a redirect for /admin built into WordPress, but I doubt it is
>> causing your problem as it happens in PHP. If you do a redirect for /admin
>> at the server level (Apache, nginx), you'll avoid it entirely.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri


From wp at andrewnacin.com  Wed Mar  6 18:26:07 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 6 Mar 2013 13:26:07 -0500
Subject: [wp-hackers] redirects for /admin
In-Reply-To: <CAFQFuXP8Bth6istJ1tOPYxR+W9BnfAE8iAP1NmuDxmV7OpGhLw@mail.gmail.com>
References: <CAFQFuXP7RvvcgPaiFFyxTdcznX6QYTKS9OBEWEvtSuvix+nnqQ@mail.gmail.com>
	<CAP29Pvg6k9E2WqFfrUOpEBNHLZvu7sGWLocVBZ=20PPyk1i9ng@mail.gmail.com>
	<CAFQFuXP8Bth6istJ1tOPYxR+W9BnfAE8iAP1NmuDxmV7OpGhLw@mail.gmail.com>
Message-ID: <CAP29PvhmaqFrRSDK0i=Ut1V1rBMRsWviskxzUHLuC=G2WTi=8Q@mail.gmail.com>

On Wed, Mar 6, 2013 at 12:59 PM, Kirk Wight <kwight at kwight.ca> wrote:

> The redirect is happening through a redirect tool on WP Engine, which I
> thought would be at the server level; I'll dig deeper with them.
>
> Still, out of curiosity, what is the best way to filter or remove that
> x/admin redirect? I'm combing through rewrite.php and filters now.


It's in canonical.php.

add_action( 'template_redirect', 'wp_redirect_admin_locations', 1000 );

From rafaehlers at gmail.com  Wed Mar  6 20:14:24 2013
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Wed, 6 Mar 2013 17:14:24 -0300
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
Message-ID: <CAF_6N0ONinZakX=cm4Kg=W80zYkJJ8awtJLbniPF4JkCMFbbqw@mail.gmail.com>

Suggestion, download the plugin qTranslate and inspect it!

2013/3/6 Manuel Schmalstieg <webdev at ms-studio.net>

> One more observation:
>
> The filter below *does* work partly, I can see that the
> language_attributes() in my header.php template react upon it,
> switching to lang="de_DE".
>
> But the date_i18n() function, and terms defined in the po/mo files
> with _e(), are not reacting to the locale change. How can I persuade
> them to collaborate?
>
>
> > If I try using a filter in functions.php:
> >
> > function nfo_redefine_locale($locale) {
> >   global $locale;
> >   $locale = 'de_DE';
> >   return $locale;
> > }
> > add_filter('locale','nfo_redefine_locale');
> >
> > ...it still doesn't switch the output to German.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From kwight at kwight.ca  Wed Mar  6 20:42:06 2013
From: kwight at kwight.ca (Kirk Wight)
Date: Wed, 6 Mar 2013 15:42:06 -0500
Subject: [wp-hackers] redirects for /admin
In-Reply-To: <CAP29PvhmaqFrRSDK0i=Ut1V1rBMRsWviskxzUHLuC=G2WTi=8Q@mail.gmail.com>
References: <CAFQFuXP7RvvcgPaiFFyxTdcznX6QYTKS9OBEWEvtSuvix+nnqQ@mail.gmail.com>
	<CAP29Pvg6k9E2WqFfrUOpEBNHLZvu7sGWLocVBZ=20PPyk1i9ng@mail.gmail.com>
	<CAFQFuXP8Bth6istJ1tOPYxR+W9BnfAE8iAP1NmuDxmV7OpGhLw@mail.gmail.com>
	<CAP29PvhmaqFrRSDK0i=Ut1V1rBMRsWviskxzUHLuC=G2WTi=8Q@mail.gmail.com>
Message-ID: <CAFQFuXPm9ORgKMboU-Ja2tku6qmgxguZjsHQtfnRUBL+U1bm7w@mail.gmail.com>

Ah, so simple; thanks so much.

On 6 March 2013 13:26, Andrew Nacin <wp at andrewnacin.com> wrote:

> On Wed, Mar 6, 2013 at 12:59 PM, Kirk Wight <kwight at kwight.ca> wrote:
>
> > The redirect is happening through a redirect tool on WP Engine, which I
> > thought would be at the server level; I'll dig deeper with them.
> >
> > Still, out of curiosity, what is the best way to filter or remove that
> > x/admin redirect? I'm combing through rewrite.php and filters now.
>
>
> It's in canonical.php.
>
> add_action( 'template_redirect', 'wp_redirect_admin_locations', 1000 );
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at andrewnacin.com  Thu Mar  7 15:08:32 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Thu, 7 Mar 2013 10:08:32 -0500
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
Message-ID: <CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>

On Wed, Mar 6, 2013 at 8:23 AM, Manuel Schmalstieg <webdev at ms-studio.net>wrote:

> One more observation:
>
> The filter below *does* work partly, I can see that the
> language_attributes() in my header.php template react upon it,
> switching to lang="de_DE".
>
> But the date_i18n() function, and terms defined in the po/mo files
> with _e(), are not reacting to the locale change. How can I persuade
> them to collaborate?


If you want to load a different locale to begin with, you need to do so
very early ? no later than the setup_theme hook, which fires *before* a
theme's functions.php file is included. Plugins are loaded earlier, so you
can do it there. The plugins_loaded hook is fine.

It is possible to "switch out" a locale after the default locale is loaded,
but I would advise against that as it is inefficient, unless your default
language is English, in which case it is not so bad.

If you need to switch your language with each post when viewing a
multiple-post archive page, I must warn you each time you load or switch a
locale, you will be taking a performance hit. But as long as you are just
setting a single locale for that pageload, you're fine.

Also:
 - Please avoid relying on globals as much as possible. So, use the locale
filter, not the $locale global.
 - qTranslate does some really weird things to achieve its goals. I
wouldn't recommend studying it for advice.

Nacin

From webdev at ms-studio.net  Thu Mar  7 16:31:05 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Thu, 7 Mar 2013 17:31:05 +0100
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
	<CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>
Message-ID: <CAHBjUcSQLQ5Be+_OJaLcKH-nNx_MvizkEOczpynA+vWH76qMKQ@mail.gmail.com>

Nacin, thanks for those insights!

> If you want to load a different locale to begin with, you need to do so
> very early ? no later than the setup_theme hook, which fires *before* a
> theme's functions.php file is included. Plugins are loaded earlier, so you
> can do it there. The plugins_loaded hook is fine.

Hmm, looking at http://codex.wordpress.org/Plugin_API/Action_Reference
I see that the "registered_taxonomy" action comes very early, before
"plugins_loaded" and "setup_theme" ... does this imply that a custom
taxonomy ("language") can be safely used by a plugin in order to
activate the "locale switch"?

> It is possible to "switch out" a locale after the default locale is loaded,
> but I would advise against that as it is inefficient, unless your default
> language is English, in which case it is not so bad.

That's good to know. By "inefficient", you refer to the double loading
and processing of .mo files? Wouldn't the default language get loaded
only at the "load_textdomain" action, which comes after
"plugins_loaded"?


> If you need to switch your language with each post when viewing a
> multiple-post archive page, I must warn you each time you load or switch a
> locale, you will be taking a performance hit. But as long as you are just
> setting a single locale for that pageload, you're fine.

Indeed, I envision this method to be used only for single posts/pages,
*not* for switching the language multiple times on archive pages (I
didn't even think about that possibility ... you're giving me
dangerous ideas :)

>
> Also:
>  - Please avoid relying on globals as much as possible. So, use the locale
> filter, not the $locale global.
>  - qTranslate does some really weird things to achieve its goals. I
> wouldn't recommend studying it for advice.

My goal is actually *not* to do *weird things*, but to use built-in WP
functions to allow for a basic multi-language capacity.

I admit that I just had a look at qTranslate. I see that it uses it's
own custom methods for handling the date format, which I don't fully
understand.

For redefining the $locale, it uses this filter:

function qtrans_localeForCurrentLanguage($locale){
	global $q_config;
	// try to figure out the correct locale
	$locale = array();
	$locale[] = $q_config['locale'][$q_config['language']].".utf8";
	$locale[] = $q_config['locale'][$q_config['language']]."@euro";
	$locale[] = $q_config['locale'][$q_config['language']];
	$locale[] = $q_config['windows_locale'][$q_config['language']];
	$locale[] = $q_config['language'];
	
	// return the correct locale and most importantly set it (wordpress
doesn't, which is bad)
	// only set LC_TIME as everyhing else doesn't seem to work with windows
	setlocale(LC_TIME, $locale);
	
	return $q_config['locale'][$q_config['language']];
}

add_filter('locale','qtrans_localeForCurrentLanguage',99);

Anything in there I shouldn't try at home? :)

Cheers,
Manuel

From wp at andrewnacin.com  Thu Mar  7 16:52:08 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Thu, 7 Mar 2013 11:52:08 -0500
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAHBjUcSQLQ5Be+_OJaLcKH-nNx_MvizkEOczpynA+vWH76qMKQ@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
	<CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>
	<CAHBjUcSQLQ5Be+_OJaLcKH-nNx_MvizkEOczpynA+vWH76qMKQ@mail.gmail.com>
Message-ID: <CAP29PviF1UeYuKyW0+zRTQj-La_hwLnmsnkf+hS0=D=Y0B_Bpg@mail.gmail.com>

On Thu, Mar 7, 2013 at 11:31 AM, Manuel Schmalstieg <webdev at ms-studio.net>wrote:

> Nacin, thanks for those insights!
>
> > If you want to load a different locale to begin with, you need to do so
> > very early ? no later than the setup_theme hook, which fires *before* a
> > theme's functions.php file is included. Plugins are loaded earlier, so
> you
> > can do it there. The plugins_loaded hook is fine.
>
> Hmm, looking at http://codex.wordpress.org/Plugin_API/Action_Reference
> I see that the "registered_taxonomy" action comes very early, before
> "plugins_loaded" and "setup_theme" ... does this imply that a custom
> taxonomy ("language") can be safely used by a plugin in order to
> activate the "locale switch"?
>

Generally speaking, you should wait until init to register a taxonomy. In
this case, you will need to register it earlier. Since this is presumably a
private taxonomy without any rewrite rules, you should be fine. Note that
"registered_taxonomy" fires when a taxonomy is registered, and is not for
registering taxonomies themselves.

That's good to know. By "inefficient", you refer to the double loading
> and processing of .mo files? Wouldn't the default language get loaded
> only at the "load_textdomain" action, which comes after
> "plugins_loaded"?
>

load_textdomain fires every time load_textdomain() is called.

Default textdomain files are loaded after plugins_loaded and setup_theme,
but before the theme is loaded and before after_setup_theme fires. Loading
English then re-loading the textdomain into German on the init hook would
be fine, performance-wise, as English has no mo files. But loading Spanish
by default then switching to German would not. Likewise, switching from
Spanish to German then back to Spanish would not be, as the way core API
works, it will unload Spanish only to load it again.

Nacin

From webdev at ms-studio.net  Thu Mar  7 17:39:44 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Thu, 7 Mar 2013 18:39:44 +0100
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAP29PviF1UeYuKyW0+zRTQj-La_hwLnmsnkf+hS0=D=Y0B_Bpg@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
	<CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>
	<CAHBjUcSQLQ5Be+_OJaLcKH-nNx_MvizkEOczpynA+vWH76qMKQ@mail.gmail.com>
	<CAP29PviF1UeYuKyW0+zRTQj-La_hwLnmsnkf+hS0=D=Y0B_Bpg@mail.gmail.com>
Message-ID: <CAHBjUcR-ug1KuEQuNPJ=fOTc3_Puo5u3aM9J9-0uZqL7QvkqDw@mail.gmail.com>

Ok, I just followed your advice, and implemented my little filter as a
plugin, instead of abusing functions.php.

As a result, date_i18n() and get_the_date() are now being rendered
with the modified locale. Brilliant!

Thanks Otto, Rafael and Andrew for your very helpful explanations.
Manuel

From webdev at ms-studio.net  Thu Mar  7 22:23:20 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Thu, 7 Mar 2013 23:23:20 +0100
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAHBjUcR-ug1KuEQuNPJ=fOTc3_Puo5u3aM9J9-0uZqL7QvkqDw@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
	<CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>
	<CAHBjUcSQLQ5Be+_OJaLcKH-nNx_MvizkEOczpynA+vWH76qMKQ@mail.gmail.com>
	<CAP29PviF1UeYuKyW0+zRTQj-La_hwLnmsnkf+hS0=D=Y0B_Bpg@mail.gmail.com>
	<CAHBjUcR-ug1KuEQuNPJ=fOTc3_Puo5u3aM9J9-0uZqL7QvkqDw@mail.gmail.com>
Message-ID: <CAHBjUcT_sPbuwCDQo4N=NYYiyxWTKK26Dpjq67hDGk=Cs1yELw@mail.gmail.com>

Almost working, but I am still hitting an obstacle with the sequence of actions:

- Registering the "language" taxonomy very early on, calling
register_taxonomy()  on the "plugins_loaded" or "setup_theme" action:
works.
- Running a filter that redefines the locale: works.
- Applying the language switch only if taxonomy_exists(): works.

What doesn't work: conditionally testing if the current post has a
specific language, using has_term().
Actually, even a conditional test for is_single() doesn't return
anything at that step.

So I'm worried that the locale filter is triggered too early in the
initialization process, before any post content is there.

Here is this very simple piece of code, that almost works:

function mimu_redefine_locale($locale) {
	if ( taxonomy_exists( 'mimu_language' )) {
		if ( has_term( 'fr', 'mimu_language' )) {
			$locale = 'fr_FR';
		}
	}
  return $locale;
}
add_filter('locale','mimu_redefine_locale',10);

Any ideas how that function could access the taxonomy parameters of
the current post?

From rafaehlers at gmail.com  Thu Mar  7 22:27:37 2013
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Thu, 7 Mar 2013 19:27:37 -0300
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAHBjUcT_sPbuwCDQo4N=NYYiyxWTKK26Dpjq67hDGk=Cs1yELw@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
	<CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>
	<CAHBjUcSQLQ5Be+_OJaLcKH-nNx_MvizkEOczpynA+vWH76qMKQ@mail.gmail.com>
	<CAP29PviF1UeYuKyW0+zRTQj-La_hwLnmsnkf+hS0=D=Y0B_Bpg@mail.gmail.com>
	<CAHBjUcR-ug1KuEQuNPJ=fOTc3_Puo5u3aM9J9-0uZqL7QvkqDw@mail.gmail.com>
	<CAHBjUcT_sPbuwCDQo4N=NYYiyxWTKK26Dpjq67hDGk=Cs1yELw@mail.gmail.com>
Message-ID: <CAF_6N0NO7WGtKz4F-2zNEPVnhBLNa3aB99bfo6oaw5GhpDJY3w@mail.gmail.com>

Set global $post; first?

2013/3/7 Manuel Schmalstieg <webdev at ms-studio.net>

> Almost working, but I am still hitting an obstacle with the sequence of
> actions:
>
> - Registering the "language" taxonomy very early on, calling
> register_taxonomy()  on the "plugins_loaded" or "setup_theme" action:
> works.
> - Running a filter that redefines the locale: works.
> - Applying the language switch only if taxonomy_exists(): works.
>
> What doesn't work: conditionally testing if the current post has a
> specific language, using has_term().
> Actually, even a conditional test for is_single() doesn't return
> anything at that step.
>
> So I'm worried that the locale filter is triggered too early in the
> initialization process, before any post content is there.
>
> Here is this very simple piece of code, that almost works:
>
> function mimu_redefine_locale($locale) {
>         if ( taxonomy_exists( 'mimu_language' )) {
>                 if ( has_term( 'fr', 'mimu_language' )) {
>                         $locale = 'fr_FR';
>                 }
>         }
>   return $locale;
> }
> add_filter('locale','mimu_redefine_locale',10);
>
> Any ideas how that function could access the taxonomy parameters of
> the current post?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From paolo.tresso at swergroup.com  Fri Mar  8 03:50:49 2013
From: paolo.tresso at swergroup.com (Paolo Tresso)
Date: Fri, 08 Mar 2013 04:50:49 +0100
Subject: [wp-hackers] plugins unit testing
Message-ID: <op.wtlzmzwv8too7r@whitebook>



Hi everyone,

I'm trying to learn unit testing and use it properly in our plugins (about  
time..). First thing I've learned so far is that I need to write better  
code in order to test it :)

I've managed to setup tests and environment thanks to the *amazing* wp-cli  
but I can't figure out how to test several things.

Example: one of our plugins deals with uploads filenames; while I can test  
some step and method on debug strings, can I simulate a real file upload  
process and test if my plugins plays nice with every hook? Can I create a  
debug post and test save_post hooks, or this is out of the testing scope?

Thank you!


Paolo Tresso
Lead Developer
SWERgroup

http://swergroup.com
http://profiles.wordpress.org/swergroup

From bryan at ibaku.net  Fri Mar  8 07:45:59 2013
From: bryan at ibaku.net (Bryan Petty)
Date: Fri, 8 Mar 2013 00:45:59 -0700
Subject: [wp-hackers] plugins unit testing
In-Reply-To: <op.wtlzmzwv8too7r@whitebook>
References: <op.wtlzmzwv8too7r@whitebook>
Message-ID: <CAKB8V+pXZBtC5o5Vch5=pqrecr_kPNDqGOHHDdTtfcZm_Lr9FA@mail.gmail.com>

On Thu, Mar 7, 2013 at 8:50 PM, Paolo Tresso <paolo.tresso at swergroup.com> wrote:
> I'm trying to learn unit testing and use it properly in our plugins (about
> time..). First thing I've learned so far is that I need to write better code
> in order to test it :)
>
> I've managed to setup tests and environment thanks to the *amazing* wp-cli
> but I can't figure out how to test several things.
>
> Example: one of our plugins deals with uploads filenames; while I can test
> some step and method on debug strings, can I simulate a real file upload
> process and test if my plugins plays nice with every hook? Can I create a
> debug post and test save_post hooks, or this is out of the testing scope?

I'm not entirely sure on file uploads (some of that might need to be
mocked out), but the rest is definitely a yes.

This might help you a little too:
https://speakerdeck.com/tierra/unit-testing-wordpress-plugins

From tcbarrett at gmail.com  Fri Mar  8 10:51:45 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Fri, 8 Mar 2013 10:51:45 +0000
Subject: [wp-hackers] Shortcode image replacement in visual editor WP3.5
Message-ID: <CAEgmxaZ4hT4S5qmaykc1dWaQnyob-EM_RpfXVK4zsGjDDURTZQ@mail.gmail.com>

I have some shortcodes where I'm replacing the shortcode text in the visual
editor with an image (like the [gallery] shortcode). There is no attachment
post associated, it is just to provide a nice UI.

I do this by creating a tinymce plugin; copying much from WP core (at the
time). The popup edit page is loaded (hidden) and then trigger by invoking
thickbox. It's a little fiddly. And was all written a while ago.

Is there a nice(r) way of doing this with 3.5, or is it very
attachment-image focussed?

Thanks

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From webdev at ms-studio.net  Fri Mar  8 12:28:44 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Fri, 8 Mar 2013 13:28:44 +0100
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAF_6N0NO7WGtKz4F-2zNEPVnhBLNa3aB99bfo6oaw5GhpDJY3w@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
	<CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>
	<CAHBjUcSQLQ5Be+_OJaLcKH-nNx_MvizkEOczpynA+vWH76qMKQ@mail.gmail.com>
	<CAP29PviF1UeYuKyW0+zRTQj-La_hwLnmsnkf+hS0=D=Y0B_Bpg@mail.gmail.com>
	<CAHBjUcR-ug1KuEQuNPJ=fOTc3_Puo5u3aM9J9-0uZqL7QvkqDw@mail.gmail.com>
	<CAHBjUcT_sPbuwCDQo4N=NYYiyxWTKK26Dpjq67hDGk=Cs1yELw@mail.gmail.com>
	<CAF_6N0NO7WGtKz4F-2zNEPVnhBLNa3aB99bfo6oaw5GhpDJY3w@mail.gmail.com>
Message-ID: <CAHBjUcRqs2=KuN=Q0M+4SxHu6nTBym0jce9aeTLDzOqAn8KOow@mail.gmail.com>

Thanks Raffael for the suggestion, but it doesn't work for me yet.
Moving this topic to wp.stackexchange for not flooding the list:
http://wordpress.stackexchange.com/questions/89972/

Rafael Ehlers <rafaehlers at gmail.com> wrote:
> Set global $post; first?
>

From webdev at ms-studio.net  Fri Mar  8 16:03:28 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Fri, 8 Mar 2013 17:03:28 +0100
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAHBjUcRqs2=KuN=Q0M+4SxHu6nTBym0jce9aeTLDzOqAn8KOow@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
	<CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>
	<CAHBjUcSQLQ5Be+_OJaLcKH-nNx_MvizkEOczpynA+vWH76qMKQ@mail.gmail.com>
	<CAP29PviF1UeYuKyW0+zRTQj-La_hwLnmsnkf+hS0=D=Y0B_Bpg@mail.gmail.com>
	<CAHBjUcR-ug1KuEQuNPJ=fOTc3_Puo5u3aM9J9-0uZqL7QvkqDw@mail.gmail.com>
	<CAHBjUcT_sPbuwCDQo4N=NYYiyxWTKK26Dpjq67hDGk=Cs1yELw@mail.gmail.com>
	<CAF_6N0NO7WGtKz4F-2zNEPVnhBLNa3aB99bfo6oaw5GhpDJY3w@mail.gmail.com>
	<CAHBjUcRqs2=KuN=Q0M+4SxHu6nTBym0jce9aeTLDzOqAn8KOow@mail.gmail.com>
Message-ID: <CAHBjUcQLxtKT0uG5xJOUJkopiPeDQTehQVJFSfUeKRCMmV3KaQ@mail.gmail.com>

Update: I'm now inclined to use a workaround based on the post slug.
This makes the language switch as simple as this:

function wpsx89972_redefine_locale($locale) {
    $wpsx_url = $_SERVER['REQUEST_URI'];
    $wpsx_url_lang = substr($wpsx_url, -4);
    if ( $wpsx_url_lang == "-fr/") {
        $locale = 'fr_FR';
    } else if ( $wpsx_url_lang == "-en/") {
        $locale = 'en_US';
    } else { // fallback to default
        $locale = 'de_DE';
    }
    return $locale;
}
add_filter('locale','wpsx89972_redefine_locale',10);

Still a bit disappointed as I would prefer a fully taxonomy-based
method... but at least I now have a working multi-language solution in
13 lines of code, not that bad \o/

Thanks again for the great advice!
- Manu

From wp at andrewnacin.com  Fri Mar  8 16:07:51 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 8 Mar 2013 11:07:51 -0500
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAHBjUcQLxtKT0uG5xJOUJkopiPeDQTehQVJFSfUeKRCMmV3KaQ@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
	<CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>
	<CAHBjUcSQLQ5Be+_OJaLcKH-nNx_MvizkEOczpynA+vWH76qMKQ@mail.gmail.com>
	<CAP29PviF1UeYuKyW0+zRTQj-La_hwLnmsnkf+hS0=D=Y0B_Bpg@mail.gmail.com>
	<CAHBjUcR-ug1KuEQuNPJ=fOTc3_Puo5u3aM9J9-0uZqL7QvkqDw@mail.gmail.com>
	<CAHBjUcT_sPbuwCDQo4N=NYYiyxWTKK26Dpjq67hDGk=Cs1yELw@mail.gmail.com>
	<CAF_6N0NO7WGtKz4F-2zNEPVnhBLNa3aB99bfo6oaw5GhpDJY3w@mail.gmail.com>
	<CAHBjUcRqs2=KuN=Q0M+4SxHu6nTBym0jce9aeTLDzOqAn8KOow@mail.gmail.com>
	<CAHBjUcQLxtKT0uG5xJOUJkopiPeDQTehQVJFSfUeKRCMmV3KaQ@mail.gmail.com>
Message-ID: <CAP29Pvhs-Hd-ibfAc8WjBOdktxc=uPwYKoC+mBEW+J61nKMGUg@mail.gmail.com>

On Fri, Mar 8, 2013 at 11:03 AM, Manuel Schmalstieg <webdev at ms-studio.net>wrote:

> Update: I'm now inclined to use a workaround based on the post slug.
> This makes the language switch as simple as this:
>
> function wpsx89972_redefine_locale($locale) {
>     $wpsx_url = $_SERVER['REQUEST_URI'];
>     $wpsx_url_lang = substr($wpsx_url, -4);
>     if ( $wpsx_url_lang == "-fr/") {
>         $locale = 'fr_FR';
>     } else if ( $wpsx_url_lang == "-en/") {
>         $locale = 'en_US';
>     } else { // fallback to default
>         $locale = 'de_DE';
>     }
>     return $locale;
> }
> add_filter('locale','wpsx89972_redefine_locale',10);
>
> Still a bit disappointed as I would prefer a fully taxonomy-based
> method... but at least I now have a working multi-language solution in
> 13 lines of code, not that bad \o/
>

Since you're just switching from English to one other language, you can
consider filtering 'locale' once the post is loaded (on template_redirect).

The key is to re-load the default textdomain after filtering 'locale'.

add_filter( 'template_redirect', function() {
    add_filter( 'locale', ... );
    load_default_textdomain();
});

This won't quite result in every string translated, as some will be
translated before template_redirect, but you are unlikely to notice on the
frontend.

Nacin

From webdev at ms-studio.net  Fri Mar  8 18:54:36 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Fri, 8 Mar 2013 19:54:36 +0100
Subject: [wp-hackers] Multilanguage: how to redefine locale on the fly
In-Reply-To: <CAP29Pvhs-Hd-ibfAc8WjBOdktxc=uPwYKoC+mBEW+J61nKMGUg@mail.gmail.com>
References: <CAHBjUcT1eZvOi=p9k8d8EzfpWiz_xChT4rzSFqDq2ROgN9E8fQ@mail.gmail.com>
	<CAD-Fghx+MW7B3GY7nzAPUBsHRZgOkaHj1n_5MK=HxFjtU_S2sg@mail.gmail.com>
	<CAHBjUcSA14VVb+Hpn1MgG-2AsSwqa+jCcVjLrAqnoRWovkch0g@mail.gmail.com>
	<CAHBjUcT5rzq0t22DcC8HFdQq15yW9xQNCS0kt3LacBbNCEt7TA@mail.gmail.com>
	<CAP29PviO7G8cE6p7oPpawzkaAEjMGs6q4+t-ePsb-07EC2kQPw@mail.gmail.com>
	<CAHBjUcSQLQ5Be+_OJaLcKH-nNx_MvizkEOczpynA+vWH76qMKQ@mail.gmail.com>
	<CAP29PviF1UeYuKyW0+zRTQj-La_hwLnmsnkf+hS0=D=Y0B_Bpg@mail.gmail.com>
	<CAHBjUcR-ug1KuEQuNPJ=fOTc3_Puo5u3aM9J9-0uZqL7QvkqDw@mail.gmail.com>
	<CAHBjUcT_sPbuwCDQo4N=NYYiyxWTKK26Dpjq67hDGk=Cs1yELw@mail.gmail.com>
	<CAF_6N0NO7WGtKz4F-2zNEPVnhBLNa3aB99bfo6oaw5GhpDJY3w@mail.gmail.com>
	<CAHBjUcRqs2=KuN=Q0M+4SxHu6nTBym0jce9aeTLDzOqAn8KOow@mail.gmail.com>
	<CAHBjUcQLxtKT0uG5xJOUJkopiPeDQTehQVJFSfUeKRCMmV3KaQ@mail.gmail.com>
	<CAP29Pvhs-Hd-ibfAc8WjBOdktxc=uPwYKoC+mBEW+J61nKMGUg@mail.gmail.com>
Message-ID: <CAHBjUcQws4YChF=1i68s_6-g5+T=0a6rmuKgsigp+XnJBKsQyg@mail.gmail.com>

Just tried that, but I don't get it to work.

When executing the filter on "template_redirect", I notice that the
"has_term()" does return a result, and the language switch is showing
up in the header's language_attributes() ? but some of the _e()
strings and all of the dates are left unlocalized on the frontend, so
it's not a workable solution.


> Since you're just switching from English to one other language, you can
> consider filtering 'locale' once the post is loaded (on template_redirect).
>
> The key is to re-load the default textdomain after filtering 'locale'.
>
> add_filter( 'template_redirect', function() {
>     add_filter( 'locale', ... );
>     load_default_textdomain();
> });
>
> This won't quite result in every string translated, as some will be
> translated before template_redirect, but you are unlikely to notice on the
> frontend.
>
> Nacin

From paolo.tresso at swergroup.com  Fri Mar  8 19:14:40 2013
From: paolo.tresso at swergroup.com (Paolo Tresso)
Date: Fri, 08 Mar 2013 20:14:40 +0100
Subject: [wp-hackers] plugins unit testing
In-Reply-To: <CAKB8V+pXZBtC5o5Vch5=pqrecr_kPNDqGOHHDdTtfcZm_Lr9FA@mail.gmail.com>
References: <op.wtlzmzwv8too7r@whitebook>
	<CAKB8V+pXZBtC5o5Vch5=pqrecr_kPNDqGOHHDdTtfcZm_Lr9FA@mail.gmail.com>
Message-ID: <op.wtm6eqz88too7r@whitebook>

Bryan Petty <bryan at ibaku.net> wrote:

> I'm not entirely sure on file uploads (some of that might need to be
> mocked out), but the rest is definitely a yes.
>
> This might help you a little too:
> https://speakerdeck.com/tierra/unit-testing-wordpress-plugins

Seems that I forgot what the $factory object can do. There's any kind of  
documentation available for it? Can't find any except the code (and it  
helps, but not so much).

Thank you Bryan!





Paolo Tresso
Lead Developer
SWERgroup

http://swergroup.com
http://profiles.wordpress.org/swergroup



From bryan at ibaku.net  Fri Mar  8 21:11:20 2013
From: bryan at ibaku.net (Bryan Petty)
Date: Fri, 8 Mar 2013 14:11:20 -0700
Subject: [wp-hackers] plugins unit testing
In-Reply-To: <op.wtm6eqz88too7r@whitebook>
References: <op.wtlzmzwv8too7r@whitebook>
	<CAKB8V+pXZBtC5o5Vch5=pqrecr_kPNDqGOHHDdTtfcZm_Lr9FA@mail.gmail.com>
	<op.wtm6eqz88too7r@whitebook>
Message-ID: <CAKB8V+ojKYqi=SB2qbyASMq-nu=6XPEv13CBomnSTaKCdCMuUg@mail.gmail.com>

On Fri, Mar 8, 2013 at 12:14 PM, Paolo Tresso
<paolo.tresso at swergroup.com> wrote:
> Seems that I forgot what the $factory object can do. There's any kind of
> documentation available for it? Can't find any except the code (and it
> helps, but not so much).

Would have been nice to have docs for it, but I'm not aware of any
either. The best way to figure it out though is simply to read through
some of WordPress's own unit tests to see how various factories are
used and how some more difficult components are tested.

Regards,
Bryan Petty

From johnbillion+wp at gmail.com  Sun Mar 10 19:36:57 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Sun, 10 Mar 2013 19:36:57 +0000
Subject: [wp-hackers] Shortcode image replacement in visual editor WP3.5
In-Reply-To: <CAEgmxaZ4hT4S5qmaykc1dWaQnyob-EM_RpfXVK4zsGjDDURTZQ@mail.gmail.com>
References: <CAEgmxaZ4hT4S5qmaykc1dWaQnyob-EM_RpfXVK4zsGjDDURTZQ@mail.gmail.com>
Message-ID: <CAOqAKWCw0cRK=V2P41xyc4nczRVAXkqSNdBW+POS1YDXbiiVfw@mail.gmail.com>

On 8 March 2013 10:51, Tom Barrett <tcbarrett at gmail.com> wrote:
> I have some shortcodes where I'm replacing the shortcode text in the visual
> editor with an image (like the [gallery] shortcode). There is no attachment
> post associated, it is just to provide a nice UI.
>
> I do this by creating a tinymce plugin; copying much from WP core (at the
> time). The popup edit page is loaded (hidden) and then trigger by invoking
> thickbox. It's a little fiddly. And was all written a while ago.
>
> Is there a nice(r) way of doing this with 3.5, or is it very
> attachment-image focussed?

Support for 'views' in TinyMCE was planned for 3.5 but there were bugs
which didn't get ironed out, so it was punted [1]. I haven't yet seen
the ticket for (or any discussion of) this for 3.6 though.

John

[1] http://core.trac.wordpress.org/ticket/21812

From mpwalsh8 at gmail.com  Wed Mar 13 15:01:02 2013
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Wed, 13 Mar 2013 11:01:02 -0400
Subject: [wp-hackers] preg_match_all() Crashes Server
Message-ID: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>

A user of my WordPress Google Form plugin has run into an odd problem where
visiting the Plugin Settings page results in a server crash.  I can't
replicate it but he provided me access to a test site where I was able to
determine that a call to preg_match_all() is what is crashing the server.

I am not sure how to resolve this.  What I am doing is using
wp_remote_get() to scrape the FAQ and Usage content for my plugin from the
WordPress Plugin Repository (the content from the ReadMe file), extract
what I want, and put the content on a tab on my Settings Page.  Doing this
allowed me an easy way to add Help to my plugin within the Settings Page.

I've put a fragment of the code here in PastBin:
http://pastebin.com/RrYxAdiU

This is the regular expression which fails:

        $pattern_short =
'{<div\s+[^>]*?class="block-content"[^>]*>((?:(?:(?!<div[^>]*>|</div>).)++|<div[^>]*>(?1)</div>)*)</div>}si';
        $matchcount = preg_match_all($pattern_short, $data, $matches);

After Googling a bit I thought the user might have an incorrect setting for
pcre.backtrace_limit but his value (100000) is the same as what I have on
my server.

I am not sure what else to check at this point.

-- 
Mike Walsh - mpwalsh8 at gmail.com

From paul at codehooligans.com  Wed Mar 13 15:26:40 2013
From: paul at codehooligans.com (Paul Menard)
Date: Wed, 13 Mar 2013 11:26:40 -0400
Subject: [wp-hackers] preg_match_all() Crashes Server
In-Reply-To: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
References: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
Message-ID: <50A9F696-97BC-4C90-BA19-0FF5AF9627C2@codehooligans.com>

Could be they are just under the memory limit threshold. Check the wp-config.php and or php.ini memory settings.

On Mar 13, 2013, at 11:01 AM, Mike Walsh <mpwalsh8 at gmail.com> wrote:

> A user of my WordPress Google Form plugin has run into an odd problem where
> visiting the Plugin Settings page results in a server crash.  I can't
> replicate it but he provided me access to a test site where I was able to
> determine that a call to preg_match_all() is what is crashing the server.
> 
> I am not sure how to resolve this.  What I am doing is using
> wp_remote_get() to scrape the FAQ and Usage content for my plugin from the
> WordPress Plugin Repository (the content from the ReadMe file), extract
> what I want, and put the content on a tab on my Settings Page.  Doing this
> allowed me an easy way to add Help to my plugin within the Settings Page.
> 
> I've put a fragment of the code here in PastBin:
> http://pastebin.com/RrYxAdiU
> 
> This is the regular expression which fails:
> 
>        $pattern_short =
> '{<div\s+[^>]*?class="block-content"[^>]*>((?:(?:(?!<div[^>]*>|</div>).)++|<div[^>]*>(?1)</div>)*)</div>}si';
>        $matchcount = preg_match_all($pattern_short, $data, $matches);
> 
> After Googling a bit I thought the user might have an incorrect setting for
> pcre.backtrace_limit but his value (100000) is the same as what I have on
> my server.
> 
> I am not sure what else to check at this point.
> 
> -- 
> Mike Walsh - mpwalsh8 at gmail.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wordpress at zed1.com  Wed Mar 13 15:58:09 2013
From: wordpress at zed1.com (Mike Little)
Date: Wed, 13 Mar 2013 15:58:09 +0000
Subject: [wp-hackers] preg_match_all() Crashes Server
In-Reply-To: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
References: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
Message-ID: <CAMb54M1X7ugh+Ov_LPDo4inovE8FxuvnpAiUoKqOm5b73iP0Og@mail.gmail.com>

On 13 March 2013 15:01, Mike Walsh <mpwalsh8 at gmail.com> wrote:

> A user of my WordPress Google Form plugin has run into an odd problem where
> visiting the Plugin Settings page results in a server crash.  I can't
> replicate it but he provided me access to a test site where I was able to
> determine that a call to preg_match_all() is what is crashing the server.
>
> I am not sure how to resolve this.  What I am doing is using
> wp_remote_get() to scrape the FAQ and Usage content for my plugin from the
> WordPress Plugin Repository (the content from the ReadMe file), extract
> what I want, and put the content on a tab on my Settings Page.  Doing this
> allowed me an easy way to add Help to my plugin within the Settings Page.
>
>
Wouldn't it be just as easy to read that info from the ReadMe file included
with the plugin? It would certainly save the remote call and the storage of
the retrieved file, headers, statuses etc. You could probably run the
standard the_content filter on it to turn it into basic HTML.

Mike
-- 
Mike Little
http://zed1.com/

From pbaylies at semperfiwebdesign.com  Wed Mar 13 16:01:57 2013
From: pbaylies at semperfiwebdesign.com (peter baylies)
Date: Wed, 13 Mar 2013 12:01:57 -0400
Subject: [wp-hackers] preg_match_all() Crashes Server
In-Reply-To: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
References: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
Message-ID: <CAKkHmjVm7nU4J0QTXOTSXaUW-BL3tXHTGEazRe2HfjMCb66oaw@mail.gmail.com>

What PHP version is being used? It could be a bug...
https://bugs.php.net/bug.php?id=28513

Cheers,

 -- Peter

On Wed, Mar 13, 2013 at 11:01 AM, Mike Walsh <mpwalsh8 at gmail.com> wrote:

> A user of my WordPress Google Form plugin has run into an odd problem where
> visiting the Plugin Settings page results in a server crash.  I can't
> replicate it but he provided me access to a test site where I was able to
> determine that a call to preg_match_all() is what is crashing the server.
>
> I am not sure how to resolve this.  What I am doing is using
> wp_remote_get() to scrape the FAQ and Usage content for my plugin from the
> WordPress Plugin Repository (the content from the ReadMe file), extract
> what I want, and put the content on a tab on my Settings Page.  Doing this
> allowed me an easy way to add Help to my plugin within the Settings Page.
>
> I've put a fragment of the code here in PastBin:
> http://pastebin.com/RrYxAdiU
>
> This is the regular expression which fails:
>
>         $pattern_short =
>
> '{<div\s+[^>]*?class="block-content"[^>]*>((?:(?:(?!<div[^>]*>|</div>).)++|<div[^>]*>(?1)</div>)*)</div>}si';
>         $matchcount = preg_match_all($pattern_short, $data, $matches);
>
> After Googling a bit I thought the user might have an incorrect setting for
> pcre.backtrace_limit but his value (100000) is the same as what I have on
> my server.
>
> I am not sure what else to check at this point.
>
> --
> Mike Walsh - mpwalsh8 at gmail.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From chris at lod.com  Wed Mar 13 17:09:39 2013
From: chris at lod.com (chris)
Date: Wed, 13 Mar 2013 13:09:39 -0400
Subject: [wp-hackers] preg_match_all() Crashes Server
In-Reply-To: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
References: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
Message-ID: <000001ce200d$8bdc7e30$a3957a90$@lod.com>

Why not use the plugin info api to do this?

http://wordpress.org/extend/plugins/i-make-plugins/

have a look at this.



-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Mike Walsh
Sent: March 13, 2013 11:01 AM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] preg_match_all() Crashes Server

A user of my WordPress Google Form plugin has run into an odd problem where
visiting the Plugin Settings page results in a server crash.  I can't
replicate it but he provided me access to a test site where I was able to
determine that a call to preg_match_all() is what is crashing the server.

I am not sure how to resolve this.  What I am doing is using
wp_remote_get() to scrape the FAQ and Usage content for my plugin from the
WordPress Plugin Repository (the content from the ReadMe file), extract what
I want, and put the content on a tab on my Settings Page.  Doing this
allowed me an easy way to add Help to my plugin within the Settings Page.

I've put a fragment of the code here in PastBin:
http://pastebin.com/RrYxAdiU

This is the regular expression which fails:

        $pattern_short =
'{<div\s+[^>]*?class="block-content"[^>]*>((?:(?:(?!<div[^>]*>|</div>).)++|<
div[^>]*>(?1)</div>)*)</div>}si';
        $matchcount = preg_match_all($pattern_short, $data, $matches);

After Googling a bit I thought the user might have an incorrect setting for
pcre.backtrace_limit but his value (100000) is the same as what I have on my
server.

I am not sure what else to check at this point.

--
Mike Walsh - mpwalsh8 at gmail.com
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From mpwalsh8 at gmail.com  Wed Mar 13 19:27:27 2013
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Wed, 13 Mar 2013 15:27:27 -0400
Subject: [wp-hackers] preg_match_all() Crashes Server
In-Reply-To: <CAMb54M1X7ugh+Ov_LPDo4inovE8FxuvnpAiUoKqOm5b73iP0Og@mail.gmail.com>
References: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
	<CAMb54M1X7ugh+Ov_LPDo4inovE8FxuvnpAiUoKqOm5b73iP0Og@mail.gmail.com>
Message-ID: <CAMg3evE4-JzKQHrp3N46oahSinXU=+TQTp1jWSaSZzthP0JuZw@mail.gmail.com>

Would the standard "the_content" filter convert the Markdown syntax to
HTML?  If it does, then yes I could do that.  My reason for reading it from
the WordPress Plugin Repository was so I didn't have to parse the Markdown
text.


On Wed, Mar 13, 2013 at 11:58 AM, Mike Little <wordpress at zed1.com> wrote:

> On 13 March 2013 15:01, Mike Walsh <mpwalsh8 at gmail.com> wrote:
>
> > A user of my WordPress Google Form plugin has run into an odd problem
> where
> > visiting the Plugin Settings page results in a server crash.  I can't
> > replicate it but he provided me access to a test site where I was able to
> > determine that a call to preg_match_all() is what is crashing the server.
> >
> > I am not sure how to resolve this.  What I am doing is using
> > wp_remote_get() to scrape the FAQ and Usage content for my plugin from
> the
> > WordPress Plugin Repository (the content from the ReadMe file), extract
> > what I want, and put the content on a tab on my Settings Page.  Doing
> this
> > allowed me an easy way to add Help to my plugin within the Settings Page.
> >
> >
> Wouldn't it be just as easy to read that info from the ReadMe file included
> with the plugin? It would certainly save the remote call and the storage of
> the retrieved file, headers, statuses etc. You could probably run the
> standard the_content filter on it to turn it into basic HTML.
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From mpwalsh8 at gmail.com  Wed Mar 13 19:31:05 2013
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Wed, 13 Mar 2013 15:31:05 -0400
Subject: [wp-hackers] preg_match_all() Crashes Server
In-Reply-To: <CAKkHmjVm7nU4J0QTXOTSXaUW-BL3tXHTGEazRe2HfjMCb66oaw@mail.gmail.com>
References: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
	<CAKkHmjVm7nU4J0QTXOTSXaUW-BL3tXHTGEazRe2HfjMCb66oaw@mail.gmail.com>
Message-ID: <CAMg3evE1LydwtK04jEUM0TXQnmqBkL1hKoRy2avSaiE4ZNDpTg@mail.gmail.com>

Both my server and the other user's server are running PHP 5.2.17.


On Wed, Mar 13, 2013 at 12:01 PM, peter baylies <
pbaylies at semperfiwebdesign.com> wrote:

> What PHP version is being used? It could be a bug...
> https://bugs.php.net/bug.php?id=28513
>
> Cheers,
>
>  -- Peter
>
> On Wed, Mar 13, 2013 at 11:01 AM, Mike Walsh <mpwalsh8 at gmail.com> wrote:
>
> > A user of my WordPress Google Form plugin has run into an odd problem
> where
> > visiting the Plugin Settings page results in a server crash.  I can't
> > replicate it but he provided me access to a test site where I was able to
> > determine that a call to preg_match_all() is what is crashing the server.
> >
> > I am not sure how to resolve this.  What I am doing is using
> > wp_remote_get() to scrape the FAQ and Usage content for my plugin from
> the
> > WordPress Plugin Repository (the content from the ReadMe file), extract
> > what I want, and put the content on a tab on my Settings Page.  Doing
> this
> > allowed me an easy way to add Help to my plugin within the Settings Page.
> >
> > I've put a fragment of the code here in PastBin:
> > http://pastebin.com/RrYxAdiU
> >
> > This is the regular expression which fails:
> >
> >         $pattern_short =
> >
> >
> '{<div\s+[^>]*?class="block-content"[^>]*>((?:(?:(?!<div[^>]*>|</div>).)++|<div[^>]*>(?1)</div>)*)</div>}si';
> >         $matchcount = preg_match_all($pattern_short, $data, $matches);
> >
> > After Googling a bit I thought the user might have an incorrect setting
> for
> > pcre.backtrace_limit but his value (100000) is the same as what I have on
> > my server.
> >
> > I am not sure what else to check at this point.
> >
> > --
> > Mike Walsh - mpwalsh8 at gmail.com
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From mpwalsh8 at gmail.com  Wed Mar 13 19:53:56 2013
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Wed, 13 Mar 2013 15:53:56 -0400
Subject: [wp-hackers] preg_match_all() Crashes Server
In-Reply-To: <000001ce200d$8bdc7e30$a3957a90$@lod.com>
References: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
	<000001ce200d$8bdc7e30$a3957a90$@lod.com>
Message-ID: <CAMg3evHV=tHeum0kK0n_zVQ7tocF5GPdAhkYzmWzXQ=vcPs2ew@mail.gmail.com>

This looks very promising and certainly easier than what I am doing now -
thanks.

Mike


On Wed, Mar 13, 2013 at 1:09 PM, chris <chris at lod.com> wrote:

> Why not use the plugin info api to do this?
>
> http://wordpress.org/extend/plugins/i-make-plugins/
>
> have a look at this.
>
>
>
>

-- 
Mike Walsh - mpwalsh8 at gmail.com

From mpwalsh8 at gmail.com  Thu Mar 14 13:30:05 2013
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Thu, 14 Mar 2013 09:30:05 -0400
Subject: [wp-hackers] preg_match_all() Crashes Server
In-Reply-To: <CAMg3evHV=tHeum0kK0n_zVQ7tocF5GPdAhkYzmWzXQ=vcPs2ew@mail.gmail.com>
References: <CAMg3evGxuVSNAXzfd1yQ2RRDVYaH-Eup4oMX0Sr3z1zCvFzX4Q@mail.gmail.com>
	<000001ce200d$8bdc7e30$a3957a90$@lod.com>
	<CAMg3evHV=tHeum0kK0n_zVQ7tocF5GPdAhkYzmWzXQ=vcPs2ew@mail.gmail.com>
Message-ID: <CAMg3evF2GSQo_u4afErzvfOjuDiegBr4dKe3S+trCKZvf6P3Ww@mail.gmail.com>

Using the WordPress Plugins API is definitely the answer - thanks for the
pointer to the I Make Plugins plugin, it lead me to this:
http://dd32.id.au/projects/wordpressorg-plugin-information-api-docs/

Using this API makes what I am trying to do absolutely trivial to
implement.  Much appreciated.  I have updated my plugin and it now works on
the site where preg_match_all() is failing.

Mike


On Wed, Mar 13, 2013 at 3:53 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:

> This looks very promising and certainly easier than what I am doing now -
> thanks.
>
> Mike
>
>
> On Wed, Mar 13, 2013 at 1:09 PM, chris <chris at lod.com> wrote:
>
>> Why not use the plugin info api to do this?
>>
>> http://wordpress.org/extend/plugins/i-make-plugins/
>>
>> have a look at this.
>>
>>
>>
>>
>
> --
> Mike Walsh - mpwalsh8 at gmail.com
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From yok2504 at gmail.com  Tue Mar 19 16:48:04 2013
From: yok2504 at gmail.com (Sinan)
Date: Tue, 19 Mar 2013 18:48:04 +0200
Subject: [wp-hackers] WordPress Should Delete WP Version information on head
Message-ID: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>

WordPress Should Delete WP Version information on head
if this is so important there is so many ways to learn who using what vesio
n of. But this public version reading is not safe.

Some times coming big security problems and when this problems match our
versions bots or bad guys easly hack the sites.

What you guys thinking about this ?

-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com/>

From chloe.desoutter+wphackers at gmail.com  Tue Mar 19 16:51:43 2013
From: chloe.desoutter+wphackers at gmail.com (=?ISO-8859-1?Q?Chlo=E9_Desoutter?=)
Date: Tue, 19 Mar 2013 17:51:43 +0100
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
Message-ID: <CAH9U35n-tYegNj9PQPaevvFT-OBtKMxghjaDQDaqs_EnTpeQ4Q@mail.gmail.com>

Hi,
There's no reason you couldn't do

remove_action('wp_head', 'wp_generator');

in your theme's functions.

BTW, security by obscurity is IMO a design flaw.

Hope this helps


2013/3/19 Sinan <yok2504 at gmail.com>

> WordPress Should Delete WP Version information on head
> if this is so important there is so many ways to learn who using what vesio
> n of. But this public version reading is not safe.
>
> Some times coming big security problems and when this problems match our
> versions bots or bad guys easly hack the sites.
>
> What you guys thinking about this ?
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dyordan1 at ramapo.edu  Tue Mar 19 16:52:48 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Tue, 19 Mar 2013 12:52:48 -0400
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
Message-ID: <4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>

I think that exists for Search Engine Penetration and keeping track of market penetration as well. Simply put, it makes tracking % of people using WordPress and a specific version of WordPress and while it's true that's a bit of a security risk (for some setups more than for others), it also helps developers of both WP core and plugins/themes. In that respect, I think it should stay there and people should be individually responsible for hiding it if they *know* they have an old version that's susceptible to attacks and they have a good reason for keeping it. Cheers!

P.S. As already pointed out, it's really easy to remove if need be.

On Tue, 19 Mar 2013, at 12:48 PM, Sinan wrote:

> WordPress Should Delete WP Version information on head
> if this is so important there is so many ways to learn who using what vesio
> n of. But this public version reading is not safe.
> 
> Some times coming big security problems and when this problems match our
> versions bots or bad guys easly hack the sites.
> 
> What you guys thinking about this ?
> 
> -- 
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri

From info at a5d.org  Tue Mar 19 16:53:29 2013
From: info at a5d.org (A5D)
Date: Tue, 19 Mar 2013 16:53:29 +0000
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
Message-ID: <79F95F85-B31C-4B91-BA99-587BD445BCE0@a5d.org>

Agreed but ?

1, There's many plugins that remove the version number
2, There's a small script to add to your theme functions file that removes it
3, You can go to sites like http://whatwpthemeisthat.com to find out specific info
4, As a developer you can manually remove/ not add in the first place the tag from your theme
5, And if a hacker or whoever really wants to break into your site, they will, no matter what version WP or even if you're using WP.

The easiest solution is to simply not build the tag into your themes header.
Plus, of course, there are many more security processes that should be carried out WP or not.

Lee


On 19 Mar 2013, at 16:48, Sinan wrote:

> WordPress Should Delete WP Version information on head
> if this is so important there is so many ways to learn who using what vesio
> n of. But this public version reading is not safe.
> 
> Some times coming big security problems and when this problems match our
> versions bots or bad guys easly hack the sites.
> 
> What you guys thinking about this ?
> 
> -- 
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mailing at markoheijnen.nl  Tue Mar 19 16:55:32 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Tue, 19 Mar 2013 17:55:32 +0100
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
Message-ID: <62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>

This isn't a security risk at all. If you think bots check your version then you are wrong. Also WordPress isn't the security risk. The plugin you are using are.

Op 19 mrt. 2013, om 17:52 heeft Dobri <dyordan1 at ramapo.edu> het volgende geschreven:

> I think that exists for Search Engine Penetration and keeping track of market penetration as well. Simply put, it makes tracking % of people using WordPress and a specific version of WordPress and while it's true that's a bit of a security risk (for some setups more than for others), it also helps developers of both WP core and plugins/themes. In that respect, I think it should stay there and people should be individually responsible for hiding it if they *know* they have an old version that's susceptible to attacks and they have a good reason for keeping it. Cheers!
> 
> P.S. As already pointed out, it's really easy to remove if need be.
> 
> On Tue, 19 Mar 2013, at 12:48 PM, Sinan wrote:
> 
>> WordPress Should Delete WP Version information on head
>> if this is so important there is so many ways to learn who using what vesio
>> n of. But this public version reading is not safe.
>> 
>> Some times coming big security problems and when this problems match our
>> versions bots or bad guys easly hack the sites.
>> 
>> What you guys thinking about this ?
>> 
>> -- 
>> Sinan ??LER
>> sinanisler.com <http://www.sinanisler.com/>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> ~Dobri
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From sinan at sinanisler.com  Tue Mar 19 16:55:24 2013
From: sinan at sinanisler.com (Sinan)
Date: Tue, 19 Mar 2013 18:55:24 +0200
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <79F95F85-B31C-4B91-BA99-587BD445BCE0@a5d.org>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<79F95F85-B31C-4B91-BA99-587BD445BCE0@a5d.org>
Message-ID: <CABmkrsEjfqYyO6VFHngOdynYi8o4gEUFazTV9Gp0vmwF=ampKA@mail.gmail.com>

I know I can easly reamove but so much people using default themes. They
dont know.
We must think them not only us !


2013/3/19 A5D <info at a5d.org>

> Agreed but ?
>
> 1, There's many plugins that remove the version number
> 2, There's a small script to add to your theme functions file that removes
> it
> 3, You can go to sites like http://whatwpthemeisthat.com to find out
> specific info
> 4, As a developer you can manually remove/ not add in the first place the
> tag from your theme
> 5, And if a hacker or whoever really wants to break into your site, they
> will, no matter what version WP or even if you're using WP.
>
> The easiest solution is to simply not build the tag into your themes
> header.
> Plus, of course, there are many more security processes that should be
> carried out WP or not.
>
> Lee
>
>
> On 19 Mar 2013, at 16:48, Sinan wrote:
>
> > WordPress Should Delete WP Version information on head
> > if this is so important there is so many ways to learn who using what
> vesio
> > n of. But this public version reading is not safe.
> >
> > Some times coming big security problems and when this problems match our
> > versions bots or bad guys easly hack the sites.
> >
> > What you guys thinking about this ?
> >
> > --
> > Sinan ??LER
> > sinanisler.com <http://www.sinanisler.com/>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From chloe.desoutter+wphackers at gmail.com  Tue Mar 19 16:56:19 2013
From: chloe.desoutter+wphackers at gmail.com (=?ISO-8859-1?Q?Chlo=E9_Desoutter?=)
Date: Tue, 19 Mar 2013 17:56:19 +0100
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <79F95F85-B31C-4B91-BA99-587BD445BCE0@a5d.org>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<79F95F85-B31C-4B91-BA99-587BD445BCE0@a5d.org>
Message-ID: <CAH9U35kQ1Ld1Z6oMReszd9x3pZB2fQUBkBBaXYAnHSXZG7-hmQ@mail.gmail.com>

Hi,


2013/3/19 A5D <info at a5d.org>

> Agreed but ?
>
> 1, There's many plugins that remove the version number
> 2, There's a small script to add to your theme functions file that removes
> it
> 3, You can go to sites like http://whatwpthemeisthat.com to find out
> specific info
> 4, As a developer you can manually remove/ not add in the first place the
> tag from your theme
>
Evil: if you remove the call to wp_head, you gonna have a bad time.

C

From chloe.desoutter+wphackers at gmail.com  Tue Mar 19 16:58:00 2013
From: chloe.desoutter+wphackers at gmail.com (=?ISO-8859-1?Q?Chlo=E9_Desoutter?=)
Date: Tue, 19 Mar 2013 17:58:00 +0100
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <CABmkrsEjfqYyO6VFHngOdynYi8o4gEUFazTV9Gp0vmwF=ampKA@mail.gmail.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<79F95F85-B31C-4B91-BA99-587BD445BCE0@a5d.org>
	<CABmkrsEjfqYyO6VFHngOdynYi8o4gEUFazTV9Gp0vmwF=ampKA@mail.gmail.com>
Message-ID: <CAH9U35=_zXvAz6Vf61aRZJ3NyMCPr6NysAmhidN-HGsT8sfa7w@mail.gmail.com>

Hi again,

2013/3/19 Sinan <sinan at sinanisler.com>

> I know I can easly reamove but so much people using default themes. They
> dont know.
> We must think them not only us !
>
> Then nothing prevents you from publishing your own "secured"
interpretation of 2010/2011/2012/2013 with stripped version number. Fully
compatible, with "security" added (put between quotes, as this adds nothing
to security)

From dyordan1 at ramapo.edu  Tue Mar 19 16:58:18 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Tue, 19 Mar 2013 12:58:18 -0400
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
	<62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
Message-ID: <2FD5F644-704F-4CFC-BED7-6D20611A1295@ramapo.edu>

I am also a big supporter of WordPress but I wouldn't claim it's perfect and has always been perfect. There are many version-specific vulnerabilities that are not introduced by plugins. Because they are analyzed and documented so well, if someone was using an old version of WP, it would be very easy to take advantage of a specific vulnerability. There would be no updates if WP was perfect, right?

On Tue, 19 Mar 2013, at 12:55 PM, Marko Heijnen wrote:

> This isn't a security risk at all. If you think bots check your version then you are wrong. Also WordPress isn't the security risk. The plugin you are using are.
> 
> Op 19 mrt. 2013, om 17:52 heeft Dobri <dyordan1 at ramapo.edu> het volgende geschreven:
> 
>> I think that exists for Search Engine Penetration and keeping track of market penetration as well. Simply put, it makes tracking % of people using WordPress and a specific version of WordPress and while it's true that's a bit of a security risk (for some setups more than for others), it also helps developers of both WP core and plugins/themes. In that respect, I think it should stay there and people should be individually responsible for hiding it if they *know* they have an old version that's susceptible to attacks and they have a good reason for keeping it. Cheers!
>> 
>> P.S. As already pointed out, it's really easy to remove if need be.
>> 
>> On Tue, 19 Mar 2013, at 12:48 PM, Sinan wrote:
>> 
>>> WordPress Should Delete WP Version information on head
>>> if this is so important there is so many ways to learn who using what vesio
>>> n of. But this public version reading is not safe.
>>> 
>>> Some times coming big security problems and when this problems match our
>>> versions bots or bad guys easly hack the sites.
>>> 
>>> What you guys thinking about this ?
>>> 
>>> -- 
>>> Sinan ??LER
>>> sinanisler.com <http://www.sinanisler.com/>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> ~Dobri
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri


From sinan at sinanisler.com  Tue Mar 19 16:58:29 2013
From: sinan at sinanisler.com (Sinan)
Date: Tue, 19 Mar 2013 18:58:29 +0200
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
	<62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
Message-ID: <CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>

@Marko Heijnen

I dont have respond to that.


2013/3/19 Marko Heijnen <mailing at markoheijnen.nl>

> This isn't a security risk at all. If you think bots check your version
> then you are wrong. Also WordPress isn't the security risk. The plugin you
> are using are.
>
> Op 19 mrt. 2013, om 17:52 heeft Dobri <dyordan1 at ramapo.edu> het volgende
> geschreven:
>
> > I think that exists for Search Engine Penetration and keeping track of
> market penetration as well. Simply put, it makes tracking % of people using
> WordPress and a specific version of WordPress and while it's true that's a
> bit of a security risk (for some setups more than for others), it also
> helps developers of both WP core and plugins/themes. In that respect, I
> think it should stay there and people should be individually responsible
> for hiding it if they *know* they have an old version that's susceptible to
> attacks and they have a good reason for keeping it. Cheers!
> >
> > P.S. As already pointed out, it's really easy to remove if need be.
> >
> > On Tue, 19 Mar 2013, at 12:48 PM, Sinan wrote:
> >
> >> WordPress Should Delete WP Version information on head
> >> if this is so important there is so many ways to learn who using what
> vesio
> >> n of. But this public version reading is not safe.
> >>
> >> Some times coming big security problems and when this problems match our
> >> versions bots or bad guys easly hack the sites.
> >>
> >> What you guys thinking about this ?
> >>
> >> --
> >> Sinan ??LER
> >> sinanisler.com <http://www.sinanisler.com/>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > ~Dobri
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From mailing at markoheijnen.nl  Tue Mar 19 17:01:27 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Tue, 19 Mar 2013 18:01:27 +0100
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
	<62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
	<CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>
Message-ID: <40F3B374-33D2-435B-83FC-4B39E3C62D0E@markoheijnen.nl>

Hey Sinan, That is saying more about you then me.


Dobri:
Obviously WordPress had security risks. Just like every other platform but showing the version number in the head doesn't make a difference.
Also if I'm correct most of the recent vulnerabilities where for registered users. Things they could do but shouldn't be able.


Op 19 mrt. 2013, om 17:58 heeft Sinan <sinan at sinanisler.com> het volgende geschreven:

> @Marko Heijnen
> 
> I dont have respond to that.
> 
> 
> 2013/3/19 Marko Heijnen <mailing at markoheijnen.nl>
> 
>> This isn't a security risk at all. If you think bots check your version
>> then you are wrong. Also WordPress isn't the security risk. The plugin you
>> are using are.
>> 
>> Op 19 mrt. 2013, om 17:52 heeft Dobri <dyordan1 at ramapo.edu> het volgende
>> geschreven:
>> 
>>> I think that exists for Search Engine Penetration and keeping track of
>> market penetration as well. Simply put, it makes tracking % of people using
>> WordPress and a specific version of WordPress and while it's true that's a
>> bit of a security risk (for some setups more than for others), it also
>> helps developers of both WP core and plugins/themes. In that respect, I
>> think it should stay there and people should be individually responsible
>> for hiding it if they *know* they have an old version that's susceptible to
>> attacks and they have a good reason for keeping it. Cheers!
>>> 
>>> P.S. As already pointed out, it's really easy to remove if need be.
>>> 
>>> On Tue, 19 Mar 2013, at 12:48 PM, Sinan wrote:
>>> 
>>>> WordPress Should Delete WP Version information on head
>>>> if this is so important there is so many ways to learn who using what
>> vesio
>>>> n of. But this public version reading is not safe.
>>>> 
>>>> Some times coming big security problems and when this problems match our
>>>> versions bots or bad guys easly hack the sites.
>>>> 
>>>> What you guys thinking about this ?
>>>> 
>>>> --
>>>> Sinan ??LER
>>>> sinanisler.com <http://www.sinanisler.com/>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>>> ~Dobri
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> -- 
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com>
> fb.com/sinanisler
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From sinan at sinanisler.com  Tue Mar 19 17:05:07 2013
From: sinan at sinanisler.com (Sinan)
Date: Tue, 19 Mar 2013 19:05:07 +0200
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
	<62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
	<CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>
Message-ID: <CABmkrsEanAKiz+te1S+rppUCL0DjV+N-CkFVXRQnWbBMR6Uxiw@mail.gmail.com>

Follow here http://wordpress.org/news/category/security/
Wordpress not perfect sometimes there is security problems.


2013/3/19 Sinan <sinan at sinanisler.com>

> @Marko Heijnen
>
> I dont have respond to that.
>
>
> 2013/3/19 Marko Heijnen <mailing at markoheijnen.nl>
>
>> This isn't a security risk at all. If you think bots check your version
>> then you are wrong. Also WordPress isn't the security risk. The plugin you
>> are using are.
>>
>> Op 19 mrt. 2013, om 17:52 heeft Dobri <dyordan1 at ramapo.edu> het volgende
>> geschreven:
>>
>> > I think that exists for Search Engine Penetration and keeping track of
>> market penetration as well. Simply put, it makes tracking % of people using
>> WordPress and a specific version of WordPress and while it's true that's a
>> bit of a security risk (for some setups more than for others), it also
>> helps developers of both WP core and plugins/themes. In that respect, I
>> think it should stay there and people should be individually responsible
>> for hiding it if they *know* they have an old version that's susceptible to
>> attacks and they have a good reason for keeping it. Cheers!
>> >
>> > P.S. As already pointed out, it's really easy to remove if need be.
>> >
>> > On Tue, 19 Mar 2013, at 12:48 PM, Sinan wrote:
>> >
>> >> WordPress Should Delete WP Version information on head
>> >> if this is so important there is so many ways to learn who using what
>> vesio
>> >> n of. But this public version reading is not safe.
>> >>
>> >> Some times coming big security problems and when this problems match
>> our
>> >> versions bots or bad guys easly hack the sites.
>> >>
>> >> What you guys thinking about this ?
>> >>
>> >> --
>> >> Sinan ??LER
>> >> sinanisler.com <http://www.sinanisler.com/>
>> >> _______________________________________________
>> >> wp-hackers mailing list
>> >> wp-hackers at lists.automattic.com
>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> > ~Dobri
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com>
> fb.com/sinanisler
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From dyordan1 at ramapo.edu  Tue Mar 19 17:06:44 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Tue, 19 Mar 2013 13:06:44 -0400
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <40F3B374-33D2-435B-83FC-4B39E3C62D0E@markoheijnen.nl>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
	<62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
	<CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>
	<40F3B374-33D2-435B-83FC-4B39E3C62D0E@markoheijnen.nl>
Message-ID: <E66D7670-5D11-43FD-A34C-F4CBA144A595@ramapo.edu>

Marko,

it does make a difference - it's an *obvious* sign of you using an old version of WP and not only that but it gives you the exact specific version too. Makes someone's job a lot easier. Think some novice hacker that barely knows how to code let alone bring down major sites. You're giving him an admit-one ticket to your backend by having the version in there. For individual, very rare cases it is a big security risk to have your version out there. As stated before though, it's definitely not worth removing from all sites. It has more benefits than drawbacks.

On Tue, 19 Mar 2013, at 1:01 PM, Marko Heijnen wrote:

> Hey Sinan, That is saying more about you then me.
> 
> 
> Dobri:
> Obviously WordPress had security risks. Just like every other platform but showing the version number in the head doesn't make a difference.
> Also if I'm correct most of the recent vulnerabilities where for registered users. Things they could do but shouldn't be able.
> 
> 
> Op 19 mrt. 2013, om 17:58 heeft Sinan <sinan at sinanisler.com> het volgende geschreven:
> 
>> @Marko Heijnen
>> 
>> I dont have respond to that.
>> 
>> 
>> 2013/3/19 Marko Heijnen <mailing at markoheijnen.nl>
>> 
>>> This isn't a security risk at all. If you think bots check your version
>>> then you are wrong. Also WordPress isn't the security risk. The plugin you
>>> are using are.
>>> 
>>> Op 19 mrt. 2013, om 17:52 heeft Dobri <dyordan1 at ramapo.edu> het volgende
>>> geschreven:
>>> 
>>>> I think that exists for Search Engine Penetration and keeping track of
>>> market penetration as well. Simply put, it makes tracking % of people using
>>> WordPress and a specific version of WordPress and while it's true that's a
>>> bit of a security risk (for some setups more than for others), it also
>>> helps developers of both WP core and plugins/themes. In that respect, I
>>> think it should stay there and people should be individually responsible
>>> for hiding it if they *know* they have an old version that's susceptible to
>>> attacks and they have a good reason for keeping it. Cheers!
>>>> 
>>>> P.S. As already pointed out, it's really easy to remove if need be.
>>>> 
>>>> On Tue, 19 Mar 2013, at 12:48 PM, Sinan wrote:
>>>> 
>>>>> WordPress Should Delete WP Version information on head
>>>>> if this is so important there is so many ways to learn who using what
>>> vesio
>>>>> n of. But this public version reading is not safe.
>>>>> 
>>>>> Some times coming big security problems and when this problems match our
>>>>> versions bots or bad guys easly hack the sites.
>>>>> 
>>>>> What you guys thinking about this ?
>>>>> 
>>>>> --
>>>>> Sinan ??LER
>>>>> sinanisler.com <http://www.sinanisler.com/>
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>>> ~Dobri
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>> 
>> 
>> 
>> -- 
>> Sinan ??LER
>> sinanisler.com <http://www.sinanisler.com>
>> fb.com/sinanisler
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri


From mailing at markoheijnen.nl  Tue Mar 19 17:14:46 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Tue, 19 Mar 2013 18:14:46 +0100
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <E66D7670-5D11-43FD-A34C-F4CBA144A595@ramapo.edu>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
	<62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
	<CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>
	<40F3B374-33D2-435B-83FC-4B39E3C62D0E@markoheijnen.nl>
	<E66D7670-5D11-43FD-A34C-F4CBA144A595@ramapo.edu>
Message-ID: <CB7E301F-C157-49C4-AE25-887D790EF132@markoheijnen.nl>

Yes it's a sign but most hackers don't look to that. They just target any site and try all kinds of things. Even try Joomla stuff on WordPress and the other way around.
If your version of WordPress is not the newest then that is the issue not showing the version number in the HTML.

Also readme.html is also showing the version number. The same for enqueued styles/scripts without version number and if you try harder you most likely find a reference in one of the stylesheets.
You aren't saver with removing it. You may believe that but you should check/securing you hosting platform.


Op 19 mrt. 2013, om 18:06 heeft Dobri <dyordan1 at ramapo.edu> het volgende geschreven:

> Marko,
> 
> it does make a difference - it's an *obvious* sign of you using an old version of WP and not only that but it gives you the exact specific version too. Makes someone's job a lot easier. Think some novice hacker that barely knows how to code let alone bring down major sites. You're giving him an admit-one ticket to your backend by having the version in there. For individual, very rare cases it is a big security risk to have your version out there. As stated before though, it's definitely not worth removing from all sites. It has more benefits than drawbacks.
> 
> On Tue, 19 Mar 2013, at 1:01 PM, Marko Heijnen wrote:
> 
>> Hey Sinan, That is saying more about you then me.
>> 
>> 
>> Dobri:
>> Obviously WordPress had security risks. Just like every other platform but showing the version number in the head doesn't make a difference.
>> Also if I'm correct most of the recent vulnerabilities where for registered users. Things they could do but shouldn't be able.
>> 
>> 
>> Op 19 mrt. 2013, om 17:58 heeft Sinan <sinan at sinanisler.com> het volgende geschreven:
>> 
>>> @Marko Heijnen
>>> 
>>> I dont have respond to that.
>>> 
>>> 
>>> 2013/3/19 Marko Heijnen <mailing at markoheijnen.nl>
>>> 
>>>> This isn't a security risk at all. If you think bots check your version
>>>> then you are wrong. Also WordPress isn't the security risk. The plugin you
>>>> are using are.
>>>> 
>>>> Op 19 mrt. 2013, om 17:52 heeft Dobri <dyordan1 at ramapo.edu> het volgende
>>>> geschreven:
>>>> 
>>>>> I think that exists for Search Engine Penetration and keeping track of
>>>> market penetration as well. Simply put, it makes tracking % of people using
>>>> WordPress and a specific version of WordPress and while it's true that's a
>>>> bit of a security risk (for some setups more than for others), it also
>>>> helps developers of both WP core and plugins/themes. In that respect, I
>>>> think it should stay there and people should be individually responsible
>>>> for hiding it if they *know* they have an old version that's susceptible to
>>>> attacks and they have a good reason for keeping it. Cheers!
>>>>> 
>>>>> P.S. As already pointed out, it's really easy to remove if need be.
>>>>> 
>>>>> On Tue, 19 Mar 2013, at 12:48 PM, Sinan wrote:
>>>>> 
>>>>>> WordPress Should Delete WP Version information on head
>>>>>> if this is so important there is so many ways to learn who using what
>>>> vesio
>>>>>> n of. But this public version reading is not safe.
>>>>>> 
>>>>>> Some times coming big security problems and when this problems match our
>>>>>> versions bots or bad guys easly hack the sites.
>>>>>> 
>>>>>> What you guys thinking about this ?
>>>>>> 
>>>>>> --
>>>>>> Sinan ??LER
>>>>>> sinanisler.com <http://www.sinanisler.com/>
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers at lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>> 
>>>>> ~Dobri
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>> 
>>> 
>>> 
>>> -- 
>>> Sinan ??LER
>>> sinanisler.com <http://www.sinanisler.com>
>>> fb.com/sinanisler
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> ~Dobri
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From david at wordshell.net  Tue Mar 19 17:15:55 2013
From: david at wordshell.net (David Anderson)
Date: Tue, 19 Mar 2013 17:15:55 +0000
Subject: [wp-hackers] WordPress Should Delete WP Version information
In-Reply-To: <mailman.24275.1363712300.1480.wp-hackers@lists.automattic.com>
References: <mailman.24275.1363712300.1480.wp-hackers@lists.automattic.com>
Message-ID: <51489D4B.8060408@wordshell.net>

Removing this would accomplish nothing useful. The version number is in 
various other places (e.g. readme.html), and can be deduced by probing 
for the presence of other files which change between one version and 
another (e.g. versions of jQuery, other included components), or can be 
guessed from examining the datestamps on many unchanging files. Anyone 
telling you that hiding the Generator meta tag improves security is 
selling snake oil.

David
> WordPress Should Delete WP Version information on head
> if this is so important there is so many ways to learn who using what vesio
> n of. But this public version reading is not safe.
>
> Some times coming big security problems and when this problems match our
> versions bots or bad guys easly hack the sites.
>
> What you guys thinking about this ?
>
>
> -- 
> WordShell - WordPress fast from the CLI - www.wordshell.net

From johnbillion+wp at gmail.com  Tue Mar 19 17:51:47 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Tue, 19 Mar 2013 17:51:47 +0000
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <CAH9U35=_zXvAz6Vf61aRZJ3NyMCPr6NysAmhidN-HGsT8sfa7w@mail.gmail.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<79F95F85-B31C-4B91-BA99-587BD445BCE0@a5d.org>
	<CABmkrsEjfqYyO6VFHngOdynYi8o4gEUFazTV9Gp0vmwF=ampKA@mail.gmail.com>
	<CAH9U35=_zXvAz6Vf61aRZJ3NyMCPr6NysAmhidN-HGsT8sfa7w@mail.gmail.com>
Message-ID: <CAOqAKWCqxxo1+Abk3SULj9a4Q4OA0YGYJR=DJDzDKjmdZ_H+yQ@mail.gmail.com>

This entire thread is a complete waste of time. Displaying the version
number of WordPress is absolutely, categorically and unarguably not a
security issue. If you are running an out-of-date version of
WordPress, then hiding the version number has zero impact on whether
or not someone can or will take advantage of any vulnerabilities in
it.

Those of you who are stating that displaying the version number makes
it easier or more attractive to someone attempting to take advantage
of your site, show me some stats that prove this and I will eat my own
words.

As Marko pointed out, hackers don't care what your site is running.
They don't care what server software it's running, they don't care
what OS it's running, they don't care what CMS it's running. They will
attack it with whatever vulnerabilities they've got to hand.

I would even go so far as to say that it is naive to think that hiding
the WordPress version number would provide even the illusion of
increased security.

There is only one way to maintain the security of your WordPress
installation: Keep WordPress and your plugins up to date.

John

On 19 March 2013 16:58, Chlo? Desoutter
<chloe.desoutter+wphackers at gmail.com> wrote:
> Hi again,
>
> 2013/3/19 Sinan <sinan at sinanisler.com>
>
>> I know I can easly reamove but so much people using default themes. They
>> dont know.
>> We must think them not only us !
>>
>> Then nothing prevents you from publishing your own "secured"
> interpretation of 2010/2011/2012/2013 with stripped version number. Fully
> compatible, with "security" added (put between quotes, as this adds nothing
> to security)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From tedrader at gmail.com  Tue Mar 19 17:51:53 2013
From: tedrader at gmail.com (Ted R)
Date: Tue, 19 Mar 2013 09:51:53 -0800
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
Message-ID: <CAKqvK2apUpKugrHg4bg-QfgdYpF7b4MiZ_+s4PPW6gWtskX-jg@mail.gmail.com>

Removing your version info is like taping a piece of dental floss across
your doorway...it does *nothing* to keep out those you want kept out. You
want people to stay out, lock your door.

That said, if you personally feel safer with the dental floss (in addition
to the locked door, of course), more power to ya!

On Tue, Mar 19, 2013 at 8:48 AM, Sinan <yok2504 at gmail.com> wrote:

> WordPress Should Delete WP Version information on head
> if this is so important there is so many ways to learn who using what vesio
> n of. But this public version reading is not safe.
>
> Some times coming big security problems and when this problems match our
> versions bots or bad guys easly hack the sites.
>
> What you guys thinking about this ?
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Ted Rader

From piemanek at gmail.com  Tue Mar 19 17:52:22 2013
From: piemanek at gmail.com (Simon Blackbourn)
Date: Tue, 19 Mar 2013 17:52:22 +0000
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <40F3B374-33D2-435B-83FC-4B39E3C62D0E@markoheijnen.nl>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
	<62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
	<CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>
	<40F3B374-33D2-435B-83FC-4B39E3C62D0E@markoheijnen.nl>
Message-ID: <CAJxFMSDueNmS6CQu75qY-ZYjZ7+U98HT4uyGJGYiLGuShu-sng@mail.gmail.com>

whether removing the version number from the header makes it easier or not
for your site to get hacked is irrelevant.

far more important is that it would send a clear message to users saying
"it doesn't matter if you don't upgrade because no one will know". that's
the exact opposite of the message they should be getting.

From sinan at sinanisler.com  Tue Mar 19 18:15:48 2013
From: sinan at sinanisler.com (Sinan)
Date: Tue, 19 Mar 2013 20:15:48 +0200
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <CAJxFMSDueNmS6CQu75qY-ZYjZ7+U98HT4uyGJGYiLGuShu-sng@mail.gmail.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
	<62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
	<CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>
	<40F3B374-33D2-435B-83FC-4B39E3C62D0E@markoheijnen.nl>
	<CAJxFMSDueNmS6CQu75qY-ZYjZ7+U98HT4uyGJGYiLGuShu-sng@mail.gmail.com>
Message-ID: <CABmkrsFxTk1hMJfW1y+7wv1+LGFA9xYWsxwmE6rL6EB0wu8uFg@mail.gmail.com>

Thanks for joining conversation.

Some people understand me thank you guys ;)



2013/3/19 Simon Blackbourn <piemanek at gmail.com>

> whether removing the version number from the header makes it easier or not
> for your site to get hacked is irrelevant.
>
> far more important is that it would send a clear message to users saying
> "it doesn't matter if you don't upgrade because no one will know". that's
> the exact opposite of the message they should be getting.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From dre at armeda.com  Tue Mar 19 18:26:31 2013
From: dre at armeda.com (Dre Armeda)
Date: Tue, 19 Mar 2013 11:26:31 -0700
Subject: [wp-hackers] WordPress Should Delete WP Version information on
 head
In-Reply-To: <CABmkrsFxTk1hMJfW1y+7wv1+LGFA9xYWsxwmE6rL6EB0wu8uFg@mail.gmail.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
	<62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
	<CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>
	<40F3B374-33D2-435B-83FC-4B39E3C62D0E@markoheijnen.nl>
	<CAJxFMSDueNmS6CQu75qY-ZYjZ7+U98HT4uyGJGYiLGuShu-sng@mail.gmail.com>
	<CABmkrsFxTk1hMJfW1y+7wv1+LGFA9xYWsxwmE6rL6EB0wu8uFg@mail.gmail.com>
Message-ID: <5148ADD7.50604@armeda.com>

Removing the version info will not stop attackers using automated 
mechanisms looking for known vulnerabilities, removing it would 
encourage obscure practices with minimal positive impact. If the 
argument is you're going to stop a couple script kiddies, then sure, it 
can slightly reduce your risk, please focus on my use of slightly. 
Beyond that, don't be fooled to think this will prohibit attackers from 
learning what vulnerabilities are running on your WordPress install, 
that in itself is an obscure line of thinking. This is the nature of 
having software online, there's inherit risk of attack, the percentage 
of risk will never be zero!

Simon: Although I don't think it would send a clear picture to typical 
users, the need to educate on the importance of upgrading is indeed the 
bigger challenge here! We need to make it higher priority in terms of 
awareness and notifying users that being outdated can cause them further 
issue and frustration. This isn't a WordPress problem per se, but 
WordPress surely gets blamed as the "insecure" piece of the puzzle.


Thanks,
Dre Armeda
@dremeda

> Sinan <mailto:sinan at sinanisler.com>
> March 19, 2013 11:15 AM
> Thanks for joining conversation.
>
> Some people understand me thank you guys ;)
>
>
>
> 2013/3/19 Simon Blackbourn <piemanek at gmail.com>
>
>
>
>
> Simon Blackbourn <mailto:piemanek at gmail.com>
> March 19, 2013 10:52 AM
> whether removing the version number from the header makes it easier or not
> for your site to get hacked is irrelevant.
>
> far more important is that it would send a clear message to users saying
> "it doesn't matter if you don't upgrade because no one will know". that's
> the exact opposite of the message they should be getting.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> Marko Heijnen <mailto:mailing at markoheijnen.nl>
> March 19, 2013 10:01 AM
> Hey Sinan, That is saying more about you then me.
>
>
> Dobri:
> Obviously WordPress had security risks. Just like every other platform 
> but showing the version number in the head doesn't make a difference.
> Also if I'm correct most of the recent vulnerabilities where for 
> registered users. Things they could do but shouldn't be able.
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> Sinan <mailto:sinan at sinanisler.com>
> March 19, 2013 9:58 AM
> @Marko Heijnen
>
> I dont have respond to that.
>
>
> 2013/3/19 Marko Heijnen <mailing at markoheijnen.nl>
>
>
>
>
> Marko Heijnen <mailto:mailing at markoheijnen.nl>
> March 19, 2013 9:55 AM
> This isn't a security risk at all. If you think bots check your 
> version then you are wrong. Also WordPress isn't the security risk. 
> The plugin you are using are.
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From sinan at sinanisler.com  Tue Mar 19 18:35:45 2013
From: sinan at sinanisler.com (Sinan)
Date: Tue, 19 Mar 2013 20:35:45 +0200
Subject: [wp-hackers] WordPress Should Delete WP Version information on
	head
In-Reply-To: <5148ADD7.50604@armeda.com>
References: <CABmkrsGQ+xpoNmeRSTTWXd_OCjCegGNp4vVL87OmLD9scSr3cA@mail.gmail.com>
	<4BAA1EF8-7AD9-45A3-A81E-DE5B3E2E06B7@ramapo.edu>
	<62EB0746-04D3-43CF-80CC-0DC4DBD1ADCE@markoheijnen.nl>
	<CABmkrsGs5f_qcMbu4iZhkx4b1Qb0YtP5DWuQFJdv3UCXutmV=Q@mail.gmail.com>
	<40F3B374-33D2-435B-83FC-4B39E3C62D0E@markoheijnen.nl>
	<CAJxFMSDueNmS6CQu75qY-ZYjZ7+U98HT4uyGJGYiLGuShu-sng@mail.gmail.com>
	<CABmkrsFxTk1hMJfW1y+7wv1+LGFA9xYWsxwmE6rL6EB0wu8uFg@mail.gmail.com>
	<5148ADD7.50604@armeda.com>
Message-ID: <CABmkrsHRd2hm=J+-Ec4rJ6oGTAWBUxNUDYMgvR84QXvPqYw-yA@mail.gmail.com>

"This is the nature of having software online, there's inherit risk of
attack, the percentage of risk will never be zero!"
Agree


2013/3/19 Dre Armeda <dre at armeda.com>

> Removing the version info will not stop attackers using automated
> mechanisms looking for known vulnerabilities, removing it would encourage
> obscure practices with minimal positive impact. If the argument is you're
> going to stop a couple script kiddies, then sure, it can slightly reduce
> your risk, please focus on my use of slightly. Beyond that, don't be fooled
> to think this will prohibit attackers from learning what vulnerabilities
> are running on your WordPress install, that in itself is an obscure line of
> thinking. This is the nature of having software online, there's inherit
> risk of attack, the percentage of risk will never be zero!
>
> Simon: Although I don't think it would send a clear picture to typical
> users, the need to educate on the importance of upgrading is indeed the
> bigger challenge here! We need to make it higher priority in terms of
> awareness and notifying users that being outdated can cause them further
> issue and frustration. This isn't a WordPress problem per se, but WordPress
> surely gets blamed as the "insecure" piece of the puzzle.
>
>
> Thanks,
> Dre Armeda
> @dremeda
>
>  Sinan <mailto:sinan at sinanisler.com>
>> March 19, 2013 11:15 AM
>>
>> Thanks for joining conversation.
>>
>> Some people understand me thank you guys ;)
>>
>>
>>
>> 2013/3/19 Simon Blackbourn <piemanek at gmail.com>
>>
>>
>>
>>
>> Simon Blackbourn <mailto:piemanek at gmail.com>
>> March 19, 2013 10:52 AM
>>
>> whether removing the version number from the header makes it easier or not
>> for your site to get hacked is irrelevant.
>>
>> far more important is that it would send a clear message to users saying
>> "it doesn't matter if you don't upgrade because no one will know". that's
>> the exact opposite of the message they should be getting.
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>> Marko Heijnen <mailto:mailing at markoheijnen.**nl <mailing at markoheijnen.nl>
>> >
>> March 19, 2013 10:01 AM
>>
>> Hey Sinan, That is saying more about you then me.
>>
>>
>> Dobri:
>> Obviously WordPress had security risks. Just like every other platform
>> but showing the version number in the head doesn't make a difference.
>> Also if I'm correct most of the recent vulnerabilities where for
>> registered users. Things they could do but shouldn't be able.
>>
>>
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>> Sinan <mailto:sinan at sinanisler.com>
>> March 19, 2013 9:58 AM
>>
>> @Marko Heijnen
>>
>> I dont have respond to that.
>>
>>
>> 2013/3/19 Marko Heijnen <mailing at markoheijnen.nl>
>>
>>
>>
>>
>> Marko Heijnen <mailto:mailing at markoheijnen.**nl <mailing at markoheijnen.nl>
>> >
>> March 19, 2013 9:55 AM
>>
>> This isn't a security risk at all. If you think bots check your version
>> then you are wrong. Also WordPress isn't the security risk. The plugin you
>> are using are.
>>
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From suave117 at gmail.com  Tue Mar 19 19:32:01 2013
From: suave117 at gmail.com (Peter Valenzuela)
Date: Tue, 19 Mar 2013 12:32:01 -0700
Subject: [wp-hackers] potential buyer
Message-ID: <CAPORUVO3-rRiLBr812rtcA+=mM6GQRyOmwxX8=gvLurB8+4biQ@mail.gmail.com>

I would like a list of legit hackers doing business in WU transfers, & bank
transfer. If you have a list please send it to me.

Thank you

From brad at bradparbs.com  Tue Mar 19 19:34:04 2013
From: brad at bradparbs.com (Brad Parbs)
Date: Tue, 19 Mar 2013 14:34:04 -0500
Subject: [wp-hackers] potential buyer
In-Reply-To: <CAPORUVO3-rRiLBr812rtcA+=mM6GQRyOmwxX8=gvLurB8+4biQ@mail.gmail.com>
References: <CAPORUVO3-rRiLBr812rtcA+=mM6GQRyOmwxX8=gvLurB8+4biQ@mail.gmail.com>
Message-ID: <5148BDAC.7070500@bradparbs.com>

This is not the list you're looking for.

Please do not email this mailing list regarding this.

Peter Valenzuela wrote:
>
> I would like a list of legit hackers doing business in WU transfers,& bank
> transfer. If you have a list please send it to me.
>
> Thank you
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Tue Mar 19 19:59:58 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 19 Mar 2013 14:59:58 -0500
Subject: [wp-hackers] potential buyer
In-Reply-To: <5148BDAC.7070500@bradparbs.com>
References: <CAPORUVO3-rRiLBr812rtcA+=mM6GQRyOmwxX8=gvLurB8+4biQ@mail.gmail.com>
	<5148BDAC.7070500@bradparbs.com>
Message-ID: <CAD-Fghwvf_3ZB990BOzcUZY4yT2gnuLrB+FCE=jmOw1eFH0UBQ@mail.gmail.com>

On Tue, Mar 19, 2013 at 2:34 PM, Brad Parbs <brad at bradparbs.com> wrote:
> This is not the list you're looking for.
>
> Please do not email this mailing list regarding this.

Don't bother responding to these sorts of emails. When we see them
made on the lists, we simply unsubscribe the user in question. No need
to fill up the list with replies to that sort of thing as well.

-Otto

From chris at clwill.com  Wed Mar 20 18:19:11 2013
From: chris at clwill.com (Chris Williams)
Date: Wed, 20 Mar 2013 14:19:11 -0400
Subject: [wp-hackers] Admin Login Brute Force Attacks
Message-ID: <CD6F4BAF.22934%chris@clwill.com>

I have about a dozen WP sites that I manage, and recently experienced a break-in on many of them.  After a bunch of work I located all the hacked files (virtually every index.php, header.php, footer.php, and functions.php they could find) along with some cute additions to wp-includes, and cleaned up the sites.  Was annoying, especially since the attack got the sites listed on AVG's threat labs for 30 days.  Ugh...  But that's behind me.

I rigorously keep them up to date (see other thread) in all but one case where updates are prevented by dependencies.  Nonetheless, the sites are under constant attack (lately from one especially tenacious IP address in Russia) attempting brute force attacks on the admin account.  I believe this is how access was gained.  Since this attack I have:

 *   Removed the "admin" account in favor of another username with admin privs.  Should have done this ages ago, of course
 *   Gone with much more robust (and different per site -- doh!) passwords for the account with admin privs
 *   Set the config parameter to remove file editing capability (I believe this is how the files were changed)
 *   Installed the "exploit scanner" plug-in and review it at least weekly
 *   Installed the "limit login attempts" plug-in and have it send me lockout information

Since I have taken these measures, the sites have been clean.  Still, the sites are under attack, and I get daily notices from "limit login attempts" of IPs being locked out due to repeated attempts to login to "admin".  They get four tries, after that they get an hour timeout, if they get four hour timeouts, they are locked out for a day (and I get a notice).  At least one of my sites sends me a notice every day.  Often from this same IP.  At least I know they aren't getting more than 16 tries a day :)

Of course, I could simply put this IP in the .htaccess file, and I will likely do that if s/he doesn't give up here soon.  But this has me thinking about what WP could do in core to improve defense against brute force attacks against accounts with administrator privileges.

I'd like to see WP have as core functionality at least two things:

 1.  Limiting of login attempts.  Virtually every system that uses username/password to control access has some limit on attempts.  They vary widely, but the approach the "limit login attempts" plugin uses is pretty good.  I'd like to see this in core.
 2.  Some recording of logins, at the very least "last login date/time" per user.  So when you are logged in, up there near "Howdy" would be "last login at: xxx".  If this had been in place, like it is on my bank account and many other places (that I check every time I log in), I would likely have noticed the brute force break-in days sooner and limited the damage.

As someone on the other thread noted, WP has done a great job of closing up vulnerabilities, but literally every WP site on the planet (all 60,000,000 of them) is vulnerable to brute force attacks.  These seem like small, relatively easy measures to help defend against them.

Chris

From niladam at gmail.com  Wed Mar 20 18:49:40 2013
From: niladam at gmail.com (madalin)
Date: Wed, 20 Mar 2013 20:49:40 +0200
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CD6F4BAF.22934%chris@clwill.com>
References: <CD6F4BAF.22934%chris@clwill.com>
Message-ID: <CAC7r6rVfdkSZc5cxAc7qnDUsTFtcn=d0TiYmjaNBdRuVv0_f4w@mail.gmail.com>

+1


On Wed, Mar 20, 2013 at 8:19 PM, Chris Williams <chris at clwill.com> wrote:

> I have about a dozen WP sites that I manage, and recently experienced a
> break-in on many of them.  After a bunch of work I located all the hacked
> files (virtually every index.php, header.php, footer.php, and functions.php
> they could find) along with some cute additions to wp-includes, and cleaned
> up the sites.  Was annoying, especially since the attack got the sites
> listed on AVG's threat labs for 30 days.  Ugh...  But that's behind me.
>
> I rigorously keep them up to date (see other thread) in all but one case
> where updates are prevented by dependencies.  Nonetheless, the sites are
> under constant attack (lately from one especially tenacious IP address in
> Russia) attempting brute force attacks on the admin account.  I believe
> this is how access was gained.  Since this attack I have:
>
>  *   Removed the "admin" account in favor of another username with admin
> privs.  Should have done this ages ago, of course
>  *   Gone with much more robust (and different per site -- doh!) passwords
> for the account with admin privs
>  *   Set the config parameter to remove file editing capability (I believe
> this is how the files were changed)
>  *   Installed the "exploit scanner" plug-in and review it at least weekly
>  *   Installed the "limit login attempts" plug-in and have it send me
> lockout information
>
> Since I have taken these measures, the sites have been clean.  Still, the
> sites are under attack, and I get daily notices from "limit login attempts"
> of IPs being locked out due to repeated attempts to login to "admin".  They
> get four tries, after that they get an hour timeout, if they get four hour
> timeouts, they are locked out for a day (and I get a notice).  At least one
> of my sites sends me a notice every day.  Often from this same IP.  At
> least I know they aren't getting more than 16 tries a day :)
>
> Of course, I could simply put this IP in the .htaccess file, and I will
> likely do that if s/he doesn't give up here soon.  But this has me thinking
> about what WP could do in core to improve defense against brute force
> attacks against accounts with administrator privileges.
>
> I'd like to see WP have as core functionality at least two things:
>
>  1.  Limiting of login attempts.  Virtually every system that uses
> username/password to control access has some limit on attempts.  They vary
> widely, but the approach the "limit login attempts" plugin uses is pretty
> good.  I'd like to see this in core.
>  2.  Some recording of logins, at the very least "last login date/time"
> per user.  So when you are logged in, up there near "Howdy" would be "last
> login at: xxx".  If this had been in place, like it is on my bank account
> and many other places (that I check every time I log in), I would likely
> have noticed the brute force break-in days sooner and limited the damage.
>
> As someone on the other thread noted, WP has done a great job of closing
> up vulnerabilities, but literally every WP site on the planet (all
> 60,000,000 of them) is vulnerable to brute force attacks.  These seem like
> small, relatively easy measures to help defend against them.
>
> Chris
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Cu drag,
madalin
http://madalin.eu

From alexrayan69 at gmail.com  Wed Mar 20 18:54:56 2013
From: alexrayan69 at gmail.com (Alex Rayan)
Date: Wed, 20 Mar 2013 14:54:56 -0400
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CD6F4BAF.22934%chris@clwill.com>
References: <CD6F4BAF.22934%chris@clwill.com>
Message-ID: <CA+fCkBsOkFVHJxnyX+6BcM2ZE6CbAAg_pfErXvtaKc9DCDR0JA@mail.gmail.com>

Hi Chris,

I'm also managing dozens of Wordpress instances and have "limit login
attempts" installed on most of these sites. I also disabled the error
message that is displayed on incorrect username / password attempt by
default since this message shows specifically what (username or password)
was incorrect.
With that disabled brute force attacks are pretty useless with a strong
username / password combination so one wouldn't need to worry about that.
I also have "Activity Monitor" plugin installed that allows you to monitor
selectively what activity happened in the backend including login attempts
with incorrect passwords and usernames tried.
Most of the logs of Activity Monitor show that the first and only username
tried in brute force attacks is "admin". And since the error message for
incorrect login is disabled, there is no way for the code to know that
"admin" username doesn't exist, so the code usually keeps trying to "guess"
the password for the username "admin".
In short, brute force attacks is a common occurrence, but by disabling the
error message we could significantly limit the possibility of "guessing"
the right username / password combination.

Best regards,
Alex


On Wed, Mar 20, 2013 at 2:19 PM, Chris Williams <chris at clwill.com> wrote:

> I have about a dozen WP sites that I manage, and recently experienced a
> break-in on many of them.  After a bunch of work I located all the hacked
> files (virtually every index.php, header.php, footer.php, and functions.php
> they could find) along with some cute additions to wp-includes, and cleaned
> up the sites.  Was annoying, especially since the attack got the sites
> listed on AVG's threat labs for 30 days.  Ugh...  But that's behind me.
>
> I rigorously keep them up to date (see other thread) in all but one case
> where updates are prevented by dependencies.  Nonetheless, the sites are
> under constant attack (lately from one especially tenacious IP address in
> Russia) attempting brute force attacks on the admin account.  I believe
> this is how access was gained.  Since this attack I have:
>
>  *   Removed the "admin" account in favor of another username with admin
> privs.  Should have done this ages ago, of course
>  *   Gone with much more robust (and different per site -- doh!) passwords
> for the account with admin privs
>  *   Set the config parameter to remove file editing capability (I believe
> this is how the files were changed)
>  *   Installed the "exploit scanner" plug-in and review it at least weekly
>  *   Installed the "limit login attempts" plug-in and have it send me
> lockout information
>
> Since I have taken these measures, the sites have been clean.  Still, the
> sites are under attack, and I get daily notices from "limit login attempts"
> of IPs being locked out due to repeated attempts to login to "admin".  They
> get four tries, after that they get an hour timeout, if they get four hour
> timeouts, they are locked out for a day (and I get a notice).  At least one
> of my sites sends me a notice every day.  Often from this same IP.  At
> least I know they aren't getting more than 16 tries a day :)
>
> Of course, I could simply put this IP in the .htaccess file, and I will
> likely do that if s/he doesn't give up here soon.  But this has me thinking
> about what WP could do in core to improve defense against brute force
> attacks against accounts with administrator privileges.
>
> I'd like to see WP have as core functionality at least two things:
>
>  1.  Limiting of login attempts.  Virtually every system that uses
> username/password to control access has some limit on attempts.  They vary
> widely, but the approach the "limit login attempts" plugin uses is pretty
> good.  I'd like to see this in core.
>  2.  Some recording of logins, at the very least "last login date/time"
> per user.  So when you are logged in, up there near "Howdy" would be "last
> login at: xxx".  If this had been in place, like it is on my bank account
> and many other places (that I check every time I log in), I would likely
> have noticed the brute force break-in days sooner and limited the damage.
>
> As someone on the other thread noted, WP has done a great job of closing
> up vulnerabilities, but literally every WP site on the planet (all
> 60,000,000 of them) is vulnerable to brute force attacks.  These seem like
> small, relatively easy measures to help defend against them.
>
> Chris
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jartes at gmail.com  Wed Mar 20 19:09:04 2013
From: jartes at gmail.com (=?utf-8?Q?Joan_Art=C3=A9s?=)
Date: Wed, 20 Mar 2013 20:09:04 +0100
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CA+fCkBsOkFVHJxnyX+6BcM2ZE6CbAAg_pfErXvtaKc9DCDR0JA@mail.gmail.com>
References: <CD6F4BAF.22934%chris@clwill.com>
	<CA+fCkBsOkFVHJxnyX+6BcM2ZE6CbAAg_pfErXvtaKc9DCDR0JA@mail.gmail.com>
Message-ID: <E26E4D18-799D-4B16-9AC6-1F2A4D833F00@gmail.com>

Hi!

I also recommend the Firewall 2 Plugin (http://wordpress.org/extend/plugins/wordpress-firewall-2/) to avoid sql injection attacks and more. 

I know that this plugin is not updated since 2010 but it works and does his job (I have installed over 100 sites).

Regards,

Joan Art?s 
http://joanartes.com

El 20/03/2013, a las 19:54, Alex Rayan <alexrayan69 at gmail.com> escribi?:

> Hi Chris,
> 
> I'm also managing dozens of Wordpress instances and have "limit login
> attempts" installed on most of these sites. I also disabled the error
> message that is displayed on incorrect username / password attempt by
> default since this message shows specifically what (username or password)
> was incorrect.
> With that disabled brute force attacks are pretty useless with a strong
> username / password combination so one wouldn't need to worry about that.
> I also have "Activity Monitor" plugin installed that allows you to monitor
> selectively what activity happened in the backend including login attempts
> with incorrect passwords and usernames tried.
> Most of the logs of Activity Monitor show that the first and only username
> tried in brute force attacks is "admin". And since the error message for
> incorrect login is disabled, there is no way for the code to know that
> "admin" username doesn't exist, so the code usually keeps trying to "guess"
> the password for the username "admin".
> In short, brute force attacks is a common occurrence, but by disabling the
> error message we could significantly limit the possibility of "guessing"
> the right username / password combination.
> 
> Best regards,
> Alex
> 
> 
> On Wed, Mar 20, 2013 at 2:19 PM, Chris Williams <chris at clwill.com> wrote:
> 
>> I have about a dozen WP sites that I manage, and recently experienced a
>> break-in on many of them.  After a bunch of work I located all the hacked
>> files (virtually every index.php, header.php, footer.php, and functions.php
>> they could find) along with some cute additions to wp-includes, and cleaned
>> up the sites.  Was annoying, especially since the attack got the sites
>> listed on AVG's threat labs for 30 days.  Ugh...  But that's behind me.
>> 
>> I rigorously keep them up to date (see other thread) in all but one case
>> where updates are prevented by dependencies.  Nonetheless, the sites are
>> under constant attack (lately from one especially tenacious IP address in
>> Russia) attempting brute force attacks on the admin account.  I believe
>> this is how access was gained.  Since this attack I have:
>> 
>> *   Removed the "admin" account in favor of another username with admin
>> privs.  Should have done this ages ago, of course
>> *   Gone with much more robust (and different per site -- doh!) passwords
>> for the account with admin privs
>> *   Set the config parameter to remove file editing capability (I believe
>> this is how the files were changed)
>> *   Installed the "exploit scanner" plug-in and review it at least weekly
>> *   Installed the "limit login attempts" plug-in and have it send me
>> lockout information
>> 
>> Since I have taken these measures, the sites have been clean.  Still, the
>> sites are under attack, and I get daily notices from "limit login attempts"
>> of IPs being locked out due to repeated attempts to login to "admin".  They
>> get four tries, after that they get an hour timeout, if they get four hour
>> timeouts, they are locked out for a day (and I get a notice).  At least one
>> of my sites sends me a notice every day.  Often from this same IP.  At
>> least I know they aren't getting more than 16 tries a day :)
>> 
>> Of course, I could simply put this IP in the .htaccess file, and I will
>> likely do that if s/he doesn't give up here soon.  But this has me thinking
>> about what WP could do in core to improve defense against brute force
>> attacks against accounts with administrator privileges.
>> 
>> I'd like to see WP have as core functionality at least two things:
>> 
>> 1.  Limiting of login attempts.  Virtually every system that uses
>> username/password to control access has some limit on attempts.  They vary
>> widely, but the approach the "limit login attempts" plugin uses is pretty
>> good.  I'd like to see this in core.
>> 2.  Some recording of logins, at the very least "last login date/time"
>> per user.  So when you are logged in, up there near "Howdy" would be "last
>> login at: xxx".  If this had been in place, like it is on my bank account
>> and many other places (that I check every time I log in), I would likely
>> have noticed the brute force break-in days sooner and limited the damage.
>> 
>> As someone on the other thread noted, WP has done a great job of closing
>> up vulnerabilities, but literally every WP site on the planet (all
>> 60,000,000 of them) is vulnerable to brute force attacks.  These seem like
>> small, relatively easy measures to help defend against them.
>> 
>> Chris
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From webdev at ms-studio.net  Wed Mar 20 19:25:44 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Wed, 20 Mar 2013 20:25:44 +0100
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <E26E4D18-799D-4B16-9AC6-1F2A4D833F00@gmail.com>
References: <CD6F4BAF.22934%chris@clwill.com>
	<CA+fCkBsOkFVHJxnyX+6BcM2ZE6CbAAg_pfErXvtaKc9DCDR0JA@mail.gmail.com>
	<E26E4D18-799D-4B16-9AC6-1F2A4D833F00@gmail.com>
Message-ID: <CAHBjUcQAcAdr5Za85H821v1_XQwkCcdKqZow1=+ak2QKMCOOgA@mail.gmail.com>

Indeed, in my limited understanding of security, I would welcome some
tightened security rules that would at least prevent beginner users
from creating an "admin" account in the first place. And would force
users to set a "public" name different from their login.

A few days ago, French WP security expert Julio Poitier published this
plugin, that takes care of exactly those problems. It also obfuscates
the author ID number on author pages.
http://wordpress.org/extend/plugins/user-name-security/

On Wed, Mar 20, 2013 at 8:09 PM, Joan Art?s <jartes at gmail.com> wrote:
> Hi!
>
> I also recommend the Firewall 2 Plugin (http://wordpress.org/extend/plugins/wordpress-firewall-2/) to avoid sql injection attacks and more.
>
> I know that this plugin is not updated since 2010 but it works and does his job (I have installed over 100 sites).
>
> Regards,
>
> Joan Art?s
> http://joanartes.com
>

From mailing at markoheijnen.nl  Wed Mar 20 19:33:42 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Wed, 20 Mar 2013 20:33:42 +0100
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <E26E4D18-799D-4B16-9AC6-1F2A4D833F00@gmail.com>
References: <CD6F4BAF.22934%chris@clwill.com>
	<CA+fCkBsOkFVHJxnyX+6BcM2ZE6CbAAg_pfErXvtaKc9DCDR0JA@mail.gmail.com>
	<E26E4D18-799D-4B16-9AC6-1F2A4D833F00@gmail.com>
Message-ID: <05E12F94-BBCF-4238-AFBD-BA09EEB055CA@markoheijnen.nl>

Hey,

I wouldn't recommend this plugin. You only need it when you don't trust the plugins you are using. For me it would give me fake trust that everything is more safe.
The reasons is that most things aren't needed or fixed in the wrong place. Executable file uploads can't be done or can be fixed by using filters.
Also PHP files in the upload folder shouldn't be executable at all. You can solve that with .htaccess or nginx rules.

You are already doing one thing good and that is limiting the amount of failed logins. You still can force better passwords.
That is also something WordPress by default should do. In my case I'm running a network site and will implement an IP check for all super admin accounts.
But yeah something like that would be for plugins to take care off.

Marko

Op 20 mrt. 2013, om 20:09 heeft Joan Art?s <jartes at gmail.com> het volgende geschreven:

> Hi!
> 
> I also recommend the Firewall 2 Plugin (http://wordpress.org/extend/plugins/wordpress-firewall-2/) to avoid sql injection attacks and more. 
> 
> I know that this plugin is not updated since 2010 but it works and does his job (I have installed over 100 sites).
> 
> Regards,
> 
> Joan Art?s 
> http://joanartes.com
> 
> El 20/03/2013, a las 19:54, Alex Rayan <alexrayan69 at gmail.com> escribi?:
> 
>> Hi Chris,
>> 
>> I'm also managing dozens of Wordpress instances and have "limit login
>> attempts" installed on most of these sites. I also disabled the error
>> message that is displayed on incorrect username / password attempt by
>> default since this message shows specifically what (username or password)
>> was incorrect.
>> With that disabled brute force attacks are pretty useless with a strong
>> username / password combination so one wouldn't need to worry about that.
>> I also have "Activity Monitor" plugin installed that allows you to monitor
>> selectively what activity happened in the backend including login attempts
>> with incorrect passwords and usernames tried.
>> Most of the logs of Activity Monitor show that the first and only username
>> tried in brute force attacks is "admin". And since the error message for
>> incorrect login is disabled, there is no way for the code to know that
>> "admin" username doesn't exist, so the code usually keeps trying to "guess"
>> the password for the username "admin".
>> In short, brute force attacks is a common occurrence, but by disabling the
>> error message we could significantly limit the possibility of "guessing"
>> the right username / password combination.
>> 
>> Best regards,
>> Alex
>> 
>> 
>> On Wed, Mar 20, 2013 at 2:19 PM, Chris Williams <chris at clwill.com> wrote:
>> 
>>> I have about a dozen WP sites that I manage, and recently experienced a
>>> break-in on many of them.  After a bunch of work I located all the hacked
>>> files (virtually every index.php, header.php, footer.php, and functions.php
>>> they could find) along with some cute additions to wp-includes, and cleaned
>>> up the sites.  Was annoying, especially since the attack got the sites
>>> listed on AVG's threat labs for 30 days.  Ugh...  But that's behind me.
>>> 
>>> I rigorously keep them up to date (see other thread) in all but one case
>>> where updates are prevented by dependencies.  Nonetheless, the sites are
>>> under constant attack (lately from one especially tenacious IP address in
>>> Russia) attempting brute force attacks on the admin account.  I believe
>>> this is how access was gained.  Since this attack I have:
>>> 
>>> *   Removed the "admin" account in favor of another username with admin
>>> privs.  Should have done this ages ago, of course
>>> *   Gone with much more robust (and different per site -- doh!) passwords
>>> for the account with admin privs
>>> *   Set the config parameter to remove file editing capability (I believe
>>> this is how the files were changed)
>>> *   Installed the "exploit scanner" plug-in and review it at least weekly
>>> *   Installed the "limit login attempts" plug-in and have it send me
>>> lockout information
>>> 
>>> Since I have taken these measures, the sites have been clean.  Still, the
>>> sites are under attack, and I get daily notices from "limit login attempts"
>>> of IPs being locked out due to repeated attempts to login to "admin".  They
>>> get four tries, after that they get an hour timeout, if they get four hour
>>> timeouts, they are locked out for a day (and I get a notice).  At least one
>>> of my sites sends me a notice every day.  Often from this same IP.  At
>>> least I know they aren't getting more than 16 tries a day :)
>>> 
>>> Of course, I could simply put this IP in the .htaccess file, and I will
>>> likely do that if s/he doesn't give up here soon.  But this has me thinking
>>> about what WP could do in core to improve defense against brute force
>>> attacks against accounts with administrator privileges.
>>> 
>>> I'd like to see WP have as core functionality at least two things:
>>> 
>>> 1.  Limiting of login attempts.  Virtually every system that uses
>>> username/password to control access has some limit on attempts.  They vary
>>> widely, but the approach the "limit login attempts" plugin uses is pretty
>>> good.  I'd like to see this in core.
>>> 2.  Some recording of logins, at the very least "last login date/time"
>>> per user.  So when you are logged in, up there near "Howdy" would be "last
>>> login at: xxx".  If this had been in place, like it is on my bank account
>>> and many other places (that I check every time I log in), I would likely
>>> have noticed the brute force break-in days sooner and limited the damage.
>>> 
>>> As someone on the other thread noted, WP has done a great job of closing
>>> up vulnerabilities, but literally every WP site on the planet (all
>>> 60,000,000 of them) is vulnerable to brute force attacks.  These seem like
>>> small, relatively easy measures to help defend against them.
>>> 
>>> Chris
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From ian at iandunn.name  Wed Mar 20 20:29:25 2013
From: ian at iandunn.name (Ian Dunn)
Date: Wed, 20 Mar 2013 13:29:25 -0700
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <05E12F94-BBCF-4238-AFBD-BA09EEB055CA@markoheijnen.nl>
References: <CD6F4BAF.22934%chris@clwill.com>
	<CA+fCkBsOkFVHJxnyX+6BcM2ZE6CbAAg_pfErXvtaKc9DCDR0JA@mail.gmail.com>
	<E26E4D18-799D-4B16-9AC6-1F2A4D833F00@gmail.com>
	<05E12F94-BBCF-4238-AFBD-BA09EEB055CA@markoheijnen.nl>
Message-ID: <514A1C25.8080206@iandunn.name>

#21737 will tighten password rules.

IMHO, Login Security Solution is a much more sophisticated plugin to 
block brute force attempts than Limit Login Attempts, Login Lock, Login 
Lockdown, etc. It also can enforce password requirements.

http://wordpress.org/extend/plugins/login-security-solution/


On 03/20/2013 12:33 PM, Marko Heijnen wrote:
> Hey,
>
> I wouldn't recommend this plugin. You only need it when you don't trust the plugins you are using. For me it would give me fake trust that everything is more safe.
> The reasons is that most things aren't needed or fixed in the wrong place. Executable file uploads can't be done or can be fixed by using filters.
> Also PHP files in the upload folder shouldn't be executable at all. You can solve that with .htaccess or nginx rules.
>
> You are already doing one thing good and that is limiting the amount of failed logins. You still can force better passwords.
> That is also something WordPress by default should do. In my case I'm running a network site and will implement an IP check for all super admin accounts.
> But yeah something like that would be for plugins to take care off.
>
> Marko
>
> Op 20 mrt. 2013, om 20:09 heeft Joan Art?s <jartes at gmail.com> het volgende geschreven:
>
>


From chris at clwill.com  Wed Mar 20 21:44:07 2013
From: chris at clwill.com (Chris Williams)
Date: Wed, 20 Mar 2013 17:44:07 -0400
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <514A1C25.8080206@iandunn.name>
Message-ID: <CD6F7995.22951%chris@clwill.com>

Stricter password rules have virtually no effect on brute force attacks,
they simply infuriate legitimate users.

The two proposals I made will dramatically reduce the effectiveness of
brute force attacks, and will increase the speed of their detection if
successful.  They will benefit every WP site, require no changes from
users, and benefit even those sites that still have an "admin" account or
those with sub-standard passwords.

If, as I have seen and has been noted by others, brute force attacks are
becoming a larger portion of WP threats, these two proposals are small,
relatively simple ways to defend every WP site against them.

On 3/20/13 1:29 PM, "Ian Dunn" <ian at iandunn.name> wrote:

>#21737 will tighten password rules.


From ian at iandunn.name  Wed Mar 20 22:21:13 2013
From: ian at iandunn.name (Ian Dunn)
Date: Wed, 20 Mar 2013 15:21:13 -0700
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CD6F7995.22951%chris@clwill.com>
References: <CD6F7995.22951%chris@clwill.com>
Message-ID: <514A3659.5080308@iandunn.name>

Do you mean they'll have no effect on preventing the login attempts, in 
the way that IP banning does? I'd agree with that, but I don't think 
that's the only way to have an effect.

The reason I thought it was relevant was because a simple password like 
"ilovefluffy" would take a script a few hours/days to crack, while a 
WP-generated password like "'}?(x${G9oYRM.7" would take years/decades 
(via HTTP, but obviously much less if they had the db hash).

I do think you make a good point about frustrating users, though, which 
can often have the unintended consequence of encouraging them to adopt 
insecure practices to make things more convenient for themselves (e.g., 
writing the new password on a stickynote because it's too complex to 
memorize.). For computer-literate users, I think encouraging them to use 
a password manager might be a good idea, but that would be too 
complicated for some beginners.


On 03/20/2013 02:44 PM, Chris Williams wrote:
> Stricter password rules have virtually no effect on brute force attacks,
> they simply infuriate legitimate users.
>
> On 3/20/13 1:29 PM, "Ian Dunn" <ian at iandunn.name> wrote:
>
>> #21737 will tighten password rules.

From mailing at markoheijnen.nl  Wed Mar 20 22:25:54 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Wed, 20 Mar 2013 23:25:54 +0100
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <514A3659.5080308@iandunn.name>
References: <CD6F7995.22951%chris@clwill.com> <514A3659.5080308@iandunn.name>
Message-ID: <E61956A8-8FE0-41AD-9832-DF36393A04C7@markoheijnen.nl>

I agree with Ian on this. A better password does really help. Also never had a client who was hacked dua a brute force attack.
However I had clients who where hacked because their computer was compromised. 


Op 20 mrt. 2013, om 23:21 heeft Ian Dunn <ian at iandunn.name> het volgende geschreven:

> Do you mean they'll have no effect on preventing the login attempts, in the way that IP banning does? I'd agree with that, but I don't think that's the only way to have an effect.
> 
> The reason I thought it was relevant was because a simple password like "ilovefluffy" would take a script a few hours/days to crack, while a WP-generated password like "'}?(x${G9oYRM.7" would take years/decades (via HTTP, but obviously much less if they had the db hash).
> 
> I do think you make a good point about frustrating users, though, which can often have the unintended consequence of encouraging them to adopt insecure practices to make things more convenient for themselves (e.g., writing the new password on a stickynote because it's too complex to memorize.). For computer-literate users, I think encouraging them to use a password manager might be a good idea, but that would be too complicated for some beginners.
> 
> 
> On 03/20/2013 02:44 PM, Chris Williams wrote:
>> Stricter password rules have virtually no effect on brute force attacks,
>> they simply infuriate legitimate users.
>> 
>> On 3/20/13 1:29 PM, "Ian Dunn" <ian at iandunn.name> wrote:
>> 
>>> #21737 will tighten password rules.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From zamoose at gmail.com  Wed Mar 20 22:30:11 2013
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 20 Mar 2013 18:30:11 -0400
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <514A3659.5080308@iandunn.name>
References: <CD6F7995.22951%chris@clwill.com> <514A3659.5080308@iandunn.name>
Message-ID: <CANFh3d6XRNgGUEAOM1HMmgdb1gGyi5nhmLrdeszuD_4+Mxa7tg@mail.gmail.com>

Correct horse battery staple.


On Wed, Mar 20, 2013 at 6:21 PM, Ian Dunn <ian at iandunn.name> wrote:

> Do you mean they'll have no effect on preventing the login attempts, in
> the way that IP banning does? I'd agree with that, but I don't think that's
> the only way to have an effect.
>
> The reason I thought it was relevant was because a simple password like
> "ilovefluffy" would take a script a few hours/days to crack, while a
> WP-generated password like "'}?(x${G9oYRM.7" would take years/decades (via
> HTTP, but obviously much less if they had the db hash).
>
> I do think you make a good point about frustrating users, though, which
> can often have the unintended consequence of encouraging them to adopt
> insecure practices to make things more convenient for themselves (e.g.,
> writing the new password on a stickynote because it's too complex to
> memorize.). For computer-literate users, I think encouraging them to use a
> password manager might be a good idea, but that would be too complicated
> for some beginners.
>
>
>
> On 03/20/2013 02:44 PM, Chris Williams wrote:
>
>> Stricter password rules have virtually no effect on brute force attacks,
>> they simply infuriate legitimate users.
>>
>> On 3/20/13 1:29 PM, "Ian Dunn" <ian at iandunn.name> wrote:
>>
>>  #21737 will tighten password rules.
>>>
>> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>



-- 
-Doug

From johnbillion+wp at gmail.com  Wed Mar 20 22:45:03 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Wed, 20 Mar 2013 22:45:03 +0000
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CANFh3d6XRNgGUEAOM1HMmgdb1gGyi5nhmLrdeszuD_4+Mxa7tg@mail.gmail.com>
References: <CD6F7995.22951%chris@clwill.com> <514A3659.5080308@iandunn.name>
	<CANFh3d6XRNgGUEAOM1HMmgdb1gGyi5nhmLrdeszuD_4+Mxa7tg@mail.gmail.com>
Message-ID: <CAOqAKWDMqF4b3oGpOgqHd+0Ymg44FvSXdptE44w6Bp5D6mcwDA@mail.gmail.com>

On 20 March 2013 22:30, Doug Stewart <zamoose at gmail.com> wrote:
> Correct horse battery staple.

In case anyone thinks Doug has gone bonkers, this is a reference to
this XKCD thread which quite neatly explains entropy in passwords:
http://xkcd.com/936/. Basically, length is the all-important factor in
password strength.

From chris at clwill.com  Wed Mar 20 23:00:11 2013
From: chris at clwill.com (Chris Williams)
Date: Wed, 20 Mar 2013 19:00:11 -0400
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <E61956A8-8FE0-41AD-9832-DF36393A04C7@markoheijnen.nl>
Message-ID: <CD6F8D51.2297F%chris@clwill.com>

Password strength is a non-issue if the system prevented attackers from
getting more than a few tries a day.


From ian at iandunn.name  Wed Mar 20 23:00:53 2013
From: ian at iandunn.name (Ian Dunn)
Date: Wed, 20 Mar 2013 16:00:53 -0700
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CAOqAKWDMqF4b3oGpOgqHd+0Ymg44FvSXdptE44w6Bp5D6mcwDA@mail.gmail.com>
References: <CD6F7995.22951%chris@clwill.com> <514A3659.5080308@iandunn.name>
	<CANFh3d6XRNgGUEAOM1HMmgdb1gGyi5nhmLrdeszuD_4+Mxa7tg@mail.gmail.com>
	<CAOqAKWDMqF4b3oGpOgqHd+0Ymg44FvSXdptE44w6Bp5D6mcwDA@mail.gmail.com>
Message-ID: <514A3FA5.4070802@iandunn.name>

I used to really like passphrases, but I don't think they're as strong 
today as they used to be. The XKCD example, for instance, only has 44 
bits of entropy, which is pretty weak by today's standards.

I decided to make the switch* to letting my password manager generate 
things like 8=%^MzUV+J.giQv)>$GbH{-w3"xhP6[YW#at?&jD, which have ~240 
bits. They're much stronger than passphrases, and more convenient too.

I do like passphrases for the master password on the password manager, 
though. And they're also great for users who can't/won't use a password 
manager.


* I wrote about it at 
http://iandunn.name/what-really-makes-a-password-strong/, and included 
lots of links to source materials, if anyone is interested.


On 03/20/2013 03:45 PM, John Blackbourn wrote:
> On 20 March 2013 22:30, Doug Stewart <zamoose at gmail.com> wrote:
>> Correct horse battery staple.
> In case anyone thinks Doug has gone bonkers, this is a reference to
> this XKCD thread which quite neatly explains entropy in passwords:
> http://xkcd.com/936/. Basically, length is the all-important factor in
> password strength.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From chris at clwill.com  Wed Mar 20 23:05:21 2013
From: chris at clwill.com (Chris Williams)
Date: Wed, 20 Mar 2013 19:05:21 -0400
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CAOqAKWDMqF4b3oGpOgqHd+0Ymg44FvSXdptE44w6Bp5D6mcwDA@mail.gmail.com>
Message-ID: <CD6F8E68.22984%chris@clwill.com>

And if you reduce the 1000 guesses/sec to 16 guesses a day, either of
these examples turn into millennia.

On 3/20/13 3:45 PM, "John Blackbourn" <johnbillion+wp at gmail.com> wrote:

>On 20 March 2013 22:30, Doug Stewart <zamoose at gmail.com> wrote:
>> Correct horse battery staple.
>
>In case anyone thinks Doug has gone bonkers, this is a reference to
>this XKCD thread which quite neatly explains entropy in passwords:
>http://xkcd.com/936/. Basically, length is the all-important factor in
>password strength.
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers


From chip at chipbennett.net  Wed Mar 20 23:10:37 2013
From: chip at chipbennett.net (Chip Bennett)
Date: Wed, 20 Mar 2013 19:10:37 -0400
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CD6F8E68.22984%chris@clwill.com>
References: <CAOqAKWDMqF4b3oGpOgqHd+0Ymg44FvSXdptE44w6Bp5D6mcwDA@mail.gmail.com>
	<CD6F8E68.22984%chris@clwill.com>
Message-ID: <CAPdLKqc9AP_gtwmFrcqSyt-KCtsuq9j_E+uiQgkswzdf7a_FOg@mail.gmail.com>

I use Limit Login Attempts, with escalated cooldown.

After the first 3 misses? You might be legit, but wait 5 minutes, anyway.

By the 12th miss? You're a dirty spammer. Come back in six months.

Also: I keep the "admin" account - reduced to the "subscriber" role. It
makes for a great honeypot.


On Wed, Mar 20, 2013 at 7:05 PM, Chris Williams <chris at clwill.com> wrote:

> And if you reduce the 1000 guesses/sec to 16 guesses a day, either of
> these examples turn into millennia.
>
> On 3/20/13 3:45 PM, "John Blackbourn" <johnbillion+wp at gmail.com> wrote:
>
> >On 20 March 2013 22:30, Doug Stewart <zamoose at gmail.com> wrote:
> >> Correct horse battery staple.
> >
> >In case anyone thinks Doug has gone bonkers, this is a reference to
> >this XKCD thread which quite neatly explains entropy in passwords:
> >http://xkcd.com/936/. Basically, length is the all-important factor in
> >password strength.
> >_______________________________________________
> >wp-hackers mailing list
> >wp-hackers at lists.automattic.com
> >http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Mar 20 23:21:03 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 20 Mar 2013 18:21:03 -0500
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CAPdLKqc9AP_gtwmFrcqSyt-KCtsuq9j_E+uiQgkswzdf7a_FOg@mail.gmail.com>
References: <CAOqAKWDMqF4b3oGpOgqHd+0Ymg44FvSXdptE44w6Bp5D6mcwDA@mail.gmail.com>
	<CD6F8E68.22984%chris@clwill.com>
	<CAPdLKqc9AP_gtwmFrcqSyt-KCtsuq9j_E+uiQgkswzdf7a_FOg@mail.gmail.com>
Message-ID: <CAD-Fghw83mT7ug6DtpoCg_B5LPGQrkug_=-xKcYdiKGen0-c9g@mail.gmail.com>

On Wed, Mar 20, 2013 at 6:10 PM, Chip Bennett <chip at chipbennett.net> wrote:
> Also: I keep the "admin" account - reduced to the "subscriber" role. It
> makes for a great honeypot.

Totally unnecessary. I have no "admin" account at all on my site. I
get the Limit Login Attempts email 8-12 times a day regardless. All
"admin" attempts.

-Otto

From chip at chipbennett.net  Thu Mar 21 00:00:10 2013
From: chip at chipbennett.net (Chip Bennett)
Date: Wed, 20 Mar 2013 20:00:10 -0400
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CAD-Fghw83mT7ug6DtpoCg_B5LPGQrkug_=-xKcYdiKGen0-c9g@mail.gmail.com>
References: <CAOqAKWDMqF4b3oGpOgqHd+0Ymg44FvSXdptE44w6Bp5D6mcwDA@mail.gmail.com>
	<CD6F8E68.22984%chris@clwill.com>
	<CAPdLKqc9AP_gtwmFrcqSyt-KCtsuq9j_E+uiQgkswzdf7a_FOg@mail.gmail.com>
	<CAD-Fghw83mT7ug6DtpoCg_B5LPGQrkug_=-xKcYdiKGen0-c9g@mail.gmail.com>
Message-ID: <CAPdLKqfVnsu1ro+cYuv_98hUO1bOWtNQR3DG146iT05b8q_L_A@mail.gmail.com>

Probably so, but:

1) I don't disable login failure messages
2) It's my own, private little joke


On Wed, Mar 20, 2013 at 7:21 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Mar 20, 2013 at 6:10 PM, Chip Bennett <chip at chipbennett.net>
> wrote:
> > Also: I keep the "admin" account - reduced to the "subscriber" role. It
> > makes for a great honeypot.
>
> Totally unnecessary. I have no "admin" account at all on my site. I
> get the Limit Login Attempts email 8-12 times a day regardless. All
> "admin" attempts.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Thu Mar 21 00:21:02 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 20 Mar 2013 19:21:02 -0500
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CAPdLKqfVnsu1ro+cYuv_98hUO1bOWtNQR3DG146iT05b8q_L_A@mail.gmail.com>
References: <CAOqAKWDMqF4b3oGpOgqHd+0Ymg44FvSXdptE44w6Bp5D6mcwDA@mail.gmail.com>
	<CD6F8E68.22984%chris@clwill.com>
	<CAPdLKqc9AP_gtwmFrcqSyt-KCtsuq9j_E+uiQgkswzdf7a_FOg@mail.gmail.com>
	<CAD-Fghw83mT7ug6DtpoCg_B5LPGQrkug_=-xKcYdiKGen0-c9g@mail.gmail.com>
	<CAPdLKqfVnsu1ro+cYuv_98hUO1bOWtNQR3DG146iT05b8q_L_A@mail.gmail.com>
Message-ID: <CAD-FghwqFP38LYMy5u1uqKSYAQDayp7GxrjYeFRmV7U6brh4Qw@mail.gmail.com>

On Wed, Mar 20, 2013 at 7:00 PM, Chip Bennett <chip at chipbennett.net> wrote:
> 1) I don't disable login failure messages

I don't either. No point, since clearly these brute-force attackers
are not using them in any real way. If they were, I wouldn't get
people trying to log in as "admin" when it clearly tells them "Invalid
Username".

Usernames aren't private information. People who think they should be
are missing the point or don't understand a few fundamental security
concepts.

-Otto

From info at a5d.org  Thu Mar 21 00:29:57 2013
From: info at a5d.org (Lee Rickler)
Date: Thu, 21 Mar 2013 00:29:57 +0000
Subject: [wp-hackers] limit images displayed in the media upload window ?
Message-ID: <A3AAB883-B8C9-4835-B668-6176C6AB347E@a5d.org>

Guys,

I'm working on what;s going to be a fairly substantial project and am having issues when placing featured images.

Pages (so far) = around 300
Media library (so far) = 229 images (all around 1 or 2mbs each)

When I access a page to add a featured image only 129 images (from the media library) are displayed in the 'set featured image' window.
If I then upload a new image/ save, the image shows up fine on the page and in the media library.
If I then go to another page and add a featured image the image I just uploaded isn't available in the SFI window even though it's clearly in the media library.
Searching for the image from within the SFI window brings up a blank/ not found.

Turned off all plugins and tried with twentytwelve theme - still the same issue.
I've even tried regenerating all the thumbnails etc but to no avail.

So, my question is (as I've never had this issue before) is there a limit to images displayed in the media upload window when adding a featured image?

As an aside, In the media library there is pagination and/ or you can change the amount on view (screen options tab > media items) but there's nothing like this on the set featured image window. or am I missing something?

Cheers,

Lee

From abdussamad at abdussamad.com  Thu Mar 21 03:06:08 2013
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Thu, 21 Mar 2013 08:06:08 +0500
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CD6F4BAF.22934%chris@clwill.com>
References: <CD6F4BAF.22934%chris@clwill.com>
Message-ID: <514A7920.9080301@abdussamad.com>

I do the blocking server side with fail2ban and a modified version of wp 
fail2ban plugin:

http://abdussamad.com/archives/616-Stop-Brute-Force-WordPress-Login-Attempts-with-Fail2Ban.html

The advantage of this approach is that if you have a multisite 
installation all failed login attempts at all sites are taken into 
account. Also it's more efficient to block at the firewall level than at 
the application level.


From halukkaramete at gmail.com  Thu Mar 21 04:14:03 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Wed, 20 Mar 2013 21:14:03 -0700
Subject: [wp-hackers] monitoring the new tag creation by non-admins
Message-ID: <CAHERW=2e2c4gt1eyY-Ck=KKoAkEVbdDLWSyghrFfNJcOPDoefQ@mail.gmail.com>

I'm trying to monitor the creation of the new tags when a non-admin or
non-editor submits a new post.
In another words, if a contributor or author submits a new post, I'd like
to mark the new tags somehow so that I can do some maintenance work.

For that I decided to use the prefix "newtag-" in front of those new tags.
So I can go the dashboard tags interface and search for "newtag-", and do
the maintenance.

Here is a scenario... assume that "apple" is an old tag, and joe the
contributor comes along and submits a new post with the tags "apple" and
"mango" attached to it.
I want that post to go as "apple" and "newtag-mango" automatically.

now... for this goal at hand, I set out with

add_filter('wp_insert_post_data', 'my_post_data_validator', '99');

function my_post_data_validator($data) {

}

In the function, I programmatically change the incoming $post_tags from
"apple,mango" to "apple,newtag-mango"
and then I run

$set_post_terms_result= wp_set_post_terms( $_POST['post_ID'],
$modified_tags, "post_tag", FALSE ); // where $modified_tags is equal to
"apple,newtag-mango"

but after this plug in runs, I do get the "newtag-mango"
created automatically on the fly. But unfortunately, WP goes ahead and uses
its own wp_set_post_terms somewhere down the road with the 3rd arg being
set to FALSE overwriting my own running of the wp_set_post_terms. It
obviously uses the original $_POST array and as a result, joe's post ends
up with "apple", & "mango".

What do I need to do so that WP completely forgets about the
wp_set_post_terms for the post_tags?

Another solution could be to tap into the "wp_insert_term" and change the
post tags thru a filter.  Maybe there is a filter to tell wp_insert_term
hey don;t use apple and mango, but go ahead with apple newtag-mango. Then
that would solve my problems.

but firstly, I cannot figure it out, and secondly, approaching to this
problem from these very angles may not be the best way to tackle this
issue.

Thus your help is greatly appreciated.

Thx.

From simon.weil at naturalint.com  Thu Mar 21 07:38:45 2013
From: simon.weil at naturalint.com (Simon Weil)
Date: Thu, 21 Mar 2013 09:38:45 +0200
Subject: [wp-hackers] Admin Login Brute Force Attacks
In-Reply-To: <CD6F4BAF.22934%chris@clwill.com>
References: <CD6F4BAF.22934%chris@clwill.com>
Message-ID: <CADxdhecH9ME40soeQ59Lpt24UDRmEU=JGHQg-ds87bh7jssDSg@mail.gmail.com>

I use the combination of 3 plugins that give me full security (up to date):
1. Better WP Security - Does all the things you wrote about and much more
2. Bullet proof security - protects via htaccess including the admin folders
3. wordfence - scans the plugins, theme and core files for changes against
the original repository

I hope this helps.

Simon


Have a great day!

*Simon Weil*
R&D Team Leader
*Natural Intelligence*
-
E-Mail:   simon.weil at naturalint.com
Skype:   simonweilni
-
<http://www.naturalint.com/>


On Wed, Mar 20, 2013 at 8:19 PM, Chris Williams <chris at clwill.com> wrote:

> I have about a dozen WP sites that I manage, and recently experienced a
> break-in on many of them.  After a bunch of work I located all the hacked
> files (virtually every index.php, header.php, footer.php, and functions.php
> they could find) along with some cute additions to wp-includes, and cleaned
> up the sites.  Was annoying, especially since the attack got the sites
> listed on AVG's threat labs for 30 days.  Ugh...  But that's behind me.
>
> I rigorously keep them up to date (see other thread) in all but one case
> where updates are prevented by dependencies.  Nonetheless, the sites are
> under constant attack (lately from one especially tenacious IP address in
> Russia) attempting brute force attacks on the admin account.  I believe
> this is how access was gained.  Since this attack I have:
>
>  *   Removed the "admin" account in favor of another username with admin
> privs.  Should have done this ages ago, of course
>  *   Gone with much more robust (and different per site -- doh!) passwords
> for the account with admin privs
>  *   Set the config parameter to remove file editing capability (I believe
> this is how the files were changed)
>  *   Installed the "exploit scanner" plug-in and review it at least weekly
>  *   Installed the "limit login attempts" plug-in and have it send me
> lockout information
>
> Since I have taken these measures, the sites have been clean.  Still, the
> sites are under attack, and I get daily notices from "limit login attempts"
> of IPs being locked out due to repeated attempts to login to "admin".  They
> get four tries, after that they get an hour timeout, if they get four hour
> timeouts, they are locked out for a day (and I get a notice).  At least one
> of my sites sends me a notice every day.  Often from this same IP.  At
> least I know they aren't getting more than 16 tries a day :)
>
> Of course, I could simply put this IP in the .htaccess file, and I will
> likely do that if s/he doesn't give up here soon.  But this has me thinking
> about what WP could do in core to improve defense against brute force
> attacks against accounts with administrator privileges.
>
> I'd like to see WP have as core functionality at least two things:
>
>  1.  Limiting of login attempts.  Virtually every system that uses
> username/password to control access has some limit on attempts.  They vary
> widely, but the approach the "limit login attempts" plugin uses is pretty
> good.  I'd like to see this in core.
>  2.  Some recording of logins, at the very least "last login date/time"
> per user.  So when you are logged in, up there near "Howdy" would be "last
> login at: xxx".  If this had been in place, like it is on my bank account
> and many other places (that I check every time I log in), I would likely
> have noticed the brute force break-in days sooner and limited the damage.
>
> As someone on the other thread noted, WP has done a great job of closing
> up vulnerabilities, but literally every WP site on the planet (all
> 60,000,000 of them) is vulnerable to brute force attacks.  These seem like
> small, relatively easy measures to help defend against them.
>
> Chris
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From filippo.pisano at gmail.com  Thu Mar 21 07:59:59 2013
From: filippo.pisano at gmail.com (Filippo Pisano)
Date: Thu, 21 Mar 2013 08:59:59 +0100
Subject: [wp-hackers] How to load plugin updates information from other
	sources?
Message-ID: <CABCyq-k7qYiXcZgGt41h0xGVJ1SWxU_LNFbc7o23SyuggLy0Dw@mail.gmail.com>

Hi all,

I'm trying to hook into plugins' update routine through the plugins_api
filter but with no success.
What I wanna do is tell WP to look for my plugin updates information in
another source
rather than http://api.wordpress.org/plugins/info/1.0/

I'm trying to hook through another plugin by adding a callback to
plugins_api filter after
deleting update_plugins transients but nothing happens.

Is this the correct approach? Maybe I need to set a lower priority to the
filter callback?

Thank you





Filippo Pisano

From david at wordshell.net  Thu Mar 21 08:12:34 2013
From: david at wordshell.net (David Anderson)
Date: Thu, 21 Mar 2013 08:12:34 +0000
Subject: [wp-hackers]  How to load plugin updates information from,
	other	sources?
In-Reply-To: <mailman.24595.1363852831.1480.wp-hackers@lists.automattic.com>
References: <mailman.24595.1363852831.1480.wp-hackers@lists.automattic.com>
Message-ID: <514AC0F2.5090001@wordshell.net>


> I'm trying to hook into plugins' update routine through the plugins_api
> filter but with no success.
> What I wanna do is tell WP to look for my plugin updates information in
> another source
> rather than http://api.wordpress.org/plugins/info/1.0/
>
> I'm trying to hook through another plugin by adding a callback to
> plugins_api filter after
> deleting update_plugins transients but nothing happens.
>
> Is this the correct approach? Maybe I need to set a lower priority to the
> filter callback?
Don't do that... this guy's already done the hard work for you - on both 
server and client sides:

http://w-shadow.com/blog/2013/03/12/wordpress-update-server/

David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net



From filippo.pisano at gmail.com  Thu Mar 21 08:29:42 2013
From: filippo.pisano at gmail.com (Filippo Pisano)
Date: Thu, 21 Mar 2013 09:29:42 +0100
Subject: [wp-hackers] How to load plugin updates information from,
	other sources?
In-Reply-To: <514AC0F2.5090001@wordshell.net>
References: <mailman.24595.1363852831.1480.wp-hackers@lists.automattic.com>
	<514AC0F2.5090001@wordshell.net>
Message-ID: <CABCyq-m6W7yy79OCH36MMYmH37JGMYouEWt-=-Xbj3NoMB3mTA@mail.gmail.com>

Awesome. This is exactly what I was looking for.

Thank you (and thanks to the guy who did the hard job).

Filippo Pisano


On Thu, Mar 21, 2013 at 9:12 AM, David Anderson <david at wordshell.net> wrote:

>
>  I'm trying to hook into plugins' update routine through the plugins_api
>> filter but with no success.
>> What I wanna do is tell WP to look for my plugin updates information in
>> another source
>> rather than http://api.wordpress.org/**plugins/info/1.0/<http://api.wordpress.org/plugins/info/1.0/>
>>
>> I'm trying to hook through another plugin by adding a callback to
>> plugins_api filter after
>> deleting update_plugins transients but nothing happens.
>>
>> Is this the correct approach? Maybe I need to set a lower priority to the
>> filter callback?
>>
> Don't do that... this guy's already done the hard work for you - on both
> server and client sides:
>
> http://w-shadow.com/blog/2013/**03/12/wordpress-update-server/<http://w-shadow.com/blog/2013/03/12/wordpress-update-server/>
>
> David
>
> --
> WordShell - WordPress fast from the CLI - www.wordshell.net
>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From goldenapplesdesign at gmail.com  Thu Mar 21 18:06:43 2013
From: goldenapplesdesign at gmail.com (Nathaniel Taintor)
Date: Thu, 21 Mar 2013 11:06:43 -0700
Subject: [wp-hackers] monitoring the new tag creation by non-admins
In-Reply-To: <CAHERW=2e2c4gt1eyY-Ck=KKoAkEVbdDLWSyghrFfNJcOPDoefQ@mail.gmail.com>
References: <CAHERW=2e2c4gt1eyY-Ck=KKoAkEVbdDLWSyghrFfNJcOPDoefQ@mail.gmail.com>
Message-ID: <CAH+NfoCV5z8hTZ0rqFaXb9veqsFvk3qRHXt4YdL3EVk2RepEqA@mail.gmail.com>

Yeah, for one, I'm not sure why you would be hooking in to the
"wp_insert_post_data" and not something closer to what you're actually
trying
to modify, like "pre_insert_term".

Modifying the name of the term also seems like a clumsy way of handling
this.
It would seem, for the purposes you're describing, that an action which
runs on
"created_term" and either emails you or adds the new term to an option
which you can
then check from an admin screen, would be all that you would need to do.
Using
the name of the term for anything other than giving users information seems
like in-band signalling that adds more confusion than it does value.



Nathaniel Taintor, Designer/Developer
*Golden Apples Design*
http://goldenapplesdesign.com

@GoldenApples | 717.434.3226
goldenapplesdesign at gmail.com


On Wed, Mar 20, 2013 at 9:14 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> I'm trying to monitor the creation of the new tags when a non-admin or
> non-editor submits a new post.
> In another words, if a contributor or author submits a new post, I'd like
> to mark the new tags somehow so that I can do some maintenance work.
>
> For that I decided to use the prefix "newtag-" in front of those new tags.
> So I can go the dashboard tags interface and search for "newtag-", and do
> the maintenance.
>
> Here is a scenario... assume that "apple" is an old tag, and joe the
> contributor comes along and submits a new post with the tags "apple" and
> "mango" attached to it.
> I want that post to go as "apple" and "newtag-mango" automatically.
>
> now... for this goal at hand, I set out with
>
> add_filter('wp_insert_post_data', 'my_post_data_validator', '99');
>
> function my_post_data_validator($data) {
>
> }
>
> In the function, I programmatically change the incoming $post_tags from
> "apple,mango" to "apple,newtag-mango"
> and then I run
>
> $set_post_terms_result= wp_set_post_terms( $_POST['post_ID'],
> $modified_tags, "post_tag", FALSE ); // where $modified_tags is equal to
> "apple,newtag-mango"
>
> but after this plug in runs, I do get the "newtag-mango"
> created automatically on the fly. But unfortunately, WP goes ahead and uses
> its own wp_set_post_terms somewhere down the road with the 3rd arg being
> set to FALSE overwriting my own running of the wp_set_post_terms. It
> obviously uses the original $_POST array and as a result, joe's post ends
> up with "apple", & "mango".
>
> What do I need to do so that WP completely forgets about the
> wp_set_post_terms for the post_tags?
>
> Another solution could be to tap into the "wp_insert_term" and change the
> post tags thru a filter.  Maybe there is a filter to tell wp_insert_term
> hey don;t use apple and mango, but go ahead with apple newtag-mango. Then
> that would solve my problems.
>
> but firstly, I cannot figure it out, and secondly, approaching to this
> problem from these very angles may not be the best way to tackle this
> issue.
>
> Thus your help is greatly appreciated.
>
> Thx.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From bryangentry at gmail.com  Fri Mar 22 14:08:43 2013
From: bryangentry at gmail.com (Bryan Gentry)
Date: Fri, 22 Mar 2013 10:08:43 -0400
Subject: [wp-hackers] monitoring the new tag creation by non-admins
	(Bryan Gentry)
Message-ID: <CALabX+ONtHQ6F4tPPPxQZ6wGk-q3dHQo1rtSnaNOXBSGvcAEag@mail.gmail.com>

> Modifying the name of the term also seems like a clumsy way of handling
> this. It would seem, for the purposes you're describing, that an action
> which
> runs on "created_term" and either emails you or adds the new term to an
> option
> which you can then check from an admin screen, would be all that you would
> need to do.
>

I couldn't agree more. This approach is much simpler with much less room
for error than adding text to the name of each tag.

-- 
*Bryan Gentry*
Web designer, writer, editor
http://bryangentry.us

From halukkaramete at gmail.com  Sat Mar 23 00:19:28 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Fri, 22 Mar 2013 17:19:28 -0700
Subject: [wp-hackers] case sensitivity on new term creation
Message-ID: <CAHERW=1LT_DX8SU3inSXgWuECJmpTkOLou+AYFyyMQyrLPf9rA@mail.gmail.com>

What's a good  way to modify the Wordpress new term creation functionality
so that it does not create new terms ( thus -2 slugs _ for those terms
where only the casing is different?

By default, WP creates two seperate terms for "Joe" ( with slug joe ), and
for  "joe" ( with slug joe-2).

I want WordPress to do a case insensitive search in determining if joe was
used. Currently, the search is case sensitive.
If it were to treat Joe and joe as the same, then I can have totally
avoided the "joe".

With this modification, yes I am aware that I won't be able to create
"Apple" and "apple" as two separate terms one to mean the Apple Inc and the
other the fruit. But that's fine me. In my case, I am getting a lot of -2
slugs for terms that mean the same thing and tha'ts because my users are
careless.  So I do need to change the default.

How can I achieve this?

From casey.bisson at gmail.com  Sat Mar 23 03:39:53 2013
From: casey.bisson at gmail.com (Casey Bisson)
Date: Fri, 22 Mar 2013 20:39:53 -0700
Subject: [wp-hackers] case sensitivity on new term creation
In-Reply-To: <CAHERW=1LT_DX8SU3inSXgWuECJmpTkOLou+AYFyyMQyrLPf9rA@mail.gmail.com>
References: <CAHERW=1LT_DX8SU3inSXgWuECJmpTkOLou+AYFyyMQyrLPf9rA@mail.gmail.com>
Message-ID: <86CA19A6-F026-4A74-932A-610C0E93D9C4@gmail.com>


I'm not aware of anything in WP that would enforce case sensitivity there, but the MySQL collation settings would.

There's a chance the table or database is collated in utf8_bin or some other case sensitive collation. A better alternative would be utf8_general_ci or utf8_unicode_ci.

You can check the collation with the following mysql command:

SHOW TABLE STATUS LIKE 'wp_terms';

It's easier to read in the terminal if you put \G on the end, however. Like the following:

SHOW TABLE STATUS LIKE 'wp_terms'\G

That will report the default collation for that table.

--Casey

On Mar 22, 2013, at 5:19 PM, Haluk Karamete <halukkaramete at gmail.com> wrote:

> What's a good  way to modify the Wordpress new term creation functionality
> so that it does not create new terms ( thus -2 slugs _ for those terms
> where only the casing is different?
> 
> By default, WP creates two seperate terms for "Joe" ( with slug joe ), and
> for  "joe" ( with slug joe-2).
> 
> I want WordPress to do a case insensitive search in determining if joe was
> used. Currently, the search is case sensitive.
> If it were to treat Joe and joe as the same, then I can have totally
> avoided the "joe".
> 
> With this modification, yes I am aware that I won't be able to create
> "Apple" and "apple" as two separate terms one to mean the Apple Inc and the
> other the fruit. But that's fine me. In my case, I am getting a lot of -2
> slugs for terms that mean the same thing and tha'ts because my users are
> careless.  So I do need to change the default.
> 
> How can I achieve this?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From david at wordshell.net  Sat Mar 23 20:04:16 2013
From: david at wordshell.net (David Anderson)
Date: Sat, 23 Mar 2013 20:04:16 +0000
Subject: [wp-hackers] How to find translators
Message-ID: <514E0AC0.6090609@wordshell.net>

Hi,

Today, rather overdue, I added internationalisation code and a POT file 
to one of my GPL plugins 
(http://wordpress.org/extend/plugins/updraftplus/ - trunk version).

This is surprisingly easy (though somewhat time-consuming if starting 
from a mature plugin). I'd encourage anyone who was putting it off to do so.

Question: Does anyone have any advice on how to attract translators? 
I've added an appeal on the plugin page. But are there good places to 
find eager translators? I spent some time Googling and looking around 
the Codex, but only found articles on programming and various automated 
plugins.

Many thanks,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From chloe.desoutter+wphackers at gmail.com  Sat Mar 23 20:40:21 2013
From: chloe.desoutter+wphackers at gmail.com (=?ISO-8859-1?Q?Chlo=E9_Desoutter?=)
Date: Sat, 23 Mar 2013 21:40:21 +0100
Subject: [wp-hackers] How to find translators
In-Reply-To: <514E0AC0.6090609@wordshell.net>
References: <514E0AC0.6090609@wordshell.net>
Message-ID: <CAH9U35ngbo0B+7-wOGDTH8F0krb97DR0-iB8VE-=YTmvRj7CnQ@mail.gmail.com>

Hello David,

I can't help but recommend to sollicitate people in your plug-in community.
If you have your own forums, for example, you could put a request there.

Please publish the pot files somewhere, and this will make things easier.

HtH


2013/3/23 David Anderson <david at wordshell.net>

> Hi,
>
> Today, rather overdue, I added internationalisation code and a POT file to
> one of my GPL plugins (http://wordpress.org/extend/**plugins/updraftplus/<http://wordpress.org/extend/plugins/updraftplus/>- trunk version).
>
> This is surprisingly easy (though somewhat time-consuming if starting from
> a mature plugin). I'd encourage anyone who was putting it off to do so.
>
> Question: Does anyone have any advice on how to attract translators? I've
> added an appeal on the plugin page. But are there good places to find eager
> translators? I spent some time Googling and looking around the Codex, but
> only found articles on programming and various automated plugins.
>
> Many thanks,
> David
>
> --
> WordShell - WordPress fast from the CLI - www.wordshell.net
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From mail at matthiasbreuer.com  Sat Mar 23 20:49:16 2013
From: mail at matthiasbreuer.com (Matthias Breuer)
Date: Sat, 23 Mar 2013 21:49:16 +0100
Subject: [wp-hackers] How to find translators
In-Reply-To: <514E0AC0.6090609@wordshell.net>
References: <514E0AC0.6090609@wordshell.net>
Message-ID: <EFC28A4E-5118-41E6-BFC2-F207B44B7795@matthiasbreuer.com>

Hi David,

I wonder if you are seeking translation support for the free version or for the paid version (aren't they basically using the same codebase) of your plugin? Also on a side note, what license is the paid version under?

Best,
Matthias


Am 23.03.2013 um 21:04 schrieb David Anderson <david at wordshell.net>:

> Hi,
> 
> Today, rather overdue, I added internationalisation code and a POT file to one of my GPL plugins (http://wordpress.org/extend/plugins/updraftplus/ - trunk version).
> 
> This is surprisingly easy (though somewhat time-consuming if starting from a mature plugin). I'd encourage anyone who was putting it off to do so.
> 
> Question: Does anyone have any advice on how to attract translators? I've added an appeal on the plugin page. But are there good places to find eager translators? I spent some time Googling and looking around the Codex, but only found articles on programming and various automated plugins.
> 
> Many thanks,
> David
> 
> -- 
> WordShell - WordPress fast from the CLI - www.wordshell.net
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mailing at markoheijnen.nl  Sat Mar 23 20:53:32 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Sat, 23 Mar 2013 21:53:32 +0100
Subject: [wp-hackers] How to find translators
In-Reply-To: <CAH9U35ngbo0B+7-wOGDTH8F0krb97DR0-iB8VE-=YTmvRj7CnQ@mail.gmail.com>
References: <514E0AC0.6090609@wordshell.net>
	<CAH9U35ngbo0B+7-wOGDTH8F0krb97DR0-iB8VE-=YTmvRj7CnQ@mail.gmail.com>
Message-ID: <C36A8DEB-EE77-437F-89F1-283D604BF088@markoheijnen.nl>

Hey,

I disagree that a pot file will help. Most people have no clue how to use it. To me a GlotPress installation would really help.
Linking to it on your site, the plugin and a mention on the support forum would be a great first step.

Marko


Op 23 mrt. 2013, om 21:40 heeft Chlo? Desoutter <chloe.desoutter+wphackers at gmail.com> het volgende geschreven:

> Hello David,
> 
> I can't help but recommend to sollicitate people in your plug-in community.
> If you have your own forums, for example, you could put a request there.
> 
> Please publish the pot files somewhere, and this will make things easier.
> 
> HtH
> 
> 
> 2013/3/23 David Anderson <david at wordshell.net>
> 
>> Hi,
>> 
>> Today, rather overdue, I added internationalisation code and a POT file to
>> one of my GPL plugins (http://wordpress.org/extend/**plugins/updraftplus/<http://wordpress.org/extend/plugins/updraftplus/>- trunk version).
>> 
>> This is surprisingly easy (though somewhat time-consuming if starting from
>> a mature plugin). I'd encourage anyone who was putting it off to do so.
>> 
>> Question: Does anyone have any advice on how to attract translators? I've
>> added an appeal on the plugin page. But are there good places to find eager
>> translators? I spent some time Googling and looking around the Codex, but
>> only found articles on programming and various automated plugins.
>> 
>> Many thanks,
>> David
>> 
>> --
>> WordShell - WordPress fast from the CLI - www.wordshell.net
>> 
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From xoodrew at gmail.com  Sat Mar 23 21:04:32 2013
From: xoodrew at gmail.com (Drew)
Date: Sat, 23 Mar 2013 15:04:32 -0600
Subject: [wp-hackers] How to find translators
In-Reply-To: <C36A8DEB-EE77-437F-89F1-283D604BF088@markoheijnen.nl>
References: <514E0AC0.6090609@wordshell.net>
	<CAH9U35ngbo0B+7-wOGDTH8F0krb97DR0-iB8VE-=YTmvRj7CnQ@mail.gmail.com>
	<C36A8DEB-EE77-437F-89F1-283D604BF088@markoheijnen.nl>
Message-ID: <CAEJabWj3FdYdMME=cdn3ymjV80s-mPjtV2WQ6UceSi0cva=Ksg@mail.gmail.com>

Hi David,

Recently, I've seen more and more plugin authors using Google Translate to
offer rough translations for say, the top 10 languages. Yeah, the
translations probably aren't pitch perfect, but it shows that you're making
an effort.

If a fluent speaker comes along later and wants to improve the translation,
that's great. You just want to make sure people can figure out how to get
in touch with you to do that. Win/Win.

Drew


On Sat, Mar 23, 2013 at 2:53 PM, Marko Heijnen <mailing at markoheijnen.nl>wrote:

> Hey,
>
> I disagree that a pot file will help. Most people have no clue how to use
> it. To me a GlotPress installation would really help.
> Linking to it on your site, the plugin and a mention on the support forum
> would be a great first step.
>
> Marko
>
>
> Op 23 mrt. 2013, om 21:40 heeft Chlo? Desoutter <
> chloe.desoutter+wphackers at gmail.com> het volgende geschreven:
>
> > Hello David,
> >
> > I can't help but recommend to sollicitate people in your plug-in
> community.
> > If you have your own forums, for example, you could put a request there.
> >
> > Please publish the pot files somewhere, and this will make things easier.
> >
> > HtH
> >
> >
> > 2013/3/23 David Anderson <david at wordshell.net>
> >
> >> Hi,
> >>
> >> Today, rather overdue, I added internationalisation code and a POT file
> to
> >> one of my GPL plugins (
> http://wordpress.org/extend/**plugins/updraftplus/<
> http://wordpress.org/extend/plugins/updraftplus/>- trunk version).
> >>
> >> This is surprisingly easy (though somewhat time-consuming if starting
> from
> >> a mature plugin). I'd encourage anyone who was putting it off to do so.
> >>
> >> Question: Does anyone have any advice on how to attract translators?
> I've
> >> added an appeal on the plugin page. But are there good places to find
> eager
> >> translators? I spent some time Googling and looking around the Codex,
> but
> >> only found articles on programming and various automated plugins.
> >>
> >> Many thanks,
> >> David
> >>
> >> --
> >> WordShell - WordPress fast from the CLI - www.wordshell.net
> >>
> >> ______________________________**_________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> >> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
-- I've kinda got a thing for WordPress > http://www.drewapicture.com

From mail at scribu.net  Sun Mar 24 19:20:36 2013
From: mail at scribu.net (scribu)
Date: Sun, 24 Mar 2013 21:20:36 +0200
Subject: [wp-hackers] Plugin Maintainers Wanted
Message-ID: <CABzSYNNXzwgagXEDhKhdd0XCus7xPM8wVajonyOGknKve4SPRA@mail.gmail.com>

Hello wp-hackers subscribers,

I have released or adopted a bunch of plugins over the years. Some of them
are obsolete, while some are still quite popular.

Here's the list: http://profiles.wordpress.org/scribu/
If you currently use any* of the plugins there and have enough time to look
over them, they're up for adoption.

Each plugin has its own Github <https://github.com/scribu/> repository,
which is then deployed to
wordpress.org<http://scribu.net/blog/deploying-from-git-to-svn.html>via
a script. I can continue taking care of deployments, if you don?t want
to or we?ll figure something out.

The non-trivial plugins use
scbFramework<https://github.com/scribu/wp-scb-framework>,
which is pretty stable.
If you're interested, send me an email (on-list or off-list).

* I initially posted this on my blog and already found new maintainers for
the following plugins: Posts 2 Posts, Term Management Tools, My Sites
Widget and Admin Bar Login.

-- 
http://scribu.net

From mail at scribu.net  Sun Mar 24 22:18:04 2013
From: mail at scribu.net (scribu)
Date: Mon, 25 Mar 2013 00:18:04 +0200
Subject: [wp-hackers] Plugin Maintainers Wanted
In-Reply-To: <CABzSYNNXzwgagXEDhKhdd0XCus7xPM8wVajonyOGknKve4SPRA@mail.gmail.com>
References: <CABzSYNNXzwgagXEDhKhdd0XCus7xPM8wVajonyOGknKve4SPRA@mail.gmail.com>
Message-ID: <CABzSYNPGggSfpy=PfEMC3s6RLT2mhpVrmX=nRzPxH=8rpp1YLA@mail.gmail.com>

As a follow-up, if you don't have time to scroll through the list, here are
the two juiciest ones, with no takers so far:

* Smart Archives
Reloaded<http://wordpress.org/extend/plugins/smart-archives-reloaded/>-
medium complexity, involves some JavaScript
* Front-end Editor
<http://wordpress.org/extend/plugins/front-end-editor/>- medium-high
complexity; a good amount of CoffeeScript, build script
written in node.js

I think both are fairly well architected and useful to a lot of people.

Ok, enough promotin'. Have a nice day!

-- 
http://scribu.net

From wfz at canopusresearch.com  Mon Mar 25 02:36:52 2013
From: wfz at canopusresearch.com (William F. Zachmann)
Date: Sun, 24 Mar 2013 22:36:52 -0400
Subject: [wp-hackers] Plugin Maintainers Wanted
In-Reply-To: <CABzSYNPGggSfpy=PfEMC3s6RLT2mhpVrmX=nRzPxH=8rpp1YLA@mail.gmail.com>
References: <CABzSYNNXzwgagXEDhKhdd0XCus7xPM8wVajonyOGknKve4SPRA@mail.gmail.com>
	<CABzSYNPGggSfpy=PfEMC3s6RLT2mhpVrmX=nRzPxH=8rpp1YLA@mail.gmail.com>
Message-ID: <CAAkVtgikRoUSCArR-Rdi5NbU3S07ZwyQ0vB-CG2t5tQv64-vaQ@mail.gmail.com>

I might be able to help out with front-end-editor.

On Sun, Mar 24, 2013 at 6:18 PM, scribu <mail at scribu.net> wrote:

> As a follow-up, if you don't have time to scroll through the list, here are
> the two juiciest ones, with no takers so far:
>
> * Smart Archives
> Reloaded<http://wordpress.org/extend/plugins/smart-archives-reloaded/>-
> medium complexity, involves some JavaScript
> * Front-end Editor
> <http://wordpress.org/extend/plugins/front-end-editor/>- medium-high
> complexity; a good amount of CoffeeScript, build script
> written in node.js
>
> I think both are fairly well architected and useful to a lot of people.
>
> Ok, enough promotin'. Have a nice day!
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 

All the best,



will



William F. Zachmann



* wfz at canopusresearch.com

'   +1-781-934-9800 (office)

'   +1-617-851-0773 (mobile)

'   +1-805-663-0813 (Google Voice)

'   +1-805-284-9500 (Skype)

Skype ID:  william.f.zachmann



Also see:  Facebook <http://www.facebook.com/>

                 Linkedin <http://www.linkedin.com/in/wfzachmann>

                 Twitter <http://twitter.com/wfz>

From david at wordshell.net  Mon Mar 25 10:52:12 2013
From: david at wordshell.net (David Anderson)
Date: Mon, 25 Mar 2013 10:52:12 +0000
Subject: [wp-hackers] How to find translators
In-Reply-To: <mailman.5.1364126402.27849.wp-hackers@lists.automattic.com>
References: <mailman.5.1364126402.27849.wp-hackers@lists.automattic.com>
Message-ID: <51502C5C.7040609@wordshell.net>


Thanks to all who gave advice. Answer to question:

Matthias Breuer wrote:
> I wonder if you are seeking translation support for the free version or for the paid version (aren't they basically using the same codebase) of your plugin? Also on a side note, what license is the paid version under?

    http://updraftplus.com/faqs/what-licence-does-updraftplus-use/
    Q. "What licence does UpdraftPlus use?" A. "The same licence as
    WordPress itself, the GNU GPL."


For the avoidance of doubt, that answer applies to all versions.

Translators are free to not translate the strings that are not in the 
cost-free core. To those who translate strings that are only in the paid 
version, I will give them a free copy of that version.

I did post a link on Saturday in the plugin form with a link to the POT 
file 
(http://plugins.svn.wordpress.org/updraftplus/trunk/languages/updraftplus.pot). 
I've only had one response so far.

David
> -- 
> WordShell - WordPress fast from the CLI - www.wordshell.net

From philip at manifestbozeman.com  Mon Mar 25 16:28:10 2013
From: philip at manifestbozeman.com (Philip Downer)
Date: Mon, 25 Mar 2013 10:28:10 -0600
Subject: [wp-hackers] Preserving EXIF data for image resizes
Message-ID: <0825F3BB-B223-4612-9C25-97F373B6C92E@manifestbozeman.com>

Hi Hackers,

I've followed this list for quite some time, and gleaned a lot of helpful information from each of your posts. Today, I'm running into an issue developing a site/theme for a photographer. Because he is selling stock photography to national publications, he is particularly worried about issues related to orphaned works... Basically, copyrighted material whose source cannot be easily identified. We require that each image on his site, regardless of size, contain the original EXIF data from the uploaded image.

It doesn't appear the WordPress (and many other CMS's) preserve EXIF metadata when images are resized. My question is why not? Is this due to the image libraries that are used, or are there other issues that would result in a  benefit from stripping this data from the image? I do realize that EXIF data is preserved on the original upload and available via the wp_get_attachment_metadata function.

I'm considering putting together a plugin that handles this, but want to first investigate the reasoning behind this functionality and get input from others before proceeding.

I've also found a plugin that, while I've not tested fully, claims to handle this. http://www.tuchesaufntish.com/2011/05/27/preserving-metadata-in-images-uploaded-to-wordpress-sites/

My somewhat limited knowledge of the image processing functionality of WordPress seems to indicated that WP is moving away from using any specific, dedicated library (like GD or ImageMagick) and instead relying on abstraction to determine what capabilities/libraries exist on the host. (See Mike Schroder's presentation on the WP_Image_Editor class http://wordpress.tv/2013/02/13/mike-schroder-image-manipulation-in-wordpress-3-5/ )

Any advice, suggestions or snide remarks as I move forward will be appreciated. :-)

Philip Downer
Office: (406) 585-9406
Cell: (406) 599-0222
Skype: manifestphil
------------------------------------------
Manifest Creative
21000 Frontage Rd., Suite #6
Belgrade, MT 59714

info at manifestbozeman.com
www.manifestbozeman.com

MANIFEST: clear and obvious to the eye or mind.


From aparoph at gmail.com  Mon Mar 25 16:46:59 2013
From: aparoph at gmail.com (Radi Varbanov)
Date: Mon, 25 Mar 2013 12:46:59 -0400
Subject: [wp-hackers] get_categories() add post type to arguments?
Message-ID: <CAOKL2K=JcFiP1ipH4rj5h95CkCHxmOPgOCKKvmXrL1JBPnKx7w@mail.gmail.com>

As of right now the function does not let you specify post type.
Would it be possible to add post_type to the arguments for get_categories()
?

From mailing at markoheijnen.nl  Mon Mar 25 16:55:28 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Mon, 25 Mar 2013 17:55:28 +0100
Subject: [wp-hackers] Preserving EXIF data for image resizes
In-Reply-To: <0825F3BB-B223-4612-9C25-97F373B6C92E@manifestbozeman.com>
References: <0825F3BB-B223-4612-9C25-97F373B6C92E@manifestbozeman.com>
Message-ID: <D6E332A8-D74E-459E-B08C-008C2B8471FE@markoheijnen.nl>

Hey Philip,

That plugin is obsolete since it's in core right now. That what Mike and also I presented about. You should check if your hosting company has ImageMagick (imagick) or GraphicsMagick (gmagick) installed.
Those two libraries will preserve the information. For Gmagick you do still need to use a plugin.

You can build a plugin for GD that restores the EXIF information to resized images. I'm pretty sure that can be done. It still one of those things on my list on how easy that is and if it can be in core or not.

Also if you aren't running on a VPS you can even recommend that. I would do so since you can then easily install gmagick and you will have lots of diskspace for the photos.

Marko

Op 25 mrt. 2013, om 17:28 heeft Philip Downer <philip at manifestbozeman.com> het volgende geschreven:

> Hi Hackers,
> 
> I've followed this list for quite some time, and gleaned a lot of helpful information from each of your posts. Today, I'm running into an issue developing a site/theme for a photographer. Because he is selling stock photography to national publications, he is particularly worried about issues related to orphaned works... Basically, copyrighted material whose source cannot be easily identified. We require that each image on his site, regardless of size, contain the original EXIF data from the uploaded image.
> 
> It doesn't appear the WordPress (and many other CMS's) preserve EXIF metadata when images are resized. My question is why not? Is this due to the image libraries that are used, or are there other issues that would result in a  benefit from stripping this data from the image? I do realize that EXIF data is preserved on the original upload and available via the wp_get_attachment_metadata function.
> 
> I'm considering putting together a plugin that handles this, but want to first investigate the reasoning behind this functionality and get input from others before proceeding.
> 
> I've also found a plugin that, while I've not tested fully, claims to handle this. http://www.tuchesaufntish.com/2011/05/27/preserving-metadata-in-images-uploaded-to-wordpress-sites/
> 
> My somewhat limited knowledge of the image processing functionality of WordPress seems to indicated that WP is moving away from using any specific, dedicated library (like GD or ImageMagick) and instead relying on abstraction to determine what capabilities/libraries exist on the host. (See Mike Schroder's presentation on the WP_Image_Editor class http://wordpress.tv/2013/02/13/mike-schroder-image-manipulation-in-wordpress-3-5/ )
> 
> Any advice, suggestions or snide remarks as I move forward will be appreciated. :-)
> 
> Philip Downer
> Office: (406) 585-9406
> Cell: (406) 599-0222
> Skype: manifestphil
> ------------------------------------------
> Manifest Creative
> 21000 Frontage Rd., Suite #6
> Belgrade, MT 59714
> 
> info at manifestbozeman.com
> www.manifestbozeman.com
> 
> MANIFEST: clear and obvious to the eye or mind.
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From hempsworth at gmail.com  Tue Mar 26 01:30:45 2013
From: hempsworth at gmail.com (Alex Hempton-Smith)
Date: Tue, 26 Mar 2013 01:30:45 +0000
Subject: [wp-hackers] Custom Taxonomy Query - Select posts with a taxonomy
	AND none
Message-ID: <CAK3PZGsSLz405gO7L=piMuVjcrA6MaBbhDKWFhMDWeTp0R=8YA@mail.gmail.com>

Hi all,

I have a CPT with three taxonomies:

   - Segment
   - Price Band
   - Descriptive Tag

Most posts would have one of the above assigned to them, but some posts
might be relevant for ALL segments, or ALL price bands, so they don't have
ANY specified.

How do I include posts in EVERY WP_Query if there is NO segment/price band
specified?

For example, if I search for:

   - Segment = X
   - Price Band = Y,Z,A
   - Descriptive Tags = B,C,D

I get all posts that match X,Y,Z,A,B,C and D. But I'd like all posts with
NO segment/price band to ALSO be included in this result. As they are
assumed if they have nothing specified, they are relevant to ALL searches.

Does this make sense?

Thanks for your patience as I try to describe what I'm trying to achieve!

Alex

From mike at newclarity.net  Tue Mar 26 02:55:02 2013
From: mike at newclarity.net (Mike Schinkel)
Date: Mon, 25 Mar 2013 22:55:02 -0400
Subject: [wp-hackers] Custom Taxonomy Query - Select posts with a
	taxonomy AND none
In-Reply-To: <CAK3PZGsSLz405gO7L=piMuVjcrA6MaBbhDKWFhMDWeTp0R=8YA@mail.gmail.com>
References: <CAK3PZGsSLz405gO7L=piMuVjcrA6MaBbhDKWFhMDWeTp0R=8YA@mail.gmail.com>
Message-ID: <98A2A92B-EE85-401C-94E7-EB628E2E21DA@newclarity.net>

Hi Alex,

Maybe post your code snippet that is not working the way you want?  Might be easier to help that way...

-Mike

On Mar 25, 2013, at 9:30 PM, Alex Hempton-Smith <hempsworth at gmail.com> wrote:

> Hi all,
> 
> I have a CPT with three taxonomies:
> 
>   - Segment
>   - Price Band
>   - Descriptive Tag
> 
> Most posts would have one of the above assigned to them, but some posts
> might be relevant for ALL segments, or ALL price bands, so they don't have
> ANY specified.
> 
> How do I include posts in EVERY WP_Query if there is NO segment/price band
> specified?
> 
> For example, if I search for:
> 
>   - Segment = X
>   - Price Band = Y,Z,A
>   - Descriptive Tags = B,C,D
> 
> I get all posts that match X,Y,Z,A,B,C and D. But I'd like all posts with
> NO segment/price band to ALSO be included in this result. As they are
> assumed if they have nothing specified, they are relevant to ALL searches.
> 
> Does this make sense?
> 
> Thanks for your patience as I try to describe what I'm trying to achieve!
> 
> Alex
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From hempsworth at gmail.com  Tue Mar 26 09:02:01 2013
From: hempsworth at gmail.com (Alex Hempton-Smith)
Date: Tue, 26 Mar 2013 09:02:01 +0000
Subject: [wp-hackers] Custom Taxonomy Query - Select posts with a
 taxonomy AND none
In-Reply-To: <98A2A92B-EE85-401C-94E7-EB628E2E21DA@newclarity.net>
References: <CAK3PZGsSLz405gO7L=piMuVjcrA6MaBbhDKWFhMDWeTp0R=8YA@mail.gmail.com>
	<98A2A92B-EE85-401C-94E7-EB628E2E21DA@newclarity.net>
Message-ID: <CAK3PZGuFaPt9esYX1S5QkfWi=+RKkQHMwGCidw18+Vax0YqGwA@mail.gmail.com>

There's not really a code snippet to post. Perhaps I can phrase it
differently; can I have WP_Query return posts which match the taxonomy term
searched for (usual behaviour), and posts which have NO terms for that
given taxonomy?

So if I search for 'foobar' it would return posts where $mytax == 'foobar'
and $mytax == '' (empty)

Alex


On Tue, Mar 26, 2013 at 2:55 AM, Mike Schinkel <mike at newclarity.net> wrote:

> Hi Alex,
>
> Maybe post your code snippet that is not working the way you want?  Might
> be easier to help that way...
>
> -Mike
>
> On Mar 25, 2013, at 9:30 PM, Alex Hempton-Smith <hempsworth at gmail.com>
> wrote:
>
> > Hi all,
> >
> > I have a CPT with three taxonomies:
> >
> >   - Segment
> >   - Price Band
> >   - Descriptive Tag
> >
> > Most posts would have one of the above assigned to them, but some posts
> > might be relevant for ALL segments, or ALL price bands, so they don't
> have
> > ANY specified.
> >
> > How do I include posts in EVERY WP_Query if there is NO segment/price
> band
> > specified?
> >
> > For example, if I search for:
> >
> >   - Segment = X
> >   - Price Band = Y,Z,A
> >   - Descriptive Tags = B,C,D
> >
> > I get all posts that match X,Y,Z,A,B,C and D. But I'd like all posts with
> > NO segment/price band to ALSO be included in this result. As they are
> > assumed if they have nothing specified, they are relevant to ALL
> searches.
> >
> > Does this make sense?
> >
> > Thanks for your patience as I try to describe what I'm trying to achieve!
> >
> > Alex
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wordpress at zed1.com  Tue Mar 26 09:47:48 2013
From: wordpress at zed1.com (Mike Little)
Date: Tue, 26 Mar 2013 09:47:48 +0000
Subject: [wp-hackers] Custom Taxonomy Query - Select posts with a
 taxonomy AND none
In-Reply-To: <CAK3PZGuFaPt9esYX1S5QkfWi=+RKkQHMwGCidw18+Vax0YqGwA@mail.gmail.com>
References: <CAK3PZGsSLz405gO7L=piMuVjcrA6MaBbhDKWFhMDWeTp0R=8YA@mail.gmail.com>
	<98A2A92B-EE85-401C-94E7-EB628E2E21DA@newclarity.net>
	<CAK3PZGuFaPt9esYX1S5QkfWi=+RKkQHMwGCidw18+Vax0YqGwA@mail.gmail.com>
Message-ID: <CAMb54M0SbBZGnZsxjp9khKh=R2rJ6mR2_GSR_U12PeV2ict=Vw@mail.gmail.com>

Add terms to your custom taxonomies for "All Segments" and "All Price
Bands".

Assign those to the appropriate CPT's

Then always add "All segments" to segment search terms, and "all price
bands" to price band search terms.

That will achieve the results you want with exactly the method you are
using now.

Mike
-- 
Mike Little
http://zed1.com/

From johnbillion+wp at gmail.com  Tue Mar 26 10:30:40 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Tue, 26 Mar 2013 10:30:40 +0000
Subject: [wp-hackers] Custom Taxonomy Query - Select posts with a
 taxonomy AND none
In-Reply-To: <CAMb54M0SbBZGnZsxjp9khKh=R2rJ6mR2_GSR_U12PeV2ict=Vw@mail.gmail.com>
References: <CAK3PZGsSLz405gO7L=piMuVjcrA6MaBbhDKWFhMDWeTp0R=8YA@mail.gmail.com>
	<98A2A92B-EE85-401C-94E7-EB628E2E21DA@newclarity.net>
	<CAK3PZGuFaPt9esYX1S5QkfWi=+RKkQHMwGCidw18+Vax0YqGwA@mail.gmail.com>
	<CAMb54M0SbBZGnZsxjp9khKh=R2rJ6mR2_GSR_U12PeV2ict=Vw@mail.gmail.com>
Message-ID: <CAOqAKWDHn5wbe5XuYQ35S5KDmoHFcL3YOLOfEReFDpu=VpFYwQ@mail.gmail.com>

On 26 March 2013 09:47, Mike Little <wordpress at zed1.com> wrote:
> Add terms to your custom taxonomies for "All Segments" and "All Price
> Bands".
>
> Assign those to the appropriate CPT's
>
> Then always add "All segments" to segment search terms, and "all price
> bands" to price band search terms.
>
> That will achieve the results you want with exactly the method you are
> using now.
>
> Mike

This is how I've achieved this in the past. Definitely the most
straight forward method, otherwise you'll need to write the SQL for
such a query.

John

From info at a5d.org  Tue Mar 26 10:36:50 2013
From: info at a5d.org (Lee Rickler)
Date: Tue, 26 Mar 2013 10:36:50 +0000
Subject: [wp-hackers] limit images displayed in the media upload window ?
Message-ID: <7AD547FB-4DCA-449B-B359-6A10946EE73D@a5d.org>

Guys,

I sent this over a few days ago but heard nothing back.
Anyone else have this issue?
Is it just me being stupid or is it a bug?

Essentially/ tl;dr:
When selecting a new image via the 'Select images' modal, not all media library files are displayed.

Original post:
I'm working on what's going to be a fairly substantial project and am having issues when placing featured images or selecting images in general.

Pages (so far) = around 300
Media library (so far) = 500 images (all around 1 or 2mbs each)

When I access a page to add an image only 129 images (from the media library) are displayed in the 'select images' modal.
If I then upload a new image/ save, the image shows up fine on the page and in the media library.
If I then go to another page and add an image the image I just uploaded isn't available in the SI window even though it's clearly in the media library.
Searching for the image from within the SI window brings up a blank/ not found.

Turned off all plugins and tried with twentytwelve theme - still the same issue.
I've even tried regenerating all the thumbnails etc but to no avail.

So, my question is (as I've never had this issue before) is there a limit to images displayed in the media upload window when adding an image?

As an aside, In the media library there is pagination and/ or you can change the amount on view (screen options tab > media items) but there's nothing like this on the set featured image window. or am I missing something?

Cheers,

Lee

From dyordan1 at ramapo.edu  Tue Mar 26 10:54:06 2013
From: dyordan1 at ramapo.edu (=?utf-8?Q?dyordan1@ramapo.edu?=)
Date: Tue, 26 Mar 2013 10:54:06 +0000
Subject: [wp-hackers] =?utf-8?q?_RE=3A__limit_images_displayed_in_the_medi?=
 =?utf-8?q?a_upload_window_=3F?=
Message-ID: <20130326105406.AF3A3381132@smtp-3.ramapo.edu>

Lee,

 

If it makes you feel any better I?ve noticed the same problem too. It seems that WordPress has a limit to how many images it will show at a time and you took the time to count that limit to 129. It has been an issue for me exactly once, when I had more than that many images on a single page. For all other cases, I upload media files to the page I?m going to use them on so if I switch to the Uploaded to this Page from the dropdown, it shows everything and I don?t have to worry about it. I?m guessing that?s not a solution for you though so I would look through this page for anything interesting and then dig the core to find out more:

 

http://adambrown.info/p/wp_hooks/hook

 

Maybe there?s a filter for that somewhere. I wouldn?t think it?s a dropdown select or something in Settings though so you?ll have to code it into your theme/plugin. Good Luck!


~Dobri


From: Lee Rickler
Sent: ?March? ?26?, ?2013 ?6?:?36? ?AM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] limit images displayed in the media upload window ?


Guys,

I sent this over a few days ago but heard nothing back.
Anyone else have this issue?
Is it just me being stupid or is it a bug?

Essentially/ tl;dr:
When selecting a new image via the 'Select images' modal, not all media library files are displayed.

Original post:
I'm working on what's going to be a fairly substantial project and am having issues when placing featured images or selecting images in general.

Pages (so far) = around 300
Media library (so far) = 500 images (all around 1 or 2mbs each)

When I access a page to add an image only 129 images (from the media library) are displayed in the 'select images' modal.
If I then upload a new image/ save, the image shows up fine on the page and in the media library.
If I then go to another page and add an image the image I just uploaded isn't available in the SI window even though it's clearly in the media library.
Searching for the image from within the SI window brings up a blank/ not found.

Turned off all plugins and tried with twentytwelve theme - still the same issue.
I've even tried regenerating all the thumbnails etc but to no avail.

So, my question is (as I've never had this issue before) is there a limit to images displayed in the media upload window when adding an image?

As an aside, In the media library there is pagination and/ or you can change the amount on view (screen options tab > media items) but there's nothing like this on the set featured image window. or am I missing something?

Cheers,

Lee
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From info at a5d.org  Tue Mar 26 10:59:06 2013
From: info at a5d.org (A5D)
Date: Tue, 26 Mar 2013 10:59:06 +0000
Subject: [wp-hackers] limit images displayed in the media upload window ?
In-Reply-To: <20130326105406.AF3A3381132@smtp-3.ramapo.edu>
References: <20130326105406.AF3A3381132@smtp-3.ramapo.edu>
Message-ID: <C36FF369-176B-4951-96C7-3374A27257E0@a5d.org>

Thanks for proving I'm not just imagining posting to the list!

;)

Even if I create a new page, with no images on, the same 129 images only show.
Even if I then upload and save etc then go back the same images are displayed BUT then also include those added to that particular page.
If I then go to another page then go back to the previous page, the images are no longer listed.

Thanks for the response, I'm digging around WP and Google to see if there's a fix/ it's a bug etc.

Lee

On 26 Mar 2013, at 10:54, dyordan1 at ramapo.edu wrote:

> Lee,
> 
> If it makes you feel any better I?ve noticed the same problem too. It seems that WordPress has a limit to how many images it will show at a time and you took the time to count that limit to 129. It has been an issue for me exactly once, when I had more than that many images on a single page. For all other cases, I upload media files to the page I?m going to use them on so if I switch to the Uploaded to this Page from the dropdown, it shows everything and I don?t have to worry about it. I?m guessing that?s not a solution for you though so I would look through this page for anything interesting and then dig the core to find out more:
> 
> 
> 
> http://adambrown.info/p/wp_hooks/hook
> 
> 
> 
> Maybe there?s a filter for that somewhere. I wouldn?t think it?s a dropdown select or something in Settings though so you?ll have to code it into your theme/plugin. Good Luck!
> 
> 
> ~Dobri
> 


From goldenapplesdesign at gmail.com  Tue Mar 26 19:20:03 2013
From: goldenapplesdesign at gmail.com (Nathaniel Taintor)
Date: Tue, 26 Mar 2013 12:20:03 -0700
Subject: [wp-hackers] Custom Taxonomy Query - Select posts with a
 taxonomy AND none
In-Reply-To: <CAOqAKWDHn5wbe5XuYQ35S5KDmoHFcL3YOLOfEReFDpu=VpFYwQ@mail.gmail.com>
References: <CAK3PZGsSLz405gO7L=piMuVjcrA6MaBbhDKWFhMDWeTp0R=8YA@mail.gmail.com>
	<98A2A92B-EE85-401C-94E7-EB628E2E21DA@newclarity.net>
	<CAK3PZGuFaPt9esYX1S5QkfWi=+RKkQHMwGCidw18+Vax0YqGwA@mail.gmail.com>
	<CAMb54M0SbBZGnZsxjp9khKh=R2rJ6mR2_GSR_U12PeV2ict=Vw@mail.gmail.com>
	<CAOqAKWDHn5wbe5XuYQ35S5KDmoHFcL3YOLOfEReFDpu=VpFYwQ@mail.gmail.com>
Message-ID: <CAH+NfoAa+miq-r1GgVkNbuchhq9frHBQpix86OOcdNige-qPFg@mail.gmail.com>

Brings up an interesting point - why doesn't tax_query have a NOT EXISTS
operator, the same way that meta_query does?  A quick search of trac didn't
show any discussion of the issue - has it been discussed and rejected?

I've hand-rolled the SQL for that sort of query myself before, and it seems
like a common need. The SQL necessary for such a query might be ugly,
complex, and slow, and probably not the best thing to promote. But it seems
better to have an API available for it than to recommend that people store
this kind of meta-taxonomy data in taxonomy terms.

Nathaniel Taintor, Designer/Developer
*Golden Apples Design*
http://goldenapplesdesign.com

@GoldenApples | 717.434.3226
goldenapplesdesign at gmail.com


On Tue, Mar 26, 2013 at 3:30 AM, John Blackbourn
<johnbillion+wp at gmail.com>wrote:

> On 26 March 2013 09:47, Mike Little <wordpress at zed1.com> wrote:
> > Add terms to your custom taxonomies for "All Segments" and "All Price
> > Bands".
> >
> > Assign those to the appropriate CPT's
> >
> > Then always add "All segments" to segment search terms, and "all price
> > bands" to price band search terms.
> >
> > That will achieve the results you want with exactly the method you are
> > using now.
> >
> > Mike
>
> This is how I've achieved this in the past. Definitely the most
> straight forward method, otherwise you'll need to write the SQL for
> such a query.
>
> John
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From yojoaquin at gmail.com  Wed Mar 27 18:11:38 2013
From: yojoaquin at gmail.com (Joaquin Rodriguez Montero)
Date: Wed, 27 Mar 2013 15:11:38 -0300
Subject: [wp-hackers] get_user_meta cached
Message-ID: <CAAVCQdHGdt4yqKS2v5p_VisN+HXF4m6jAS618miWiDkHBNVjEQ@mail.gmail.com>

He guys, quick one: I'm updating / adding a user meta field via a form
through POST. It adds / update the data. But when the page refreshes I get
an old value. How can I avoid that? I guess is because the value was
cached.. but when I refresh the page again I get the new value.. could
anyone help me please? I'd like to see the new value immediately after the
form is sent and the page has refreshed because of this.

On my functions I've got:

function chocks_adds_mark($userid, $workid) {

     $meta_key = "work_id_".$workid;

     if(!empty($_POST['myMark'])) {

     $mark = $_POST['myMark'];

     update_user_meta("$userid","$meta_key", "$mark");

     }

}

And my form on single-attachment is:

<form name="marksform" method="post" action="<?php calificar($userid,
$workid); ?>" >

   <label>Calificaci?n: </label>

   <input type="text" name="myMark" value="<?php if(!empty($calificacion_nota))
: echo $calificacion_nota; endif; ?>" /><br />

   <?php wp_nonce_field('marksform'); ?>

   <input type="submit" name="enviar" value="Calificar"/>

   </form>

Thanks!

From lukebryan at sharefaith.com  Wed Mar 27 18:24:35 2013
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Wed, 27 Mar 2013 11:24:35 -0700
Subject: [wp-hackers] Wordpress 3.5 Gallery Bug
Message-ID: <CAFnKAk1LeFro5cJ2kQZmL6dunYbwBd_O5Vqc-ggMzR_nDK7q9w@mail.gmail.com>

Greetings all,

I was recently noticing a bug in the wordpress 3.5 gallery shortcode
placeholder:

First start a new post, click add-media, select a couple, select create
gallery, insert gallery. Immediately after, click add-media, cancel
gallery, and select some others and insert another gallery.

Type right after the gallery, then type right after the other gallery,
scroll down so it's not visible, and type some more.

Type before the gallery, before the other gallery, and type some more.
Click just before the gallery, and the galleries should disappear.

Inspecting the gallery placeholder shows it's the 1x1pixel image, and the
style is not applied. (The 1x1 image seems to be a workaround for when
copying and pasting doesn't keep the style and other information).
However, the wp_theme/content.css is still in the tinymce-iframe's head.
The style should apply, but it doesn't in this case, in Chrome. I see other
rules from wp_theme/content.css are applied, but not the img.wpGallery rule.
I'm wondering if this bug is in Wordpress, TinyMCE, a TinyMCE plugin, or
Webkit? If so, has it been reported?

Best regards,
Luke

From dyordan1 at ramapo.edu  Wed Mar 27 18:25:12 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Wed, 27 Mar 2013 14:25:12 -0400
Subject: [wp-hackers] Theme File Structure
Message-ID: <854F736C-C2AF-49CD-8A09-A8805ED1D217@ramapo.edu>

Hey guys,

Thought I could borrow your brain for something:

I'm working on a theme that is very specialized and very complicated. The more I add to it, the more of a hell it becomes to manage. My current strategy is to have individual folders for sections of functionality and in each folder have a main file that includes pretty much everything in that folder with some comments as to what each include is responsible for. Then, all of those "organizer" files are included in my functions.php file. Other than that, in the root of the theme I have a couple of templates and the usual sidebar/header/footer/style/index/etc. I also have a resources folder that contains extra css, js files and images/icons/etc. each type in a subfolder. Lastly, I have a utility folder that is not used by WordPress but is theme-related functionality that is used by automated scripting on the server. Is this a good file structure for the theme? It seems that all the folders are just a bunch of layers of nothing since everything ends up being included in the functions.php file anyway. Is there a better approach to organizing all of the code?

TL;DR: What is a good way to organize files in a complicated theme?

Thanks!

~Dobri


From mail at matthiasbreuer.com  Wed Mar 27 18:51:29 2013
From: mail at matthiasbreuer.com (Matthias Breuer)
Date: Wed, 27 Mar 2013 19:51:29 +0100
Subject: [wp-hackers] get_user_meta cached
In-Reply-To: <CAAVCQdHGdt4yqKS2v5p_VisN+HXF4m6jAS618miWiDkHBNVjEQ@mail.gmail.com>
References: <CAAVCQdHGdt4yqKS2v5p_VisN+HXF4m6jAS618miWiDkHBNVjEQ@mail.gmail.com>
Message-ID: <5B905DEB-BE61-4DAF-A8E8-F1E8B73412C5@matthiasbreuer.com>

Hi,

upon calling update_user_meta, which is calling the underlying update_metadata function, the cache for that item gets deleted (wp_cache_delete($object_id, $meta_type . '_meta'); L. 156 in wp-includes/meta.php).

Could it be that you are referencing the user meta in your code before the POST request is handled, this would explain how you get an outdated (not yet updated) value. If this is not the case, check try the clean_user_cache function, you can pass a user ID, or an WP_User object.

Normally what i do in a situation like this, and what i think is good practice, is to redirect the user after the POST request is handled to the same page with wp_redirect. This is good, because it clears all POST data and doesn't give an annoying message when the user accidentally or intentionally hits reload (also see http://en.wikipedia.org/wiki/Post/Redirect/Get).

I don't know where exactly you handle the POST request, but doing it on init or a different appropriate action can reduce the load time and handles the redirect early enough to be sent with the headers.

I hope this helps! Feel free to ask further questions if anything is unclear or you need more direct pointers.

Best,
Matthias


Am 27.03.2013 um 19:11 schrieb Joaquin Rodriguez Montero <yojoaquin at gmail.com>:

> He guys, quick one: I'm updating / adding a user meta field via a form
> through POST. It adds / update the data. But when the page refreshes I get
> an old value. How can I avoid that? I guess is because the value was
> cached.. but when I refresh the page again I get the new value.. could
> anyone help me please? I'd like to see the new value immediately after the
> form is sent and the page has refreshed because of this.
> 
> On my functions I've got:
> 
> function chocks_adds_mark($userid, $workid) {
> 
>     $meta_key = "work_id_".$workid;
> 
>     if(!empty($_POST['myMark'])) {
> 
>     $mark = $_POST['myMark'];
> 
>     update_user_meta("$userid","$meta_key", "$mark");
> 
>     }
> 
> }
> 
> And my form on single-attachment is:
> 
> <form name="marksform" method="post" action="<?php calificar($userid,
> $workid); ?>" >
> 
>   <label>Calificaci?n: </label>
> 
>   <input type="text" name="myMark" value="<?php if(!empty($calificacion_nota))
> : echo $calificacion_nota; endif; ?>" /><br />
> 
>   <?php wp_nonce_field('marksform'); ?>
> 
>   <input type="submit" name="enviar" value="Calificar"/>
> 
>   </form>
> 
> Thanks!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From piemanek at gmail.com  Wed Mar 27 19:03:26 2013
From: piemanek at gmail.com (Simon Blackbourn)
Date: Wed, 27 Mar 2013 19:03:26 +0000
Subject: [wp-hackers] get_user_meta cached
In-Reply-To: <5B905DEB-BE61-4DAF-A8E8-F1E8B73412C5@matthiasbreuer.com>
References: <CAAVCQdHGdt4yqKS2v5p_VisN+HXF4m6jAS618miWiDkHBNVjEQ@mail.gmail.com>
	<5B905DEB-BE61-4DAF-A8E8-F1E8B73412C5@matthiasbreuer.com>
Message-ID: <CAJxFMSBucyWOAHBKmB0QJMAYsJK005tR45Q=QGGxL=KvtjCHeg@mail.gmail.com>

Are you running APC on your server? I had the same issue (affecting options
as well as meta data) which turned out to be caused by an old version of
APC [1]. After updating to a newer version (using PECL) the issue went away.

[1]
http://wordpress.org/support/topic/plugin-apc-object-cache-backend-changes-to-options-pages-not-showing


On 27 March 2013 18:51, Matthias Breuer <mail at matthiasbreuer.com> wrote:

> Hi,
>
> upon calling update_user_meta, which is calling the underlying
> update_metadata function, the cache for that item gets deleted
> (wp_cache_delete($object_id, $meta_type . '_meta'); L. 156 in
> wp-includes/meta.php).
>
> Could it be that you are referencing the user meta in your code before the
> POST request is handled, this would explain how you get an outdated (not
> yet updated) value. If this is not the case, check try the clean_user_cache
> function, you can pass a user ID, or an WP_User object.
>
> Normally what i do in a situation like this, and what i think is good
> practice, is to redirect the user after the POST request is handled to the
> same page with wp_redirect. This is good, because it clears all POST data
> and doesn't give an annoying message when the user accidentally or
> intentionally hits reload (also see
> http://en.wikipedia.org/wiki/Post/Redirect/Get).
>
> I don't know where exactly you handle the POST request, but doing it on
> init or a different appropriate action can reduce the load time and handles
> the redirect early enough to be sent with the headers.
>
> I hope this helps! Feel free to ask further questions if anything is
> unclear or you need more direct pointers.
>
> Best,
> Matthias
>
>
> Am 27.03.2013 um 19:11 schrieb Joaquin Rodriguez Montero <
> yojoaquin at gmail.com>:
>
> > He guys, quick one: I'm updating / adding a user meta field via a form
> > through POST. It adds / update the data. But when the page refreshes I
> get
> > an old value. How can I avoid that? I guess is because the value was
> > cached.. but when I refresh the page again I get the new value.. could
> > anyone help me please? I'd like to see the new value immediately after
> the
> > form is sent and the page has refreshed because of this.
> >
> > On my functions I've got:
> >
> > function chocks_adds_mark($userid, $workid) {
> >
> >     $meta_key = "work_id_".$workid;
> >
> >     if(!empty($_POST['myMark'])) {
> >
> >     $mark = $_POST['myMark'];
> >
> >     update_user_meta("$userid","$meta_key", "$mark");
> >
> >     }
> >
> > }
> >
> > And my form on single-attachment is:
> >
> > <form name="marksform" method="post" action="<?php calificar($userid,
> > $workid); ?>" >
> >
> >   <label>Calificaci?n: </label>
> >
> >   <input type="text" name="myMark" value="<?php
> if(!empty($calificacion_nota))
> > : echo $calificacion_nota; endif; ?>" /><br />
> >
> >   <?php wp_nonce_field('marksform'); ?>
> >
> >   <input type="submit" name="enviar" value="Calificar"/>
> >
> >   </form>
> >
> > Thanks!
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From andrew.bartel at gmail.com  Wed Mar 27 21:11:38 2013
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Wed, 27 Mar 2013 14:11:38 -0700
Subject: [wp-hackers] Theme File Structure
In-Reply-To: <854F736C-C2AF-49CD-8A09-A8805ED1D217@ramapo.edu>
References: <854F736C-C2AF-49CD-8A09-A8805ED1D217@ramapo.edu>
Message-ID: <CAJnHr4jzZE+WfEisz4a_=v7ROf_wBP9Mr3NMK7v2wUO8jzviZg@mail.gmail.com>

Depends, is this going to be a publicly released theme?  If not, I often
abstract functionality that isn't directly content display related to one
off plugins for that project only.  I started doing that after reading this
article: http://wpcandy.com/teaches/how-to-create-a-functionality-plugin

For themes that going to be reused across projects I generally follow the
basics of the file structure you described.

-Andrew Bartel


On Wed, Mar 27, 2013 at 11:25 AM, Dobri <dyordan1 at ramapo.edu> wrote:

> Hey guys,
>
> Thought I could borrow your brain for something:
>
> I'm working on a theme that is very specialized and very complicated. The
> more I add to it, the more of a hell it becomes to manage. My current
> strategy is to have individual folders for sections of functionality and in
> each folder have a main file that includes pretty much everything in that
> folder with some comments as to what each include is responsible for. Then,
> all of those "organizer" files are included in my functions.php file. Other
> than that, in the root of the theme I have a couple of templates and the
> usual sidebar/header/footer/style/index/etc. I also have a resources folder
> that contains extra css, js files and images/icons/etc. each type in a
> subfolder. Lastly, I have a utility folder that is not used by WordPress
> but is theme-related functionality that is used by automated scripting on
> the server. Is this a good file structure for the theme? It seems that all
> the folders are just a bunch of layers of nothing since everything ends up
> being included in the funct
>  ions.php file anyway. Is there a better approach to organizing all of the
> code?
>
> TL;DR: What is a good way to organize files in a complicated theme?
>
> Thanks!
>
> ~Dobri
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ian at iandunn.name  Wed Mar 27 21:50:26 2013
From: ian at iandunn.name (Ian Dunn)
Date: Wed, 27 Mar 2013 14:50:26 -0700
Subject: [wp-hackers] Adding the "Insert From URL" tab to a 3.5 upload modal
In-Reply-To: <51535B1C.3010500@mpangodev.com>
References: <51535B1C.3010500@mpangodev.com>
Message-ID: <515369A2.8060404@iandunn.name>

I'm trying to add the "Insert From URL" tab to a 3.5 media upload modal 
in a widget, but I'm stumped.

I've inserted the uploader by running this JavaScript when a button is 
clicked on: http://pastebin.com/wLJ56z76. That gives me a modal that has 
the "Upload Files" and "Media Library" tabs 
(http://i.stack.imgur.com/KV78g.png), but I also want it to have the 
"Insert From URL" tab that you get when you click on the "Add Media" 
button while editing a post/page.

I've spent a couple hours digging around the web, reading through the 
source code and watching Daryl Koopersmith's presentation on the 
uploader's internals (http://www.youtube.com/watch?v=j5KPXLzuBXE), but 
haven't been able to figure out how to add the URL tab.

Can someone point me in the right direction? Is there a parameter I can 
pass to wp.media() to include it, or should I use one of the built-in 
views/models that includes it?

Thanks,
Ian

From dunhakdis at gmail.com  Fri Mar 29 03:35:59 2013
From: dunhakdis at gmail.com (joseph gabito)
Date: Thu, 28 Mar 2013 20:35:59 -0700
Subject: [wp-hackers] Theme File Structure
In-Reply-To: <CAJnHr4jzZE+WfEisz4a_=v7ROf_wBP9Mr3NMK7v2wUO8jzviZg@mail.gmail.com>
References: <854F736C-C2AF-49CD-8A09-A8805ED1D217@ramapo.edu>
	<CAJnHr4jzZE+WfEisz4a_=v7ROf_wBP9Mr3NMK7v2wUO8jzviZg@mail.gmail.com>
Message-ID: <CALtVJD4jXt0zDQMyCZmbFhjGy=wiU8cqBQyh0CockHPTbabRBA@mail.gmail.com>

You should be keeping files in the theme that are responsible for the
'skin' and the majority of the 'front-end' functionality of your site. If
your site is becoming too hard to manage as you add functionality, you
should develop an individual plugin to handle separate tasks. This way you
can cut the system down into pieces making it easier to manage.

On Wed, Mar 27, 2013 at 2:11 PM, Andrew Bartel <andrew.bartel at gmail.com>wrote:

> Depends, is this going to be a publicly released theme?  If not, I often
> abstract functionality that isn't directly content display related to one
> off plugins for that project only.  I started doing that after reading this
> article: http://wpcandy.com/teaches/how-to-create-a-functionality-plugin
>
> For themes that going to be reused across projects I generally follow the
> basics of the file structure you described.
>
> -Andrew Bartel
>
>
> On Wed, Mar 27, 2013 at 11:25 AM, Dobri <dyordan1 at ramapo.edu> wrote:
>
> > Hey guys,
> >
> > Thought I could borrow your brain for something:
> >
> > I'm working on a theme that is very specialized and very complicated. The
> > more I add to it, the more of a hell it becomes to manage. My current
> > strategy is to have individual folders for sections of functionality and
> in
> > each folder have a main file that includes pretty much everything in that
> > folder with some comments as to what each include is responsible for.
> Then,
> > all of those "organizer" files are included in my functions.php file.
> Other
> > than that, in the root of the theme I have a couple of templates and the
> > usual sidebar/header/footer/style/index/etc. I also have a resources
> folder
> > that contains extra css, js files and images/icons/etc. each type in a
> > subfolder. Lastly, I have a utility folder that is not used by WordPress
> > but is theme-related functionality that is used by automated scripting on
> > the server. Is this a good file structure for the theme? It seems that
> all
> > the folders are just a bunch of layers of nothing since everything ends
> up
> > being included in the funct
> >  ions.php file anyway. Is there a better approach to organizing all of
> the
> > code?
> >
> > TL;DR: What is a good way to organize files in a complicated theme?
> >
> > Thanks!
> >
> > ~Dobri
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
dunhakdis

From dunhakdis at gmail.com  Fri Mar 29 03:38:54 2013
From: dunhakdis at gmail.com (joseph gabito)
Date: Thu, 28 Mar 2013 20:38:54 -0700
Subject: [wp-hackers] get_categories() add post type to arguments?
In-Reply-To: <CAOKL2K=JcFiP1ipH4rj5h95CkCHxmOPgOCKKvmXrL1JBPnKx7w@mail.gmail.com>
References: <CAOKL2K=JcFiP1ipH4rj5h95CkCHxmOPgOCKKvmXrL1JBPnKx7w@mail.gmail.com>
Message-ID: <CALtVJD5wP19dwiZ4N0ch8FjR+H-a1jstdSksDaDXZR=RsB5H6A@mail.gmail.com>

You're doing it wrong. get_categories() function supports custom taxonomy.
With this, you need to create a custom taxonomy for your post type.

On Mon, Mar 25, 2013 at 9:46 AM, Radi Varbanov <aparoph at gmail.com> wrote:

> As of right now the function does not let you specify post type.
> Would it be possible to add post_type to the arguments for get_categories()
> ?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
dunhakdis

From dunhakdis at gmail.com  Fri Mar 29 04:00:50 2013
From: dunhakdis at gmail.com (joseph gabito)
Date: Thu, 28 Mar 2013 21:00:50 -0700
Subject: [wp-hackers] limit images displayed in the media upload window ?
In-Reply-To: <C36FF369-176B-4951-96C7-3374A27257E0@a5d.org>
References: <20130326105406.AF3A3381132@smtp-3.ramapo.edu>
	<C36FF369-176B-4951-96C7-3374A27257E0@a5d.org>
Message-ID: <CALtVJD7CDWFadv2NPJzDRY_4MqaZv1tNKBnea0KMW4h8JGfdpA@mail.gmail.com>

Just curious. Did the file you uploaded wen to wp-uploads?

On Tue, Mar 26, 2013 at 3:59 AM, A5D <info at a5d.org> wrote:

> Thanks for proving I'm not just imagining posting to the list!
>
> ;)
>
> Even if I create a new page, with no images on, the same 129 images only
> show.
> Even if I then upload and save etc then go back the same images are
> displayed BUT then also include those added to that particular page.
> If I then go to another page then go back to the previous page, the images
> are no longer listed.
>
> Thanks for the response, I'm digging around WP and Google to see if
> there's a fix/ it's a bug etc.
>
> Lee
>
> On 26 Mar 2013, at 10:54, dyordan1 at ramapo.edu wrote:
>
> > Lee,
> >
> > If it makes you feel any better I?ve noticed the same problem too. It
> seems that WordPress has a limit to how many images it will show at a time
> and you took the time to count that limit to 129. It has been an issue for
> me exactly once, when I had more than that many images on a single page.
> For all other cases, I upload media files to the page I?m going to use them
> on so if I switch to the Uploaded to this Page from the dropdown, it shows
> everything and I don?t have to worry about it. I?m guessing that?s not a
> solution for you though so I would look through this page for anything
> interesting and then dig the core to find out more:
> >
> >
> >
> > http://adambrown.info/p/wp_hooks/hook
> >
> >
> >
> > Maybe there?s a filter for that somewhere. I wouldn?t think it?s a
> dropdown select or something in Settings though so you?ll have to code it
> into your theme/plugin. Good Luck!
> >
> >
> > ~Dobri
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
dunhakdis

From lukebryan at sharefaith.com  Sat Mar 30 16:29:08 2013
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Sat, 30 Mar 2013 09:29:08 -0700
Subject: [wp-hackers] Adding the "Insert From URL" tab to a 3.5 upload
	modal
Message-ID: <CAFnKAk34PgPnQEGDoACRdvWJzaR9Krv1_5PGTmYn=8mRmCxjXw@mail.gmail.com>

For debugging Wordpress' javascript, it's very helpful to have the
minifying turned off:
https://codex.wordpress.org/Debugging_in_WordPress#SCRIPT_DEBUG

Now enter 'wp.media' in Firebug, it will give you a link to the function
definition. As you can see in the source, there are two completely
different classes that are called up depending on the frame attribute:

if ( 'select' === attributes.frame && MediaFrame.Select )
frame = new MediaFrame.Select( attributes );
else if ( 'post' === attributes.frame && MediaFrame.Post )
frame = new MediaFrame.Post( attributes );

Which is why wp.media({frame:'select'}).open() (simple, featured image
picker) is completely different than wp.media({frame:'post'}).open() full
picker.

To expand upon this question - I'm also wondering why these are separate
classes for basically the same file picking functionality. The frame:post
option gives a picker similar to the old one, which shows the insert-url
tab, and can be hooked by NextGen gallery and others, but the simple
featured-image-picker doesn't seem to have any way to hook plugin
functionality into it (or add insert-url tab).

http://wordpress.stackexchange.com/questions/76980/add-a-menu-item-to-wordpress-3-5-media-manager
This answer here looks like the new right-way to extend the new WP3.5
uploader, without the old style iframes. Unfortunately, it doesn't show in
the simple (featured-image) picker. A similar problem exists in NextGen
now, since you can't select a NextGen image from the featured-image.

Is there a recommended way to add a nextgen-style picker, or an additional
option to the 'media' category, for both the post-uploader and the
featured-image style uploader? Will these two pickers be unified in 3.6 or
3.7?

Best regards,
Luke

From halukkaramete at gmail.com  Sat Mar 30 18:51:21 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Sat, 30 Mar 2013 11:51:21 -0700
Subject: [wp-hackers] term_meta
Message-ID: <CAHERW=1BZAznupHk0mh2vi_NadJU2k1gQdHG-X-GmV+igss5AQ@mail.gmail.com>

two questions...

What is the ETA on term_meta?

and what would you recommend for the time being for this need?

What I need to is the following;

for each taxonomy_term, I'd like to have brief description, detailed
description, a representative image ref, type ( such as it's a place/ or
people or event or a concept etc and depending on which ever type it is
some more properties such as if it's a place, is that a geographical
location, school, landmark, etc and if it was of the type of  people, is
that a politician, athlete etc etc...

What's the best way to handle this need.

One idea is to copy a post_meta table and the API's that deal with that a
put together something that mimics similar functionality, similar API
names. But I think someone might have already done that.

Another idea is to create an internal CPT called "term_taxonomies", and
create a post for each and every term created under the post_tags. ( I have
a controlled tag library so the tags do not grow wild ).

This way, I plan on doing things like when the user is on say, /tag/istanbul

do a look up on the slug "istanbul" to locate the corresponding CPT entry
and read the image, description, type info and display things with it. Kind
of like what google has started doing as demonstrated on this URL.

https://www.google.com/search?q=istanbul&rlz=1C1CHFX_enUS486US486&aq=f&oq=istanbul&aqs=chrome.0.57j61j59j5j60j0.2335j0&sourceid=chrome&ie=UTF-8

Of course, I would like to get links on that zone such as istanbul
landmarks, schools, as clickable links.

What's your take on this? How would you pull this off with the current
state of WP?

From tcbarrett at gmail.com  Sat Mar 30 19:17:51 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Sat, 30 Mar 2013 19:17:51 +0000
Subject: [wp-hackers] term_meta
In-Reply-To: <CAHERW=1BZAznupHk0mh2vi_NadJU2k1gQdHG-X-GmV+igss5AQ@mail.gmail.com>
References: <CAHERW=1BZAznupHk0mh2vi_NadJU2k1gQdHG-X-GmV+igss5AQ@mail.gmail.com>
Message-ID: <CAEgmxaYyz7jTGD=rnPCqEbF5P7UZaEq0jG+DPMD8icPPm_1n5g@mail.gmail.com>

Term meta has been argued a lot. So I'm not adding to that.

I would use posts to posts plugin.

// Sent by Nexus
On 30 Mar 2013 18:51, "Haluk Karamete" <halukkaramete at gmail.com> wrote:

> two questions...
>
> What is the ETA on term_meta?
>
> and what would you recommend for the time being for this need?
>
> What I need to is the following;
>
> for each taxonomy_term, I'd like to have brief description, detailed
> description, a representative image ref, type ( such as it's a place/ or
> people or event or a concept etc and depending on which ever type it is
> some more properties such as if it's a place, is that a geographical
> location, school, landmark, etc and if it was of the type of  people, is
> that a politician, athlete etc etc...
>
> What's the best way to handle this need.
>
> One idea is to copy a post_meta table and the API's that deal with that a
> put together something that mimics similar functionality, similar API
> names. But I think someone might have already done that.
>
> Another idea is to create an internal CPT called "term_taxonomies", and
> create a post for each and every term created under the post_tags. ( I have
> a controlled tag library so the tags do not grow wild ).
>
> This way, I plan on doing things like when the user is on say,
> /tag/istanbul
>
> do a look up on the slug "istanbul" to locate the corresponding CPT entry
> and read the image, description, type info and display things with it. Kind
> of like what google has started doing as demonstrated on this URL.
>
>
> https://www.google.com/search?q=istanbul&rlz=1C1CHFX_enUS486US486&aq=f&oq=istanbul&aqs=chrome.0.57j61j59j5j60j0.2335j0&sourceid=chrome&ie=UTF-8
>
> Of course, I would like to get links on that zone such as istanbul
> landmarks, schools, as clickable links.
>
> What's your take on this? How would you pull this off with the current
> state of WP?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From alexkoti at gmail.com  Sat Mar 30 20:23:23 2013
From: alexkoti at gmail.com (Alex Koti)
Date: Sat, 30 Mar 2013 17:23:23 -0300
Subject: [wp-hackers] term_meta
In-Reply-To: <CAHERW=1BZAznupHk0mh2vi_NadJU2k1gQdHG-X-GmV+igss5AQ@mail.gmail.com>
References: <CAHERW=1BZAznupHk0mh2vi_NadJU2k1gQdHG-X-GmV+igss5AQ@mail.gmail.com>
Message-ID: <CAK3tRZ-JOMCODqwNWBHJ7-MhbhBNkPmo0-81+rGmqj1pdyxWGw@mail.gmail.com>

I used these articles:
http://shibashake.com/wordpress-theme/add-term-or-taxonomy-meta-data
http://www.codehooligans.com/2010/07/07/custom-meta-for-new-taxonomies-in-wordpress-3-0/

From lists at alexking.org  Sat Mar 30 21:06:30 2013
From: lists at alexking.org (Alex King)
Date: Sat, 30 Mar 2013 15:06:30 -0600
Subject: [wp-hackers] term_meta
In-Reply-To: <CAHERW=1BZAznupHk0mh2vi_NadJU2k1gQdHG-X-GmV+igss5AQ@mail.gmail.com>
References: <CAHERW=1BZAznupHk0mh2vi_NadJU2k1gQdHG-X-GmV+igss5AQ@mail.gmail.com>
Message-ID: <5AF67EE3-BCC0-437F-9D3E-7ECB05BC5EEE@alexking.org>

You might take a look at this:

https://github.com/crowdfavorite/wp-tax-post-binding

it binds a custom post type to your taxonomy and creates a post for each term you create. Changes to your terms are mirrored to the posts. You then manage your meta, content, media, etc. as attached to the post, with easy accessor methods for getting to that data from the term.

This way you're always swimming downstream.

I use it for Threads, if you're interested in sample code:

https://github.com/crowdfavorite/wp-threads
http://wordpress.org/extend/plugins/threads/
http://alexking.org/blog/2013/03/17/announcing-threads

Cheers,
--Alex

http://alexking.org | http://crowdfavorite.com




On Mar 30, 2013, at 12:51 PM, Haluk Karamete <halukkaramete at gmail.com> wrote:

> two questions...
> 
> What is the ETA on term_meta?
> 
> and what would you recommend for the time being for this need?
> 
> What I need to is the following;
> 
> for each taxonomy_term, I'd like to have brief description, detailed
> description, a representative image ref, type ( such as it's a place/ or
> people or event or a concept etc and depending on which ever type it is
> some more properties such as if it's a place, is that a geographical
> location, school, landmark, etc and if it was of the type of  people, is
> that a politician, athlete etc etc...
> 
> What's the best way to handle this need.
> 
> One idea is to copy a post_meta table and the API's that deal with that a
> put together something that mimics similar functionality, similar API
> names. But I think someone might have already done that.
> 
> Another idea is to create an internal CPT called "term_taxonomies", and
> create a post for each and every term created under the post_tags. ( I have
> a controlled tag library so the tags do not grow wild ).
> 
> This way, I plan on doing things like when the user is on say, /tag/istanbul
> 
> do a look up on the slug "istanbul" to locate the corresponding CPT entry
> and read the image, description, type info and display things with it. Kind
> of like what google has started doing as demonstrated on this URL.
> 
> https://www.google.com/search?q=istanbul&rlz=1C1CHFX_enUS486US486&aq=f&oq=istanbul&aqs=chrome.0.57j61j59j5j60j0.2335j0&sourceid=chrome&ie=UTF-8
> 
> Of course, I would like to get links on that zone such as istanbul
> landmarks, schools, as clickable links.
> 
> What's your take on this? How would you pull this off with the current
> state of WP?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From joshua.sibelman at gmail.com  Sat Mar 30 21:25:51 2013
From: joshua.sibelman at gmail.com (Joshua Sibelman)
Date: Sat, 30 Mar 2013 14:25:51 -0700
Subject: [wp-hackers] term_meta
In-Reply-To: <5AF67EE3-BCC0-437F-9D3E-7ECB05BC5EEE@alexking.org>
References: <CAHERW=1BZAznupHk0mh2vi_NadJU2k1gQdHG-X-GmV+igss5AQ@mail.gmail.com>
	<5AF67EE3-BCC0-437F-9D3E-7ECB05BC5EEE@alexking.org>
Message-ID: <1D7562B0-45A7-4287-BEAA-EB1B5F82C803@gmail.com>

Thanks for sharing this Alex, I will definitely make use of it.


On Mar 30, 2013, at 2:06 PM, Alex King <lists at alexking.org> wrote:

> You might take a look at this:
> 
> https://github.com/crowdfavorite/wp-tax-post-binding
> 
> it binds a custom post type to your taxonomy and creates a post for each term you create. Changes to your terms are mirrored to the posts. You then manage your meta, content, media, etc. as attached to the post, with easy accessor methods for getting to that data from the term.
> 
> This way you're always swimming downstream.
> 
> I use it for Threads, if you're interested in sample code:
> 
> https://github.com/crowdfavorite/wp-threads
> http://wordpress.org/extend/plugins/threads/
> http://alexking.org/blog/2013/03/17/announcing-threads
> 
> Cheers,
> --Alex
> 
> http://alexking.org | http://crowdfavorite.com
> 
> 
> 
> 
> On Mar 30, 2013, at 12:51 PM, Haluk Karamete <halukkaramete at gmail.com> wrote:
> 
>> two questions...
>> 
>> What is the ETA on term_meta?
>> 
>> and what would you recommend for the time being for this need?
>> 
>> What I need to is the following;
>> 
>> for each taxonomy_term, I'd like to have brief description, detailed
>> description, a representative image ref, type ( such as it's a place/ or
>> people or event or a concept etc and depending on which ever type it is
>> some more properties such as if it's a place, is that a geographical
>> location, school, landmark, etc and if it was of the type of  people, is
>> that a politician, athlete etc etc...
>> 
>> What's the best way to handle this need.
>> 
>> One idea is to copy a post_meta table and the API's that deal with that a
>> put together something that mimics similar functionality, similar API
>> names. But I think someone might have already done that.
>> 
>> Another idea is to create an internal CPT called "term_taxonomies", and
>> create a post for each and every term created under the post_tags. ( I have
>> a controlled tag library so the tags do not grow wild ).
>> 
>> This way, I plan on doing things like when the user is on say, /tag/istanbul
>> 
>> do a look up on the slug "istanbul" to locate the corresponding CPT entry
>> and read the image, description, type info and display things with it. Kind
>> of like what google has started doing as demonstrated on this URL.
>> 
>> https://www.google.com/search?q=istanbul&rlz=1C1CHFX_enUS486US486&aq=f&oq=istanbul&aqs=chrome.0.57j61j59j5j60j0.2335j0&sourceid=chrome&ie=UTF-8
>> 
>> Of course, I would like to get links on that zone such as istanbul
>> landmarks, schools, as clickable links.
>> 
>> What's your take on this? How would you pull this off with the current
>> state of WP?
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From sinan at sinanisler.com  Sun Mar 31 00:46:03 2013
From: sinan at sinanisler.com (Sinan)
Date: Sun, 31 Mar 2013 02:46:03 +0200
Subject: [wp-hackers] term_meta
In-Reply-To: <1D7562B0-45A7-4287-BEAA-EB1B5F82C803@gmail.com>
References: <CAHERW=1BZAznupHk0mh2vi_NadJU2k1gQdHG-X-GmV+igss5AQ@mail.gmail.com>
	<5AF67EE3-BCC0-437F-9D3E-7ECB05BC5EEE@alexking.org>
	<1D7562B0-45A7-4287-BEAA-EB1B5F82C803@gmail.com>
Message-ID: <CABmkrsEtvVeeafuGhQAk-gWaZfsbQK8iGJ5otyRxnfizMXxQEQ@mail.gmail.com>

Haluk
Look at this example for Relational Architecture
http://www.codeprex.com/wordpress-ozel-yazi-bicimi-custom-post-type-ve-taxonomy/
 (Turkish)




2013/3/30 Joshua Sibelman <joshua.sibelman at gmail.com>

> Thanks for sharing this Alex, I will definitely make use of it.
>
>
> On Mar 30, 2013, at 2:06 PM, Alex King <lists at alexking.org> wrote:
>
> > You might take a look at this:
> >
> > https://github.com/crowdfavorite/wp-tax-post-binding
> >
> > it binds a custom post type to your taxonomy and creates a post for each
> term you create. Changes to your terms are mirrored to the posts. You then
> manage your meta, content, media, etc. as attached to the post, with easy
> accessor methods for getting to that data from the term.
> >
> > This way you're always swimming downstream.
> >
> > I use it for Threads, if you're interested in sample code:
> >
> > https://github.com/crowdfavorite/wp-threads
> > http://wordpress.org/extend/plugins/threads/
> > http://alexking.org/blog/2013/03/17/announcing-threads
> >
> > Cheers,
> > --Alex
> >
> > http://alexking.org | http://crowdfavorite.com
> >
> >
> >
> >
> > On Mar 30, 2013, at 12:51 PM, Haluk Karamete <halukkaramete at gmail.com>
> wrote:
> >
> >> two questions...
> >>
> >> What is the ETA on term_meta?
> >>
> >> and what would you recommend for the time being for this need?
> >>
> >> What I need to is the following;
> >>
> >> for each taxonomy_term, I'd like to have brief description, detailed
> >> description, a representative image ref, type ( such as it's a place/ or
> >> people or event or a concept etc and depending on which ever type it is
> >> some more properties such as if it's a place, is that a geographical
> >> location, school, landmark, etc and if it was of the type of  people, is
> >> that a politician, athlete etc etc...
> >>
> >> What's the best way to handle this need.
> >>
> >> One idea is to copy a post_meta table and the API's that deal with that
> a
> >> put together something that mimics similar functionality, similar API
> >> names. But I think someone might have already done that.
> >>
> >> Another idea is to create an internal CPT called "term_taxonomies", and
> >> create a post for each and every term created under the post_tags. ( I
> have
> >> a controlled tag library so the tags do not grow wild ).
> >>
> >> This way, I plan on doing things like when the user is on say,
> /tag/istanbul
> >>
> >> do a look up on the slug "istanbul" to locate the corresponding CPT
> entry
> >> and read the image, description, type info and display things with it.
> Kind
> >> of like what google has started doing as demonstrated on this URL.
> >>
> >>
> https://www.google.com/search?q=istanbul&rlz=1C1CHFX_enUS486US486&aq=f&oq=istanbul&aqs=chrome.0.57j61j59j5j60j0.2335j0&sourceid=chrome&ie=UTF-8
> >>
> >> Of course, I would like to get links on that zone such as istanbul
> >> landmarks, schools, as clickable links.
> >>
> >> What's your take on this? How would you pull this off with the current
> >> state of WP?
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

