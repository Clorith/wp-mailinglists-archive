From greglancaster71 at gmail.com  Wed Jan  1 03:01:19 2014
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Tue, 31 Dec 2013 19:01:19 -0800 (PST)
Subject: [wp-hackers] wp_send_json_success not working with array?
Message-ID: <1388545279145-43098.post@n5.nabble.com>

Here is my code - The goal is to return the database data formatted to update
a JS chart.  For some reason the function isnt even seeing the $chartData as
executing.  if ($chartData) returns false.

function ams_chart_range_selection() {
    global $wpdb, $_current_member;


    $range = $_POST['range'];
    $limit = 5;
    if ($range == 'week' )
        $limit = 7;
    elseif ($range == 'month') {
        $limit = 30;
    } else
        $limit = 90;


    $logDataTable = $wpdb->prefix . 'jo_plugin_options';
    $chartData = $wpdb->get_results( $wpdb->prepare("SELECT * FROM
$logDataTable WHERE user_id =  %d ORDER BY date ASC LIMIT %d",
$_current_member->ID, $limit), ARRAY_A );

    $max = count($chartData);
    $converted = array();
    $counter = 0;

    foreach ($chartData as $item) {
        $converted[] = "[".$counter++.",".$item['date']."]";
        $list = implode(",",$converted);
    }

    if (!$chartData) {
        wp_send_json_error();

        } else {

        $data = array(
            'range' => $range,
            'list' => $list );


        wp_send_json_success($data);


    }


}



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/wp-send-json-success-not-working-with-array-tp43098.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From david at ernsts.us  Wed Jan  1 05:49:35 2014
From: david at ernsts.us (David Ernst)
Date: Wed, 1 Jan 2014 00:49:35 -0500
Subject: [wp-hackers] wp_send_json_success not working with array?
In-Reply-To: <1388545279145-43098.post@n5.nabble.com>
References: <1388545279145-43098.post@n5.nabble.com>
Message-ID: <CANmL2P85v1eoX-L6mwyX=RLVvxM9Jz+dy3FB_GtRcm_E+eZnAg@mail.gmail.com>

Hey Greg? do you have skype? I really admire your attitude. Happy New Years!
?David

On Tuesday, December 31, 2013, BenderisGreat wrote:

> Here is my code - The goal is to return the database data formatted to
> update
> a JS chart.  For some reason the function isnt even seeing the $chartData
> as
> executing.  if ($chartData) returns false.
>
> function ams_chart_range_selection() {
>     global $wpdb, $_current_member;
>
>
>     $range = $_POST['range'];
>     $limit = 5;
>     if ($range == 'week' )
>         $limit = 7;
>     elseif ($range == 'month') {
>         $limit = 30;
>     } else
>         $limit = 90;
>
>
>     $logDataTable = $wpdb->prefix . 'jo_plugin_options';
>     $chartData = $wpdb->get_results( $wpdb->prepare("SELECT * FROM
> $logDataTable WHERE user_id =  %d ORDER BY date ASC LIMIT %d",
> $_current_member->ID, $limit), ARRAY_A );
>
>     $max = count($chartData);
>     $converted = array();
>     $counter = 0;
>
>     foreach ($chartData as $item) {
>         $converted[] = "[".$counter++.",".$item['date']."]";
>         $list = implode(",",$converted);
>     }
>
>     if (!$chartData) {
>         wp_send_json_error();
>
>         } else {
>
>         $data = array(
>             'range' => $range,
>             'list' => $list );
>
>
>         wp_send_json_success($data);
>
>
>     }
>
>
> }
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/wp-send-json-success-not-working-with-array-tp43098.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From frank at bueltge.de  Wed Jan  1 10:16:04 2014
From: frank at bueltge.de (Frank Bueltge)
Date: Wed, 1 Jan 2014 11:16:04 +0100
Subject: [wp-hackers] markdown library options...
In-Reply-To: <CEE82EC3.62EA%chris@lod.com>
References: <CAHERW=3D64NpsC6vev0piC8ce8rxeEpLEwNs1DNkQ3ao5YUN0g@mail.gmail.com>
 <CAH9UVvEV7XC-jeFKqzPNpYqq2tNwUc9qR97F=jjLWW_ywqy9qw@mail.gmail.com>
 <CEE82EC3.62EA%chris@lod.com>
Message-ID: <CAH9UVvHb0rBu=T+wE=3jU5oRFOLYMWe76VTfN5NfDn+LRJ2jOQ@mail.gmail.com>

Sorry, the wrong link in my mobile.
Use this https://github.com/erusev/parsedown

LG Frank
Am 31.12.2013 14:21 schrieb "Chris McCoy" <chris at lod.com>:

> Don?t think that is markdown, its just a downloadable bootstrap template,
> unless Im missing something?
>
>
>
> On 12/31/2013, 8:10 AM, "Frank Bueltge" <frank at bueltge.de> wrote:
>
> >Yes, you have found the popular project. A alternative is this
> >http://www.blacktie.co/2013/12/flatty-app-landing-page/
> >
> >Best wishes and happy new year
> >Frank
> >Am 31.12.2013 05:38 schrieb "Haluk Karamete" <halukkaramete at gmail.com>:
> >
> >> Is there a markdown library you guys would recommend?
> >> I want to grab the base library and create a function out of that.
> >>
> >> I found this http://michelf.ca/projects/php-markdown/
> >> I was wondering if you guys would recommend some other ones as well -
> >>for
> >> me to take a look?
> >>
> >> Thank you
> >>
> >> PS: I do **not** need a markdown WordPress plug in -
> >> I only need a PHP library for Markdown.
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >_______________________________________________
> >wp-hackers mailing list
> >wp-hackers at lists.automattic.com
> >http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdg at codesymphony.co  Wed Jan  1 13:42:04 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Wed, 1 Jan 2014 08:42:04 -0500
Subject: [wp-hackers] wp_send_json_success not working with array?
In-Reply-To: <1388545279145-43098.post@n5.nabble.com>
References: <1388545279145-43098.post@n5.nabble.com>
Message-ID: <1CB44B3F-C139-4E2F-9AC3-5E4A6EF2BB7E@codesymphony.co>

If you var_dump( $chartData ) what do you get? I suspect that the query is failing and you will get null.

Yes, wp_send_json_success() works with arrays. It is probably used primarily with arrays.

-J.D.

On Dec 31, 2013, at 10:01 PM, BenderisGreat <greglancaster71 at gmail.com> wrote:

> Here is my code - The goal is to return the database data formatted to update
> a JS chart.  For some reason the function isnt even seeing the $chartData as
> executing.  if ($chartData) returns false.
> 
> function ams_chart_range_selection() {
>   global $wpdb, $_current_member;
> 
> 
>   $range = $_POST['range'];
>   $limit = 5;
>   if ($range == 'week' )
>       $limit = 7;
>   elseif ($range == 'month') {
>       $limit = 30;
>   } else
>       $limit = 90;
> 
> 
>   $logDataTable = $wpdb->prefix . 'jo_plugin_options';
>   $chartData = $wpdb->get_results( $wpdb->prepare("SELECT * FROM
> $logDataTable WHERE user_id =  %d ORDER BY date ASC LIMIT %d",
> $_current_member->ID, $limit), ARRAY_A );
> 
>   $max = count($chartData);
>   $converted = array();
>   $counter = 0;
> 
>   foreach ($chartData as $item) {
>       $converted[] = "[".$counter++.",".$item['date']."]";
>       $list = implode(",",$converted);
>   }
> 
>   if (!$chartData) {
>       wp_send_json_error();
> 
>       } else {
> 
>       $data = array(
>           'range' => $range,
>           'list' => $list );
> 
> 
>       wp_send_json_success($data);
> 
> 
>   }
> 
> 
> }
> 
> 
> 
> --
> View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/wp-send-json-success-not-working-with-array-tp43098.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mpwalsh8 at gmail.com  Fri Jan  3 15:10:27 2014
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Fri, 3 Jan 2014 10:10:27 -0500
Subject: [wp-hackers] get_users() exhausts memory with 'all_with_meta'
	argument
Message-ID: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>

I am working with a couple users who use the Email Users plugin where
memory is being exhausted when calling get_users() with the 'fields'
argument set to 'all_with_meta'.  In both cases, the sites have a large
number of users (one has 13k, the other 4.5k).  In both cases a call to
get_users() without any arguments succeeds but fails when the
'all_with_meta' option is used.

Anyone run into this before?  If so, how did you resolve it?

So this works:

$u = get_users();

But this fails:

$u = get_users(array(fields => 'all_with_meta'));

I've asked one user to do add the following to their wp-config.php to see
if it makes a difference:

define('WP_MEMORY_LIMIT', '512M');

It may work for this site however I am not sure if it simply delays a
future failure or actually fixes it (if it does at all).

Mike
-- 
Mike Walsh - mpwalsh8 at gmail.com

From nikolov.tmw at gmail.com  Fri Jan  3 16:01:47 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Fri, 3 Jan 2014 18:01:47 +0200
Subject: [wp-hackers] get_users() exhausts memory with 'all_with_meta'
	argument
In-Reply-To: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>
References: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>
Message-ID: <CAOwx47e2kOMn_PdGur8ZB3NmS5MR1wEAb0+Rn-YZY8yKQGPBjQ@mail.gmail.com>

Do you/they really need all of the meta fields for all users? Since WP_User
can load meta field values as properties of the user object( or by using
$user->get( $meta_key ) ), I don't see why you would need to load all of
the meta fields into the memory.

The problem here is because of the fact that they have lots of users(each
one with their own meta information), creating an array of objects with all
of this data just depletes the allocated memory for the PHP process.

So, while loading the meta values as properties of the object might end-up
slower(since I believe, you have to make a separate request to get each
field from the DB), it should in theory work.

They might want to get rid of the user objects that they no longer need -
so something like this:

foreach ( $users as $i => $user ) {
    // Do something with the user object here
    // Now get rid of the user object
    unset( $users[ $i ] );
}

I'm saying they *might*, because they might have enough memory to handle
all user objects when they don't load all of the fields, but instead just
some of them.


Also, it might be a better alternative to create a script that would do
what they are trying to do in incremental steps(maybe 100, or 500, or
however many users work without exhausting the memory limit) instead of in
one big chunk.


On Fri, Jan 3, 2014 at 5:10 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:

> I am working with a couple users who use the Email Users plugin where
> memory is being exhausted when calling get_users() with the 'fields'
> argument set to 'all_with_meta'.  In both cases, the sites have a large
> number of users (one has 13k, the other 4.5k).  In both cases a call to
> get_users() without any arguments succeeds but fails when the
> 'all_with_meta' option is used.
>
> Anyone run into this before?  If so, how did you resolve it?
>
> So this works:
>
> $u = get_users();
>
> But this fails:
>
> $u = get_users(array(fields => 'all_with_meta'));
>
> I've asked one user to do add the following to their wp-config.php to see
> if it makes a difference:
>
> define('WP_MEMORY_LIMIT', '512M');
>
> It may work for this site however I am not sure if it simply delays a
> future failure or actually fixes it (if it does at all).
>
> Mike
> --
> Mike Walsh - mpwalsh8 at gmail.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdg at codesymphony.co  Fri Jan  3 16:17:30 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Fri, 3 Jan 2014 11:17:30 -0500
Subject: [wp-hackers] get_users() exhausts memory with 'all_with_meta'
	argument
In-Reply-To: <CAOwx47e2kOMn_PdGur8ZB3NmS5MR1wEAb0+Rn-YZY8yKQGPBjQ@mail.gmail.com>
References: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>
 <CAOwx47e2kOMn_PdGur8ZB3NmS5MR1wEAb0+Rn-YZY8yKQGPBjQ@mail.gmail.com>
Message-ID: <65285D89-3703-41E4-AC5F-15E57E013A09@codesymphony.co>


On Jan 3, 2014, at 11:01 AM, Nikola Nikolov <nikolov.tmw at gmail.com> wrote:

> Do you/they really need all of the meta fields for all users? Since WP_User
> can load meta field values as properties of the user object( or by using
> $user->get( $meta_key ) ), I don't see why you would need to load all of
> the meta fields into the memory.
> 
> The problem here is because of the fact that they have lots of users(each
> one with their own meta information), creating an array of objects with all
> of this data just depletes the allocated memory for the PHP process.
> 
> So, while loading the meta values as properties of the object might end-up
> slower(since I believe, you have to make a separate request to get each
> field from the DB), it should in theory work.

Actually, the meta fields are never retrieved until called for explicitly. All the ?all_with_meta? field does is return WP_User objects that give easy access for retrieving the meta if needed, rather than dumb objects like it does otherwise.

> Also, it might be a better alternative to create a script that would do
> what they are trying to do in incremental steps(maybe 100, or 500, or
> however many users work without exhausting the memory limit) instead of in
> one big chunk.

Yeah, you should pull out like 500 or so at a  time. You can use get_users() to do that, just use the number and offset parameters.

-J.D.



From otto at ottodestruct.com  Fri Jan  3 16:45:23 2014
From: otto at ottodestruct.com (Otto)
Date: Fri, 3 Jan 2014 10:45:23 -0600
Subject: [wp-hackers] get_users() exhausts memory with 'all_with_meta'
	argument
In-Reply-To: <65285D89-3703-41E4-AC5F-15E57E013A09@codesymphony.co>
References: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>
 <CAOwx47e2kOMn_PdGur8ZB3NmS5MR1wEAb0+Rn-YZY8yKQGPBjQ@mail.gmail.com>
 <65285D89-3703-41E4-AC5F-15E57E013A09@codesymphony.co>
Message-ID: <CAD-FghziQjam7g=PAjukaQTjs0AQ+qbXOfeOa2PZBg8SOF-1qw@mail.gmail.com>

On Fri, Jan 3, 2014 at 10:17 AM, J.D. Grimes <jdg at codesymphony.co> wrote:
> Actually, the meta fields are never retrieved until called for explicitly. All the ?all_with_meta? field does is return WP_User objects that give easy access for retrieving the meta if needed, rather than dumb objects like it does otherwise.

No, I think it does actually get all the data from the DB.

Looking at trunk, if you examine wp-includes/user.php, line 577-578,
you find this:

if ( 'all_with_meta' == $qv['fields'] ) {
   cache_users( $this->results );

The cache_users function is over in wp-includes/pluggable.php. It
first does a "SELECT * FROM $wpdb->users" for the relevant IDs, thus
getting those user fields into memory. However, it then goes on to
call the update_meta_cache() function with the id's of the users.

The update_meta_cache function (over in wp-includes/meta.php) will do
a SELECT of all the meta info from that user meta table for those IDs
and store them in the object cache.

So yes, it is loading all that meta data into memory (the object
cache) in advance. If you have a lot of users and are not using a
persistent object cache, this will eat up lots and lots of PHP memory.

Best to avoid using all_with_meta for large result sets, unless
wp_using_ext_object_cache() returns true.

-Otto

From jdg at codesymphony.co  Fri Jan  3 17:21:56 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Fri, 3 Jan 2014 12:21:56 -0500
Subject: [wp-hackers] get_users() exhausts memory with 'all_with_meta'
	argument
In-Reply-To: <CAD-FghziQjam7g=PAjukaQTjs0AQ+qbXOfeOa2PZBg8SOF-1qw@mail.gmail.com>
References: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>
 <CAOwx47e2kOMn_PdGur8ZB3NmS5MR1wEAb0+Rn-YZY8yKQGPBjQ@mail.gmail.com>
 <65285D89-3703-41E4-AC5F-15E57E013A09@codesymphony.co>
 <CAD-FghziQjam7g=PAjukaQTjs0AQ+qbXOfeOa2PZBg8SOF-1qw@mail.gmail.com>
Message-ID: <B66D1CE8-D824-4A53-AFBD-9554495564C6@codesymphony.co>

Ah, OK, I didn?t look at that function. So it would be better to just set fields to ?all? then, as that returns WP_User objects too. I didn?t know that, I guess because actually it didn?t prior to 3.5. I?ve updated the codex: http://codex.wordpress.org/Function_Reference/get_users#Parameters

-J.D.

On Jan 3, 2014, at 11:45 AM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Jan 3, 2014 at 10:17 AM, J.D. Grimes <jdg at codesymphony.co> wrote:
>> Actually, the meta fields are never retrieved until called for explicitly. All the ?all_with_meta? field does is return WP_User objects that give easy access for retrieving the meta if needed, rather than dumb objects like it does otherwise.
> 
> No, I think it does actually get all the data from the DB.
> 
> Looking at trunk, if you examine wp-includes/user.php, line 577-578,
> you find this:
> 
> if ( 'all_with_meta' == $qv['fields'] ) {
>   cache_users( $this->results );
> 
> The cache_users function is over in wp-includes/pluggable.php. It
> first does a "SELECT * FROM $wpdb->users" for the relevant IDs, thus
> getting those user fields into memory. However, it then goes on to
> call the update_meta_cache() function with the id's of the users.
> 
> The update_meta_cache function (over in wp-includes/meta.php) will do
> a SELECT of all the meta info from that user meta table for those IDs
> and store them in the object cache.
> 
> So yes, it is loading all that meta data into memory (the object
> cache) in advance. If you have a lot of users and are not using a
> persistent object cache, this will eat up lots and lots of PHP memory.
> 
> Best to avoid using all_with_meta for large result sets, unless
> wp_using_ext_object_cache() returns true.
> 
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jer at simianuprising.com  Fri Jan  3 18:15:17 2014
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri, 3 Jan 2014 13:15:17 -0500
Subject: [wp-hackers] get_users() exhausts memory with 'all_with_meta'
	argument
In-Reply-To: <B66D1CE8-D824-4A53-AFBD-9554495564C6@codesymphony.co>
References: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>
 <CAOwx47e2kOMn_PdGur8ZB3NmS5MR1wEAb0+Rn-YZY8yKQGPBjQ@mail.gmail.com>
 <65285D89-3703-41E4-AC5F-15E57E013A09@codesymphony.co>
 <CAD-FghziQjam7g=PAjukaQTjs0AQ+qbXOfeOa2PZBg8SOF-1qw@mail.gmail.com>
 <B66D1CE8-D824-4A53-AFBD-9554495564C6@codesymphony.co>
Message-ID: <CAAHgzDO1njbRaHkgvSf-Q7Rp7t8fDu7fXpm2jQTe7VPPXDLJnQ@mail.gmail.com>

FWIW the line where you increase memory limits isn't a good solution, as
each affected user will need to get in touch with you after your plugin
breaks their site, and the RAM usage will hurt everyone on their server if
it's shared hosting (assuming their host even tolerates increasing the
memory usage beyond a certain point).

The question is interesting because it seems like it really applies to any
plugin that might want to fetch all users with meta. Unless we know 100%
that there will never be more than $x users on the site a plugin runs on we
should probably all have some kind of inherent limiting built into "all
users" queries.

I'd approach this in one of two ways:

*If one actually only needs to operate on some of the users:*

Ideally you should find a way to limit the list of users you are fetching
BEFORE you retrieve them with their full meta contents. Maybe you can add
other query parameters to get_users that will reduce the total number of
users returned, which would mean less bloat from filling up the meta cache.

The big concern with that solution is that it's easy to end up swapping a
memory-consuming meta cache with a time-consuming SQL query (I bet user
queries based on meta fields are as slow as post queries based on meta
fields).

Another way of doing this would be to get all users without meta, loop
through them and test something non-meta-related to filter out the ones
that aren't necessary, then pass the remaining user ids as the 'include'
parameter of a second get_users call that fetches all meta. Queries with an
'include' parameter full of IDs are usually so fast they're basically
irrelevant, so the SQL penalty of doing two queries shouldn't be a concern.

Of course all that might not be an option for your plugin, but generally
speaking it's probably a best practice when dealing with "all users" on a
WP site.


*If one truly needs to do an operation on the meta of all users:*

Do like Nikola indicated and make this a batch process that does ~500 users
at a time by executing a loop that limits the query to 500 users and uses
an offset that increases by 500 each round.

Note that because the data is being saved to the WP object cache these
loops will add up over the course of the pageload, so you'll probably want
to use AJAX requests or something to handle the batches as separate
requests (i.e. so that after each loop the object cache gets cleared and
you don't end up with one process that contains the full objects of all
users).

Another option is to investigate the possibility of clearing each user from
the object cache after they've been "processed" by your script. Not sure
how you'd do that or if it's possible/feasible, but if you could do that
then you could skip the AJAX step, as each round of the 500-user-loop would
free up memory for the next loop.

A quick look at the siblings of wp_cache_get (/wp-includes/cache.php)
implies that wp_cache_delete() might do the trick.

Good luck :)

-- 
Jeremy Clarke ? jeremyclarke.org
Code and Design ? globalvoicesonline.org

From otto at ottodestruct.com  Fri Jan  3 18:36:17 2014
From: otto at ottodestruct.com (Otto)
Date: Fri, 3 Jan 2014 12:36:17 -0600
Subject: [wp-hackers] get_users() exhausts memory with 'all_with_meta'
	argument
In-Reply-To: <CAAHgzDO1njbRaHkgvSf-Q7Rp7t8fDu7fXpm2jQTe7VPPXDLJnQ@mail.gmail.com>
References: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>
 <CAOwx47e2kOMn_PdGur8ZB3NmS5MR1wEAb0+Rn-YZY8yKQGPBjQ@mail.gmail.com>
 <65285D89-3703-41E4-AC5F-15E57E013A09@codesymphony.co>
 <CAD-FghziQjam7g=PAjukaQTjs0AQ+qbXOfeOa2PZBg8SOF-1qw@mail.gmail.com>
 <B66D1CE8-D824-4A53-AFBD-9554495564C6@codesymphony.co>
 <CAAHgzDO1njbRaHkgvSf-Q7Rp7t8fDu7fXpm2jQTe7VPPXDLJnQ@mail.gmail.com>
Message-ID: <CAD-FghyGg6Ab_4zQcQZd1-nsxWH8vqiy8aT20jwxJqGkAe1wPA@mail.gmail.com>

On Fri, Jan 3, 2014 at 12:15 PM, Jeremy Clarke <jer at simianuprising.com> wrote:
> The question is interesting because it seems like it really applies to any
> plugin that might want to fetch all users with meta.

Realistically, there's no good reason to attempt to load all users
with all the meta all at once anyway. You should limit your queries to
something more sane.

Examine your specific case, and take action accordingly. The original
post mentioned the Email Users plugin. So unless you're actually
retrieving all the users to email them all at once, then don't call
get_users() without some limiting parameters.

The get_users() function is basically a wrapper for WP_User_Query,
which can take a number of limiting parameters. If you're needing to
page through users for display or selection, then it has a "number"
and "offset" field that can be used for paging, like it does for the
users list. Or, if you need to retrieve users that only have a
specific meta_key to allow them to be emailed (like an opt-in), then
you can send it a combination of meta_key/meta_value/meta_compare
parameters to limit the query to only return those users.

I can't think of any real case where you actually need not just all
the users, but all their meta too. You will certainly need some subset
of users, or all the users but without the need for the meta, or you
might need to page through them and get some of the meta about them
too. As long as you're careful to limit your requests to only that
which is needed, you will have far fewer problems.

-Otto

From mpwalsh8 at gmail.com  Fri Jan  3 19:29:19 2014
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Fri, 3 Jan 2014 14:29:19 -0500
Subject: [wp-hackers] get_users() exhausts memory with 'all_with_meta'
	argument
In-Reply-To: <CAD-FghyGg6Ab_4zQcQZd1-nsxWH8vqiy8aT20jwxJqGkAe1wPA@mail.gmail.com>
References: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>
 <CAOwx47e2kOMn_PdGur8ZB3NmS5MR1wEAb0+Rn-YZY8yKQGPBjQ@mail.gmail.com>
 <65285D89-3703-41E4-AC5F-15E57E013A09@codesymphony.co>
 <CAD-FghziQjam7g=PAjukaQTjs0AQ+qbXOfeOa2PZBg8SOF-1qw@mail.gmail.com>
 <B66D1CE8-D824-4A53-AFBD-9554495564C6@codesymphony.co>
 <CAAHgzDO1njbRaHkgvSf-Q7Rp7t8fDu7fXpm2jQTe7VPPXDLJnQ@mail.gmail.com>
 <CAD-FghyGg6Ab_4zQcQZd1-nsxWH8vqiy8aT20jwxJqGkAe1wPA@mail.gmail.com>
Message-ID: <CAMg3evGCiUdPgwZ7AP1fBmgbUTdw2HE6SvRO_T1Ge1Z7ouZKVg@mail.gmail.com>

Since I originally posted this I've been playing around with limits getting
500 users at a time.  This worked better but eventually failed as well on
the use case with 13K users.  After reading all of the replies so far, I
think it is due to the growing cache.  I added a check to watch the memory
increase with each query for 500 users and it steadily increases until
memory is exhausted.

To answer some of questions - the opt-in aspect is exactly what is stored
as meta data.  I took over this plugin a while back and this query model
has been part of it long before I started working on it.  Basically it does
a query for all users which have meta data and processes that.  The Codex
indicates the meta query has been available since 3.5.0 and this plugin
dates back to the 2.x days.

It probably makes sense to re-implement this portion of the code as it
appears pretty fragile.  One of those things that has been this way for
years and wasn't an issue because it never broke until now.

Mike


On Fri, Jan 3, 2014 at 1:36 PM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Jan 3, 2014 at 12:15 PM, Jeremy Clarke <jer at simianuprising.com>
> wrote:
> > The question is interesting because it seems like it really applies to
> any
> > plugin that might want to fetch all users with meta.
>
> Realistically, there's no good reason to attempt to load all users
> with all the meta all at once anyway. You should limit your queries to
> something more sane.
>
> Examine your specific case, and take action accordingly. The original
> post mentioned the Email Users plugin. So unless you're actually
> retrieving all the users to email them all at once, then don't call
> get_users() without some limiting parameters.
>
> The get_users() function is basically a wrapper for WP_User_Query,
> which can take a number of limiting parameters. If you're needing to
> page through users for display or selection, then it has a "number"
> and "offset" field that can be used for paging, like it does for the
> users list. Or, if you need to retrieve users that only have a
> specific meta_key to allow them to be emailed (like an opt-in), then
> you can send it a combination of meta_key/meta_value/meta_compare
> parameters to limit the query to only return those users.
>
> I can't think of any real case where you actually need not just all
> the users, but all their meta too. You will certainly need some subset
> of users, or all the users but without the need for the meta, or you
> might need to page through them and get some of the meta about them
> too. As long as you're careful to limit your requests to only that
> which is needed, you will have far fewer problems.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From otto at ottodestruct.com  Fri Jan  3 19:33:23 2014
From: otto at ottodestruct.com (Otto)
Date: Fri, 3 Jan 2014 13:33:23 -0600
Subject: [wp-hackers] get_users() exhausts memory with 'all_with_meta'
	argument
In-Reply-To: <CAMg3evGCiUdPgwZ7AP1fBmgbUTdw2HE6SvRO_T1Ge1Z7ouZKVg@mail.gmail.com>
References: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>
 <CAOwx47e2kOMn_PdGur8ZB3NmS5MR1wEAb0+Rn-YZY8yKQGPBjQ@mail.gmail.com>
 <65285D89-3703-41E4-AC5F-15E57E013A09@codesymphony.co>
 <CAD-FghziQjam7g=PAjukaQTjs0AQ+qbXOfeOa2PZBg8SOF-1qw@mail.gmail.com>
 <B66D1CE8-D824-4A53-AFBD-9554495564C6@codesymphony.co>
 <CAAHgzDO1njbRaHkgvSf-Q7Rp7t8fDu7fXpm2jQTe7VPPXDLJnQ@mail.gmail.com>
 <CAD-FghyGg6Ab_4zQcQZd1-nsxWH8vqiy8aT20jwxJqGkAe1wPA@mail.gmail.com>
 <CAMg3evGCiUdPgwZ7AP1fBmgbUTdw2HE6SvRO_T1Ge1Z7ouZKVg@mail.gmail.com>
Message-ID: <CAD-FghwUh+wOrVxw6PSymyrBXQj2=gxgEv-K9aL3eCZJ8T+_uQ@mail.gmail.com>

On Fri, Jan 3, 2014 at 1:29 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:
> To answer some of questions - the opt-in aspect is exactly what is stored
> as meta data.  I took over this plugin a while back and this query model
> has been part of it long before I started working on it.  Basically it does
> a query for all users which have meta data and processes that.  The Codex
> indicates the meta query has been available since 3.5.0 and this plugin
> dates back to the 2.x days.

Cool. So instead of doing get_users(array('fields' =>
'all_with_meta')), change it to:

get_users(array(
'meta_key' => 'your-opt-in-key',
'meta_value' => 'your-opt-in-value',
) )

And you should be good to go, most likely. This will only get the
users opted in and it won't try to cache all the meta data for all the
users at once.

-Otto

From mpwalsh8 at gmail.com  Fri Jan  3 20:33:31 2014
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Fri, 3 Jan 2014 15:33:31 -0500
Subject: [wp-hackers] get_users() exhausts memory with 'all_with_meta'
	argument
In-Reply-To: <CAD-FghwUh+wOrVxw6PSymyrBXQj2=gxgEv-K9aL3eCZJ8T+_uQ@mail.gmail.com>
References: <CAMg3evGoypJFTyEAPMs-DCMuotk+_axZys22B9G5Gv2sniXNkA@mail.gmail.com>
 <CAOwx47e2kOMn_PdGur8ZB3NmS5MR1wEAb0+Rn-YZY8yKQGPBjQ@mail.gmail.com>
 <65285D89-3703-41E4-AC5F-15E57E013A09@codesymphony.co>
 <CAD-FghziQjam7g=PAjukaQTjs0AQ+qbXOfeOa2PZBg8SOF-1qw@mail.gmail.com>
 <B66D1CE8-D824-4A53-AFBD-9554495564C6@codesymphony.co>
 <CAAHgzDO1njbRaHkgvSf-Q7Rp7t8fDu7fXpm2jQTe7VPPXDLJnQ@mail.gmail.com>
 <CAD-FghyGg6Ab_4zQcQZd1-nsxWH8vqiy8aT20jwxJqGkAe1wPA@mail.gmail.com>
 <CAMg3evGCiUdPgwZ7AP1fBmgbUTdw2HE6SvRO_T1Ge1Z7ouZKVg@mail.gmail.com>
 <CAD-FghwUh+wOrVxw6PSymyrBXQj2=gxgEv-K9aL3eCZJ8T+_uQ@mail.gmail.com>
Message-ID: <CAMg3evGU_-CGw_=R=jn_=Lf-PtbF7M8b9+LodgeE9sg_gVA+DA@mail.gmail.com>

It turns out the 'all_with_meta' wasn't necessary at all.  In the pre-3.x
days before the advent of the magic methods for the get_users() function
[see this:  http://scribu.net/wordpress/the-magic-of-wp_user.html] the
'all_with_meta' was used to retrieve the first and last names for each user
which is stored in the meta table.  Now that the meta data exists through
the 'magic' of get_users(), I no longer need 'all_with_meta' so I simply
eliminated the argument.  Now the memory usage for this site of 13k users
never goes above 46M-47M.

<!-- email-users.php::1084  Query #0  Memory Usage:  34.5M --><!--
email-users.php::1084  Query #1  Memory Usage:  34.75M --><!--
email-users.php::1084  Query #2  Memory Usage:  35.25M --><!--
email-users.php::1084  Query #3  Memory Usage:  35.75M --><!--
email-users.php::1084  Query #4  Memory Usage:  36.5M --><!--
email-users.php::1084  Query #5  Memory Usage:  37M --><!--
email-users.php::1084  Query #6  Memory Usage:  37.5M --><!--
email-users.php::1084  Query #7  Memory Usage:  37.75M --><!--
email-users.php::1084  Query #8  Memory Usage:  38.5M --><!--
email-users.php::1084  Query #9  Memory Usage:  39M --><!--
email-users.php::1084  Query #10  Memory Usage:  39.5M --><!--
email-users.php::1084  Query #11  Memory Usage:  39.75M --><!--
email-users.php::1084  Query #12  Memory Usage:  40.25M --><!--
email-users.php::1084  Query #13  Memory Usage:  40.75M --><!--
email-users.php::1084  Query #14  Memory Usage:  41.25M --><!--
email-users.php::1084  Query #15  Memory Usage:  41.5M --><!--
email-users.php::1084  Query #16  Memory Usage:  42.5M --><!--
email-users.php::1084  Query #17  Memory Usage:  43M --><!--
email-users.php::1084  Query #18  Memory Usage:  43.5M --><!--
email-users.php::1084  Query #19  Memory Usage:  44M --><!--
email-users.php::1084  Query #20  Memory Usage:  44.5M --><!--
email-users.php::1084  Query #21  Memory Usage:  44.5M --><!--
email-users.php::1084  Query #22  Memory Usage:  45.25M --><!--
email-users.php::1084  Query #23  Memory Usage:  45.75M --><!--
email-users.php::1084  Query #24  Memory Usage:  46M --><!--
email-users.php::1084  Query #25  Memory Usage:  46.5M --><!--
email-users.php::1084  Query #26  Memory Usage:  47M -->

I am not sure I need to break the query up into chunks of 500 any more
although I supose it doesn't hurt anything if I do.  I could also add
some sort of a fail safe that if memory approaches the max limit WP
defines, I could terminate the loop.

As always, thanks for the help on wp-hackers.

Mike



On Fri, Jan 3, 2014 at 2:33 PM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Jan 3, 2014 at 1:29 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:
> > To answer some of questions - the opt-in aspect is exactly what is stored
> > as meta data.  I took over this plugin a while back and this query model
> > has been part of it long before I started working on it.  Basically it
> does
> > a query for all users which have meta data and processes that.  The Codex
> > indicates the meta query has been available since 3.5.0 and this plugin
> > dates back to the 2.x days.
>
> Cool. So instead of doing get_users(array('fields' =>
> 'all_with_meta')), change it to:
>
> get_users(array(
> 'meta_key' => 'your-opt-in-key',
> 'meta_value' => 'your-opt-in-value',
> ) )
>
> And you should be good to go, most likely. This will only get the
> users opted in and it won't try to cache all the meta data for all the
> users at once.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From lukebryan at sharefaith.com  Sat Jan  4 05:35:19 2014
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Fri, 3 Jan 2014 21:35:19 -0800
Subject: [wp-hackers] Requirements for WP_Image_Editor?
Message-ID: <CAFnKAk2de28sxRFW9XdC5Lz0VZikFC+K7ZOcFZ2TCOuFFNLkpQ@mail.gmail.com>

Greetings all,

I've been having problems with the
WP_Image_Editor<http://codex.wordpress.org/Class_Reference/WP_Image_Editor>recently
- downsizing a gif with semitransparency will turn transparency to
black, and png can do that occasionally as well.

After digging into it I found that the WP_Image_Editor was using GD, not
Imagemagick - although Imagemagick was available, though it didn't seem to
have the PHP module set up, looking in phpinfo()... What are the
recommended ways to check what is keeping it from using Imagemagick?

I would file a bug on this, but am I correct in assuming this is one of the
somewhat well-known bugs in GD, rather than Wordpress' use of it?

Best regards,
Luke

From mailing at markoheijnen.nl  Sat Jan  4 11:13:40 2014
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Sat, 4 Jan 2014 12:13:40 +0100
Subject: [wp-hackers] Requirements for WP_Image_Editor?
In-Reply-To: <CAFnKAk2de28sxRFW9XdC5Lz0VZikFC+K7ZOcFZ2TCOuFFNLkpQ@mail.gmail.com>
References: <CAFnKAk2de28sxRFW9XdC5Lz0VZikFC+K7ZOcFZ2TCOuFFNLkpQ@mail.gmail.com>
Message-ID: <4F88ED7A-62DF-4965-85D5-1427D6882E6B@markoheijnen.nl>

Hey Luke,

There is a ticket that tries to preserve the transparency for GIF but GD doesn?t work doesn?t work well so things can break. See https://core.trac.wordpress.org/ticket/13461.
My recommendation will always be that you need to use Imagick then. So there is a change that the ticket will be closed as good enough.

For Imagemagick you need the PHP module Imagick installed. If that isn?t installed then it will choose GD.
I guess that will be the case here. Otherwise the software is really outdated en you need to fix that.

Best,
Marko


Op 4 jan. 2014, om 06:35 heeft Luke Bryan <lukebryan at sharefaith.com> het volgende geschreven:

> Greetings all,
> 
> I've been having problems with the
> WP_Image_Editor<http://codex.wordpress.org/Class_Reference/WP_Image_Editor>recently
> - downsizing a gif with semitransparency will turn transparency to
> black, and png can do that occasionally as well.
> 
> After digging into it I found that the WP_Image_Editor was using GD, not
> Imagemagick - although Imagemagick was available, though it didn't seem to
> have the PHP module set up, looking in phpinfo()... What are the
> recommended ways to check what is keeping it from using Imagemagick?
> 
> I would file a bug on this, but am I correct in assuming this is one of the
> somewhat well-known bugs in GD, rather than Wordpress' use of it?
> 
> Best regards,
> Luke
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From lukebryan at sharefaith.com  Sat Jan  4 20:01:14 2014
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Sat, 4 Jan 2014 12:01:14 -0800
Subject: [wp-hackers] Requirements for WP_Image_Editor?
Message-ID: <CAFnKAk17CzDt+s_izVOU160960x7Qp+K5yvjBMyH-6jx924jWw@mail.gmail.com>

Thanks Marco!

Is there any workaround or plugin to do this if the host doesn't have
Imagemagick PHP plugin, but you can call the Imagemagick executable?

Best regards,
Luke

From mailing at markoheijnen.nl  Sat Jan  4 20:21:37 2014
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Sat, 4 Jan 2014 21:21:37 +0100
Subject: [wp-hackers] Requirements for WP_Image_Editor?
In-Reply-To: <CAFnKAk17CzDt+s_izVOU160960x7Qp+K5yvjBMyH-6jx924jWw@mail.gmail.com>
References: <CAFnKAk17CzDt+s_izVOU160960x7Qp+K5yvjBMyH-6jx924jWw@mail.gmail.com>
Message-ID: <B93FC762-45A0-4D96-A130-A8562C846924@markoheijnen.nl>

Next time do write my name correct ;)

We did had the idea to build an editor that calls Imagemagick directly but we never released an editor for that.
You could build one yourself that calls imagemagick directly with exec() calls. Easiest way is to ask your hosting to install it.

Best,
Marko


Op 4 jan. 2014, om 21:01 heeft Luke Bryan <lukebryan at sharefaith.com> het volgende geschreven:

> Thanks Marco!
> 
> Is there any workaround or plugin to do this if the host doesn't have
> Imagemagick PHP plugin, but you can call the Imagemagick executable?
> 
> Best regards,
> Luke
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From halukkaramete at gmail.com  Sun Jan  5 15:35:56 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Sun, 5 Jan 2014 07:35:56 -0800
Subject: [wp-hackers] set_transient returns false on live server but true on
	local host.
Message-ID: <CAHERW=2sM7KBijPcJZ8FY2vt-+=Gr6PFVNoiR6QjRiVEhsuAFg@mail.gmail.com>

What would be the reason for the set_transient API to return FALSE on a
live server but TRUE on local host - that's obviously for the same code.

The only diff is live server is IIS and the local is Apache.

And how would I get to the bottom of a set_transient-returns-FALSE
situation?

I understand that the set_transient does not return an error object in the
case of something not going right.

From otto at ottodestruct.com  Sun Jan  5 15:52:04 2014
From: otto at ottodestruct.com (Otto)
Date: Sun, 5 Jan 2014 09:52:04 -0600
Subject: [wp-hackers] set_transient returns false on live server but
 true on local host.
In-Reply-To: <CAHERW=2sM7KBijPcJZ8FY2vt-+=Gr6PFVNoiR6QjRiVEhsuAFg@mail.gmail.com>
References: <CAHERW=2sM7KBijPcJZ8FY2vt-+=Gr6PFVNoiR6QjRiVEhsuAFg@mail.gmail.com>
Message-ID: <CAD-FghwDpD1wPic3wGR6_cH_pX9+WD38_L++PWPcZQ720N4gBw@mail.gmail.com>

If we assume that neither server has an external object cache set up,
then a return of false here most likely means that the insert or
update of the options table failed. In which case, check that the
options table doesn't need a REPAIR run on it.

-Otto


On Sun, Jan 5, 2014 at 9:35 AM, Haluk Karamete <halukkaramete at gmail.com> wrote:
> What would be the reason for the set_transient API to return FALSE on a
> live server but TRUE on local host - that's obviously for the same code.
>
> The only diff is live server is IIS and the local is Apache.
>
> And how would I get to the bottom of a set_transient-returns-FALSE
> situation?
>
> I understand that the set_transient does not return an error object in the
> case of something not going right.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From skretch at gmail.com  Sun Jan  5 16:33:37 2014
From: skretch at gmail.com (skretch at gmail.com)
Date: Sun, 5 Jan 2014 23:33:37 +0700
Subject: [wp-hackers] Cannot add plugin to WordPress plugin repository
Message-ID: <3278C133-0336-46E7-9D3B-51A9BF70C740@gmail.com>

Hi everyone,

I?ve been trying to add my plugin to WordPress plugin repository for the last 2 days.
No matter what name I enter, I always get "That name already exists. Please choose another name.?.

Is something wrong with the service? I?ve tried all kind of browsers and the same problem occurs.

Thank you!

From mario at peshev.net  Sun Jan  5 16:35:55 2014
From: mario at peshev.net (Mario Peshev)
Date: Sun, 5 Jan 2014 18:35:55 +0200
Subject: [wp-hackers] Cannot add plugin to WordPress plugin repository
In-Reply-To: <3278C133-0336-46E7-9D3B-51A9BF70C740@gmail.com>
References: <3278C133-0336-46E7-9D3B-51A9BF70C740@gmail.com>
Message-ID: <CAN_8tK5=63d_b0W7Qh4i9us9Ki1-q=w973UVTJF6O8ee1xUbLw@mail.gmail.com>

Have you considered the chance that your plugin name is already available
for another plugin and you have to rename it?


Mario Peshev
WordPress Engineer, Open Source Consultant
http://www.linkedin.com/in/mpeshev
http://me.peshev.net



On Sun, Jan 5, 2014 at 6:33 PM, <skretch at gmail.com> wrote:

> Hi everyone,
>
> I?ve been trying to add my plugin to WordPress plugin repository for the
> last 2 days.
> No matter what name I enter, I always get "That name already exists.
> Please choose another name.?.
>
> Is something wrong with the service? I?ve tried all kind of browsers and
> the same problem occurs.
>
> Thank you!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From skretch at gmail.com  Sun Jan  5 16:38:44 2014
From: skretch at gmail.com (skretch at gmail.com)
Date: Sun, 5 Jan 2014 23:38:44 +0700
Subject: [wp-hackers] Cannot add plugin to WordPress plugin repository
In-Reply-To: <CAN_8tK5=63d_b0W7Qh4i9us9Ki1-q=w973UVTJF6O8ee1xUbLw@mail.gmail.com>
References: <3278C133-0336-46E7-9D3B-51A9BF70C740@gmail.com>
 <CAN_8tK5=63d_b0W7Qh4i9us9Ki1-q=w973UVTJF6O8ee1xUbLw@mail.gmail.com>
Message-ID: <345F0D06-F9E6-4FDB-8595-D71A16573175@gmail.com>

Yes,
I have tried with silly names like ?is-this-one-taken-wp? but I still get the same result.

On Jan 5, 2014, at 11:35 PM, Mario Peshev <mario at peshev.net> wrote:

> Have you considered the chance that your plugin name is already available
> for another plugin and you have to rename it?
> 
> 
> Mario Peshev
> WordPress Engineer, Open Source Consultant
> http://www.linkedin.com/in/mpeshev
> http://me.peshev.net
> 
> 
> 
> On Sun, Jan 5, 2014 at 6:33 PM, <skretch at gmail.com> wrote:
> 
>> Hi everyone,
>> 
>> I?ve been trying to add my plugin to WordPress plugin repository for the
>> last 2 days.
>> No matter what name I enter, I always get "That name already exists.
>> Please choose another name.?.
>> 
>> Is something wrong with the service? I?ve tried all kind of browsers and
>> the same problem occurs.
>> 
>> Thank you!
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mario at peshev.net  Sun Jan  5 16:39:53 2014
From: mario at peshev.net (Mario Peshev)
Date: Sun, 5 Jan 2014 18:39:53 +0200
Subject: [wp-hackers] Cannot add plugin to WordPress plugin repository
In-Reply-To: <345F0D06-F9E6-4FDB-8595-D71A16573175@gmail.com>
References: <3278C133-0336-46E7-9D3B-51A9BF70C740@gmail.com>
 <CAN_8tK5=63d_b0W7Qh4i9us9Ki1-q=w973UVTJF6O8ee1xUbLw@mail.gmail.com>
 <345F0D06-F9E6-4FDB-8595-D71A16573175@gmail.com>
Message-ID: <CAN_8tK5SNEysft0+FQvBUgf9WyP7P42BKrg0ZPRd335-0-dCwQ@mail.gmail.com>

Did you update your plugin header or just the archive name?


Mario Peshev


On Sun, Jan 5, 2014 at 6:38 PM, <skretch at gmail.com> wrote:

> Yes,
> I have tried with silly names like ?is-this-one-taken-wp? but I still get
> the same result.
>
> On Jan 5, 2014, at 11:35 PM, Mario Peshev <mario at peshev.net> wrote:
>
> > Have you considered the chance that your plugin name is already available
> > for another plugin and you have to rename it?
> >
> >
> > Mario Peshev
> > WordPress Engineer, Open Source Consultant
> > http://www.linkedin.com/in/mpeshev
> > http://me.peshev.net
> >
> >
> >
> > On Sun, Jan 5, 2014 at 6:33 PM, <skretch at gmail.com> wrote:
> >
> >> Hi everyone,
> >>
> >> I?ve been trying to add my plugin to WordPress plugin repository for the
> >> last 2 days.
> >> No matter what name I enter, I always get "That name already exists.
> >> Please choose another name.?.
> >>
> >> Is something wrong with the service? I?ve tried all kind of browsers and
> >> the same problem occurs.
> >>
> >> Thank you!
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Sun Jan  5 16:45:19 2014
From: otto at ottodestruct.com (Otto)
Date: Sun, 5 Jan 2014 10:45:19 -0600
Subject: [wp-hackers] Cannot add plugin to WordPress plugin repository
In-Reply-To: <3278C133-0336-46E7-9D3B-51A9BF70C740@gmail.com>
References: <3278C133-0336-46E7-9D3B-51A9BF70C740@gmail.com>
Message-ID: <CAD-Fghy42BhKq-H-KN3USJgQQ+kFXH311+nbxtydionuC6A5kA@mail.gmail.com>

The error message is slightly mistaken for one edge case...

We no longer allow plugins that contain "WordPress" in their name. It
is, after all, slightly redundant.

Try choosing a better name. And remember, a "name" is not the same
thing as a "description". Too many people don't put any effort into
naming, IMO.

-Otto


On Sun, Jan 5, 2014 at 10:33 AM,  <skretch at gmail.com> wrote:
> Hi everyone,
>
> I?ve been trying to add my plugin to WordPress plugin repository for the last 2 days.
> No matter what name I enter, I always get "That name already exists. Please choose another name.?.
>
> Is something wrong with the service? I?ve tried all kind of browsers and the same problem occurs.
>
> Thank you!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From skretch at gmail.com  Sun Jan  5 16:46:10 2014
From: skretch at gmail.com (skretch at gmail.com)
Date: Sun, 5 Jan 2014 23:46:10 +0700
Subject: [wp-hackers] Cannot add plugin to WordPress plugin repository
In-Reply-To: <CAN_8tK5SNEysft0+FQvBUgf9WyP7P42BKrg0ZPRd335-0-dCwQ@mail.gmail.com>
References: <3278C133-0336-46E7-9D3B-51A9BF70C740@gmail.com>
 <CAN_8tK5=63d_b0W7Qh4i9us9Ki1-q=w973UVTJF6O8ee1xUbLw@mail.gmail.com>
 <345F0D06-F9E6-4FDB-8595-D71A16573175@gmail.com>
 <CAN_8tK5SNEysft0+FQvBUgf9WyP7P42BKrg0ZPRd335-0-dCwQ@mail.gmail.com>
Message-ID: <C8FE402E-A691-4950-8D76-25713230050C@gmail.com>

No, it is a totally new plugin. I am trying to submit it using http://wordpress.org/plugins/add/
It?s not my first plugin that I am adding to the repository? there must be something wrong :/


On Jan 5, 2014, at 11:39 PM, Mario Peshev <mario at peshev.net> wrote:

> Did you update your plugin header or just the archive name?
> 
> 
> Mario Peshev
> 
> 
> On Sun, Jan 5, 2014 at 6:38 PM, <skretch at gmail.com> wrote:
> 
>> Yes,
>> I have tried with silly names like ?is-this-one-taken-wp? but I still get
>> the same result.
>> 
>> On Jan 5, 2014, at 11:35 PM, Mario Peshev <mario at peshev.net> wrote:
>> 
>>> Have you considered the chance that your plugin name is already available
>>> for another plugin and you have to rename it?
>>> 
>>> 
>>> Mario Peshev
>>> WordPress Engineer, Open Source Consultant
>>> http://www.linkedin.com/in/mpeshev
>>> http://me.peshev.net
>>> 
>>> 
>>> 
>>> On Sun, Jan 5, 2014 at 6:33 PM, <skretch at gmail.com> wrote:
>>> 
>>>> Hi everyone,
>>>> 
>>>> I?ve been trying to add my plugin to WordPress plugin repository for the
>>>> last 2 days.
>>>> No matter what name I enter, I always get "That name already exists.
>>>> Please choose another name.?.
>>>> 
>>>> Is something wrong with the service? I?ve tried all kind of browsers and
>>>> the same problem occurs.
>>>> 
>>>> Thank you!
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From skretch at gmail.com  Sun Jan  5 16:47:11 2014
From: skretch at gmail.com (skretch at gmail.com)
Date: Sun, 5 Jan 2014 23:47:11 +0700
Subject: [wp-hackers] Cannot add plugin to WordPress plugin repository
In-Reply-To: <CAD-Fghy42BhKq-H-KN3USJgQQ+kFXH311+nbxtydionuC6A5kA@mail.gmail.com>
References: <3278C133-0336-46E7-9D3B-51A9BF70C740@gmail.com>
 <CAD-Fghy42BhKq-H-KN3USJgQQ+kFXH311+nbxtydionuC6A5kA@mail.gmail.com>
Message-ID: <808EE395-731E-43DF-8C99-5BBC0A42412E@gmail.com>

Otto,
That was the problem indeed.

Thanks!

On Jan 5, 2014, at 11:45 PM, Otto <otto at ottodestruct.com> wrote:

> The error message is slightly mistaken for one edge case...
> 
> We no longer allow plugins that contain "WordPress" in their name. It
> is, after all, slightly redundant.
> 
> Try choosing a better name. And remember, a "name" is not the same
> thing as a "description". Too many people don't put any effort into
> naming, IMO.
> 
> -Otto
> 
> 
> On Sun, Jan 5, 2014 at 10:33 AM,  <skretch at gmail.com> wrote:
>> Hi everyone,
>> 
>> I?ve been trying to add my plugin to WordPress plugin repository for the last 2 days.
>> No matter what name I enter, I always get "That name already exists. Please choose another name.?.
>> 
>> Is something wrong with the service? I?ve tried all kind of browsers and the same problem occurs.
>> 
>> Thank you!
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From halukkaramete at gmail.com  Sun Jan  5 17:41:54 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Sun, 5 Jan 2014 09:41:54 -0800
Subject: [wp-hackers] set_transient returns false on live server but
 true on local host.
In-Reply-To: <CAD-FghwDpD1wPic3wGR6_cH_pX9+WD38_L++PWPcZQ720N4gBw@mail.gmail.com>
References: <CAHERW=2sM7KBijPcJZ8FY2vt-+=Gr6PFVNoiR6QjRiVEhsuAFg@mail.gmail.com>
 <CAD-FghwDpD1wPic3wGR6_cH_pX9+WD38_L++PWPcZQ720N4gBw@mail.gmail.com>
Message-ID: <CAHERW=0iTrYxq88eo14O7sQ56o-3jw=Dziz2qBJdNu8kTqN3Cg@mail.gmail.com>

Otto, after your reminder about the external cachers, I found out that the
production server has total cache installed.

I tried the solution mentioned here
http://wordpress.stackexchange.com/questions/108287/trouble-with-transient-api-when-w3tc-is-activated

but no luck.

still the beautiful transient system that WordPress has for us is by passed
here...  I build a plug in tapping into the core transient API's left and
right... and it works like a charm on my localhost test environment...
but these external cache systems put a bullet hole into the basics...

Any recommendations?




On Sun, Jan 5, 2014 at 7:52 AM, Otto <otto at ottodestruct.com> wrote:

> If we assume that neither server has an external object cache set up,
> then a return of false here most likely means that the insert or
> update of the options table failed. In which case, check that the
> options table doesn't need a REPAIR run on it.
>
> -Otto
>
>
> On Sun, Jan 5, 2014 at 9:35 AM, Haluk Karamete <halukkaramete at gmail.com>
> wrote:
> > What would be the reason for the set_transient API to return FALSE on a
> > live server but TRUE on local host - that's obviously for the same code.
> >
> > The only diff is live server is IIS and the local is Apache.
> >
> > And how would I get to the bottom of a set_transient-returns-FALSE
> > situation?
> >
> > I understand that the set_transient does not return an error object in
> the
> > case of something not going right.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Sun Jan  5 21:53:42 2014
From: otto at ottodestruct.com (Otto)
Date: Sun, 5 Jan 2014 15:53:42 -0600
Subject: [wp-hackers] set_transient returns false on live server but
 true on local host.
In-Reply-To: <CAHERW=0iTrYxq88eo14O7sQ56o-3jw=Dziz2qBJdNu8kTqN3Cg@mail.gmail.com>
References: <CAHERW=2sM7KBijPcJZ8FY2vt-+=Gr6PFVNoiR6QjRiVEhsuAFg@mail.gmail.com>
 <CAD-FghwDpD1wPic3wGR6_cH_pX9+WD38_L++PWPcZQ720N4gBw@mail.gmail.com>
 <CAHERW=0iTrYxq88eo14O7sQ56o-3jw=Dziz2qBJdNu8kTqN3Cg@mail.gmail.com>
Message-ID: <CAD-FghzNzCh9aa-LmNykofNFb8ew=9Vdu31DepRQwTCLnxMkBQ@mail.gmail.com>

I use W3TC myself, and it works fine for me, but you do have to
configure it properly. Check the config there and make sure everything
is set right. Or, turn it off if you cannot find the config settings.

Caching isn't an end-user thing, it needs to be configured by an admin
who knows what he's doing.

-Otto


On Sun, Jan 5, 2014 at 11:41 AM, Haluk Karamete <halukkaramete at gmail.com> wrote:
> Otto, after your reminder about the external cachers, I found out that the
> production server has total cache installed.
>
> I tried the solution mentioned here
> http://wordpress.stackexchange.com/questions/108287/trouble-with-transient-api-when-w3tc-is-activated
>
> but no luck.
>
> still the beautiful transient system that WordPress has for us is by passed
> here...  I build a plug in tapping into the core transient API's left and
> right... and it works like a charm on my localhost test environment...
> but these external cache systems put a bullet hole into the basics...
>
> Any recommendations?
>
>
>
>
> On Sun, Jan 5, 2014 at 7:52 AM, Otto <otto at ottodestruct.com> wrote:
>
>> If we assume that neither server has an external object cache set up,
>> then a return of false here most likely means that the insert or
>> update of the options table failed. In which case, check that the
>> options table doesn't need a REPAIR run on it.
>>
>> -Otto
>>
>>
>> On Sun, Jan 5, 2014 at 9:35 AM, Haluk Karamete <halukkaramete at gmail.com>
>> wrote:
>> > What would be the reason for the set_transient API to return FALSE on a
>> > live server but TRUE on local host - that's obviously for the same code.
>> >
>> > The only diff is live server is IIS and the local is Apache.
>> >
>> > And how would I get to the bottom of a set_transient-returns-FALSE
>> > situation?
>> >
>> > I understand that the set_transient does not return an error object in
>> the
>> > case of something not going right.
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ljunior2005 at gmail.com  Mon Jan  6 15:58:50 2014
From: ljunior2005 at gmail.com (Leo Baiano)
Date: Mon, 6 Jan 2014 13:58:50 -0200
Subject: [wp-hackers] How to use $wpdb in plugins
Message-ID: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>

What better way to use the global $ wpdb in building a plugin? I'm working
on a plugin and some methods need to access data in the database tables,
including creating, and I was in doubt about the best way, like, do not
want to quit repeating global $ wpdb in all methods of my class.

How do you do?

-- 
Amplexos,

Leo Baiano
Web Developer

From contact at stephenharris.info  Mon Jan  6 16:03:32 2014
From: contact at stephenharris.info (Stephen Harris)
Date: Mon, 06 Jan 2014 16:03:32 +0000
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
References: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
Message-ID: <52CAD3D4.5080204@stephenharris.info>

If you are referring to the default database tables then there are 
functions available that allow you to add/remove/insert records. If 
these are custom tables then I typically would create functions which 
handle those operations, along with any required validation and 
sanitisation. That way any SQL statements (and the global $wpdb) are 
contained within those three (or thereabouts) functions.

On 06/01/14 15:58, Leo Baiano wrote:
> What better way to use the global $ wpdb in building a plugin? I'm working
> on a plugin and some methods need to access data in the database tables,
> including creating, and I was in doubt about the best way, like, do not
> want to quit repeating global $ wpdb in all methods of my class.
>
> How do you do?
>


From eric.andrew.lewis at gmail.com  Mon Jan  6 16:35:43 2014
From: eric.andrew.lewis at gmail.com (Eric Andrew Lewis)
Date: Mon, 6 Jan 2014 10:35:43 -0600
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
References: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
Message-ID: <D71B5F6A375A43EFBC715A841CBADB2A@gmail.com>

I think the best practice here is to define and use the $wpdb global in every method you need it. You could perhaps store it by reference in a class variable, or create a singleton wrapper for accessing $wpdb, but both of these are stepping out of the ?WordPress? way, and add a level of abstraction that isn?t adding much benefit, and perhaps confusing other programmers that touch your code.

--  
Eric Andrew Lewis


On Monday, January 6, 2014 at 9:58 AM, Leo Baiano wrote:

> What better way to use the global $ wpdb in building a plugin? I'm working
> on a plugin and some methods need to access data in the database tables,
> including creating, and I was in doubt about the best way, like, do not
> want to quit repeating global $ wpdb in all methods of my class.
>  
> How do you do?
>  
> --  
> Amplexos,
>  
> Leo Baiano
> Web Developer
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>  
>  



From ljunior2005 at gmail.com  Mon Jan  6 18:14:58 2014
From: ljunior2005 at gmail.com (Leo Baiano)
Date: Mon, 6 Jan 2014 16:14:58 -0200
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <D71B5F6A375A43EFBC715A841CBADB2A@gmail.com>
References: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
 <D71B5F6A375A43EFBC715A841CBADB2A@gmail.com>
Message-ID: <CAL1O-KXTnOCAeBpokuytRi95pOA3qB4N_H7xL6qNeq_BghrJ8g@mail.gmail.com>

I'm currently using calling global methods at all, I was not sure if that
was the best practice and why I sent this email.


2014/1/6 Eric Andrew Lewis <eric.andrew.lewis at gmail.com>

> I think the best practice here is to define and use the $wpdb global in
> every method you need it. You could perhaps store it by reference in a
> class variable, or create a singleton wrapper for accessing $wpdb, but both
> of these are stepping out of the ?WordPress? way, and add a level of
> abstraction that isn?t adding much benefit, and perhaps confusing other
> programmers that touch your code.
>
> --
> Eric Andrew Lewis
>
>
> On Monday, January 6, 2014 at 9:58 AM, Leo Baiano wrote:
>
> > What better way to use the global $ wpdb in building a plugin? I'm
> working
> > on a plugin and some methods need to access data in the database tables,
> > including creating, and I was in doubt about the best way, like, do not
> > want to quit repeating global $ wpdb in all methods of my class.
> >
> > How do you do?
> >
> > --
> > Amplexos,
> >
> > Leo Baiano
> > Web Developer
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Amplexos,

Leo Baiano
Web Developer

From bmay at alyte.com.au  Mon Jan  6 22:53:08 2014
From: bmay at alyte.com.au (Ben May)
Date: Tue, 7 Jan 2014 08:53:08 +1000
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
References: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
Message-ID: <CAOdX+r_yrq6chqiN3cG8BdETG3+7jp4gD5GGZXwEwpXgkmqmTw@mail.gmail.com>

I usually have a base class that all other classes extend, and have a
self::db() which basically globals $wpdb once and returns it, saves having
to write global $wpdb; each class.


On 7 January 2014 01:58, Leo Baiano <ljunior2005 at gmail.com> wrote:

> What better way to use the global $ wpdb in building a plugin? I'm working
> on a plugin and some methods need to access data in the database tables,
> including creating, and I was in doubt about the best way, like, do not
> want to quit repeating global $ wpdb in all methods of my class.
>
> How do you do?
>
> --
> Amplexos,
>
> Leo Baiano
> Web Developer
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ljunior2005 at gmail.com  Tue Jan  7 00:32:46 2014
From: ljunior2005 at gmail.com (Leo Baiano)
Date: Mon, 6 Jan 2014 22:32:46 -0200
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CAOdX+r_yrq6chqiN3cG8BdETG3+7jp4gD5GGZXwEwpXgkmqmTw@mail.gmail.com>
References: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
 <CAOdX+r_yrq6chqiN3cG8BdETG3+7jp4gD5GGZXwEwpXgkmqmTw@mail.gmail.com>
Message-ID: <CAL1O-KXdBWGbgGs-QhCGPur6A944Z3rk8v+4VTU5C-NB0m4f_w@mail.gmail.com>

I liked the idea, I'll do a test here.


2014/1/6 Ben May <bmay at alyte.com.au>

> I usually have a base class that all other classes extend, and have a
> self::db() which basically globals $wpdb once and returns it, saves having
> to write global $wpdb; each class.
>
>
> On 7 January 2014 01:58, Leo Baiano <ljunior2005 at gmail.com> wrote:
>
> > What better way to use the global $ wpdb in building a plugin? I'm
> working
> > on a plugin and some methods need to access data in the database tables,
> > including creating, and I was in doubt about the best way, like, do not
> > want to quit repeating global $ wpdb in all methods of my class.
> >
> > How do you do?
> >
> > --
> > Amplexos,
> >
> > Leo Baiano
> > Web Developer
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Amplexos,

Leo Baiano
Web Developer

From guus at inspiration-for-success.com  Tue Jan  7 09:09:32 2014
From: guus at inspiration-for-success.com (Guus (IFS))
Date: Tue, 7 Jan 2014 17:09:32 +0800
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CAOdX+r_yrq6chqiN3cG8BdETG3+7jp4gD5GGZXwEwpXgkmqmTw@mail.gmail.com>
References: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
 <CAOdX+r_yrq6chqiN3cG8BdETG3+7jp4gD5GGZXwEwpXgkmqmTw@mail.gmail.com>
Message-ID: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>

In newer PHP versions static calls are discouraged. Guess in future versions 
even disallowed.

-----Original Message----- 
From: Ben May
Sent: Tuesday, January 07, 2014 6:53 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] How to use $wpdb in plugins

I usually have a base class that all other classes extend, and have a
self::db() which basically globals $wpdb once and returns it, saves having
to write global $wpdb; each class.


On 7 January 2014 01:58, Leo Baiano <ljunior2005 at gmail.com> wrote:

> What better way to use the global $ wpdb in building a plugin? I'm working
> on a plugin and some methods need to access data in the database tables,
> including creating, and I was in doubt about the best way, like, do not
> want to quit repeating global $ wpdb in all methods of my class.
>
> How do you do?
>
> --
> Amplexos,
>
> Leo Baiano
> Web Developer
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 


From chris at clwill.com  Tue Jan  7 14:30:16 2014
From: chris at clwill.com (Chris Williams)
Date: Tue, 7 Jan 2014 09:30:16 -0500
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>
Message-ID: <CEF14F67.33F81%chris@clwill.com>

Evidence please?

On 1/7/14 1:09 AM, "Guus (IFS)" <guus at inspiration-for-success.com> wrote:

>In newer PHP versions static calls are discouraged. Guess in future
>versions 
>even disallowed.


From gabo.acosta624 at gmail.com  Tue Jan  7 14:38:19 2014
From: gabo.acosta624 at gmail.com (Gabriel Acosta)
Date: Tue, 7 Jan 2014 07:38:19 -0700
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CEF14F67.33F81%chris@clwill.com>
References: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>
 <CEF14F67.33F81%chris@clwill.com>
Message-ID: <CA+69t5=JOmHZU_SUxSRkhP3jd8dS4Er=CLFNeTg7hc+HGSFO4g@mail.gmail.com>

Static calls are discouraged? will be disallowed? o my god this list does
gets hilarious from time to time. What is actually discouraged, not from
the PHP standard but from other methodologies like OOP is the use of
globals, but clearly that's just the way WP is so...


On Tue, Jan 7, 2014 at 7:30 AM, Chris Williams <chris at clwill.com> wrote:

> Evidence please?
>
> On 1/7/14 1:09 AM, "Guus (IFS)" <guus at inspiration-for-success.com> wrote:
>
> >In newer PHP versions static calls are discouraged. Guess in future
> >versions
> >even disallowed.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ljunior2005 at gmail.com  Tue Jan  7 14:41:30 2014
From: ljunior2005 at gmail.com (Leo Baiano)
Date: Tue, 7 Jan 2014 12:41:30 -0200
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CA+69t5=JOmHZU_SUxSRkhP3jd8dS4Er=CLFNeTg7hc+HGSFO4g@mail.gmail.com>
References: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>
 <CEF14F67.33F81%chris@clwill.com>
 <CA+69t5=JOmHZU_SUxSRkhP3jd8dS4Er=CLFNeTg7hc+HGSFO4g@mail.gmail.com>
Message-ID: <CAL1O-KUiDmBzMh3A3-Y2vn0fP+gTzWN5MSTbqEP7tmyr9N=T5A@mail.gmail.com>

I believe you are mistaken Guus, it makes little sense to discourage the
use of Static calls


2014/1/7 Gabriel Acosta <gabo.acosta624 at gmail.com>

> Static calls are discouraged? will be disallowed? o my god this list does
> gets hilarious from time to time. What is actually discouraged, not from
> the PHP standard but from other methodologies like OOP is the use of
> globals, but clearly that's just the way WP is so...
>
>
> On Tue, Jan 7, 2014 at 7:30 AM, Chris Williams <chris at clwill.com> wrote:
>
> > Evidence please?
> >
> > On 1/7/14 1:09 AM, "Guus (IFS)" <guus at inspiration-for-success.com>
> wrote:
> >
> > >In newer PHP versions static calls are discouraged. Guess in future
> > >versions
> > >even disallowed.
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Amplexos,

Leo Baiano
Web Developer

From dyordan1 at ramapo.edu  Tue Jan  7 14:43:12 2014
From: dyordan1 at ramapo.edu (Dobri)
Date: Tue, 7 Jan 2014 09:43:12 -0500
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CAOdX+r_yrq6chqiN3cG8BdETG3+7jp4gD5GGZXwEwpXgkmqmTw@mail.gmail.com>
References: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
 <CAOdX+r_yrq6chqiN3cG8BdETG3+7jp4gD5GGZXwEwpXgkmqmTw@mail.gmail.com>
Message-ID: <1E663A11-B9AE-45B9-840D-22CCD0CFD6D8@ramapo.edu>

How is

$db = self::db();
//do stuff with $db

different from

global $wpdb;
//do stuff with $wpdb

Unless you use it for one call only (self::db()->query() or something), I don't see much benefit in this method?

~Dobri

On Mon, 6 Jan 2014, at 5:53 PM, Ben May wrote:

> I usually have a base class that all other classes extend, and have a
> self::db() which basically globals $wpdb once and returns it, saves having
> to write global $wpdb; each class.
> 
> 
> On 7 January 2014 01:58, Leo Baiano <ljunior2005 at gmail.com> wrote:
> 
>> What better way to use the global $ wpdb in building a plugin? I'm working
>> on a plugin and some methods need to access data in the database tables,
>> including creating, and I was in doubt about the best way, like, do not
>> want to quit repeating global $ wpdb in all methods of my class.
>> 
>> How do you do?
>> 
>> --
>> Amplexos,
>> 
>> Leo Baiano
>> Web Developer
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From guus at inspiration-for-success.com  Tue Jan  7 15:02:40 2014
From: guus at inspiration-for-success.com (Guus (IFS))
Date: Tue, 7 Jan 2014 23:02:40 +0800
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <1E663A11-B9AE-45B9-840D-22CCD0CFD6D8@ramapo.edu>
References: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
 <CAOdX+r_yrq6chqiN3cG8BdETG3+7jp4gD5GGZXwEwpXgkmqmTw@mail.gmail.com>
 <1E663A11-B9AE-45B9-840D-22CCD0CFD6D8@ramapo.edu>
Message-ID: <1C0C6EDC83DC4F378A9D701C171F1CF8@megaheights.net>

LOL

I had a similar idea already :).

-----Original Message----- 
From: Dobri
Sent: Tuesday, January 07, 2014 10:43 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] How to use $wpdb in plugins

How is

$db = self::db();
//do stuff with $db

different from

global $wpdb;
//do stuff with $wpdb

Unless you use it for one call only (self::db()->query() or something), I 
don't see much benefit in this method?

~Dobri

On Mon, 6 Jan 2014, at 5:53 PM, Ben May wrote:

> I usually have a base class that all other classes extend, and have a
> self::db() which basically globals $wpdb once and returns it, saves having
> to write global $wpdb; each class.
>
>
> On 7 January 2014 01:58, Leo Baiano <ljunior2005 at gmail.com> wrote:
>
>> What better way to use the global $ wpdb in building a plugin? I'm 
>> working
>> on a plugin and some methods need to access data in the database tables,
>> including creating, and I was in doubt about the best way, like, do not
>> want to quit repeating global $ wpdb in all methods of my class.
>>
>> How do you do?
>>
>> --
>> Amplexos,
>>
>> Leo Baiano
>> Web Developer
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 


From guus at inspiration-for-success.com  Tue Jan  7 15:03:46 2014
From: guus at inspiration-for-success.com (Guus (IFS))
Date: Tue, 7 Jan 2014 23:03:46 +0800
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CAL1O-KUiDmBzMh3A3-Y2vn0fP+gTzWN5MSTbqEP7tmyr9N=T5A@mail.gmail.com>
References: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>
 <CEF14F67.33F81%chris@clwill.com>
 <CA+69t5=JOmHZU_SUxSRkhP3jd8dS4Er=CLFNeTg7hc+HGSFO4g@mail.gmail.com>
 <CAL1O-KUiDmBzMh3A3-Y2vn0fP+gTzWN5MSTbqEP7tmyr9N=T5A@mail.gmail.com>
Message-ID: <A17BD43EA2114421A322F75E3600E160@megaheights.net>

PHP 5.4 and higher or something gives notices on static calls.

-----Original Message----- 
From: Leo Baiano 
Sent: Tuesday, January 07, 2014 10:41 PM 
To: wp-hackers at lists.automattic.com 
Subject: Re: [wp-hackers] How to use $wpdb in plugins 

I believe you are mistaken Guus, it makes little sense to discourage the
use of Static calls


2014/1/7 Gabriel Acosta <gabo.acosta624 at gmail.com>

> Static calls are discouraged? will be disallowed? o my god this list does
> gets hilarious from time to time. What is actually discouraged, not from
> the PHP standard but from other methodologies like OOP is the use of
> globals, but clearly that's just the way WP is so...
>
>
> On Tue, Jan 7, 2014 at 7:30 AM, Chris Williams <chris at clwill.com> wrote:
>
> > Evidence please?
> >
> > On 1/7/14 1:09 AM, "Guus (IFS)" <guus at inspiration-for-success.com>
> wrote:
> >
> > >In newer PHP versions static calls are discouraged. Guess in future
> > >versions
> > >even disallowed.
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Amplexos,

Leo Baiano
Web Developer
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From jdg at codesymphony.co  Tue Jan  7 15:06:32 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Tue, 7 Jan 2014 10:06:32 -0500
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <A17BD43EA2114421A322F75E3600E160@megaheights.net>
References: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>
 <CEF14F67.33F81%chris@clwill.com>
 <CA+69t5=JOmHZU_SUxSRkhP3jd8dS4Er=CLFNeTg7hc+HGSFO4g@mail.gmail.com>
 <CAL1O-KUiDmBzMh3A3-Y2vn0fP+gTzWN5MSTbqEP7tmyr9N=T5A@mail.gmail.com>
 <A17BD43EA2114421A322F75E3600E160@megaheights.net>
Message-ID: <E5F005B8-4940-42BE-B1C7-5A2F503F0D01@codesymphony.co>

Yes, but only if the method isn?t declared static.

On Jan 7, 2014, at 10:03 AM, Guus (IFS) <guus at inspiration-for-success.com> wrote:

> PHP 5.4 and higher or something gives notices on static calls.
> 
> -----Original Message----- From: Leo Baiano Sent: Tuesday, January 07, 2014 10:41 PM To: wp-hackers at lists.automattic.com Subject: Re: [wp-hackers] How to use $wpdb in plugins 
> I believe you are mistaken Guus, it makes little sense to discourage the
> use of Static calls
> 
> 
> 2014/1/7 Gabriel Acosta <gabo.acosta624 at gmail.com>
> 
>> Static calls are discouraged? will be disallowed? o my god this list does
>> gets hilarious from time to time. What is actually discouraged, not from
>> the PHP standard but from other methodologies like OOP is the use of
>> globals, but clearly that's just the way WP is so...
>> 
>> 
>> On Tue, Jan 7, 2014 at 7:30 AM, Chris Williams <chris at clwill.com> wrote:
>> 
>> > Evidence please?
>> >
>> > On 1/7/14 1:09 AM, "Guus (IFS)" <guus at inspiration-for-success.com>
>> wrote:
>> >
>> > >In newer PHP versions static calls are discouraged. Guess in future
>> > >versions
>> > >even disallowed.
>> >
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> -- 
> Amplexos,
> 
> Leo Baiano
> Web Developer
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From ljunior2005 at gmail.com  Tue Jan  7 15:15:36 2014
From: ljunior2005 at gmail.com (Leo Baiano)
Date: Tue, 7 Jan 2014 13:15:36 -0200
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <A17BD43EA2114421A322F75E3600E160@megaheights.net>
References: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>
 <CEF14F67.33F81%chris@clwill.com>
 <CA+69t5=JOmHZU_SUxSRkhP3jd8dS4Er=CLFNeTg7hc+HGSFO4g@mail.gmail.com>
 <CAL1O-KUiDmBzMh3A3-Y2vn0fP+gTzWN5MSTbqEP7tmyr9N=T5A@mail.gmail.com>
 <A17BD43EA2114421A322F75E3600E160@megaheights.net>
Message-ID: <CAL1O-KU1ciD8uhtutqpAsensXwUcVmU96EZVzVv9O7mOPhGHcw@mail.gmail.com>

Not if you declare the method as static.


2014/1/7 Guus (IFS) <guus at inspiration-for-success.com>

> PHP 5.4 and higher or something gives notices on static calls.
>
> -----Original Message----- From: Leo Baiano Sent: Tuesday, January 07,
> 2014 10:41 PM To: wp-hackers at lists.automattic.com Subject: Re:
> [wp-hackers] How to use $wpdb in plugins
> I believe you are mistaken Guus, it makes little sense to discourage the
> use of Static calls
>
>
> 2014/1/7 Gabriel Acosta <gabo.acosta624 at gmail.com>
>
>  Static calls are discouraged? will be disallowed? o my god this list does
>> gets hilarious from time to time. What is actually discouraged, not from
>> the PHP standard but from other methodologies like OOP is the use of
>> globals, but clearly that's just the way WP is so...
>>
>>
>> On Tue, Jan 7, 2014 at 7:30 AM, Chris Williams <chris at clwill.com> wrote:
>>
>> > Evidence please?
>> >
>> > On 1/7/14 1:09 AM, "Guus (IFS)" <guus at inspiration-for-success.com>
>> wrote:
>> >
>> > >In newer PHP versions static calls are discouraged. Guess in future
>> > >versions
>> > >even disallowed.
>> >
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>
>
> --
> Amplexos,
>
> Leo Baiano
> Web Developer
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Amplexos,

Leo Baiano
Web Developer

From gabo.acosta624 at gmail.com  Tue Jan  7 15:52:37 2014
From: gabo.acosta624 at gmail.com (Gabriel Acosta)
Date: Tue, 7 Jan 2014 08:52:37 -0700
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CAL1O-KU1ciD8uhtutqpAsensXwUcVmU96EZVzVv9O7mOPhGHcw@mail.gmail.com>
References: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>
 <CEF14F67.33F81%chris@clwill.com>
 <CA+69t5=JOmHZU_SUxSRkhP3jd8dS4Er=CLFNeTg7hc+HGSFO4g@mail.gmail.com>
 <CAL1O-KUiDmBzMh3A3-Y2vn0fP+gTzWN5MSTbqEP7tmyr9N=T5A@mail.gmail.com>
 <A17BD43EA2114421A322F75E3600E160@megaheights.net>
 <CAL1O-KU1ciD8uhtutqpAsensXwUcVmU96EZVzVv9O7mOPhGHcw@mail.gmail.com>
Message-ID: <CA+69t5nua0hjQDeiqC=GtA+2j_c6zCqJ4CzCDqYM0N0yybvTcw@mail.gmail.com>

"and higher or something" yup, sounds legit, lol


On Tue, Jan 7, 2014 at 8:15 AM, Leo Baiano <ljunior2005 at gmail.com> wrote:

> Not if you declare the method as static.
>
>
> 2014/1/7 Guus (IFS) <guus at inspiration-for-success.com>
>
> > PHP 5.4 and higher or something gives notices on static calls.
> >
> > -----Original Message----- From: Leo Baiano Sent: Tuesday, January 07,
> > 2014 10:41 PM To: wp-hackers at lists.automattic.com Subject: Re:
> > [wp-hackers] How to use $wpdb in plugins
> > I believe you are mistaken Guus, it makes little sense to discourage the
> > use of Static calls
> >
> >
> > 2014/1/7 Gabriel Acosta <gabo.acosta624 at gmail.com>
> >
> >  Static calls are discouraged? will be disallowed? o my god this list
> does
> >> gets hilarious from time to time. What is actually discouraged, not from
> >> the PHP standard but from other methodologies like OOP is the use of
> >> globals, but clearly that's just the way WP is so...
> >>
> >>
> >> On Tue, Jan 7, 2014 at 7:30 AM, Chris Williams <chris at clwill.com>
> wrote:
> >>
> >> > Evidence please?
> >> >
> >> > On 1/7/14 1:09 AM, "Guus (IFS)" <guus at inspiration-for-success.com>
> >> wrote:
> >> >
> >> > >In newer PHP versions static calls are discouraged. Guess in future
> >> > >versions
> >> > >even disallowed.
> >> >
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> >
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>
> >
> >
> > --
> > Amplexos,
> >
> > Leo Baiano
> > Web Developer
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Amplexos,
>
> Leo Baiano
> Web Developer
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From guus at inspiration-for-success.com  Tue Jan  7 16:44:48 2014
From: guus at inspiration-for-success.com (Guus (IFS))
Date: Wed, 8 Jan 2014 00:44:48 +0800
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CA+69t5nua0hjQDeiqC=GtA+2j_c6zCqJ4CzCDqYM0N0yybvTcw@mail.gmail.com>
References: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>
 <CEF14F67.33F81%chris@clwill.com>
 <CA+69t5=JOmHZU_SUxSRkhP3jd8dS4Er=CLFNeTg7hc+HGSFO4g@mail.gmail.com>
 <CAL1O-KUiDmBzMh3A3-Y2vn0fP+gTzWN5MSTbqEP7tmyr9N=T5A@mail.gmail.com>
 <A17BD43EA2114421A322F75E3600E160@megaheights.net>
 <CAL1O-KU1ciD8uhtutqpAsensXwUcVmU96EZVzVv9O7mOPhGHcw@mail.gmail.com>
 <CA+69t5nua0hjQDeiqC=GtA+2j_c6zCqJ4CzCDqYM0N0yybvTcw@mail.gmail.com>
Message-ID: <ECB3DB0AE94F44DF8400D311C565BCB9@megaheights.net>

Hehehehe.

It is legit though :).

-----Original Message----- 
From: Gabriel Acosta
Sent: Tuesday, January 07, 2014 11:52 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] How to use $wpdb in plugins

"and higher or something" yup, sounds legit, lol


On Tue, Jan 7, 2014 at 8:15 AM, Leo Baiano <ljunior2005 at gmail.com> wrote:

> Not if you declare the method as static.
>
>
> 2014/1/7 Guus (IFS) <guus at inspiration-for-success.com>
>
> > PHP 5.4 and higher or something gives notices on static calls.
> >
> > -----Original Message----- From: Leo Baiano Sent: Tuesday, January 07,
> > 2014 10:41 PM To: wp-hackers at lists.automattic.com Subject: Re:
> > [wp-hackers] How to use $wpdb in plugins
> > I believe you are mistaken Guus, it makes little sense to discourage the
> > use of Static calls
> >
> >
> > 2014/1/7 Gabriel Acosta <gabo.acosta624 at gmail.com>
> >
> >  Static calls are discouraged? will be disallowed? o my god this list
> does
> >> gets hilarious from time to time. What is actually discouraged, not 
> >> from
> >> the PHP standard but from other methodologies like OOP is the use of
> >> globals, but clearly that's just the way WP is so...
> >>
> >>
> >> On Tue, Jan 7, 2014 at 7:30 AM, Chris Williams <chris at clwill.com>
> wrote:
> >>
> >> > Evidence please?
> >> >
> >> > On 1/7/14 1:09 AM, "Guus (IFS)" <guus at inspiration-for-success.com>
> >> wrote:
> >> >
> >> > >In newer PHP versions static calls are discouraged. Guess in future
> >> > >versions
> >> > >even disallowed.
> >> >
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> >
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>
> >
> >
> > --
> > Amplexos,
> >
> > Leo Baiano
> > Web Developer
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Amplexos,
>
> Leo Baiano
> Web Developer
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 


From gabo.acosta624 at gmail.com  Tue Jan  7 16:58:10 2014
From: gabo.acosta624 at gmail.com (Gabriel Acosta)
Date: Tue, 7 Jan 2014 09:58:10 -0700
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <ECB3DB0AE94F44DF8400D311C565BCB9@megaheights.net>
References: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>
 <CEF14F67.33F81%chris@clwill.com>
 <CA+69t5=JOmHZU_SUxSRkhP3jd8dS4Er=CLFNeTg7hc+HGSFO4g@mail.gmail.com>
 <CAL1O-KUiDmBzMh3A3-Y2vn0fP+gTzWN5MSTbqEP7tmyr9N=T5A@mail.gmail.com>
 <A17BD43EA2114421A322F75E3600E160@megaheights.net>
 <CAL1O-KU1ciD8uhtutqpAsensXwUcVmU96EZVzVv9O7mOPhGHcw@mail.gmail.com>
 <CA+69t5nua0hjQDeiqC=GtA+2j_c6zCqJ4CzCDqYM0N0yybvTcw@mail.gmail.com>
 <ECB3DB0AE94F44DF8400D311C565BCB9@megaheights.net>
Message-ID: <CA+69t5moFK5upx3rfCnuuEemb4XAXHHWQRaZmoNvgbzq-W5sfg@mail.gmail.com>

It's not:
http://www.php.net/manual/en/language.oop5.static.php

Calling non-static methods statically generates an *E_STRICT* level warning.

That is completely different than "PHP 5.4 and higher or something gives
notices on static calls."


On Tue, Jan 7, 2014 at 9:44 AM, Guus (IFS) <guus at inspiration-for-success.com
> wrote:

> Hehehehe.
>
> It is legit though :).
>
> -----Original Message----- From: Gabriel Acosta
> Sent: Tuesday, January 07, 2014 11:52 PM
>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] How to use $wpdb in plugins
>
> "and higher or something" yup, sounds legit, lol
>
>
> On Tue, Jan 7, 2014 at 8:15 AM, Leo Baiano <ljunior2005 at gmail.com> wrote:
>
>  Not if you declare the method as static.
>>
>>
>> 2014/1/7 Guus (IFS) <guus at inspiration-for-success.com>
>>
>> > PHP 5.4 and higher or something gives notices on static calls.
>> >
>> > -----Original Message----- From: Leo Baiano Sent: Tuesday, January 07,
>> > 2014 10:41 PM To: wp-hackers at lists.automattic.com Subject: Re:
>> > [wp-hackers] How to use $wpdb in plugins
>> > I believe you are mistaken Guus, it makes little sense to discourage the
>> > use of Static calls
>> >
>> >
>> > 2014/1/7 Gabriel Acosta <gabo.acosta624 at gmail.com>
>> >
>> >  Static calls are discouraged? will be disallowed? o my god this list
>> does
>> >> gets hilarious from time to time. What is actually discouraged, not >>
>> from
>> >> the PHP standard but from other methodologies like OOP is the use of
>> >> globals, but clearly that's just the way WP is so...
>> >>
>> >>
>> >> On Tue, Jan 7, 2014 at 7:30 AM, Chris Williams <chris at clwill.com>
>> wrote:
>> >>
>> >> > Evidence please?
>> >> >
>> >> > On 1/7/14 1:09 AM, "Guus (IFS)" <guus at inspiration-for-success.com>
>> >> wrote:
>> >> >
>> >> > >In newer PHP versions static calls are discouraged. Guess in future
>> >> > >versions
>> >> > >even disallowed.
>> >> >
>> >> > _______________________________________________
>> >> > wp-hackers mailing list
>> >> > wp-hackers at lists.automattic.com
>> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >> >
>> >> _______________________________________________
>> >> wp-hackers mailing list
>> >> wp-hackers at lists.automattic.com
>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >>
>> >>
>> >
>> >
>> > --
>> > Amplexos,
>> >
>> > Leo Baiano
>> > Web Developer
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>>
>>
>>
>> --
>> Amplexos,
>>
>> Leo Baiano
>> Web Developer
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>  _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From chris at clwill.com  Tue Jan  7 17:20:51 2014
From: chris at clwill.com (Chris Williams)
Date: Tue, 7 Jan 2014 12:20:51 -0500
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CA+69t5moFK5upx3rfCnuuEemb4XAXHHWQRaZmoNvgbzq-W5sfg@mail.gmail.com>
Message-ID: <CEF17708.2AB1D%chris@clwill.com>

And completely different from "discouraged" and/or "disallowed".

Static methods are a common OOP technology, it makes no sense to
"discourage" let alone "disallow" them.

<sheesh>

On 1/7/14 8:58 AM, "Gabriel Acosta" <gabo.acosta624 at gmail.com> wrote:

>It's not:
>http://www.php.net/manual/en/language.oop5.static.php
>
>Calling non-static methods statically generates an *E_STRICT* level
>warning.
>
>That is completely different than "PHP 5.4 and higher or something gives
>notices on static calls."


From halukkaramete at gmail.com  Tue Jan  7 23:36:24 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Tue, 7 Jan 2014 15:36:24 -0800
Subject: [wp-hackers] set_transient returns false on live server but
 true on local host.
In-Reply-To: <CAD-FghzNzCh9aa-LmNykofNFb8ew=9Vdu31DepRQwTCLnxMkBQ@mail.gmail.com>
References: <CAHERW=2sM7KBijPcJZ8FY2vt-+=Gr6PFVNoiR6QjRiVEhsuAFg@mail.gmail.com>
 <CAD-FghwDpD1wPic3wGR6_cH_pX9+WD38_L++PWPcZQ720N4gBw@mail.gmail.com>
 <CAHERW=0iTrYxq88eo14O7sQ56o-3jw=Dziz2qBJdNu8kTqN3Cg@mail.gmail.com>
 <CAD-FghzNzCh9aa-LmNykofNFb8ew=9Vdu31DepRQwTCLnxMkBQ@mail.gmail.com>
Message-ID: <CAHERW=15-RYXWgE2F7u-0WS=jRxWfmGeHBz8wNC93i-Ta8d6-w@mail.gmail.com>

Otto, it wasn't the total cache... It was a char set issue. The data I
happened to choose to store was having a char that the set_transient did
not want to deal with...  it's my bad luck that my test data has a such a
junk in it.

I realized it later on that when I did an htmlspecialchar($on_that_value),
the  htmlspecialchars outtputted nada, zilch!
And that explains why the set_transient was returning false.

When I stored a different data, I saw that there was nothing wrong at all.
Transients continued to work with total cache and without.

Do you guys do htmlspecialchars or anything of that sort within the
set_transient process?
could the following remedy the issue?

htmlspecialchars($problematic_val, ENT_COMPAT|ENT_SUBSTITUTE, "UTF-8")




On Sun, Jan 5, 2014 at 1:53 PM, Otto <otto at ottodestruct.com> wrote:

> I use W3TC myself, and it works fine for me, but you do have to
> configure it properly. Check the config there and make sure everything
> is set right. Or, turn it off if you cannot find the config settings.
>
> Caching isn't an end-user thing, it needs to be configured by an admin
> who knows what he's doing.
>
> -Otto
>
>
> On Sun, Jan 5, 2014 at 11:41 AM, Haluk Karamete <halukkaramete at gmail.com>
> wrote:
> > Otto, after your reminder about the external cachers, I found out that
> the
> > production server has total cache installed.
> >
> > I tried the solution mentioned here
> >
> http://wordpress.stackexchange.com/questions/108287/trouble-with-transient-api-when-w3tc-is-activated
> >
> > but no luck.
> >
> > still the beautiful transient system that WordPress has for us is by
> passed
> > here...  I build a plug in tapping into the core transient API's left and
> > right... and it works like a charm on my localhost test environment...
> > but these external cache systems put a bullet hole into the basics...
> >
> > Any recommendations?
> >
> >
> >
> >
> > On Sun, Jan 5, 2014 at 7:52 AM, Otto <otto at ottodestruct.com> wrote:
> >
> >> If we assume that neither server has an external object cache set up,
> >> then a return of false here most likely means that the insert or
> >> update of the options table failed. In which case, check that the
> >> options table doesn't need a REPAIR run on it.
> >>
> >> -Otto
> >>
> >>
> >> On Sun, Jan 5, 2014 at 9:35 AM, Haluk Karamete <halukkaramete at gmail.com
> >
> >> wrote:
> >> > What would be the reason for the set_transient API to return FALSE on
> a
> >> > live server but TRUE on local host - that's obviously for the same
> code.
> >> >
> >> > The only diff is live server is IIS and the local is Apache.
> >> >
> >> > And how would I get to the bottom of a set_transient-returns-FALSE
> >> > situation?
> >> >
> >> > I understand that the set_transient does not return an error object in
> >> the
> >> > case of something not going right.
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jayesh.lahori.11.8.92 at gmail.com  Wed Jan  8 11:22:47 2014
From: jayesh.lahori.11.8.92 at gmail.com (Jayesh Lahori)
Date: Wed, 8 Jan 2014 16:52:47 +0530
Subject: [wp-hackers] Newbie, Contribute to Wordpress
Message-ID: <CALq3cxhZXQzOtLxg6S1DVPhb=gePLrYBQVw7V_7-h_Jk4xj7ng@mail.gmail.com>

Hi,

My name is Jayesh Lahori, I'm a 3rd year Computer Science Student at
International Institute of Information Technology, Hyderabad (India)  .I'm
interested in contributing to Open Source Projects of Wordpress, Any
pointers on how should I go about it?

My Technical skill-set:

*C/C++ , Python , Web Technologies(HTML,CSS,Javascript,PHP,web2py,OpenERP ,
MySQL).*
*OS: GNU/Linux*

-- 
Regards,

Jayesh Lahori
IIIT-Hyderabad

From abdussamad at abdussamad.com  Wed Jan  8 12:26:48 2014
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Wed, 08 Jan 2014 17:26:48 +0500
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <1E663A11-B9AE-45B9-840D-22CCD0CFD6D8@ramapo.edu>
References: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
 <CAOdX+r_yrq6chqiN3cG8BdETG3+7jp4gD5GGZXwEwpXgkmqmTw@mail.gmail.com>
 <1E663A11-B9AE-45B9-840D-22CCD0CFD6D8@ramapo.edu>
Message-ID: <52CD4408.9050003@abdussamad.com>

Can't you stick it in a class variable instead?

On 01/07/2014 07:43 PM, Dobri wrote:
> How is
>
> $db = self::db();
> //do stuff with $db
>
> different from
>
> global $wpdb;
> //do stuff with $wpdb
>
> Unless you use it for one call only (self::db()->query() or something), I don't see much benefit in this method?
>
> ~Dobri
>
> On Mon, 6 Jan 2014, at 5:53 PM, Ben May wrote:
>
>> I usually have a base class that all other classes extend, and have a
>> self::db() which basically globals $wpdb once and returns it, saves having
>> to write global $wpdb; each class.
>>
>>
>> On 7 January 2014 01:58, Leo Baiano <ljunior2005 at gmail.com> wrote:
>>
>>> What better way to use the global $ wpdb in building a plugin? I'm working
>>> on a plugin and some methods need to access data in the database tables,
>>> including creating, and I was in doubt about the best way, like, do not
>>> want to quit repeating global $ wpdb in all methods of my class.
>>>
>>> How do you do?
>>>
>>> --
>>> Amplexos,
>>>
>>> Leo Baiano
>>> Web Developer
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nikolov.tmw at gmail.com  Wed Jan  8 12:33:17 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 8 Jan 2014 14:33:17 +0200
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <52CD4408.9050003@abdussamad.com>
References: <CAL1O-KWnmjH1h7o9_ZjNBdbB+J4+rNQ8ZGaYCh-OuDXmRz_ZVA@mail.gmail.com>
 <CAOdX+r_yrq6chqiN3cG8BdETG3+7jp4gD5GGZXwEwpXgkmqmTw@mail.gmail.com>
 <1E663A11-B9AE-45B9-840D-22CCD0CFD6D8@ramapo.edu>
 <52CD4408.9050003@abdussamad.com>
Message-ID: <CAOwx47cL0rXZxX_FkWZzYSJzDLs_T5a_t+Dm-4HmmfRPF5vY8A@mail.gmail.com>

I still think that adding

global $wpdb;

is probably the best approach. If you really don't want to copy/paste a
single line of code, you can just use $GLOBALS['wpdb'] - same thing, just a
bit less readable(and you won't be able to use the nifty features of things
like code intel).

Anyway - whichever way you choose it usually won't be a big deal if you
decide to change your implementation in the future - you'd have to do just
a couple of search/replace's.


On Wed, Jan 8, 2014 at 2:26 PM, Abdussamad Abdurrazzaq <
abdussamad at abdussamad.com> wrote:

> Can't you stick it in a class variable instead?
>
>
> On 01/07/2014 07:43 PM, Dobri wrote:
>
>> How is
>>
>> $db = self::db();
>> //do stuff with $db
>>
>> different from
>>
>> global $wpdb;
>> //do stuff with $wpdb
>>
>> Unless you use it for one call only (self::db()->query() or something), I
>> don't see much benefit in this method?
>>
>> ~Dobri
>>
>> On Mon, 6 Jan 2014, at 5:53 PM, Ben May wrote:
>>
>>  I usually have a base class that all other classes extend, and have a
>>> self::db() which basically globals $wpdb once and returns it, saves
>>> having
>>> to write global $wpdb; each class.
>>>
>>>
>>> On 7 January 2014 01:58, Leo Baiano <ljunior2005 at gmail.com> wrote:
>>>
>>>  What better way to use the global $ wpdb in building a plugin? I'm
>>>> working
>>>> on a plugin and some methods need to access data in the database tables,
>>>> including creating, and I was in doubt about the best way, like, do not
>>>> want to quit repeating global $ wpdb in all methods of my class.
>>>>
>>>> How do you do?
>>>>
>>>> --
>>>> Amplexos,
>>>>
>>>> Leo Baiano
>>>> Web Developer
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>  _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>  _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdg at codesymphony.co  Wed Jan  8 13:49:40 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Wed, 8 Jan 2014 08:49:40 -0500
Subject: [wp-hackers] Newbie, Contribute to Wordpress
In-Reply-To: <CALq3cxhZXQzOtLxg6S1DVPhb=gePLrYBQVw7V_7-h_Jk4xj7ng@mail.gmail.com>
References: <CALq3cxhZXQzOtLxg6S1DVPhb=gePLrYBQVw7V_7-h_Jk4xj7ng@mail.gmail.com>
Message-ID: <44CDEDF4-4911-45DA-B64B-F8EB83971460@codesymphony.co>

Hi Jayesh,

You can start by reading this page about contributing to WordPress: http://codex.wordpress.org/Contributing_to_WordPress

There is also a core contributor handbook with more details: http://make.wordpress.org/core/handbook/

-J.D.

On Jan 8, 2014, at 6:22 AM, Jayesh Lahori <jayesh.lahori.11.8.92 at gmail.com> wrote:

> Hi,
> 
> My name is Jayesh Lahori, I'm a 3rd year Computer Science Student at
> International Institute of Information Technology, Hyderabad (India)  .I'm
> interested in contributing to Open Source Projects of Wordpress, Any
> pointers on how should I go about it?
> 
> My Technical skill-set:
> 
> *C/C++ , Python , Web Technologies(HTML,CSS,Javascript,PHP,web2py,OpenERP ,
> MySQL).*
> *OS: GNU/Linux*
> 
> -- 
> Regards,
> 
> Jayesh Lahori
> IIIT-Hyderabad
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From guido at wp-butler.com  Wed Jan  8 13:53:35 2014
From: guido at wp-butler.com (Guido WP)
Date: Wed, 8 Jan 2014 14:53:35 +0100
Subject: [wp-hackers] Newbie, Contribute to Wordpress
In-Reply-To: <44CDEDF4-4911-45DA-B64B-F8EB83971460@codesymphony.co>
References: <CALq3cxhZXQzOtLxg6S1DVPhb=gePLrYBQVw7V_7-h_Jk4xj7ng@mail.gmail.com>
 <44CDEDF4-4911-45DA-B64B-F8EB83971460@codesymphony.co>
Message-ID: <761A6157-6562-41B4-AF31-2FA00B3FF3E4@wp-butler.com>

Hi Jayesh,

there is also a WordCamp in India at the end of this month - http://2014.baroda.wordcamp.org
Maybe a chance to get in touch with some developer friends.

Regards, Guido


Am 08.01.2014 um 14:49 schrieb J.D. Grimes <jdg at codesymphony.co>:

> Hi Jayesh,
> 
> You can start by reading this page about contributing to WordPress: http://codex.wordpress.org/Contributing_to_WordPress
> 
> There is also a core contributor handbook with more details: http://make.wordpress.org/core/handbook/
> 
> -J.D.
> 
> On Jan 8, 2014, at 6:22 AM, Jayesh Lahori <jayesh.lahori.11.8.92 at gmail.com> wrote:
> 
>> Hi,
>> 
>> My name is Jayesh Lahori, I'm a 3rd year Computer Science Student at
>> International Institute of Information Technology, Hyderabad (India)  .I'm
>> interested in contributing to Open Source Projects of Wordpress, Any
>> pointers on how should I go about it?
>> 
>> My Technical skill-set:
>> 
>> *C/C++ , Python , Web Technologies(HTML,CSS,Javascript,PHP,web2py,OpenERP ,
>> MySQL).*
>> *OS: GNU/Linux*
>> 
>> -- 
>> Regards,
>> 
>> Jayesh Lahori
>> IIIT-Hyderabad
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jayesh.lahori.11.8.92 at gmail.com  Wed Jan  8 13:56:53 2014
From: jayesh.lahori.11.8.92 at gmail.com (Jayesh Lahori)
Date: Wed, 8 Jan 2014 19:26:53 +0530
Subject: [wp-hackers] Newbie, Contribute to Wordpress
In-Reply-To: <761A6157-6562-41B4-AF31-2FA00B3FF3E4@wp-butler.com>
References: <CALq3cxhZXQzOtLxg6S1DVPhb=gePLrYBQVw7V_7-h_Jk4xj7ng@mail.gmail.com>
 <44CDEDF4-4911-45DA-B64B-F8EB83971460@codesymphony.co>
 <761A6157-6562-41B4-AF31-2FA00B3FF3E4@wp-butler.com>
Message-ID: <CALq3cxi4FXXeo+XCQ--tijttWLFFMUKyMWh9xbuxpqspqY4DkQ@mail.gmail.com>

Hi,
Thanks Grime for the advice, I'll try to get on from there. I'll post my
queries here, Please bear me till I get comfortable with the dev env :P.
Regarding Guido, Thanks but I'll not be able to attend as I will be having
exams last week of this month


On Wed, Jan 8, 2014 at 7:23 PM, Guido WP <guido at wp-butler.com> wrote:

> Hi Jayesh,
>
> there is also a WordCamp in India at the end of this month -
> http://2014.baroda.wordcamp.org
> Maybe a chance to get in touch with some developer friends.
>
> Regards, Guido
>
>
> Am 08.01.2014 um 14:49 schrieb J.D. Grimes <jdg at codesymphony.co>:
>
> > Hi Jayesh,
> >
> > You can start by reading this page about contributing to WordPress:
> http://codex.wordpress.org/Contributing_to_WordPress
> >
> > There is also a core contributor handbook with more details:
> http://make.wordpress.org/core/handbook/
> >
> > -J.D.
> >
> > On Jan 8, 2014, at 6:22 AM, Jayesh Lahori <
> jayesh.lahori.11.8.92 at gmail.com> wrote:
> >
> >> Hi,
> >>
> >> My name is Jayesh Lahori, I'm a 3rd year Computer Science Student at
> >> International Institute of Information Technology, Hyderabad (India)
>  .I'm
> >> interested in contributing to Open Source Projects of Wordpress, Any
> >> pointers on how should I go about it?
> >>
> >> My Technical skill-set:
> >>
> >> *C/C++ , Python , Web
> Technologies(HTML,CSS,Javascript,PHP,web2py,OpenERP ,
> >> MySQL).*
> >> *OS: GNU/Linux*
> >>
> >> --
> >> Regards,
> >>
> >> Jayesh Lahori
> >> IIIT-Hyderabad
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Regards,

Jayesh Lahori
IIIT-Hyderabad

From jayesh.lahori.11.8.92 at gmail.com  Wed Jan  8 15:25:28 2014
From: jayesh.lahori.11.8.92 at gmail.com (Jayesh Lahori)
Date: Wed, 8 Jan 2014 20:55:28 +0530
Subject: [wp-hackers] Regarding Bug,
Message-ID: <CALq3cxgnpFwoEN74gv0f+xQF-8LDotyQKg+neo3Lqy=dsp7myg@mail.gmail.com>

Regarding Bug: https://core.trac.wordpress.org/ticket/26591

The SVG  logo does appear on my Chrome Browser. Attached is the screenshot

-- 
Regards,

Jayesh Lahori
IIIT-Hyderabad

From jdg at codesymphony.co  Wed Jan  8 15:55:37 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Wed, 8 Jan 2014 10:55:37 -0500
Subject: [wp-hackers] Regarding Bug,
In-Reply-To: <CALq3cxgnpFwoEN74gv0f+xQF-8LDotyQKg+neo3Lqy=dsp7myg@mail.gmail.com>
References: <CALq3cxgnpFwoEN74gv0f+xQF-8LDotyQKg+neo3Lqy=dsp7myg@mail.gmail.com>
Message-ID: <2F96C023-7EE1-4649-8FB5-9B775FC6AF9A@codesymphony.co>

The mailing list doesn?t support attachments. :-(

Leave a comment on that ticket and attach your screenshot there.

-J.D.

On Jan 8, 2014, at 10:25 AM, Jayesh Lahori <jayesh.lahori.11.8.92 at gmail.com> wrote:

> Regarding Bug: https://core.trac.wordpress.org/ticket/26591
> 
> The SVG  logo does appear on my Chrome Browser. Attached is the screenshot
> 
> -- 
> Regards,
> 
> Jayesh Lahori
> IIIT-Hyderabad
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From nicola.peluchetti at gmail.com  Wed Jan  8 20:39:09 2014
From: nicola.peluchetti at gmail.com (Nicola Peluchetti)
Date: Wed, 8 Jan 2014 21:39:09 +0100
Subject: [wp-hackers] Using wp-content/uploads to store dynamically created
	js and CSS
Message-ID: <CAJ7gacoXtVFFhk02kvjBPAQpCYv8eeYHAWEH=0-6hfxSbUON=Q@mail.gmail.com>

Hi,

our plugin at the moment generates CSS and Javascript files in PHP. This
means that we append a link /script to the website and then a PHP script
generates the relevant CSS/js.

We need to do this with CSS because we generate it from LESS files and give
the user the ability to modify variables, we do this with Javascript
because we use requirejs and we wanted to avoid using global variables in
javascript, so we create modules dinamically and build things on the fly.

We had a fallback system for storing CSS ( APC/Filesystem/DB ) while js was
just read.

In any case this has proven to be too slow and unreliable, so we'd like to
go back serving static css and js files and we thought we can use
wp-content/upload to store compilade .js and .css files.

I've read this article
http://ottopress.com/2011/tutorial-using-the-wp_filesystem/ where Otto says
to inline, but if i inline my js / css is not cached by the browser
right?And we are talking about 500kb so it's not trivial.

What do you think of the approach and have you got anything better to
suggest?


*Nicola Peluchetti - Senior PHP Developer @ Timely*
Twitter: @nik_peluchetti <https://twitter.com/#!/nik_peluchetti>
Facebook: nicola.peluchetti <https://www.facebook.com/nicola.peluchetti>
Stackoverflow: Stackoverflow<http://stackoverflow.com/users/397861/nicola-peluchetti>
Mobile: +39 339 7507235

From otto at ottodestruct.com  Wed Jan  8 21:33:01 2014
From: otto at ottodestruct.com (Otto)
Date: Wed, 8 Jan 2014 15:33:01 -0600
Subject: [wp-hackers] Using wp-content/uploads to store dynamically
 created js and CSS
In-Reply-To: <CAJ7gacoXtVFFhk02kvjBPAQpCYv8eeYHAWEH=0-6hfxSbUON=Q@mail.gmail.com>
References: <CAJ7gacoXtVFFhk02kvjBPAQpCYv8eeYHAWEH=0-6hfxSbUON=Q@mail.gmail.com>
Message-ID: <CAD-FghwufqwfHgHb6D+8LcwN_YAhhkSUfyYoPiexcPQzD13rkQ@mail.gmail.com>

On Wed, Jan 8, 2014 at 2:39 PM, Nicola Peluchetti
<nicola.peluchetti at gmail.com> wrote:
> I've read this article
> http://ottopress.com/2011/tutorial-using-the-wp_filesystem/ where Otto says
> to inline, but if i inline my js / css is not cached by the browser
> right?And we are talking about 500kb so it's not trivial.


First, are you seriously dynamically generating over 500kb of CSS/JS
files? Or are you really only generating some of the pieces of those
files while the rest of them is relatively static? What is the
"static" to "dynamic" ratio?

I ask because it's perfectly possible to make the static parts static,
and the dynamic parts inline. JS variables, inline CSS, etc. Just
because you have it all clumped together currently doesn't mean that
that is the only possible way.

Secondly, if you do generate a ton of content for whatever reasons,
you should not store any CSS or JS content in the /uploads directory.
Instead, make your own directory under /wp-content and store the files
there instead. The WP_Filesystem object has a function called
wp_content_dir() that will return the content directory on the
"remote" filesystem. Using this and the mkdir() function in that same
object, you can create your own directory to store the files in, write
them, and then use those URLs instead.

Storing content that will be included into the page in the uploads
folder is generally unsafe, due to some configurations of shared
hosting. It's relatively safe for inline media images, video, etc),
but it is not safe for CSS or JS content.

-Otto

From nicola.peluchetti at gmail.com  Wed Jan  8 22:02:34 2014
From: nicola.peluchetti at gmail.com (Nicola Peluchetti)
Date: Wed, 8 Jan 2014 23:02:34 +0100
Subject: [wp-hackers] Using wp-content/uploads to store dynamically
 created js and CSS
In-Reply-To: <CAD-FghwufqwfHgHb6D+8LcwN_YAhhkSUfyYoPiexcPQzD13rkQ@mail.gmail.com>
References: <CAJ7gacoXtVFFhk02kvjBPAQpCYv8eeYHAWEH=0-6hfxSbUON=Q@mail.gmail.com>
 <CAD-FghwufqwfHgHb6D+8LcwN_YAhhkSUfyYoPiexcPQzD13rkQ@mail.gmail.com>
Message-ID: <CAJ7gacpC9nQ1P6dVdJth+xBOJL6F=OKromfSi5MbrmeNo2A67g@mail.gmail.com>

Yes all the CSS for the plugin ( including bootstrap3 ) is generated
dynamically and it's quite big. Of course it's not generated on every
request, it's stored and regenerated only if needed. Js is just built from
pieces at the moment.

We've had a folder under wp-content for a long time where we stored themes
but that has always been a pain, one time out of three there was no write
access. In fact we are deprecating that in 2.0.

I thought about wp-content/uploads because i guess that, if there is just
one folder which is writable,  it must be that.

Why do you say it's unsafe?Is there some possibility that malitious users
could exploit that?I mean is it a safety risk?Because obviously i don't
care if anyone can access my CSS and JS code.


*Nicola Peluchetti - Senior PHP Developer @ Timely*
Twitter: @nik_peluchetti <https://twitter.com/#!/nik_peluchetti>
Facebook: nicola.peluchetti <https://www.facebook.com/nicola.peluchetti>
Stackoverflow: Stackoverflow<http://stackoverflow.com/users/397861/nicola-peluchetti>
Mobile: +39 339 7507235


On Wed, Jan 8, 2014 at 10:33 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Jan 8, 2014 at 2:39 PM, Nicola Peluchetti
> <nicola.peluchetti at gmail.com> wrote:
> > I've read this article
> > http://ottopress.com/2011/tutorial-using-the-wp_filesystem/ where Otto
> says
> > to inline, but if i inline my js / css is not cached by the browser
> > right?And we are talking about 500kb so it's not trivial.
>
>
> First, are you seriously dynamically generating over 500kb of CSS/JS
> files? Or are you really only generating some of the pieces of those
> files while the rest of them is relatively static? What is the
> "static" to "dynamic" ratio?
>
> I ask because it's perfectly possible to make the static parts static,
> and the dynamic parts inline. JS variables, inline CSS, etc. Just
> because you have it all clumped together currently doesn't mean that
> that is the only possible way.
>
> Secondly, if you do generate a ton of content for whatever reasons,
> you should not store any CSS or JS content in the /uploads directory.
> Instead, make your own directory under /wp-content and store the files
> there instead. The WP_Filesystem object has a function called
> wp_content_dir() that will return the content directory on the
> "remote" filesystem. Using this and the mkdir() function in that same
> object, you can create your own directory to store the files in, write
> them, and then use those URLs instead.
>
> Storing content that will be included into the page in the uploads
> folder is generally unsafe, due to some configurations of shared
> hosting. It's relatively safe for inline media images, video, etc),
> but it is not safe for CSS or JS content.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Jan  8 22:34:09 2014
From: otto at ottodestruct.com (Otto)
Date: Wed, 8 Jan 2014 16:34:09 -0600
Subject: [wp-hackers] Using wp-content/uploads to store dynamically
 created js and CSS
In-Reply-To: <CAJ7gacpC9nQ1P6dVdJth+xBOJL6F=OKromfSi5MbrmeNo2A67g@mail.gmail.com>
References: <CAJ7gacoXtVFFhk02kvjBPAQpCYv8eeYHAWEH=0-6hfxSbUON=Q@mail.gmail.com>
 <CAD-FghwufqwfHgHb6D+8LcwN_YAhhkSUfyYoPiexcPQzD13rkQ@mail.gmail.com>
 <CAJ7gacpC9nQ1P6dVdJth+xBOJL6F=OKromfSi5MbrmeNo2A67g@mail.gmail.com>
Message-ID: <CAD-FghyPpEa9UUvr705DYvyqpeeVXzhWbfumEi_6d2tBoSYWtA@mail.gmail.com>

On Wed, Jan 8, 2014 at 4:02 PM, Nicola Peluchetti
<nicola.peluchetti at gmail.com> wrote:
> We've had a folder under wp-content for a long time where we stored themes
> but that has always been a pain, one time out of three there was no write
> access. In fact we are deprecating that in 2.0.

This is what the WP_Filesystem is for. If you need to write a file,
and you have no direct access, then WP_Filesystem will get credentials
from the user and you can use those to get write access through the
WP_Filesystem object.


> Why do you say it's unsafe?Is there some possibility that malitious users
> could exploit that?I mean is it a safety risk?Because obviously i don't
> care if anyone can access my CSS and JS code.

On some setups, with some configurations, yes, it can be a safety
risk. If I'm on the same server as you (shared hosting), then I could,
in theory, overwrite your files in the uploads folder with contents of
my choosing. Depending on the server configuration, of course.

For images, this doesn't matter so much. For CSS or JS files, I can
write code there which will exploit your site when your site includes
it on the page.

-Otto

From brian at fegter.com  Wed Jan  8 22:35:35 2014
From: brian at fegter.com (Brian Fegter)
Date: Wed, 8 Jan 2014 16:35:35 -0600
Subject: [wp-hackers] Using wp-content/uploads to store dynamically
 created js and CSS
In-Reply-To: <CAJ7gacpC9nQ1P6dVdJth+xBOJL6F=OKromfSi5MbrmeNo2A67g@mail.gmail.com>
References: <CAJ7gacoXtVFFhk02kvjBPAQpCYv8eeYHAWEH=0-6hfxSbUON=Q@mail.gmail.com>
 <CAD-FghwufqwfHgHb6D+8LcwN_YAhhkSUfyYoPiexcPQzD13rkQ@mail.gmail.com>
 <CAJ7gacpC9nQ1P6dVdJth+xBOJL6F=OKromfSi5MbrmeNo2A67g@mail.gmail.com>
Message-ID: <CAPtWN+xJ_YbdMkRwLYqQrOG-1_qh9VJEU8cAr_eFUn3=1aqLGg@mail.gmail.com>

Nicola,

Instead of generating an actual static file, why not use a rewrite? You
won't have to deal with the file system at all and any quirks that come
with your setup.

Heres a gist with the setup I use for this type of thing. This allows you
to use object caching and your CDN sees this as a static file as well.
https://gist.github.com/inspectorfegter/8325711

Let me know if you have any question on this approach. Just another way to
skin a cat.

Thanks!
Brian





On Wed, Jan 8, 2014 at 4:02 PM, Nicola Peluchetti <
nicola.peluchetti at gmail.com> wrote:

> Yes all the CSS for the plugin ( including bootstrap3 ) is generated
> dynamically and it's quite big. Of course it's not generated on every
> request, it's stored and regenerated only if needed. Js is just built from
> pieces at the moment.
>
> We've had a folder under wp-content for a long time where we stored themes
> but that has always been a pain, one time out of three there was no write
> access. In fact we are deprecating that in 2.0.
>
> I thought about wp-content/uploads because i guess that, if there is just
> one folder which is writable,  it must be that.
>
> Why do you say it's unsafe?Is there some possibility that malitious users
> could exploit that?I mean is it a safety risk?Because obviously i don't
> care if anyone can access my CSS and JS code.
>
>
> *Nicola Peluchetti - Senior PHP Developer @ Timely*
> Twitter: @nik_peluchetti <https://twitter.com/#!/nik_peluchetti>
> Facebook: nicola.peluchetti <https://www.facebook.com/nicola.peluchetti>
> Stackoverflow: Stackoverflow<
> http://stackoverflow.com/users/397861/nicola-peluchetti>
> Mobile: +39 339 7507235
>
>
> On Wed, Jan 8, 2014 at 10:33 PM, Otto <otto at ottodestruct.com> wrote:
>
> > On Wed, Jan 8, 2014 at 2:39 PM, Nicola Peluchetti
> > <nicola.peluchetti at gmail.com> wrote:
> > > I've read this article
> > > http://ottopress.com/2011/tutorial-using-the-wp_filesystem/ where Otto
> > says
> > > to inline, but if i inline my js / css is not cached by the browser
> > > right?And we are talking about 500kb so it's not trivial.
> >
> >
> > First, are you seriously dynamically generating over 500kb of CSS/JS
> > files? Or are you really only generating some of the pieces of those
> > files while the rest of them is relatively static? What is the
> > "static" to "dynamic" ratio?
> >
> > I ask because it's perfectly possible to make the static parts static,
> > and the dynamic parts inline. JS variables, inline CSS, etc. Just
> > because you have it all clumped together currently doesn't mean that
> > that is the only possible way.
> >
> > Secondly, if you do generate a ton of content for whatever reasons,
> > you should not store any CSS or JS content in the /uploads directory.
> > Instead, make your own directory under /wp-content and store the files
> > there instead. The WP_Filesystem object has a function called
> > wp_content_dir() that will return the content directory on the
> > "remote" filesystem. Using this and the mkdir() function in that same
> > object, you can create your own directory to store the files in, write
> > them, and then use those URLs instead.
> >
> > Storing content that will be included into the page in the uploads
> > folder is generally unsafe, due to some configurations of shared
> > hosting. It's relatively safe for inline media images, video, etc),
> > but it is not safe for CSS or JS content.
> >
> > -Otto
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jbutkus at time.ly  Thu Jan  9 08:33:38 2014
From: jbutkus at time.ly (Justas Butkus)
Date: Thu, 09 Jan 2014 10:33:38 +0200
Subject: [wp-hackers] Using wp-content/uploads to store dynamically
 created js and CSS
In-Reply-To: <CAPtWN+xJ_YbdMkRwLYqQrOG-1_qh9VJEU8cAr_eFUn3=1aqLGg@mail.gmail.com>
References: <CAJ7gacoXtVFFhk02kvjBPAQpCYv8eeYHAWEH=0-6hfxSbUON=Q@mail.gmail.com>
 <CAD-FghwufqwfHgHb6D+8LcwN_YAhhkSUfyYoPiexcPQzD13rkQ@mail.gmail.com>
 <CAJ7gacpC9nQ1P6dVdJth+xBOJL6F=OKromfSi5MbrmeNo2A67g@mail.gmail.com>
 <CAPtWN+xJ_YbdMkRwLYqQrOG-1_qh9VJEU8cAr_eFUn3=1aqLGg@mail.gmail.com>
Message-ID: <52CE5EE2.2060400@time.ly>

Hello Brian.

If I see it right, and please correct me if I miss something, your 
proposed solution gives best performance, when site uses a CDN, or at 
least has a caching reverse HTTP proxy in front of WordPress.

In general case - sites don't have anything like this. And then every 
new user (some of whom might have troubles with cache, but let's say 
that's just some 15% increase in traffic) requires your site to build 
that file. If you have a pre-generated JavaScript, served as an actual 
static file, the WordPress isn't even touched, but with your approach 
every request by each new user causes new generation, which might impose 
significant increase in resources utilization.

Maybe you have some considerations how to counter-act that?
I mean except recommending each and every user to have a 
CDN/caching-proxy, which would be good, just as good as asking everyone 
to use PHP 5.5, which was discussed here few weeks ago. :-)


-- 
Regards,
Justas B.

2014.01.09 00:35, Brian Fegter ra??:
> Nicola,
>
> Instead of generating an actual static file, why not use a rewrite? You
> won't have to deal with the file system at all and any quirks that come
> with your setup.
>
> Heres a gist with the setup I use for this type of thing. This allows you
> to use object caching and your CDN sees this as a static file as well.
> https://gist.github.com/inspectorfegter/8325711
>
> Let me know if you have any question on this approach. Just another way to
> skin a cat.
>
> Thanks!
> Brian


From nikolov.tmw at gmail.com  Thu Jan  9 10:06:23 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Thu, 9 Jan 2014 12:06:23 +0200
Subject: [wp-hackers] Using wp-content/uploads to store dynamically
 created js and CSS
In-Reply-To: <52CE5EE2.2060400@time.ly>
References: <CAJ7gacoXtVFFhk02kvjBPAQpCYv8eeYHAWEH=0-6hfxSbUON=Q@mail.gmail.com>
 <CAD-FghwufqwfHgHb6D+8LcwN_YAhhkSUfyYoPiexcPQzD13rkQ@mail.gmail.com>
 <CAJ7gacpC9nQ1P6dVdJth+xBOJL6F=OKromfSi5MbrmeNo2A67g@mail.gmail.com>
 <CAPtWN+xJ_YbdMkRwLYqQrOG-1_qh9VJEU8cAr_eFUn3=1aqLGg@mail.gmail.com>
 <52CE5EE2.2060400@time.ly>
Message-ID: <CAOwx47fNGYSwuP7nvuUXsmcjSVxF9=xp7NwzzDb-0B9t1G3_vA@mail.gmail.com>

I've seen a similar solution, where the generated JS/CSS was stored in the
DB - I know it's not the best solution(since it's still going to load most
of WordPress just to grab that code from the DB), but it seems like an okay
one. Plus if you do output some caching headers(where it says "#Add caching
headers" in his code), then most of the users browsers should have
caching(I believe all modern browsers have caching enabled by default, so
you have to know what you're doing in order to disable it - for instance
developers do that when debugging stuff).


On Thu, Jan 9, 2014 at 10:33 AM, Justas Butkus <jbutkus at time.ly> wrote:

> Hello Brian.
>
> If I see it right, and please correct me if I miss something, your
> proposed solution gives best performance, when site uses a CDN, or at least
> has a caching reverse HTTP proxy in front of WordPress.
>
> In general case - sites don't have anything like this. And then every new
> user (some of whom might have troubles with cache, but let's say that's
> just some 15% increase in traffic) requires your site to build that file.
> If you have a pre-generated JavaScript, served as an actual static file,
> the WordPress isn't even touched, but with your approach every request by
> each new user causes new generation, which might impose significant
> increase in resources utilization.
>
> Maybe you have some considerations how to counter-act that?
> I mean except recommending each and every user to have a
> CDN/caching-proxy, which would be good, just as good as asking everyone to
> use PHP 5.5, which was discussed here few weeks ago. :-)
>
>
> --
> Regards,
> Justas B.
>
> 2014.01.09 00:35, Brian Fegter ra??:
>
>  Nicola,
>>
>> Instead of generating an actual static file, why not use a rewrite? You
>> won't have to deal with the file system at all and any quirks that come
>> with your setup.
>>
>> Heres a gist with the setup I use for this type of thing. This allows you
>> to use object caching and your CDN sees this as a static file as well.
>> https://gist.github.com/inspectorfegter/8325711
>>
>> Let me know if you have any question on this approach. Just another way to
>> skin a cat.
>>
>> Thanks!
>> Brian
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nicola.peluchetti at gmail.com  Thu Jan  9 13:14:05 2014
From: nicola.peluchetti at gmail.com (Nicola Peluchetti)
Date: Thu, 9 Jan 2014 14:14:05 +0100
Subject: [wp-hackers] Using wp-content/uploads to store dynamically
 created js and CSS
In-Reply-To: <CAOwx47fNGYSwuP7nvuUXsmcjSVxF9=xp7NwzzDb-0B9t1G3_vA@mail.gmail.com>
References: <CAJ7gacoXtVFFhk02kvjBPAQpCYv8eeYHAWEH=0-6hfxSbUON=Q@mail.gmail.com>
 <CAD-FghwufqwfHgHb6D+8LcwN_YAhhkSUfyYoPiexcPQzD13rkQ@mail.gmail.com>
 <CAJ7gacpC9nQ1P6dVdJth+xBOJL6F=OKromfSi5MbrmeNo2A67g@mail.gmail.com>
 <CAPtWN+xJ_YbdMkRwLYqQrOG-1_qh9VJEU8cAr_eFUn3=1aqLGg@mail.gmail.com>
 <52CE5EE2.2060400@time.ly>
 <CAOwx47fNGYSwuP7nvuUXsmcjSVxF9=xp7NwzzDb-0B9t1G3_vA@mail.gmail.com>
Message-ID: <CAJ7gacrset3Ci7veyPz2Q6SioP1OmKxjuV50GkzFEyoi=fJdPQ@mail.gmail.com>

Hi Brian,

we've gone that route before and it's a total pain. We have more than
100.000 installs of our plugin and we've had countless problems. Gzipping
was a pain too. We will provide this as a fallback but we will try to store
things in wp-content/ourfolder as Otto suggested.

Thanks to all of you for your help and suggestions.


*Nicola Peluchetti - Senior PHP Developer @ Timely*
Twitter: @nik_peluchetti <https://twitter.com/#!/nik_peluchetti>
Facebook: nicola.peluchetti <https://www.facebook.com/nicola.peluchetti>
Stackoverflow: Stackoverflow<http://stackoverflow.com/users/397861/nicola-peluchetti>
Mobile: +39 339 7507235


On Thu, Jan 9, 2014 at 11:06 AM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> I've seen a similar solution, where the generated JS/CSS was stored in the
> DB - I know it's not the best solution(since it's still going to load most
> of WordPress just to grab that code from the DB), but it seems like an okay
> one. Plus if you do output some caching headers(where it says "#Add caching
> headers" in his code), then most of the users browsers should have
> caching(I believe all modern browsers have caching enabled by default, so
> you have to know what you're doing in order to disable it - for instance
> developers do that when debugging stuff).
>
>
> On Thu, Jan 9, 2014 at 10:33 AM, Justas Butkus <jbutkus at time.ly> wrote:
>
> > Hello Brian.
> >
> > If I see it right, and please correct me if I miss something, your
> > proposed solution gives best performance, when site uses a CDN, or at
> least
> > has a caching reverse HTTP proxy in front of WordPress.
> >
> > In general case - sites don't have anything like this. And then every new
> > user (some of whom might have troubles with cache, but let's say that's
> > just some 15% increase in traffic) requires your site to build that file.
> > If you have a pre-generated JavaScript, served as an actual static file,
> > the WordPress isn't even touched, but with your approach every request by
> > each new user causes new generation, which might impose significant
> > increase in resources utilization.
> >
> > Maybe you have some considerations how to counter-act that?
> > I mean except recommending each and every user to have a
> > CDN/caching-proxy, which would be good, just as good as asking everyone
> to
> > use PHP 5.5, which was discussed here few weeks ago. :-)
> >
> >
> > --
> > Regards,
> > Justas B.
> >
> > 2014.01.09 00:35, Brian Fegter ra??:
> >
> >  Nicola,
> >>
> >> Instead of generating an actual static file, why not use a rewrite? You
> >> won't have to deal with the file system at all and any quirks that come
> >> with your setup.
> >>
> >> Heres a gist with the setup I use for this type of thing. This allows
> you
> >> to use object caching and your CDN sees this as a static file as well.
> >> https://gist.github.com/inspectorfegter/8325711
> >>
> >> Let me know if you have any question on this approach. Just another way
> to
> >> skin a cat.
> >>
> >> Thanks!
> >> Brian
> >>
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From brian at fegter.com  Thu Jan  9 14:23:01 2014
From: brian at fegter.com (Brian Fegter)
Date: Thu, 9 Jan 2014 08:23:01 -0600
Subject: [wp-hackers] Using wp-content/uploads to store dynamically
 created js and CSS
In-Reply-To: <CAOwx47fNGYSwuP7nvuUXsmcjSVxF9=xp7NwzzDb-0B9t1G3_vA@mail.gmail.com>
References: <CAJ7gacoXtVFFhk02kvjBPAQpCYv8eeYHAWEH=0-6hfxSbUON=Q@mail.gmail.com>
 <CAD-FghwufqwfHgHb6D+8LcwN_YAhhkSUfyYoPiexcPQzD13rkQ@mail.gmail.com>
 <CAJ7gacpC9nQ1P6dVdJth+xBOJL6F=OKromfSi5MbrmeNo2A67g@mail.gmail.com>
 <CAPtWN+xJ_YbdMkRwLYqQrOG-1_qh9VJEU8cAr_eFUn3=1aqLGg@mail.gmail.com>
 <52CE5EE2.2060400@time.ly>
 <CAOwx47fNGYSwuP7nvuUXsmcjSVxF9=xp7NwzzDb-0B9t1G3_vA@mail.gmail.com>
Message-ID: <CAPtWN+yzXdbq0sKCPToWvkVePwC4TAP3npvumxLHvRXvuDR0nw@mail.gmail.com>

@Justas & @Nicola - I understand your point there and I agree it's better
to hit the file system before the DB. I missed the point that this was a
distributed plugin compared to a single site..


On Thu, Jan 9, 2014 at 4:06 AM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> I've seen a similar solution, where the generated JS/CSS was stored in the
> DB - I know it's not the best solution(since it's still going to load most
> of WordPress just to grab that code from the DB), but it seems like an okay
> one. Plus if you do output some caching headers(where it says "#Add caching
> headers" in his code), then most of the users browsers should have
> caching(I believe all modern browsers have caching enabled by default, so
> you have to know what you're doing in order to disable it - for instance
> developers do that when debugging stuff).
>
>
> On Thu, Jan 9, 2014 at 10:33 AM, Justas Butkus <jbutkus at time.ly> wrote:
>
> > Hello Brian.
> >
> > If I see it right, and please correct me if I miss something, your
> > proposed solution gives best performance, when site uses a CDN, or at
> least
> > has a caching reverse HTTP proxy in front of WordPress.
> >
> > In general case - sites don't have anything like this. And then every new
> > user (some of whom might have troubles with cache, but let's say that's
> > just some 15% increase in traffic) requires your site to build that file.
> > If you have a pre-generated JavaScript, served as an actual static file,
> > the WordPress isn't even touched, but with your approach every request by
> > each new user causes new generation, which might impose significant
> > increase in resources utilization.
> >
> > Maybe you have some considerations how to counter-act that?
> > I mean except recommending each and every user to have a
> > CDN/caching-proxy, which would be good, just as good as asking everyone
> to
> > use PHP 5.5, which was discussed here few weeks ago. :-)
> >
> >
> > --
> > Regards,
> > Justas B.
> >
> > 2014.01.09 00:35, Brian Fegter ra??:
> >
> >  Nicola,
> >>
> >> Instead of generating an actual static file, why not use a rewrite? You
> >> won't have to deal with the file system at all and any quirks that come
> >> with your setup.
> >>
> >> Heres a gist with the setup I use for this type of thing. This allows
> you
> >> to use object caching and your CDN sees this as a static file as well.
> >> https://gist.github.com/inspectorfegter/8325711
> >>
> >> Let me know if you have any question on this approach. Just another way
> to
> >> skin a cat.
> >>
> >> Thanks!
> >> Brian
> >>
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From skretch at gmail.com  Thu Jan  9 21:33:51 2014
From: skretch at gmail.com (skretch at gmail.com)
Date: Fri, 10 Jan 2014 04:33:51 +0700
Subject: [wp-hackers] Are WordPress stats up to date?
Message-ID: <0880D8C0-44AF-4F0A-9FD2-A2A58BCEFC78@gmail.com>

Hey everyone,

I am looking at the http://wordpress.org/about/stats/ page.
According to that page, 52.7% of all WordPress installations are using PHP v5.2

How reliable are these stats?
Are they up to date?

Thanks!
Yani

From jdg at codesymphony.co  Thu Jan  9 22:12:32 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Thu, 9 Jan 2014 17:12:32 -0500
Subject: [wp-hackers] Are WordPress stats up to date?
In-Reply-To: <0880D8C0-44AF-4F0A-9FD2-A2A58BCEFC78@gmail.com>
References: <0880D8C0-44AF-4F0A-9FD2-A2A58BCEFC78@gmail.com>
Message-ID: <B02795F8-A8B8-41AD-A8DE-88356395EF7C@codesymphony.co>

Hey Yani,

This came up on the list a while back (http://lists.automattic.com/pipermail/wp-hackers/2013-November/047235.html):

"The data used for the graphs on the stats page are built daily, using a
random(ish) sampling of the API requests from the previous day.

What you see on that page is current and up-to-date. It's not counting
every install in the world, or months-old installs, or inactive installs
that nobody is visiting. It's built from just the API requests from the day
before.? -Otto
-J.D.
On Jan 9, 2014, at 4:33 PM, skretch at gmail.com wrote:

> Hey everyone,
> 
> I am looking at the http://wordpress.org/about/stats/ page.
> According to that page, 52.7% of all WordPress installations are using PHP v5.2
> 
> How reliable are these stats?
> Are they up to date?
> 
> Thanks!
> Yani
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From skretch at gmail.com  Thu Jan  9 22:20:39 2014
From: skretch at gmail.com (skretch at gmail.com)
Date: Fri, 10 Jan 2014 05:20:39 +0700
Subject: [wp-hackers] Are WordPress stats up to date?
In-Reply-To: <B02795F8-A8B8-41AD-A8DE-88356395EF7C@codesymphony.co>
References: <0880D8C0-44AF-4F0A-9FD2-A2A58BCEFC78@gmail.com>
 <B02795F8-A8B8-41AD-A8DE-88356395EF7C@codesymphony.co>
Message-ID: <F69711BF-797E-4D89-93B4-340ACA88092A@gmail.com>

Thanks J.D.

On Jan 10, 2014, at 5:12 AM, J.D. Grimes <jdg at codesymphony.co> wrote:

> Hey Yani,
> 
> This came up on the list a while back (http://lists.automattic.com/pipermail/wp-hackers/2013-November/047235.html):
> 
> "The data used for the graphs on the stats page are built daily, using a
> random(ish) sampling of the API requests from the previous day.
> 
> What you see on that page is current and up-to-date. It's not counting
> every install in the world, or months-old installs, or inactive installs
> that nobody is visiting. It's built from just the API requests from the day
> before.? -Otto
> -J.D.
> On Jan 9, 2014, at 4:33 PM, skretch at gmail.com wrote:
> 
>> Hey everyone,
>> 
>> I am looking at the http://wordpress.org/about/stats/ page.
>> According to that page, 52.7% of all WordPress installations are using PHP v5.2
>> 
>> How reliable are these stats?
>> Are they up to date?
>> 
>> Thanks!
>> Yani
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From shubham.iit17 at gmail.com  Fri Jan 10 09:28:05 2014
From: shubham.iit17 at gmail.com (evil prince)
Date: Fri, 10 Jan 2014 14:58:05 +0530
Subject: [wp-hackers] Regarding Wordpress Development
Message-ID: <CAM9nacioJBQSiTWEwef0gRS3YuTKHKYyRt8MfMDd1JLGcn+SeQ@mail.gmail.com>

Hello,

Myself ,Shubham Meena , Computer Engineering student of IIT(BHU)-Varanasi
and worked on an ERP solution of faculty recruitment based on PHP . I
 installed the word press on my localhost and want to contribute to the
organisation. What should i do next ??

Shubham Meena

From johnbillion+wp at gmail.com  Fri Jan 10 09:34:35 2014
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 10 Jan 2014 09:34:35 +0000
Subject: [wp-hackers] Regarding Wordpress Development
In-Reply-To: <CAM9nacioJBQSiTWEwef0gRS3YuTKHKYyRt8MfMDd1JLGcn+SeQ@mail.gmail.com>
References: <CAM9nacioJBQSiTWEwef0gRS3YuTKHKYyRt8MfMDd1JLGcn+SeQ@mail.gmail.com>
Message-ID: <CAOqAKWA2tyQiC4r=1ddnfk0sUy1izhzervfxN5GmSpD7-EHrVw@mail.gmail.com>

Hi Shubham,

Please see this thread from a couple of days ago:
http://lists.automattic.com/pipermail/wp-hackers/2014-January/047610.html

John


On 10 January 2014 09:28, evil prince <shubham.iit17 at gmail.com> wrote:

> Hello,
>
> Myself ,Shubham Meena , Computer Engineering student of IIT(BHU)-Varanasi
> and worked on an ERP solution of faculty recruitment based on PHP . I
>  installed the word press on my localhost and want to contribute to the
> organisation. What should i do next ??
>
> Shubham Meena
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From marka2014 at hushmail.com  Sat Jan 11 08:47:20 2014
From: marka2014 at hushmail.com (marka2014 at hushmail.com)
Date: Sat, 11 Jan 2014 00:47:20 -0800
Subject: [wp-hackers] Change Cannot connect to database error?
Message-ID: <20140111084720.AEF0E200EA@smtp.hushmail.com>

My database server went down recently and my site was stuck with the
cannot connect to database error. Is it possible to customize this
error with a custom static html page that says we are down? That would
be much nicer than the basic error message showed by default.

From bacon at neilpie.co.uk  Sat Jan 11 08:52:38 2014
From: bacon at neilpie.co.uk (Bacon Pie)
Date: Sat, 11 Jan 2014 08:52:38 +0000
Subject: [wp-hackers] Change Cannot connect to database error?
In-Reply-To: <20140111084720.AEF0E200EA@smtp.hushmail.com>
References: <20140111084720.AEF0E200EA@smtp.hushmail.com>
Message-ID: <etPan.52d10657.7c83e458.ae0@Neils-MacBook-Air.local>

explained here

http://yoast.com/custom-wordpress-database-error-pages/


On 11 January 2014 at 08:47:31, marka2014 at hushmail.com (marka2014 at hushmail.com) wrote:

My database server went down recently and my site was stuck with the 
cannot connect to database error. Is it possible to customize this 
error with a custom static html page that says we are down? That would 
be much nicer than the basic error message showed by default. 
_______________________________________________ 
wp-hackers mailing list 
wp-hackers at lists.automattic.com 
http://lists.automattic.com/mailman/listinfo/wp-hackers 

From krish+wphackers at aahan.me  Sat Jan 11 16:44:41 2014
From: krish+wphackers at aahan.me (Aahan Krish)
Date: Sat, 11 Jan 2014 08:44:41 -0800
Subject: [wp-hackers] Performance improvement -- '/%postname%/%post_id%/'
	over '/%postname%/'?
Message-ID: <CAFaCOgz2TXgzZXavKRFw1PwfGub0cWDS63Fb_JQpP5CiE8dv=w@mail.gmail.com>

I am building a WordPress Multisite network for my college. One of the
subsites works like a bookmarking service where registered students can
share useful links; each post is equivalent to a bookmark. (Custom fields &
meta boxes are used for custom UI in post editor.)

Considering that many posts are made each day (upwards 50), which of these
two permalink structures would suit us best?

/%postname%/, e.g. domain.com/sample-post/

/%postname%/%post_id%/, e.g. domain.com/sample-post/123/

Will the '/%postname%/%post_id%/' permalink structure help as the database
size grows (i.e. the no. of posts)? or can we simply stick with
'/%postname%/' no matter what?

best,
Aahan

From nl at thoughtrefinery.com  Sat Jan 11 16:57:16 2014
From: nl at thoughtrefinery.com (Nicholas Ciske)
Date: Sat, 11 Jan 2014 10:57:16 -0600
Subject: [wp-hackers] Performance improvement --
	'/%postname%/%post_id%/' over '/%postname%/'?
In-Reply-To: <CAFaCOgz2TXgzZXavKRFw1PwfGub0cWDS63Fb_JQpP5CiE8dv=w@mail.gmail.com>
References: <CAFaCOgz2TXgzZXavKRFw1PwfGub0cWDS63Fb_JQpP5CiE8dv=w@mail.gmail.com>
Message-ID: <9F5229B4-C68D-450D-ACE9-88C16D0D72ED@thoughtrefinery.com>

Theoretically the second would be faster but as of 3.3 it's pretty negligible unless you have a lots of pages or very deep page hierarchy.

http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/

Cached version (above gave me a nginx error)
http://webcache.googleusercontent.com/search?q=cache:KiMNuNmIbykJ:ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/

_________________________
Nick Ciske
http://thoughtrefinery.com/
@nciske	

On Jan 11, 2014, at 10:44 AM, Aahan Krish wrote:

> Considering that many posts are made each day (upwards 50), which of these
> two permalink structures would suit us best?
> 
> /%postname%/, e.g. domain.com/sample-post/
> 
> /%postname%/%post_id%/, e.g. domain.com/sample-post/123/
> 
> Will the '/%postname%/%post_id%/' permalink structure help as the database
> size grows (i.e. the no. of posts)? or can we simply stick with
> '/%postname%/' no matter what?


From chris at lod.com  Sat Jan 11 19:06:06 2014
From: chris at lod.com (Chris McCoy)
Date: Sat, 11 Jan 2014 14:06:06 -0500
Subject: [wp-hackers] Running a filter on a custom field
Message-ID: <CEF7004E.688E%chris@lod.com>

Anyway to run a filter on a custom field, for those plugins that don?t use
the shortcode api, and run a regex on the_content, so for example I have a
url and want to use the shortcode on that value, normally would do
do_shortcode($value);





From nl at thoughtrefinery.com  Sat Jan 11 19:25:12 2014
From: nl at thoughtrefinery.com (Nicholas Ciske)
Date: Sat, 11 Jan 2014 13:25:12 -0600
Subject: [wp-hackers] Running a filter on a custom field
In-Reply-To: <CEF7004E.688E%chris@lod.com>
References: <CEF7004E.688E%chris@lod.com>
Message-ID: <ADE8981C-F856-4F0D-9DEF-86383C1F94BA@thoughtrefinery.com>

You can filter meta data as it's retrieved from the DB.

Just make sure you're a good citizen and only filter your data ;-)

http://codex.wordpress.org/Function_Reference/get_metadata#Notes

_________________________
Nick Ciske
http://thoughtrefinery.com/
@nciske	

On Jan 11, 2014, at 1:06 PM, Chris McCoy wrote:

> Anyway to run a filter on a custom field, for those plugins that don?t use
> the shortcode api, and run a regex on the_content, so for example I have a
> url and want to use the shortcode on that value, normally would do
> do_shortcode($value);


From otto at ottodestruct.com  Sat Jan 11 19:31:28 2014
From: otto at ottodestruct.com (Otto)
Date: Sat, 11 Jan 2014 13:31:28 -0600
Subject: [wp-hackers] Performance improvement --
 '/%postname%/%post_id%/' over '/%postname%/'?
In-Reply-To: <9F5229B4-C68D-450D-ACE9-88C16D0D72ED@thoughtrefinery.com>
References: <CAFaCOgz2TXgzZXavKRFw1PwfGub0cWDS63Fb_JQpP5CiE8dv=w@mail.gmail.com>
 <9F5229B4-C68D-450D-ACE9-88C16D0D72ED@thoughtrefinery.com>
Message-ID: <CAD-FghwjtHnUaXf-WimQvVYUpJaekQPy6U0B_9B9xPuwdcXwSw@mail.gmail.com>

On Sat, Jan 11, 2014 at 10:57 AM, Nicholas Ciske <nl at thoughtrefinery.com> wrote:
> Theoretically the second would be faster but as of 3.3 it's pretty negligible unless you have a lots of pages or very deep page hierarchy.
>
> http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/
>
> Cached version (above gave me a nginx error)

Sorry about that. My site has been getting hammered by bots a lot
lately. Can't block them when I'm asleep. :)

-Otto

From otto at ottodestruct.com  Sat Jan 11 19:48:13 2014
From: otto at ottodestruct.com (Otto)
Date: Sat, 11 Jan 2014 13:48:13 -0600
Subject: [wp-hackers] Performance improvement --
 '/%postname%/%post_id%/' over '/%postname%/'?
In-Reply-To: <CAFaCOgz2TXgzZXavKRFw1PwfGub0cWDS63Fb_JQpP5CiE8dv=w@mail.gmail.com>
References: <CAFaCOgz2TXgzZXavKRFw1PwfGub0cWDS63Fb_JQpP5CiE8dv=w@mail.gmail.com>
Message-ID: <CAD-FghyGRKaYGrgxpRJyext4LSWuQs-ZmMot=euLZtxP5-3QGA@mail.gmail.com>

On Sat, Jan 11, 2014 at 10:44 AM, Aahan Krish <krish+wphackers at aahan.me> wrote:
> Considering that many posts are made each day (upwards 50), which of these
> two permalink structures would suit us best?
>
> /%postname%/, e.g. domain.com/sample-post/
>
> /%postname%/%post_id%/, e.g. domain.com/sample-post/123/
>
> Will the '/%postname%/%post_id%/' permalink structure help as the database
> size grows (i.e. the no. of posts)? or can we simply stick with
> '/%postname%/' no matter what?

They will be basically identical in terms of performance, for any
WordPress version. Using either form will trigger the
"verbose_page_rules" flag.

- This will cause WP versions pre-3.3 to generate individual Page
rules in the rewrite rules list. This can be a problem if you have
lots of Pages.
- This will cause WP versions post-3.3 to generate 1 extra SQL query
to determine if the URL matches an existing Page in the database.

In either case, the impact of the two different rules is identical. No
need to tack a post ID on there.

-Otto

From nikolov.tmw at gmail.com  Sat Jan 11 19:54:14 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Sat, 11 Jan 2014 21:54:14 +0200
Subject: [wp-hackers] Performance improvement --
 '/%postname%/%post_id%/' over '/%postname%/'?
In-Reply-To: <CAD-FghyGRKaYGrgxpRJyext4LSWuQs-ZmMot=euLZtxP5-3QGA@mail.gmail.com>
References: <CAFaCOgz2TXgzZXavKRFw1PwfGub0cWDS63Fb_JQpP5CiE8dv=w@mail.gmail.com>
 <CAD-FghyGRKaYGrgxpRJyext4LSWuQs-ZmMot=euLZtxP5-3QGA@mail.gmail.com>
Message-ID: <CAOwx47ehXziqrA4=HeOpO4N=maUuShueFo5EDGQWjANJi6w4Xw@mail.gmail.com>

What could possibly be faster though would be to create a custom post type
with it's own custom rewrite rules(in the form of
"/cpt/%cpt_name%/%post_id%/" - you would get slightly longer permalinks,
but it might be worth it. You wouldn't have to pass the post name to the
query, but just the ID. It will also require some extra code - to create
the proper permalinks when they are requested for a post of that post type,
to add in the rewrite rules, etc.


On Sat, Jan 11, 2014 at 9:48 PM, Otto <otto at ottodestruct.com> wrote:

> On Sat, Jan 11, 2014 at 10:44 AM, Aahan Krish <krish+wphackers at aahan.me>
> wrote:
> > Considering that many posts are made each day (upwards 50), which of
> these
> > two permalink structures would suit us best?
> >
> > /%postname%/, e.g. domain.com/sample-post/
> >
> > /%postname%/%post_id%/, e.g. domain.com/sample-post/123/
> >
> > Will the '/%postname%/%post_id%/' permalink structure help as the
> database
> > size grows (i.e. the no. of posts)? or can we simply stick with
> > '/%postname%/' no matter what?
>
> They will be basically identical in terms of performance, for any
> WordPress version. Using either form will trigger the
> "verbose_page_rules" flag.
>
> - This will cause WP versions pre-3.3 to generate individual Page
> rules in the rewrite rules list. This can be a problem if you have
> lots of Pages.
> - This will cause WP versions post-3.3 to generate 1 extra SQL query
> to determine if the URL matches an existing Page in the database.
>
> In either case, the impact of the two different rules is identical. No
> need to tack a post ID on there.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Sat Jan 11 20:36:46 2014
From: otto at ottodestruct.com (Otto)
Date: Sat, 11 Jan 2014 14:36:46 -0600
Subject: [wp-hackers] Performance improvement --
 '/%postname%/%post_id%/' over '/%postname%/'?
In-Reply-To: <CAOwx47ehXziqrA4=HeOpO4N=maUuShueFo5EDGQWjANJi6w4Xw@mail.gmail.com>
References: <CAFaCOgz2TXgzZXavKRFw1PwfGub0cWDS63Fb_JQpP5CiE8dv=w@mail.gmail.com>
 <CAD-FghyGRKaYGrgxpRJyext4LSWuQs-ZmMot=euLZtxP5-3QGA@mail.gmail.com>
 <CAOwx47ehXziqrA4=HeOpO4N=maUuShueFo5EDGQWjANJi6w4Xw@mail.gmail.com>
Message-ID: <CAD-Fghw_i3Wg9xLP0AndENeYK2AKZH2e4XJtTJw1Ny8URdPfbw@mail.gmail.com>

On Sat, Jan 11, 2014 at 1:54 PM, Nikola Nikolov <nikolov.tmw at gmail.com> wrote:
> What could possibly be faster though would be to create a custom post type
> with it's own custom rewrite rules(in the form of
> "/cpt/%cpt_name%/%post_id%/" - you would get slightly longer permalinks,
> but it might be worth it. You wouldn't have to pass the post name to the
> query, but just the ID. It will also require some extra code - to create
> the proper permalinks when they are requested for a post of that post type,
> to add in the rewrite rules, etc.

The post_name and the ID are both indexed fields in the database. The
performance difference for querying on one vs. the other is either
negligible or actually non-existent.

-Otto

From greglancaster71 at gmail.com  Sun Jan 12 10:34:08 2014
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Sun, 12 Jan 2014 02:34:08 -0800 (PST)
Subject: [wp-hackers] URL Rewriting to Subdomain Possible?
Message-ID: <1389522848223-43180.post@n5.nabble.com>

I would like to provide an option in a plugin to allow a rewrite to be
redirected to the subdomain of their choice.  Aside from creating the
subdomain themselves, would they also have to do a manual redirection in
htaccess?  Or is there a way to use wordpress rewrite rules to redirect to a
subdomain?  



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/URL-Rewriting-to-Subdomain-Possible-tp43180.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From ronin at braydon.com  Sun Jan 12 10:45:19 2014
From: ronin at braydon.com (Braydon Fuller)
Date: Sun, 12 Jan 2014 02:45:19 -0800
Subject: [wp-hackers] URL Rewriting to Subdomain Possible?
In-Reply-To: <1389522848223-43180.post@n5.nabble.com>
References: <1389522848223-43180.post@n5.nabble.com>
Message-ID: <52D2723F.3070109@braydon.com>

WordPress rewriting works for everything that goes through index.php and
matches the path not including the domain. I could be wrong, but I think
when subdomains are used in multiuser, it switches the blog_id, and
isn't a part of the rewriting.

On 01/12/2014 02:34 AM, BenderisGreat wrote:
> I would like to provide an option in a plugin to allow a rewrite to be
> redirected to the subdomain of their choice.  Aside from creating the
> subdomain themselves, would they also have to do a manual redirection in
> htaccess?  Or is there a way to use wordpress rewrite rules to redirect to a
> subdomain?  
>
>
>
> --
> View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/URL-Rewriting-to-Subdomain-Possible-tp43180.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nikolov.tmw at gmail.com  Sun Jan 12 11:14:41 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Sun, 12 Jan 2014 13:14:41 +0200
Subject: [wp-hackers] URL Rewriting to Subdomain Possible?
In-Reply-To: <52D2723F.3070109@braydon.com>
References: <1389522848223-43180.post@n5.nabble.com>
 <52D2723F.3070109@braydon.com>
Message-ID: <CAOwx47ew9Ekzdt7Rd7CQppEeBhGjYiMk3buyTp30xPdqX3KLZg@mail.gmail.com>

You can sort of do that, but it would be a bit complicated.

The first thing is that the admin would have to create a sub-domain and set
it's directory to be the same as the one where WordPress is located(so for
instance if WordPress is in /home/aaa/public_html/, they would have to
create a sub-domain that points to /home/aaa/public_html/ as well ).
What this would do is that whenever that sub-domain is loaded, you would
see the WordPress installation(also if you go to
sub.example.com/sample-page/ and you already have a page with slug
"sample-page", you would see that page in the sub-domain as well). What
this means is that you would want to re-direct everything that is on the
sub-domain and is not created from your plugin to the main domain - this
way you can avoid confusion, and possible SEO penalties(although
technically there should be no links to the sub-domain, except for the ones
that your plugin creates).

After that, you would have to filter or manually create the links that you
want to be pointed to the sub-domain(if you are using a WordPress function
to get the link - like get_permalink() or get_author_posts_url(), there
should be a filter to which you can hook-in and add the sub-domain).

If you are just going to add the sub-domain to the URL, then all you would
want to do is make a redirect to the sub-domain when the URL on the main
domain is accessed(avoiding duplicate content).
If you are going to have custom structure, you would have to create your
custom rewrite rules(via add_rewrite_rule() for instance) and again check
if the URL is accessed on the sub-domain or the main domain.

In order to figure-out if you're on the main domain or on the sub-domain,
you can do parse_url <http://php.net/parse_url>( home_url() ) - this should
give you an array with one of the elements called "host". You should then
grab the current hostname(most-likely you can grab that from the $_SERVER
variable(you should be able to get it from $_SERVER['HTTP_HOST'] ), compare
the two and figure-out if you're on your sub-domain, on the main domain or
somewhere else.


On Sun, Jan 12, 2014 at 12:45 PM, Braydon Fuller <ronin at braydon.com> wrote:

> WordPress rewriting works for everything that goes through index.php and
> matches the path not including the domain. I could be wrong, but I think
> when subdomains are used in multiuser, it switches the blog_id, and
> isn't a part of the rewriting.
>
> On 01/12/2014 02:34 AM, BenderisGreat wrote:
> > I would like to provide an option in a plugin to allow a rewrite to be
> > redirected to the subdomain of their choice.  Aside from creating the
> > subdomain themselves, would they also have to do a manual redirection in
> > htaccess?  Or is there a way to use wordpress rewrite rules to redirect
> to a
> > subdomain?
> >
> >
> >
> > --
> > View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/URL-Rewriting-to-Subdomain-Possible-tp43180.html
> > Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From abdussamad at abdussamad.com  Sun Jan 12 11:49:27 2014
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Sun, 12 Jan 2014 16:49:27 +0500
Subject: [wp-hackers] URL Rewriting to Subdomain Possible?
In-Reply-To: <1389522848223-43180.post@n5.nabble.com>
References: <1389522848223-43180.post@n5.nabble.com>
Message-ID: <52D28147.20200@abdussamad.com>

Yes it's very easy. Here I've laid it all out for you:

http://pastie.org/8626111

On 01/12/2014 03:34 PM, BenderisGreat wrote:
> I would like to provide an option in a plugin to allow a rewrite to be
> redirected to the subdomain of their choice.  Aside from creating the
> subdomain themselves, would they also have to do a manual redirection in
> htaccess?  Or is there a way to use wordpress rewrite rules to redirect to a
> subdomain?
>
>
>
> --
> View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/URL-Rewriting-to-Subdomain-Possible-tp43180.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From krish+wphackers at aahan.me  Sun Jan 12 16:47:21 2014
From: krish+wphackers at aahan.me (Aahan Krish)
Date: Sun, 12 Jan 2014 08:47:21 -0800
Subject: [wp-hackers] =?windows-1252?q?Follow-up_=97_Is_=27/category/2013/?=
	=?windows-1252?q?11/12/sample-post/=27_a_scalable_permalink_struct?=
	=?windows-1252?q?ure=3F?=
Message-ID: <CAFaCOgxZr3=QTEg3-EeVz+FHnoo0FPcJojoirupD_2OzFgob4A@mail.gmail.com>

Is '/%category%/%year%/%monthnum%/%day%/%postname%/' a scalable permalink
structure for a large and growing news site with over 8000 posts and around
40 new posts being added per day?

(This is a follow-up of the post 'Creating a news site on WordPress - some
technical questions' (
http://lists.automattic.com/pipermail/wp-hackers/2013-December/047508.html)
I asked a few weeks ago.)

We are planning to use Categories as Editions (as clearly detailed in the
link), and thus need the category in the permalink structure.

Although the permalink structure handling in WordPress has improved
tremendously, I still believe that the information shared in this thread is
still relevant:
http://lists.automattic.com/pipermail/wp-testers/2009-January/011097.html

So, the question is, can we go ahead with this structure:
'/%category%/%year%/%monthnum%/%day%/%postname%/'?

Any suggestions are most welcome, but please do read the linked threads for
some context.

best,
Aahan

From otto at ottodestruct.com  Sun Jan 12 17:54:51 2014
From: otto at ottodestruct.com (Otto)
Date: Sun, 12 Jan 2014 11:54:51 -0600
Subject: [wp-hackers]
	=?windows-1252?q?Follow-up_=97_Is_=27/category/2013/?=
	=?windows-1252?q?11/12/sample-post/=27_a_scalable_permalink_struct?=
	=?windows-1252?q?ure=3F?=
In-Reply-To: <CAFaCOgxZr3=QTEg3-EeVz+FHnoo0FPcJojoirupD_2OzFgob4A@mail.gmail.com>
References: <CAFaCOgxZr3=QTEg3-EeVz+FHnoo0FPcJojoirupD_2OzFgob4A@mail.gmail.com>
Message-ID: <CAD-FghyYpFGa9GDdEeOg4AwkTaKuK4rTjEtFYoTHRjKXAMmrPA@mail.gmail.com>

On Sun, Jan 12, 2014 at 10:47 AM, Aahan Krish <krish+wphackers at aahan.me> wrote:
> Is '/%category%/%year%/%monthnum%/%day%/%postname%/' a scalable permalink
> structure for a large and growing news site with over 8000 posts and around
> 40 new posts being added per day?

Yes. The scaling issue you're referring to was fixed in WordPress 3.3.

More info: http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/

-Otto

From krish+wphackers at aahan.me  Mon Jan 13 11:23:56 2014
From: krish+wphackers at aahan.me (Aahan Krish)
Date: Mon, 13 Jan 2014 03:23:56 -0800
Subject: [wp-hackers]
	=?windows-1252?q?Follow-up_=97_Is_=27/category/2013/?=
	=?windows-1252?q?11/12/sample-post/=27_a_scalable_permalink_struct?=
	=?windows-1252?q?ure=3F?=
In-Reply-To: <CAD-FghyYpFGa9GDdEeOg4AwkTaKuK4rTjEtFYoTHRjKXAMmrPA@mail.gmail.com>
References: <CAFaCOgxZr3=QTEg3-EeVz+FHnoo0FPcJojoirupD_2OzFgob4A@mail.gmail.com>
 <CAD-FghyYpFGa9GDdEeOg4AwkTaKuK4rTjEtFYoTHRjKXAMmrPA@mail.gmail.com>
Message-ID: <CAFaCOgzAKR8sSLorCyzNvg70cApTkBcHMik9DYniXkhHPe1DoA@mail.gmail.com>

Yes, I read that before. Just wanted to confirm. Thank you, Otto.


On Sun, Jan 12, 2014 at 9:54 AM, Otto <otto at ottodestruct.com> wrote:

> On Sun, Jan 12, 2014 at 10:47 AM, Aahan Krish <krish+wphackers at aahan.me>
> wrote:
> > Is '/%category%/%year%/%monthnum%/%day%/%postname%/' a scalable permalink
> > structure for a large and growing news site with over 8000 posts and
> around
> > 40 new posts being added per day?
>
> Yes. The scaling issue you're referring to was fixed in WordPress 3.3.
>
> More info:
> http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From krish+wphackers at aahan.me  Mon Jan 13 11:25:49 2014
From: krish+wphackers at aahan.me (Aahan Krish)
Date: Mon, 13 Jan 2014 03:25:49 -0800
Subject: [wp-hackers] Performance improvement --
 '/%postname%/%post_id%/' over '/%postname%/'?
In-Reply-To: <CAD-Fghw_i3Wg9xLP0AndENeYK2AKZH2e4XJtTJw1Ny8URdPfbw@mail.gmail.com>
References: <CAFaCOgz2TXgzZXavKRFw1PwfGub0cWDS63Fb_JQpP5CiE8dv=w@mail.gmail.com>
 <CAD-FghyGRKaYGrgxpRJyext4LSWuQs-ZmMot=euLZtxP5-3QGA@mail.gmail.com>
 <CAOwx47ehXziqrA4=HeOpO4N=maUuShueFo5EDGQWjANJi6w4Xw@mail.gmail.com>
 <CAD-Fghw_i3Wg9xLP0AndENeYK2AKZH2e4XJtTJw1Ny8URdPfbw@mail.gmail.com>
Message-ID: <CAFaCOgw8LO0xOehF0i7nhkW8uXru674iAYmHsf1b5qvRDJv35w@mail.gmail.com>

Thank you, Nikola and Otto. In the end I went with '/%year%/%postname%/'
permalink structure.


On Sat, Jan 11, 2014 at 12:36 PM, Otto <otto at ottodestruct.com> wrote:

> On Sat, Jan 11, 2014 at 1:54 PM, Nikola Nikolov <nikolov.tmw at gmail.com>
> wrote:
> > What could possibly be faster though would be to create a custom post
> type
> > with it's own custom rewrite rules(in the form of
> > "/cpt/%cpt_name%/%post_id%/" - you would get slightly longer permalinks,
> > but it might be worth it. You wouldn't have to pass the post name to the
> > query, but just the ID. It will also require some extra code - to create
> > the proper permalinks when they are requested for a post of that post
> type,
> > to add in the rewrite rules, etc.
>
> The post_name and the ID are both indexed fields in the database. The
> performance difference for querying on one vs. the other is either
> negligible or actually non-existent.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mananshah9328 at gmail.com  Mon Jan 13 16:38:53 2014
From: mananshah9328 at gmail.com (manan shah)
Date: Mon, 13 Jan 2014 22:08:53 +0530
Subject: [wp-hackers] Finding a simple bug
Message-ID: <CAJJEyHG-6+81nSPeEPY98HJ97jogTNtHz9_zwg07vzoa24N_HA@mail.gmail.com>

Hi,
I am a newbie developer in word press , I know PHP and MYSQL very well . I
wanted to contribute to WordPress by solving a bug . But due to big names
in a ticket in am not able to understand where to start.Can anyone guide me
for finding a simple bug ?

- Manan

From jdg at codesymphony.co  Mon Jan 13 20:51:48 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Mon, 13 Jan 2014 15:51:48 -0500
Subject: [wp-hackers] Finding a simple bug
In-Reply-To: <CAJJEyHG-6+81nSPeEPY98HJ97jogTNtHz9_zwg07vzoa24N_HA@mail.gmail.com>
References: <CAJJEyHG-6+81nSPeEPY98HJ97jogTNtHz9_zwg07vzoa24N_HA@mail.gmail.com>
Message-ID: <F1D4036B-BF1F-4FC7-BB9B-3EA0C3F84F42@codesymphony.co>

Hi Manan,

Yes WordPress is complex, so sometimes a bug can be hard to understand at first. I don?t think that there is a good way to find simple bugs at present. I think that there are plans to add a ?good-first-bug? tag to the bug tracker, so that simple bugs could be tagged with it. This would be helpful for new contributors I?m sure. I don?t think it has been done yet, though. 

-J.D.

On Jan 13, 2014, at 11:38 AM, manan shah <mananshah9328 at gmail.com> wrote:

> Hi,
> I am a newbie developer in word press , I know PHP and MYSQL very well . I
> wanted to contribute to WordPress by solving a bug . But due to big names
> in a ticket in am not able to understand where to start.Can anyone guide me
> for finding a simple bug ?
> 
> - Manan
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From sameers.public at gmail.com  Mon Jan 13 21:04:24 2014
From: sameers.public at gmail.com (Sameer Siruguri)
Date: Mon, 13 Jan 2014 13:04:24 -0800
Subject: [wp-hackers] Finding a simple bug
In-Reply-To: <F1D4036B-BF1F-4FC7-BB9B-3EA0C3F84F42@codesymphony.co>
References: <CAJJEyHG-6+81nSPeEPY98HJ97jogTNtHz9_zwg07vzoa24N_HA@mail.gmail.com>
 <F1D4036B-BF1F-4FC7-BB9B-3EA0C3F84F42@codesymphony.co>
Message-ID: <CABsJhv6qYOLQUh9vxvKunsKFgZ4QPeO4TneSKw7hxKMnAHi7mw@mail.gmail.com>

Might it be easier to find bugs/issues for commonly-used plugins, that
might be better targets for first-timers?

I learned something by updating Wp-Footnotes to work in WP3 (thought it
turned out the original developer had already done it, I just didn't find
his Github repo before I found his WP.org repo.) But still, it was fun and
I learned a little bit of the WP API.

S.




On Mon, Jan 13, 2014 at 12:51 PM, J.D. Grimes <jdg at codesymphony.co> wrote:

> Hi Manan,
>
> Yes WordPress is complex, so sometimes a bug can be hard to understand at
> first. I don?t think that there is a good way to find simple bugs at
> present. I think that there are plans to add a ?good-first-bug? tag to the
> bug tracker, so that simple bugs could be tagged with it. This would be
> helpful for new contributors I?m sure. I don?t think it has been done yet,
> though.
>
> -J.D.
>
> On Jan 13, 2014, at 11:38 AM, manan shah <mananshah9328 at gmail.com> wrote:
>
> > Hi,
> > I am a newbie developer in word press , I know PHP and MYSQL very well .
> I
> > wanted to contribute to WordPress by solving a bug . But due to big names
> > in a ticket in am not able to understand where to start.Can anyone guide
> me
> > for finding a simple bug ?
> >
> > - Manan
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From greglancaster71 at gmail.com  Wed Jan 15 10:03:36 2014
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Wed, 15 Jan 2014 02:03:36 -0800 (PST)
Subject: [wp-hackers] Change the user avatar url to a user meta field url?
Message-ID: <1389780216460-43195.post@n5.nabble.com>

I know there are plugins for handling a local user avatar, but it seems like
a giant pain in the ass to code something myself for this.  I even asked
around and was told to just use a plugin, but I cannot package someone elses
plugin with what I am making. 

So, I am wondering if there is a way to replace the user avatar with a user
meta field that points to a url.  I know it wont technically be an avatar in
wordpress' eyes, but this would be much simple to allow front end avatar
uploading.  Just select an image, store the url in a custom field, and then
have the avatar call redirected to look at the users avatar meta field.  

Is this a realistic solution? 



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Change-the-user-avatar-url-to-a-user-meta-field-url-tp43195.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From greglancaster71 at gmail.com  Wed Jan 15 10:15:10 2014
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Wed, 15 Jan 2014 02:15:10 -0800 (PST)
Subject: [wp-hackers] Change the user avatar url to a user meta field
	url?
In-Reply-To: <1389780216460-43195.post@n5.nabble.com>
References: <1389780216460-43195.post@n5.nabble.com>
Message-ID: <1389780910515-43196.post@n5.nabble.com>

Actually I am looking at the function, and if I can just change the default
avatar to be used to another function that grabs the user meta field url,
then that should work just fine right?



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Change-the-user-avatar-url-to-a-user-meta-field-url-tp43195p43196.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From nikolov.tmw at gmail.com  Wed Jan 15 10:17:58 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 15 Jan 2014 12:17:58 +0200
Subject: [wp-hackers] Change the user avatar url to a user meta field
	url?
In-Reply-To: <1389780216460-43195.post@n5.nabble.com>
References: <1389780216460-43195.post@n5.nabble.com>
Message-ID: <CAOwx47c+rwG5Kug6WECGg27zjGZWs1b35PboOuhHqpSQLypiiw@mail.gmail.com>

You can still use a plugin for that. For instance this plugin -
http://wordpress.org/plugins/user-avatar/ . It's very simple since all it
does is add interface in the edit profile page in the admin that allows you
to upload a photo to the media library(I think) and then use that as your
avatar. It also allows you to crop the photo. What I'd advice you to do is
to simply download the plugin and go through it's source - it's basically
three .php files, one of which is timthumb(yeah, I know - that's not good
in a plugin :) ).


On Wed, Jan 15, 2014 at 12:03 PM, BenderisGreat
<greglancaster71 at gmail.com>wrote:

> I know there are plugins for handling a local user avatar, but it seems
> like
> a giant pain in the ass to code something myself for this.  I even asked
> around and was told to just use a plugin, but I cannot package someone
> elses
> plugin with what I am making.
>
> So, I am wondering if there is a way to replace the user avatar with a user
> meta field that points to a url.  I know it wont technically be an avatar
> in
> wordpress' eyes, but this would be much simple to allow front end avatar
> uploading.  Just select an image, store the url in a custom field, and then
> have the avatar call redirected to look at the users avatar meta field.
>
> Is this a realistic solution?
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/Change-the-user-avatar-url-to-a-user-meta-field-url-tp43195.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jannekevandorpe at gmail.com  Wed Jan 15 11:20:36 2014
From: jannekevandorpe at gmail.com (Janneke Van Dorpe)
Date: Wed, 15 Jan 2014 11:20:36 +0000
Subject: [wp-hackers] Change the user avatar url to a user meta field
	url?
In-Reply-To: <CAOwx47c+rwG5Kug6WECGg27zjGZWs1b35PboOuhHqpSQLypiiw@mail.gmail.com>
References: <1389780216460-43195.post@n5.nabble.com>
 <CAOwx47c+rwG5Kug6WECGg27zjGZWs1b35PboOuhHqpSQLypiiw@mail.gmail.com>
Message-ID: <F966EBBE-5448-4426-B563-6916EBFDDDBB@gmail.com>

You could also completely overwrite get_avatar() and point it to a meta field with a URL or ID to an attachment.

http://codex.wordpress.org/Function_Reference/get_avatar

On 15 Jan 2014, at 10:17, Nikola Nikolov wrote:

> You can still use a plugin for that. For instance this plugin -
> http://wordpress.org/plugins/user-avatar/ . It's very simple since all it
> does is add interface in the edit profile page in the admin that allows you
> to upload a photo to the media library(I think) and then use that as your
> avatar. It also allows you to crop the photo. What I'd advice you to do is
> to simply download the plugin and go through it's source - it's basically
> three .php files, one of which is timthumb(yeah, I know - that's not good
> in a plugin :) ).
> 
> 
> On Wed, Jan 15, 2014 at 12:03 PM, BenderisGreat
> <greglancaster71 at gmail.com>wrote:
> 
>> I know there are plugins for handling a local user avatar, but it seems
>> like
>> a giant pain in the ass to code something myself for this.  I even asked
>> around and was told to just use a plugin, but I cannot package someone
>> elses
>> plugin with what I am making.
>> 
>> So, I am wondering if there is a way to replace the user avatar with a user
>> meta field that points to a url.  I know it wont technically be an avatar
>> in
>> wordpress' eyes, but this would be much simple to allow front end avatar
>> uploading.  Just select an image, store the url in a custom field, and then
>> have the avatar call redirected to look at the users avatar meta field.
>> 
>> Is this a realistic solution?
>> 
>> 
>> 
>> --
>> View this message in context:
>> http://wordpress-hackers.1065353.n5.nabble.com/Change-the-user-avatar-url-to-a-user-meta-field-url-tp43195.html
>> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From nikolov.tmw at gmail.com  Wed Jan 15 11:33:22 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 15 Jan 2014 13:33:22 +0200
Subject: [wp-hackers] Change the user avatar url to a user meta field
	url?
In-Reply-To: <F966EBBE-5448-4426-B563-6916EBFDDDBB@gmail.com>
References: <1389780216460-43195.post@n5.nabble.com>
 <CAOwx47c+rwG5Kug6WECGg27zjGZWs1b35PboOuhHqpSQLypiiw@mail.gmail.com>
 <F966EBBE-5448-4426-B563-6916EBFDDDBB@gmail.com>
Message-ID: <CAOwx47eubBGSa1oxvSQLSqrz_TQQ2QzFzd9v+s4R00sjCD9Kgg@mail.gmail.com>

I personally would go with the filters. Simply because there might be a
third plugin that says - "hey this user should have a special avatar(the
user added a "badge" to their photo for instance), I'll add my filter last
and I'll return my output".

After all that's the whole purpose of filters and actions in WordPress :)


On Wed, Jan 15, 2014 at 1:20 PM, Janneke Van Dorpe <
jannekevandorpe at gmail.com> wrote:

> You could also completely overwrite get_avatar() and point it to a meta
> field with a URL or ID to an attachment.
>
> http://codex.wordpress.org/Function_Reference/get_avatar
>
> On 15 Jan 2014, at 10:17, Nikola Nikolov wrote:
>
> > You can still use a plugin for that. For instance this plugin -
> > http://wordpress.org/plugins/user-avatar/ . It's very simple since all
> it
> > does is add interface in the edit profile page in the admin that allows
> you
> > to upload a photo to the media library(I think) and then use that as your
> > avatar. It also allows you to crop the photo. What I'd advice you to do
> is
> > to simply download the plugin and go through it's source - it's basically
> > three .php files, one of which is timthumb(yeah, I know - that's not good
> > in a plugin :) ).
> >
> >
> > On Wed, Jan 15, 2014 at 12:03 PM, BenderisGreat
> > <greglancaster71 at gmail.com>wrote:
> >
> >> I know there are plugins for handling a local user avatar, but it seems
> >> like
> >> a giant pain in the ass to code something myself for this.  I even asked
> >> around and was told to just use a plugin, but I cannot package someone
> >> elses
> >> plugin with what I am making.
> >>
> >> So, I am wondering if there is a way to replace the user avatar with a
> user
> >> meta field that points to a url.  I know it wont technically be an
> avatar
> >> in
> >> wordpress' eyes, but this would be much simple to allow front end avatar
> >> uploading.  Just select an image, store the url in a custom field, and
> then
> >> have the avatar call redirected to look at the users avatar meta field.
> >>
> >> Is this a realistic solution?
> >>
> >>
> >>
> >> --
> >> View this message in context:
> >>
> http://wordpress-hackers.1065353.n5.nabble.com/Change-the-user-avatar-url-to-a-user-meta-field-url-tp43195.html
> >> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jannekevandorpe at gmail.com  Wed Jan 15 11:50:17 2014
From: jannekevandorpe at gmail.com (Janneke Van Dorpe)
Date: Wed, 15 Jan 2014 11:50:17 +0000
Subject: [wp-hackers] Change the user avatar url to a user meta field
	url?
In-Reply-To: <CAOwx47eubBGSa1oxvSQLSqrz_TQQ2QzFzd9v+s4R00sjCD9Kgg@mail.gmail.com>
References: <1389780216460-43195.post@n5.nabble.com>
 <CAOwx47c+rwG5Kug6WECGg27zjGZWs1b35PboOuhHqpSQLypiiw@mail.gmail.com>
 <F966EBBE-5448-4426-B563-6916EBFDDDBB@gmail.com>
 <CAOwx47eubBGSa1oxvSQLSqrz_TQQ2QzFzd9v+s4R00sjCD9Kgg@mail.gmail.com>
Message-ID: <050D76DB-AA32-47AC-A220-008A74B1D199@gmail.com>

Agreed, you could overwrite it both ways. Filters are preferable.

On 15 Jan 2014, at 11:33, Nikola Nikolov wrote:

> I personally would go with the filters. Simply because there might be a
> third plugin that says - "hey this user should have a special avatar(the
> user added a "badge" to their photo for instance), I'll add my filter last
> and I'll return my output".
> 
> After all that's the whole purpose of filters and actions in WordPress :)
> 
> 
> On Wed, Jan 15, 2014 at 1:20 PM, Janneke Van Dorpe <
> jannekevandorpe at gmail.com> wrote:
> 
>> You could also completely overwrite get_avatar() and point it to a meta
>> field with a URL or ID to an attachment.
>> 
>> http://codex.wordpress.org/Function_Reference/get_avatar
>> 
>> On 15 Jan 2014, at 10:17, Nikola Nikolov wrote:
>> 
>>> You can still use a plugin for that. For instance this plugin -
>>> http://wordpress.org/plugins/user-avatar/ . It's very simple since all
>> it
>>> does is add interface in the edit profile page in the admin that allows
>> you
>>> to upload a photo to the media library(I think) and then use that as your
>>> avatar. It also allows you to crop the photo. What I'd advice you to do
>> is
>>> to simply download the plugin and go through it's source - it's basically
>>> three .php files, one of which is timthumb(yeah, I know - that's not good
>>> in a plugin :) ).
>>> 
>>> 
>>> On Wed, Jan 15, 2014 at 12:03 PM, BenderisGreat
>>> <greglancaster71 at gmail.com>wrote:
>>> 
>>>> I know there are plugins for handling a local user avatar, but it seems
>>>> like
>>>> a giant pain in the ass to code something myself for this.  I even asked
>>>> around and was told to just use a plugin, but I cannot package someone
>>>> elses
>>>> plugin with what I am making.
>>>> 
>>>> So, I am wondering if there is a way to replace the user avatar with a
>> user
>>>> meta field that points to a url.  I know it wont technically be an
>> avatar
>>>> in
>>>> wordpress' eyes, but this would be much simple to allow front end avatar
>>>> uploading.  Just select an image, store the url in a custom field, and
>> then
>>>> have the avatar call redirected to look at the users avatar meta field.
>>>> 
>>>> Is this a realistic solution?
>>>> 
>>>> 
>>>> 
>>>> --
>>>> View this message in context:
>>>> 
>> http://wordpress-hackers.1065353.n5.nabble.com/Change-the-user-avatar-url-to-a-user-meta-field-url-tp43195.html
>>>> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From david at carrcommunications.com  Wed Jan 15 13:47:54 2014
From: david at carrcommunications.com (David F. Carr)
Date: Wed, 15 Jan 2014 08:47:54 -0500
Subject: [wp-hackers] glitch with the_content filter and password-protected
	posts
Message-ID: <CAJbdpGtjcuQU9=AF4--0SThqtmBnbqpR4TZRbE-dRu5r2_64HA@mail.gmail.com>

A user of one of my plugins is reporting undesirable behavior when he tries
to password protect a post. Even though the body of the post is not
displayed, custom content added from the filter the_the content is
displayed.

My RSVPMaker plugin adds an RSVP form to posts of a custom post type for
events, where the user has specified that RSVPs should be collected. Where
these conditions are met, the HTML for the form is appended to the default
content. It never occurred to me that I needed to test for protected posts
before doing that.

How do I test whether a post is protected and, if so, whether the user has
supplied the required password?

I tried this code below (derived from something I found in the support
forums), but it's not working for me.

if (!empty($post->post_password)) { // if there's a password
if ($_COOKIE['wp-postpass_' . COOKIEHASH] != $post->post_password) {  //
and it doesn't match the cookie
    return $content; // return filtered content unchanged
}
}

This aborts the filter function on a protected post, but it does so even
after the password is entered. That is, the body copy is displayed but not
the output of my filter function. I can see that the password cookie is
set, but it evaluates as not matching $post->post_password

-- 
David F. Carr
Author, Social Collaboration for Dummies
http://www.wiley.com/buy/9781118658543
InformationWeek http://www.informationweek.com/authors/David-Carr

LinkedIn - http://www.linkedin.com/in/davidfcarr
Facebook - http://www.facebook.com/carrcomm

From nikolov.tmw at gmail.com  Wed Jan 15 13:58:23 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 15 Jan 2014 15:58:23 +0200
Subject: [wp-hackers] glitch with the_content filter and
 password-protected posts
In-Reply-To: <CAJbdpGtjcuQU9=AF4--0SThqtmBnbqpR4TZRbE-dRu5r2_64HA@mail.gmail.com>
References: <CAJbdpGtjcuQU9=AF4--0SThqtmBnbqpR4TZRbE-dRu5r2_64HA@mail.gmail.com>
Message-ID: <CAOwx47fQMp=VAz88sqevYEChLB4-eBbYD9bYT__BwoQyHWcKuQ@mail.gmail.com>

If you look at how
the_content()<https://github.com/WordPress/WordPress/blob/master/wp-includes/post-template.php#L164>and
get_the_content()<https://github.com/WordPress/WordPress/blob/master/wp-includes/post-template.php#L180>functions
work, you would see that the_content() calls get_the_content()
and then does apply_filters( 'the_content', $content ) to what was
returned.
Inside of get_the_content() though you would see

if ( post_password_required( $post ) )
    return get_the_password_form( $post );

( no brackets :ugh: :) )

So it seems like what you should do in your function that adds extra output
is something like this:

if ( post_password_required( $post ) ) {
    return '';
}

By returning an empty string when a post password is required(if the user
already entered the password, post_password_required() will return false)
you make sure that none of your output is displayed.


On Wed, Jan 15, 2014 at 3:47 PM, David F. Carr <david at carrcommunications.com
> wrote:

> A user of one of my plugins is reporting undesirable behavior when he tries
> to password protect a post. Even though the body of the post is not
> displayed, custom content added from the filter the_the content is
> displayed.
>
> My RSVPMaker plugin adds an RSVP form to posts of a custom post type for
> events, where the user has specified that RSVPs should be collected. Where
> these conditions are met, the HTML for the form is appended to the default
> content. It never occurred to me that I needed to test for protected posts
> before doing that.
>
> How do I test whether a post is protected and, if so, whether the user has
> supplied the required password?
>
> I tried this code below (derived from something I found in the support
> forums), but it's not working for me.
>
> if (!empty($post->post_password)) { // if there's a password
> if ($_COOKIE['wp-postpass_' . COOKIEHASH] != $post->post_password) {  //
> and it doesn't match the cookie
>     return $content; // return filtered content unchanged
> }
> }
>
> This aborts the filter function on a protected post, but it does so even
> after the password is entered. That is, the body copy is displayed but not
> the output of my filter function. I can see that the password cookie is
> set, but it evaluates as not matching $post->post_password
>
> --
> David F. Carr
> Author, Social Collaboration for Dummies
> http://www.wiley.com/buy/9781118658543
> InformationWeek http://www.informationweek.com/authors/David-Carr
>
> LinkedIn - http://www.linkedin.com/in/davidfcarr
> Facebook - http://www.facebook.com/carrcomm
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Jan 15 14:43:39 2014
From: otto at ottodestruct.com (Otto)
Date: Wed, 15 Jan 2014 08:43:39 -0600
Subject: [wp-hackers] glitch with the_content filter and
 password-protected posts
In-Reply-To: <CAOwx47fQMp=VAz88sqevYEChLB4-eBbYD9bYT__BwoQyHWcKuQ@mail.gmail.com>
References: <CAJbdpGtjcuQU9=AF4--0SThqtmBnbqpR4TZRbE-dRu5r2_64HA@mail.gmail.com>
 <CAOwx47fQMp=VAz88sqevYEChLB4-eBbYD9bYT__BwoQyHWcKuQ@mail.gmail.com>
Message-ID: <CAD-FghzPyyMWnE_6etmEaz4Q96pSdAFD=xPz3-7YOdeB=5D7Rw@mail.gmail.com>

On Wed, Jan 15, 2014 at 7:58 AM, Nikola Nikolov <nikolov.tmw at gmail.com> wrote:
> So it seems like what you should do in your function that adds extra output
> is something like this:
>
> if ( post_password_required( $post ) ) {
>     return '';
> }

Actually, you want to return the content unchanged, so that the
password form is properly displayed. Filters that do nothing need to
return whatever input they were given, not an empty string.

So, something like this:

add_filter('the_content','example');
function example( $content ) {
  $post = get_post();
  if ( post_password_required( $post ) ) {
    return $content;
  }

  // .. rest of your filter code here
}


-Otto

From nikolov.tmw at gmail.com  Wed Jan 15 15:00:05 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 15 Jan 2014 17:00:05 +0200
Subject: [wp-hackers] glitch with the_content filter and
 password-protected posts
In-Reply-To: <CAD-FghzPyyMWnE_6etmEaz4Q96pSdAFD=xPz3-7YOdeB=5D7Rw@mail.gmail.com>
References: <CAJbdpGtjcuQU9=AF4--0SThqtmBnbqpR4TZRbE-dRu5r2_64HA@mail.gmail.com>
 <CAOwx47fQMp=VAz88sqevYEChLB4-eBbYD9bYT__BwoQyHWcKuQ@mail.gmail.com>
 <CAD-FghzPyyMWnE_6etmEaz4Q96pSdAFD=xPz3-7YOdeB=5D7Rw@mail.gmail.com>
Message-ID: <CAOwx47fkrdbWNMPWFQ0MD+zZ_J_WTf==n9mvzOenp9z14DWyZw@mail.gmail.com>

That's true I forgot that there for a second.


On Wed, Jan 15, 2014 at 4:43 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Jan 15, 2014 at 7:58 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
> wrote:
> > So it seems like what you should do in your function that adds extra
> output
> > is something like this:
> >
> > if ( post_password_required( $post ) ) {
> >     return '';
> > }
>
> Actually, you want to return the content unchanged, so that the
> password form is properly displayed. Filters that do nothing need to
> return whatever input they were given, not an empty string.
>
> So, something like this:
>
> add_filter('the_content','example');
> function example( $content ) {
>   $post = get_post();
>   if ( post_password_required( $post ) ) {
>     return $content;
>   }
>
>   // .. rest of your filter code here
> }
>
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From lukebryan at sharefaith.com  Thu Jan 16 00:32:05 2014
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Wed, 15 Jan 2014 16:32:05 -0800
Subject: [wp-hackers] Two questions regarding 3.9
Message-ID: <CAFnKAk2iWL_PQyfnqHzp3=mFsrLQVDjS3zXcWsxGQXP6Q0aXDQ@mail.gmail.com>

Greetings all,

I just updated a testing site using the Beta Tester plugin, set to "point
release nightlies". I thought this would update to 3.8.1, but it upgraded
the site to 3.9 alpha.

When on 3.9, I notice that it gives a JS error: "Deprecated TinyMCE API
call: <target>.onAddEditor.add(..)"
This is breaking the editor for me, and it looks like tinymce.majorVersion
is 4 on this preview release, not 3.

Could someone confirm whether TinyMCE is going to be upgraded a major
version next release, and whether there will be an option or filter for
older addons to use TinyMCE 3?

Also, is it a bug that I'm not getting the 3.8.1 on point release mode with
Beta plugin?

Best regards,
Luke

From wp at andrewnacin.com  Thu Jan 16 00:44:57 2014
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 15 Jan 2014 19:44:57 -0500
Subject: [wp-hackers] Two questions regarding 3.9
In-Reply-To: <CAFnKAk2iWL_PQyfnqHzp3=mFsrLQVDjS3zXcWsxGQXP6Q0aXDQ@mail.gmail.com>
References: <CAFnKAk2iWL_PQyfnqHzp3=mFsrLQVDjS3zXcWsxGQXP6Q0aXDQ@mail.gmail.com>
Message-ID: <CAP29PvjDNWC0LGaEpdyzuv0rh9zr5sZzaAMn0vJT9b=qO00PWw@mail.gmail.com>

https://core.trac.wordpress.org/ticket/24067


On Wed, Jan 15, 2014 at 7:32 PM, Luke Bryan <lukebryan at sharefaith.com>wrote:

> Greetings all,
>
> I just updated a testing site using the Beta Tester plugin, set to "point
> release nightlies". I thought this would update to 3.8.1, but it upgraded
> the site to 3.9 alpha.
>
> When on 3.9, I notice that it gives a JS error: "Deprecated TinyMCE API
> call: <target>.onAddEditor.add(..)"
> This is breaking the editor for me, and it looks like tinymce.majorVersion
> is 4 on this preview release, not 3.
>
> Could someone confirm whether TinyMCE is going to be upgraded a major
> version next release, and whether there will be an option or filter for
> older addons to use TinyMCE 3?
>
> Also, is it a bug that I'm not getting the 3.8.1 on point release mode with
> Beta plugin?
>
> Best regards,
> Luke
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From guus at inspiration-for-success.com  Thu Jan 16 06:16:37 2014
From: guus at inspiration-for-success.com (Guus (IFS))
Date: Thu, 16 Jan 2014 14:16:37 +0800
Subject: [wp-hackers] How to use $wpdb in plugins
In-Reply-To: <CA+69t5moFK5upx3rfCnuuEemb4XAXHHWQRaZmoNvgbzq-W5sfg@mail.gmail.com>
References: <AC433F806A2F4D0EA217958CCE097D23@megaheights.net>
 <CEF14F67.33F81%chris@clwill.com>
 <CA+69t5=JOmHZU_SUxSRkhP3jd8dS4Er=CLFNeTg7hc+HGSFO4g@mail.gmail.com>
 <CAL1O-KUiDmBzMh3A3-Y2vn0fP+gTzWN5MSTbqEP7tmyr9N=T5A@mail.gmail.com>
 <A17BD43EA2114421A322F75E3600E160@megaheights.net>
 <CAL1O-KU1ciD8uhtutqpAsensXwUcVmU96EZVzVv9O7mOPhGHcw@mail.gmail.com>
 <CA+69t5nua0hjQDeiqC=GtA+2j_c6zCqJ4CzCDqYM0N0yybvTcw@mail.gmail.com>
 <ECB3DB0AE94F44DF8400D311C565BCB9@megaheights.net>
 <CA+69t5moFK5upx3rfCnuuEemb4XAXHHWQRaZmoNvgbzq-W5sfg@mail.gmail.com>
Message-ID: <642DC5F7439F4B3D8F5FF9FE3638A9DB@ws6>

Thanks, didn't know that the warning could be bypassed with the static 
declaration.

--------------------------------------------------
From: "Gabriel Acosta" <gabo.acosta624 at gmail.com>
Sent: Wednesday, January 08, 2014 12:58 AM
To: <wp-hackers at lists.automattic.com>
Subject: Re: [wp-hackers] How to use $wpdb in plugins

> It's not:
> http://www.php.net/manual/en/language.oop5.static.php
>
> Calling non-static methods statically generates an *E_STRICT* level 
> warning.
>
> That is completely different than "PHP 5.4 and higher or something gives
> notices on static calls."
>
>
> On Tue, Jan 7, 2014 at 9:44 AM, Guus (IFS) 
> <guus at inspiration-for-success.com
>> wrote:
>
>> Hehehehe.
>>
>> It is legit though :).
>>
>> -----Original Message----- From: Gabriel Acosta
>> Sent: Tuesday, January 07, 2014 11:52 PM
>>
>> To: wp-hackers at lists.automattic.com
>> Subject: Re: [wp-hackers] How to use $wpdb in plugins
>>
>> "and higher or something" yup, sounds legit, lol
>>
>>
>> On Tue, Jan 7, 2014 at 8:15 AM, Leo Baiano <ljunior2005 at gmail.com> wrote:
>>
>>  Not if you declare the method as static.
>>>
>>>
>>> 2014/1/7 Guus (IFS) <guus at inspiration-for-success.com>
>>>
>>> > PHP 5.4 and higher or something gives notices on static calls.
>>> >
>>> > -----Original Message----- From: Leo Baiano Sent: Tuesday, January 07,
>>> > 2014 10:41 PM To: wp-hackers at lists.automattic.com Subject: Re:
>>> > [wp-hackers] How to use $wpdb in plugins
>>> > I believe you are mistaken Guus, it makes little sense to discourage 
>>> > the
>>> > use of Static calls
>>> >
>>> >
>>> > 2014/1/7 Gabriel Acosta <gabo.acosta624 at gmail.com>
>>> >
>>> >  Static calls are discouraged? will be disallowed? o my god this list
>>> does
>>> >> gets hilarious from time to time. What is actually discouraged, not 
>>> >>  >>
>>> from
>>> >> the PHP standard but from other methodologies like OOP is the use of
>>> >> globals, but clearly that's just the way WP is so...
>>> >>
>>> >>
>>> >> On Tue, Jan 7, 2014 at 7:30 AM, Chris Williams <chris at clwill.com>
>>> wrote:
>>> >>
>>> >> > Evidence please?
>>> >> >
>>> >> > On 1/7/14 1:09 AM, "Guus (IFS)" <guus at inspiration-for-success.com>
>>> >> wrote:
>>> >> >
>>> >> > >In newer PHP versions static calls are discouraged. Guess in 
>>> >> > >future
>>> >> > >versions
>>> >> > >even disallowed.
>>> >> >
>>> >> > _______________________________________________
>>> >> > wp-hackers mailing list
>>> >> > wp-hackers at lists.automattic.com
>>> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> >> >
>>> >> _______________________________________________
>>> >> wp-hackers mailing list
>>> >> wp-hackers at lists.automattic.com
>>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> >>
>>> >>
>>> >
>>> >
>>> > --
>>> > Amplexos,
>>> >
>>> > Leo Baiano
>>> > Web Developer
>>> > _______________________________________________
>>> > wp-hackers mailing list
>>> > wp-hackers at lists.automattic.com
>>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> > _______________________________________________
>>> > wp-hackers mailing list
>>> > wp-hackers at lists.automattic.com
>>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> >
>>>
>>>
>>>
>>> --
>>> Amplexos,
>>>
>>> Leo Baiano
>>> Web Developer
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>  _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From david at carrcommunications.com  Sun Jan 19 00:57:35 2014
From: david at carrcommunications.com (David F. Carr)
Date: Sat, 18 Jan 2014 19:57:35 -0500
Subject: [wp-hackers] glitch with the_content filter and
 password-protected posts
In-Reply-To: <CAOwx47fkrdbWNMPWFQ0MD+zZ_J_WTf==n9mvzOenp9z14DWyZw@mail.gmail.com>
References: <CAJbdpGtjcuQU9=AF4--0SThqtmBnbqpR4TZRbE-dRu5r2_64HA@mail.gmail.com>
 <CAOwx47fQMp=VAz88sqevYEChLB4-eBbYD9bYT__BwoQyHWcKuQ@mail.gmail.com>
 <CAD-FghzPyyMWnE_6etmEaz4Q96pSdAFD=xPz3-7YOdeB=5D7Rw@mail.gmail.com>
 <CAOwx47fkrdbWNMPWFQ0MD+zZ_J_WTf==n9mvzOenp9z14DWyZw@mail.gmail.com>
Message-ID: <CAJbdpGs8dT7XCArWSQRi9P3BnQ9vnKa7F6DqQ59EuS0YfHavZw@mail.gmail.com>

Thanks for your help.

Otto, why do you use $post = get_post() in your example code?

I usually put global $post at the top of the function definition.



On Wed, Jan 15, 2014 at 10:00 AM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> That's true I forgot that there for a second.
>
>
> On Wed, Jan 15, 2014 at 4:43 PM, Otto <otto at ottodestruct.com> wrote:
>
> > On Wed, Jan 15, 2014 at 7:58 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
> > wrote:
> > > So it seems like what you should do in your function that adds extra
> > output
> > > is something like this:
> > >
> > > if ( post_password_required( $post ) ) {
> > >     return '';
> > > }
> >
> > Actually, you want to return the content unchanged, so that the
> > password form is properly displayed. Filters that do nothing need to
> > return whatever input they were given, not an empty string.
> >
> > So, something like this:
> >
> > add_filter('the_content','example');
> > function example( $content ) {
> >   $post = get_post();
> >   if ( post_password_required( $post ) ) {
> >     return $content;
> >   }
> >
> >   // .. rest of your filter code here
> > }
> >
> >
> > -Otto
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
David F. Carr
Author, Social Collaboration for Dummies
http://www.wiley.com/buy/9781118658543
InformationWeek http://www.informationweek.com/authors/David-Carr

david at carrcommunications.com

Direct: (954) 757-5827
Mobile: (954) 290-6788
LinkedIn - http://www.linkedin.com/in/davidfcarr
Facebook - http://www.facebook.com/carrcomm

David F. Carr
971 NW 124 Ave.
Coral Springs FL 33071-5082

From otto at ottodestruct.com  Sun Jan 19 01:15:56 2014
From: otto at ottodestruct.com (Otto)
Date: Sat, 18 Jan 2014 19:15:56 -0600
Subject: [wp-hackers] glitch with the_content filter and
 password-protected posts
In-Reply-To: <CAJbdpGs8dT7XCArWSQRi9P3BnQ9vnKa7F6DqQ59EuS0YfHavZw@mail.gmail.com>
References: <CAJbdpGtjcuQU9=AF4--0SThqtmBnbqpR4TZRbE-dRu5r2_64HA@mail.gmail.com>
 <CAOwx47fQMp=VAz88sqevYEChLB4-eBbYD9bYT__BwoQyHWcKuQ@mail.gmail.com>
 <CAD-FghzPyyMWnE_6etmEaz4Q96pSdAFD=xPz3-7YOdeB=5D7Rw@mail.gmail.com>
 <CAOwx47fkrdbWNMPWFQ0MD+zZ_J_WTf==n9mvzOenp9z14DWyZw@mail.gmail.com>
 <CAJbdpGs8dT7XCArWSQRi9P3BnQ9vnKa7F6DqQ59EuS0YfHavZw@mail.gmail.com>
Message-ID: <CAD-FghxNQXCH7BrMo6eAYpDfwPWOdnB0_sfhA8R+ojCnjsCmgQ@mail.gmail.com>

On Sat, Jan 18, 2014 at 6:57 PM, David F. Carr
<david at carrcommunications.com> wrote:
> Thanks for your help.
>
> Otto, why do you use $post = get_post() in your example code?
>
> I usually put global $post at the top of the function definition.

No particular reason, other than avoiding direct use of globals when
you don't actually need them is always a pretty good idea.

Using a global means that you might modify the global accidentally,
and in this case, I had no need to modify the $post global.  On the
other hand, get_post() returns the same global post object anyway, but
now the $post variable is in the function context space, so if I did
accidentally modify it, then the result of that change would not
affect anything else.

-Otto

From greglancaster71 at gmail.com  Sun Jan 19 08:24:52 2014
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Sun, 19 Jan 2014 00:24:52 -0800 (PST)
Subject: [wp-hackers] Change the user avatar url to a user meta field
	url?
In-Reply-To: <CAOwx47eubBGSa1oxvSQLSqrz_TQQ2QzFzd9v+s4R00sjCD9Kgg@mail.gmail.com>
References: <1389780216460-43195.post@n5.nabble.com>
 <CAOwx47c+rwG5Kug6WECGg27zjGZWs1b35PboOuhHqpSQLypiiw@mail.gmail.com>
 <F966EBBE-5448-4426-B563-6916EBFDDDBB@gmail.com>
 <CAOwx47eubBGSa1oxvSQLSqrz_TQQ2QzFzd9v+s4R00sjCD9Kgg@mail.gmail.com>
Message-ID: <1390119892059-43210.post@n5.nabble.com>

Thanks Nikola - I took your advice and filtered it.  I am not sure why
everyone says it's a pain now (or maybe I just spoke with the wrong people)
but that was incredibly easy.   Just code an upload form, store url to file
in usermeta, and then filter the get_avatar function and have it check that
usermeta first.  Thats correct, right?  I dont really see how there are
entire plugins dedicated to this now either.  



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Change-the-user-avatar-url-to-a-user-meta-field-url-tp43195p43210.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From otto at ottodestruct.com  Sun Jan 19 08:51:42 2014
From: otto at ottodestruct.com (Otto)
Date: Sun, 19 Jan 2014 02:51:42 -0600
Subject: [wp-hackers] Change the user avatar url to a user meta field
	url?
In-Reply-To: <1390119892059-43210.post@n5.nabble.com>
References: <1389780216460-43195.post@n5.nabble.com>
 <CAOwx47c+rwG5Kug6WECGg27zjGZWs1b35PboOuhHqpSQLypiiw@mail.gmail.com>
 <F966EBBE-5448-4426-B563-6916EBFDDDBB@gmail.com>
 <CAOwx47eubBGSa1oxvSQLSqrz_TQQ2QzFzd9v+s4R00sjCD9Kgg@mail.gmail.com>
 <1390119892059-43210.post@n5.nabble.com>
Message-ID: <CAD-FghzvRv7uneeJvOZtUjCaWGrfhz+5xKoyKCoP7qD=0xFY2A@mail.gmail.com>

Yep, that's the easy way. And, as you will find, plugins get more
complex as time goes by. :)


-Otto


On Sun, Jan 19, 2014 at 2:24 AM, BenderisGreat
<greglancaster71 at gmail.com> wrote:
> Thanks Nikola - I took your advice and filtered it.  I am not sure why
> everyone says it's a pain now (or maybe I just spoke with the wrong people)
> but that was incredibly easy.   Just code an upload form, store url to file
> in usermeta, and then filter the get_avatar function and have it check that
> usermeta first.  Thats correct, right?  I dont really see how there are
> entire plugins dedicated to this now either.
>
>
>
> --
> View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Change-the-user-avatar-url-to-a-user-meta-field-url-tp43195p43210.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From david at wordshell.net  Mon Jan 20 10:02:01 2014
From: david at wordshell.net (David Anderson)
Date: Mon, 20 Jan 2014 10:02:01 +0000
Subject: [wp-hackers] Multisite options
Message-ID: <52DCF419.1040901@wordshell.net>

Hi,

I am working with code that wants to get the WordPress site's base table 
prefix on a WPMU install. i.e. The original $table_prefix - not its 
*current* value (which can be changed due to site switching).

This is available as $wpdb->base_prefix. However, this is only public by 
default. The class itself does not explicitly mark it as public or 
private. So, I reasoned that probable $wpdb->get_blog_prefix() is the 
"proper" way to read it.

The code of that function is as follows:

     function get_blog_prefix( $blog_id = null ) {

         if ( is_multisite() ) {

             if ( null === $blog_id )

                 $blog_id = $this->blogid;

             $blog_id = (int) $blog_id;

             if ( defined( 'MULTISITE' ) && ( 0 == $blog_id || 1 == $blog_id ) )

                 return $this->base_prefix;

             else

                 return $this->base_prefix . $blog_id . '_';

         } else {

             return $this->base_prefix;

         }

     }

It thus looks like $wpdb->get_blog_prefix(0) is the way to get the value 
I want. However, I am confused about the purpose of the block that 
begins with if (defined( 'MULTISITE' )).

What is the specific purpose of the defined('MULTISITE') check? One 
might guess that MULTISITE will always be defined if is_multisite() 
passed. However, a look at is_multisite() shows that this is not 
necessarily so:

function is_multisite() {

     if ( defined( 'MULTISITE' ) )

         return MULTISITE;

     if ( defined( 'SUBDOMAIN_INSTALL' ) || defined( 'VHOST' ) || defined( 'SUNRISE' ) )

         return true;

     return false;

}

So, is_multisite() can return true even if MULTISITE is not true; there 
are the additional situations where any of the 3 constants 
SUBDOMAIN_INSTALL, VHOST or SUNRISE are defined (regardless of their value).

In that situation, $wpdb->get_blog_prefix() will actually return the 
value of: $this->base_prefix . '0_'

That doesn't seem like it can be correct. On the other hand, the code 
seems to be careful to bring about this result. It seems to be 
deliberately engineered with the possibility that is_multisite() is true 
but MULTISITE is not true.

Can someone give me a clue with what's going on here? I'm asking because 
I've just come across a user for whom $wpdb->get_blog_prefix() does 
actually return $this->base_prefix . '0_' - and he has no tables at all 
with that prefix. It seems like the wrong result. I've not yet got the 
information on the value of all those constants from him, but he says 
it's a WPMU install. I'm looking into whether his install is set up 
wrongly, but my question to wp-hackers is as to whether the 
$wpdb->get_blog_prefix() is functioning as intended, or whether this is 
a subtle bug, or whether I'm simply getting the base prefix in the wrong 
way and should be using a different strategy.

Many thanks,
David

-- 
UpdraftPlus - best WordPress backups - http://updraftplus.com
WordShell - WordPress fast from the CLI - http://wordshell.net


From mike at grady-etc.com  Mon Jan 20 16:07:06 2014
From: mike at grady-etc.com (Mike Burns)
Date: Mon, 20 Jan 2014 11:07:06 -0500
Subject: [wp-hackers] Multisite options
In-Reply-To: <52DCF419.1040901@wordshell.net>
References: <52DCF419.1040901@wordshell.net>
Message-ID: <9127769B7A604D7886FA397ABAB029B1@grady-etc.com>

I don?t think there is a cleaner way to access that value then `$wpdb->base_prefix`.  I wouldn?t use `$wpdb->get_blog_prefix()` ? semantically that method is intended to retrieve the prefix for a specific blog, and passing 0 is a hack that won?t always work due to the issue you discovered.

The logic involving the `SUBDOMAIN_INSTALL` and `VHOST` constants is for backwards compatibility with pre-WP 3.0 installs.

Prior to WP 3.0 there was a separate code base dedicated to multisite ? WPMU.  There was no need for a `MULTISITE` constant as that was the only option you had.  Instead, the `VHOST` constant was used to indicate whether or not it was a sub-domain or sub-directory install.

A fresh install of WPMU used `wp_1_` for the first blog prefix.  When the single / MU codebases merged in WP 3.0, a fresh install used `wp_` for the first blog prefix.  When converted to multisite (http://codex.wordpress.org/Create_A_Network), `wp_2_` was used for the next blog, so on and so on.

In order for WPMU-era installs to continue to work post-3.0, there are several places that use the definition of `MULTISITE` to decide which database prefix / uploads directory to use for the main site.

Best,
Mike

From david at wordshell.net  Mon Jan 20 18:28:52 2014
From: david at wordshell.net (David Anderson)
Date: Mon, 20 Jan 2014 18:28:52 +0000
Subject: [wp-hackers] Multisite options
In-Reply-To: <52DCF419.1040901@wordshell.net>
References: <52DCF419.1040901@wordshell.net>
Message-ID: <52DD6AE4.7080806@wordshell.net>

Hi Mike,

Thanks very much for the response...
> I don't think there is a cleaner way to access that value then `$wpdb->base_prefix`.  I wouldn't use `$wpdb->get_blog_prefix()` --- semantically that method is intended to retrieve the prefix for a specific blog, and passing 0 is a hack that won't always work due to the issue you discovered.
I'm just a bit nervous about the fact that the value of $base_prefix 
isn't marked as public. I've been bitten in the past by relying too much 
on the current state of the code, running into later problems, and then 
getting the feedback "that's not officially supported, you did it 
wrong". The get_blog_prefix() function does seem to explicitly cater for 
someone passing in the value "0", so that seems a little bit "official". 
I suppose I could hedge my bets by testing the WordPress version (since 
I know that it's effectively public up to WP 3.8)... and/or perhaps, by 
testing for the inconsistency I've discovered in advance. Any further 
thoughts? Anyone who works on WPDB in core have a comment on why 
base_prefix isn't explicitly marked as public?

Based on your explanation below, if I've understood rightly, a WPMU 
install from before 3.0 could legitimately lack the MULTISITE constant, 
even after upgrading to a later version. Multisite status is detected 
through other variables. However, I'm still unclear from your 
explanation upon what exactly the part of the code inside 
get_blog_prefix() that I highlighted is intended to be achieving. I'm 
thinking it's buggy... let me explain...

if ( defined( 'MULTISITE' ) && ( 0 == $blog_id || 1 == $blog_id ) )
return $this->base_prefix;
else
return $this->base_prefix . $blog_id . '_';

In this part of the code, we know that is_multisite() is true. But, we 
don't know that MULTISITE is defined. What is the purpose of the 
MULTISITE check? Presumably, it is something to do with the legacy 
situation, of a site that was upgraded from a pre-3.0 WPMU install. In 
such cases, MULTISITE is not set, and the code enforces the outcome of 
$this->base_prefix.$blog_id.'_' - even if $blog_id is 0 or 1. Perhaps 
the missing piece of the jigsaw puzzle for me is that "in such installs, 
$blog_id can never actually be 0 or 1" ???

Now, into the mix, I now have the information from my particular client. 
In his situation, his constants (when read from a plugin page on the 
network dashboard, on WordPress 3.8) are as follows (this is what he's 
sent me):
MULTISITE: (undefined)
SUBDOMAIN_INSTALL: (undefined)
VHOST: no
SUNRISE: on

So, the values of VHOST and SUNRISE are causing is_multisite() to be 
true. But MULTISITE is not set. His list of blogs includes one with ID 1 
(that is, when he sent me his list of tables, he's got wp_1_*).

In this scenario, it appears to be impossible to get get_blog_prefix() 
to return the base prefix, so my only option is to read 
wpdb::base_prefix directly. But I wonder if I should also file a 
bug/patch in trac so that the case of $blog_id == 0 always returns 
base_prefix, regardless of MULTISITE - because get_blog_prefix() does 
seem to want to be able to respond properly to the case $blog_id == 0, 
and presently it's only doing so sometimes.

David

> The logic involving the `SUBDOMAIN_INSTALL` and `VHOST` constants is for backwards compatibility with pre-WP 3.0 installs.
>
> Prior to WP 3.0 there was a separate code base dedicated to multisite --- WPMU.  There was no need for a `MULTISITE` constant as that was the only option you had.  Instead, the `VHOST` constant was used to indicate whether or not it was a sub-domain or sub-directory install.
>
> A fresh install of WPMU used `wp_1_` for the first blog prefix.  When the single / MU codebases merged in WP 3.0, a fresh install used `wp_` for the first blog prefix.  When converted to multisite (http://codex.wordpress.org/Create_A_Network), `wp_2_` was used for the next blog, so on and so on.
>
> In order for WPMU-era installs to continue to work post-3.0, there are several places that use the definition of `MULTISITE` to decide which database prefix / uploads directory to use for the main site.
>
> Best,
> Mike

-- 
UpdraftPlus - best WordPress backups - http://updraftplus.com
WordShell - WordPress fast from the CLI - http://wordshell.net



From paul at codehooligans.com  Mon Jan 20 20:10:26 2014
From: paul at codehooligans.com (Paul Menard)
Date: Mon, 20 Jan 2014 15:10:26 -0500
Subject: [wp-hackers] Multisite options
In-Reply-To: <9127769B7A604D7886FA397ABAB029B1@grady-etc.com>
References: <52DCF419.1040901@wordshell.net>
 <9127769B7A604D7886FA397ABAB029B1@grady-etc.com>
Message-ID: <CAHTDVPmRHT4jmdjkhkNrBhiJBN_xA03NsG4PDYjYJYZZnh53-g@mail.gmail.com>

On Mon, Jan 20, 2014 at 11:07 AM, Mike Burns <mike at grady-etc.com> wrote:

> A fresh install of WPMU used `wp_1_` for the first blog prefix.  When the
> single / MU codebases merged in WP 3.0, a fresh install used `wp_` for the
> first blog prefix.  When converted to multisite (
> http://codex.wordpress.org/Create_A_Network), `wp_2_` was used for the
> next blog, so on and so on.
>

Actually that is not accurate. The first install (http://somesite.com)  has
prefix 'wp_'. This is the initial installed site which is also the database
used by the Network. When you enable Multisite you will see all the network
table have the same base prefix 'wp_', Then when you create a new blog (
http://site1.simesite.com) it will have the prefix wp_1_, then the next (
http://site2.somesite.com) will have prefix wp_2_

P-

From paul at codehooligans.com  Mon Jan 20 20:13:09 2014
From: paul at codehooligans.com (Paul Menard)
Date: Mon, 20 Jan 2014 15:13:09 -0500
Subject: [wp-hackers] Multisite options
In-Reply-To: <CAHTDVPmRHT4jmdjkhkNrBhiJBN_xA03NsG4PDYjYJYZZnh53-g@mail.gmail.com>
References: <52DCF419.1040901@wordshell.net>
 <9127769B7A604D7886FA397ABAB029B1@grady-etc.com>
 <CAHTDVPmRHT4jmdjkhkNrBhiJBN_xA03NsG4PDYjYJYZZnh53-g@mail.gmail.com>
Message-ID: <CAHTDVPm=n+O6yfZ0N3-AC0bGKqy5XuHYh0bCKpN2F2xa2Ygd3A@mail.gmail.com>

Mike

Actually you do know that 'MULTISITE' is define. When you enable Multisite
on a regular WordPress install it is one of the new settings you are
instructed to add to your wp-config.php.
http://codex.wordpress.org/Create_A_Network see step 4.

MULTISITE is a PHP define you can check using is_defined('MULTISITE').

Paul




On Mon, Jan 20, 2014 at 3:10 PM, Paul Menard <paul at codehooligans.com> wrote:

>
>
>
> On Mon, Jan 20, 2014 at 11:07 AM, Mike Burns <mike at grady-etc.com> wrote:
>
>> A fresh install of WPMU used `wp_1_` for the first blog prefix.  When the
>> single / MU codebases merged in WP 3.0, a fresh install used `wp_` for the
>> first blog prefix.  When converted to multisite (
>> http://codex.wordpress.org/Create_A_Network), `wp_2_` was used for the
>> next blog, so on and so on.
>>
>
> Actually that is not accurate. The first install (http://somesite.com)
>  has prefix 'wp_'. This is the initial installed site which is also the
> database used by the Network. When you enable Multisite you will see all
> the network table have the same base prefix 'wp_', Then when you create a
> new blog (http://site1.simesite.com) it will have the prefix wp_1_, then
> the next (http://site2.somesite.com) will have prefix wp_2_
>
> P-
>
>

From ipstenu at ipstenu.org  Mon Jan 20 20:27:05 2014
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Mon, 20 Jan 2014 12:27:05 -0800
Subject: [wp-hackers] Multisite options
In-Reply-To: <CAHTDVPm=n+O6yfZ0N3-AC0bGKqy5XuHYh0bCKpN2F2xa2Ygd3A@mail.gmail.com>
References: <52DCF419.1040901@wordshell.net>
 <9127769B7A604D7886FA397ABAB029B1@grady-etc.com>
 <CAHTDVPmRHT4jmdjkhkNrBhiJBN_xA03NsG4PDYjYJYZZnh53-g@mail.gmail.com>
 <CAHTDVPm=n+O6yfZ0N3-AC0bGKqy5XuHYh0bCKpN2F2xa2Ygd3A@mail.gmail.com>
Message-ID: <52DD8699.1010107@ipstenu.org>

Paul, WPMU != WordPress Multisite :)

On old WPMU installs (i.e. pre 3.0) you did use the tables wp_1_ for site #1

On current multisite, Site #1 uses wp_ for it's prefix, and site #2 uses 
wp_2_ and so on and so forth.

Mike is correct on that front as well as on the VHOST/MULTISITE define. 
Older installs of WPMU that were upgraded to WordPress Multisite 
generally don't have that MULTISITE define (which is good, because when 
they do, WP bails when it can't find the wp_ tables it wants).

Old upgrades is uglies, man :/

> Paul Menard <mailto:paul at codehooligans.com>
> 20 January, 2014 at 12:13:09PM
> Mike
>
> Actually you do know that 'MULTISITE' is define. When you enable Multisite
> on a regular WordPress install it is one of the new settings you are
> instructed to add to your wp-config.php.
> http://codex.wordpress.org/Create_A_Network see step 4.
>
> MULTISITE is a PHP define you can check using is_defined('MULTISITE').
>
> Paul
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> Paul Menard <mailto:paul at codehooligans.com>
> 20 January, 2014 at 12:10:26PM
>
> Actually that is not accurate. The first install (http://somesite.com) has
> prefix 'wp_'. This is the initial installed site which is also the 
> database
> used by the Network. When you enable Multisite you will see all the 
> network
> table have the same base prefix 'wp_', Then when you create a new blog (
> http://site1.simesite.com) it will have the prefix wp_1_, then the next (
> http://site2.somesite.com) will have prefix wp_2_
>
> P-
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> Mike Burns <mailto:mike at grady-etc.com>
> 20 January, 2014 at 8:07:06AM
> I don't think there is a cleaner way to access that value then 
> `$wpdb->base_prefix`. I wouldn't use `$wpdb->get_blog_prefix()` --- 
> semantically that method is intended to retrieve the prefix for a 
> specific blog, and passing 0 is a hack that won't always work due to 
> the issue you discovered.
>
> The logic involving the `SUBDOMAIN_INSTALL` and `VHOST` constants is 
> for backwards compatibility with pre-WP 3.0 installs.
>
> Prior to WP 3.0 there was a separate code base dedicated to multisite 
> --- WPMU. There was no need for a `MULTISITE` constant as that was the 
> only option you had. Instead, the `VHOST` constant was used to 
> indicate whether or not it was a sub-domain or sub-directory install.
>
> A fresh install of WPMU used `wp_1_` for the first blog prefix. When 
> the single / MU codebases merged in WP 3.0, a fresh install used `wp_` 
> for the first blog prefix. When converted to multisite 
> (http://codex.wordpress.org/Create_A_Network), `wp_2_` was used for 
> the next blog, so on and so on.
>
> In order for WPMU-era installs to continue to work post-3.0, there are 
> several places that use the definition of `MULTISITE` to decide which 
> database prefix / uploads directory to use for the main site.
>
> Best,
> Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> David Anderson <mailto:david at wordshell.net>
> 20 January, 2014 at 2:02:01AM
> Hi,
>
> I am working with code that wants to get the WordPress site's base 
> table prefix on a WPMU install. i.e. The original $table_prefix - not 
> its *current* value (which can be changed due to site switching).
>
> This is available as $wpdb->base_prefix. However, this is only public 
> by default. The class itself does not explicitly mark it as public or 
> private. So, I reasoned that probable $wpdb->get_blog_prefix() is the 
> "proper" way to read it.
>
> The code of that function is as follows:
>
>     function get_blog_prefix( $blog_id = null ) {
>
>         if ( is_multisite() ) {
>
>             if ( null === $blog_id )
>
>                 $blog_id = $this->blogid;
>
>             $blog_id = (int) $blog_id;
>
>             if ( defined( 'MULTISITE' ) && ( 0 == $blog_id || 1 == 
> $blog_id ) )
>
>                 return $this->base_prefix;
>
>             else
>
>                 return $this->base_prefix . $blog_id . '_';
>
>         } else {
>
>             return $this->base_prefix;
>
>         }
>
>     }
>
> It thus looks like $wpdb->get_blog_prefix(0) is the way to get the 
> value I want. However, I am confused about the purpose of the block 
> that begins with if (defined( 'MULTISITE' )).
>
> What is the specific purpose of the defined('MULTISITE') check? One 
> might guess that MULTISITE will always be defined if is_multisite() 
> passed. However, a look at is_multisite() shows that this is not 
> necessarily so:
>
> function is_multisite() {
>
>     if ( defined( 'MULTISITE' ) )
>
>         return MULTISITE;
>
>     if ( defined( 'SUBDOMAIN_INSTALL' ) || defined( 'VHOST' ) || 
> defined( 'SUNRISE' ) )
>
>         return true;
>
>     return false;
>
> }
>
> So, is_multisite() can return true even if MULTISITE is not true; 
> there are the additional situations where any of the 3 constants 
> SUBDOMAIN_INSTALL, VHOST or SUNRISE are defined (regardless of their 
> value).
>
> In that situation, $wpdb->get_blog_prefix() will actually return the 
> value of: $this->base_prefix . '0_'
>
> That doesn't seem like it can be correct. On the other hand, the code 
> seems to be careful to bring about this result. It seems to be 
> deliberately engineered with the possibility that is_multisite() is 
> true but MULTISITE is not true.
>
> Can someone give me a clue with what's going on here? I'm asking 
> because I've just come across a user for whom $wpdb->get_blog_prefix() 
> does actually return $this->base_prefix . '0_' - and he has no tables 
> at all with that prefix. It seems like the wrong result. I've not yet 
> got the information on the value of all those constants from him, but 
> he says it's a WPMU install. I'm looking into whether his install is 
> set up wrongly, but my question to wp-hackers is as to whether the 
> $wpdb->get_blog_prefix() is functioning as intended, or whether this 
> is a subtle bug, or whether I'm simply getting the base prefix in the 
> wrong way and should be using a different strategy.
>
> Many thanks,
> David
>

-- 
Mika A Epstein (aka Ipstenu)
http://ipstenu.org | http://halfelf.org


From mike at grady-etc.com  Mon Jan 20 20:32:07 2014
From: mike at grady-etc.com (Mike Burns)
Date: Mon, 20 Jan 2014 15:32:07 -0500
Subject: [wp-hackers] Multisite options
In-Reply-To: <52DD6AE4.7080806@wordshell.net>
References: <52DCF419.1040901@wordshell.net> <52DD6AE4.7080806@wordshell.net>
Message-ID: <ED744425442A43B2A32C93FBB6C70335@grady-etc.com>

> Now, into the mix, I now have the information from my particular client.
> In his situation, his constants (when read from a plugin page on the  
> network dashboard, on WordPress 3.8) are as follows (this is what he's  
> sent me):
> MULTISITE: (undefined)
> SUBDOMAIN_INSTALL: (undefined)
> VHOST: no
> SUNRISE: on
>  
Those look like typical settings from a WPMU-era wp-config.php.  The logic you mention in `get_blog_prefix()` ensures that the main blog prefix is `wp_1_` for WPMU-era installs and `wp_` for WP 3.0+ installs.  It does not, however, appropriately handle a `$blog_id` of 0 for this configuration as you have discovered.

You can file it as a bug, but I still maintain my original opinion that `get_blog_prefix()` isn?t the method you should be using.  I defer to core devs for an ?officially sanctioned? method for retrieving the base prefix ? I don?t see one.  Seems like a `get_table_prefix()` or `get_base_prefix()` method for the `wpdb` class would be more appropriate.

From david at wordshell.net  Mon Jan 20 21:13:36 2014
From: david at wordshell.net (David Anderson)
Date: Mon, 20 Jan 2014 21:13:36 +0000
Subject: [wp-hackers] Multisite options
In-Reply-To: <mailman.9119.1390249932.20500.wp-hackers@lists.automattic.com>
References: <mailman.9119.1390249932.20500.wp-hackers@lists.automattic.com>
Message-ID: <52DD9180.2000901@wordshell.net>


On 20/01/14 20:32, Mike Burns wrote:
> I don?t think there is a cleaner way to access that value then `$wpdb->base_prefix`.  I wouldn?t use `$wpdb->get_blog_prefix()` ? semantically that method is intended to retrieve the prefix for a specific blog, and passing 0 is a hack that won?t always work due to the issue you discovered.
>
Having looked at and thought about this more, I think you're right. 
Whatever the purpose of the 0 == $blog_id check in get_blog_prefix() was 
when the coder added it, even if it was intended to be a way to get 
$wpdb::base_prefix, this corner-case shows that it doesn't always work.

I've filed this ticket in trac, with a patch whose effect is to make 
wpdb::base_prefix explicitly public, so that coders can know that 
they're safe in relying on it: https://core.trac.wordpress.org/ticket/26887.

David

-- 
UpdraftPlus - best WordPress backups - http://updraftplus.com
WordShell - WordPress fast from the CLI - http://wordshell.net

From halukkaramete at gmail.com  Wed Jan 22 13:18:43 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Wed, 22 Jan 2014 05:18:43 -0800
Subject: [wp-hackers] first available hook which knows about is_archive
	response?
Message-ID: <CAHERW=11wL7UGGg=BARZx3FhYYhNk3RxWLRcVvjwTeT6Fve64w@mail.gmail.com>

When does WP know all about the queried_object? What's earliest hook that
would work with it?

From johnbillion+wp at gmail.com  Wed Jan 22 13:51:56 2014
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Wed, 22 Jan 2014 13:51:56 +0000
Subject: [wp-hackers] first available hook which knows about is_archive
	response?
In-Reply-To: <CAHERW=11wL7UGGg=BARZx3FhYYhNk3RxWLRcVvjwTeT6Fve64w@mail.gmail.com>
References: <CAHERW=11wL7UGGg=BARZx3FhYYhNk3RxWLRcVvjwTeT6Fve64w@mail.gmail.com>
Message-ID: <CAOqAKWA4pKRYgpWDRCHysh09zNL-2_y-xH0i4BT7ESsEC4wnGg@mail.gmail.com>

The "wp" hook is the one you're after. It's the first hook fired after the
main query and therefore the first place you can use the queried object and
the is_*() conditionals.


On 22 January 2014 13:18, Haluk Karamete <halukkaramete at gmail.com> wrote:

> When does WP know all about the queried_object? What's earliest hook that
> would work with it?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From chin.naik26 at gmail.com  Thu Jan 23 03:19:27 2014
From: chin.naik26 at gmail.com (Chinmay Naik)
Date: Thu, 23 Jan 2014 08:49:27 +0530
Subject: [wp-hackers] Help to getting started
Message-ID: <CAGGGaibigH4089aihu-HAkhEVF__j9Ne+SXBzEkO3XXrOJHTtw@mail.gmail.com>

Hi,
I am Chinmay Naik and i have recently come across the WordPress
organisation and the ideas page [1] from Google Summer Of Code org list.

I have previously participated in GSOC-2013 [2] and have written a python
bot[3] to upload gene items on Wikidata. I consider myself good in
programming languages such as C,C++,Java, JavaScript,PHP,HTML,Python.

I wish to contribute to WordPress and get involved. From the Gsoc 2013
ideas list, are there any worth considering? I am trying to start to get
familiar with the codebase and try picking some starter bugs. Any pointers
regarding this would be helpful.

Thanks,
Chinmay


[1]http://codex.wordpress.org/GSoC2013
[2]
http://www.google-melange.com/gsoc/project/google/gsoc2013/chinmay26/24001
[3]https://bitbucket.org/chinmay26/proteinboxbot

From skretch at gmail.com  Thu Jan 23 12:14:04 2014
From: skretch at gmail.com (skretch at gmail.com)
Date: Thu, 23 Jan 2014 19:14:04 +0700
Subject: [wp-hackers] How do you debug a plugin in production when you don't
	have server access?
Message-ID: <C2349CB5-5771-44FC-A0C5-54444D76C97B@gmail.com>

Being a plugin developer, I encounter the following problem very often - sadly I am yet to find a stable resolution.

Every hosting provider has their own PHP build with different extensions and restrictions.
Every now and then a user would send a message saying that my plugin doesn't work for them.
Most of the users are not tech savvy and the most they could do is browse their WordPress Dashboard and perform point and click operations in the UI.
I find that asking for access to user's server is out of their comfort zone and only one every 5 or 6 users is willing to do that.
I added a feedback form which ships with the plugin and when the user submits a feedback (likely about a problem with the plugin) I submit data about their server configuration along with their message to zendesk. The form include a checkbox where I tell the users what is going to happen when they submit this feedback form.
The problem here is that knowing their server configuration is not always enough.
How do you debug your plugins and are there any hidden WordPress gems that could be used by WordPress plugin developers?

From nikolov.tmw at gmail.com  Thu Jan 23 12:57:07 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Thu, 23 Jan 2014 14:57:07 +0200
Subject: [wp-hackers] How do you debug a plugin in production when you
 don't have server access?
In-Reply-To: <C2349CB5-5771-44FC-A0C5-54444D76C97B@gmail.com>
References: <C2349CB5-5771-44FC-A0C5-54444D76C97B@gmail.com>
Message-ID: <CAOwx47c1BetojPiTM0GFGsnYap=9T4uOeGh6pMNftFj2AHpE0w@mail.gmail.com>

Are you also sending a list of the enabled plugins and themes? Sometimes a
conflict between plugins can be the cause for that, so it's good to know
that configuration.

Also depending on your plugin, you might want to attach a var_export() of
your plugin's settings.

These are the only things I can think of, besides information about PHP and
the server - obviously if you rely on a specific extension(like the GD
library), you can also include information about that extension - is it
enabled, which version it is, etc.


On Thu, Jan 23, 2014 at 2:14 PM, <skretch at gmail.com> wrote:

> Being a plugin developer, I encounter the following problem very often -
> sadly I am yet to find a stable resolution.
>
> Every hosting provider has their own PHP build with different extensions
> and restrictions.
> Every now and then a user would send a message saying that my plugin
> doesn't work for them.
> Most of the users are not tech savvy and the most they could do is browse
> their WordPress Dashboard and perform point and click operations in the UI.
> I find that asking for access to user's server is out of their comfort
> zone and only one every 5 or 6 users is willing to do that.
> I added a feedback form which ships with the plugin and when the user
> submits a feedback (likely about a problem with the plugin) I submit data
> about their server configuration along with their message to zendesk. The
> form include a checkbox where I tell the users what is going to happen when
> they submit this feedback form.
> The problem here is that knowing their server configuration is not always
> enough.
> How do you debug your plugins and are there any hidden WordPress gems that
> could be used by WordPress plugin developers?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dyordan1 at ramapo.edu  Thu Jan 23 14:09:02 2014
From: dyordan1 at ramapo.edu (Dobri)
Date: Thu, 23 Jan 2014 09:09:02 -0500
Subject: [wp-hackers] Child categories
Message-ID: <56F9716E-5C95-4955-9587-B5609A3D08CF@ramapo.edu>

Hi all,

Say you have a custom hierarchical taxonomy (think categories). Would there be a way to limit term selection for that taxonomy to only children terms (level 2+)? I'm thinking something better than gray out the checkbox with javascript or filters, that seems like a hacky way to do it.

Any ideas? Thanks!

~Dobri


From nikolov.tmw at gmail.com  Thu Jan 23 14:11:43 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Thu, 23 Jan 2014 16:11:43 +0200
Subject: [wp-hackers] Child categories
In-Reply-To: <56F9716E-5C95-4955-9587-B5609A3D08CF@ramapo.edu>
References: <56F9716E-5C95-4955-9587-B5609A3D08CF@ramapo.edu>
Message-ID: <CAOwx47dxrVxx1E5bEBFGOiSGJvagtCmvfkQtjwN4egQ6mmjmZQ@mail.gmail.com>

Custom meta box? If you don't want to do it with the standard meta box, I
think a custom one is the only other approach. You would obviously need to
make sure the input doesn't include a top-level category in case one of the
users is a smart one.

This would give you the best control over what the user can select and what
not.


On Thu, Jan 23, 2014 at 4:09 PM, Dobri <dyordan1 at ramapo.edu> wrote:

> Hi all,
>
> Say you have a custom hierarchical taxonomy (think categories). Would
> there be a way to limit term selection for that taxonomy to only children
> terms (level 2+)? I'm thinking something better than gray out the checkbox
> with javascript or filters, that seems like a hacky way to do it.
>
> Any ideas? Thanks!
>
> ~Dobri
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dyordan1 at ramapo.edu  Thu Jan 23 14:24:08 2014
From: dyordan1 at ramapo.edu (Dobri)
Date: Thu, 23 Jan 2014 09:24:08 -0500
Subject: [wp-hackers] Child categories
In-Reply-To: <CAOwx47dxrVxx1E5bEBFGOiSGJvagtCmvfkQtjwN4egQ6mmjmZQ@mail.gmail.com>
References: <56F9716E-5C95-4955-9587-B5609A3D08CF@ramapo.edu>
 <CAOwx47dxrVxx1E5bEBFGOiSGJvagtCmvfkQtjwN4egQ6mmjmZQ@mail.gmail.com>
Message-ID: <988E6C81-4129-4524-9DCC-528B75D7608C@ramapo.edu>

Yeah,

Thanks, Nikola. That's kinda what I was trying to avoid but I guess there's no built-in way to do it.

I think I'll look into filtering the standard taxonomy meta box content instead of creating my own so if someone has an idea if there are any hooks for that, that'd be helpful.

~Dobri

On Thu, 23 Jan 2014, at 9:11 AM, Nikola Nikolov wrote:

> Custom meta box? If you don't want to do it with the standard meta box, I
> think a custom one is the only other approach. You would obviously need to
> make sure the input doesn't include a top-level category in case one of the
> users is a smart one.
> 
> This would give you the best control over what the user can select and what
> not.
> 
> 
> On Thu, Jan 23, 2014 at 4:09 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> 
>> Hi all,
>> 
>> Say you have a custom hierarchical taxonomy (think categories). Would
>> there be a way to limit term selection for that taxonomy to only children
>> terms (level 2+)? I'm thinking something better than gray out the checkbox
>> with javascript or filters, that seems like a hacky way to do it.
>> 
>> Any ideas? Thanks!
>> 
>> ~Dobri
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From nikolov.tmw at gmail.com  Thu Jan 23 19:34:44 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Thu, 23 Jan 2014 21:34:44 +0200
Subject: [wp-hackers] What goes in a theme and what goes in a plugin
Message-ID: <CAOwx47cRD8Ng-7S6etfTqYKmf1sq5Ya8Bwrh3AGJdfZCxA4yWw@mail.gmail.com>

When I started working in web development, the work process of the company
I worked at was to put all of the code for a specific website in it's
theme. That means post types, custom fields, theme option interfaces,
shortcodes, etc.

I was recently introduced to the idea that this is definitely not a good
way of creating websites, simply because when the client decides to freshen
up the design of their website, they would either have to rewrite the
templates of the theme, or painfully extract all of the vital parts of the
code out of the theme(or create a child theme, but the themes we were
making were not really meant for using as parent themes).

Instead you should try to leave only the styling to the theme and have
everything else in one(or multiple?) plugins.

I agree with that idea, but my biggest question is how much do you put in
the plugin and how much you leave in the theme. For instance if you want to
display some custom data in the theme(in places different than with
the_content()), but still have templates(so that appearance can be tweaked
from the theme) - do you define some of the functions in the theme, do you
just rely on the plugin being active.

Let me give you an example. You have custom fields(maybe the plugin you
created for the theme is creating them, or it's a third plugin that does
that). You want to display the information from those fields in the theme
and you want to make them easy to access, so you have a function that
returns an array with all of the data. Do I create a function in the theme,
that would pull the data(possibly relying on the plugin by using
function_exists() to prevent fatal errors), do I just use the plugin's
function in the theme?

I would appreciate personal experience, as well as references to articles
on the topic(or a link to a message on the list if it's been discussed
before).

Thanks,
Nikola

From jamie at wunderdojo.com  Thu Jan 23 19:53:36 2014
From: jamie at wunderdojo.com (Jamie Currie)
Date: Thu, 23 Jan 2014 19:53:36 +0000
Subject: [wp-hackers] What goes in a theme and what goes in a plugin
In-Reply-To: <CAOwx47cRD8Ng-7S6etfTqYKmf1sq5Ya8Bwrh3AGJdfZCxA4yWw@mail.gmail.com>
Message-ID: <emf414d401-85f0-4da6-b0af-d06105e6acc9@laguna>

Good question. I've got a few big projects that involve a lot of custom 
data -- from meta fields to multiple custom tables. The main 
functionality is used by a number of different clients, all with 
different themes and different needs for how the data is displayed.

I've opted to go with a hybrid approach. Some data is accessible via 
shortcodes with parameters. A list of accounts that is pulling data from 
a custom table can be used in a page or template via something like 
[LIST-ACCOUNTS type=' ' order=' '] etc. For parameters I try to follow 
WP conventions for functions like get_posts().

Where possible, data is made accessible to the standard WP system. An 
orders system that is using custom tables ultimately triggers 
wp_insert_post() and adds a new instance of a custom post type. Some 
filters allow any action taken on that order in the Dashboard to update 
the custom tables as well. So then a designer can work with them just 
like any other post.


You can ensure that a plugin (or multiple plugins) are active via your 
theme's functions.php file. Check out the TGM Plugin Activation class: 
https://github.com/thomasgriffin/TGM-Plugin-Activation


Jamie Currie
Founder / CEO
wunderdojo
wunderdojo.com
tel: 949-734-0758
1840 Park Newport, #409
Newport Beach, CA 92660
Master web & app developers




------ Original Message ------
From: "Nikola Nikolov" <nikolov.tmw at gmail.com>
To: wp-hackers at lists.automattic.com
Sent: 1/23/2014 11:34:44 AM
Subject: [wp-hackers] What goes in a theme and what goes in a plugin
>When I started working in web development, the work process of the 
>company
>I worked at was to put all of the code for a specific website in it's
>theme. That means post types, custom fields, theme option interfaces,
>shortcodes, etc.
>
>I was recently introduced to the idea that this is definitely not a 
>good
>way of creating websites, simply because when the client decides to 
>freshen
>up the design of their website, they would either have to rewrite the
>templates of the theme, or painfully extract all of the vital parts of 
>the
>code out of the theme(or create a child theme, but the themes we were
>making were not really meant for using as parent themes).
>
>Instead you should try to leave only the styling to the theme and have
>everything else in one(or multiple?) plugins.
>
>I agree with that idea, but my biggest question is how much do you put 
>in
>the plugin and how much you leave in the theme. For instance if you 
>want to
>display some custom data in the theme(in places different than with
>the_content()), but still have templates(so that appearance can be 
>tweaked
>from the theme) - do you define some of the functions in the theme, do 
>you
>just rely on the plugin being active.
>
>Let me give you an example. You have custom fields(maybe the plugin you
>created for the theme is creating them, or it's a third plugin that 
>does
>that). You want to display the information from those fields in the 
>theme
>and you want to make them easy to access, so you have a function that
>returns an array with all of the data. Do I create a function in the 
>theme,
>that would pull the data(possibly relying on the plugin by using
>function_exists() to prevent fatal errors), do I just use the plugin's
>function in the theme?
>
>I would appreciate personal experience, as well as references to 
>articles
>on the topic(or a link to a message on the list if it's been discussed
>before).
>
>Thanks,
>Nikola
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers


From andrew.bartel at gmail.com  Thu Jan 23 19:54:05 2014
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Thu, 23 Jan 2014 11:54:05 -0800
Subject: [wp-hackers] What goes in a theme and what goes in a plugin
In-Reply-To: <CAOwx47cRD8Ng-7S6etfTqYKmf1sq5Ya8Bwrh3AGJdfZCxA4yWw@mail.gmail.com>
References: <CAOwx47cRD8Ng-7S6etfTqYKmf1sq5Ya8Bwrh3AGJdfZCxA4yWw@mail.gmail.com>
Message-ID: <CAJnHr4ivt6dc++KnPVa_-a8_9qe5icf4aJk=jmc72W7C5xRCyA@mail.gmail.com>

I basically follow the theme review ruleset.  If it wouldn't be allowed on
a wp.org theme (cpts for example), I put it in a utilities plugin.  If I
have a significant amount of custom functionality that cannot be fulfilled
by existing plugins, I break it out into a few different files and have on
a couple instances created parent utility classes that I extend.

Google something like functions.php vs plugin and you'll see a myriad of
articles on why.

As for your custom field example, I'd probably have a static function that
I can call.  I prefer to use classes to avoid having to prefix *every* function
and *every *variable, but instead just the class name.  And if you're going
to control the server, specifically the php version, you can use name
spaces too.

-Andrew


On Thu, Jan 23, 2014 at 11:34 AM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> When I started working in web development, the work process of the company
> I worked at was to put all of the code for a specific website in it's
> theme. That means post types, custom fields, theme option interfaces,
> shortcodes, etc.
>
> I was recently introduced to the idea that this is definitely not a good
> way of creating websites, simply because when the client decides to freshen
> up the design of their website, they would either have to rewrite the
> templates of the theme, or painfully extract all of the vital parts of the
> code out of the theme(or create a child theme, but the themes we were
> making were not really meant for using as parent themes).
>
> Instead you should try to leave only the styling to the theme and have
> everything else in one(or multiple?) plugins.
>
> I agree with that idea, but my biggest question is how much do you put in
> the plugin and how much you leave in the theme. For instance if you want to
> display some custom data in the theme(in places different than with
> the_content()), but still have templates(so that appearance can be tweaked
> from the theme) - do you define some of the functions in the theme, do you
> just rely on the plugin being active.
>
> Let me give you an example. You have custom fields(maybe the plugin you
> created for the theme is creating them, or it's a third plugin that does
> that). You want to display the information from those fields in the theme
> and you want to make them easy to access, so you have a function that
> returns an array with all of the data. Do I create a function in the theme,
> that would pull the data(possibly relying on the plugin by using
> function_exists() to prevent fatal errors), do I just use the plugin's
> function in the theme?
>
> I would appreciate personal experience, as well as references to articles
> on the topic(or a link to a message on the list if it's been discussed
> before).
>
> Thanks,
> Nikola
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From frank at bueltge.de  Thu Jan 23 20:00:59 2014
From: frank at bueltge.de (Frank Bueltge)
Date: Thu, 23 Jan 2014 21:00:59 +0100
Subject: [wp-hackers] What goes in a theme and what goes in a plugin
In-Reply-To: <emf414d401-85f0-4da6-b0af-d06105e6acc9@laguna>
References: <CAOwx47cRD8Ng-7S6etfTqYKmf1sq5Ya8Bwrh3AGJdfZCxA4yWw@mail.gmail.com>
 <emf414d401-85f0-4da6-b0af-d06105e6acc9@laguna>
Message-ID: <CAH9UVvFsZcKT4y1PKUzxDN4q+RJj+7nMNqsbiVLofj_uiH2w2g@mail.gmail.com>

This is so much hepful in this question
http://wordpress.stackexchange.com/questions/73031/where-to-put-my-code-plugin-or-functions-php

Best
Frank


On Thu, Jan 23, 2014 at 8:53 PM, Jamie Currie <jamie at wunderdojo.com> wrote:

> Good question. I've got a few big projects that involve a lot of custom
> data -- from meta fields to multiple custom tables. The main functionality
> is used by a number of different clients, all with different themes and
> different needs for how the data is displayed.
>
> I've opted to go with a hybrid approach. Some data is accessible via
> shortcodes with parameters. A list of accounts that is pulling data from a
> custom table can be used in a page or template via something like
> [LIST-ACCOUNTS type=' ' order=' '] etc. For parameters I try to follow WP
> conventions for functions like get_posts().
>
> Where possible, data is made accessible to the standard WP system. An
> orders system that is using custom tables ultimately triggers
> wp_insert_post() and adds a new instance of a custom post type. Some
> filters allow any action taken on that order in the Dashboard to update the
> custom tables as well. So then a designer can work with them just like any
> other post.
>
>
> You can ensure that a plugin (or multiple plugins) are active via your
> theme's functions.php file. Check out the TGM Plugin Activation class:
> https://github.com/thomasgriffin/TGM-Plugin-Activation
>
>
> Jamie Currie
> Founder / CEO
> wunderdojo
> wunderdojo.com
> tel: 949-734-0758
> 1840 Park Newport, #409
> Newport Beach, CA 92660
> Master web & app developers
>
>
>
>
> ------ Original Message ------
> From: "Nikola Nikolov" <nikolov.tmw at gmail.com>
> To: wp-hackers at lists.automattic.com
> Sent: 1/23/2014 11:34:44 AM
> Subject: [wp-hackers] What goes in a theme and what goes in a plugin
>
>> When I started working in web development, the work process of the company
>> I worked at was to put all of the code for a specific website in it's
>> theme. That means post types, custom fields, theme option interfaces,
>> shortcodes, etc.
>>
>> I was recently introduced to the idea that this is definitely not a good
>> way of creating websites, simply because when the client decides to
>> freshen
>> up the design of their website, they would either have to rewrite the
>> templates of the theme, or painfully extract all of the vital parts of the
>> code out of the theme(or create a child theme, but the themes we were
>> making were not really meant for using as parent themes).
>>
>> Instead you should try to leave only the styling to the theme and have
>> everything else in one(or multiple?) plugins.
>>
>> I agree with that idea, but my biggest question is how much do you put in
>> the plugin and how much you leave in the theme. For instance if you want
>> to
>> display some custom data in the theme(in places different than with
>> the_content()), but still have templates(so that appearance can be tweaked
>> from the theme) - do you define some of the functions in the theme, do you
>> just rely on the plugin being active.
>>
>> Let me give you an example. You have custom fields(maybe the plugin you
>> created for the theme is creating them, or it's a third plugin that does
>> that). You want to display the information from those fields in the theme
>> and you want to make them easy to access, so you have a function that
>> returns an array with all of the data. Do I create a function in the
>> theme,
>> that would pull the data(possibly relying on the plugin by using
>> function_exists() to prevent fatal errors), do I just use the plugin's
>> function in the theme?
>>
>> I would appreciate personal experience, as well as references to articles
>> on the topic(or a link to a message on the list if it's been discussed
>> before).
>>
>> Thanks,
>> Nikola
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nikolov.tmw at gmail.com  Thu Jan 23 20:17:55 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Thu, 23 Jan 2014 22:17:55 +0200
Subject: [wp-hackers] What goes in a theme and what goes in a plugin
In-Reply-To: <CAH9UVvFsZcKT4y1PKUzxDN4q+RJj+7nMNqsbiVLofj_uiH2w2g@mail.gmail.com>
References: <CAOwx47cRD8Ng-7S6etfTqYKmf1sq5Ya8Bwrh3AGJdfZCxA4yWw@mail.gmail.com>
 <emf414d401-85f0-4da6-b0af-d06105e6acc9@laguna>
 <CAH9UVvFsZcKT4y1PKUzxDN4q+RJj+7nMNqsbiVLofj_uiH2w2g@mail.gmail.com>
Message-ID: <CAOwx47fRqarf+rA8Z5UJ4yrXd9_LYp=_U=p=dsJVjZeAnY1MBg@mail.gmail.com>

Jamie - yes shortcodes are definitely a good way to go about things. With
the option to use custom templates if the structure is more complicated. I
also like your approach for incorporating custom tables data with the
WordPress posts UI - it's some extra work, but it makes things more
consistent and that's quite important(especially with clients that have a
hard time to do something besides write an article :) )

Andrew - I usually stick to classes as well - it's just much more easy to
use them :) And with a function that returns the global object(the way that
bbPress does it with bbpress()) that gives easy access to class methods.

So, to kind of sum-up things:

 - Bundle the plugin in the theme directory(like under /plugins/plugin.zip)
and use the TGM Plugin Activation in order to display a message to the
user, asking them to activate/install the plugin in order for the site to
function normally. This way even if the user accidentally deletes the
plugin, he'll still be able to restore it.
 - Use plugin defined functionality(obviously not in a way that would break
everything - for instance using a plugin defined function in functions.php
on 'init') wherever is necessary.

Should I still try to avoid fatal errors when the plugin is missing,
despite of the fact that there will be a message asking the user to enable
the required plugin?


On Thu, Jan 23, 2014 at 10:00 PM, Frank Bueltge <frank at bueltge.de> wrote:

> This is so much hepful in this question
>
> http://wordpress.stackexchange.com/questions/73031/where-to-put-my-code-plugin-or-functions-php
>
> Best
> Frank
>
>
> On Thu, Jan 23, 2014 at 8:53 PM, Jamie Currie <jamie at wunderdojo.com>
> wrote:
>
> > Good question. I've got a few big projects that involve a lot of custom
> > data -- from meta fields to multiple custom tables. The main
> functionality
> > is used by a number of different clients, all with different themes and
> > different needs for how the data is displayed.
> >
> > I've opted to go with a hybrid approach. Some data is accessible via
> > shortcodes with parameters. A list of accounts that is pulling data from
> a
> > custom table can be used in a page or template via something like
> > [LIST-ACCOUNTS type=' ' order=' '] etc. For parameters I try to follow WP
> > conventions for functions like get_posts().
> >
> > Where possible, data is made accessible to the standard WP system. An
> > orders system that is using custom tables ultimately triggers
> > wp_insert_post() and adds a new instance of a custom post type. Some
> > filters allow any action taken on that order in the Dashboard to update
> the
> > custom tables as well. So then a designer can work with them just like
> any
> > other post.
> >
> >
> > You can ensure that a plugin (or multiple plugins) are active via your
> > theme's functions.php file. Check out the TGM Plugin Activation class:
> > https://github.com/thomasgriffin/TGM-Plugin-Activation
> >
> >
> > Jamie Currie
> > Founder / CEO
> > wunderdojo
> > wunderdojo.com
> > tel: 949-734-0758
> > 1840 Park Newport, #409
> > Newport Beach, CA 92660
> > Master web & app developers
> >
> >
> >
> >
> > ------ Original Message ------
> > From: "Nikola Nikolov" <nikolov.tmw at gmail.com>
> > To: wp-hackers at lists.automattic.com
> > Sent: 1/23/2014 11:34:44 AM
> > Subject: [wp-hackers] What goes in a theme and what goes in a plugin
> >
> >> When I started working in web development, the work process of the
> company
> >> I worked at was to put all of the code for a specific website in it's
> >> theme. That means post types, custom fields, theme option interfaces,
> >> shortcodes, etc.
> >>
> >> I was recently introduced to the idea that this is definitely not a good
> >> way of creating websites, simply because when the client decides to
> >> freshen
> >> up the design of their website, they would either have to rewrite the
> >> templates of the theme, or painfully extract all of the vital parts of
> the
> >> code out of the theme(or create a child theme, but the themes we were
> >> making were not really meant for using as parent themes).
> >>
> >> Instead you should try to leave only the styling to the theme and have
> >> everything else in one(or multiple?) plugins.
> >>
> >> I agree with that idea, but my biggest question is how much do you put
> in
> >> the plugin and how much you leave in the theme. For instance if you want
> >> to
> >> display some custom data in the theme(in places different than with
> >> the_content()), but still have templates(so that appearance can be
> tweaked
> >> from the theme) - do you define some of the functions in the theme, do
> you
> >> just rely on the plugin being active.
> >>
> >> Let me give you an example. You have custom fields(maybe the plugin you
> >> created for the theme is creating them, or it's a third plugin that does
> >> that). You want to display the information from those fields in the
> theme
> >> and you want to make them easy to access, so you have a function that
> >> returns an array with all of the data. Do I create a function in the
> >> theme,
> >> that would pull the data(possibly relying on the plugin by using
> >> function_exists() to prevent fatal errors), do I just use the plugin's
> >> function in the theme?
> >>
> >> I would appreciate personal experience, as well as references to
> articles
> >> on the topic(or a link to a message on the list if it's been discussed
> >> before).
> >>
> >> Thanks,
> >> Nikola
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mpwalsh8 at gmail.com  Thu Jan 23 20:50:20 2014
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Thu, 23 Jan 2014 15:50:20 -0500
Subject: [wp-hackers] Sending checkbox parameters to a non-PHP script using
 wp_remote_post - revisited
Message-ID: <CAMg3evGWJoP8iki=G59cBuDcdjzy6mfXiDX-6bzmsmajQPPVBw@mail.gmail.com>

About two years ago I came to wp-hackers with a problem I was facing
posting data to Google Forms using wp_remote_post() (see this thread:
http://lists.automattic.com/pipermail/wp-hackers/2012-January/042163.html).

The solution at the end of the thread to manually construct the body
parameters as a string is what I've been doing and has worked very well
until recently when I had a bug report from a user telling me nothing was
being submitted to Google.

In looking into it, the user provided me with a patch which constructed the
body parameter as a named array instead of a string (as recommended in the
Codex).  The problem with this solution is it doesn't work for my
application because it ends up making a call to http_build_query() which in
turn creates the query string for the checkboxes in PHP syntax (as would
expect) where as I need them in Python synxtax for submitting to Google
Docs.

I was able to make my own call to http_build_query() and post-process the
result to fix the chekbox parameters.  Now I am finding that if I submit
the result to Google using the cURL transport it works fine however if I
submit it using the Streams or fsockopen()  transport it fails.

I beauty of the HTTP API was that I shouldn't have to worry about what
transport is available to WordPress but I am finding that not to be the
case.

I am testing my plugin on Windows w/ IIS and PHP 5.3.13 and Ubuntu 3.11
with PHP 5.5.3-1.

I supposed I can test for cURL as warn the user at plugin activation but
I'd rather try and resolve this if possible.

Here is what the HTTP shows me when using the cURL transport.

[23-Jan-2014 19:07:18 UTC] class-http.php::270 -->  WP_HTTP_curl
[23-Jan-2014 19:07:18 UTC] class-http.php::271 -->  Array
(
    [method] => POST
    [timeout] => 0
    [redirection] => 5
    [httpversion] => 1.0
    [user-agent] => WordPress/3.8; http://localhost
    [reject_unsafe_urls] =>
    [blocking] => 1
    [headers] => Array
        (
            [Accept-Encoding] => deflate;q=1.0, compress;q=0.5, gzip;q=0.5
            [Content-Length] => 129
        )

    [cookies] => Array
        (
        )

    [body] =>
entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
    [compress] =>
    [decompress] => 1
    [sslverify] =>
    [sslcertificates] =>
/var/www/wordpress/wp-includes/certificates/ca-bundle.crt
    [stream] =>
    [filename] =>
    [limit_response_size] =>
    [_redirection] => 5
    [ssl] => 1
    [local] =>
)

[23-Jan-2014 19:07:19 UTC] class-http.php::209 --->
 entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit

Here is the same request using the Streams transport:

[23-Jan-2014 19:09:35 UTC] class-http.php::270 -->  WP_HTTP_streams
[23-Jan-2014 19:09:35 UTC] class-http.php::271 -->  Array
(
    [method] => POST
    [timeout] => 0
    [redirection] => 5
    [httpversion] => 1.0
    [user-agent] => WordPress/3.8; http://localhost
    [reject_unsafe_urls] =>
    [blocking] => 1
    [headers] => Array
        (
            [Accept-Encoding] => deflate;q=1.0, compress;q=0.5, gzip;q=0.5
            [Content-Length] => 129
        )

    [cookies] => Array
        (
        )

    [body] =>
entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
    [compress] =>
    [decompress] => 1
    [sslverify] =>
    [sslcertificates] =>
/var/www/wordpress/wp-includes/certificates/ca-bundle.crt
    [stream] =>
    [filename] =>
    [limit_response_size] =>
    [_redirection] => 5
    [ssl] => 1
    [local] =>
)

[23-Jan-2014 19:09:36 UTC] class-http.php::845 --->  Resource id #11
[23-Jan-2014 19:09:36 UTC] class-http.php::846 --->  POST
/forms/d/16Uw3Xw9xX2i08w9FGk0M5GOlR8lsUBglLiUA6cJzy2s/formResponse HTTP/1.0
Host: docs.google.com
User-agent: WordPress/3.8; http://localhost
Accept-Encoding: deflate;q=1.0, compress;q=0.5, gzip;q=0.5
Content-Length: 129

entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
[23-Jan-2014 19:09:36 UTC] class-http.php::209 --->
 entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit

Hopefully someone can see something I am not seeing!

Thanks,

Mike
-- 
Mike Walsh - mpwalsh8 at gmail.com

From otto at ottodestruct.com  Thu Jan 23 21:17:34 2014
From: otto at ottodestruct.com (Otto)
Date: Thu, 23 Jan 2014 15:17:34 -0600
Subject: [wp-hackers] Sending checkbox parameters to a non-PHP script
 using wp_remote_post - revisited
In-Reply-To: <CAMg3evGWJoP8iki=G59cBuDcdjzy6mfXiDX-6bzmsmajQPPVBw@mail.gmail.com>
References: <CAMg3evGWJoP8iki=G59cBuDcdjzy6mfXiDX-6bzmsmajQPPVBw@mail.gmail.com>
Message-ID: <CAD-FghxVM7KFycmwr_UzzQM-+svN3rf1MS7Tzz5JHZ40Z8tAHQ@mail.gmail.com>

When you're sending to an https URL (I noticed that the ssl flag is
on), then the WP_Http_Streams must find that a) the openssl extension
is loaded and b) the openssl_x509_parse function exists. Otherwise it
can't do ssl certificate verification.

So check those, see if the openssl extension is enabled on the system.
Curl doesn't need it because it does its own certificate verification.

To check this in code, you can use the wp_http_supports function. Pass
it the $args array and the URL you're making the call to. If it
returns false, then the system couldn't find a transport to handle
that type of remote call.

-Otto


On Thu, Jan 23, 2014 at 2:50 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:
> About two years ago I came to wp-hackers with a problem I was facing
> posting data to Google Forms using wp_remote_post() (see this thread:
> http://lists.automattic.com/pipermail/wp-hackers/2012-January/042163.html).
>
> The solution at the end of the thread to manually construct the body
> parameters as a string is what I've been doing and has worked very well
> until recently when I had a bug report from a user telling me nothing was
> being submitted to Google.
>
> In looking into it, the user provided me with a patch which constructed the
> body parameter as a named array instead of a string (as recommended in the
> Codex).  The problem with this solution is it doesn't work for my
> application because it ends up making a call to http_build_query() which in
> turn creates the query string for the checkboxes in PHP syntax (as would
> expect) where as I need them in Python synxtax for submitting to Google
> Docs.
>
> I was able to make my own call to http_build_query() and post-process the
> result to fix the chekbox parameters.  Now I am finding that if I submit
> the result to Google using the cURL transport it works fine however if I
> submit it using the Streams or fsockopen()  transport it fails.
>
> I beauty of the HTTP API was that I shouldn't have to worry about what
> transport is available to WordPress but I am finding that not to be the
> case.
>
> I am testing my plugin on Windows w/ IIS and PHP 5.3.13 and Ubuntu 3.11
> with PHP 5.5.3-1.
>
> I supposed I can test for cURL as warn the user at plugin activation but
> I'd rather try and resolve this if possible.
>
> Here is what the HTTP shows me when using the cURL transport.
>
> [23-Jan-2014 19:07:18 UTC] class-http.php::270 -->  WP_HTTP_curl
> [23-Jan-2014 19:07:18 UTC] class-http.php::271 -->  Array
> (
>     [method] => POST
>     [timeout] => 0
>     [redirection] => 5
>     [httpversion] => 1.0
>     [user-agent] => WordPress/3.8; http://localhost
>     [reject_unsafe_urls] =>
>     [blocking] => 1
>     [headers] => Array
>         (
>             [Accept-Encoding] => deflate;q=1.0, compress;q=0.5, gzip;q=0.5
>             [Content-Length] => 129
>         )
>
>     [cookies] => Array
>         (
>         )
>
>     [body] =>
> entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
>     [compress] =>
>     [decompress] => 1
>     [sslverify] =>
>     [sslcertificates] =>
> /var/www/wordpress/wp-includes/certificates/ca-bundle.crt
>     [stream] =>
>     [filename] =>
>     [limit_response_size] =>
>     [_redirection] => 5
>     [ssl] => 1
>     [local] =>
> )
>
> [23-Jan-2014 19:07:19 UTC] class-http.php::209 --->
>  entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
>
> Here is the same request using the Streams transport:
>
> [23-Jan-2014 19:09:35 UTC] class-http.php::270 -->  WP_HTTP_streams
> [23-Jan-2014 19:09:35 UTC] class-http.php::271 -->  Array
> (
>     [method] => POST
>     [timeout] => 0
>     [redirection] => 5
>     [httpversion] => 1.0
>     [user-agent] => WordPress/3.8; http://localhost
>     [reject_unsafe_urls] =>
>     [blocking] => 1
>     [headers] => Array
>         (
>             [Accept-Encoding] => deflate;q=1.0, compress;q=0.5, gzip;q=0.5
>             [Content-Length] => 129
>         )
>
>     [cookies] => Array
>         (
>         )
>
>     [body] =>
> entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
>     [compress] =>
>     [decompress] => 1
>     [sslverify] =>
>     [sslcertificates] =>
> /var/www/wordpress/wp-includes/certificates/ca-bundle.crt
>     [stream] =>
>     [filename] =>
>     [limit_response_size] =>
>     [_redirection] => 5
>     [ssl] => 1
>     [local] =>
> )
>
> [23-Jan-2014 19:09:36 UTC] class-http.php::845 --->  Resource id #11
> [23-Jan-2014 19:09:36 UTC] class-http.php::846 --->  POST
> /forms/d/16Uw3Xw9xX2i08w9FGk0M5GOlR8lsUBglLiUA6cJzy2s/formResponse HTTP/1.0
> Host: docs.google.com
> User-agent: WordPress/3.8; http://localhost
> Accept-Encoding: deflate;q=1.0, compress;q=0.5, gzip;q=0.5
> Content-Length: 129
>
> entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
> [23-Jan-2014 19:09:36 UTC] class-http.php::209 --->
>  entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
>
> Hopefully someone can see something I am not seeing!
>
> Thanks,
>
> Mike
> --
> Mike Walsh - mpwalsh8 at gmail.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From halukkaramete at gmail.com  Fri Jan 24 00:13:21 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Thu, 23 Jan 2014 16:13:21 -0800
Subject: [wp-hackers] is_tax vs is_archive
Message-ID: <CAHERW=0C7+t9LOPrVp1wwZYqR63vRJexY-DUxqXO=-FV9JLXZQ@mail.gmail.com>

is_archive() returns TRUE as expectedly when
is_category(),
is_tag()
or is_date() also returns TRUE.
No issues there...

but if it's a custom taxonomy archive that you are on, ( where is_tax()
would return TRUE ), is_archive() unfortunately returns FALSE.
I don't know why but that's the way it is.

Would the following condition catch the *practical sense of the archive
situation* ?

is_tax() || is_archive()

From mpwalsh8 at gmail.com  Fri Jan 24 02:59:21 2014
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Thu, 23 Jan 2014 21:59:21 -0500
Subject: [wp-hackers] Sending checkbox parameters to a non-PHP script
 using wp_remote_post - revisited
In-Reply-To: <CAD-FghxVM7KFycmwr_UzzQM-+svN3rf1MS7Tzz5JHZ40Z8tAHQ@mail.gmail.com>
References: <CAMg3evGWJoP8iki=G59cBuDcdjzy6mfXiDX-6bzmsmajQPPVBw@mail.gmail.com>
 <CAD-FghxVM7KFycmwr_UzzQM-+svN3rf1MS7Tzz5JHZ40Z8tAHQ@mail.gmail.com>
Message-ID: <CAMg3evEbSGH5V48MS+FxN089M0ywoaxLc-neU32SiGVoNRNB0w@mail.gmail.com>

Being able to test for the transport to work would be wonderful because I
could flag a problem.  Unfortunately, wp_http_transports() is returning a 1
(true) even though it doesn't actually work:

[23-Jan-2014 21:01:51 UTC] wpgform-core.php::1753:  -->
https://docs.google.com/forms/d/16Uw3Xw9xX2i08w9FGk0M5GOlR8lsUBglLiUA6cJzy2s/formResponse
[23-Jan-2014 21:01:51 UTC] wpgform-core.php::1754:  -->  wp_http_supports:
 1

According to phpinfo(), openssl is enabled on this server so the response
from wp_http_supports() is correct.  It just doesn't work.  :-(

Mike


On Thu, Jan 23, 2014 at 4:17 PM, Otto <otto at ottodestruct.com> wrote:

> When you're sending to an https URL (I noticed that the ssl flag is
> on), then the WP_Http_Streams must find that a) the openssl extension
> is loaded and b) the openssl_x509_parse function exists. Otherwise it
> can't do ssl certificate verification.
>
> So check those, see if the openssl extension is enabled on the system.
> Curl doesn't need it because it does its own certificate verification.
>
> To check this in code, you can use the wp_http_supports function. Pass
> it the $args array and the URL you're making the call to. If it
> returns false, then the system couldn't find a transport to handle
> that type of remote call.
>
> -Otto
>
>
> On Thu, Jan 23, 2014 at 2:50 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:
> > About two years ago I came to wp-hackers with a problem I was facing
> > posting data to Google Forms using wp_remote_post() (see this thread:
> >
> http://lists.automattic.com/pipermail/wp-hackers/2012-January/042163.html
> ).
> >
> > The solution at the end of the thread to manually construct the body
> > parameters as a string is what I've been doing and has worked very well
> > until recently when I had a bug report from a user telling me nothing was
> > being submitted to Google.
> >
> > In looking into it, the user provided me with a patch which constructed
> the
> > body parameter as a named array instead of a string (as recommended in
> the
> > Codex).  The problem with this solution is it doesn't work for my
> > application because it ends up making a call to http_build_query() which
> in
> > turn creates the query string for the checkboxes in PHP syntax (as would
> > expect) where as I need them in Python synxtax for submitting to Google
> > Docs.
> >
> > I was able to make my own call to http_build_query() and post-process the
> > result to fix the chekbox parameters.  Now I am finding that if I submit
> > the result to Google using the cURL transport it works fine however if I
> > submit it using the Streams or fsockopen()  transport it fails.
> >
> > I beauty of the HTTP API was that I shouldn't have to worry about what
> > transport is available to WordPress but I am finding that not to be the
> > case.
> >
> > I am testing my plugin on Windows w/ IIS and PHP 5.3.13 and Ubuntu 3.11
> > with PHP 5.5.3-1.
> >
> > I supposed I can test for cURL as warn the user at plugin activation but
> > I'd rather try and resolve this if possible.
> >
> > Here is what the HTTP shows me when using the cURL transport.
> >
> > [23-Jan-2014 19:07:18 UTC] class-http.php::270 -->  WP_HTTP_curl
> > [23-Jan-2014 19:07:18 UTC] class-http.php::271 -->  Array
> > (
> >     [method] => POST
> >     [timeout] => 0
> >     [redirection] => 5
> >     [httpversion] => 1.0
> >     [user-agent] => WordPress/3.8; http://localhost
> >     [reject_unsafe_urls] =>
> >     [blocking] => 1
> >     [headers] => Array
> >         (
> >             [Accept-Encoding] => deflate;q=1.0, compress;q=0.5,
> gzip;q=0.5
> >             [Content-Length] => 129
> >         )
> >
> >     [cookies] => Array
> >         (
> >         )
> >
> >     [body] =>
> >
> entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
> >     [compress] =>
> >     [decompress] => 1
> >     [sslverify] =>
> >     [sslcertificates] =>
> > /var/www/wordpress/wp-includes/certificates/ca-bundle.crt
> >     [stream] =>
> >     [filename] =>
> >     [limit_response_size] =>
> >     [_redirection] => 5
> >     [ssl] => 1
> >     [local] =>
> > )
> >
> > [23-Jan-2014 19:07:19 UTC] class-http.php::209 --->
> >
>  entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
> >
> > Here is the same request using the Streams transport:
> >
> > [23-Jan-2014 19:09:35 UTC] class-http.php::270 -->  WP_HTTP_streams
> > [23-Jan-2014 19:09:35 UTC] class-http.php::271 -->  Array
> > (
> >     [method] => POST
> >     [timeout] => 0
> >     [redirection] => 5
> >     [httpversion] => 1.0
> >     [user-agent] => WordPress/3.8; http://localhost
> >     [reject_unsafe_urls] =>
> >     [blocking] => 1
> >     [headers] => Array
> >         (
> >             [Accept-Encoding] => deflate;q=1.0, compress;q=0.5,
> gzip;q=0.5
> >             [Content-Length] => 129
> >         )
> >
> >     [cookies] => Array
> >         (
> >         )
> >
> >     [body] =>
> >
> entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
> >     [compress] =>
> >     [decompress] => 1
> >     [sslverify] =>
> >     [sslcertificates] =>
> > /var/www/wordpress/wp-includes/certificates/ca-bundle.crt
> >     [stream] =>
> >     [filename] =>
> >     [limit_response_size] =>
> >     [_redirection] => 5
> >     [ssl] => 1
> >     [local] =>
> > )
> >
> > [23-Jan-2014 19:09:36 UTC] class-http.php::845 --->  Resource id #11
> > [23-Jan-2014 19:09:36 UTC] class-http.php::846 --->  POST
> > /forms/d/16Uw3Xw9xX2i08w9FGk0M5GOlR8lsUBglLiUA6cJzy2s/formResponse
> HTTP/1.0
> > Host: docs.google.com
> > User-agent: WordPress/3.8; http://localhost
> > Accept-Encoding: deflate;q=1.0, compress;q=0.5, gzip;q=0.5
> > Content-Length: 129
> >
> >
> entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
> > [23-Jan-2014 19:09:36 UTC] class-http.php::209 --->
> >
>  entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
> >
> > Hopefully someone can see something I am not seeing!
> >
> > Thanks,
> >
> > Mike
> > --
> > Mike Walsh - mpwalsh8 at gmail.com
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From ruwankamadhushan at gmail.com  Fri Jan 24 03:54:07 2014
From: ruwankamadhushan at gmail.com (Ruwanka Madhushan)
Date: Fri, 24 Jan 2014 09:24:07 +0530
Subject: [wp-hackers] Regarding GSoC 2014
Message-ID: <CAJLBdPzsbBvoN9Z8E9c3zHp=xk6gxpzivcXXM+zUzzoyxmP7dQ@mail.gmail.com>

Hello,


I?m Ruwanka an undergraduate from Faculty of Information Technology,
University of Moratuwa, Srilanka.


I am interested very much about the wordpress project and I have worked
with wordpress. I am pretty good in PHP, JavaScript and other web
technologies. I am also a fast learner with web technologies.


So I thought of involve to wordpress project development as much as I can.
I would like to participate in a wordpress project for GSoC 2014.


I would be glad if someone can share me about the plans of wordpress for
GSoC 2014. Also suggest me how should I start the contributing to the
project. I don?t know that I am posting this in correct mailing list, if
not please guide me where should I get answers for my question.


Thanks & Regards,


Ruwanka Madhushan,

Faculty of Information Technology,

University of Moratuwa,

Sri Lanka.

From mpwalsh8 at gmail.com  Fri Jan 24 14:31:44 2014
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Fri, 24 Jan 2014 09:31:44 -0500
Subject: [wp-hackers] Sending checkbox parameters to a non-PHP script
 using wp_remote_post - revisited
In-Reply-To: <CAMg3evEbSGH5V48MS+FxN089M0ywoaxLc-neU32SiGVoNRNB0w@mail.gmail.com>
References: <CAMg3evGWJoP8iki=G59cBuDcdjzy6mfXiDX-6bzmsmajQPPVBw@mail.gmail.com>
 <CAD-FghxVM7KFycmwr_UzzQM-+svN3rf1MS7Tzz5JHZ40Z8tAHQ@mail.gmail.com>
 <CAMg3evEbSGH5V48MS+FxN089M0ywoaxLc-neU32SiGVoNRNB0w@mail.gmail.com>
Message-ID: <CAMg3evEnxF9LdXypHdQyP3UQwD6N7Q6ZG-cLogzBpXFi5or-2g@mail.gmail.com>

To add a little more information, I did some testing with older versions of
WordPress in combination with the http_api_transports to force a specific
transport ('streams', 'fsockopen', and 'curl').  I found the following
results:

3.6.1:  cURL:  Success  fsockopen:  Success  streams:  Success
3.7.1:  cURL:  Success  fsockopen:  Fail  streams:  Fail
3.8.1:  cURL:  Success  fsockopen:  Fail  streams:  Fail

Something clearly changed with the streams and fsockopen transports between
3.6.1 and 3.7.1.  A diff of the class-http.php file shows the change was
substantial as the files are significantly different.

At this point I have concluded that my plugin will only work with sites
where cURL is available.

Mike


On Thu, Jan 23, 2014 at 9:59 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:

> Being able to test for the transport to work would be wonderful because I
> could flag a problem.  Unfortunately, wp_http_transports() is returning a 1
> (true) even though it doesn't actually work:
>
> [23-Jan-2014 21:01:51 UTC] wpgform-core.php::1753:  -->
> https://docs.google.com/forms/d/16Uw3Xw9xX2i08w9FGk0M5GOlR8lsUBglLiUA6cJzy2s/formResponse
> [23-Jan-2014 21:01:51 UTC] wpgform-core.php::1754:  -->  wp_http_supports:
>  1
>
> According to phpinfo(), openssl is enabled on this server so the response
> from wp_http_supports() is correct.  It just doesn't work.  :-(
>
> Mike
>
>
> On Thu, Jan 23, 2014 at 4:17 PM, Otto <otto at ottodestruct.com> wrote:
>
>> When you're sending to an https URL (I noticed that the ssl flag is
>> on), then the WP_Http_Streams must find that a) the openssl extension
>> is loaded and b) the openssl_x509_parse function exists. Otherwise it
>> can't do ssl certificate verification.
>>
>> So check those, see if the openssl extension is enabled on the system.
>> Curl doesn't need it because it does its own certificate verification.
>>
>> To check this in code, you can use the wp_http_supports function. Pass
>> it the $args array and the URL you're making the call to. If it
>> returns false, then the system couldn't find a transport to handle
>> that type of remote call.
>>
>> -Otto
>>
>>
>> On Thu, Jan 23, 2014 at 2:50 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:
>> > About two years ago I came to wp-hackers with a problem I was facing
>> > posting data to Google Forms using wp_remote_post() (see this thread:
>> >
>> http://lists.automattic.com/pipermail/wp-hackers/2012-January/042163.html
>> ).
>> >
>> > The solution at the end of the thread to manually construct the body
>> > parameters as a string is what I've been doing and has worked very well
>> > until recently when I had a bug report from a user telling me nothing
>> was
>> > being submitted to Google.
>> >
>> > In looking into it, the user provided me with a patch which constructed
>> the
>> > body parameter as a named array instead of a string (as recommended in
>> the
>> > Codex).  The problem with this solution is it doesn't work for my
>> > application because it ends up making a call to http_build_query()
>> which in
>> > turn creates the query string for the checkboxes in PHP syntax (as would
>> > expect) where as I need them in Python synxtax for submitting to Google
>> > Docs.
>> >
>> > I was able to make my own call to http_build_query() and post-process
>> the
>> > result to fix the chekbox parameters.  Now I am finding that if I submit
>> > the result to Google using the cURL transport it works fine however if I
>> > submit it using the Streams or fsockopen()  transport it fails.
>> >
>> > I beauty of the HTTP API was that I shouldn't have to worry about what
>> > transport is available to WordPress but I am finding that not to be the
>> > case.
>> >
>> > I am testing my plugin on Windows w/ IIS and PHP 5.3.13 and Ubuntu 3.11
>> > with PHP 5.5.3-1.
>> >
>> > I supposed I can test for cURL as warn the user at plugin activation but
>> > I'd rather try and resolve this if possible.
>> >
>> > Here is what the HTTP shows me when using the cURL transport.
>> >
>> > [23-Jan-2014 19:07:18 UTC] class-http.php::270 -->  WP_HTTP_curl
>> > [23-Jan-2014 19:07:18 UTC] class-http.php::271 -->  Array
>> > (
>> >     [method] => POST
>> >     [timeout] => 0
>> >     [redirection] => 5
>> >     [httpversion] => 1.0
>> >     [user-agent] => WordPress/3.8; http://localhost
>> >     [reject_unsafe_urls] =>
>> >     [blocking] => 1
>> >     [headers] => Array
>> >         (
>> >             [Accept-Encoding] => deflate;q=1.0, compress;q=0.5,
>> gzip;q=0.5
>> >             [Content-Length] => 129
>> >         )
>> >
>> >     [cookies] => Array
>> >         (
>> >         )
>> >
>> >     [body] =>
>> >
>> entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
>> >     [compress] =>
>> >     [decompress] => 1
>> >     [sslverify] =>
>> >     [sslcertificates] =>
>> > /var/www/wordpress/wp-includes/certificates/ca-bundle.crt
>> >     [stream] =>
>> >     [filename] =>
>> >     [limit_response_size] =>
>> >     [_redirection] => 5
>> >     [ssl] => 1
>> >     [local] =>
>> > )
>> >
>> > [23-Jan-2014 19:07:19 UTC] class-http.php::209 --->
>> >
>>  entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
>> >
>> > Here is the same request using the Streams transport:
>> >
>> > [23-Jan-2014 19:09:35 UTC] class-http.php::270 -->  WP_HTTP_streams
>> > [23-Jan-2014 19:09:35 UTC] class-http.php::271 -->  Array
>> > (
>> >     [method] => POST
>> >     [timeout] => 0
>> >     [redirection] => 5
>> >     [httpversion] => 1.0
>> >     [user-agent] => WordPress/3.8; http://localhost
>> >     [reject_unsafe_urls] =>
>> >     [blocking] => 1
>> >     [headers] => Array
>> >         (
>> >             [Accept-Encoding] => deflate;q=1.0, compress;q=0.5,
>> gzip;q=0.5
>> >             [Content-Length] => 129
>> >         )
>> >
>> >     [cookies] => Array
>> >         (
>> >         )
>> >
>> >     [body] =>
>> >
>> entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
>> >     [compress] =>
>> >     [decompress] => 1
>> >     [sslverify] =>
>> >     [sslcertificates] =>
>> > /var/www/wordpress/wp-includes/certificates/ca-bundle.crt
>> >     [stream] =>
>> >     [filename] =>
>> >     [limit_response_size] =>
>> >     [_redirection] => 5
>> >     [ssl] => 1
>> >     [local] =>
>> > )
>> >
>> > [23-Jan-2014 19:09:36 UTC] class-http.php::845 --->  Resource id #11
>> > [23-Jan-2014 19:09:36 UTC] class-http.php::846 --->  POST
>> > /forms/d/16Uw3Xw9xX2i08w9FGk0M5GOlR8lsUBglLiUA6cJzy2s/formResponse
>> HTTP/1.0
>> > Host: docs.google.com
>> > User-agent: WordPress/3.8; http://localhost
>> > Accept-Encoding: deflate;q=1.0, compress;q=0.5, gzip;q=0.5
>> > Content-Length: 129
>> >
>> >
>> entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
>> > [23-Jan-2014 19:09:36 UTC] class-http.php::209 --->
>> >
>>  entry.516744731=C-3&entry.516744731=D-4&entry.1595909349=Mike&draftResponse=%5B%2C%2C%220%22%5D%0D%0A&pageHistory=0&submit=Submit
>> >
>> > Hopefully someone can see something I am not seeing!
>> >
>> > Thanks,
>> >
>> > Mike
>> > --
>> > Mike Walsh - mpwalsh8 at gmail.com
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Mike Walsh - mpwalsh8 at gmail.com
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From jdg at codesymphony.co  Fri Jan 24 15:06:21 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Fri, 24 Jan 2014 10:06:21 -0500
Subject: [wp-hackers] Regarding GSoC 2014
In-Reply-To: <CAJLBdPzsbBvoN9Z8E9c3zHp=xk6gxpzivcXXM+zUzzoyxmP7dQ@mail.gmail.com>
References: <CAJLBdPzsbBvoN9Z8E9c3zHp=xk6gxpzivcXXM+zUzzoyxmP7dQ@mail.gmail.com>
Message-ID: <1994682B-AF6B-49E7-8699-F91D714463D2@codesymphony.co>

Hello and welcome Ruwanka.

For information about contributing to WordPress, see these links:

http://make.wordpress.org/core/handbook/
https://codex.wordpress.org/Contributing_to_WordPress

-J.D.

On Jan 23, 2014, at 10:54 PM, Ruwanka Madhushan <ruwankamadhushan at gmail.com> wrote:

> Hello,
> 
> 
> I?m Ruwanka an undergraduate from Faculty of Information Technology,
> University of Moratuwa, Srilanka.
> 
> 
> I am interested very much about the wordpress project and I have worked
> with wordpress. I am pretty good in PHP, JavaScript and other web
> technologies. I am also a fast learner with web technologies.
> 
> 
> So I thought of involve to wordpress project development as much as I can.
> I would like to participate in a wordpress project for GSoC 2014.
> 
> 
> I would be glad if someone can share me about the plans of wordpress for
> GSoC 2014. Also suggest me how should I start the contributing to the
> project. I don?t know that I am posting this in correct mailing list, if
> not please guide me where should I get answers for my question.
> 
> 
> Thanks & Regards,
> 
> 
> Ruwanka Madhushan,
> 
> Faculty of Information Technology,
> 
> University of Moratuwa,
> 
> Sri Lanka.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jdg at codesymphony.co  Fri Jan 24 15:08:27 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Fri, 24 Jan 2014 10:08:27 -0500
Subject: [wp-hackers] Help to getting started
In-Reply-To: <CAGGGaibigH4089aihu-HAkhEVF__j9Ne+SXBzEkO3XXrOJHTtw@mail.gmail.com>
References: <CAGGGaibigH4089aihu-HAkhEVF__j9Ne+SXBzEkO3XXrOJHTtw@mail.gmail.com>
Message-ID: <69C4B0EE-5C79-4E22-A280-4C6F86AD261D@codesymphony.co>

Hi Chinmay, and welcome.

See my reply to a similar question here: http://lists.automattic.com/pipermail/wp-hackers/2014-January/047694.html

-J.D.

On Jan 22, 2014, at 10:19 PM, Chinmay Naik <chin.naik26 at gmail.com> wrote:

> Hi,
> I am Chinmay Naik and i have recently come across the WordPress
> organisation and the ideas page [1] from Google Summer Of Code org list.
> 
> I have previously participated in GSOC-2013 [2] and have written a python
> bot[3] to upload gene items on Wikidata. I consider myself good in
> programming languages such as C,C++,Java, JavaScript,PHP,HTML,Python.
> 
> I wish to contribute to WordPress and get involved. From the Gsoc 2013
> ideas list, are there any worth considering? I am trying to start to get
> familiar with the codebase and try picking some starter bugs. Any pointers
> regarding this would be helpful.
> 
> Thanks,
> Chinmay
> 
> 
> [1]http://codex.wordpress.org/GSoC2013
> [2]
> http://www.google-melange.com/gsoc/project/google/gsoc2013/chinmay26/24001
> [3]https://bitbucket.org/chinmay26/proteinboxbot
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From ruwankamadhushan at gmail.com  Sat Jan 25 12:14:02 2014
From: ruwankamadhushan at gmail.com (Ruwanka Madhushan)
Date: Sat, 25 Jan 2014 17:44:02 +0530
Subject: [wp-hackers] Regarding GSoC 2014
Message-ID: <CAJLBdPzUaWiTFVPFR+-smMr9iuLgjvfnpYJRCPji17mX9cBn3w@mail.gmail.com>

Thanks Grimes, I'll check out them. Please Guide me if I am having a doubt
or problem.

regards.

-- 
*Ruwanka Madhushan*
*About me <http://about.me/ruwanka>*

*mobile: +94712414331*
*E-mail: ruwankamadhushan at gmail.com <ruwankamadhushan at gmail.com>*
*Blog: ekalawa.blogspot.com <http://ekalawa.blogspot.com>*

<http://lk.linkedin.com/in/ruwanka>  <https://twitter.com/ruwaaz>
<https://www.facebook.com/ruwankamadhushan>

From halukkaramete at gmail.com  Sat Jan 25 18:23:34 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Sat, 25 Jan 2014 10:23:34 -0800
Subject: [wp-hackers] transients and caching on your own
Message-ID: <CAHERW=2Vxn4mO1EffT=Ow9YsDiTXurbY5cgc3RYW7at3RsLYwQ@mail.gmail.com>

Hey Hackers,

Say there is a URL such as http://www.domain.com/pageX.
Say that URL happens to be a magazine/news like URL and has a ton of cross
taxonomy queries and runs over 100 queries blah blah. The point is that the
page is very loaded.

And this page happens to attract a ton of traffic.
To top it off, there are a few more URLs like that throughout the site.

Total cache, super cache is not an option for me. Due to their complex
configs and weirdo behaviors, I confidently say, that they will never be
part of my wordpress work. Their too many features introduce more problems
than they solve. I'm done with them.

So, I am looking for a 80/20 solution that addresses my main need - by
building my own. With the right guidance, this should take less than a day.

I'm not looking for an elaborate solution, like those that have 100+
features, settings and more...

All I want is this:

have a piece of code like this ( the question I will be asking you later is
WHERE THIS CODE SHOULD GO ) and run it in the right hooks.

$cached_urls= array(
	'url_1' => 'num_of_secs_to_cache|my_filter_function_name',
	'http://www.domain.com/pageX' 	=> '60*60|xyx_my_filter',
);
handle_my_cache($cached_urls);

in this array, left side needs no explanation.
right side though has a separator (|) and I use that to visually split the
data (expire time and filter ).

The array is pretty visual and tells what's happening at a glance.

The plan is to store the URLs' corresponding HTMLs (all the way from
<!doctype html> to </html>) in a transient - where the transient ID is made
up on the fly from the URL associated with it. That I can do without a
sweat.

What I'd like to get an insight from a master like you is that where this
piece of code should go?

I need an action hook as early as possible but after wordpress loaded the
transient API, & it knows about the current user login status.

I sense that location would be template_redirect. Am I right?
But on the other hand, at that time, wordpress would have already run the
main query which is no use to me, because I already got the HTML in a
transient (which includes the results of that main query too) So, there is
a waste in there...
So, Is it the "pre_get_posts" hook that I should go after... See my issue?

Once we plug the code in the right place, the "handle_my_cache();" function
to take over and do its thing.

which is mainly,
* check if the current user is logged in, and if so,
exit out and let WordPress run its course.

* check if the transient is alive and if so,
load it and prevent from WordPress taking its further course.

* and if the transient is not alive, let WordPress run its course,
but at the end, let the transient be created for the next time around.

Could you guide me which hook(s) do I need here?Thank you for your time

From nikolov.tmw at gmail.com  Sat Jan 25 18:39:49 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Sat, 25 Jan 2014 20:39:49 +0200
Subject: [wp-hackers] transients and caching on your own
In-Reply-To: <CAHERW=2Vxn4mO1EffT=Ow9YsDiTXurbY5cgc3RYW7at3RsLYwQ@mail.gmail.com>
References: <CAHERW=2Vxn4mO1EffT=Ow9YsDiTXurbY5cgc3RYW7at3RsLYwQ@mail.gmail.com>
Message-ID: <CAOwx47evs1U8diUWMM+3M5bRs+a+zEqnmijdSnM6fFzxb2qDtw@mail.gmail.com>

Hi Haluk,

I believe that the action hook you're looking into would be
wp_loaded<http://codex.wordpress.org/Plugin_API/Action_Reference/wp_loaded>
-
the glance at the Action
Reference<http://codex.wordpress.org/Plugin_API/Action_Reference>
shows
that this is the last hook before the
parse_request<http://codex.wordpress.org/Plugin_API/Action_Reference/parse_request>action
- which happens after WordPress completes it's request
parsing(basically when it goes through the permalinks[if they are enabled]
and finds a matching pattern and fills the query parameters).

That also seems like the place to start your output buffer in order to save
the outputted HTML and there you can add your action that would complete
the output buffering and save it in the transient. I *think* the hook you'd
be looking forward for that would be
shutdown<http://codex.wordpress.org/Plugin_API/Action_Reference/shutdown>
.

Other than that I don't think there's anything else you need(hook-wise).
You might want to do some checks on the output that you're storing just to
make sure it's not incorrect(maybe see if it's empty or not), but I don't
know if it's worth to make more complex checks - like to see if the HTML is
properly formed(so that you're not missing the <html></html> tags for
instance), but if something goes wrong it might be a good idea to have some
kind of a fail-safe.


On Sat, Jan 25, 2014 at 8:23 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> Hey Hackers,
>
> Say there is a URL such as http://www.domain.com/pageX.
> Say that URL happens to be a magazine/news like URL and has a ton of cross
> taxonomy queries and runs over 100 queries blah blah. The point is that the
> page is very loaded.
>
> And this page happens to attract a ton of traffic.
> To top it off, there are a few more URLs like that throughout the site.
>
> Total cache, super cache is not an option for me. Due to their complex
> configs and weirdo behaviors, I confidently say, that they will never be
> part of my wordpress work. Their too many features introduce more problems
> than they solve. I'm done with them.
>
> So, I am looking for a 80/20 solution that addresses my main need - by
> building my own. With the right guidance, this should take less than a day.
>
> I'm not looking for an elaborate solution, like those that have 100+
> features, settings and more...
>
> All I want is this:
>
> have a piece of code like this ( the question I will be asking you later is
> WHERE THIS CODE SHOULD GO ) and run it in the right hooks.
>
> $cached_urls= array(
>         'url_1' => 'num_of_secs_to_cache|my_filter_function_name',
>         'http://www.domain.com/pageX'   => '60*60|xyx_my_filter',
> );
> handle_my_cache($cached_urls);
>
> in this array, left side needs no explanation.
> right side though has a separator (|) and I use that to visually split the
> data (expire time and filter ).
>
> The array is pretty visual and tells what's happening at a glance.
>
> The plan is to store the URLs' corresponding HTMLs (all the way from
> <!doctype html> to </html>) in a transient - where the transient ID is made
> up on the fly from the URL associated with it. That I can do without a
> sweat.
>
> What I'd like to get an insight from a master like you is that where this
> piece of code should go?
>
> I need an action hook as early as possible but after wordpress loaded the
> transient API, & it knows about the current user login status.
>
> I sense that location would be template_redirect. Am I right?
> But on the other hand, at that time, wordpress would have already run the
> main query which is no use to me, because I already got the HTML in a
> transient (which includes the results of that main query too) So, there is
> a waste in there...
> So, Is it the "pre_get_posts" hook that I should go after... See my issue?
>
> Once we plug the code in the right place, the "handle_my_cache();" function
> to take over and do its thing.
>
> which is mainly,
> * check if the current user is logged in, and if so,
> exit out and let WordPress run its course.
>
> * check if the transient is alive and if so,
> load it and prevent from WordPress taking its further course.
>
> * and if the transient is not alive, let WordPress run its course,
> but at the end, let the transient be created for the next time around.
>
> Could you guide me which hook(s) do I need here?Thank you for your time
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Sat Jan 25 19:22:54 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Sat, 25 Jan 2014 11:22:54 -0800
Subject: [wp-hackers] transients and caching on your own
In-Reply-To: <CAOwx47evs1U8diUWMM+3M5bRs+a+zEqnmijdSnM6fFzxb2qDtw@mail.gmail.com>
References: <CAHERW=2Vxn4mO1EffT=Ow9YsDiTXurbY5cgc3RYW7at3RsLYwQ@mail.gmail.com>
 <CAOwx47evs1U8diUWMM+3M5bRs+a+zEqnmijdSnM6fFzxb2qDtw@mail.gmail.com>
Message-ID: <CAHERW=16vaQhATR_23A4N6gosCOajxDLcTNUe9gqdyzMNzxFoA@mail.gmail.com>

Thank you Nikola. What you wrote makes total sense.


On Sat, Jan 25, 2014 at 10:39 AM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> Hi Haluk,
>
> I believe that the action hook you're looking into would be
> wp_loaded<http://codex.wordpress.org/Plugin_API/Action_Reference/wp_loaded
> >
> -
> the glance at the Action
> Reference<http://codex.wordpress.org/Plugin_API/Action_Reference>
> shows
> that this is the last hook before the
> parse_request<
> http://codex.wordpress.org/Plugin_API/Action_Reference/parse_request
> >action
> - which happens after WordPress completes it's request
> parsing(basically when it goes through the permalinks[if they are enabled]
> and finds a matching pattern and fills the query parameters).
>
> That also seems like the place to start your output buffer in order to save
> the outputted HTML and there you can add your action that would complete
> the output buffering and save it in the transient. I *think* the hook you'd
> be looking forward for that would be
> shutdown<http://codex.wordpress.org/Plugin_API/Action_Reference/shutdown>
> .
>
> Other than that I don't think there's anything else you need(hook-wise).
> You might want to do some checks on the output that you're storing just to
> make sure it's not incorrect(maybe see if it's empty or not), but I don't
> know if it's worth to make more complex checks - like to see if the HTML is
> properly formed(so that you're not missing the <html></html> tags for
> instance), but if something goes wrong it might be a good idea to have some
> kind of a fail-safe.
>
>
> On Sat, Jan 25, 2014 at 8:23 PM, Haluk Karamete <halukkaramete at gmail.com
> >wrote:
>
> > Hey Hackers,
> >
> > Say there is a URL such as http://www.domain.com/pageX.
> > Say that URL happens to be a magazine/news like URL and has a ton of
> cross
> > taxonomy queries and runs over 100 queries blah blah. The point is that
> the
> > page is very loaded.
> >
> > And this page happens to attract a ton of traffic.
> > To top it off, there are a few more URLs like that throughout the site.
> >
> > Total cache, super cache is not an option for me. Due to their complex
> > configs and weirdo behaviors, I confidently say, that they will never be
> > part of my wordpress work. Their too many features introduce more
> problems
> > than they solve. I'm done with them.
> >
> > So, I am looking for a 80/20 solution that addresses my main need - by
> > building my own. With the right guidance, this should take less than a
> day.
> >
> > I'm not looking for an elaborate solution, like those that have 100+
> > features, settings and more...
> >
> > All I want is this:
> >
> > have a piece of code like this ( the question I will be asking you later
> is
> > WHERE THIS CODE SHOULD GO ) and run it in the right hooks.
> >
> > $cached_urls= array(
> >         'url_1' => 'num_of_secs_to_cache|my_filter_function_name',
> >         'http://www.domain.com/pageX'   => '60*60|xyx_my_filter',
> > );
> > handle_my_cache($cached_urls);
> >
> > in this array, left side needs no explanation.
> > right side though has a separator (|) and I use that to visually split
> the
> > data (expire time and filter ).
> >
> > The array is pretty visual and tells what's happening at a glance.
> >
> > The plan is to store the URLs' corresponding HTMLs (all the way from
> > <!doctype html> to </html>) in a transient - where the transient ID is
> made
> > up on the fly from the URL associated with it. That I can do without a
> > sweat.
> >
> > What I'd like to get an insight from a master like you is that where this
> > piece of code should go?
> >
> > I need an action hook as early as possible but after wordpress loaded the
> > transient API, & it knows about the current user login status.
> >
> > I sense that location would be template_redirect. Am I right?
> > But on the other hand, at that time, wordpress would have already run the
> > main query which is no use to me, because I already got the HTML in a
> > transient (which includes the results of that main query too) So, there
> is
> > a waste in there...
> > So, Is it the "pre_get_posts" hook that I should go after... See my
> issue?
> >
> > Once we plug the code in the right place, the "handle_my_cache();"
> function
> > to take over and do its thing.
> >
> > which is mainly,
> > * check if the current user is logged in, and if so,
> > exit out and let WordPress run its course.
> >
> > * check if the transient is alive and if so,
> > load it and prevent from WordPress taking its further course.
> >
> > * and if the transient is not alive, let WordPress run its course,
> > but at the end, let the transient be created for the next time around.
> >
> > Could you guide me which hook(s) do I need here?Thank you for your time
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Sat Jan 25 20:09:53 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Sat, 25 Jan 2014 12:09:53 -0800
Subject: [wp-hackers] WordPress.tv | Engage Yourself with WordPress.tv
Message-ID: <CAHERW=1OeGFfCTpoMAHimO8rbpL1kwvpBV5sf-PH2uBqc-WBCA@mail.gmail.com>

Is there away to download these awesome wordpress.TV Videos onto an android
phone.?
For a lot of youtube-based-WordPress Content, this is not an issue.

http://wordpress.tv/

From chris at lod.com  Sat Jan 25 20:38:26 2014
From: chris at lod.com (Chris McCoy)
Date: Sat, 25 Jan 2014 15:38:26 -0500
Subject: [wp-hackers] WordPress.tv | Engage Yourself with WordPress.tv
In-Reply-To: <CAHERW=1OeGFfCTpoMAHimO8rbpL1kwvpBV5sf-PH2uBqc-WBCA@mail.gmail.com>
References: <CAHERW=1OeGFfCTpoMAHimO8rbpL1kwvpBV5sf-PH2uBqc-WBCA@mail.gmail.com>
Message-ID: <CF098ABE.7084%chris@lod.com>

The video url?s are in the html source code, the .mp4 you could just put
that in the browser and download

You would have to find wordpress.tv policy though if they permit you to do
this.

On 1/25/2014, 3:09 PM, "Haluk Karamete" <halukkaramete at gmail.com> wrote:

>Is there away to download these awesome wordpress.TV Videos onto an
>android
>phone.?
>For a lot of youtube-based-WordPress Content, this is not an issue.
>
>http://wordpress.tv/
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers



From chris at lod.com  Sat Jan 25 20:40:49 2014
From: chris at lod.com (Chris McCoy)
Date: Sat, 25 Jan 2014 15:40:49 -0500
Subject: [wp-hackers] WordPress.tv | Engage Yourself with WordPress.tv
In-Reply-To: <CAHERW=1OeGFfCTpoMAHimO8rbpL1kwvpBV5sf-PH2uBqc-WBCA@mail.gmail.com>
References: <CAHERW=1OeGFfCTpoMAHimO8rbpL1kwvpBV5sf-PH2uBqc-WBCA@mail.gmail.com>
Message-ID: <CF098B3D.7087%chris@lod.com>

My bad, there are download links on each page.

http://wordpress.tv/2013/11/19/joe-dolson-accessibility-and-wordpress-devel
oping-for-the-whole-world/


On the right under tags and language, then you will have to add those to
android, not sure how you do that, I know with iphone I would sync them in
itunes.





On 1/25/2014, 3:09 PM, "Haluk Karamete" <halukkaramete at gmail.com> wrote:

>Is there away to download these awesome wordpress.TV Videos onto an
>android
>phone.?
>For a lot of youtube-based-WordPress Content, this is not an issue.
>
>http://wordpress.tv/
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers



From otto at ottodestruct.com  Sat Jan 25 21:23:17 2014
From: otto at ottodestruct.com (Otto)
Date: Sat, 25 Jan 2014 15:23:17 -0600
Subject: [wp-hackers] WordPress.tv | Engage Yourself with WordPress.tv
In-Reply-To: <CF098B3D.7087%chris@lod.com>
References: <CAHERW=1OeGFfCTpoMAHimO8rbpL1kwvpBV5sf-PH2uBqc-WBCA@mail.gmail.com>
 <CF098B3D.7087%chris@lod.com>
Message-ID: <CAD-Fghzi6D4ApEsuVVri0iJ9WmYive5wR+Qo+t7t9B8DU-1h+Q@mail.gmail.com>

On Sat, Jan 25, 2014 at 2:40 PM, Chris McCoy <chris at lod.com> wrote:
> My bad, there are download links on each page.
>
> http://wordpress.tv/2013/11/19/joe-dolson-accessibility-and-wordpress-devel
> oping-for-the-whole-world/
>
> On the right under tags and language, then you will have to add those to
> android, not sure how you do that, I know with iphone I would sync them in
> itunes.


Using Chrome on my Android (Samsung Galaxy S4, GPE), I can long-press
the MP4 link, then select "Save Link" from the popup menu. It will
download the MP4 file and save it. For videos on WordPress.tv, I would
recommend the "Low" link. This works out to around 5-6 MB per minute
of video, roughly. If you want the audio, choose the OGG link instead.

It shows no progress bar for this download, annoyingly, but the file
will later be available under the "Downloads" app. Videos plays fine
using the video player, Chrome, or VLC which I manually installed for
other types of video files. Audio files (OGG) should be natively
supported in Android and thus will play through any audio app.

-Otto

From mario at peshev.net  Sat Jan 25 21:25:29 2014
From: mario at peshev.net (Mario Peshev)
Date: Sat, 25 Jan 2014 23:25:29 +0200
Subject: [wp-hackers] WordPress.tv | Engage Yourself with WordPress.tv
In-Reply-To: <CAD-Fghzi6D4ApEsuVVri0iJ9WmYive5wR+Qo+t7t9B8DU-1h+Q@mail.gmail.com>
References: <CAHERW=1OeGFfCTpoMAHimO8rbpL1kwvpBV5sf-PH2uBqc-WBCA@mail.gmail.com>
 <CF098B3D.7087%chris@lod.com>
 <CAD-Fghzi6D4ApEsuVVri0iJ9WmYive5wR+Qo+t7t9B8DU-1h+Q@mail.gmail.com>
Message-ID: <CAN_8tK7ooiXcQPzWyJ5GQi0tKDKCQtZ-vLVc2-Y=D1vDC=E0+Q@mail.gmail.com>

+1 to what Otto said for Galaxy S3, I've done that a few times in the past
and have several videos on my phone (rewatching while travelling).


Mario Peshev



On Sat, Jan 25, 2014 at 11:23 PM, Otto <otto at ottodestruct.com> wrote:

> On Sat, Jan 25, 2014 at 2:40 PM, Chris McCoy <chris at lod.com> wrote:
> > My bad, there are download links on each page.
> >
> >
> http://wordpress.tv/2013/11/19/joe-dolson-accessibility-and-wordpress-devel
> > oping-for-the-whole-world/
> >
> > On the right under tags and language, then you will have to add those to
> > android, not sure how you do that, I know with iphone I would sync them
> in
> > itunes.
>
>
> Using Chrome on my Android (Samsung Galaxy S4, GPE), I can long-press
> the MP4 link, then select "Save Link" from the popup menu. It will
> download the MP4 file and save it. For videos on WordPress.tv, I would
> recommend the "Low" link. This works out to around 5-6 MB per minute
> of video, roughly. If you want the audio, choose the OGG link instead.
>
> It shows no progress bar for this download, annoyingly, but the file
> will later be available under the "Downloads" app. Videos plays fine
> using the video player, Chrome, or VLC which I manually installed for
> other types of video files. Audio files (OGG) should be natively
> supported in Android and thus will play through any audio app.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mmirbekian at yahoo.com  Sun Jan 26 18:15:46 2014
From: mmirbekian at yahoo.com (Meghedi Mirbekian)
Date: Sun, 26 Jan 2014 10:15:46 -0800 (PST)
Subject: [wp-hackers] Social, psychological, physical solutions
Message-ID: <1390760146.83396.YahooMailNeo@web121201.mail.ne1.yahoo.com>

Hi, for social, psychological, physical solutions please visit my website at: http://livelypsych.com/.

From nikolov.tmw at gmail.com  Mon Jan 27 16:11:08 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Mon, 27 Jan 2014 18:11:08 +0200
Subject: [wp-hackers] How to download multiple language packs via the API
Message-ID: <CAOwx47eYc3auOFcufuKnuMQ_Bw0aayzmF+o=Hoj-rOJLo-TsQQ@mail.gmail.com>

Is it possible yet(or is it coming in 3.9) to automatically download
language files for WP, plugins, themes?

If so, is it possible via filters/action hooks to ask WordPress to download
the language files for multiple languages, instead of just what the
currently active language is?

I'm asking this, because I resumed work on my multilingual plugin. In it
I've used a modified piece of code from qTranslate that would look for
translation files and download them from the WordPress.org repo.
Since I don't really like how it's written, and because of the fact that
this is/will be in core anyway, I don't see why to reinvent the wheel.

Best Regards,
Nikola Nikolov

From wp at andrewnacin.com  Mon Jan 27 16:14:49 2014
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 27 Jan 2014 11:14:49 -0500
Subject: [wp-hackers] How to download multiple language packs via the API
In-Reply-To: <CAOwx47eYc3auOFcufuKnuMQ_Bw0aayzmF+o=Hoj-rOJLo-TsQQ@mail.gmail.com>
References: <CAOwx47eYc3auOFcufuKnuMQ_Bw0aayzmF+o=Hoj-rOJLo-TsQQ@mail.gmail.com>
Message-ID: <CAP29PviUa7gKWyRRE-S8taG_wPw=5rd6yMhm_Rupr=nKrD1XuQ@mail.gmail.com>

Hi Nikola,

Language packs only support a limited number of plugins and themes (more
happening here soon, though), but yes, these filters are in place. See
the plugins_update_check_locales and themes_update_check_locales filters in
wp-includes/update.php.

Nacin


On Mon, Jan 27, 2014 at 11:11 AM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> Is it possible yet(or is it coming in 3.9) to automatically download
> language files for WP, plugins, themes?
>
> If so, is it possible via filters/action hooks to ask WordPress to download
> the language files for multiple languages, instead of just what the
> currently active language is?
>
> I'm asking this, because I resumed work on my multilingual plugin. In it
> I've used a modified piece of code from qTranslate that would look for
> translation files and download them from the WordPress.org repo.
> Since I don't really like how it's written, and because of the fact that
> this is/will be in core anyway, I don't see why to reinvent the wheel.
>
> Best Regards,
> Nikola Nikolov
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nikolov.tmw at gmail.com  Mon Jan 27 16:47:36 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Mon, 27 Jan 2014 18:47:36 +0200
Subject: [wp-hackers] How to download multiple language packs via the API
In-Reply-To: <CAP29PviUa7gKWyRRE-S8taG_wPw=5rd6yMhm_Rupr=nKrD1XuQ@mail.gmail.com>
References: <CAOwx47eYc3auOFcufuKnuMQ_Bw0aayzmF+o=Hoj-rOJLo-TsQQ@mail.gmail.com>
 <CAP29PviUa7gKWyRRE-S8taG_wPw=5rd6yMhm_Rupr=nKrD1XuQ@mail.gmail.com>
Message-ID: <CAOwx47ef-DcZL2LSL9L+i7Qm5HN+qYRE5Qb+Ba3Fscf5n9-cAw@mail.gmail.com>

Well, the version of my code currently only downloads WordPress .mo files
anyway, so actually using the filters would add support for any plugins and
themes that get added :)


On Mon, Jan 27, 2014 at 6:14 PM, Andrew Nacin <wp at andrewnacin.com> wrote:

> Hi Nikola,
>
> Language packs only support a limited number of plugins and themes (more
> happening here soon, though), but yes, these filters are in place. See
> the plugins_update_check_locales and themes_update_check_locales filters in
> wp-includes/update.php.
>
> Nacin
>
>
> On Mon, Jan 27, 2014 at 11:11 AM, Nikola Nikolov <nikolov.tmw at gmail.com
> >wrote:
>
> > Is it possible yet(or is it coming in 3.9) to automatically download
> > language files for WP, plugins, themes?
> >
> > If so, is it possible via filters/action hooks to ask WordPress to
> download
> > the language files for multiple languages, instead of just what the
> > currently active language is?
> >
> > I'm asking this, because I resumed work on my multilingual plugin. In it
> > I've used a modified piece of code from qTranslate that would look for
> > translation files and download them from the WordPress.org repo.
> > Since I don't really like how it's written, and because of the fact that
> > this is/will be in core anyway, I don't see why to reinvent the wheel.
> >
> > Best Regards,
> > Nikola Nikolov
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Mon Jan 27 17:32:02 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Mon, 27 Jan 2014 09:32:02 -0800
Subject: [wp-hackers] Google's insight on Codex Articles
Message-ID: <CAHERW=3SnfCO0ciy--fE9qXyRk_UaUSo-ewRRX2Wwo9YeDSexw@mail.gmail.com>

This is not a WP question but I just got curious this morning.

I was doing a google search on "get_template_part".
First hit ( as the screenshot I attached illustrates ) was showing
Konstantin's codex post and his pic.
Knowing him and how much he loves and knows about get_template_part, I was
not surprised much that I saw him up there.

But what puzzled me was the fact that it was a codex article, but yet his
picture was lined up with that. If it was an article from his web site,
that would not be surprising.

I've examined the codex page, (which is located at
http://codex.wordpress.org/Function_Reference/get_template_part ) and I
could not see his name as the author of this page;
The only section on that page that had to do with his name was the section
titled "External Resources" and that was about it.

Then I dived into the source HTML to see, maybe there is an meta tag or
something of that sort for Google bot to pick that insight. But, that
wasn't the case neither.

And this is happening to many other codex articles.

I'm perplexed at the Google's insight in being able to author's pic pic on
those codex articles - even though the HTML source has nothing to say on
that.

Anyone has an idea?

From wp at andrewnacin.com  Mon Jan 27 17:36:11 2014
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 27 Jan 2014 12:36:11 -0500
Subject: [wp-hackers] Google's insight on Codex Articles
In-Reply-To: <CAHERW=3SnfCO0ciy--fE9qXyRk_UaUSo-ewRRX2Wwo9YeDSexw@mail.gmail.com>
References: <CAHERW=3SnfCO0ciy--fE9qXyRk_UaUSo-ewRRX2Wwo9YeDSexw@mail.gmail.com>
Message-ID: <CAP29PvgriemOXHt0rJ0MYwc+oxgUYzzomT1gW_Uk0WZgZ66wVA@mail.gmail.com>

Yeah, we tracked this down a few months ago for another article. It's the
"by Konstantin Kovshenin" in the "External Resources" section that Google
picks up on.


On Mon, Jan 27, 2014 at 12:32 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> This is not a WP question but I just got curious this morning.
>
> I was doing a google search on "get_template_part".
> First hit ( as the screenshot I attached illustrates ) was showing
> Konstantin's codex post and his pic.
> Knowing him and how much he loves and knows about get_template_part, I was
> not surprised much that I saw him up there.
>
> But what puzzled me was the fact that it was a codex article, but yet his
> picture was lined up with that. If it was an article from his web site,
> that would not be surprising.
>
> I've examined the codex page, (which is located at
> http://codex.wordpress.org/Function_Reference/get_template_part ) and I
> could not see his name as the author of this page;
> The only section on that page that had to do with his name was the section
> titled "External Resources" and that was about it.
>
> Then I dived into the source HTML to see, maybe there is an meta tag or
> something of that sort for Google bot to pick that insight. But, that
> wasn't the case neither.
>
> And this is happening to many other codex articles.
>
> I'm perplexed at the Google's insight in being able to author's pic pic on
> those codex articles - even though the HTML source has nothing to say on
> that.
>
> Anyone has an idea?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Mon Jan 27 17:50:33 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Mon, 27 Jan 2014 09:50:33 -0800
Subject: [wp-hackers] Google's insight on Codex Articles
In-Reply-To: <CAP29PvgriemOXHt0rJ0MYwc+oxgUYzzomT1gW_Uk0WZgZ66wVA@mail.gmail.com>
References: <CAHERW=3SnfCO0ciy--fE9qXyRk_UaUSo-ewRRX2Wwo9YeDSexw@mail.gmail.com>
 <CAP29PvgriemOXHt0rJ0MYwc+oxgUYzzomT1gW_Uk0WZgZ66wVA@mail.gmail.com>
Message-ID: <CAHERW=0Rt6D37MeUopWMgjJs5hfgCoyzBTTpd6i9P-uZkYwY1g@mail.gmail.com>

Was that codex article written by him to begin with?
I think those articles do not belong to an individual as it's the result of
an collaborated effort.
The fact that Google makes it appear like, the article is written by that
person is not only misleading but also prone to errors. I'm surprised that
this is really what's happening here.

Here is another article but this one does NOT show his picture even though
his name also appears under the external resources. Go figure! :)

https://www.google.com/search?num=100&q=settings+api&oq=settings+&gs_l=serp.3.0.35i39j0i20j0j0i20j0l6.127824.128865.0.130365.9.8.0.0.0.0.198.926.2j6.8.0....0...1c.1.32.serp..5.4.319.FH4Chodd4Xw

http://codex.wordpress.org/Settings_API






On Mon, Jan 27, 2014 at 9:36 AM, Andrew Nacin <wp at andrewnacin.com> wrote:

> Yeah, we tracked this down a few months ago for another article. It's the
> "by Konstantin Kovshenin" in the "External Resources" section that Google
> picks up on.
>
>
> On Mon, Jan 27, 2014 at 12:32 PM, Haluk Karamete <halukkaramete at gmail.com
> >wrote:
>
> > This is not a WP question but I just got curious this morning.
> >
> > I was doing a google search on "get_template_part".
> > First hit ( as the screenshot I attached illustrates ) was showing
> > Konstantin's codex post and his pic.
> > Knowing him and how much he loves and knows about get_template_part, I
> was
> > not surprised much that I saw him up there.
> >
> > But what puzzled me was the fact that it was a codex article, but yet his
> > picture was lined up with that. If it was an article from his web site,
> > that would not be surprising.
> >
> > I've examined the codex page, (which is located at
> > http://codex.wordpress.org/Function_Reference/get_template_part ) and I
> > could not see his name as the author of this page;
> > The only section on that page that had to do with his name was the
> section
> > titled "External Resources" and that was about it.
> >
> > Then I dived into the source HTML to see, maybe there is an meta tag or
> > something of that sort for Google bot to pick that insight. But, that
> > wasn't the case neither.
> >
> > And this is happening to many other codex articles.
> >
> > I'm perplexed at the Google's insight in being able to author's pic pic
> on
> > those codex articles - even though the HTML source has nothing to say on
> > that.
> >
> > Anyone has an idea?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at andrewnacin.com  Mon Jan 27 17:55:30 2014
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 27 Jan 2014 12:55:30 -0500
Subject: [wp-hackers] Google's insight on Codex Articles
In-Reply-To: <CAHERW=0Rt6D37MeUopWMgjJs5hfgCoyzBTTpd6i9P-uZkYwY1g@mail.gmail.com>
References: <CAHERW=3SnfCO0ciy--fE9qXyRk_UaUSo-ewRRX2Wwo9YeDSexw@mail.gmail.com>
 <CAP29PvgriemOXHt0rJ0MYwc+oxgUYzzomT1gW_Uk0WZgZ66wVA@mail.gmail.com>
 <CAHERW=0Rt6D37MeUopWMgjJs5hfgCoyzBTTpd6i9P-uZkYwY1g@mail.gmail.com>
Message-ID: <CAP29PvgFoTNSdEC59-szDdDViHFk61X2M1YMotyAM6rJzSNkVg@mail.gmail.com>

On Mon, Jan 27, 2014 at 12:50 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> Was that codex article written by him to begin with?
>

I doubt it.


> I think those articles do not belong to an individual as it's the result of
> an collaborated effort.
>

Of course. We agree. I'm sure Konstantin does too.


> The fact that Google makes it appear like, the article is written by that
> person is not only misleading but also prone to errors. I'm surprised that
> this is really what's happening here.
>

This is what is happening here.

http://codex.wordpress.org/Settings_API


Probably because Google would have to list 11 people. :-)

From otto at ottodestruct.com  Mon Jan 27 17:56:19 2014
From: otto at ottodestruct.com (Otto)
Date: Mon, 27 Jan 2014 11:56:19 -0600
Subject: [wp-hackers] Google's insight on Codex Articles
In-Reply-To: <CAHERW=0Rt6D37MeUopWMgjJs5hfgCoyzBTTpd6i9P-uZkYwY1g@mail.gmail.com>
References: <CAHERW=3SnfCO0ciy--fE9qXyRk_UaUSo-ewRRX2Wwo9YeDSexw@mail.gmail.com>
 <CAP29PvgriemOXHt0rJ0MYwc+oxgUYzzomT1gW_Uk0WZgZ66wVA@mail.gmail.com>
 <CAHERW=0Rt6D37MeUopWMgjJs5hfgCoyzBTTpd6i9P-uZkYwY1g@mail.gmail.com>
Message-ID: <CAD-Fghx=ZdQ7O2t2tnxzrAgB5fL=aA38PgR8RS_Q4O5=nz22gQ@mail.gmail.com>

We did some testing in a case where Mark Jaiquith's authorship info
was showing up on an article.

It's definitely the "by name" line at the end of the article that
causes it to happen. In cases where there is more than one byline,
Google isn't as likely to make the bad assumption.

As yet, we do not have a good solution for this, but it hasn't really
been a pressing matter.

-Otto


On Mon, Jan 27, 2014 at 11:50 AM, Haluk Karamete
<halukkaramete at gmail.com> wrote:
> Was that codex article written by him to begin with?
> I think those articles do not belong to an individual as it's the result of
> an collaborated effort.
> The fact that Google makes it appear like, the article is written by that
> person is not only misleading but also prone to errors. I'm surprised that
> this is really what's happening here.
>
> Here is another article but this one does NOT show his picture even though
> his name also appears under the external resources. Go figure! :)
>
> https://www.google.com/search?num=100&q=settings+api&oq=settings+&gs_l=serp.3.0.35i39j0i20j0j0i20j0l6.127824.128865.0.130365.9.8.0.0.0.0.198.926.2j6.8.0....0...1c.1.32.serp..5.4.319.FH4Chodd4Xw
>
> http://codex.wordpress.org/Settings_API
>
>
>
>
>
>
> On Mon, Jan 27, 2014 at 9:36 AM, Andrew Nacin <wp at andrewnacin.com> wrote:
>
>> Yeah, we tracked this down a few months ago for another article. It's the
>> "by Konstantin Kovshenin" in the "External Resources" section that Google
>> picks up on.
>>
>>
>> On Mon, Jan 27, 2014 at 12:32 PM, Haluk Karamete <halukkaramete at gmail.com
>> >wrote:
>>
>> > This is not a WP question but I just got curious this morning.
>> >
>> > I was doing a google search on "get_template_part".
>> > First hit ( as the screenshot I attached illustrates ) was showing
>> > Konstantin's codex post and his pic.
>> > Knowing him and how much he loves and knows about get_template_part, I
>> was
>> > not surprised much that I saw him up there.
>> >
>> > But what puzzled me was the fact that it was a codex article, but yet his
>> > picture was lined up with that. If it was an article from his web site,
>> > that would not be surprising.
>> >
>> > I've examined the codex page, (which is located at
>> > http://codex.wordpress.org/Function_Reference/get_template_part ) and I
>> > could not see his name as the author of this page;
>> > The only section on that page that had to do with his name was the
>> section
>> > titled "External Resources" and that was about it.
>> >
>> > Then I dived into the source HTML to see, maybe there is an meta tag or
>> > something of that sort for Google bot to pick that insight. But, that
>> > wasn't the case neither.
>> >
>> > And this is happening to many other codex articles.
>> >
>> > I'm perplexed at the Google's insight in being able to author's pic pic
>> on
>> > those codex articles - even though the HTML source has nothing to say on
>> > that.
>> >
>> > Anyone has an idea?
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From nikolov.tmw at gmail.com  Mon Jan 27 18:08:04 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Mon, 27 Jan 2014 20:08:04 +0200
Subject: [wp-hackers] How to download multiple language packs via the API
In-Reply-To: <CAOwx47ef-DcZL2LSL9L+i7Qm5HN+qYRE5Qb+Ba3Fscf5n9-cAw@mail.gmail.com>
References: <CAOwx47eYc3auOFcufuKnuMQ_Bw0aayzmF+o=Hoj-rOJLo-TsQQ@mail.gmail.com>
 <CAP29PviUa7gKWyRRE-S8taG_wPw=5rd6yMhm_Rupr=nKrD1XuQ@mail.gmail.com>
 <CAOwx47ef-DcZL2LSL9L+i7Qm5HN+qYRE5Qb+Ba3Fscf5n9-cAw@mail.gmail.com>
Message-ID: <CAOwx47f9W0UKbG6g6b-5u+J-bSQh8yXz1wTgwQ80doGNRvBJgQ@mail.gmail.com>

Hmmm - what about core translation files? I looked in
/wp-includes/update.php, /wp-admin/includes/update-core.php,
/wp-admin/includes/class-wp-upgrader.php, /wp-admin/update-core.php but
couldn't find any filters. It seems like the locale for core files is only
used in find_core_update() and that doesn't have any filters.

If it's currently not part of the design, do you have any ideas on how to
use the WordPress.org API in order to check for updated versions of the
translation files and download them?


On Mon, Jan 27, 2014 at 6:47 PM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> Well, the version of my code currently only downloads WordPress .mo files
> anyway, so actually using the filters would add support for any plugins and
> themes that get added :)
>
>
> On Mon, Jan 27, 2014 at 6:14 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
>
>> Hi Nikola,
>>
>> Language packs only support a limited number of plugins and themes (more
>> happening here soon, though), but yes, these filters are in place. See
>> the plugins_update_check_locales and themes_update_check_locales filters
>> in
>> wp-includes/update.php.
>>
>> Nacin
>>
>>
>> On Mon, Jan 27, 2014 at 11:11 AM, Nikola Nikolov <nikolov.tmw at gmail.com
>> >wrote:
>>
>> > Is it possible yet(or is it coming in 3.9) to automatically download
>> > language files for WP, plugins, themes?
>> >
>> > If so, is it possible via filters/action hooks to ask WordPress to
>> download
>> > the language files for multiple languages, instead of just what the
>> > currently active language is?
>> >
>> > I'm asking this, because I resumed work on my multilingual plugin. In it
>> > I've used a modified piece of code from qTranslate that would look for
>> > translation files and download them from the WordPress.org repo.
>> > Since I don't really like how it's written, and because of the fact that
>> > this is/will be in core anyway, I don't see why to reinvent the wheel.
>> >
>> > Best Regards,
>> > Nikola Nikolov
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From halukkaramete at gmail.com  Mon Jan 27 18:08:06 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Mon, 27 Jan 2014 10:08:06 -0800
Subject: [wp-hackers] Google's insight on Codex Articles
In-Reply-To: <CAD-Fghx=ZdQ7O2t2tnxzrAgB5fL=aA38PgR8RS_Q4O5=nz22gQ@mail.gmail.com>
References: <CAHERW=3SnfCO0ciy--fE9qXyRk_UaUSo-ewRRX2Wwo9YeDSexw@mail.gmail.com>
 <CAP29PvgriemOXHt0rJ0MYwc+oxgUYzzomT1gW_Uk0WZgZ66wVA@mail.gmail.com>
 <CAHERW=0Rt6D37MeUopWMgjJs5hfgCoyzBTTpd6i9P-uZkYwY1g@mail.gmail.com>
 <CAD-Fghx=ZdQ7O2t2tnxzrAgB5fL=aA38PgR8RS_Q4O5=nz22gQ@mail.gmail.com>
Message-ID: <CAHERW=3NhpMTKDD_8rTDBZHehauHqu9BURseVetHTAtsdoPgyA@mail.gmail.com>

I'm totally fine with whoever pics show up there. Plus I always admired his
hair style. :)

I was just trying to get to the bottom of how the heck Google pulls that
relationship off without a meta tag.




On Mon, Jan 27, 2014 at 9:56 AM, Otto <otto at ottodestruct.com> wrote:

> We did some testing in a case where Mark Jaiquith's authorship info
> was showing up on an article.
>
> It's definitely the "by name" line at the end of the article that
> causes it to happen. In cases where there is more than one byline,
> Google isn't as likely to make the bad assumption.
>
> As yet, we do not have a good solution for this, but it hasn't really
> been a pressing matter.
>
> -Otto
>
>
> On Mon, Jan 27, 2014 at 11:50 AM, Haluk Karamete
> <halukkaramete at gmail.com> wrote:
> > Was that codex article written by him to begin with?
> > I think those articles do not belong to an individual as it's the result
> of
> > an collaborated effort.
> > The fact that Google makes it appear like, the article is written by that
> > person is not only misleading but also prone to errors. I'm surprised
> that
> > this is really what's happening here.
> >
> > Here is another article but this one does NOT show his picture even
> though
> > his name also appears under the external resources. Go figure! :)
> >
> >
> https://www.google.com/search?num=100&q=settings+api&oq=settings+&gs_l=serp.3.0.35i39j0i20j0j0i20j0l6.127824.128865.0.130365.9.8.0.0.0.0.198.926.2j6.8.0....0...1c.1.32.serp..5.4.319.FH4Chodd4Xw
> >
> > http://codex.wordpress.org/Settings_API
> >
> >
> >
> >
> >
> >
> > On Mon, Jan 27, 2014 at 9:36 AM, Andrew Nacin <wp at andrewnacin.com>
> wrote:
> >
> >> Yeah, we tracked this down a few months ago for another article. It's
> the
> >> "by Konstantin Kovshenin" in the "External Resources" section that
> Google
> >> picks up on.
> >>
> >>
> >> On Mon, Jan 27, 2014 at 12:32 PM, Haluk Karamete <
> halukkaramete at gmail.com
> >> >wrote:
> >>
> >> > This is not a WP question but I just got curious this morning.
> >> >
> >> > I was doing a google search on "get_template_part".
> >> > First hit ( as the screenshot I attached illustrates ) was showing
> >> > Konstantin's codex post and his pic.
> >> > Knowing him and how much he loves and knows about get_template_part, I
> >> was
> >> > not surprised much that I saw him up there.
> >> >
> >> > But what puzzled me was the fact that it was a codex article, but yet
> his
> >> > picture was lined up with that. If it was an article from his web
> site,
> >> > that would not be surprising.
> >> >
> >> > I've examined the codex page, (which is located at
> >> > http://codex.wordpress.org/Function_Reference/get_template_part )
> and I
> >> > could not see his name as the author of this page;
> >> > The only section on that page that had to do with his name was the
> >> section
> >> > titled "External Resources" and that was about it.
> >> >
> >> > Then I dived into the source HTML to see, maybe there is an meta tag
> or
> >> > something of that sort for Google bot to pick that insight. But, that
> >> > wasn't the case neither.
> >> >
> >> > And this is happening to many other codex articles.
> >> >
> >> > I'm perplexed at the Google's insight in being able to author's pic
> pic
> >> on
> >> > those codex articles - even though the HTML source has nothing to say
> on
> >> > that.
> >> >
> >> > Anyone has an idea?
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> >
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Tue Jan 28 22:39:35 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Tue, 28 Jan 2014 14:39:35 -0800
Subject: [wp-hackers] having two installs getting confused...
Message-ID: <CAHERW=1rNpNLxBpMeVVi9oD5WfcwtBpwU0mubf3bkMxeMpipTg@mail.gmail.com>

www.domain.com is where the main WordPress site is installed.
(we installed the main site on the web root)

then, we have a  2nd WordPress site which we installed under a directory
right under the web root, as www.domain.com/site2 -

It is obvious that this wasn't gonna work.

As  the main rewrite rules dictate, www.domain.com/site2 would be
considered as part of the main install and main one will look for a page
titled "site2".

what would be the way out of this?

From otto at ottodestruct.com  Tue Jan 28 22:52:45 2014
From: otto at ottodestruct.com (Otto)
Date: Tue, 28 Jan 2014 16:52:45 -0600
Subject: [wp-hackers] having two installs getting confused...
In-Reply-To: <CAHERW=1rNpNLxBpMeVVi9oD5WfcwtBpwU0mubf3bkMxeMpipTg@mail.gmail.com>
References: <CAHERW=1rNpNLxBpMeVVi9oD5WfcwtBpwU0mubf3bkMxeMpipTg@mail.gmail.com>
Message-ID: <CAD-Fghw6MTR9HPxv30n-H8jVcYBcQ5Jr8ZYh1iMUWuoQz9zWow@mail.gmail.com>

That should work fine with a standard Apache setup and the standard
.htaccess rules.

If you have some other rules causing things to mess up, well, that's
different. :)

-Otto



On Tue, Jan 28, 2014 at 4:39 PM, Haluk Karamete <halukkaramete at gmail.com> wrote:
> www.domain.com is where the main WordPress site is installed.
> (we installed the main site on the web root)
>
> then, we have a  2nd WordPress site which we installed under a directory
> right under the web root, as www.domain.com/site2 -
>
> It is obvious that this wasn't gonna work.
>
> As  the main rewrite rules dictate, www.domain.com/site2 would be
> considered as part of the main install and main one will look for a page
> titled "site2".
>
> what would be the way out of this?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From halukkaramete at gmail.com  Tue Jan 28 22:54:56 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Tue, 28 Jan 2014 14:54:56 -0800
Subject: [wp-hackers] having two installs getting confused...
In-Reply-To: <CAD-Fghw6MTR9HPxv30n-H8jVcYBcQ5Jr8ZYh1iMUWuoQz9zWow@mail.gmail.com>
References: <CAHERW=1rNpNLxBpMeVVi9oD5WfcwtBpwU0mubf3bkMxeMpipTg@mail.gmail.com>
 <CAD-Fghw6MTR9HPxv30n-H8jVcYBcQ5Jr8ZYh1iMUWuoQz9zWow@mail.gmail.com>
Message-ID: <CAHERW=1a5Qp729Tjc89dSSyUq=H4TZ=jSQnfJpEYG-++5=yYWw@mail.gmail.com>

We suffer here from the legacy stuff and we have to use IIS.
I am sorry that I forgot the mention the fact that this wasn't Apache.



On Tue, Jan 28, 2014 at 2:52 PM, Otto <otto at ottodestruct.com> wrote:

> That should work fine with a standard Apache setup and the standard
> .htaccess rules.
>
> If you have some other rules causing things to mess up, well, that's
> different. :)
>
> -Otto
>
>
>
> On Tue, Jan 28, 2014 at 4:39 PM, Haluk Karamete <halukkaramete at gmail.com>
> wrote:
> > www.domain.com is where the main WordPress site is installed.
> > (we installed the main site on the web root)
> >
> > then, we have a  2nd WordPress site which we installed under a directory
> > right under the web root, as www.domain.com/site2 -
> >
> > It is obvious that this wasn't gonna work.
> >
> > As  the main rewrite rules dictate, www.domain.com/site2 would be
> > considered as part of the main install and main one will look for a page
> > titled "site2".
> >
> > what would be the way out of this?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From needle at haystack.co.uk  Wed Jan 29 10:22:41 2014
From: needle at haystack.co.uk (Christian Wach)
Date: Wed, 29 Jan 2014 10:22:41 +0000
Subject: [wp-hackers] having two installs getting confused...
In-Reply-To: <CAHERW=1rNpNLxBpMeVVi9oD5WfcwtBpwU0mubf3bkMxeMpipTg@mail.gmail.com>
References: <CAHERW=1rNpNLxBpMeVVi9oD5WfcwtBpwU0mubf3bkMxeMpipTg@mail.gmail.com>
Message-ID: <9B12A364-0F92-450C-B311-FB9A52AACD50@haystack.co.uk>


On 28 Jan 2014, at 22:39, Haluk Karamete <halukkaramete at gmail.com> wrote:

> www.domain.com is where the main WordPress site is installed.
> (we installed the main site on the web root)
> 
> then, we have a  2nd WordPress site which we installed under a directory
> right under the web root, as www.domain.com/site2 -
> 
> It is obvious that this wasn't gonna work.
> 
> As  the main rewrite rules dictate, www.domain.com/site2 would be
> considered as part of the main install and main one will look for a page
> titled "site2".
> 
> what would be the way out of this?

A subfolders multisite install has this structure out-of-the-box.

Cheers,

Christian



From nikolov.tmw at gmail.com  Wed Jan 29 11:17:25 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 29 Jan 2014 13:17:25 +0200
Subject: [wp-hackers] How to download multiple language packs via the API
In-Reply-To: <CAOwx47f9W0UKbG6g6b-5u+J-bSQh8yXz1wTgwQ80doGNRvBJgQ@mail.gmail.com>
References: <CAOwx47eYc3auOFcufuKnuMQ_Bw0aayzmF+o=Hoj-rOJLo-TsQQ@mail.gmail.com>
 <CAP29PviUa7gKWyRRE-S8taG_wPw=5rd6yMhm_Rupr=nKrD1XuQ@mail.gmail.com>
 <CAOwx47ef-DcZL2LSL9L+i7Qm5HN+qYRE5Qb+Ba3Fscf5n9-cAw@mail.gmail.com>
 <CAOwx47f9W0UKbG6g6b-5u+J-bSQh8yXz1wTgwQ80doGNRvBJgQ@mail.gmail.com>
Message-ID: <CAOwx47ec7BuT1=fbWSN-iApSketxRN8aFJ4VM16Qv-2r8rYFrw@mail.gmail.com>

Sorry for bumping that, but does no one have any idea if it's possible to
use the API to download core language packs for multiple languages? If you
look at my previous email you'd see where I looked for any clues about
that, but couldn't find any.

If that's not possible, is there a way to use the WordPress.org API in a
way that would give me the URL's for core language packs, because right now
I'm basically trying 8 different URL's at
svn.automattic.com/wordpress-i18n/( which I don't even know if it's
the right place to look for the language
packs ) in order to find a matching language pack. Actually I'm trying 40
URL's per language - since I have 8 base URL's and then I have 5 language
packs that I'm trying to find( {$locale}.mo, admin-network-{$locale}.mo,
continents-cities-{$locale}.mo, ms-{$locale}.mo, admin-{$locale}.mo ) - and
that is extremely inefficient as you can guess.

Thanks,
Nikola


On Mon, Jan 27, 2014 at 8:08 PM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> Hmmm - what about core translation files? I looked in
> /wp-includes/update.php, /wp-admin/includes/update-core.php,
> /wp-admin/includes/class-wp-upgrader.php, /wp-admin/update-core.php but
> couldn't find any filters. It seems like the locale for core files is only
> used in find_core_update() and that doesn't have any filters.
>
> If it's currently not part of the design, do you have any ideas on how to
> use the WordPress.org API in order to check for updated versions of the
> translation files and download them?
>
>
> On Mon, Jan 27, 2014 at 6:47 PM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:
>
>> Well, the version of my code currently only downloads WordPress .mo files
>> anyway, so actually using the filters would add support for any plugins and
>> themes that get added :)
>>
>>
>> On Mon, Jan 27, 2014 at 6:14 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
>>
>>> Hi Nikola,
>>>
>>> Language packs only support a limited number of plugins and themes (more
>>> happening here soon, though), but yes, these filters are in place. See
>>> the plugins_update_check_locales and themes_update_check_locales filters
>>> in
>>> wp-includes/update.php.
>>>
>>> Nacin
>>>
>>>
>>> On Mon, Jan 27, 2014 at 11:11 AM, Nikola Nikolov <nikolov.tmw at gmail.com
>>> >wrote:
>>>
>>> > Is it possible yet(or is it coming in 3.9) to automatically download
>>> > language files for WP, plugins, themes?
>>> >
>>> > If so, is it possible via filters/action hooks to ask WordPress to
>>> download
>>> > the language files for multiple languages, instead of just what the
>>> > currently active language is?
>>> >
>>> > I'm asking this, because I resumed work on my multilingual plugin. In
>>> it
>>> > I've used a modified piece of code from qTranslate that would look for
>>> > translation files and download them from the WordPress.org repo.
>>> > Since I don't really like how it's written, and because of the fact
>>> that
>>> > this is/will be in core anyway, I don't see why to reinvent the wheel.
>>> >
>>> > Best Regards,
>>> > Nikola Nikolov
>>> > _______________________________________________
>>> > wp-hackers mailing list
>>> > wp-hackers at lists.automattic.com
>>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> >
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
>

From greglancaster71 at gmail.com  Wed Jan 29 21:21:39 2014
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Wed, 29 Jan 2014 13:21:39 -0800 (PST)
Subject: [wp-hackers] Adding new Menu Modules to Wordpress
Message-ID: <1391030499555-43267.post@n5.nabble.com>

I have searched around, and have not been able to find the solution myself. 
I would like to add a new module of items to the Appearance->Menus page in
the backend. 

This is the page: 
http://codex.wordpress.org/images/c/ca/appearance-menus.png
<http://codex.wordpress.org/images/c/ca/appearance-menus.png>  

Where it says Pages, Links, Categories.  Is it possible to add an additional
section there with unique menu items specific to a plugin.  The links I
would like to add in a custom module are dynamic, created using rewrite
rules.  



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Adding-new-Menu-Modules-to-Wordpress-tp43267.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From dyordan1 at ramapo.edu  Wed Jan 29 21:33:05 2014
From: dyordan1 at ramapo.edu (Dobri)
Date: Wed, 29 Jan 2014 16:33:05 -0500
Subject: [wp-hackers] Adding new Menu Modules to Wordpress
In-Reply-To: <1391030499555-43267.post@n5.nabble.com>
References: <1391030499555-43267.post@n5.nabble.com>
Message-ID: <F59CCC8E-B49E-453F-8559-6570397AC1DD@ramapo.edu>

Hi,

Just speaking from experience, I tried to do something like that a couple of months ago and reached pretty much nowhere using multiple approaches. Menu items seem to be semi-hardcoded. What I ended up doing in the end is I used custom links and used their title/link/alt fields as parameters that are parsed by a custom walker. Here's some code if you'd like to look into the idea:

//you need a custom walker class. you can override start_el and a bunch of other methods, look into the definition of Walker_Nav_Menu
        class Custom_Walker extends Walker_Nav_Menu
	{	
		function start_el(&$output, $item, $depth=0, $args=array())
		{  
			//If it's a subitem, ignore and revert to regular Walker
			if( 0 != $depth )
			{
				parent::start_el($output, $item, $depth, $args);
			}
			else
			{
				//If the title of the thing begins with the word Divider
				if(preg_match('/^Divider/',$item->title) == 1)
				{
					global $wp_query;
					//assure proper indentation
					$indent = ( $depth ) ? str_repeat( "\t", $depth ) : '';
					
					//open the divider li
					$output .= $indent . '<li class="noLink">';
					
					//generate the inside code
					$item_output = $args->before;
					$item_output .= $args->link_before . apply_filters( 'the_title', $item->attr_title, $item->ID ) . $args->link_after;
					$item_output .= $args->after;
					
					//finish it up
					$output .= apply_filters( 'walker_nav_menu_start_el', $item_output, $item, $depth, $args );
				}
				else
				{
					parent::start_el($output, $item, $depth, $args);
				}
			}
		}
	}

and wherever you render the menu:

$walker = new Custom_Walker();
wp_nav_menu(array('theme_location' => 'rail_menu', ?, 'walker' => $walker));

Not very extensible as you might imagine though. The code above adds a little divider element if the title of the custom link begins with Divider. I'd be happy to see someone else offer a better solution, I'd implement it myself right away.

~Dobri

On Wed, 29 Jan 2014, at 4:21 PM, BenderisGreat wrote:

> I have searched around, and have not been able to find the solution myself. 
> I would like to add a new module of items to the Appearance->Menus page in
> the backend. 
> 
> This is the page: 
> http://codex.wordpress.org/images/c/ca/appearance-menus.png
> <http://codex.wordpress.org/images/c/ca/appearance-menus.png>  
> 
> Where it says Pages, Links, Categories.  Is it possible to add an additional
> section there with unique menu items specific to a plugin.  The links I
> would like to add in a custom module are dynamic, created using rewrite
> rules.  
> 
> 
> 
> --
> View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Adding-new-Menu-Modules-to-Wordpress-tp43267.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From nikolov.tmw at gmail.com  Wed Jan 29 21:37:51 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 29 Jan 2014 23:37:51 +0200
Subject: [wp-hackers] Adding new Menu Modules to Wordpress
In-Reply-To: <F59CCC8E-B49E-453F-8559-6570397AC1DD@ramapo.edu>
References: <1391030499555-43267.post@n5.nabble.com>
 <F59CCC8E-B49E-453F-8559-6570397AC1DD@ramapo.edu>
Message-ID: <CAOwx47fzSNvo96x3NOTBVdqq2F9Ud9s3sq-WegJjBZZyVRgGYg@mail.gmail.com>

>From what I tracked in source for the past couple of minutes is that pretty
much these are just normal meta boxes, just registered for the nav-menu
screen with context set to "side".

I'll do some tests and poke around and come back with any findings.


On Wed, Jan 29, 2014 at 11:33 PM, Dobri <dyordan1 at ramapo.edu> wrote:

> Hi,
>
> Just speaking from experience, I tried to do something like that a couple
> of months ago and reached pretty much nowhere using multiple approaches.
> Menu items seem to be semi-hardcoded. What I ended up doing in the end is I
> used custom links and used their title/link/alt fields as parameters that
> are parsed by a custom walker. Here's some code if you'd like to look into
> the idea:
>
> //you need a custom walker class. you can override start_el and a bunch of
> other methods, look into the definition of Walker_Nav_Menu
>         class Custom_Walker extends Walker_Nav_Menu
>         {
>                 function start_el(&$output, $item, $depth=0, $args=array())
>                 {
>                         //If it's a subitem, ignore and revert to regular
> Walker
>                         if( 0 != $depth )
>                         {
>                                 parent::start_el($output, $item, $depth,
> $args);
>                         }
>                         else
>                         {
>                                 //If the title of the thing begins with
> the word Divider
>                                 if(preg_match('/^Divider/',$item->title)
> == 1)
>                                 {
>                                         global $wp_query;
>                                         //assure proper indentation
>                                         $indent = ( $depth ) ? str_repeat(
> "\t", $depth ) : '';
>
>                                         //open the divider li
>                                         $output .= $indent . '<li
> class="noLink">';
>
>                                         //generate the inside code
>                                         $item_output = $args->before;
>                                         $item_output .= $args->link_before
> . apply_filters( 'the_title', $item->attr_title, $item->ID ) .
> $args->link_after;
>                                         $item_output .= $args->after;
>
>                                         //finish it up
>                                         $output .= apply_filters(
> 'walker_nav_menu_start_el', $item_output, $item, $depth, $args );
>                                 }
>                                 else
>                                 {
>                                         parent::start_el($output, $item,
> $depth, $args);
>                                 }
>                         }
>                 }
>         }
>
> and wherever you render the menu:
>
> $walker = new Custom_Walker();
> wp_nav_menu(array('theme_location' => 'rail_menu', ..., 'walker' =>
> $walker));
>
> Not very extensible as you might imagine though. The code above adds a
> little divider element if the title of the custom link begins with Divider.
> I'd be happy to see someone else offer a better solution, I'd implement it
> myself right away.
>
> ~Dobri
>
> On Wed, 29 Jan 2014, at 4:21 PM, BenderisGreat wrote:
>
> > I have searched around, and have not been able to find the solution
> myself.
> > I would like to add a new module of items to the Appearance->Menus page
> in
> > the backend.
> >
> > This is the page:
> > http://codex.wordpress.org/images/c/ca/appearance-menus.png
> > <http://codex.wordpress.org/images/c/ca/appearance-menus.png>
> >
> > Where it says Pages, Links, Categories.  Is it possible to add an
> additional
> > section there with unique menu items specific to a plugin.  The links I
> > would like to add in a custom module are dynamic, created using rewrite
> > rules.
> >
> >
> >
> > --
> > View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/Adding-new-Menu-Modules-to-Wordpress-tp43267.html
> > Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Wed Jan 29 22:41:42 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Wed, 29 Jan 2014 14:41:42 -0800
Subject: [wp-hackers] get_queried_object_id
Message-ID: <CAHERW=0Xb-cD=yxOqRjXw8RGZbGykFKSWAhr9_wAKXrSUX8juA@mail.gmail.com>

In what situations does the queried_object_id becomes not available?

In query.php, we have this;

3325        function get_queried_object_id() {
3326                $this->get_queried_object();
3327
3328                if ( isset($this->queried_object_id) ) {
3329                        return $this->queried_object_id;
3330                }
3331
3332                return 0;
3333        }
3334

So under which circumstances does this return 0?

thanks

From nikolov.tmw at gmail.com  Wed Jan 29 22:45:59 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Thu, 30 Jan 2014 00:45:59 +0200
Subject: [wp-hackers] Adding new Menu Modules to Wordpress
In-Reply-To: <CAOwx47fzSNvo96x3NOTBVdqq2F9Ud9s3sq-WegJjBZZyVRgGYg@mail.gmail.com>
References: <1391030499555-43267.post@n5.nabble.com>
 <F59CCC8E-B49E-453F-8559-6570397AC1DD@ramapo.edu>
 <CAOwx47fzSNvo96x3NOTBVdqq2F9Ud9s3sq-WegJjBZZyVRgGYg@mail.gmail.com>
Message-ID: <CAOwx47fF3FPWD=w-upzrT+DQ8FcAq4a10mTuFLh3LpeVMMHy_Q@mail.gmail.com>

I was actually able to create a custom meta box, render some sample data in
it, have functional "Select all" link and be able to add the item to the
menu and save it. It seemed like the url parameter of the menu item was not
going through, but I guess you might have to hook to the
'wp_setup_nav_menu_item' filter and correct your items from there. You
might also have to poke around in order to see how things work. I would
suggest looking at the following function:
 - wp_nav_menu_item_taxonomy_meta_box<https://github.com/WordPress/WordPress/blob/c944323a4fef0dbfff96662c55c4fdbfc9d548ba/wp-admin/includes/nav-menu.php#L867>-
this renders the taxonomies metabox - so where you would select
categories for instance.

I'm not a 100% sure if the "admin_head-nav-menus.php" action hook is the
correct place to register the meta box, but since the "add_metaboxes" hook
doesn't fire on the nav-menus.php page. Besides in the source(for
/wp-admin/nav-menus.php) the function that registers the meta boxes is
actually just called midst-page I assume that it should work fine.

A lot of the HTML classes and ids are related to some of the
functionality(most notably the select all link and add to menu button), so
if you change one class/id and don't change the related one, things might
stop working. I didn't go through the JS code in order to find what the
correlation is and therefore what the format should be, but I assume for
the add to menu button you want to have it's id be
"submit-{$wrapping_div_id}", where $wrapping_div_id would be the ID of the
div that holds all of your content - in the example code that would be <div
id="my-plugin-div">.

You can see the code here - https://gist.github.com/nikolov-tmw/8698598


On Wed, Jan 29, 2014 at 11:37 PM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> From what I tracked in source for the past couple of minutes is that
> pretty much these are just normal meta boxes, just registered for the
> nav-menu screen with context set to "side".
>
> I'll do some tests and poke around and come back with any findings.
>
>
> On Wed, Jan 29, 2014 at 11:33 PM, Dobri <dyordan1 at ramapo.edu> wrote:
>
>> Hi,
>>
>> Just speaking from experience, I tried to do something like that a couple
>> of months ago and reached pretty much nowhere using multiple approaches.
>> Menu items seem to be semi-hardcoded. What I ended up doing in the end is I
>> used custom links and used their title/link/alt fields as parameters that
>> are parsed by a custom walker. Here's some code if you'd like to look into
>> the idea:
>>
>> //you need a custom walker class. you can override start_el and a bunch
>> of other methods, look into the definition of Walker_Nav_Menu
>>         class Custom_Walker extends Walker_Nav_Menu
>>         {
>>                 function start_el(&$output, $item, $depth=0,
>> $args=array())
>>                 {
>>                         //If it's a subitem, ignore and revert to regular
>> Walker
>>                         if( 0 != $depth )
>>                         {
>>                                 parent::start_el($output, $item, $depth,
>> $args);
>>                         }
>>                         else
>>                         {
>>                                 //If the title of the thing begins with
>> the word Divider
>>                                 if(preg_match('/^Divider/',$item->title)
>> == 1)
>>                                 {
>>                                         global $wp_query;
>>                                         //assure proper indentation
>>                                         $indent = ( $depth ) ?
>> str_repeat( "\t", $depth ) : '';
>>
>>                                         //open the divider li
>>                                         $output .= $indent . '<li
>> class="noLink">';
>>
>>                                         //generate the inside code
>>                                         $item_output = $args->before;
>>                                         $item_output .=
>> $args->link_before . apply_filters( 'the_title', $item->attr_title,
>> $item->ID ) . $args->link_after;
>>                                         $item_output .= $args->after;
>>
>>                                         //finish it up
>>                                         $output .= apply_filters(
>> 'walker_nav_menu_start_el', $item_output, $item, $depth, $args );
>>                                 }
>>                                 else
>>                                 {
>>                                         parent::start_el($output, $item,
>> $depth, $args);
>>                                 }
>>                         }
>>                 }
>>         }
>>
>> and wherever you render the menu:
>>
>> $walker = new Custom_Walker();
>> wp_nav_menu(array('theme_location' => 'rail_menu', ..., 'walker' =>
>> $walker));
>>
>> Not very extensible as you might imagine though. The code above adds a
>> little divider element if the title of the custom link begins with Divider.
>> I'd be happy to see someone else offer a better solution, I'd implement it
>> myself right away.
>>
>> ~Dobri
>>
>> On Wed, 29 Jan 2014, at 4:21 PM, BenderisGreat wrote:
>>
>> > I have searched around, and have not been able to find the solution
>> myself.
>> > I would like to add a new module of items to the Appearance->Menus page
>> in
>> > the backend.
>> >
>> > This is the page:
>> > http://codex.wordpress.org/images/c/ca/appearance-menus.png
>> > <http://codex.wordpress.org/images/c/ca/appearance-menus.png>
>> >
>> > Where it says Pages, Links, Categories.  Is it possible to add an
>> additional
>> > section there with unique menu items specific to a plugin.  The links I
>> > would like to add in a custom module are dynamic, created using rewrite
>> > rules.
>> >
>> >
>> >
>> > --
>> > View this message in context:
>> http://wordpress-hackers.1065353.n5.nabble.com/Adding-new-Menu-Modules-to-Wordpress-tp43267.html
>> > Sent from the Wordpress Hackers mailing list archive at Nabble.com.
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From johnbillion+wp at gmail.com  Wed Jan 29 22:49:57 2014
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Wed, 29 Jan 2014 22:49:57 +0000
Subject: [wp-hackers] get_queried_object_id
In-Reply-To: <CAHERW=0Xb-cD=yxOqRjXw8RGZbGykFKSWAhr9_wAKXrSUX8juA@mail.gmail.com>
References: <CAHERW=0Xb-cD=yxOqRjXw8RGZbGykFKSWAhr9_wAKXrSUX8juA@mail.gmail.com>
Message-ID: <CAOqAKWDQ_0PLYrsL8y6L_uq+q4bkBoqEkdieRfB5OaxAUGCqFg@mail.gmail.com>

get_queried_object() and get_queried_object_id() only return a value when
one of the following are true:

 * is_post_type_archive()
 * is_singular()
 * is_tax()/is_tag()/is_category()
 * is_author()

In any other situation, there is no queried object.

John


On 29 January 2014 22:41, Haluk Karamete <halukkaramete at gmail.com> wrote:

> In what situations does the queried_object_id becomes not available?
>
> In query.php, we have this;
>
> 3325        function get_queried_object_id() {
> 3326                $this->get_queried_object();
> 3327
> 3328                if ( isset($this->queried_object_id) ) {
> 3329                        return $this->queried_object_id;
> 3330                }
> 3331
> 3332                return 0;
> 3333        }
> 3334
>
> So under which circumstances does this return 0?
>
> thanks
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jer at simianuprising.com  Thu Jan 30 15:29:02 2014
From: jer at simianuprising.com (Jeremy Clarke)
Date: Thu, 30 Jan 2014 10:29:02 -0500
Subject: [wp-hackers] Child categories
In-Reply-To: <988E6C81-4129-4524-9DCC-528B75D7608C@ramapo.edu>
References: <56F9716E-5C95-4955-9587-B5609A3D08CF@ramapo.edu>
 <CAOwx47dxrVxx1E5bEBFGOiSGJvagtCmvfkQtjwN4egQ6mmjmZQ@mail.gmail.com>
 <988E6C81-4129-4524-9DCC-528B75D7608C@ramapo.edu>
Message-ID: <CAAHgzDMffDNw+s1FR+gkDN6MqBJ99E1pVUbixQ7VMUgULLj6Yg@mail.gmail.com>

On Thu, Jan 23, 2014 at 9:24 AM, Dobri <dyordan1 at ramapo.edu> wrote:

>
> I think I'll look into filtering the standard taxonomy meta box content
> instead of creating my own so if someone has an idea if there are any hooks
> for that, that'd be helpful.
>
>
Based on past experiences the best/only place to control the output of the
categories box is actually pretty far down in the chain: get_terms()

Here's the filter and first line of the function I use (which
re-alphabetizes the list because I had an issue with Arabic text coming out
not in Arabic-alphabetical-order):

add_filter('get_terms', 'gv_filter_get_terms', 10, 3);
function gv_filter_get_terms($terms, $taxonomies, $args) {
   [...]
}

The main problem you'll have using this method is the need to very
explicitly avoid running your filter for cases other than the metabox. One
thing I found vital for this was testing to make sure that 'all' was set as
the 'fields' to retrieve:

if ('all' != $args['fields'])
return $terms;

If you don't have that check your code will choke when it does an 'ids'
query and your object-expecting code filters it into oblivion.

Since your code would probably be a lot more destructive than mine you
might want to consider more drastic measures, like inspecting the backtrace
chain (wp_debug_backtrace_summary()) for explicit confirmation that you're
filtering the content of the metabox.

Good luck,

-- 
Jeremy Clarke ? jeremyclarke.org
Code and Design ? globalvoicesonline.org

From halukkaramete at gmail.com  Thu Jan 30 18:55:40 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Thu, 30 Jan 2014 10:55:40 -0800
Subject: [wp-hackers] limiting the number of posts
Message-ID: <CAHERW=29q=sKYzNeYPR8KdH8jpijJ5bb4q_bTj+QGGaceX8FHA@mail.gmail.com>

posts_per_page does not have anything to do with the LIMIT phrase of mysql.

What query argument corresponds to the LIMIT?

In other words, I'd like WordPress query to return only 3 posts max, (even
though there could be  thousands that match that query. )

Now knowing any better, I'm thinking, forcing WPQuery to return only as
much as what I need is more efficient that getting them all. Hence the need
for a LIMIT. Please correct if that thinking is also not correct.

From piemanek at gmail.com  Thu Jan 30 19:12:02 2014
From: piemanek at gmail.com (Simon Blackbourn)
Date: Thu, 30 Jan 2014 19:12:02 +0000
Subject: [wp-hackers] limiting the number of posts
In-Reply-To: <CAHERW=29q=sKYzNeYPR8KdH8jpijJ5bb4q_bTj+QGGaceX8FHA@mail.gmail.com>
References: <CAHERW=29q=sKYzNeYPR8KdH8jpijJ5bb4q_bTj+QGGaceX8FHA@mail.gmail.com>
Message-ID: <CAJxFMSDGF3zpeQtY=xVZWzi0-h+YgX8r+cp5Uh0FHDntejpNVA@mail.gmail.com>

> posts_per_page does not have anything to do with the LIMIT phrase of mysql.
>
> What query argument corresponds to the LIMIT?
>
> In other words, I'd like WordPress query to return only 3 posts max, (even
> though there could be  thousands that match that query. )
>


I think you've got it wrong: if you pass a value of 3 as the posts_per_page
argument into get_posts or a new WP_Query and inspect the query that is
run, it will show "LIMIT 0, 3".

Try the Query Monitor plugin (http://wordpress.org/plugins/query-monitor),
it outputs nicely formatted SQL of all your database queries.

From halukkaramete at gmail.com  Thu Jan 30 19:36:57 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Thu, 30 Jan 2014 11:36:57 -0800
Subject: [wp-hackers] limiting the number of posts
In-Reply-To: <CAJxFMSDGF3zpeQtY=xVZWzi0-h+YgX8r+cp5Uh0FHDntejpNVA@mail.gmail.com>
References: <CAHERW=29q=sKYzNeYPR8KdH8jpijJ5bb4q_bTj+QGGaceX8FHA@mail.gmail.com>
 <CAJxFMSDGF3zpeQtY=xVZWzi0-h+YgX8r+cp5Uh0FHDntejpNVA@mail.gmail.com>
Message-ID: <CAHERW=0tP8TH4+x5G+gM_hrGUJeqQ8s9ygxY+b_74Peaw=U8xA@mail.gmail.com>

Simon, you are absolutely right.
I got confused between the numberposts, number_of_posts, showposts,
posts_per_page, foundposts. I definitely overlooked.
Thank you for nailing it for me.



On Thu, Jan 30, 2014 at 11:12 AM, Simon Blackbourn <piemanek at gmail.com>wrote:

> > posts_per_page does not have anything to do with the LIMIT phrase of
> mysql.
> >
> > What query argument corresponds to the LIMIT?
> >
> > In other words, I'd like WordPress query to return only 3 posts max,
> (even
> > though there could be  thousands that match that query. )
> >
>
>
> I think you've got it wrong: if you pass a value of 3 as the posts_per_page
> argument into get_posts or a new WP_Query and inspect the query that is
> run, it will show "LIMIT 0, 3".
>
> Try the Query Monitor plugin (http://wordpress.org/plugins/query-monitor),
> it outputs nicely formatted SQL of all your database queries.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Thu Jan 30 22:45:12 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Thu, 30 Jan 2014 14:45:12 -0800
Subject: [wp-hackers] identifying the current post type on admin screen.
Message-ID: <CAHERW=2=hc6gQTrWb75C4e5Xq1Y6rgB498cQScqpXn12KA1pLA@mail.gmail.com>

on admin pages, how can I detect that the current admin is dealing with a
cpt?

dealing meas: he is about to "add new" or "edit" or "delete" a post that
belongs to that cpt.

something of this sort is what I'm looking for;

if (is_admin() and get_post_type( $post ) == 'that_cpt')
   bingo...

which obviously would not work.

From greglancaster71 at gmail.com  Fri Jan 31 01:10:01 2014
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Thu, 30 Jan 2014 17:10:01 -0800 (PST)
Subject: [wp-hackers] Saving DATETIME with $wpdb->insert ?
Message-ID: <1391130601140-43278.post@n5.nabble.com>

Having an issue while saving datetime in the db.  Insert is a success with
the exception of the datetime field which remains as 0000-00-00 00:00:00. 
Not sure why, I am using wordpress' current_time('mysql', 1) format.  Also
tried date('Y-m-d h:i:s') without any success.  I feel stupid asking this,
but I really dont understand why this is failing. It saves properly if I use
%s but I read that datetime should not be saved as a string ever on
stackoverflow.  



    $sql2 = $wpdb->insert($activityTable, 
    		array(
    			  'user_id' => $profile_id,
    			  'activity_cat' => 'status',
    			  'type' => 'status_update',
    			  'action' => $actionUpdate,
    			  'content' => $statusUpdate,
    			  'time' => current_time('mysql', 1)
    		),
    		array(
    			  '%d',
    			  '%s',
    			  '%s',
    			  '%s',
    			  '%s',
    			  '%d'
    			  )
    		);




--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Saving-DATETIME-with-wpdb-insert-tp43278.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From johnbillion+wp at gmail.com  Fri Jan 31 01:27:00 2014
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 31 Jan 2014 01:27:00 +0000
Subject: [wp-hackers] Saving DATETIME with $wpdb->insert ?
In-Reply-To: <1391130601140-43278.post@n5.nabble.com>
References: <1391130601140-43278.post@n5.nabble.com>
Message-ID: <CAOqAKWCBxpBk29gvGZX+9irym3nZ3K+d3j7KAciu_U90U9ogrg@mail.gmail.com>

A date in DATETIME format ("YYYY-MM-DD HH:MM:SS") is a string, not a
number. You need to use %s instead of %d, as you pointed out.

John


On 31 January 2014 01:10, BenderisGreat <greglancaster71 at gmail.com> wrote:

> Having an issue while saving datetime in the db.  Insert is a success with
> the exception of the datetime field which remains as 0000-00-00 00:00:00.
> Not sure why, I am using wordpress' current_time('mysql', 1) format.  Also
> tried date('Y-m-d h:i:s') without any success.  I feel stupid asking this,
> but I really dont understand why this is failing. It saves properly if I
> use
> %s but I read that datetime should not be saved as a string ever on
> stackoverflow.
>
>
>
>     $sql2 = $wpdb->insert($activityTable,
>                 array(
>                           'user_id' => $profile_id,
>                           'activity_cat' => 'status',
>                           'type' => 'status_update',
>                           'action' => $actionUpdate,
>                           'content' => $statusUpdate,
>                           'time' => current_time('mysql', 1)
>                 ),
>                 array(
>                           '%d',
>                           '%s',
>                           '%s',
>                           '%s',
>                           '%s',
>                           '%d'
>                           )
>                 );
>
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/Saving-DATETIME-with-wpdb-insert-tp43278.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From greglancaster71 at gmail.com  Fri Jan 31 01:28:16 2014
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Thu, 30 Jan 2014 17:28:16 -0800 (PST)
Subject: [wp-hackers] Adding new Menu Modules to Wordpress
In-Reply-To: <CAOwx47fF3FPWD=w-upzrT+DQ8FcAq4a10mTuFLh3LpeVMMHy_Q@mail.gmail.com>
References: <1391030499555-43267.post@n5.nabble.com>
 <F59CCC8E-B49E-453F-8559-6570397AC1DD@ramapo.edu>
 <CAOwx47fzSNvo96x3NOTBVdqq2F9Ud9s3sq-WegJjBZZyVRgGYg@mail.gmail.com>
 <CAOwx47fF3FPWD=w-upzrT+DQ8FcAq4a10mTuFLh3LpeVMMHy_Q@mail.gmail.com>
Message-ID: <1391131696345-43280.post@n5.nabble.com>

Great work Nikola! Thank you for taking a look and going out of your way to
provide example source code!



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Adding-new-Menu-Modules-to-Wordpress-tp43267p43280.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From morgan.estes at gmail.com  Fri Jan 31 04:07:50 2014
From: morgan.estes at gmail.com (Morgan Estes)
Date: Thu, 30 Jan 2014 22:07:50 -0600
Subject: [wp-hackers] identifying the current post type on admin screen.
In-Reply-To: <CAHERW=2=hc6gQTrWb75C4e5Xq1Y6rgB498cQScqpXn12KA1pLA@mail.gmail.com>
References: <CAHERW=2=hc6gQTrWb75C4e5Xq1Y6rgB498cQScqpXn12KA1pLA@mail.gmail.com>
Message-ID: <CAEN3sejyLKLx5RJZ6xqqbLRRuE=Xs-x=oXe2xqUONWwrxMXGww@mail.gmail.com>

There are a couple of ways to get the post type of the page being edited.
Here's one works for me:

add_filter( 'admin_head', 'get_cpt_page' );

function get_cpt_page() {
if ( 'that_cpt' == get_post_type() ) {
          // do cool stuff here
        }
}

Morgan W. Estes
about.me/morganestes


On Thu, Jan 30, 2014 at 4:45 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> on admin pages, how can I detect that the current admin is dealing with a
> cpt?
>
> dealing meas: he is about to "add new" or "edit" or "delete" a post that
> belongs to that cpt.
>
> something of this sort is what I'm looking for;
>
> if (is_admin() and get_post_type( $post ) == 'that_cpt')
>    bingo...
>
> which obviously would not work.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at andrewnacin.com  Fri Jan 31 04:14:41 2014
From: wp at andrewnacin.com (Andrew Nacin)
Date: Thu, 30 Jan 2014 23:14:41 -0500
Subject: [wp-hackers] identifying the current post type on admin screen.
In-Reply-To: <CAHERW=2=hc6gQTrWb75C4e5Xq1Y6rgB498cQScqpXn12KA1pLA@mail.gmail.com>
References: <CAHERW=2=hc6gQTrWb75C4e5Xq1Y6rgB498cQScqpXn12KA1pLA@mail.gmail.com>
Message-ID: <CAP29PviSP0dookcAsitYNQNE1tJjofjT2H6YkwFmuZcJR5NzrA@mail.gmail.com>

On Thu, Jan 30, 2014 at 5:45 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> on admin pages, how can I detect that the current admin is dealing with a
> cpt?
>
> dealing meas: he is about to "add new" or "edit" or "delete" a post that
> belongs to that cpt.
>
> something of this sort is what I'm looking for;
>
> if (is_admin() and get_post_type( $post ) == 'that_cpt')
>    bingo...


get_current_screen()->post_type. This will also specify a post type when
it's a taxonomy being edited. To filter that out ensure that
get_current_screen()->base === 'post', which is for edit.php, post-new.php,
and post.php (for all post types).

From frank at bueltge.de  Fri Jan 31 05:49:52 2014
From: frank at bueltge.de (Frank Bueltge)
Date: Fri, 31 Jan 2014 06:49:52 +0100
Subject: [wp-hackers] identifying the current post type on admin screen.
In-Reply-To: <CAP29PviSP0dookcAsitYNQNE1tJjofjT2H6YkwFmuZcJR5NzrA@mail.gmail.com>
References: <CAHERW=2=hc6gQTrWb75C4e5Xq1Y6rgB498cQScqpXn12KA1pLA@mail.gmail.com>
 <CAP29PviSP0dookcAsitYNQNE1tJjofjT2H6YkwFmuZcJR5NzrA@mail.gmail.com>
Message-ID: <CAH9UVvEfoj9Z5qFASFurswOMeG-eD9MShx0=herw5DGWDPWbjA@mail.gmail.com>

Use the function get_current_screen to identifier the current page,
including post type.
You can use the plugin Debug Objects to see all data of get_current_screen
to easier understand the benefit.

Best Frank
Am 31.01.2014 05:15 schrieb "Andrew Nacin" <wp at andrewnacin.com>:

> On Thu, Jan 30, 2014 at 5:45 PM, Haluk Karamete <halukkaramete at gmail.com
> >wrote:
>
> > on admin pages, how can I detect that the current admin is dealing with a
> > cpt?
> >
> > dealing meas: he is about to "add new" or "edit" or "delete" a post that
> > belongs to that cpt.
> >
> > something of this sort is what I'm looking for;
> >
> > if (is_admin() and get_post_type( $post ) == 'that_cpt')
> >    bingo...
>
>
> get_current_screen()->post_type. This will also specify a post type when
> it's a taxonomy being edited. To filter that out ensure that
> get_current_screen()->base === 'post', which is for edit.php, post-new.php,
> and post.php (for all post types).
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Fri Jan 31 05:58:30 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Thu, 30 Jan 2014 21:58:30 -0800
Subject: [wp-hackers] identifying the current post type on admin screen.
In-Reply-To: <CAH9UVvEfoj9Z5qFASFurswOMeG-eD9MShx0=herw5DGWDPWbjA@mail.gmail.com>
References: <CAHERW=2=hc6gQTrWb75C4e5Xq1Y6rgB498cQScqpXn12KA1pLA@mail.gmail.com>
 <CAP29PviSP0dookcAsitYNQNE1tJjofjT2H6YkwFmuZcJR5NzrA@mail.gmail.com>
 <CAH9UVvEfoj9Z5qFASFurswOMeG-eD9MShx0=herw5DGWDPWbjA@mail.gmail.com>
Message-ID: <CAHERW=2bFUNk+Yw1wJtHKRWYk7OePYaOTnaq+=PcfnJ3MYkM5A@mail.gmail.com>

Thank you all.


On Thu, Jan 30, 2014 at 9:49 PM, Frank Bueltge <frank at bueltge.de> wrote:

> Use the function get_current_screen to identifier the current page,
> including post type.
> You can use the plugin Debug Objects to see all data of get_current_screen
> to easier understand the benefit.
>
> Best Frank
> Am 31.01.2014 05:15 schrieb "Andrew Nacin" <wp at andrewnacin.com>:
>
> > On Thu, Jan 30, 2014 at 5:45 PM, Haluk Karamete <halukkaramete at gmail.com
> > >wrote:
> >
> > > on admin pages, how can I detect that the current admin is dealing
> with a
> > > cpt?
> > >
> > > dealing meas: he is about to "add new" or "edit" or "delete" a post
> that
> > > belongs to that cpt.
> > >
> > > something of this sort is what I'm looking for;
> > >
> > > if (is_admin() and get_post_type( $post ) == 'that_cpt')
> > >    bingo...
> >
> >
> > get_current_screen()->post_type. This will also specify a post type when
> > it's a taxonomy being edited. To filter that out ensure that
> > get_current_screen()->base === 'post', which is for edit.php,
> post-new.php,
> > and post.php (for all post types).
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Fri Jan 31 15:19:58 2014
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Fri, 31 Jan 2014 07:19:58 -0800
Subject: [wp-hackers] finding a code snippet in wordpress core
Message-ID: <CAHERW=18DXj3jWzRX1SSDw=xwCciGUGvJicJrfbp83ZwqjL-jA@mail.gmail.com>

Is there an online tool where I can run queries like

where on wordpress core register_post_type function is called?

I'm trying to get to the section where you guys create the 'post' and
'page' post types..

From david at wordshell.net  Fri Jan 31 15:24:14 2014
From: david at wordshell.net (David Anderson)
Date: Fri, 31 Jan 2014 15:24:14 +0000
Subject: [wp-hackers] Integrating a file-browser into the WP admin area
Message-ID: <52EBC01E.4020601@wordshell.net>

Hi,

I have a need to integrate a file browser into a settings page in the WP 
dashboard. It will show a directory tree (from the server), and allow 
the user to select as many files or directories as they wish.

I've had a Google, and this - http://www.jstree.com 
<http://www.jstree.com/> - with the checkbox plugin - 
http://www.jstree.com/plugins - looks like a good bet.

Does anyone have a better suggestion?

Does anyone have actual working code for an integration of something 
that can do this task (whether using JSTree or something else)?

Many thanks,
David

-- 
UpdraftPlus - best WordPress backups - http://updraftplus.com
WordShell - WordPress fast from the CLI - http://wordshell.net


From nikolov.tmw at gmail.com  Fri Jan 31 15:34:31 2014
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Fri, 31 Jan 2014 17:34:31 +0200
Subject: [wp-hackers] finding a code snippet in wordpress core
In-Reply-To: <CAHERW=18DXj3jWzRX1SSDw=xwCciGUGvJicJrfbp83ZwqjL-jA@mail.gmail.com>
References: <CAHERW=18DXj3jWzRX1SSDw=xwCciGUGvJicJrfbp83ZwqjL-jA@mail.gmail.com>
Message-ID: <CAOwx47eH8bSyZMWtidbT_D00uCehtid8gGN=6YTz8dMDYvRkYA@mail.gmail.com>

Hi,

Well I don't about an online tool, but the thing I do when I need to look
for something in core(and I don't already know where to find it), is to
simply use my text editor to search through the core files.

What you are looking for in this case is found in /wp-includes/post.php and
it's the function called create_initial_post_types().

It seems like queryposts.com will be a good place to look for core code and
functions in the future(and now), for instance you can take a look at
the create_initial_post_types
function page <http://queryposts.com/function/create_initial_post_types/>there.


On Fri, Jan 31, 2014 at 5:19 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> Is there an online tool where I can run queries like
>
> where on wordpress core register_post_type function is called?
>
> I'm trying to get to the section where you guys create the 'post' and
> 'page' post types..
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdg at codesymphony.co  Fri Jan 31 15:41:45 2014
From: jdg at codesymphony.co (J.D. Grimes)
Date: Fri, 31 Jan 2014 10:41:45 -0500
Subject: [wp-hackers] finding a code snippet in wordpress core
In-Reply-To: <CAOwx47eH8bSyZMWtidbT_D00uCehtid8gGN=6YTz8dMDYvRkYA@mail.gmail.com>
References: <CAHERW=18DXj3jWzRX1SSDw=xwCciGUGvJicJrfbp83ZwqjL-jA@mail.gmail.com>
 <CAOwx47eH8bSyZMWtidbT_D00uCehtid8gGN=6YTz8dMDYvRkYA@mail.gmail.com>
Message-ID: <757B330A-3F09-469D-8AC4-5FAB33CE0CA9@codesymphony.co>

I usually run grep on my local checkout:

grep -nr ?register_post_type(? /path/to/wp

-J.D.

On Jan 31, 2014, at 10:34 AM, Nikola Nikolov <nikolov.tmw at gmail.com> wrote:

> Hi,
> 
> Well I don't about an online tool, but the thing I do when I need to look
> for something in core(and I don't already know where to find it), is to
> simply use my text editor to search through the core files.
> 
> What you are looking for in this case is found in /wp-includes/post.php and
> it's the function called create_initial_post_types().
> 
> It seems like queryposts.com will be a good place to look for core code and
> functions in the future(and now), for instance you can take a look at
> the create_initial_post_types
> function page <http://queryposts.com/function/create_initial_post_types/>there.
> 
> 
> On Fri, Jan 31, 2014 at 5:19 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:
> 
>> Is there an online tool where I can run queries like
>> 
>> where on wordpress core register_post_type function is called?
>> 
>> I'm trying to get to the section where you guys create the 'post' and
>> 'page' post types..
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From chris at lod.com  Fri Jan 31 15:42:25 2014
From: chris at lod.com (Chris McCoy)
Date: Fri, 31 Jan 2014 10:42:25 -0500
Subject: [wp-hackers] Integrating a file-browser into the WP admin area
In-Reply-To: <52EBC01E.4020601@wordshell.net>
References: <52EBC01E.4020601@wordshell.net>
Message-ID: <CF112E87.7362%chris@lod.com>

Maybe something like this?

http://wordpress.org/plugins/add-from-server/screenshots/




On 1/31/2014, 10:24 AM, "David Anderson" <david at wordshell.net> wrote:

>Hi,
>
>I have a need to integrate a file browser into a settings page in the WP
>dashboard. It will show a directory tree (from the server), and allow
>the user to select as many files or directories as they wish.
>
>I've had a Google, and this - http://www.jstree.com
><http://www.jstree.com/> - with the checkbox plugin -
>http://www.jstree.com/plugins - looks like a good bet.
>
>Does anyone have a better suggestion?
>
>Does anyone have actual working code for an integration of something
>that can do this task (whether using JSTree or something else)?
>
>Many thanks,
>David
>
>-- 
>UpdraftPlus - best WordPress backups - http://updraftplus.com
>WordShell - WordPress fast from the CLI - http://wordshell.net
>
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers



From otto at ottodestruct.com  Fri Jan 31 15:42:59 2014
From: otto at ottodestruct.com (Otto)
Date: Fri, 31 Jan 2014 09:42:59 -0600
Subject: [wp-hackers] Integrating a file-browser into the WP admin area
In-Reply-To: <52EBC01E.4020601@wordshell.net>
References: <52EBC01E.4020601@wordshell.net>
Message-ID: <CAD-FghzfmJEY8d_Okp+6RVC=qyC9OcQ6t1mMt2TFJrE8xngEnQ@mail.gmail.com>

I used jstree in
https://wordpress.org/plugins/dropbox-photo-sideloader/ , but for
displaying a list of files from Dropbox, not from the local server.
Same basic principle though.

-Otto


On Fri, Jan 31, 2014 at 9:24 AM, David Anderson <david at wordshell.net> wrote:
> Hi,
>
> I have a need to integrate a file browser into a settings page in the WP
> dashboard. It will show a directory tree (from the server), and allow the
> user to select as many files or directories as they wish.
>
> I've had a Google, and this - http://www.jstree.com <http://www.jstree.com/>
> - with the checkbox plugin - http://www.jstree.com/plugins - looks like a
> good bet.
>
> Does anyone have a better suggestion?
>
> Does anyone have actual working code for an integration of something that
> can do this task (whether using JSTree or something else)?
>
> Many thanks,
> David
>
> --
> UpdraftPlus - best WordPress backups - http://updraftplus.com
> WordShell - WordPress fast from the CLI - http://wordshell.net
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From chris at lod.com  Fri Jan 31 15:43:52 2014
From: chris at lod.com (Chris McCoy)
Date: Fri, 31 Jan 2014 10:43:52 -0500
Subject: [wp-hackers] finding a code snippet in wordpress core
In-Reply-To: <757B330A-3F09-469D-8AC4-5FAB33CE0CA9@codesymphony.co>
References: <CAHERW=18DXj3jWzRX1SSDw=xwCciGUGvJicJrfbp83ZwqjL-jA@mail.gmail.com>
 <CAOwx47eH8bSyZMWtidbT_D00uCehtid8gGN=6YTz8dMDYvRkYA@mail.gmail.com>
 <757B330A-3F09-469D-8AC4-5FAB33CE0CA9@codesymphony.co>
Message-ID: <CF112ECB.7365%chris@lod.com>

Or just grep -r ?register_post_type? .



On 1/31/2014, 10:41 AM, "J.D. Grimes" <jdg at codesymphony.co> wrote:

>I usually run grep on my local checkout:
>
>grep -nr ?register_post_type(? /path/to/wp
>
>-J.D.
>
>On Jan 31, 2014, at 10:34 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
>wrote:
>
>> Hi,
>> 
>> Well I don't about an online tool, but the thing I do when I need to
>>look
>> for something in core(and I don't already know where to find it), is to
>> simply use my text editor to search through the core files.
>> 
>> What you are looking for in this case is found in /wp-includes/post.php
>>and
>> it's the function called create_initial_post_types().
>> 
>> It seems like queryposts.com will be a good place to look for core code
>>and
>> functions in the future(and now), for instance you can take a look at
>> the create_initial_post_types
>> function page 
>><http://queryposts.com/function/create_initial_post_types/>there.
>> 
>> 
>> On Fri, Jan 31, 2014 at 5:19 PM, Haluk Karamete
>><halukkaramete at gmail.com>wrote:
>> 
>>> Is there an online tool where I can run queries like
>>> 
>>> where on wordpress core register_post_type function is called?
>>> 
>>> I'm trying to get to the section where you guys create the 'post' and
>>> 'page' post types..
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers



From johnbillion+wp at gmail.com  Fri Jan 31 16:01:25 2014
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 31 Jan 2014 16:01:25 +0000
Subject: [wp-hackers] finding a code snippet in wordpress core
In-Reply-To: <CF112ECB.7365%chris@lod.com>
References: <CAHERW=18DXj3jWzRX1SSDw=xwCciGUGvJicJrfbp83ZwqjL-jA@mail.gmail.com>
 <CAOwx47eH8bSyZMWtidbT_D00uCehtid8gGN=6YTz8dMDYvRkYA@mail.gmail.com>
 <757B330A-3F09-469D-8AC4-5FAB33CE0CA9@codesymphony.co>
 <CF112ECB.7365%chris@lod.com>
Message-ID: <CAOqAKWD8xnnaygy+izYBsZXNuPz6vDJdXtfC2=bdpsrUKu_99w@mail.gmail.com>

Yeah this isn't something you should need an online tool for. If you're
using an IDE or an editor with some sort of project management, you should
import WordPress as part of your project and then you can do a project-wide
search. If your editor doesn't support searching within files, you should
use something like grep or ack to find what you're looking for (and get a
new editor).


On 31 January 2014 15:43, Chris McCoy <chris at lod.com> wrote:

> Or just grep -r ?register_post_type? .
>
>
>
> On 1/31/2014, 10:41 AM, "J.D. Grimes" <jdg at codesymphony.co> wrote:
>
> >I usually run grep on my local checkout:
> >
> >grep -nr OEregister_post_type(OE /path/to/wp
> >
> >-J.D.
> >
> >On Jan 31, 2014, at 10:34 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
> >wrote:
> >
> >> Hi,
> >>
> >> Well I don't about an online tool, but the thing I do when I need to
> >>look
> >> for something in core(and I don't already know where to find it), is to
> >> simply use my text editor to search through the core files.
> >>
> >> What you are looking for in this case is found in /wp-includes/post.php
> >>and
> >> it's the function called create_initial_post_types().
> >>
> >> It seems like queryposts.com will be a good place to look for core code
> >>and
> >> functions in the future(and now), for instance you can take a look at
> >> the create_initial_post_types
> >> function page
> >><http://queryposts.com/function/create_initial_post_types/>there.
> >>
> >>
> >> On Fri, Jan 31, 2014 at 5:19 PM, Haluk Karamete
> >><halukkaramete at gmail.com>wrote:
> >>
> >>> Is there an online tool where I can run queries like
> >>>
> >>> where on wordpress core register_post_type function is called?
> >>>
> >>> I'm trying to get to the section where you guys create the 'post' and
> >>> 'page' post types..
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >_______________________________________________
> >wp-hackers mailing list
> >wp-hackers at lists.automattic.com
> >http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

