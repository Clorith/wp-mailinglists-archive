From ronin at braydon.com  Fri Nov  2 05:04:06 2012
From: ronin at braydon.com (Braydon)
Date: Thu, 01 Nov 2012 22:04:06 -0700
Subject: [wp-hackers] url image resizing
Message-ID: <50935446.7010709@braydon.com>

I've been looking in the Wordpress.org plugin directory for the plugin
that would be able to do this type of image resizing, with a "w" and "h"
query string parameters, such as this:

http://en.blog.files.wordpress.com/2012/10/your-music-your-website.jpg?w=500

And haven't been able to find this type of functionality, do you know
where I can find this?



From niladam at gmail.com  Fri Nov  2 07:31:47 2012
From: niladam at gmail.com (Tache Madalin)
Date: Fri, 2 Nov 2012 09:31:47 +0200
Subject: [wp-hackers] url image resizing
In-Reply-To: <50935446.7010709@braydon.com>
References: <50935446.7010709@braydon.com>
Message-ID: <41190270-9EF4-4424-BDE5-5617CE2A6479@gmail.com>

Try googling for timthumb. Thats the script you want ;)


On 02.11.2012, at 07:04, Braydon <ronin at braydon.com> wrote:

> I've been looking in the Wordpress.org plugin directory for the plugin
> that would be able to do this type of image resizing, with a "w" and "h"
> query string parameters, such as this:
> 
> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.jpg?w=500
> 
> And haven't been able to find this type of functionality, do you know
> where I can find this?
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ronin at braydon.com  Fri Nov  2 07:47:23 2012
From: ronin at braydon.com (Braydon)
Date: Fri, 02 Nov 2012 00:47:23 -0700
Subject: [wp-hackers] url image resizing
In-Reply-To: <41190270-9EF4-4424-BDE5-5617CE2A6479@gmail.com>
References: <50935446.7010709@braydon.com>
	<41190270-9EF4-4424-BDE5-5617CE2A6479@gmail.com>
Message-ID: <50937A8B.3080103@braydon.com>

Excellent, just what I need.

On 11/02/2012 12:31 AM, Tache Madalin wrote:
> Try googling for timthumb. Thats the script you want ;)
> 
> 
> On 02.11.2012, at 07:04, Braydon <ronin at braydon.com> wrote:
> 
>> I've been looking in the Wordpress.org plugin directory for the plugin
>> that would be able to do this type of image resizing, with a "w" and "h"
>> query string parameters, such as this:
>>
>> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.jpg?w=500
>>
>> And haven't been able to find this type of functionality, do you know
>> where I can find this?
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


-- 
Braydon Fuller
http://aweplanet.com/braydon

From frank at bueltge.de  Fri Nov  2 08:13:46 2012
From: frank at bueltge.de (Frank Bueltge)
Date: Fri, 2 Nov 2012 09:13:46 +0100
Subject: [wp-hackers] url image resizing
In-Reply-To: <50937A8B.3080103@braydon.com>
References: <50935446.7010709@braydon.com>
	<41190270-9EF4-4424-BDE5-5617CE2A6479@gmail.com>
	<50937A8B.3080103@braydon.com>
Message-ID: <CAH9UVvHhHGwBBvhTcUrOL84v7oNAG_H5LbQ2Mnopq_kkp0ZXrg@mail.gmail.com>

TimThumb was in the last time a security problem; only as hint.
Also you can use the possibilities from WordPress core and different
functions; see this repo for useable functions.
https://github.com/bueltge/WP-Image-Resizer
Best regards


On Fri, Nov 2, 2012 at 8:47 AM, Braydon <ronin at braydon.com> wrote:

> Excellent, just what I need.
>
> On 11/02/2012 12:31 AM, Tache Madalin wrote:
> > Try googling for timthumb. Thats the script you want ;)
> >
> >
> > On 02.11.2012, at 07:04, Braydon <ronin at braydon.com> wrote:
> >
> >> I've been looking in the Wordpress.org plugin directory for the plugin
> >> that would be able to do this type of image resizing, with a "w" and "h"
> >> query string parameters, such as this:
> >>
> >>
> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.jpg?w=500
> >>
> >> And haven't been able to find this type of functionality, do you know
> >> where I can find this?
> >>
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> --
> Braydon Fuller
> http://aweplanet.com/braydon
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dwain.maralack at gmail.com  Fri Nov  2 08:20:46 2012
From: dwain.maralack at gmail.com (Dwain Maralack)
Date: Fri, 2 Nov 2012 10:20:46 +0200
Subject: [wp-hackers] url image resizing
In-Reply-To: <CAH9UVvHhHGwBBvhTcUrOL84v7oNAG_H5LbQ2Mnopq_kkp0ZXrg@mail.gmail.com>
References: <50935446.7010709@braydon.com>
	<41190270-9EF4-4424-BDE5-5617CE2A6479@gmail.com>
	<50937A8B.3080103@braydon.com>
	<CAH9UVvHhHGwBBvhTcUrOL84v7oNAG_H5LbQ2Mnopq_kkp0ZXrg@mail.gmail.com>
Message-ID: <CAPvkqyNRchq0Y90WZiUPhMDpLFD6=OO6ScWvOsETPk-D5wniHw@mail.gmail.com>

Hi Braydon

I used http://codex.wordpress.org/Function_Reference/image_resize in a
recent project to much success. If you're not happy with Timthumb you can
always try that. It comes with WP core.

Regards
Dwain

On Fri, Nov 2, 2012 at 10:13 AM, Frank Bueltge <frank at bueltge.de> wrote:

> TimThumb was in the last time a security problem; only as hint.
> Also you can use the possibilities from WordPress core and different
> functions; see this repo for useable functions.
> https://github.com/bueltge/WP-Image-Resizer
> Best regards
>
>
> On Fri, Nov 2, 2012 at 8:47 AM, Braydon <ronin at braydon.com> wrote:
>
> > Excellent, just what I need.
> >
> > On 11/02/2012 12:31 AM, Tache Madalin wrote:
> > > Try googling for timthumb. Thats the script you want ;)
> > >
> > >
> > > On 02.11.2012, at 07:04, Braydon <ronin at braydon.com> wrote:
> > >
> > >> I've been looking in the Wordpress.org plugin directory for the plugin
> > >> that would be able to do this type of image resizing, with a "w" and
> "h"
> > >> query string parameters, such as this:
> > >>
> > >>
> >
> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.jpg?w=500
> > >>
> > >> And haven't been able to find this type of functionality, do you know
> > >> where I can find this?
> > >>
> > >>
> > >> _______________________________________________
> > >> wp-hackers mailing list
> > >> wp-hackers at lists.automattic.com
> > >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> > --
> > Braydon Fuller
> > http://aweplanet.com/braydon
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ronin at braydon.com  Fri Nov  2 08:52:34 2012
From: ronin at braydon.com (Braydon)
Date: Fri, 02 Nov 2012 01:52:34 -0700
Subject: [wp-hackers] url image resizing
In-Reply-To: <CAH9UVvHhHGwBBvhTcUrOL84v7oNAG_H5LbQ2Mnopq_kkp0ZXrg@mail.gmail.com>
References: <50935446.7010709@braydon.com>
	<41190270-9EF4-4424-BDE5-5617CE2A6479@gmail.com>
	<50937A8B.3080103@braydon.com>
	<CAH9UVvHhHGwBBvhTcUrOL84v7oNAG_H5LbQ2Mnopq_kkp0ZXrg@mail.gmail.com>
Message-ID: <509389D2.5030700@braydon.com>

Okay thanks, this is also a good option.

I did see some notes about there being a big security problem found, and
having to track down themes that were using it being difficult. I looks
like TimThumb cache can be set to the system /tmp and to be able to
disable external images, for better security. It also seems like this
would be possible to quickly overload a system by requesting all kinds
of different sizes of images based on the url. I'm not sure what could
be done about that other than apache modules, or some php that would
limit the number of resizes from an IP over a period of time.

On 11/02/2012 01:13 AM, Frank Bueltge wrote:
> TimThumb was in the last time a security problem; only as hint.
> Also you can use the possibilities from WordPress core and different
> functions; see this repo for useable functions.
> https://github.com/bueltge/WP-Image-Resizer
> Best regards
> 
> 
> On Fri, Nov 2, 2012 at 8:47 AM, Braydon <ronin at braydon.com> wrote:
> 
>> Excellent, just what I need.
>>
>> On 11/02/2012 12:31 AM, Tache Madalin wrote:
>>> Try googling for timthumb. Thats the script you want ;)
>>>
>>>
>>> On 02.11.2012, at 07:04, Braydon <ronin at braydon.com> wrote:
>>>
>>>> I've been looking in the Wordpress.org plugin directory for the plugin
>>>> that would be able to do this type of image resizing, with a "w" and "h"
>>>> query string parameters, such as this:
>>>>
>>>>
>> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.jpg?w=500
>>>>
>>>> And haven't been able to find this type of functionality, do you know
>>>> where I can find this?
>>>>
>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
>> --
>> Braydon Fuller
>> http://aweplanet.com/braydon
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


-- 
Braydon Fuller
http://aweplanet.com/braydon

From chip at chipbennett.net  Fri Nov  2 10:28:56 2012
From: chip at chipbennett.net (Chip Bennett)
Date: Fri, 2 Nov 2012 05:28:56 -0500
Subject: [wp-hackers] url image resizing
In-Reply-To: <50935446.7010709@braydon.com>
References: <50935446.7010709@braydon.com>
Message-ID: <CAPdLKqd7T5PsgYDar_wKHdZDbbr_oWXDZOQ+XwFq5jAzAh1eUw@mail.gmail.com>

Have a look at the add_image_size() core function instead.
On Nov 2, 2012 1:04 AM, "Braydon" <ronin at braydon.com> wrote:

> I've been looking in the Wordpress.org plugin directory for the plugin
> that would be able to do this type of image resizing, with a "w" and "h"
> query string parameters, such as this:
>
>
> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.jpg?w=500
>
> And haven't been able to find this type of functionality, do you know
> where I can find this?
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From bacon at neilpie.co.uk  Fri Nov  2 10:33:35 2012
From: bacon at neilpie.co.uk (Neil Pie)
Date: Fri, 2 Nov 2012 10:33:35 +0000
Subject: [wp-hackers] url image resizing
In-Reply-To: <CAPdLKqd7T5PsgYDar_wKHdZDbbr_oWXDZOQ+XwFq5jAzAh1eUw@mail.gmail.com>
References: <50935446.7010709@braydon.com>
	<CAPdLKqd7T5PsgYDar_wKHdZDbbr_oWXDZOQ+XwFq5jAzAh1eUw@mail.gmail.com>
Message-ID: <2580BD1A-A572-4EC4-9336-FA61748339B7@neilpie.co.uk>

I've always used add_image_size() but have never been too happy with the way it creates multiple versions of every image with no way of preventing this.

wrapping image_resize() in a conditional and then creating images 'on the fly' seems to be a solution to this, but is there any reason that add_image_size is a preferable method?


On 2 Nov 2012, at 10:28, Chip Bennett wrote:

> Have a look at the add_image_size() core function instead.
> On Nov 2, 2012 1:04 AM, "Braydon" <ronin at braydon.com> wrote:
> 
>> I've been looking in the Wordpress.org plugin directory for the plugin
>> that would be able to do this type of image resizing, with a "w" and "h"
>> query string parameters, such as this:
>> 
>> 
>> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.jpg?w=500
>> 
>> And haven't been able to find this type of functionality, do you know
>> where I can find this?
>> 
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From ronin at braydon.com  Fri Nov  2 10:56:26 2012
From: ronin at braydon.com (Braydon)
Date: Fri, 02 Nov 2012 03:56:26 -0700
Subject: [wp-hackers] url image resizing
In-Reply-To: <2580BD1A-A572-4EC4-9336-FA61748339B7@neilpie.co.uk>
References: <50935446.7010709@braydon.com>
	<CAPdLKqd7T5PsgYDar_wKHdZDbbr_oWXDZOQ+XwFq5jAzAh1eUw@mail.gmail.com>
	<2580BD1A-A572-4EC4-9336-FA61748339B7@neilpie.co.uk>
Message-ID: <5093A6DA.1070204@braydon.com>

When using add_image_size with over 15 sizes when no image would use all
of them is when it seems not ideal, especially when needing to change
those sizes after they have been uploaded. The Dynamic Image Resizer by
Otto might help in that type of situation. Though there doesn't seem to
be a clear way to delete resize images without using bash. I find the
image_resize, with conditional, and the plugin WP Image Resizer by
Frank, to be preferable and flexible, and would have cleaner code. Since
the parameters of the image would be in the same place that the image is
being used, as usually add_image_size is used someplace else, such as
functions.php or another initiation point.

I'm in need for image resizing from JavaScript, which could be probably
handled with a series of predefined increments set in PHP, so as to not
have too many options resources exposed. Having every size available is
refreshing, though.

On 11/02/2012 03:33 AM, Neil Pie wrote:
> I've always used add_image_size() but have never been too happy with the way it creates multiple versions of every image with no way of preventing this.
> 
> wrapping image_resize() in a conditional and then creating images 'on the fly' seems to be a solution to this, but is there any reason that add_image_size is a preferable method?
> 
> 
> On 2 Nov 2012, at 10:28, Chip Bennett wrote:
> 
>> Have a look at the add_image_size() core function instead.
>> On Nov 2, 2012 1:04 AM, "Braydon" <ronin at braydon.com> wrote:
>>
>>> I've been looking in the Wordpress.org plugin directory for the plugin
>>> that would be able to do this type of image resizing, with a "w" and "h"
>>> query string parameters, such as this:
>>>
>>>
>>> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.jpg?w=500
>>>
>>> And haven't been able to find this type of functionality, do you know
>>> where I can find this?
>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


-- 
Braydon Fuller
http://aweplanet.com/braydon

From chris at lod.com  Fri Nov  2 15:20:22 2012
From: chris at lod.com (chris mccoy)
Date: Fri, 2 Nov 2012 11:20:22 -0400
Subject: [wp-hackers] url image resizing
In-Reply-To: <5093A6DA.1070204@braydon.com>
References: <50935446.7010709@braydon.com>
	<CAPdLKqd7T5PsgYDar_wKHdZDbbr_oWXDZOQ+XwFq5jAzAh1eUw@mail.gmail.com>
	<2580BD1A-A572-4EC4-9336-FA61748339B7@neilpie.co.uk>
	<5093A6DA.1070204@braydon.com>
Message-ID: <000001cdb90d$955d1030$c0173090$@lod.com>

Ever thought about using regenerate thumbnails plugin incase you change
sizes?



-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Braydon
Sent: November 2, 2012 6:56 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] url image resizing

When using add_image_size with over 15 sizes when no image would use all of
them is when it seems not ideal, especially when needing to change those
sizes after they have been uploaded. The Dynamic Image Resizer by Otto might
help in that type of situation. Though there doesn't seem to be a clear way
to delete resize images without using bash. I find the image_resize, with
conditional, and the plugin WP Image Resizer by Frank, to be preferable and
flexible, and would have cleaner code. Since the parameters of the image
would be in the same place that the image is being used, as usually
add_image_size is used someplace else, such as functions.php or another
initiation point.

I'm in need for image resizing from JavaScript, which could be probably
handled with a series of predefined increments set in PHP, so as to not have
too many options resources exposed. Having every size available is
refreshing, though.

On 11/02/2012 03:33 AM, Neil Pie wrote:
> I've always used add_image_size() but have never been too happy with the
way it creates multiple versions of every image with no way of preventing
this.
> 
> wrapping image_resize() in a conditional and then creating images 'on the
fly' seems to be a solution to this, but is there any reason that
add_image_size is a preferable method?
> 
> 
> On 2 Nov 2012, at 10:28, Chip Bennett wrote:
> 
>> Have a look at the add_image_size() core function instead.
>> On Nov 2, 2012 1:04 AM, "Braydon" <ronin at braydon.com> wrote:
>>
>>> I've been looking in the Wordpress.org plugin directory for the 
>>> plugin that would be able to do this type of image resizing, with a "w"
and "h"
>>> query string parameters, such as this:
>>>
>>>
>>> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.j
>>> pg?w=500
>>>
>>> And haven't been able to find this type of functionality, do you 
>>> know where I can find this?
>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


--
Braydon Fuller
http://aweplanet.com/braydon
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From mailing at markoheijnen.nl  Fri Nov  2 15:38:13 2012
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Fri, 2 Nov 2012 11:38:13 -0400
Subject: [wp-hackers] url image resizing
In-Reply-To: <000001cdb90d$955d1030$c0173090$@lod.com>
References: <50935446.7010709@braydon.com>
	<CAPdLKqd7T5PsgYDar_wKHdZDbbr_oWXDZOQ+XwFq5jAzAh1eUw@mail.gmail.com>
	<2580BD1A-A572-4EC4-9336-FA61748339B7@neilpie.co.uk>
	<5093A6DA.1070204@braydon.com>
	<000001cdb90d$955d1030$c0173090$@lod.com>
Message-ID: <5F145BF0-CD00-4C8A-81B3-DADCFFAD5836@markoheijnen.nl>

You can use something like WPThumb. With that plugin you can create your own sizes of an image on the fly.
I never used it but as far as I can tell it only create images by your own PHP implementation. So no direct calls.

Also in 3.5 WordPress image manipulation code has completely been rewritten/restructured.
So when that will be released in 3.5 you can create a new image in just a few lines of code. Some write up you can find at http://markoheijnen.com/wordpress-new-image-manipulation/.
We are still busy with getting the code in the way we want but it should be awesome to have in WordPress core. Also there are some future plans to make it even more easier.

Marko

Op 2 nov. 2012, om 11:20 heeft "chris mccoy" <chris at lod.com> het volgende geschreven:

> Ever thought about using regenerate thumbnails plugin incase you change
> sizes?
> 
> 
> 
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Braydon
> Sent: November 2, 2012 6:56 AM
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] url image resizing
> 
> When using add_image_size with over 15 sizes when no image would use all of
> them is when it seems not ideal, especially when needing to change those
> sizes after they have been uploaded. The Dynamic Image Resizer by Otto might
> help in that type of situation. Though there doesn't seem to be a clear way
> to delete resize images without using bash. I find the image_resize, with
> conditional, and the plugin WP Image Resizer by Frank, to be preferable and
> flexible, and would have cleaner code. Since the parameters of the image
> would be in the same place that the image is being used, as usually
> add_image_size is used someplace else, such as functions.php or another
> initiation point.
> 
> I'm in need for image resizing from JavaScript, which could be probably
> handled with a series of predefined increments set in PHP, so as to not have
> too many options resources exposed. Having every size available is
> refreshing, though.
> 
> On 11/02/2012 03:33 AM, Neil Pie wrote:
>> I've always used add_image_size() but have never been too happy with the
> way it creates multiple versions of every image with no way of preventing
> this.
>> 
>> wrapping image_resize() in a conditional and then creating images 'on the
> fly' seems to be a solution to this, but is there any reason that
> add_image_size is a preferable method?
>> 
>> 
>> On 2 Nov 2012, at 10:28, Chip Bennett wrote:
>> 
>>> Have a look at the add_image_size() core function instead.
>>> On Nov 2, 2012 1:04 AM, "Braydon" <ronin at braydon.com> wrote:
>>> 
>>>> I've been looking in the Wordpress.org plugin directory for the 
>>>> plugin that would be able to do this type of image resizing, with a "w"
> and "h"
>>>> query string parameters, such as this:
>>>> 
>>>> 
>>>> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.j
>>>> pg?w=500
>>>> 
>>>> And haven't been able to find this type of functionality, do you 
>>>> know where I can find this?
>>>> 
>>>> 
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> --
> Braydon Fuller
> http://aweplanet.com/braydon
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From erick at ethitter.com  Fri Nov  2 17:15:19 2012
From: erick at ethitter.com (Erick Hitter)
Date: Fri, 2 Nov 2012 13:15:19 -0400
Subject: [wp-hackers] url image resizing
In-Reply-To: <5F145BF0-CD00-4C8A-81B3-DADCFFAD5836@markoheijnen.nl>
References: <50935446.7010709@braydon.com>
	<CAPdLKqd7T5PsgYDar_wKHdZDbbr_oWXDZOQ+XwFq5jAzAh1eUw@mail.gmail.com>
	<2580BD1A-A572-4EC4-9336-FA61748339B7@neilpie.co.uk>
	<5093A6DA.1070204@braydon.com>
	<000001cdb90d$955d1030$c0173090$@lod.com>
	<5F145BF0-CD00-4C8A-81B3-DADCFFAD5836@markoheijnen.nl>
Message-ID: <CADnbRqHQmuW5e-ijq22fb2jeeeWupjWnuyzz801woJ1wXjkadQ@mail.gmail.com>

If you're using Jetpack, check out
http://developer.wordpress.com/docs/photon/ and keep an eye out for the 2.0
release.

Erick


On Fri, Nov 2, 2012 at 11:38 AM, Marko Heijnen <mailing at markoheijnen.nl>wrote:

> You can use something like WPThumb. With that plugin you can create your
> own sizes of an image on the fly.
> I never used it but as far as I can tell it only create images by your own
> PHP implementation. So no direct calls.
>
> Also in 3.5 WordPress image manipulation code has completely been
> rewritten/restructured.
> So when that will be released in 3.5 you can create a new image in just a
> few lines of code. Some write up you can find at
> http://markoheijnen.com/wordpress-new-image-manipulation/.
> We are still busy with getting the code in the way we want but it should
> be awesome to have in WordPress core. Also there are some future plans to
> make it even more easier.
>
> Marko
>
> Op 2 nov. 2012, om 11:20 heeft "chris mccoy" <chris at lod.com> het volgende
> geschreven:
>
> > Ever thought about using regenerate thumbnails plugin incase you change
> > sizes?
> >
> >
> >
> > -----Original Message-----
> > From: wp-hackers-bounces at lists.automattic.com
> > [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Braydon
> > Sent: November 2, 2012 6:56 AM
> > To: wp-hackers at lists.automattic.com
> > Subject: Re: [wp-hackers] url image resizing
> >
> > When using add_image_size with over 15 sizes when no image would use all
> of
> > them is when it seems not ideal, especially when needing to change those
> > sizes after they have been uploaded. The Dynamic Image Resizer by Otto
> might
> > help in that type of situation. Though there doesn't seem to be a clear
> way
> > to delete resize images without using bash. I find the image_resize, with
> > conditional, and the plugin WP Image Resizer by Frank, to be preferable
> and
> > flexible, and would have cleaner code. Since the parameters of the image
> > would be in the same place that the image is being used, as usually
> > add_image_size is used someplace else, such as functions.php or another
> > initiation point.
> >
> > I'm in need for image resizing from JavaScript, which could be probably
> > handled with a series of predefined increments set in PHP, so as to not
> have
> > too many options resources exposed. Having every size available is
> > refreshing, though.
> >
> > On 11/02/2012 03:33 AM, Neil Pie wrote:
> >> I've always used add_image_size() but have never been too happy with the
> > way it creates multiple versions of every image with no way of preventing
> > this.
> >>
> >> wrapping image_resize() in a conditional and then creating images 'on
> the
> > fly' seems to be a solution to this, but is there any reason that
> > add_image_size is a preferable method?
> >>
> >>
> >> On 2 Nov 2012, at 10:28, Chip Bennett wrote:
> >>
> >>> Have a look at the add_image_size() core function instead.
> >>> On Nov 2, 2012 1:04 AM, "Braydon" <ronin at braydon.com> wrote:
> >>>
> >>>> I've been looking in the Wordpress.org plugin directory for the
> >>>> plugin that would be able to do this type of image resizing, with a
> "w"
> > and "h"
> >>>> query string parameters, such as this:
> >>>>
> >>>>
> >>>> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.j
> >>>> pg?w=500
> >>>>
> >>>> And haven't been able to find this type of functionality, do you
> >>>> know where I can find this?
> >>>>
> >>>>
> >>>> _______________________________________________
> >>>> wp-hackers mailing list
> >>>> wp-hackers at lists.automattic.com
> >>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>>
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> > --
> > Braydon Fuller
> > http://aweplanet.com/braydon
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From andrew.bartel at gmail.com  Fri Nov  2 18:32:28 2012
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Fri, 2 Nov 2012 11:32:28 -0700
Subject: [wp-hackers] WordPress E-Commerce
Message-ID: <CAJnHr4i=t_48igT-9MegqeMGGuk1i-nRhygwvXwpRQ1-=_6-kg@mail.gmail.com>

We've been given a broad reach to redesign a current WordPress E-Commerce
site and I'd like to know what everyone's opinion is on the leading
ecommerce plugins for WordPress.  What do you recommend to your clients?
We're going to write a theme for scratch, I think, but if you have other
suggestions, I'd be very happy to hear them.  Is WordPress still an
acceptable medium for modern day ecommerce or should we strictly be using
magento or something based on yii/cake/etc?

Thanks,

Andrew

From info at bluechives.com  Fri Nov  2 18:36:33 2012
From: info at bluechives.com (Blue Chives)
Date: Fri, 2 Nov 2012 18:36:33 +0000
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <CAJnHr4i=t_48igT-9MegqeMGGuk1i-nRhygwvXwpRQ1-=_6-kg@mail.gmail.com>
References: <CAJnHr4i=t_48igT-9MegqeMGGuk1i-nRhygwvXwpRQ1-=_6-kg@mail.gmail.com>
Message-ID: <C003D504-5DE8-4553-AB8F-7EC5310FDD44@bluechives.com>

Depends on the site, audience, location and any legal / partner requirements.

Without knowing these it's difficult to say.

Where WP works it does however work well.

Cheers
John

On 2 Nov 2012, at 18:32, Andrew Bartel <andrew.bartel at gmail.com> wrote:

> We've been given a broad reach to redesign a current WordPress E-Commerce
> site and I'd like to know what everyone's opinion is on the leading
> ecommerce plugins for WordPress.  What do you recommend to your clients?
> We're going to write a theme for scratch, I think, but if you have other
> suggestions, I'd be very happy to hear them.  Is WordPress still an
> acceptable medium for modern day ecommerce or should we strictly be using
> magento or something based on yii/cake/etc?
> 
> Thanks,
> 
> Andrew
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From johnbillion+wp at gmail.com  Fri Nov  2 18:55:00 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 2 Nov 2012 18:55:00 +0000
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <CAJnHr4i=t_48igT-9MegqeMGGuk1i-nRhygwvXwpRQ1-=_6-kg@mail.gmail.com>
References: <CAJnHr4i=t_48igT-9MegqeMGGuk1i-nRhygwvXwpRQ1-=_6-kg@mail.gmail.com>
Message-ID: <CAOqAKWB7Px92jh2TjiDMiYiZ6X+cAzZ5agLfkW5Tkm1ERebwxg@mail.gmail.com>

WordPress is a very capable medium for e-commerce; more so than ever,
in fact. Three of the most popular e-commerce plugins currently are:

 * JigoShop - http://wordpress.org/extend/plugins/jigoshop/
 * WooCommerce - http://www.woothemes.com/woocommerce/
 * WP e-Commerce - http://wordpress.org/extend/plugins/wp-e-commerce/

They're all fully-featured, actively developed, and popular. You
should take a look at each and see which ones fit your clients' needs.

John

On 2 November 2012 18:32, Andrew Bartel <andrew.bartel at gmail.com> wrote:
> We've been given a broad reach to redesign a current WordPress E-Commerce
> site and I'd like to know what everyone's opinion is on the leading
> ecommerce plugins for WordPress.  What do you recommend to your clients?
> We're going to write a theme for scratch, I think, but if you have other
> suggestions, I'd be very happy to hear them.  Is WordPress still an
> acceptable medium for modern day ecommerce or should we strictly be using
> magento or something based on yii/cake/etc?
>
> Thanks,
>
> Andrew
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From shastaw at gmail.com  Fri Nov  2 18:58:21 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Fri, 2 Nov 2012 11:58:21 -0700
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <CAJnHr4i=t_48igT-9MegqeMGGuk1i-nRhygwvXwpRQ1-=_6-kg@mail.gmail.com>
References: <CAJnHr4i=t_48igT-9MegqeMGGuk1i-nRhygwvXwpRQ1-=_6-kg@mail.gmail.com>
Message-ID: <CAGguiged67J+fzWHMJnjFNOGifQoWc3ua_YbqDuJHjSd3DVfzA@mail.gmail.com>

On Fri, Nov 2, 2012 at 11:32 AM, Andrew Bartel <andrew.bartel at gmail.com>wrote:

> We've been given a broad reach to redesign a current WordPress E-Commerce
> site and I'd like to know what everyone's opinion is on the leading
> ecommerce plugins for WordPress.  What do you recommend to your clients?
>

I've used both WP E-commerce and Cart66.  The latter has a nice clean code
base that's easy to work with, but I encountered a flaw that was fatal for
my purposes: if the purchase of an electronic download fails, the buyer
still gets the link to the product.  That was maybe six months ago and at
that point they didn't seem to feel it was a high priority.  It was a
deal-breaker for me, and also made me wonder what else might be odd.

WP E-commerce does everything I need it to do, but as a developer I find
the code base horrifying. The main place it causes me active problems are
that the failure to combine and minify css and js leads to a larger than
necessary number of http requests (and they don't limit them just to pages
running the store) and it is a plug in where you truly want to make sure
you backup the database and files before every upgrade, because there have
been several that roached sites.

Even so, WP E-commerce is my current choice, because it does what I need.


> Is WordPress still an
> acceptable medium for modern day ecommerce or should we strictly be using
> magento or something based on yii/cake/etc?
>

That's not an either/or question.  e.g.
http://www.magentocommerce.com/magento-connect/wordpress-integration.html

Wordpress is your site development platform/CMS, while Magento or a plug-in
runs your shopping cart.  Integration will vary with the plug-in and theme.

- Shasta

From juma at beedragon.com  Fri Nov  2 19:10:52 2012
From: juma at beedragon.com (juma)
Date: Fri, 2 Nov 2012 15:10:52 -0400
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <mailman.1635.1351882722.1480.wp-hackers@lists.automattic.com>
References: <mailman.1635.1351882722.1480.wp-hackers@lists.automattic.com>
Message-ID: <DA34DA41-CB5B-4EE1-BCD7-3E4CCD4EA8DD@beedragon.com>

I have been using Shopp (http://shopplugin.net) for a few years and would recommend it highly. I find it to be very developer friendly (nice code, hooks, filters, plays nice with WordPress API) and to have most of the features needed by my clients. It is very flexible and integrates nicely into most WordPress themes. Not free, but definitely worth it. 

Lori

> From: Andrew Bartel <andrew.bartel at gmail.com>
> Subject: [wp-hackers] WordPress E-Commerce
> Date: November 2, 2012 2:32:28 PM EDT
> To: wp-hackers at lists.automattic.com
> Reply-To: wp-hackers at lists.automattic.com
> 
> 
> We've been given a broad reach to redesign a current WordPress E-Commerce
> site and I'd like to know what everyone's opinion is on the leading
> ecommerce plugins for WordPress.  What do you recommend to your clients?
> We're going to write a theme for scratch, I think, but if you have other
> suggestions, I'd be very happy to hear them.  Is WordPress still an
> acceptable medium for modern day ecommerce or should we strictly be using
> magento or something based on yii/cake/etc?
> 
> Thanks,
> 
> Andrew

From joelfisher at gmail.com  Fri Nov  2 19:17:07 2012
From: joelfisher at gmail.com (Joel Fisher)
Date: Fri, 2 Nov 2012 15:17:07 -0400
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <DA34DA41-CB5B-4EE1-BCD7-3E4CCD4EA8DD@beedragon.com>
References: <mailman.1635.1351882722.1480.wp-hackers@lists.automattic.com>
	<DA34DA41-CB5B-4EE1-BCD7-3E4CCD4EA8DD@beedragon.com>
Message-ID: <CAEitD+rPnEX+7wmdBzACzF4DXFTDza46DRdbFD+YRMHTZygnAQ@mail.gmail.com>

WooCommerce is super solid.

Free, but they charge for certain plugins. Best I have used and I use
WordPress ALOT.




joel.fisher
www.flushinc.com

Linkedin: http://www.linkedin.com/in/jfisher
Follow: www.twitter.com/joelmoney



On Fri, Nov 2, 2012 at 3:10 PM, juma <juma at beedragon.com> wrote:

> I have been using Shopp (http://shopplugin.net) for a few years and would
> recommend it highly. I find it to be very developer friendly (nice code,
> hooks, filters, plays nice with WordPress API) and to have most of the
> features needed by my clients. It is very flexible and integrates nicely
> into most WordPress themes. Not free, but definitely worth it.
>
> Lori
>
> > From: Andrew Bartel <andrew.bartel at gmail.com>
> > Subject: [wp-hackers] WordPress E-Commerce
> > Date: November 2, 2012 2:32:28 PM EDT
> > To: wp-hackers at lists.automattic.com
> > Reply-To: wp-hackers at lists.automattic.com
> >
> >
> > We've been given a broad reach to redesign a current WordPress E-Commerce
> > site and I'd like to know what everyone's opinion is on the leading
> > ecommerce plugins for WordPress.  What do you recommend to your clients?
> > We're going to write a theme for scratch, I think, but if you have other
> > suggestions, I'd be very happy to hear them.  Is WordPress still an
> > acceptable medium for modern day ecommerce or should we strictly be using
> > magento or something based on yii/cake/etc?
> >
> > Thanks,
> >
> > Andrew
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jnolte at getmoxied.net  Fri Nov  2 20:02:08 2012
From: jnolte at getmoxied.net (Jeffrey Nolte)
Date: Fri, 2 Nov 2012 16:02:08 -0400
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <CAEitD+rPnEX+7wmdBzACzF4DXFTDza46DRdbFD+YRMHTZygnAQ@mail.gmail.com>
References: <mailman.1635.1351882722.1480.wp-hackers@lists.automattic.com>
	<DA34DA41-CB5B-4EE1-BCD7-3E4CCD4EA8DD@beedragon.com>
	<CAEitD+rPnEX+7wmdBzACzF4DXFTDza46DRdbFD+YRMHTZygnAQ@mail.gmail.com>
Message-ID: <16631888-7A83-41F1-A5FA-257CE1F005FE@getmoxied.net>

I agree with Lori on Shopp.  We use it a bunch and have been able to really customize the cart, checkout and overall shopping experience to our needs using all of the hooks and filters.  We have ran into a couple snags along the way and must say it pays to have such reliable support especially when you are dealing with a clients site which is literally making them money.  The documentation is also really great.

I have also heard great things about woocommerce but have not used it.




Jeffrey Nolte
Moxie Media Group, Inc.
594 Broadway #305
New York, NY 10012



On Nov 2, 2012, at 3:17 PM, Joel Fisher <joelfisher at gmail.com> wrote:

> WooCommerce is super solid.
> 
> Free, but they charge for certain plugins. Best I have used and I use
> WordPress ALOT.
> 
> 
> 
> 
> joel.fisher
> www.flushinc.com
> 
> Linkedin: http://www.linkedin.com/in/jfisher
> Follow: www.twitter.com/joelmoney
> 
> 
> 
> On Fri, Nov 2, 2012 at 3:10 PM, juma <juma at beedragon.com> wrote:
> 
>> I have been using Shopp (http://shopplugin.net) for a few years and would
>> recommend it highly. I find it to be very developer friendly (nice code,
>> hooks, filters, plays nice with WordPress API) and to have most of the
>> features needed by my clients. It is very flexible and integrates nicely
>> into most WordPress themes. Not free, but definitely worth it.
>> 
>> Lori
>> 
>>> From: Andrew Bartel <andrew.bartel at gmail.com>
>>> Subject: [wp-hackers] WordPress E-Commerce
>>> Date: November 2, 2012 2:32:28 PM EDT
>>> To: wp-hackers at lists.automattic.com
>>> Reply-To: wp-hackers at lists.automattic.com
>>> 
>>> 
>>> We've been given a broad reach to redesign a current WordPress E-Commerce
>>> site and I'd like to know what everyone's opinion is on the leading
>>> ecommerce plugins for WordPress.  What do you recommend to your clients?
>>> We're going to write a theme for scratch, I think, but if you have other
>>> suggestions, I'd be very happy to hear them.  Is WordPress still an
>>> acceptable medium for modern day ecommerce or should we strictly be using
>>> magento or something based on yii/cake/etc?
>>> 
>>> Thanks,
>>> 
>>> Andrew
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jnolte at getmoxied.net  Fri Nov  2 20:10:29 2012
From: jnolte at getmoxied.net (Jeffrey Nolte)
Date: Fri, 2 Nov 2012 16:10:29 -0400
Subject: [wp-hackers] url image resizing
In-Reply-To: <CADnbRqHQmuW5e-ijq22fb2jeeeWupjWnuyzz801woJ1wXjkadQ@mail.gmail.com>
References: <50935446.7010709@braydon.com>
	<CAPdLKqd7T5PsgYDar_wKHdZDbbr_oWXDZOQ+XwFq5jAzAh1eUw@mail.gmail.com>
	<2580BD1A-A572-4EC4-9336-FA61748339B7@neilpie.co.uk>
	<5093A6DA.1070204@braydon.com>
	<000001cdb90d$955d1030$c0173090$@lod.com>
	<5F145BF0-CD00-4C8A-81B3-DADCFFAD5836@markoheijnen.nl>
	<CADnbRqHQmuW5e-ijq22fb2jeeeWupjWnuyzz801woJ1wXjkadQ@mail.gmail.com>
Message-ID: <806E8234-5143-4972-AD02-3CDCF78E2BCD@getmoxied.net>

src.sencha.io is also a really nice tool that is free and works just like the photon link that Erick had sent out.

Implementation is a breeze and also works based on device so if you need to automate sizing of images say for a responsive site this would work really well.

http://docs.sencha.io/current/index.html#!/guide/src

Jeffrey Nolte
Moxie Media Group, Inc.
594 Broadway #305
New York, NY 10012

On Nov 2, 2012, at 1:15 PM, Erick Hitter <erick at ethitter.com> wrote:

> If you're using Jetpack, check out
> http://developer.wordpress.com/docs/photon/ and keep an eye out for the 2.0
> release.
> 
> Erick
> 
> 
> On Fri, Nov 2, 2012 at 11:38 AM, Marko Heijnen <mailing at markoheijnen.nl>wrote:
> 
>> You can use something like WPThumb. With that plugin you can create your
>> own sizes of an image on the fly.
>> I never used it but as far as I can tell it only create images by your own
>> PHP implementation. So no direct calls.
>> 
>> Also in 3.5 WordPress image manipulation code has completely been
>> rewritten/restructured.
>> So when that will be released in 3.5 you can create a new image in just a
>> few lines of code. Some write up you can find at
>> http://markoheijnen.com/wordpress-new-image-manipulation/.
>> We are still busy with getting the code in the way we want but it should
>> be awesome to have in WordPress core. Also there are some future plans to
>> make it even more easier.
>> 
>> Marko
>> 
>> Op 2 nov. 2012, om 11:20 heeft "chris mccoy" <chris at lod.com> het volgende
>> geschreven:
>> 
>>> Ever thought about using regenerate thumbnails plugin incase you change
>>> sizes?
>>> 
>>> 
>>> 
>>> -----Original Message-----
>>> From: wp-hackers-bounces at lists.automattic.com
>>> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Braydon
>>> Sent: November 2, 2012 6:56 AM
>>> To: wp-hackers at lists.automattic.com
>>> Subject: Re: [wp-hackers] url image resizing
>>> 
>>> When using add_image_size with over 15 sizes when no image would use all
>> of
>>> them is when it seems not ideal, especially when needing to change those
>>> sizes after they have been uploaded. The Dynamic Image Resizer by Otto
>> might
>>> help in that type of situation. Though there doesn't seem to be a clear
>> way
>>> to delete resize images without using bash. I find the image_resize, with
>>> conditional, and the plugin WP Image Resizer by Frank, to be preferable
>> and
>>> flexible, and would have cleaner code. Since the parameters of the image
>>> would be in the same place that the image is being used, as usually
>>> add_image_size is used someplace else, such as functions.php or another
>>> initiation point.
>>> 
>>> I'm in need for image resizing from JavaScript, which could be probably
>>> handled with a series of predefined increments set in PHP, so as to not
>> have
>>> too many options resources exposed. Having every size available is
>>> refreshing, though.
>>> 
>>> On 11/02/2012 03:33 AM, Neil Pie wrote:
>>>> I've always used add_image_size() but have never been too happy with the
>>> way it creates multiple versions of every image with no way of preventing
>>> this.
>>>> 
>>>> wrapping image_resize() in a conditional and then creating images 'on
>> the
>>> fly' seems to be a solution to this, but is there any reason that
>>> add_image_size is a preferable method?
>>>> 
>>>> 
>>>> On 2 Nov 2012, at 10:28, Chip Bennett wrote:
>>>> 
>>>>> Have a look at the add_image_size() core function instead.
>>>>> On Nov 2, 2012 1:04 AM, "Braydon" <ronin at braydon.com> wrote:
>>>>> 
>>>>>> I've been looking in the Wordpress.org plugin directory for the
>>>>>> plugin that would be able to do this type of image resizing, with a
>> "w"
>>> and "h"
>>>>>> query string parameters, such as this:
>>>>>> 
>>>>>> 
>>>>>> http://en.blog.files.wordpress.com/2012/10/your-music-your-website.j
>>>>>> pg?w=500
>>>>>> 
>>>>>> And haven't been able to find this type of functionality, do you
>>>>>> know where I can find this?
>>>>>> 
>>>>>> 
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers at lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>> 
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>> 
>>> 
>>> --
>>> Braydon Fuller
>>> http://aweplanet.com/braydon
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From hal at burgiss.net  Fri Nov  2 20:21:05 2012
From: hal at burgiss.net (Hal Burgiss)
Date: Fri, 2 Nov 2012 16:21:05 -0400
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <16631888-7A83-41F1-A5FA-257CE1F005FE@getmoxied.net>
References: <mailman.1635.1351882722.1480.wp-hackers@lists.automattic.com>
	<DA34DA41-CB5B-4EE1-BCD7-3E4CCD4EA8DD@beedragon.com>
	<CAEitD+rPnEX+7wmdBzACzF4DXFTDza46DRdbFD+YRMHTZygnAQ@mail.gmail.com>
	<16631888-7A83-41F1-A5FA-257CE1F005FE@getmoxied.net>
Message-ID: <CAEizahLW4xJQCVZSYcrctbDnKFcV_RSwvJi174w2UCf2xrF=+g@mail.gmail.com>

It just depends. If its pretty basic stuff, WP + plugin is a very viable
solution and quicker to get out the door. Plus its WP ;-) But Magento is
going to have a bunch more purely ecommerce options (but less CMS
features). Plus Magento extensions are kinda like WP plugins, there's a
whole ecosystem there. Example: we have a client that has multiple
warehouses. They require items shipped from closest warehouse, with freight
calculated accordingly. Magento extension available (paid though).

Most experience with WP-eCommerce. Mixed feelings with that.  Next
opportunity will be shopp.

On Fri, Nov 2, 2012 at 4:02 PM, Jeffrey Nolte <jnolte at getmoxied.net> wrote:

> I agree with Lori on Shopp.  We use it a bunch and have been able to
> really customize the cart, checkout and overall shopping experience to our
> needs using all of the hooks and filters.  We have ran into a couple snags
> along the way and must say it pays to have such reliable support especially
> when you are dealing with a clients site which is literally making them
> money.  The documentation is also really great.
>
> I have also heard great things about woocommerce but have not used it.
>
>
>
>
> Jeffrey Nolte
> Moxie Media Group, Inc.
> 594 Broadway #305
> New York, NY 10012
>
>
>
> On Nov 2, 2012, at 3:17 PM, Joel Fisher <joelfisher at gmail.com> wrote:
>
> > WooCommerce is super solid.
> >
> > Free, but they charge for certain plugins. Best I have used and I use
> > WordPress ALOT.
> >
> >
> >
> >
> > joel.fisher
> > www.flushinc.com
> >
> > Linkedin: http://www.linkedin.com/in/jfisher
> > Follow: www.twitter.com/joelmoney
> >
> >
> >
> > On Fri, Nov 2, 2012 at 3:10 PM, juma <juma at beedragon.com> wrote:
> >
> >> I have been using Shopp (http://shopplugin.net) for a few years and
> would
> >> recommend it highly. I find it to be very developer friendly (nice code,
> >> hooks, filters, plays nice with WordPress API) and to have most of the
> >> features needed by my clients. It is very flexible and integrates nicely
> >> into most WordPress themes. Not free, but definitely worth it.
> >>
> >> Lori
> >>
> >>> From: Andrew Bartel <andrew.bartel at gmail.com>
> >>> Subject: [wp-hackers] WordPress E-Commerce
> >>> Date: November 2, 2012 2:32:28 PM EDT
> >>> To: wp-hackers at lists.automattic.com
> >>> Reply-To: wp-hackers at lists.automattic.com
> >>>
> >>>
> >>> We've been given a broad reach to redesign a current WordPress
> E-Commerce
> >>> site and I'd like to know what everyone's opinion is on the leading
> >>> ecommerce plugins for WordPress.  What do you recommend to your
> clients?
> >>> We're going to write a theme for scratch, I think, but if you have
> other
> >>> suggestions, I'd be very happy to hear them.  Is WordPress still an
> >>> acceptable medium for modern day ecommerce or should we strictly be
> using
> >>> magento or something based on yii/cake/etc?
> >>>
> >>> Thanks,
> >>>
> >>> Andrew
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Hal

From andrew.bartel at gmail.com  Fri Nov  2 20:51:22 2012
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Fri, 2 Nov 2012 13:51:22 -0700
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <CAEizahLW4xJQCVZSYcrctbDnKFcV_RSwvJi174w2UCf2xrF=+g@mail.gmail.com>
References: <mailman.1635.1351882722.1480.wp-hackers@lists.automattic.com>
	<DA34DA41-CB5B-4EE1-BCD7-3E4CCD4EA8DD@beedragon.com>
	<CAEitD+rPnEX+7wmdBzACzF4DXFTDza46DRdbFD+YRMHTZygnAQ@mail.gmail.com>
	<16631888-7A83-41F1-A5FA-257CE1F005FE@getmoxied.net>
	<CAEizahLW4xJQCVZSYcrctbDnKFcV_RSwvJi174w2UCf2xrF=+g@mail.gmail.com>
Message-ID: <CAJnHr4heJFV++VCZVGuXFmTz1fp9hQvEM1UregyU48Q7nPDkug@mail.gmail.com>

Wow, thanks for the multitude of responses.

I should have been clearer, we've been using wpec, and I'm pretty over it.
 I've done a lot of extending/writing custom plugins while maintaining a
safe update path and it hasn't been easy.

I'll check out both Shopp and woocommerce.

Thanks,

Andrew


On Fri, Nov 2, 2012 at 1:21 PM, Hal Burgiss <hal at burgiss.net> wrote:

> It just depends. If its pretty basic stuff, WP + plugin is a very viable
> solution and quicker to get out the door. Plus its WP ;-) But Magento is
> going to have a bunch more purely ecommerce options (but less CMS
> features). Plus Magento extensions are kinda like WP plugins, there's a
> whole ecosystem there. Example: we have a client that has multiple
> warehouses. They require items shipped from closest warehouse, with freight
> calculated accordingly. Magento extension available (paid though).
>
> Most experience with WP-eCommerce. Mixed feelings with that.  Next
> opportunity will be shopp.
>
> On Fri, Nov 2, 2012 at 4:02 PM, Jeffrey Nolte <jnolte at getmoxied.net>
> wrote:
>
> > I agree with Lori on Shopp.  We use it a bunch and have been able to
> > really customize the cart, checkout and overall shopping experience to
> our
> > needs using all of the hooks and filters.  We have ran into a couple
> snags
> > along the way and must say it pays to have such reliable support
> especially
> > when you are dealing with a clients site which is literally making them
> > money.  The documentation is also really great.
> >
> > I have also heard great things about woocommerce but have not used it.
> >
> >
> >
> >
> > Jeffrey Nolte
> > Moxie Media Group, Inc.
> > 594 Broadway #305
> > New York, NY 10012
> >
> >
> >
> > On Nov 2, 2012, at 3:17 PM, Joel Fisher <joelfisher at gmail.com> wrote:
> >
> > > WooCommerce is super solid.
> > >
> > > Free, but they charge for certain plugins. Best I have used and I use
> > > WordPress ALOT.
> > >
> > >
> > >
> > >
> > > joel.fisher
> > > www.flushinc.com
> > >
> > > Linkedin: http://www.linkedin.com/in/jfisher
> > > Follow: www.twitter.com/joelmoney
> > >
> > >
> > >
> > > On Fri, Nov 2, 2012 at 3:10 PM, juma <juma at beedragon.com> wrote:
> > >
> > >> I have been using Shopp (http://shopplugin.net) for a few years and
> > would
> > >> recommend it highly. I find it to be very developer friendly (nice
> code,
> > >> hooks, filters, plays nice with WordPress API) and to have most of the
> > >> features needed by my clients. It is very flexible and integrates
> nicely
> > >> into most WordPress themes. Not free, but definitely worth it.
> > >>
> > >> Lori
> > >>
> > >>> From: Andrew Bartel <andrew.bartel at gmail.com>
> > >>> Subject: [wp-hackers] WordPress E-Commerce
> > >>> Date: November 2, 2012 2:32:28 PM EDT
> > >>> To: wp-hackers at lists.automattic.com
> > >>> Reply-To: wp-hackers at lists.automattic.com
> > >>>
> > >>>
> > >>> We've been given a broad reach to redesign a current WordPress
> > E-Commerce
> > >>> site and I'd like to know what everyone's opinion is on the leading
> > >>> ecommerce plugins for WordPress.  What do you recommend to your
> > clients?
> > >>> We're going to write a theme for scratch, I think, but if you have
> > other
> > >>> suggestions, I'd be very happy to hear them.  Is WordPress still an
> > >>> acceptable medium for modern day ecommerce or should we strictly be
> > using
> > >>> magento or something based on yii/cake/etc?
> > >>>
> > >>> Thanks,
> > >>>
> > >>> Andrew
> > >> _______________________________________________
> > >> wp-hackers mailing list
> > >> wp-hackers at lists.automattic.com
> > >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >>
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Hal
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From info at bluechives.com  Fri Nov  2 21:13:21 2012
From: info at bluechives.com (Blue Chives)
Date: Fri, 2 Nov 2012 21:13:21 +0000
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <16631888-7A83-41F1-A5FA-257CE1F005FE@getmoxied.net>
References: <mailman.1635.1351882722.1480.wp-hackers@lists.automattic.com>
	<DA34DA41-CB5B-4EE1-BCD7-3E4CCD4EA8DD@beedragon.com>
	<CAEitD+rPnEX+7wmdBzACzF4DXFTDza46DRdbFD+YRMHTZygnAQ@mail.gmail.com>
	<16631888-7A83-41F1-A5FA-257CE1F005FE@getmoxied.net>
Message-ID: <EE2B2FC0-165E-401F-B33B-FC6773523E31@bluechives.com>

Third for shopp

On 2 Nov 2012, at 20:02, Jeffrey Nolte <jnolte at getmoxied.net> wrote:

> I agree with Lori on Shopp.  We use it a bunch and have been able to really customize the cart, checkout and overall shopping experience to our needs using all of the hooks and filters.  We have ran into a couple snags along the way and must say it pays to have such reliable support especially when you are dealing with a clients site which is literally making them money.  The documentation is also really great.
> 
> I have also heard great things about woocommerce but have not used it.
> 
> 
> 
> 
> Jeffrey Nolte
> Moxie Media Group, Inc.
> 594 Broadway #305
> New York, NY 10012
> 
> 
> 
> On Nov 2, 2012, at 3:17 PM, Joel Fisher <joelfisher at gmail.com> wrote:
> 
>> WooCommerce is super solid.
>> 
>> Free, but they charge for certain plugins. Best I have used and I use
>> WordPress ALOT.
>> 
>> 
>> 
>> 
>> joel.fisher
>> www.flushinc.com
>> 
>> Linkedin: http://www.linkedin.com/in/jfisher
>> Follow: www.twitter.com/joelmoney
>> 
>> 
>> 
>> On Fri, Nov 2, 2012 at 3:10 PM, juma <juma at beedragon.com> wrote:
>> 
>>> I have been using Shopp (http://shopplugin.net) for a few years and would
>>> recommend it highly. I find it to be very developer friendly (nice code,
>>> hooks, filters, plays nice with WordPress API) and to have most of the
>>> features needed by my clients. It is very flexible and integrates nicely
>>> into most WordPress themes. Not free, but definitely worth it.
>>> 
>>> Lori
>>> 
>>>> From: Andrew Bartel <andrew.bartel at gmail.com>
>>>> Subject: [wp-hackers] WordPress E-Commerce
>>>> Date: November 2, 2012 2:32:28 PM EDT
>>>> To: wp-hackers at lists.automattic.com
>>>> Reply-To: wp-hackers at lists.automattic.com
>>>> 
>>>> 
>>>> We've been given a broad reach to redesign a current WordPress E-Commerce
>>>> site and I'd like to know what everyone's opinion is on the leading
>>>> ecommerce plugins for WordPress.  What do you recommend to your clients?
>>>> We're going to write a theme for scratch, I think, but if you have other
>>>> suggestions, I'd be very happy to hear them.  Is WordPress still an
>>>> acceptable medium for modern day ecommerce or should we strictly be using
>>>> magento or something based on yii/cake/etc?
>>>> 
>>>> Thanks,
>>>> 
>>>> Andrew
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From tom.hall at teneotalent.com  Sat Nov  3 00:30:42 2012
From: tom.hall at teneotalent.com (Tom Hall)
Date: Fri, 2 Nov 2012 19:30:42 -0500
Subject: [wp-hackers] change siteurl at DB level
In-Reply-To: <7A06A0AED9867C4C8B285D2D5D60B19C54C4C52BA9@FCWPMB06.usa.tribune.com>
References: <2D6847E2-C113-4915-934E-9BFC4934D554@graymerica.com>
	<7A06A0AED9867C4C8B285D2D5D60B19C54C4C52BA9@FCWPMB06.usa.tribune.com>
Message-ID: <20121103003035.GA11456@DariosJr>

I've been trying to do something like this to copy a production site to a
development version. I've run into an issue with the plugin settings that's
puzzling me. I'd appreciate it if anyone can give me some high-level ideas
about why I lose the plugin settings.

After copying all the files to the dev site and modifying the database, it
basically seems to work alright, but many of the plugin settings get lost.

When I look at the production and dev databases with phpMyAdmin, I can see
that the settings get copied OK, but as soon as I access the dev site with a
browser, at least some of the settings get set to default values.

One difference in what I'm doing is that, instead of modifying the database
dump file, I proceed to import the database dump file into a new database,
then modify the copied database afterward with this script:

 http://interconnectit.com/124/search-and-replace-for-wordpress-databases/

(This script also takes care of "serialized data")

- Tom

On Tue, Aug 24, 2010 at 05:21:32PM -0500, Potkanski, Jason wrote:
> Here is a small bash script I use to move from prod back to dev on my local machine. You can run this from the server or the test box depending on how your network is configured. As the others have said, the only way to guarantee the change is a DB dump.
> 
> #!/bin/bash
> mysqldump -v --host=proddbserver --user=produser --password=prodpw --lock-tables=false --databases wp_prod > dump.sql
> sed 's/blogs.prod.com/dev.prod.com/g' dump.sql > newdump.sql
> mysql --force -u devuser --password=devpassword -h 127.0.0.1 wp_prod < newdump.sql
> rm dump.sql
> rm newdump.sql
> 
> You can add --default-character-set=UTF8 to the mysqldump and mysql lines if you have MySQL default character set mismatches.
> 
> Jason Potkanski
> Tribune Technology
> 
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Andrew Gray
> Sent: Tuesday, August 24, 2010 3:19 PM
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] change siteurl at DB level
> 
> I have been trying to move a site from  development.domain.com  to domain.com all day and got fed up and wrote some SQL to make the change on the DB level.
> I know that you can download the DB dump and fix it, but it causes some problems for me with UTF characters.  Also some of my sites are pretty big now, with all the revisions, custom post types and what not.
> 
> If you run this command, you can pretty much change all of the stock tables.
> 
> This will not change all your plugins values, but saved me a ton of time. Took about 1 sec to run
> 
> 
> #Change Domain in in Wordpress DB
> #before you run this command in SQL (phpmyadmin)
> # 1. Backup DB
> # 2. Find and replace the text below in your text editor
> #replace $old$ with the old domain name
> #replace  $new$ with the new domain name
> 
> update wp_postmeta set meta_value = replace(meta_value, '$old$' , '$new$') ;
> update wp_posts set post_content = replace(post_content, '$old$' , '$new$') ;
> update wp_options set option_value = replace(option_value, '$old$' , '$new$') ;
> 
> #end sql command
> 
> I would love it if there was an easy way to force wordpress to use a place holder for the domain and then replace in the correct one when it reads from the DB.
> If I could find a filter that would filter every value from read and write to the db, I could do this very easy, but there is no filter for every value coming from the DB.
> I just do not know why the SITEURL should be stored in the DB.  Is there a pair of filters that I can use to replace a value in every read and write
> 
> Andrew
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From etienne.tremel at orange.fr  Sat Nov  3 08:28:25 2012
From: etienne.tremel at orange.fr (Etienne Tremel)
Date: Sat, 3 Nov 2012 19:28:25 +1100
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <EE2B2FC0-165E-401F-B33B-FC6773523E31@bluechives.com>
References: <mailman.1635.1351882722.1480.wp-hackers@lists.automattic.com>
	<DA34DA41-CB5B-4EE1-BCD7-3E4CCD4EA8DD@beedragon.com>
	<CAEitD+rPnEX+7wmdBzACzF4DXFTDza46DRdbFD+YRMHTZygnAQ@mail.gmail.com>
	<16631888-7A83-41F1-A5FA-257CE1F005FE@getmoxied.net>
	<EE2B2FC0-165E-401F-B33B-FC6773523E31@bluechives.com>
Message-ID: <CABL5+_CCK_2DyZFwbw1M1vYbixT4N=fOp_S8kOD+pd_O60o6qQ@mail.gmail.com>

After having tested a couple of e-commerce plugins for Wordpress, Jigoshop
is my choice. It works well, the code is readable, clean and easy to
upgrade by building custom features.





On Sat, Nov 3, 2012 at 8:13 AM, Blue Chives <info at bluechives.com> wrote:

> Third for shopp
>
> On 2 Nov 2012, at 20:02, Jeffrey Nolte <jnolte at getmoxied.net> wrote:
>
> > I agree with Lori on Shopp.  We use it a bunch and have been able to
> really customize the cart, checkout and overall shopping experience to our
> needs using all of the hooks and filters.  We have ran into a couple snags
> along the way and must say it pays to have such reliable support especially
> when you are dealing with a clients site which is literally making them
> money.  The documentation is also really great.
> >
> > I have also heard great things about woocommerce but have not used it.
> >
> >
> >
> >
> > Jeffrey Nolte
> > Moxie Media Group, Inc.
> > 594 Broadway #305
> > New York, NY 10012
> >
> >
> >
> > On Nov 2, 2012, at 3:17 PM, Joel Fisher <joelfisher at gmail.com> wrote:
> >
> >> WooCommerce is super solid.
> >>
> >> Free, but they charge for certain plugins. Best I have used and I use
> >> WordPress ALOT.
> >>
> >>
> >>
> >>
> >> joel.fisher
> >> www.flushinc.com
> >>
> >> Linkedin: http://www.linkedin.com/in/jfisher
> >> Follow: www.twitter.com/joelmoney
> >>
> >>
> >>
> >> On Fri, Nov 2, 2012 at 3:10 PM, juma <juma at beedragon.com> wrote:
> >>
> >>> I have been using Shopp (http://shopplugin.net) for a few years and
> would
> >>> recommend it highly. I find it to be very developer friendly (nice
> code,
> >>> hooks, filters, plays nice with WordPress API) and to have most of the
> >>> features needed by my clients. It is very flexible and integrates
> nicely
> >>> into most WordPress themes. Not free, but definitely worth it.
> >>>
> >>> Lori
> >>>
> >>>> From: Andrew Bartel <andrew.bartel at gmail.com>
> >>>> Subject: [wp-hackers] WordPress E-Commerce
> >>>> Date: November 2, 2012 2:32:28 PM EDT
> >>>> To: wp-hackers at lists.automattic.com
> >>>> Reply-To: wp-hackers at lists.automattic.com
> >>>>
> >>>>
> >>>> We've been given a broad reach to redesign a current WordPress
> E-Commerce
> >>>> site and I'd like to know what everyone's opinion is on the leading
> >>>> ecommerce plugins for WordPress.  What do you recommend to your
> clients?
> >>>> We're going to write a theme for scratch, I think, but if you have
> other
> >>>> suggestions, I'd be very happy to hear them.  Is WordPress still an
> >>>> acceptable medium for modern day ecommerce or should we strictly be
> using
> >>>> magento or something based on yii/cake/etc?
> >>>>
> >>>> Thanks,
> >>>>
> >>>> Andrew
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From lists at rotorised.com  Sat Nov  3 08:45:41 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sat, 03 Nov 2012 18:45:41 +1000
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <CAGguiged67J+fzWHMJnjFNOGifQoWc3ua_YbqDuJHjSd3DVfzA@mail.gmail.com>
References: <CAJnHr4i=t_48igT-9MegqeMGGuk1i-nRhygwvXwpRQ1-=_6-kg@mail.gmail.com>
	<CAGguiged67J+fzWHMJnjFNOGifQoWc3ua_YbqDuJHjSd3DVfzA@mail.gmail.com>
Message-ID: <5094D9B5.20003@rotorised.com>

Shasta Willson wrote:
> I've used both WP E-commerce and Cart66.  The latter has a nice clean code
> base that's easy to work with, but I encountered a flaw that was fatal for
> my purposes: if the purchase of an electronic download fails, the buyer
> still gets the link to the product.  That was maybe six months ago and at
> that point they didn't seem to feel it was a high priority.  It was a
> deal-breaker for me, and also made me wonder what else might be odd.

If you're planning on building on top of Cart66, you're going to be
disappointed. There are a total of two hooks in the entire thing, and
only one of them is useful. For anything mildly complicated, you'll have
to hack around this.

I recently built a MailChimp integration plugin for a client using
Cart66, and it was a huge pain (to the point where it was almost easier
to transfer the 100k purchases to another system than to try and build
it with Cart66).

I can, however, thoroughly recommend WooCommerce: it has a lot of great
hooks and is very nice to work with. WP-e-Commerce is also up there, and
although it can be a bit of a pain to work with in some areas, it's very
capable and always possible to work around those.

-- 
Ryan McCue
<http://ryanmccue.info/>

From kokarn at gmail.com  Sat Nov  3 11:41:46 2012
From: kokarn at gmail.com (Kokarn)
Date: Sat, 3 Nov 2012 12:41:46 +0100
Subject: [wp-hackers] WordPress E-Commerce
In-Reply-To: <5094D9B5.20003@rotorised.com>
References: <CAJnHr4i=t_48igT-9MegqeMGGuk1i-nRhygwvXwpRQ1-=_6-kg@mail.gmail.com>
	<CAGguiged67J+fzWHMJnjFNOGifQoWc3ua_YbqDuJHjSd3DVfzA@mail.gmail.com>
	<5094D9B5.20003@rotorised.com>
Message-ID: <CAPbD_NN4EVo_bDN8pGGdCg0xr7LgpFpLq6gLVeaJSEPZs85fpg@mail.gmail.com>

Just wanted to be the third for WooCommerce.

Work professionally as a web developer and have experience with both wp
e-commerce and woo commerce and the woo really comes out on top. Great
community behind it, great features, easy to use and easy to extend.

Solid choice for any webshop imho.


On 3 November 2012 09:45, Ryan McCue <lists at rotorised.com> wrote:

> Shasta Willson wrote:
> > I've used both WP E-commerce and Cart66.  The latter has a nice clean
> code
> > base that's easy to work with, but I encountered a flaw that was fatal
> for
> > my purposes: if the purchase of an electronic download fails, the buyer
> > still gets the link to the product.  That was maybe six months ago and at
> > that point they didn't seem to feel it was a high priority.  It was a
> > deal-breaker for me, and also made me wonder what else might be odd.
>
> If you're planning on building on top of Cart66, you're going to be
> disappointed. There are a total of two hooks in the entire thing, and
> only one of them is useful. For anything mildly complicated, you'll have
> to hack around this.
>
> I recently built a MailChimp integration plugin for a client using
> Cart66, and it was a huge pain (to the point where it was almost easier
> to transfer the 100k purchases to another system than to try and build
> it with Cart66).
>
> I can, however, thoroughly recommend WooCommerce: it has a lot of great
> hooks and is very nice to work with. WP-e-Commerce is also up there, and
> although it can be a bit of a pain to work with in some areas, it's very
> capable and always possible to work around those.
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From cloudpresshosting at gmail.com  Sun Nov  4 02:20:17 2012
From: cloudpresshosting at gmail.com (John Doe)
Date: Sat, 3 Nov 2012 19:20:17 -0700
Subject: [wp-hackers] A/B Testing
Message-ID: <CALwRiz82LCL673X98zP1M4k0Ck4chGROG4PGeq=Zw6SSzUb7cA@mail.gmail.com>

I am curious to see if anyone has any good recommendations for A/B Testing
plugins for WordPress. I was looking at shrimptest which looked promising
except it is still in beta and has not had any updates and is no compatible
with the current version of WordPress.

Implementing something like Google Website Optimizer seems a little too
cumbersome. And when searching all I have found is either these options or
other similar options that just are quite comprehensive enough to
be usable for my needs.

Curious to see if anyone here has any good recommendations.

Thanks.

From jnolte at getmoxied.net  Sun Nov  4 05:27:49 2012
From: jnolte at getmoxied.net (Jeffrey Nolte)
Date: Sun, 4 Nov 2012 01:27:49 -0400
Subject: [wp-hackers] A/B Testing
In-Reply-To: <CALwRiz82LCL673X98zP1M4k0Ck4chGROG4PGeq=Zw6SSzUb7cA@mail.gmail.com>
References: <CALwRiz82LCL673X98zP1M4k0Ck4chGROG4PGeq=Zw6SSzUb7cA@mail.gmail.com>
Message-ID: <38EE86C2-A9A4-4D15-B873-1A4912573589@getmoxied.net>

I have used Bo.lt for something like this a while ago but am not sure how much it has evolved since then as it was about a year or so ago. 

Google website optimizer is no longer an actively supported Google product as far as I know.

Jeffrey Nolte
Moxie Media Group, Inc
594 Broadway Suite 305
New York, NY 10012
Getmoxied.net

On Nov 3, 2012, at 10:20 PM, John Doe <cloudpresshosting at gmail.com> wrote:

> I am curious to see if anyone has any good recommendations for A/B Testing
> plugins for WordPress. I was looking at shrimptest which looked promising
> except it is still in beta and has not had any updates and is no compatible
> with the current version of WordPress.
> 
> Implementing something like Google Website Optimizer seems a little too
> cumbersome. And when searching all I have found is either these options or
> other similar options that just are quite comprehensive enough to
> be usable for my needs.
> 
> Curious to see if anyone here has any good recommendations.
> 
> Thanks.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From benjamin.lupu at gmail.com  Sun Nov  4 10:23:58 2012
From: benjamin.lupu at gmail.com (Benjamin Lupu)
Date: Sun, 4 Nov 2012 11:23:58 +0100
Subject: [wp-hackers] A/B Testing
In-Reply-To: <38EE86C2-A9A4-4D15-B873-1A4912573589@getmoxied.net>
References: <CALwRiz82LCL673X98zP1M4k0Ck4chGROG4PGeq=Zw6SSzUb7cA@mail.gmail.com>
	<38EE86C2-A9A4-4D15-B873-1A4912573589@getmoxied.net>
Message-ID: <3AD86766-A867-48CB-8D5B-A91B9668663E@gmail.com>

Hi everyone, GWO is now supported as Google Analytics Content Experiment. 


http://support.google.com/analytics/bin/answer.py?hl=en&answer=1745147


---
benjamin.lupu at gmail.com
Find hard to manage pages in Wordpress ?
Give a try to Advanced Page Manager
http://wordpress.org/extend/plugins/advanced-page-manager/

Le 4 nov. 2012 ? 06:27, Jeffrey Nolte <jnolte at getmoxied.net> a ?crit :

> I have used Bo.lt for something like this a while ago but am not sure how much it has evolved since then as it was about a year or so ago. 
> 
> Google website optimizer is no longer an actively supported Google product as far as I know.
> 
> Jeffrey Nolte
> Moxie Media Group, Inc
> 594 Broadway Suite 305
> New York, NY 10012
> Getmoxied.net
> 
> On Nov 3, 2012, at 10:20 PM, John Doe <cloudpresshosting at gmail.com> wrote:
> 
>> I am curious to see if anyone has any good recommendations for A/B Testing
>> plugins for WordPress. I was looking at shrimptest which looked promising
>> except it is still in beta and has not had any updates and is no compatible
>> with the current version of WordPress.
>> 
>> Implementing something like Google Website Optimizer seems a little too
>> cumbersome. And when searching all I have found is either these options or
>> other similar options that just are quite comprehensive enough to
>> be usable for my needs.
>> 
>> Curious to see if anyone here has any good recommendations.
>> 
>> Thanks.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From chris at lod.com  Sun Nov  4 11:16:30 2012
From: chris at lod.com (chris mccoy)
Date: Sun, 4 Nov 2012 06:16:30 -0500
Subject: [wp-hackers] A/B Testing
In-Reply-To: <CALwRiz82LCL673X98zP1M4k0Ck4chGROG4PGeq=Zw6SSzUb7cA@mail.gmail.com>
References: <CALwRiz82LCL673X98zP1M4k0Ck4chGROG4PGeq=Zw6SSzUb7cA@mail.gmail.com>
Message-ID: <000301cdba7d$d7440550$85cc0ff0$@lod.com>

Did you try http://wordpress.org/extend/plugins/maxab/



-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of John Doe
Sent: November 3, 2012 10:20 PM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] A/B Testing

I am curious to see if anyone has any good recommendations for A/B Testing
plugins for WordPress. I was looking at shrimptest which looked promising
except it is still in beta and has not had any updates and is no compatible
with the current version of WordPress.

Implementing something like Google Website Optimizer seems a little too
cumbersome. And when searching all I have found is either these options or
other similar options that just are quite comprehensive enough to be usable
for my needs.

Curious to see if anyone here has any good recommendations.

Thanks.
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From cloudpresshosting at gmail.com  Sun Nov  4 19:30:53 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Sun, 4 Nov 2012 11:30:53 -0800
Subject: [wp-hackers] A/B Testing
In-Reply-To: <000301cdba7d$d7440550$85cc0ff0$@lod.com>
References: <CALwRiz82LCL673X98zP1M4k0Ck4chGROG4PGeq=Zw6SSzUb7cA@mail.gmail.com>
	<000301cdba7d$d7440550$85cc0ff0$@lod.com>
Message-ID: <CALwRiz_DZyodWCD2Uf3-Tv9QxpeH0huArzd9tE2_dVn2mxeM2Q@mail.gmail.com>

Idk been about a year since it was update do you know if it works with the
current version of WordPress?
I also have to admit I don't like the method it uses of having
a different page for each variant of content. I am seriously thinking I
should just write my own plugin.

On Sun, Nov 4, 2012 at 3:16 AM, chris mccoy <chris at lod.com> wrote:

> Did you try http://wordpress.org/extend/plugins/maxab/
>
>
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of John Doe
> Sent: November 3, 2012 10:20 PM
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] A/B Testing
>
> I am curious to see if anyone has any good recommendations for A/B Testing
> plugins for WordPress. I was looking at shrimptest which looked promising
> except it is still in beta and has not had any updates and is no compatible
> with the current version of WordPress.
>
> Implementing something like Google Website Optimizer seems a little too
> cumbersome. And when searching all I have found is either these options or
> other similar options that just are quite comprehensive enough to be usable
> for my needs.
>
> Curious to see if anyone here has any good recommendations.
>
> Thanks.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From joelfisher at gmail.com  Sun Nov  4 21:21:24 2012
From: joelfisher at gmail.com (Joel Fisher)
Date: Sun, 4 Nov 2012 16:21:24 -0500
Subject: [wp-hackers] A/B Testing
In-Reply-To: <CALwRiz_DZyodWCD2Uf3-Tv9QxpeH0huArzd9tE2_dVn2mxeM2Q@mail.gmail.com>
References: <CALwRiz82LCL673X98zP1M4k0Ck4chGROG4PGeq=Zw6SSzUb7cA@mail.gmail.com>
	<000301cdba7d$d7440550$85cc0ff0$@lod.com>
	<CALwRiz_DZyodWCD2Uf3-Tv9QxpeH0huArzd9tE2_dVn2mxeM2Q@mail.gmail.com>
Message-ID: <67E40D15-ED39-45AD-9B44-7CF4B03114FD@gmail.com>

https://www.optimizely.com/

There is a WP plugin too for it.



Sent from my iPhone

On Nov 4, 2012, at 2:30 PM, CloudPress Hosting <cloudpresshosting at gmail.com> wrote:

> Idk been about a year since it was update do you know if it works with the
> current version of WordPress?
> I also have to admit I don't like the method it uses of having
> a different page for each variant of content. I am seriously thinking I
> should just write my own plugin.
> 
> On Sun, Nov 4, 2012 at 3:16 AM, chris mccoy <chris at lod.com> wrote:
> 
>> Did you try http://wordpress.org/extend/plugins/maxab/
>> 
>> 
>> 
>> -----Original Message-----
>> From: wp-hackers-bounces at lists.automattic.com
>> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of John Doe
>> Sent: November 3, 2012 10:20 PM
>> To: wp-hackers at lists.automattic.com
>> Subject: [wp-hackers] A/B Testing
>> 
>> I am curious to see if anyone has any good recommendations for A/B Testing
>> plugins for WordPress. I was looking at shrimptest which looked promising
>> except it is still in beta and has not had any updates and is no compatible
>> with the current version of WordPress.
>> 
>> Implementing something like Google Website Optimizer seems a little too
>> cumbersome. And when searching all I have found is either these options or
>> other similar options that just are quite comprehensive enough to be usable
>> for my needs.
>> 
>> Curious to see if anyone here has any good recommendations.
>> 
>> Thanks.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From rafaehlers at gmail.com  Tue Nov  6 02:25:12 2012
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Tue, 6 Nov 2012 00:25:12 -0200
Subject: [wp-hackers] calling wp_mail on init
Message-ID: <CAF_6N0N8Vj7YhwOqRER2AHqZ6d1vz2v9DswRUgpnJ7WvGBkt+g@mail.gmail.com>

Im having a problem with wp_mail dont sending emails on a function called
on a init hook:

function function_name() {  if($_GET['pass']){ wp_mail($email, $subject,
$msg, $headers ); } }
add_action('init','function_name');

I?ve read here
http://wordpress.stackexchange.com/questions/44387/wp-mail-is-undefined that
I may be calling the function wp_mail too early.

But I really need to catch this $_GET on init so that I can properly show a
message to a user on a regular page.
If I use plugins_loaded I can?t pass the vars to display on a regular page
after.

I?ve tried to use require_once(ABSPATH . WPINC . '/pluggable.php'); but it
wont work either.

Any ideas?!

Thanks!

From kwight at kwight.ca  Tue Nov  6 02:58:09 2012
From: kwight at kwight.ca (Kirk Wight)
Date: Mon, 5 Nov 2012 21:58:09 -0500
Subject: [wp-hackers] calling wp_mail on init
In-Reply-To: <CAF_6N0N8Vj7YhwOqRER2AHqZ6d1vz2v9DswRUgpnJ7WvGBkt+g@mail.gmail.com>
References: <CAF_6N0N8Vj7YhwOqRER2AHqZ6d1vz2v9DswRUgpnJ7WvGBkt+g@mail.gmail.com>
Message-ID: <CAFQFuXPhhqoYzjX0LSthog6Ctf_72CtYms5L2bh678SpFU=7gg@mail.gmail.com>

Maybe try calling on wp_loaded instead of init?..


On 5 November 2012 21:25, Rafael Ehlers <rafaehlers at gmail.com> wrote:

> Im having a problem with wp_mail dont sending emails on a function called
> on a init hook:
>
> function function_name() {  if($_GET['pass']){ wp_mail($email, $subject,
> $msg, $headers ); } }
> add_action('init','function_name');
>
> I?ve read here
> http://wordpress.stackexchange.com/questions/44387/wp-mail-is-undefinedthat
> I may be calling the function wp_mail too early.
>
> But I really need to catch this $_GET on init so that I can properly show a
> message to a user on a regular page.
> If I use plugins_loaded I can?t pass the vars to display on a regular page
> after.
>
> I?ve tried to use require_once(ABSPATH . WPINC . '/pluggable.php'); but it
> wont work either.
>
> Any ideas?!
>
> Thanks!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From rafaehlers at gmail.com  Tue Nov  6 03:23:20 2012
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Tue, 6 Nov 2012 01:23:20 -0200
Subject: [wp-hackers] calling wp_mail on init
In-Reply-To: <CAFQFuXPhhqoYzjX0LSthog6Ctf_72CtYms5L2bh678SpFU=7gg@mail.gmail.com>
References: <CAF_6N0N8Vj7YhwOqRER2AHqZ6d1vz2v9DswRUgpnJ7WvGBkt+g@mail.gmail.com>
	<CAFQFuXPhhqoYzjX0LSthog6Ctf_72CtYms5L2bh678SpFU=7gg@mail.gmail.com>
Message-ID: <CAF_6N0N+FT0p_AL807-ChjOtw3Xrjkz2j453_yod4or+rYjKZg@mail.gmail.com>

Just tried, still not working! Thanks for the tip Kirk!


2012/11/6 Kirk Wight <kwight at kwight.ca>

> Maybe try calling on wp_loaded instead of init?..
>
>
> On 5 November 2012 21:25, Rafael Ehlers <rafaehlers at gmail.com> wrote:
>
> > Im having a problem with wp_mail dont sending emails on a function called
> > on a init hook:
> >
> > function function_name() {  if($_GET['pass']){ wp_mail($email, $subject,
> > $msg, $headers ); } }
> > add_action('init','function_name');
> >
> > I?ve read here
> >
> http://wordpress.stackexchange.com/questions/44387/wp-mail-is-undefinedthat
> > I may be calling the function wp_mail too early.
> >
> > But I really need to catch this $_GET on init so that I can properly
> show a
> > message to a user on a regular page.
> > If I use plugins_loaded I can?t pass the vars to display on a regular
> page
> > after.
> >
> > I?ve tried to use require_once(ABSPATH . WPINC . '/pluggable.php'); but
> it
> > wont work either.
> >
> > Any ideas?!
> >
> > Thanks!
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From cloudpresshosting at gmail.com  Tue Nov  6 03:36:25 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Mon, 5 Nov 2012 19:36:25 -0800
Subject: [wp-hackers] calling wp_mail on init
In-Reply-To: <CAF_6N0N8Vj7YhwOqRER2AHqZ6d1vz2v9DswRUgpnJ7WvGBkt+g@mail.gmail.com>
References: <CAF_6N0N8Vj7YhwOqRER2AHqZ6d1vz2v9DswRUgpnJ7WvGBkt+g@mail.gmail.com>
Message-ID: <CALwRiz9DqmHtQ4gZHc4FTL+TPtXL7eXjVtX5bsyfwOti_TfLEQ@mail.gmail.com>

Does mail() work on the server, perhaps it has to do with server
configuration.

On Mon, Nov 5, 2012 at 6:25 PM, Rafael Ehlers <rafaehlers at gmail.com> wrote:

> Im having a problem with wp_mail dont sending emails on a function called
> on a init hook:
>
> function function_name() {  if($_GET['pass']){ wp_mail($email, $subject,
> $msg, $headers ); } }
> add_action('init','function_name');
>
> I?ve read here
> http://wordpress.stackexchange.com/questions/44387/wp-mail-is-undefinedthat
> I may be calling the function wp_mail too early.
>
> But I really need to catch this $_GET on init so that I can properly show a
> message to a user on a regular page.
> If I use plugins_loaded I can?t pass the vars to display on a regular page
> after.
>
> I?ve tried to use require_once(ABSPATH . WPINC . '/pluggable.php'); but it
> wont work either.
>
> Any ideas?!
>
> Thanks!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From rafaehlers at gmail.com  Tue Nov  6 03:39:43 2012
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Tue, 6 Nov 2012 01:39:43 -0200
Subject: [wp-hackers] calling wp_mail on init
In-Reply-To: <CALwRiz9DqmHtQ4gZHc4FTL+TPtXL7eXjVtX5bsyfwOti_TfLEQ@mail.gmail.com>
References: <CAF_6N0N8Vj7YhwOqRER2AHqZ6d1vz2v9DswRUgpnJ7WvGBkt+g@mail.gmail.com>
	<CALwRiz9DqmHtQ4gZHc4FTL+TPtXL7eXjVtX5bsyfwOti_TfLEQ@mail.gmail.com>
Message-ID: <CAF_6N0OAfy95-ZkrHJHBQvWNOiE4nBOnNzpcwBWLnK8oke9Cig@mail.gmail.com>

Thanks ClouPress, just figured it out, it was a problem with some headers!
:P

Thanks guys!



2012/11/6 CloudPress Hosting <cloudpresshosting at gmail.com>

> Does mail() work on the server, perhaps it has to do with server
> configuration.
>
> On Mon, Nov 5, 2012 at 6:25 PM, Rafael Ehlers <rafaehlers at gmail.com>
> wrote:
>
> > Im having a problem with wp_mail dont sending emails on a function called
> > on a init hook:
> >
> > function function_name() {  if($_GET['pass']){ wp_mail($email, $subject,
> > $msg, $headers ); } }
> > add_action('init','function_name');
> >
> > I?ve read here
> >
> http://wordpress.stackexchange.com/questions/44387/wp-mail-is-undefinedthat
> > I may be calling the function wp_mail too early.
> >
> > But I really need to catch this $_GET on init so that I can properly
> show a
> > message to a user on a regular page.
> > If I use plugins_loaded I can?t pass the vars to display on a regular
> page
> > after.
> >
> > I?ve tried to use require_once(ABSPATH . WPINC . '/pluggable.php'); but
> it
> > wont work either.
> >
> > Any ideas?!
> >
> > Thanks!
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jayarjo at gmail.com  Wed Nov  7 06:26:14 2012
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Wed, 7 Nov 2012 10:26:14 +0400
Subject: [wp-hackers]  Any reason why link still are separate?
Message-ID: <CAM0WtjeegCcXT-5VQCqw-onGn7kYu3YqPu6+ff9s6k+6B6Fxpg@mail.gmail.com>

Just realized that there's no way to attach thumbnail to a link. Any
serious reason why links still are not converted to custom posts?

Davit Barbakadze

From lists at rotorised.com  Wed Nov  7 06:31:37 2012
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 07 Nov 2012 16:31:37 +1000
Subject: [wp-hackers] Any reason why link still are separate?
In-Reply-To: <CAM0WtjeegCcXT-5VQCqw-onGn7kYu3YqPu6+ff9s6k+6B6Fxpg@mail.gmail.com>
References: <CAM0WtjeegCcXT-5VQCqw-onGn7kYu3YqPu6+ff9s6k+6B6Fxpg@mail.gmail.com>
Message-ID: <509A0049.8060907@rotorised.com>

Davit Barbakadze wrote:
> Just realized that there's no way to attach thumbnail to a link. Any
> serious reason why links still are not converted to custom posts?

The link manager is being hidden by default in 3.5, and links are slowly
being phased out, as they are not considered a necessary core feature.

http://core.trac.wordpress.org/ticket/21307
http://wordpress.org/extend/plugins/link-manager/

-- 
Ryan McCue
<http://ryanmccue.info/>

From wordpress at zed1.com  Wed Nov  7 10:45:08 2012
From: wordpress at zed1.com (Mike Little)
Date: Wed, 7 Nov 2012 10:45:08 +0000
Subject: [wp-hackers] Any reason why link still are separate?
In-Reply-To: <509A0049.8060907@rotorised.com>
References: <CAM0WtjeegCcXT-5VQCqw-onGn7kYu3YqPu6+ff9s6k+6B6Fxpg@mail.gmail.com>
	<509A0049.8060907@rotorised.com>
Message-ID: <CAMb54M0HNtRQ8x3M+aWj_qNrkJE1L+syoJc5XB2neKAq3Y6Hzg@mail.gmail.com>

On 7 November 2012 06:31, Ryan McCue <lists at rotorised.com> wrote:

> Davit Barbakadze wrote:
> > Just realized that there's no way to attach thumbnail to a link. Any
> > serious reason why links still are not converted to custom posts?
>
> The link manager is being hidden by default in 3.5, and links are slowly
> being phased out, as they are not considered a necessary core feature.
>
>

And the plan is to convert the functionality to a custom post-based plugin.


Mike
-- 
Mike Little
http://zed1.com/

From harry at dxw.com  Wed Nov  7 14:18:35 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Wed, 07 Nov 2012 14:18:35 +0000
Subject: [wp-hackers] Should password hashing portability be configurable?
Message-ID: <509A6DBB.4090201@dxw.com>

I've been investigating switching the sites we host to bcrypt, rather 
than MD5, which is the default. That MD5 is the default is regrettable 
but understandable given WordPress's need to remain portable. I 
understand that if the site was moved to a server without bcrypt 
support, those accounts would no longer be accessible. However, if that 
is not a consideration, it would surely be better for people to use 
bcrypt than MD5.

I was going to make change on our sites by switching the portable flags 
in wp_check_password and wp_hash_password to false, after moving those 
functions into a plugin. This makes new passwords bcrypt and maintains 
backwards compatibility for passwords hashed using MD5. However, it 
misses the hashes which are created for password-protected posts, which 
happens in a function that is not pluggable.

I've therefore created a global $wp_hasher instance (without 
portability) in a plugin, which I think should get called before 
WordPress has a chance to make it.

Questions:

 1. Is that right? Is there a scenario where WordPress will make a
    wp_hasher before my mu plugin gets loaded, thereby preventing
    someone from logging in?
 2. Is it worth adding a WP_UNPORTABLE_PASSWORDS define so that people
    who want to make the switch can do so without having to fiddle with
    wp_hasher?

Harry

From harry at dxw.com  Wed Nov  7 18:41:03 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Wed, 07 Nov 2012 18:41:03 +0000
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <509A6DBB.4090201@dxw.com>
References: <509A6DBB.4090201@dxw.com>
Message-ID: <509AAB3F.3030104@dxw.com>

I've packaged this up as a stand-alone plugin if anyone wants to have a 
look/test.

https://github.com/dxw/wp_bcrypt

Feedback very welcome.

Harry


PS - you might want to test it using Whippet :)

https://github.com/dxw/whippet



On 07/11/12 14:18, Harry Metcalfe wrote:
> I've been investigating switching the sites we host to bcrypt, rather 
> than MD5, which is the default. That MD5 is the default is regrettable 
> but understandable given WordPress's need to remain portable. I 
> understand that if the site was moved to a server without bcrypt 
> support, those accounts would no longer be accessible. However, if 
> that is not a consideration, it would surely be better for people to 
> use bcrypt than MD5.
>
> I was going to make change on our sites by switching the portable 
> flags in wp_check_password and wp_hash_password to false, after moving 
> those functions into a plugin. This makes new passwords bcrypt and 
> maintains backwards compatibility for passwords hashed using MD5. 
> However, it misses the hashes which are created for password-protected 
> posts, which happens in a function that is not pluggable.
>
> I've therefore created a global $wp_hasher instance (without 
> portability) in a plugin, which I think should get called before 
> WordPress has a chance to make it.
>
> Questions:
>
> 1. Is that right? Is there a scenario where WordPress will make a
>    wp_hasher before my mu plugin gets loaded, thereby preventing
>    someone from logging in?
> 2. Is it worth adding a WP_UNPORTABLE_PASSWORDS define so that people
>    who want to make the switch can do so without having to fiddle with
>    wp_hasher?
>
> Harry
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From cloudpresshosting at gmail.com  Wed Nov  7 18:47:04 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Wed, 7 Nov 2012 10:47:04 -0800
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <509A6DBB.4090201@dxw.com>
References: <509A6DBB.4090201@dxw.com>
Message-ID: <CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>

To make sure I am understanding you are you saying account passwords are
hashed with MD5? I would certainly hope not.

On Wed, Nov 7, 2012 at 6:18 AM, Harry Metcalfe <harry at dxw.com> wrote:

> I've been investigating switching the sites we host to bcrypt, rather than
> MD5, which is the default. That MD5 is the default is regrettable but
> understandable given WordPress's need to remain portable. I understand that
> if the site was moved to a server without bcrypt support, those accounts
> would no longer be accessible. However, if that is not a consideration, it
> would surely be better for people to use bcrypt than MD5.
>
> I was going to make change on our sites by switching the portable flags in
> wp_check_password and wp_hash_password to false, after moving those
> functions into a plugin. This makes new passwords bcrypt and maintains
> backwards compatibility for passwords hashed using MD5. However, it misses
> the hashes which are created for password-protected posts, which happens in
> a function that is not pluggable.
>
> I've therefore created a global $wp_hasher instance (without portability)
> in a plugin, which I think should get called before WordPress has a chance
> to make it.
>
> Questions:
>
> 1. Is that right? Is there a scenario where WordPress will make a
>    wp_hasher before my mu plugin gets loaded, thereby preventing
>    someone from logging in?
> 2. Is it worth adding a WP_UNPORTABLE_PASSWORDS define so that people
>    who want to make the switch can do so without having to fiddle with
>    wp_hasher?
>
> Harry
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From harry at dxw.com  Wed Nov  7 18:55:31 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Wed, 07 Nov 2012 18:55:31 +0000
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
Message-ID: <509AAEA3.9080300@dxw.com>

No. In a nutshell:

No, it's not just MD5. It's PHPASS, which (for WordPress) uses MD5 as a 
cryptographic primitive. But there's more going on than that -- there 
are multiple rounds of hashing, plus a salt that's unique to each hashed 
password.

It's not a bad system. It's just not as good as bcrypt.

Harry


On 07/11/12 18:47, CloudPress Hosting wrote:
> To make sure I am understanding you are you saying account passwords are
> hashed with MD5? I would certainly hope not.
>
> On Wed, Nov 7, 2012 at 6:18 AM, Harry Metcalfe <harry at dxw.com> wrote:
>
>> I've been investigating switching the sites we host to bcrypt, rather than
>> MD5, which is the default. That MD5 is the default is regrettable but
>> understandable given WordPress's need to remain portable. I understand that
>> if the site was moved to a server without bcrypt support, those accounts
>> would no longer be accessible. However, if that is not a consideration, it
>> would surely be better for people to use bcrypt than MD5.
>>
>> I was going to make change on our sites by switching the portable flags in
>> wp_check_password and wp_hash_password to false, after moving those
>> functions into a plugin. This makes new passwords bcrypt and maintains
>> backwards compatibility for passwords hashed using MD5. However, it misses
>> the hashes which are created for password-protected posts, which happens in
>> a function that is not pluggable.
>>
>> I've therefore created a global $wp_hasher instance (without portability)
>> in a plugin, which I think should get called before WordPress has a chance
>> to make it.
>>
>> Questions:
>>
>> 1. Is that right? Is there a scenario where WordPress will make a
>>     wp_hasher before my mu plugin gets loaded, thereby preventing
>>     someone from logging in?
>> 2. Is it worth adding a WP_UNPORTABLE_PASSWORDS define so that people
>>     who want to make the switch can do so without having to fiddle with
>>     wp_hasher?
>>
>> Harry
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From cloudpresshosting at gmail.com  Wed Nov  7 18:57:08 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Wed, 7 Nov 2012 10:57:08 -0800
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <509AAEA3.9080300@dxw.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
	<509AAEA3.9080300@dxw.com>
Message-ID: <CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>

Sounds a bit over complicated. I wonder why they would not just use SHA256
with salt.

On Wed, Nov 7, 2012 at 10:55 AM, Harry Metcalfe <harry at dxw.com> wrote:

> No. In a nutshell:
>
> No, it's not just MD5. It's PHPASS, which (for WordPress) uses MD5 as a
> cryptographic primitive. But there's more going on than that -- there are
> multiple rounds of hashing, plus a salt that's unique to each hashed
> password.
>
> It's not a bad system. It's just not as good as bcrypt.
>
> Harry
>
>
>
> On 07/11/12 18:47, CloudPress Hosting wrote:
>
>> To make sure I am understanding you are you saying account passwords are
>> hashed with MD5? I would certainly hope not.
>>
>> On Wed, Nov 7, 2012 at 6:18 AM, Harry Metcalfe <harry at dxw.com> wrote:
>>
>>  I've been investigating switching the sites we host to bcrypt, rather
>>> than
>>> MD5, which is the default. That MD5 is the default is regrettable but
>>> understandable given WordPress's need to remain portable. I understand
>>> that
>>> if the site was moved to a server without bcrypt support, those accounts
>>> would no longer be accessible. However, if that is not a consideration,
>>> it
>>> would surely be better for people to use bcrypt than MD5.
>>>
>>> I was going to make change on our sites by switching the portable flags
>>> in
>>> wp_check_password and wp_hash_password to false, after moving those
>>> functions into a plugin. This makes new passwords bcrypt and maintains
>>> backwards compatibility for passwords hashed using MD5. However, it
>>> misses
>>> the hashes which are created for password-protected posts, which happens
>>> in
>>> a function that is not pluggable.
>>>
>>> I've therefore created a global $wp_hasher instance (without portability)
>>> in a plugin, which I think should get called before WordPress has a
>>> chance
>>> to make it.
>>>
>>> Questions:
>>>
>>> 1. Is that right? Is there a scenario where WordPress will make a
>>>     wp_hasher before my mu plugin gets loaded, thereby preventing
>>>     someone from logging in?
>>> 2. Is it worth adding a WP_UNPORTABLE_PASSWORDS define so that people
>>>     who want to make the switch can do so without having to fiddle with
>>>     wp_hasher?
>>>
>>> Harry
>>> ______________________________****_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.****com <wp-hackers at lists.automattic.**com<wp-hackers at lists.automattic.com>
>>> >
>>> http://lists.automattic.com/****mailman/listinfo/wp-hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>> <ht**tp://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>> >
>>>
>>>  ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From harry at dxw.com  Wed Nov  7 19:02:33 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Wed, 07 Nov 2012 19:02:33 +0000
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
	<509AAEA3.9080300@dxw.com>
	<CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
Message-ID: <509AB049.6020208@dxw.com>

Nah. It's good. The individual salts are much better than having one 
salt for everything.

I think it uses MD5 because that's the only one that's supported by 
pretty much every version of PHP.

Harry


On 07/11/12 18:57, CloudPress Hosting wrote:
> Sounds a bit over complicated. I wonder why they would not just use SHA256
> with salt.
>
> On Wed, Nov 7, 2012 at 10:55 AM, Harry Metcalfe <harry at dxw.com> wrote:
>
>> No. In a nutshell:
>>
>> No, it's not just MD5. It's PHPASS, which (for WordPress) uses MD5 as a
>> cryptographic primitive. But there's more going on than that -- there are
>> multiple rounds of hashing, plus a salt that's unique to each hashed
>> password.
>>
>> It's not a bad system. It's just not as good as bcrypt.
>>
>> Harry
>>
>>
>>
>> On 07/11/12 18:47, CloudPress Hosting wrote:
>>
>>> To make sure I am understanding you are you saying account passwords are
>>> hashed with MD5? I would certainly hope not.
>>>
>>> On Wed, Nov 7, 2012 at 6:18 AM, Harry Metcalfe <harry at dxw.com> wrote:
>>>
>>>   I've been investigating switching the sites we host to bcrypt, rather
>>>> than
>>>> MD5, which is the default. That MD5 is the default is regrettable but
>>>> understandable given WordPress's need to remain portable. I understand
>>>> that
>>>> if the site was moved to a server without bcrypt support, those accounts
>>>> would no longer be accessible. However, if that is not a consideration,
>>>> it
>>>> would surely be better for people to use bcrypt than MD5.
>>>>
>>>> I was going to make change on our sites by switching the portable flags
>>>> in
>>>> wp_check_password and wp_hash_password to false, after moving those
>>>> functions into a plugin. This makes new passwords bcrypt and maintains
>>>> backwards compatibility for passwords hashed using MD5. However, it
>>>> misses
>>>> the hashes which are created for password-protected posts, which happens
>>>> in
>>>> a function that is not pluggable.
>>>>
>>>> I've therefore created a global $wp_hasher instance (without portability)
>>>> in a plugin, which I think should get called before WordPress has a
>>>> chance
>>>> to make it.
>>>>
>>>> Questions:
>>>>
>>>> 1. Is that right? Is there a scenario where WordPress will make a
>>>>      wp_hasher before my mu plugin gets loaded, thereby preventing
>>>>      someone from logging in?
>>>> 2. Is it worth adding a WP_UNPORTABLE_PASSWORDS define so that people
>>>>      who want to make the switch can do so without having to fiddle with
>>>>      wp_hasher?
>>>>
>>>> Harry
>>>> ______________________________****_________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.****com <wp-hackers at lists.automattic.**com<wp-hackers at lists.automattic.com>
>>>> http://lists.automattic.com/****mailman/listinfo/wp-hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>>> <ht**tp://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>   ______________________________**_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Wed Nov  7 19:02:44 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 7 Nov 2012 13:02:44 -0600
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
	<509AAEA3.9080300@dxw.com>
	<CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
Message-ID: <CAD-FghyXjnpxqXhREewYV38GmmRk__tqzXVxcxSZ4OEEJUcDsQ@mail.gmail.com>

For reference, PHPass is a framework for password encryption that is
not specific to any particular algorithm  It implements salting and
stretching, both of which increase the security of the password hash.

More info here: http://www.openwall.com/articles/PHP-Users-Passwords

-Otto


On Wed, Nov 7, 2012 at 12:57 PM, CloudPress Hosting
<cloudpresshosting at gmail.com> wrote:
> Sounds a bit over complicated. I wonder why they would not just use SHA256
> with salt.

From cloudpresshosting at gmail.com  Wed Nov  7 19:06:21 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Wed, 7 Nov 2012 11:06:21 -0800
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <509AB049.6020208@dxw.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
	<509AAEA3.9080300@dxw.com>
	<CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
	<509AB049.6020208@dxw.com>
Message-ID: <CALwRiz8O-CZkrpjN7LLXcnZHrEy_X6qPDDXL8UUEU-esJ7nB_g@mail.gmail.com>

I'm not saying they should use the same salt for each user I'm saying it
should use sha256 for the hash which i believe is supported by every
version WordPress already supports.
On Nov 7, 2012 11:02 AM, "Harry Metcalfe" <harry at dxw.com> wrote:

> Nah. It's good. The individual salts are much better than having one salt
> for everything.
>
> I think it uses MD5 because that's the only one that's supported by pretty
> much every version of PHP.
>
> Harry
>
>
> On 07/11/12 18:57, CloudPress Hosting wrote:
>
>> Sounds a bit over complicated. I wonder why they would not just use SHA256
>> with salt.
>>
>> On Wed, Nov 7, 2012 at 10:55 AM, Harry Metcalfe <harry at dxw.com> wrote:
>>
>>  No. In a nutshell:
>>>
>>> No, it's not just MD5. It's PHPASS, which (for WordPress) uses MD5 as a
>>> cryptographic primitive. But there's more going on than that -- there are
>>> multiple rounds of hashing, plus a salt that's unique to each hashed
>>> password.
>>>
>>> It's not a bad system. It's just not as good as bcrypt.
>>>
>>> Harry
>>>
>>>
>>>
>>> On 07/11/12 18:47, CloudPress Hosting wrote:
>>>
>>>  To make sure I am understanding you are you saying account passwords are
>>>> hashed with MD5? I would certainly hope not.
>>>>
>>>> On Wed, Nov 7, 2012 at 6:18 AM, Harry Metcalfe <harry at dxw.com> wrote:
>>>>
>>>>   I've been investigating switching the sites we host to bcrypt, rather
>>>>
>>>>> than
>>>>> MD5, which is the default. That MD5 is the default is regrettable but
>>>>> understandable given WordPress's need to remain portable. I understand
>>>>> that
>>>>> if the site was moved to a server without bcrypt support, those
>>>>> accounts
>>>>> would no longer be accessible. However, if that is not a consideration,
>>>>> it
>>>>> would surely be better for people to use bcrypt than MD5.
>>>>>
>>>>> I was going to make change on our sites by switching the portable flags
>>>>> in
>>>>> wp_check_password and wp_hash_password to false, after moving those
>>>>> functions into a plugin. This makes new passwords bcrypt and maintains
>>>>> backwards compatibility for passwords hashed using MD5. However, it
>>>>> misses
>>>>> the hashes which are created for password-protected posts, which
>>>>> happens
>>>>> in
>>>>> a function that is not pluggable.
>>>>>
>>>>> I've therefore created a global $wp_hasher instance (without
>>>>> portability)
>>>>> in a plugin, which I think should get called before WordPress has a
>>>>> chance
>>>>> to make it.
>>>>>
>>>>> Questions:
>>>>>
>>>>> 1. Is that right? Is there a scenario where WordPress will make a
>>>>>      wp_hasher before my mu plugin gets loaded, thereby preventing
>>>>>      someone from logging in?
>>>>> 2. Is it worth adding a WP_UNPORTABLE_PASSWORDS define so that people
>>>>>      who want to make the switch can do so without having to fiddle
>>>>> with
>>>>>      wp_hasher?
>>>>>
>>>>> Harry
>>>>> ______________________________******_________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.******com <wp-hackers at lists.automattic.***
>>>>> *com<wp-hackers at lists.**automattic.com<wp-hackers at lists.automattic.com>
>>>>> >
>>>>> http://lists.automattic.com/******mailman/listinfo/wp-hackers<http://lists.automattic.com/****mailman/listinfo/wp-hackers>
>>>>> <**http://lists.automattic.com/****mailman/listinfo/wp-hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>>>> >
>>>>> <ht**tp://lists.automattic.**com/**mailman/listinfo/wp-**hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>>>> <http://lists.**automattic.com/mailman/**listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>> >
>>>>>   ______________________________****_________________
>>>>>
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.****com <wp-hackers at lists.automattic.**com<wp-hackers at lists.automattic.com>
>>>> >
>>>> http://lists.automattic.com/****mailman/listinfo/wp-hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>>> <ht**tp://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>> >
>>>>
>>>>  ______________________________****_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.****com <wp-hackers at lists.automattic.**com<wp-hackers at lists.automattic.com>
>>> >
>>> http://lists.automattic.com/****mailman/listinfo/wp-hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>> <ht**tp://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>> >
>>>
>>>  ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From harry at dxw.com  Wed Nov  7 19:07:45 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Wed, 07 Nov 2012 19:07:45 +0000
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <CALwRiz8O-CZkrpjN7LLXcnZHrEy_X6qPDDXL8UUEU-esJ7nB_g@mail.gmail.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
	<509AAEA3.9080300@dxw.com>
	<CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
	<509AB049.6020208@dxw.com>
	<CALwRiz8O-CZkrpjN7LLXcnZHrEy_X6qPDDXL8UUEU-esJ7nB_g@mail.gmail.com>
Message-ID: <509AB181.7020304@dxw.com>

Ah. Ok. Not so sure about that. Perhaps it's because PHPass is an 
external library and they don't want to modify it?

Otto - any idea?

Harry


On 07/11/12 19:06, CloudPress Hosting wrote:
> I'm not saying they should use the same salt for each user I'm saying it
> should use sha256 for the hash which i believe is supported by every
> version WordPress already supports.
> On Nov 7, 2012 11:02 AM, "Harry Metcalfe" <harry at dxw.com> wrote:
>
>> Nah. It's good. The individual salts are much better than having one salt
>> for everything.
>>
>> I think it uses MD5 because that's the only one that's supported by pretty
>> much every version of PHP.
>>
>> Harry
>>
>>
>> On 07/11/12 18:57, CloudPress Hosting wrote:
>>
>>> Sounds a bit over complicated. I wonder why they would not just use SHA256
>>> with salt.
>>>
>>> On Wed, Nov 7, 2012 at 10:55 AM, Harry Metcalfe <harry at dxw.com> wrote:
>>>
>>>   No. In a nutshell:
>>>> No, it's not just MD5. It's PHPASS, which (for WordPress) uses MD5 as a
>>>> cryptographic primitive. But there's more going on than that -- there are
>>>> multiple rounds of hashing, plus a salt that's unique to each hashed
>>>> password.
>>>>
>>>> It's not a bad system. It's just not as good as bcrypt.
>>>>
>>>> Harry
>>>>
>>>>
>>>>
>>>> On 07/11/12 18:47, CloudPress Hosting wrote:
>>>>
>>>>   To make sure I am understanding you are you saying account passwords are
>>>>> hashed with MD5? I would certainly hope not.
>>>>>
>>>>> On Wed, Nov 7, 2012 at 6:18 AM, Harry Metcalfe <harry at dxw.com> wrote:
>>>>>
>>>>>    I've been investigating switching the sites we host to bcrypt, rather
>>>>>
>>>>>> than
>>>>>> MD5, which is the default. That MD5 is the default is regrettable but
>>>>>> understandable given WordPress's need to remain portable. I understand
>>>>>> that
>>>>>> if the site was moved to a server without bcrypt support, those
>>>>>> accounts
>>>>>> would no longer be accessible. However, if that is not a consideration,
>>>>>> it
>>>>>> would surely be better for people to use bcrypt than MD5.
>>>>>>
>>>>>> I was going to make change on our sites by switching the portable flags
>>>>>> in
>>>>>> wp_check_password and wp_hash_password to false, after moving those
>>>>>> functions into a plugin. This makes new passwords bcrypt and maintains
>>>>>> backwards compatibility for passwords hashed using MD5. However, it
>>>>>> misses
>>>>>> the hashes which are created for password-protected posts, which
>>>>>> happens
>>>>>> in
>>>>>> a function that is not pluggable.
>>>>>>
>>>>>> I've therefore created a global $wp_hasher instance (without
>>>>>> portability)
>>>>>> in a plugin, which I think should get called before WordPress has a
>>>>>> chance
>>>>>> to make it.
>>>>>>
>>>>>> Questions:
>>>>>>
>>>>>> 1. Is that right? Is there a scenario where WordPress will make a
>>>>>>       wp_hasher before my mu plugin gets loaded, thereby preventing
>>>>>>       someone from logging in?
>>>>>> 2. Is it worth adding a WP_UNPORTABLE_PASSWORDS define so that people
>>>>>>       who want to make the switch can do so without having to fiddle
>>>>>> with
>>>>>>       wp_hasher?
>>>>>>
>>>>>> Harry
>>>>>> ______________________________******_________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers at lists.automattic.******com <wp-hackers at lists.automattic.***
>>>>>> *com<wp-hackers at lists.**automattic.com<wp-hackers at lists.automattic.com>
>>>>>> http://lists.automattic.com/******mailman/listinfo/wp-hackers<http://lists.automattic.com/****mailman/listinfo/wp-hackers>
>>>>>> <**http://lists.automattic.com/****mailman/listinfo/wp-hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>>>>> <ht**tp://lists.automattic.**com/**mailman/listinfo/wp-**hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>>>>> <http://lists.**automattic.com/mailman/**listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>>>    ______________________________****_________________
>>>>>>
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.****com <wp-hackers at lists.automattic.**com<wp-hackers at lists.automattic.com>
>>>>> http://lists.automattic.com/****mailman/listinfo/wp-hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>>>> <ht**tp://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>>   ______________________________****_________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.****com <wp-hackers at lists.automattic.**com<wp-hackers at lists.automattic.com>
>>>> http://lists.automattic.com/****mailman/listinfo/wp-hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>>> <ht**tp://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>   ______________________________**_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Wed Nov  7 19:15:45 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 7 Nov 2012 13:15:45 -0600
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <CALwRiz8O-CZkrpjN7LLXcnZHrEy_X6qPDDXL8UUEU-esJ7nB_g@mail.gmail.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
	<509AAEA3.9080300@dxw.com>
	<CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
	<509AB049.6020208@dxw.com>
	<CALwRiz8O-CZkrpjN7LLXcnZHrEy_X6qPDDXL8UUEU-esJ7nB_g@mail.gmail.com>
Message-ID: <CAD-Fghwrj4BJ9HrwNmLYvRtpO_69gWFkqrhQdMKgxcwyO4qu-Q@mail.gmail.com>

On Wed, Nov 7, 2012 at 8:18 AM, Harry Metcalfe <harry at dxw.com> wrote:
> However, if that is not a consideration, it
> would surely be better for people to use bcrypt than MD5.

On Wed, Nov 7, 2012 at 1:06 PM, CloudPress Hosting
<cloudpresshosting at gmail.com> wrote:
> I'm not saying they should use the same salt for each user I'm saying it
> should use sha256 for the hash which i believe is supported by every
> version WordPress already supports.

To respond to both of these points: Actually, it doesn't make any real
difference. The underlying cryptographic hash function is pretty much
irrelevant to the concept of password storage.

When encrypting the passwords for storage, you're basically trying for
a very specific goal. The hash must be one-way computable, and it must
take time to crack via brute force, given the hash in advance. That
is, if somebody breaks into your data and gets the hashes, then
reversing them should be as difficult as possible.

- Salting makes it difficult for an attacker to pre-compute the hashes
for a large set of data. Essentially, it makes a password longer. The
salt itself is not secret, and is stored with the hash value.

- Stretching a hash means repeating the hash over and over again, for
many iterations. While repeating a hash a hundred times won't make any
significant speed difference to the login process, it does make the
password cracking process take 100 times longer since that much more
computation has to be used.

Both of these methods apply to *any* hashing scheme, when you are
hashing passwords, and these are where your real password security
comes into play. What choice you use for the hash algorithm itself
doesn't matter, since the attacker can run the same hash algorithm
too. Unless the hash algorithm is extremely slow, which they are
explicitly designed not to be, they are all pretty much equal. As long
as you can't run it backwards, it's fine for this use. MD5, SHA-1,
bcrypt, SHA-256, these are all basically equal for this purpose, their
differences come from other use-cases, not password hashing.

Cases where passwords have been stored in just a hash, for example
plain MD5, are overblown in the sense that it wouldn't make any
difference if the password was stored in plain bcrypt either. The
"plain" part is the issue, not the choice of hashing algorithm.

-Otto

From harry at dxw.com  Wed Nov  7 19:22:05 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Wed, 07 Nov 2012 19:22:05 +0000
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <CAD-Fghwrj4BJ9HrwNmLYvRtpO_69gWFkqrhQdMKgxcwyO4qu-Q@mail.gmail.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
	<509AAEA3.9080300@dxw.com>
	<CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
	<509AB049.6020208@dxw.com>
	<CALwRiz8O-CZkrpjN7LLXcnZHrEy_X6qPDDXL8UUEU-esJ7nB_g@mail.gmail.com>
	<CAD-Fghwrj4BJ9HrwNmLYvRtpO_69gWFkqrhQdMKgxcwyO4qu-Q@mail.gmail.com>
Message-ID: <509AB4DD.50902@dxw.com>


> The underlying cryptographic hash function is pretty much
> irrelevant to the concept of password storage.
As far as choosing between MD5/SHA256/similar, I agree. But bcrypt is 
different.

> Unless the hash algorithm is extremely slow, [...]
This is exactly the point. bcrypt is, by design, very slow. And it can 
be adjusted to make it slower as computing power becomes cheaper. More:

http://en.wikipedia.org/wiki/Bcrypt
http://codahale.com/how-to-safely-store-a-password/



From otto at ottodestruct.com  Wed Nov  7 19:24:06 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 7 Nov 2012 13:24:06 -0600
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <509AB4DD.50902@dxw.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
	<509AAEA3.9080300@dxw.com>
	<CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
	<509AB049.6020208@dxw.com>
	<CALwRiz8O-CZkrpjN7LLXcnZHrEy_X6qPDDXL8UUEU-esJ7nB_g@mail.gmail.com>
	<CAD-Fghwrj4BJ9HrwNmLYvRtpO_69gWFkqrhQdMKgxcwyO4qu-Q@mail.gmail.com>
	<509AB4DD.50902@dxw.com>
Message-ID: <CAD-FghwE2Sv=xoD1cHJ6+nxPB4wQ2j9y9i6MYrPpQJmwqRDy_g@mail.gmail.com>

Yes, that said, bcrypt was indeed intentionally designed to be
slow-as-heck for hashing, so it would be more secure in theory. I have
my doubts about that in practice. Modern GPU based crackers are
uber-fast.

Since we're on 5.3 and up now, it does make sense to remove the "true"
from those functions, since every PHP 5.3 should have bcrypt in it.
Might be worth making a core ticket for it instead of a plugin.

-Otto


On Wed, Nov 7, 2012 at 1:22 PM, Harry Metcalfe <harry at dxw.com> wrote:
>
>> The underlying cryptographic hash function is pretty much
>> irrelevant to the concept of password storage.
>
> As far as choosing between MD5/SHA256/similar, I agree. But bcrypt is
> different.
>
>> Unless the hash algorithm is extremely slow, [...]
>
> This is exactly the point. bcrypt is, by design, very slow. And it can be
> adjusted to make it slower as computing power becomes cheaper. More:
>
> http://en.wikipedia.org/wiki/Bcrypt
> http://codahale.com/how-to-safely-store-a-password/
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From harry at dxw.com  Wed Nov  7 19:27:25 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Wed, 07 Nov 2012 19:27:25 +0000
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <CAD-FghwE2Sv=xoD1cHJ6+nxPB4wQ2j9y9i6MYrPpQJmwqRDy_g@mail.gmail.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
	<509AAEA3.9080300@dxw.com>
	<CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
	<509AB049.6020208@dxw.com>
	<CALwRiz8O-CZkrpjN7LLXcnZHrEy_X6qPDDXL8UUEU-esJ7nB_g@mail.gmail.com>
	<CAD-Fghwrj4BJ9HrwNmLYvRtpO_69gWFkqrhQdMKgxcwyO4qu-Q@mail.gmail.com>
	<509AB4DD.50902@dxw.com>
	<CAD-FghwE2Sv=xoD1cHJ6+nxPB4wQ2j9y9i6MYrPpQJmwqRDy_g@mail.gmail.com>
Message-ID: <509AB61D.8020803@dxw.com>

I entirely agree. I have seen a discussion somewhere supporting using 
MD5 for portability though.

I didn't realise, but there's already a trac ticket: 
http://core.trac.wordpress.org/ticket/21022

I shall go add my $0.02 to it.

Harry


On 07/11/12 19:24, Otto wrote:
> Yes, that said, bcrypt was indeed intentionally designed to be
> slow-as-heck for hashing, so it would be more secure in theory. I have
> my doubts about that in practice. Modern GPU based crackers are
> uber-fast.
>
> Since we're on 5.3 and up now, it does make sense to remove the "true"
> from those functions, since every PHP 5.3 should have bcrypt in it.
> Might be worth making a core ticket for it instead of a plugin.
>
> -Otto
>
>
> On Wed, Nov 7, 2012 at 1:22 PM, Harry Metcalfe <harry at dxw.com> wrote:
>>> The underlying cryptographic hash function is pretty much
>>> irrelevant to the concept of password storage.
>> As far as choosing between MD5/SHA256/similar, I agree. But bcrypt is
>> different.
>>
>>> Unless the hash algorithm is extremely slow, [...]
>> This is exactly the point. bcrypt is, by design, very slow. And it can be
>> adjusted to make it slower as computing power becomes cheaper. More:
>>
>> http://en.wikipedia.org/wiki/Bcrypt
>> http://codahale.com/how-to-safely-store-a-password/
>>
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From david at alittlecode.com  Thu Nov  8 00:52:34 2012
From: david at alittlecode.com (David @ ALittleCode)
Date: Wed, 7 Nov 2012 18:52:34 -0600
Subject: [wp-hackers] Desiring relative,
	pretty paths to plugin and theme folders (multisite-friendly)
Message-ID: <12E0BC19-101A-44A8-87BF-5FE208AEE99E@alittlecode.com>

I'd like to be able to rewrite links to theme and plugin folders so that they appear as relative, custom paths.

Disclaimer: I'm new to the list, so forgive me if this has been asked recently. I'm also new to serious WP hacking but intend to develop my skills while shaping up a couple of multisite installations for some serious duty. I intend to manage lots of sub-sites, many of them with mapped custom domains. So I'm eager for advice as I start to dive in. That said, let me get back to what I'm after --

Throughout my multisite sites, I'd like paths such as these:
http://domain.com/wp-content/themes/

To appear as, simply:
/_ui/

That's
no "http://domain.com/"
and with "wp-content/themes/" rewritten as simply /_ui/

In essence, I'm trying to accomplish some of the URL cleanup that the Roots Theme employs (http://www.rootstheme.com), but in a way that is not theme-dependent, and which is multisite friendly. (If I can do it, I'd also love to remove the name of the currently active theme from the path, if that's possible.)

While I'm at it, I'd like to customize the path by which multisite users login, changing it to something such as simply "http://domain.com/login/"

For this latter task, I've found this plugin, by Ozh, which rewrites the login path via WordPress's Rewrite API:
http://wordpress.org/extend/plugins/ozh-simpler-login-url/ 
--> Ozh explains this use of the rewrite API here: http://planetozh.com/blog/2011/01/pretty-login-url-a-simple-rewrite-api-plugin-example/

My questions:
Is it possible to build on the approach in Ozh's plugin to rewrite paths to theme and plugin directories as well? 
Can the rewrite api make the paths appear as relative links, rather than absolute?

OR would relative paths require something like the approach of the Roots Theme? **But implemented via *plugin* rather than theme functions.**

See these lines from the roots cleanup.php file https://github.com/retlehs/roots/blob/master/lib/cleanup.php

/**
 * Clean up output of stylesheet <link> tags
 */
function roots_clean_style_tag($input) {
  preg_match_all("!<link rel='stylesheet'\s?(id='[^']+')?\s+href='(.*)' type='text/css' media='(.*)' />!", $input, $matches);
  // Only display media if it's print
  $media = $matches[3][0] === 'print' ? ' media="print"' : '';
  return '<link rel="stylesheet" href="' . $matches[2][0] . '"' . $media . '>' . "\n";
}

add_filter('style_loader_tag', 'roots_clean_style_tag');

/**
 * Root relative URLs
 *
 * WordPress likes to use absolute URLs on everything - let's clean that up.
 * Inspired by http://www.456bereastreet.com/archive/201010/how_to_make_wordpress_urls_root_relative/
 *
 * You can enable/disable this feature in config.php:
 * current_theme_supports('root-relative-urls');
 *
 * @author Scott Walkinshaw <scott.walkinshaw at gmail.com>
 */
function roots_root_relative_url($input) {
  $output = preg_replace_callback(
    '!(https?://[^/|"]+)([^"]+)?!',
    create_function(
      '$matches',
      // If full URL is home_url("/") and this isn't a subdir install, return a slash for relative root
      'if (isset($matches[0]) && $matches[0] === home_url("/") && str_replace("http://", "", home_url("/", "http"))==$_SERVER["HTTP_HOST"]) { return "/";' .
      // If domain is equal to home_url("/"), then make URL relative
      '} elseif (isset($matches[0]) && strpos($matches[0], home_url("/")) !== false) { return $matches[2];' .
      // If domain is not equal to home_url("/"), do not make external link relative
      '} else { return $matches[0]; };'
    ),
    $input
  );

  return $output;
}





From burobjorn at gmail.com  Thu Nov  8 09:55:31 2012
From: burobjorn at gmail.com (BjornW)
Date: Thu, 08 Nov 2012 10:55:31 +0100
Subject: [wp-hackers] In search of some love & attention:
	http://core.trac.wordpress.org/ticket/17860
Message-ID: <509B8193.7020709@gmail.com>

Hi,

This issue http://core.trac.wordpress.org/ticket/17860 which has been
dormant for 14 months has just bitten us hard. I'd like to rekindle some
interest in this & trying to solve it, but it seems no decission has
been made in what direction the solution should be sought.

So any core developer want to chime in? We're very much willing to help
out & have resources to do so.

ps: We're working on a big (+30K people WordPress Multisite install) and
this bug makes user management virtually impossible.

-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Werkdagen:
Van maandag t/m donderdag vanaf 10:00
Vrijdag is voor experimenteren en eigen projecten.

Postbus 14145
3508 SE Utrecht
The Netherlands

tel: +31 6 49 74 78 70
http://www.burobjorn.nl

From lists at rotorised.com  Thu Nov  8 10:45:14 2012
From: lists at rotorised.com (Ryan McCue)
Date: Thu, 08 Nov 2012 20:45:14 +1000
Subject: [wp-hackers] Should password hashing portability be
	configurable?
In-Reply-To: <CAD-FghwE2Sv=xoD1cHJ6+nxPB4wQ2j9y9i6MYrPpQJmwqRDy_g@mail.gmail.com>
References: <509A6DBB.4090201@dxw.com>
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>
	<509AAEA3.9080300@dxw.com>
	<CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>
	<509AB049.6020208@dxw.com>
	<CALwRiz8O-CZkrpjN7LLXcnZHrEy_X6qPDDXL8UUEU-esJ7nB_g@mail.gmail.com>
	<CAD-Fghwrj4BJ9HrwNmLYvRtpO_69gWFkqrhQdMKgxcwyO4qu-Q@mail.gmail.com>
	<509AB4DD.50902@dxw.com>
	<CAD-FghwE2Sv=xoD1cHJ6+nxPB4wQ2j9y9i6MYrPpQJmwqRDy_g@mail.gmail.com>
Message-ID: <509B8D3A.8010204@rotorised.com>

Otto wrote:
> Yes, that said, bcrypt was indeed intentionally designed to be
> slow-as-heck for hashing, so it would be more secure in theory. I have
> my doubts about that in practice. Modern GPU based crackers are
> uber-fast.

The idea is that as computers get faster, you increase the "cost" of the
bcrypt function (where iterations = 2^cost). At the moment, the cost is
8 (see wp-includes/class-phpass.php, PasswordHash::PasswordHash() ),
which is 256 rounds.

(See also: http://security.stackexchange.com/a/17238 )

> Since we're on 5.3 and up now, it does make sense to remove the "true"
> from those functions, since every PHP 5.3 should have bcrypt in it.

Just to reiterate what was mentioned on #21022 [1], we're not actually
on 5.3+ yet, we're still on 5.2.4+, just in case anyone was confused.

[1]: http://core.trac.wordpress.org/ticket/21022


-- 
Ryan McCue
<http://ryanmccue.info/>

From kwight at kwight.ca  Fri Nov  9 15:59:48 2012
From: kwight at kwight.ca (Kirk Wight)
Date: Fri, 9 Nov 2012 10:59:48 -0500
Subject: [wp-hackers] child themes of child themes (grandchildren)
Message-ID: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>

Currently it's not possible to create a child theme of a child theme. Can
someone explain the limitation? Is it a technical limitation, most likely
never to be changed, or is it simply something low on the list of
implementation? Maybe a sanity thing (endless child themes piled up would
be pretty unmanageable)?

Just curious. I always want someone to have the chance of making a child
theme of a theme I distribute, which means I'll always distribute parent
themes on /extend and to clients.

From otto at ottodestruct.com  Fri Nov  9 17:11:28 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 9 Nov 2012 11:11:28 -0600
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
Message-ID: <CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>

It's a sanity thing. Essentially, child themes are fine, while
grandchild themes take it a bit too far. If you need to customize
further than a child theme, then you're probably doing it wrong to
begin with and should look at alternatives. The Custom CSS feature of
Jetpack, for example.

-Otto


On Fri, Nov 9, 2012 at 9:59 AM, Kirk Wight <kwight at kwight.ca> wrote:
> Currently it's not possible to create a child theme of a child theme. Can
> someone explain the limitation? Is it a technical limitation, most likely
> never to be changed, or is it simply something low on the list of
> implementation? Maybe a sanity thing (endless child themes piled up would
> be pretty unmanageable)?
>
> Just curious. I always want someone to have the chance of making a child
> theme of a theme I distribute, which means I'll always distribute parent
> themes on /extend and to clients.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From shastaw at gmail.com  Fri Nov  9 17:23:56 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Fri, 9 Nov 2012 09:23:56 -0800
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
Message-ID: <CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>

On Fri, Nov 9, 2012 at 9:11 AM, Otto <otto at ottodestruct.com> wrote:

> It's a sanity thing. Essentially, child themes are fine, while
> grandchild themes take it a bit too far.


And yet languages like Java handle inheritance gracefully without such
limitations.



> If you need to customize
> further than a child theme, then you're probably doing it wrong to
> begin with and should look at alternatives.


Ok, I'm game... I have clients come to me regularly and say "I want the
Crystal (Genesis) theme."  I said "sure!" and install it.  Then they say
"Oh...but I wanted a dark upper portion, and instead of a slider on the
front page I want some other custom thing, and by the way can I have this
other dodad over here.. and...

And by the time I'm done what I have is no longer the Crystal theme, but a
child theme of Genesis based on Crystal.  Which is fine in as far as it
goes, but obviously if Genesis is updated and Crystal is updated to
coordinate with the changes my client is left with no upgrade path but to
pay me more money to update my customized version of Crystal.

Obviously I do use best practices like utilizing the hooks to keep as much
of the modification in one place as possible, but that doesn't change the
fact that I'm right back to the situation children were invented to fix: no
upgrade path.

So what's the "right" way to handle this client's request for
"Crystal...but not quite."?

- Shasta







/wp-hackers <http://lists.automattic.com/mailman/listinfo/wp-hackers>

>  _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ipstenu at ipstenu.org  Fri Nov  9 17:32:18 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Fri, 09 Nov 2012 09:32:18 -0800
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
Message-ID: <509D3E22.8000601@ipstenu.org>

Genesis is a managed theme, vs a 'traditional' theme framework. The 
child theme is a whole package, meant to be customized not via the theme 
files, but their in-dash interface. So in this case... you're using 
Genesis wrong.

If possible, use the Genesis tools and edit it that way. When you can't, 
make an mu-plugin that calls the CSS and function changes you need. That 
way, the clients can't hurt themselves too much. Double plus good for 
checking if the active theme is the one you edited for them.

But really once they start making you fork the child theme, then yeah, 
you have a new child theme. It's just shifting how you think about 
themes when you use a managed theme :)

This isn't endemic of just Genesis FWIW, there are other themes that 
don't work with children at all.

Shasta Willson wrote:
>
> On Fri, Nov 9, 2012 at 9:11 AM, Otto<otto at ottodestruct.com> wrote:
>
>>
>> It's a sanity thing. Essentially, child themes are fine, while
>> grandchild themes take it a bit too far.
>
>
>
> And yet languages like Java handle inheritance gracefully without such
> limitations.
>
>
>
>>
>> If you need to customize
>> further than a child theme, then you're probably doing it wrong to
>> begin with and should look at alternatives.
>
>
>
> Ok, I'm game... I have clients come to me regularly and say "I want the
> Crystal (Genesis) theme." I said "sure!" and install it. Then they say
> "Oh...but I wanted a dark upper portion, and instead of a slider on the
> front page I want some other custom thing, and by the way can I have this
> other dodad over here.. and...
>
> And by the time I'm done what I have is no longer the Crystal theme, but a
> child theme of Genesis based on Crystal. Which is fine in as far as it
> goes, but obviously if Genesis is updated and Crystal is updated to
> coordinate with the changes my client is left with no upgrade path but to
> pay me more money to update my customized version of Crystal.
>
> Obviously I do use best practices like utilizing the hooks to keep as much
> of the modification in one place as possible, but that doesn't change the
> fact that I'm right back to the situation children were invented to 
> fix: no
> upgrade path.
>
> So what's the "right" way to handle this client's request for
> "Crystal...but not quite."?
>
> - Shasta
>
>
>
>
>
>
>
> /wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mike at newclarity.net  Fri Nov  9 17:39:45 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 9 Nov 2012 12:39:45 -0500
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <509D3E22.8000601@ipstenu.org>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<509D3E22.8000601@ipstenu.org>
Message-ID: <B90E46C7-D96A-471D-BA50-D637735A308E@newclarity.net>

On Nov 9, 2012, at 12:32 PM, Mika A Epstein <ipstenu at ipstenu.org> wrote:
> Genesis is a managed theme, vs a 'traditional' theme framework.

That's the first time I've heard such a named distinction.  To ensure I and maybe others don't misunderstand would you be so kind as to define those terms and then compare and contrast them?

-Mike


From ipstenu at ipstenu.org  Fri Nov  9 17:48:38 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Fri, 09 Nov 2012 09:48:38 -0800
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <B90E46C7-D96A-471D-BA50-D637735A308E@newclarity.net>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<509D3E22.8000601@ipstenu.org>
	<B90E46C7-D96A-471D-BA50-D637735A308E@newclarity.net>
Message-ID: <509D41F6.30600@ipstenu.org>

I don't know if they're official by any means, but I started looking 
into the different kind of themes and came up with these:

A Theme: TwentyEleven etc.

Stands on it's own but you can make a child if you have to.

tl;dr: The 'traditional' theme that everyone thinks of.

A Theme Framework: _s, Bootstrap, Hybrid.

Used to build a parent theme off of. No one actually uses the theme as a 
theme on it's own without forking and adding in their bells and 
whistles. These are generally turned into full-blown themes, and use the 
normal parent/child relationships. The framework itself is not a 
stand-alone theme, however, and the person who builds their parent theme 
off a framework is responsible for updating their theme when the 
framework is updated.

tl;dr: You use a framework to build a theme.

A Managed Theme: Genesis, Thesis (I'm missing some, I have a longer list 
on my other computer)

These themes are not intended for children themes! Everything that you 
should be doing is within the WP Dashboard. All CSS tweaks, and even 
functions, can be added there-in. Sometimes these are just parent themes 
that you don't make children off of, ever, and others are children 
themselves of a framework. The best ones have a way to export your theme 
settings. To make things easier, you'll find a lot of plugins that do 
what most people want, and they never need to edit code.

tl;dr: Don't touch the theme code files.

---

Obviously there's some crossover with these, but I tend to slap those 
labels on the 'top' level theme, so since the Genesis parent theme is 
clearly managed, it's a managed theme, even though it acts like a 
framework in some respects.

When a managed theme doesn't meet your needs, then you have the wrong 
child and need to either fork the closet one to suit your needs, or 
build your own.

Mike Schinkel wrote:
>
> On Nov 9, 2012, at 12:32 PM, Mika A Epstein<ipstenu at ipstenu.org> wrote:
>>
>> Genesis is a managed theme, vs a 'traditional' theme framework.
>
>
> That's the first time I've heard such a named distinction. To ensure I 
> and maybe others don't misunderstand would you be so kind as to define 
> those terms and then compare and contrast them?
>
> -Mike
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mike at newclarity.net  Fri Nov  9 18:25:06 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 9 Nov 2012 13:25:06 -0500
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <509D41F6.30600@ipstenu.org>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<509D3E22.8000601@ipstenu.org>
	<B90E46C7-D96A-471D-BA50-D637735A308E@newclarity.net>
	<509D41F6.30600@ipstenu.org>
Message-ID: <54D12731-78AC-44E5-971D-C5C7AA7B7E62@newclarity.net>

Hi Mika,

Thanks for taking the time to explain. 

Good classifications are often very helpful, especially if the terms are broadly known and well understood.  If people are choosing the wrong theme because they like it looks and not because of it having the proper architecture then providing guidance for users could result in fewer wrongly picked themes and fewer unhappy users.  I think WordPress currently has a bit of the "hammer-nail" problem with respect to themes.

So your classification sounds like:

1.) Good: A great blog post from you,
2.) Better: An article on Codex that gets consensus from the core docs team,
3.) Best: A discussion on Make with interested parties to nail down these so these terms and their distinctions and with adoption by theme vendors so people can use these well-known terms and theme vendors can advertise their themes as being of a certain type in order to educate their would-be customers.

Thoughts?

-Mike 

On Nov 9, 2012, at 12:48 PM, Mika A Epstein <ipstenu at ipstenu.org> wrote:

> I don't know if they're official by any means, but I started looking into the different kind of themes and came up with these:
> 
> A Theme: TwentyEleven etc.
> 
> Stands on it's own but you can make a child if you have to.
> 
> tl;dr: The 'traditional' theme that everyone thinks of.
> 
> A Theme Framework: _s, Bootstrap, Hybrid.
> 
> Used to build a parent theme off of. No one actually uses the theme as a theme on it's own without forking and adding in their bells and whistles. These are generally turned into full-blown themes, and use the normal parent/child relationships. The framework itself is not a stand-alone theme, however, and the person who builds their parent theme off a framework is responsible for updating their theme when the framework is updated.
> 
> tl;dr: You use a framework to build a theme.
> 
> A Managed Theme: Genesis, Thesis (I'm missing some, I have a longer list on my other computer)
> 
> These themes are not intended for children themes! Everything that you should be doing is within the WP Dashboard. All CSS tweaks, and even functions, can be added there-in. Sometimes these are just parent themes that you don't make children off of, ever, and others are children themselves of a framework. The best ones have a way to export your theme settings. To make things easier, you'll find a lot of plugins that do what most people want, and they never need to edit code.
> 
> tl;dr: Don't touch the theme code files.
> 
> ---
> 
> Obviously there's some crossover with these, but I tend to slap those labels on the 'top' level theme, so since the Genesis parent theme is clearly managed, it's a managed theme, even though it acts like a framework in some respects.
> 
> When a managed theme doesn't meet your needs, then you have the wrong child and need to either fork the closet one to suit your needs, or build your own.
> 
> Mike Schinkel wrote:
>> 
>> On Nov 9, 2012, at 12:32 PM, Mika A Epstein<ipstenu at ipstenu.org> wrote:
>>> 
>>> Genesis is a managed theme, vs a 'traditional' theme framework.
>> 
>> 
>> That's the first time I've heard such a named distinction. To ensure I and maybe others don't misunderstand would you be so kind as to define those terms and then compare and contrast them?
>> 
>> -Mike
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From lists at lobaugh.net  Fri Nov  9 18:38:09 2012
From: lists at lobaugh.net (Ben Lobaugh)
Date: Fri, 09 Nov 2012 10:38:09 -0800
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <54D12731-78AC-44E5-971D-C5C7AA7B7E62@newclarity.net>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<509D3E22.8000601@ipstenu.org>
	<B90E46C7-D96A-471D-BA50-D637735A308E@newclarity.net>
	<509D41F6.30600@ipstenu.org>
	<54D12731-78AC-44E5-971D-C5C7AA7B7E62@newclarity.net>
Message-ID: <509D4D91.5020801@lobaugh.net>

I agree with all three points! In fact I forwarded the classification 
message to several people in the Seattle community. Someone should 
definitely do a post about it :)


On 11/9/12 10:25 AM, Mike Schinkel wrote:
> Hi Mika,
>
> Thanks for taking the time to explain.
>
> Good classifications are often very helpful, especially if the terms are broadly known and well understood.  If people are choosing the wrong theme because they like it looks and not because of it having the proper architecture then providing guidance for users could result in fewer wrongly picked themes and fewer unhappy users.  I think WordPress currently has a bit of the "hammer-nail" problem with respect to themes.
>
> So your classification sounds like:
>
> 1.) Good: A great blog post from you,
> 2.) Better: An article on Codex that gets consensus from the core docs team,
> 3.) Best: A discussion on Make with interested parties to nail down these so these terms and their distinctions and with adoption by theme vendors so people can use these well-known terms and theme vendors can advertise their themes as being of a certain type in order to educate their would-be customers.
>
> Thoughts?
>
> -Mike
>
> On Nov 9, 2012, at 12:48 PM, Mika A Epstein <ipstenu at ipstenu.org> wrote:
>
>> I don't know if they're official by any means, but I started looking into the different kind of themes and came up with these:
>>
>> A Theme: TwentyEleven etc.
>>
>> Stands on it's own but you can make a child if you have to.
>>
>> tl;dr: The 'traditional' theme that everyone thinks of.
>>
>> A Theme Framework: _s, Bootstrap, Hybrid.
>>
>> Used to build a parent theme off of. No one actually uses the theme as a theme on it's own without forking and adding in their bells and whistles. These are generally turned into full-blown themes, and use the normal parent/child relationships. The framework itself is not a stand-alone theme, however, and the person who builds their parent theme off a framework is responsible for updating their theme when the framework is updated.
>>
>> tl;dr: You use a framework to build a theme.
>>
>> A Managed Theme: Genesis, Thesis (I'm missing some, I have a longer list on my other computer)
>>
>> These themes are not intended for children themes! Everything that you should be doing is within the WP Dashboard. All CSS tweaks, and even functions, can be added there-in. Sometimes these are just parent themes that you don't make children off of, ever, and others are children themselves of a framework. The best ones have a way to export your theme settings. To make things easier, you'll find a lot of plugins that do what most people want, and they never need to edit code.
>>
>> tl;dr: Don't touch the theme code files.
>>
>> ---
>>
>> Obviously there's some crossover with these, but I tend to slap those labels on the 'top' level theme, so since the Genesis parent theme is clearly managed, it's a managed theme, even though it acts like a framework in some respects.
>>
>> When a managed theme doesn't meet your needs, then you have the wrong child and need to either fork the closet one to suit your needs, or build your own.
>>
>> Mike Schinkel wrote:
>>> On Nov 9, 2012, at 12:32 PM, Mika A Epstein<ipstenu at ipstenu.org> wrote:
>>>> Genesis is a managed theme, vs a 'traditional' theme framework.
>>>
>>> That's the first time I've heard such a named distinction. To ensure I and maybe others don't misunderstand would you be so kind as to define those terms and then compare and contrast them?
>>>
>>> -Mike
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From kwight at kwight.ca  Fri Nov  9 18:48:49 2012
From: kwight at kwight.ca (Kirk Wight)
Date: Fri, 9 Nov 2012 13:48:49 -0500
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <509D41F6.30600@ipstenu.org>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<509D3E22.8000601@ipstenu.org>
	<B90E46C7-D96A-471D-BA50-D637735A308E@newclarity.net>
	<509D41F6.30600@ipstenu.org>
Message-ID: <CAFQFuXMCBPS0ZOF9o4kZSx5SY54tcyD4ifuP3Vp6Zku5Q0mKYQ@mail.gmail.com>

So what's Crystal again? A managed theme based on Genesis, or a child theme
of Genesis?..

On Friday, November 9, 2012, Mika A Epstein wrote:

> I don't know if they're official by any means, but I started looking into
> the different kind of themes and came up with these:
>
> A Theme: TwentyEleven etc.
>
> Stands on it's own but you can make a child if you have to.
>
> tl;dr: The 'traditional' theme that everyone thinks of.
>
> A Theme Framework: _s, Bootstrap, Hybrid.
>
> Used to build a parent theme off of. No one actually uses the theme as a
> theme on it's own without forking and adding in their bells and whistles.
> These are generally turned into full-blown themes, and use the normal
> parent/child relationships. The framework itself is not a stand-alone
> theme, however, and the person who builds their parent theme off a
> framework is responsible for updating their theme when the framework is
> updated.
>
> tl;dr: You use a framework to build a theme.
>
> A Managed Theme: Genesis, Thesis (I'm missing some, I have a longer list
> on my other computer)
>
> These themes are not intended for children themes! Everything that you
> should be doing is within the WP Dashboard. All CSS tweaks, and even
> functions, can be added there-in. Sometimes these are just parent themes
> that you don't make children off of, ever, and others are children
> themselves of a framework. The best ones have a way to export your theme
> settings. To make things easier, you'll find a lot of plugins that do what
> most people want, and they never need to edit code.
>
> tl;dr: Don't touch the theme code files.
>
> ---
>
> Obviously there's some crossover with these, but I tend to slap those
> labels on the 'top' level theme, so since the Genesis parent theme is
> clearly managed, it's a managed theme, even though it acts like a framework
> in some respects.
>
> When a managed theme doesn't meet your needs, then you have the wrong
> child and need to either fork the closet one to suit your needs, or build
> your own.
>
> Mike Schinkel wrote:
>
>>
>> On Nov 9, 2012, at 12:32 PM, Mika A Epstein<ipstenu at ipstenu.org> wrote:
>>
>>>
>>> Genesis is a managed theme, vs a 'traditional' theme framework.
>>>
>>
>>
>> That's the first time I've heard such a named distinction. To ensure I
>> and maybe others don't misunderstand would you be so kind as to define
>> those terms and then compare and contrast them?
>>
>> -Mike
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From otto at ottodestruct.com  Fri Nov  9 18:54:47 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 9 Nov 2012 12:54:47 -0600
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
Message-ID: <CAD-FghzArua=RGofGK4=LWSZtLGR5kgCp9cesV5mUO2nHmOHQA@mail.gmail.com>

On Fri, Nov 9, 2012 at 11:23 AM, Shasta Willson <shastaw at gmail.com> wrote:
> On Fri, Nov 9, 2012 at 9:11 AM, Otto <otto at ottodestruct.com> wrote:
>> It's a sanity thing. Essentially, child themes are fine, while
>> grandchild themes take it a bit too far.
>
> And yet languages like Java handle inheritance gracefully without such
> limitations.

WordPress is a CMS, not a programming language.


>> If you need to customize
>> further than a child theme, then you're probably doing it wrong to
>> begin with and should look at alternatives.
>
> Ok, I'm game... I have clients come to me regularly and say "I want the
> Crystal (Genesis) theme."  I said "sure!" and install it.  Then they say
> "Oh...but I wanted a dark upper portion, and instead of a slider on the
> front page I want some other custom thing, and by the way can I have this
> other dodad over here.. and...
>
> And by the time I'm done what I have is no longer the Crystal theme, but a
> child theme of Genesis based on Crystal.  Which is fine in as far as it
> goes, but obviously if Genesis is updated and Crystal is updated to
> coordinate with the changes my client is left with no upgrade path but to
> pay me more money to update my customized version of Crystal.
>
> Obviously I do use best practices like utilizing the hooks to keep as much
> of the modification in one place as possible, but that doesn't change the
> fact that I'm right back to the situation children were invented to fix: no
> upgrade path.
>
> So what's the "right" way to handle this client's request for
> "Crystal...but not quite."?

Not to dismiss your question, but have you asked the Genesis folks
what they think the "right way" is?

While there's always one or two right ways to do things, they're not
always the same for all cases. Different use cases mean different
solutions will exist.

See, I fully agree with Mike in that when you have a hammer,
everything looks like a nail. In this case, a normal theme would be
the nail, and a customized child theme would be the hammer. But
systems like Genesis have taken that nail and added threads to it,
turning it into a screw. So while you can use the hammer to stick the
screw into the wall, the wall will come out all wonky and it probably
won't hold up your pictures very well. Perhaps you should ask the
manufacturer how to use the screwdriver they've provided you with.

Child themes were never really intended to solve the problem of
customizing a theme. They work well for that, for normal themes, but
originally they were intended for something more like the Sandbox
theme. Sandbox, if you're not aware, was one of the first "generic"
themes that could be easily changed entirely by simply writing a bunch
of new CSS. Child themes were modeled based on that principle, and
made a bit more generic because generic is always a bit better for
core. Making custom changes for a site in a way that would survive
upgrades of the parent turned out to be quite handy this way, but that
was not their original purpose.

There's other ways to make customizations survive upgrades. Put them
in a plugin, for example. It's surprising how much you can change from
a plugin. Or try to limit your changes entirely to CSS (always a good
idea in any case), and then put those changes in using Jetpack's
Custom CSS feature. These are better alternatives even for "normal"
themes too, and systems like Genesis and such may have other
mechanisms as well that would suit your needs better. Ask them about
it.

-Otto

From shastaw at gmail.com  Fri Nov  9 19:13:20 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Fri, 9 Nov 2012 11:13:20 -0800
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <CAD-FghzArua=RGofGK4=LWSZtLGR5kgCp9cesV5mUO2nHmOHQA@mail.gmail.com>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<CAD-FghzArua=RGofGK4=LWSZtLGR5kgCp9cesV5mUO2nHmOHQA@mail.gmail.com>
Message-ID: <CAGguigc1U3udV253=LvV_13orEBF7MFyyd-7CTtuG1w0xxZ+zw@mail.gmail.com>

Not to dismiss your question, but have you asked the Genesis folks
> what they think the "right way" is?
>

I did.  They told me to simply modify the Crystal theme's files, creating
my own child.  (It may be that they simply don't update children, as
Crystal was lacking a number of admin-supported customizations that were
present in other Genesis themes.)

I like the distinction that was made by Mika because it not only gives a
way for professionals to quickly categorize (and locate) a product that is
what they're looking for, but it arguably will help in communication with
clients.  If they were industry standard terms I could say "We need to
decide whether you want a managed theme, which will be cheaper and faster
to develop and easier to upgrade over time, but which may require some
compromises in your design, or whether you want a custom child theme which
will allow you to have exactly the site you want but will require my
intervention to upgrade over time".

It would also be much easier to explain to the client why I made the first
eight changes and am balking at the ninth.


Or try to limit your changes entirely to CSS (always a good
> idea in any case)
>
> So here's a question...I just removed some content I didn't want in a
theme with display: none.

But I'm still taking the load hit for it, and I'm not clear on the SEO
implications.  (I did it because it was fast and I needed a prototype
NOW.)  Normally I would actually remove it from the theme before
deployment, to avoid these issues.

Are you claiming it is better to use display:none than to remove it from
the theme files? (We'll assume it wasn't added with a hook.)  This seems
like coding to accommodate Wordpress, rather than building a clean
effective web site...isn't that exactly the sort of hammering in a screw
process you were talking about?

- Shasta

From ipstenu at ipstenu.org  Fri Nov  9 19:50:39 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Fri, 09 Nov 2012 11:50:39 -0800
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <CAGguigc1U3udV253=LvV_13orEBF7MFyyd-7CTtuG1w0xxZ+zw@mail.gmail.com>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<CAD-FghzArua=RGofGK4=LWSZtLGR5kgCp9cesV5mUO2nHmOHQA@mail.gmail.com>
	<CAGguigc1U3udV253=LvV_13orEBF7MFyyd-7CTtuG1w0xxZ+zw@mail.gmail.com>
Message-ID: <509D5E8F.9040609@ipstenu.org>

StudioPress doesn't (generally) update child themes, so it's safe to 
edit them (though I have a minimum hack called minimika so I can 
experiment and safely roll back). I poked them about that since it 
spooked me at first!

Crystal is a child managed theme.

>  So your classification sounds like:
>
>  1.) Good: A great blog post from you,

It's actually been sitting in draft since I redesigned my sites last 
year ;) Need to finish it. That's where I C/P'd the email from.

>  2.) Better: An article on Codex that gets consensus from the core docs 
team,

I'd actually skip this in favor of doing #3 first and then coming back 
to write it in the codex whatever comes next :)

>  3.) Best: A discussion on Make with interested parties to nail down 
these so these terms and
>  their distinctions and with adoption by theme vendors so people can 
use these well-known
>  terms and theme vendors can advertise their themes as being of a 
certain type in order to
>  educate their would-be customers.

Definitely would be nice to have something 'accepted' if not official.

From otto at ottodestruct.com  Fri Nov  9 20:12:00 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 9 Nov 2012 14:12:00 -0600
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <CAGguigc1U3udV253=LvV_13orEBF7MFyyd-7CTtuG1w0xxZ+zw@mail.gmail.com>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<CAD-FghzArua=RGofGK4=LWSZtLGR5kgCp9cesV5mUO2nHmOHQA@mail.gmail.com>
	<CAGguigc1U3udV253=LvV_13orEBF7MFyyd-7CTtuG1w0xxZ+zw@mail.gmail.com>
Message-ID: <CAD-FghyB+82R0otoWo54zp7kjKWOaAMpNodDjd1edoANseE96g@mail.gmail.com>

On Fri, Nov 9, 2012 at 1:13 PM, Shasta Willson <shastaw at gmail.com> wrote:
> Or try to limit your changes entirely to CSS (always a good
>> idea in any case)
>>
> So here's a question...I just removed some content I didn't want in a
> theme with display: none.

Ideally, the theme would be written such that parts you want to remove
would be removable easily instead of using this particular method, I'd
say. But we don't live in an ideal world.

The question is whether you want to modify the theme and thus make the
upgrade process more complex, or use some simple CSS to change minor
things in the way you want.

Note that this is not a problem particular to WordPress in specific...
if you're using any software with an upgrade path, and you want to
modify it, you have the same basic issues. WordPress provides lots of
means to change things with plugins and such, but if a theme chooses
not to use them, well, not much WordPress can do about that.

-Otto

From mike at newclarity.net  Fri Nov  9 20:17:56 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 9 Nov 2012 15:17:56 -0500
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <509D5E8F.9040609@ipstenu.org>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<CAD-FghzArua=RGofGK4=LWSZtLGR5kgCp9cesV5mUO2nHmOHQA@mail.gmail.com>
	<CAGguigc1U3udV253=LvV_13orEBF7MFyyd-7CTtuG1w0xxZ+zw@mail.gmail.com>
	<509D5E8F.9040609@ipstenu.org>
Message-ID: <9B90A49A-0D3F-4318-BB96-D63C9E00335C@newclarity.net>

On Nov 9, 2012, at 2:50 PM, Mika A Epstein <ipstenu at ipstenu.org> wrote:
> I'd actually skip this in favor of doing #3 first and then coming back to write it in the codex whatever comes next :)

Yeah. I was assuming #3 would be inclusive of #2 and #1. :)

-Mike

From mike at newclarity.net  Fri Nov  9 20:26:21 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 9 Nov 2012 15:26:21 -0500
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <CAD-FghzArua=RGofGK4=LWSZtLGR5kgCp9cesV5mUO2nHmOHQA@mail.gmail.com>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<CAD-FghzArua=RGofGK4=LWSZtLGR5kgCp9cesV5mUO2nHmOHQA@mail.gmail.com>
Message-ID: <9C11006E-E609-48B4-B89B-8B82E4AF74AF@newclarity.net>

On Nov 9, 2012, at 1:54 PM, Otto <otto at ottodestruct.com> wrote:
> See, I fully agree with Mike in that when you have a hammer,
> everything looks like a nail.

Thanks. But I figured I should elaborate on that. 

What I was implying was that WordPress hammer is it's support of parent and child themes and lack of support for plugin/library dependencies and that the nails are parent and child themes. So when people really need a screw they keep using nails.

Specifically what WordPress is missing is the ability for a theme to depend on a library/plugin and an ability for the theme to manage that dependency.  Many theme Frameworks have been packaged as parent themes when they really should be plugins/libraries and their child themes should be packages as parent themes. But because themes can't auto-install plugins/libraries that they depends on few if any theme vendors have chosen to package them in this manner. So theme vendors only use nails because using screws would require them to put more burden on their customers than they believe the customers would accept.  JMTCW of course.

Hopefully this ticket will get traction and reconcile the issue:

http://core.trac.wordpress.org/ticket/22316

-Mike

From nick at thoughtrefinery.com  Fri Nov  9 20:38:33 2012
From: nick at thoughtrefinery.com (Nicholas Ciske)
Date: Fri, 9 Nov 2012 14:38:33 -0600
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <mailman.2954.1352491962.1480.wp-hackers@lists.automattic.com>
References: <mailman.2954.1352491962.1480.wp-hackers@lists.automattic.com>
Message-ID: <4190F675-7D52-472F-927E-33E759F7A5DA@thoughtrefinery.com>

On Friday, November 9, 2012, Mika A Epstein wrote:

> A Managed Theme: Genesis, Thesis (I'm missing some, I have a longer list
> on my other computer)
> 
> These themes are not intended for children themes! Everything that you
> should be doing is within the WP Dashboard. All CSS tweaks, and even
> functions, can be added there-in. Sometimes these are just parent themes
> that you don't make children off of, ever, and others are children
> themselves of a framework. The best ones have a way to export your theme
> settings. To make things easier, you'll find a lot of plugins that do what
> most people want, and they never need to edit code.
> 
> tl;dr: Don't touch the theme code files.


Genesis is generally called a framework (I'd argue "managed theme" doesn't really apply once you've looked under the hood - perhaps parent theme framework?) for building *custom* child themes - this how I and other developers primarily use it. You don't touch the Genesis code as everything is editable via options, hooks, filters, or template overrides (at least I've yet to find something).

StudioPress also sells pre-built child themes based on Genesis. This is how many people use Genesis child themes. I occasionally use a child theme as the basis for a site. Prose (one StudioPress child theme more akin to Thesis than Genesis itself) has lots of knobs and dials, but most require CSS changes and/or PHP code edits/additions to do changes beyond what the theme author intended.

The recommended way (from StudioPress, as mentioned previously) to make edits to a pre-built child theme is to just modify the child theme directly. When they do update child themes, they are usually a major revision (completely new code but same name), not a minor revision, so updating is more complex than just copying the child theme files over the old ones (so a grandchild theme wouldn't really help here unless edits were minor and then reapplying them is minimal).

If editing a child theme makes you lose sleep at night, you can go the plugin route -- which is possible with Genesis as everything is a hook or filter, so you can totally rewire a child theme from a plugin. Whether this allows you to upgrade in the future depends on what is changed, but it should be more future proof than direct edits.
e.g. http://www.wp-code.com/wordpress-snippets/wordpress-grandchildren-themes/

Nick Ciske
http://thoughtrefinery.com/
@nciske





From ipstenu at ipstenu.org  Fri Nov  9 21:11:41 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Fri, 09 Nov 2012 13:11:41 -0800
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <4190F675-7D52-472F-927E-33E759F7A5DA@thoughtrefinery.com>
References: <mailman.2954.1352491962.1480.wp-hackers@lists.automattic.com>
	<4190F675-7D52-472F-927E-33E759F7A5DA@thoughtrefinery.com>
Message-ID: <509D718D.20008@ipstenu.org>

Nick, I agree. The slippery slope of definitions is fun.

Genesis is a framework, but you don't treat it like a 'normal' framework 
like _s and Bootstrap. You don't take Genesis, fork it, and publish your 
own version. You always treat it as a parent, which is why I call it a 
managed theme. It's managed from the back end vs forked.

Nicholas Ciske wrote:
>
> On Friday, November 9, 2012, Mika A Epstein wrote:
>
>>
>> A Managed Theme: Genesis, Thesis (I'm missing some, I have a longer list
>> on my other computer)
>>
>> These themes are not intended for children themes! Everything that you
>> should be doing is within the WP Dashboard. All CSS tweaks, and even
>> functions, can be added there-in. Sometimes these are just parent themes
>> that you don't make children off of, ever, and others are children
>> themselves of a framework. The best ones have a way to export your theme
>> settings. To make things easier, you'll find a lot of plugins that do 
>> what
>> most people want, and they never need to edit code.
>>
>> tl;dr: Don't touch the theme code files.
>
>
>
> Genesis is generally called a framework (I'd argue "managed theme" 
> doesn't really apply once you've looked under the hood - perhaps 
> parent theme framework?) for building *custom* child themes - this how 
> I and other developers primarily use it. You don't touch the Genesis 
> code as everything is editable via options, hooks, filters, or 
> template overrides (at least I've yet to find something).
>
> StudioPress also sells pre-built child themes based on Genesis. This 
> is how many people use Genesis child themes. I occasionally use a 
> child theme as the basis for a site. Prose (one StudioPress child 
> theme more akin to Thesis than Genesis itself) has lots of knobs and 
> dials, but most require CSS changes and/or PHP code edits/additions to 
> do changes beyond what the theme author intended.
>
> The recommended way (from StudioPress, as mentioned previously) to 
> make edits to a pre-built child theme is to just modify the child 
> theme directly. When they do update child themes, they are usually a 
> major revision (completely new code but same name), not a minor 
> revision, so updating is more complex than just copying the child 
> theme files over the old ones (so a grandchild theme wouldn't really 
> help here unless edits were minor and then reapplying them is minimal).
>
> If editing a child theme makes you lose sleep at night, you can go the 
> plugin route -- which is possible with Genesis as everything is a hook 
> or filter, so you can totally rewire a child theme from a plugin. 
> Whether this allows you to upgrade in the future depends on what is 
> changed, but it should be more future proof than direct edits.
> e.g. 
> http://www.wp-code.com/wordpress-snippets/wordpress-grandchildren-themes/
>
> Nick Ciske
> http://thoughtrefinery.com/
> @nciske
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mail at scribu.net  Sun Nov 11 05:57:22 2012
From: mail at scribu.net (scribu)
Date: Sun, 11 Nov 2012 07:57:22 +0200
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <509D718D.20008@ipstenu.org>
References: <mailman.2954.1352491962.1480.wp-hackers@lists.automattic.com>
	<4190F675-7D52-472F-927E-33E759F7A5DA@thoughtrefinery.com>
	<509D718D.20008@ipstenu.org>
Message-ID: <CABzSYNMg9EHzOz=9=82yz2xNnBvUxpmLZfGixSfD9E1d4CeEDA@mail.gmail.com>

On Fri, Nov 9, 2012 at 11:11 PM, Mika A Epstein <ipstenu at ipstenu.org> wrote:

> Genesis is a framework, but you don't treat it like a 'normal' framework
> like _s and Bootstrap. You don't take Genesis, fork it, and publish your
> own version. You always treat it as a parent, which is why I call it a
> managed theme. It's managed from the back end vs forked.
>

Please don't call _s and Bootstrap "frameworks". A theme that is meant to
be forked is called a "starter theme".

-- 
http://scribu.net

From mark.smith1187 at yahoo.com  Sun Nov 11 06:01:09 2012
From: mark.smith1187 at yahoo.com (Mark Smith)
Date: Sat, 10 Nov 2012 22:01:09 -0800 (PST)
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
Message-ID: <1352613669.58489.YahooMailNeo@web142503.mail.bf1.yahoo.com>

I run numerous sites. Rather than have each site use the built in update check I have disabled all update checks from the site via a plugin I made.

Instead I am building a php based cron job that will query the api.wordpress.org site to check for updates and send me an email notification. Personally I prefer that to the?constant?nags in WordPress to upgrade. While I install minor upgrades as soon as they come out often times I will wait on new major version having to see a nag until I do.

Core updates were easy enough, a simple cURL request to?http://api.wordpress.org/core/version-check/1.6/?returns a serialized string which includes the current stable release version.?

$output = unserialize($output);
$current_version = $output['offers'][0]['current'];
unset($output);

Gets me the version number currently?available?which I can check against my installed versions easily enough.

Plugins and themes are a bit more difficult because I have to post data about what plugins and themes I am checking. ?This is obviously not documented, the only documentation is a list of the API endpoints at http://codex.wordpress.org/WordPress.org_API.

I took a look at update.php to see how WordPress does it but the?myriad?of WordPress functions seems to just confuse me as to what exactly is being posted to the API endpoints?http://api.wordpress.org/plugins/update-check/1.0/?and?http://api.wordpress.org/themes/update-check/1.0/. Can anyone explain to me what eactly needs to be posted to get the current version of each plugin and theme.

Thanks.

From cloudpresshosting at gmail.com  Sun Nov 11 07:26:51 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Sat, 10 Nov 2012 23:26:51 -0800
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <1352613669.58489.YahooMailNeo@web142503.mail.bf1.yahoo.com>
References: <1352613669.58489.YahooMailNeo@web142503.mail.bf1.yahoo.com>
Message-ID: <CALwRiz_ucgP6a_sKtEDWQuvttLM16HxGBWnrJ_5wgicav45VPg@mail.gmail.com>

Can't say that I knew how the API worked before but with a little clever
hacking I modified a test install of WordPress to post the request to
requestb.in then looked at what was posted.

The WordPress site posts a serialized string. The key is "plugins" and this
is what the value of that post data looks like.

O:8:"stdClass":2:{s:7:"plugins";a:2:{s:19:"akismet/akismet.php";a:11:{s:4:"Name";s:7:"Akismet";s:9:"PluginURI";s:31:"
http://akismet.com/?return=true";s:7:"Version";s:5:"2.5.6";s:11:"Description";s:481:"Used
by millions, Akismet is quite possibly the best way in the world to
<strong>protect your blog from comment and trackback spam</strong>. It
keeps your site protected from spam even while you sleep. To get started:
1) Click the "Activate" link to the left of this description, 2) <a href="
http://akismet.com/get/?return=true">Sign up for an Akismet API key</a>,
and 3) Go to your <a href="admin.php?page=akismet-key-config">Akismet
configuration</a> page, and save your API
key.";s:6:"Author";s:10:"Automattic";s:9:"AuthorURI";s:40:"
http://automattic.com/wordpress-plugins/";s:10:"TextDomain";s:0:"";s:10:"DomainPath";s:0:"";s:7:"Network";b:0;s:5:"Title";s:7:"Akismet";s:10:"AuthorName";s:10:"Automattic";}s:9:"hello.php";a:11:{s:4:"Name";s:11:"Hello
Dolly";s:9:"PluginURI";s:48:"
http://wordpress.org/extend/plugins/hello-dolly/";s:7:"Version";s:3:"1.6";s:11:"Description";s:295:"This
is not just a plugin, it symbolizes the hope and enthusiasm of an entire
generation summed up in two words sung most famously by Louis Armstrong:
Hello, Dolly. When activated you will randomly see a lyric from
<cite>Hello, Dolly</cite> in the upper right of your admin screen on every
page.";s:6:"Author";s:14:"Matt Mullenweg";s:9:"AuthorURI";s:13:"
http://ma.tt/";s:10:"TextDomain";s:0:"";s:10:"DomainPath";s:0:"";s:7:"Network";b:0;s:5:"Title";s:11:"Hello
Dolly";s:10:"AuthorName";s:14:"Matt Mullenweg";}}s:6:"active";a:0:{}}

A bit of a mess but if you unserialize it then var_dump the resulting array
you can more easily see what it shows. It basically has all the meta data
for each plugin. Post that to
http://api.wordpress.org/plugins/update-check/1.0/ using cURL and what I
got back was an empty serialized string, meaning all plugins were up to
date. Modify one of the version numbers in the serialized string that is
sent to be a previous version number and what I get back is a serialized
string of meta data on the plugin with an available update like this.

a:1:{s:19:"akismet/akismet.php";O:8:"stdClass":5:{s:2:"id";s:2:"15";s:4:"slug";s:7:"akismet";s:11:"new_version";s:5:"2.5.6";s:3:"url";s:44:"
http://wordpress.org/extend/plugins/akismet/";s:7:"package";s:55:"
http://downloads.wordpress.org/plugin/akismet.2.5.6.zip";}}

I would assume themes won't be much different.

That was an interesting exercise though I should make a blog post about it.
Also I have to admit I like the idea to use your own script to detect
updates and just email you, I might consider making something similar since
I manage multiple WordPress sites for myself and for my clients. Thanks for
the idea.


On Sat, Nov 10, 2012 at 10:01 PM, Mark Smith <mark.smith1187 at yahoo.com>wrote:

> I run numerous sites. Rather than have each site use the built in update
> check I have disabled all update checks from the site via a plugin I made.
>
> Instead I am building a php based cron job that will query the
> api.wordpress.org site to check for updates and send me an email
> notification. Personally I prefer that to the constant nags in WordPress to
> upgrade. While I install minor upgrades as soon as they come out often
> times I will wait on new major version having to see a nag until I do.
>
> Core updates were easy enough, a simple cURL request to
> http://api.wordpress.org/core/version-check/1.6/ returns a serialized
> string which includes the current stable release version.
>
> $output = unserialize($output);
> $current_version = $output['offers'][0]['current'];
> unset($output);
>
> Gets me the version number currently available which I can check against
> my installed versions easily enough.
>
> Plugins and themes are a bit more difficult because I have to post data
> about what plugins and themes I am checking.  This is obviously not
> documented, the only documentation is a list of the API endpoints at
> http://codex.wordpress.org/WordPress.org_API.
>
> I took a look at update.php to see how WordPress does it but the myriad of
> WordPress functions seems to just confuse me as to what exactly is being
> posted to the API endpoints
> http://api.wordpress.org/plugins/update-check/1.0/ and
> http://api.wordpress.org/themes/update-check/1.0/. Can anyone explain to
> me what eactly needs to be posted to get the current version of each plugin
> and theme.
>
> Thanks.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From cloudpresshosting at gmail.com  Sun Nov 11 08:14:17 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Sun, 11 Nov 2012 00:14:17 -0800
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <CALwRiz_ucgP6a_sKtEDWQuvttLM16HxGBWnrJ_5wgicav45VPg@mail.gmail.com>
References: <1352613669.58489.YahooMailNeo@web142503.mail.bf1.yahoo.com>
	<CALwRiz_ucgP6a_sKtEDWQuvttLM16HxGBWnrJ_5wgicav45VPg@mail.gmail.com>
Message-ID: <CALwRiz-HhOxoGK4mB_ZGqCETSau+JgnmCveEDX-oYJxo8tqDOQ@mail.gmail.com>

<shameless plug>
If anyone is interested I have decided to blog about customizations I am
making to WordPress starting with a post about this.

http://hackingwp.wordpress.com/2012/11/11/wordpress-org-update-checking-api/
</shameless plug>

It was an interesting concept I just wanted to share since I kinda like the
idea of what the OP was trying to accomplish anyway hope that helped your
out Mark.


On Sat, Nov 10, 2012 at 11:26 PM, CloudPress Hosting <
cloudpresshosting at gmail.com> wrote:

> Can't say that I knew how the API worked before but with a little clever
> hacking I modified a test install of WordPress to post the request to
> requestb.in then looked at what was posted.
>
> The WordPress site posts a serialized string. The key is "plugins" and
> this is what the value of that post data looks like.
>
>
> O:8:"stdClass":2:{s:7:"plugins";a:2:{s:19:"akismet/akismet.php";a:11:{s:4:"Name";s:7:"Akismet";s:9:"PluginURI";s:31:"
> http://akismet.com/?return=true";s:7:"Version";s:5:"2.5.6";s:11:"Description";s:481:"Used
> by millions, Akismet is quite possibly the best way in the world to
> <strong>protect your blog from comment and trackback spam</strong>. It
> keeps your site protected from spam even while you sleep. To get started:
> 1) Click the "Activate" link to the left of this description, 2) <a href="
> http://akismet.com/get/?return=true">Sign up for an Akismet API key</a>,
> and 3) Go to your <a href="admin.php?page=akismet-key-config">Akismet
> configuration</a> page, and save your API
> key.";s:6:"Author";s:10:"Automattic";s:9:"AuthorURI";s:40:"
> http://automattic.com/wordpress-plugins/";s:10:"TextDomain";s:0:"";s:10:"DomainPath";s:0:"";s:7:"Network";b:0;s:5:"Title";s:7:"Akismet";s:10:"AuthorName";s:10:"Automattic";}s:9:"hello.php";a:11:{s:4:"Name";s:11:"Hello
> Dolly";s:9:"PluginURI";s:48:"
> http://wordpress.org/extend/plugins/hello-dolly/";s:7:"Version";s:3:"1.6";s:11:"Description";s:295:"This
> is not just a plugin, it symbolizes the hope and enthusiasm of an entire
> generation summed up in two words sung most famously by Louis Armstrong:
> Hello, Dolly. When activated you will randomly see a lyric from
> <cite>Hello, Dolly</cite> in the upper right of your admin screen on every
> page.";s:6:"Author";s:14:"Matt Mullenweg";s:9:"AuthorURI";s:13:"
> http://ma.tt/";s:10:"TextDomain";s:0:"";s:10:"DomainPath";s:0:"";s:7:"Network";b:0;s:5:"Title";s:11:"Hello
> Dolly";s:10:"AuthorName";s:14:"Matt Mullenweg";}}s:6:"active";a:0:{}}
>
> A bit of a mess but if you unserialize it then var_dump the resulting
> array you can more easily see what it shows. It basically has all the meta
> data for each plugin. Post that to
> http://api.wordpress.org/plugins/update-check/1.0/ using cURL and what I
> got back was an empty serialized string, meaning all plugins were up to
> date. Modify one of the version numbers in the serialized string that is
> sent to be a previous version number and what I get back is a serialized
> string of meta data on the plugin with an available update like this.
>
>
> a:1:{s:19:"akismet/akismet.php";O:8:"stdClass":5:{s:2:"id";s:2:"15";s:4:"slug";s:7:"akismet";s:11:"new_version";s:5:"2.5.6";s:3:"url";s:44:"
> http://wordpress.org/extend/plugins/akismet/";s:7:"package";s:55:"
> http://downloads.wordpress.org/plugin/akismet.2.5.6.zip";}}
>
> I would assume themes won't be much different.
>
> That was an interesting exercise though I should make a blog post about
> it. Also I have to admit I like the idea to use your own script to detect
> updates and just email you, I might consider making something similar since
> I manage multiple WordPress sites for myself and for my clients. Thanks for
> the idea.
>
>
>
> On Sat, Nov 10, 2012 at 10:01 PM, Mark Smith <mark.smith1187 at yahoo.com>wrote:
>
>> I run numerous sites. Rather than have each site use the built in update
>> check I have disabled all update checks from the site via a plugin I made.
>>
>> Instead I am building a php based cron job that will query the
>> api.wordpress.org site to check for updates and send me an email
>> notification. Personally I prefer that to the constant nags in WordPress to
>> upgrade. While I install minor upgrades as soon as they come out often
>> times I will wait on new major version having to see a nag until I do.
>>
>> Core updates were easy enough, a simple cURL request to
>> http://api.wordpress.org/core/version-check/1.6/ returns a serialized
>> string which includes the current stable release version.
>>
>> $output = unserialize($output);
>> $current_version = $output['offers'][0]['current'];
>> unset($output);
>>
>> Gets me the version number currently available which I can check against
>> my installed versions easily enough.
>>
>> Plugins and themes are a bit more difficult because I have to post data
>> about what plugins and themes I am checking.  This is obviously not
>> documented, the only documentation is a list of the API endpoints at
>> http://codex.wordpress.org/WordPress.org_API.
>>
>> I took a look at update.php to see how WordPress does it but
>> the myriad of WordPress functions seems to just confuse me as to what
>> exactly is being posted to the API endpoints
>> http://api.wordpress.org/plugins/update-check/1.0/ and
>> http://api.wordpress.org/themes/update-check/1.0/. Can anyone explain to
>> me what eactly needs to be posted to get the current version of each plugin
>> and theme.
>>
>> Thanks.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From otto at ottodestruct.com  Sun Nov 11 16:04:01 2012
From: otto at ottodestruct.com (Otto)
Date: Sun, 11 Nov 2012 10:04:01 -0600
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <1352613669.58489.YahooMailNeo@web142503.mail.bf1.yahoo.com>
References: <1352613669.58489.YahooMailNeo@web142503.mail.bf1.yahoo.com>
Message-ID: <CAD-FghxWf_R-pyzpdepNBWna10fROiUR6kquTdatw+KzWRx5mA@mail.gmail.com>

On Sun, Nov 11, 2012 at 12:01 AM, Mark Smith <mark.smith1187 at yahoo.com> wrote:
> Plugins and themes are a bit more difficult because I have to post data about what plugins and themes I am checking.  This is obviously not documented, the only documentation is a list of the API endpoints at http://codex.wordpress.org/WordPress.org_API.
>
> I took a look at update.php to see how WordPress does it but the myriad of WordPress functions seems to just confuse me as to what exactly is being posted to the API endpoints http://api.wordpress.org/plugins/update-check/1.0/ and http://api.wordpress.org/themes/update-check/1.0/. Can anyone explain to me what eactly needs to be posted to get the current version of each plugin and theme.

Look at the wp_update_plugins() and wp_update_themes() functions in
wp-includes/update.php. These do the actual gathering and sending of
the two update requests to the api. You can dump the information out
and take a look at it, it's really just a serialized list of the
plugins and such.

Basically, it's sending the list of all the plugins and their
information to the api, which checks all the plugins at once and
returns what needs to be updated and information about it. Same for
themes.

-Otto

From mark.smith1187 at yahoo.com  Sun Nov 11 16:17:21 2012
From: mark.smith1187 at yahoo.com (Mark Smith)
Date: Sun, 11 Nov 2012 08:17:21 -0800 (PST)
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <CALwRiz-HhOxoGK4mB_ZGqCETSau+JgnmCveEDX-oYJxo8tqDOQ@mail.gmail.com>
References: <1352613669.58489.YahooMailNeo@web142503.mail.bf1.yahoo.com>
	<CALwRiz_ucgP6a_sKtEDWQuvttLM16HxGBWnrJ_5wgicav45VPg@mail.gmail.com>
	<CALwRiz-HhOxoGK4mB_ZGqCETSau+JgnmCveEDX-oYJxo8tqDOQ@mail.gmail.com>
Message-ID: <1352650641.59823.YahooMailNeo@web142505.mail.bf1.yahoo.com>

That was very helpful cloudpress. Using your method it was much easier to see what is sent and I figured out what exactly is sent for themes.

array(3) { ["current_theme"]=> string(10) "twentyeleven" ["twentyeleven"]=> array(7) { ["Name"]=> string(13) "Twenty Eleven" ["Title"]=> string(13) "Twenty Eleven" ["Version"]=> string(3) "1.3" ["Author"]=> string(18) "the WordPress team" ["Author URI"]=> string(21) "http://wordpress.org/" ["Template"]=> string(12) "twentyeleven" ["Stylesheet"]=> string(12) "twentyeleven" } ["twentyten"]=> array(7) { ["Name"]=> string(10) "Twenty Ten" ["Title"]=> string(10) "Twenty Ten" ["Version"]=> string(3) "1.4" ["Author"]=> string(18) "the WordPress team" ["Author URI"]=> string(0) "" ["Template"]=> string(9) "twentyten" ["Stylesheet"]=> string(9) "twentyten" }
}
Thank you so much for your help.


----- Original Message -----
From: CloudPress Hosting <cloudpresshosting at gmail.com>
To: wp-hackers at lists.automattic.com
Cc: 
Sent: Sunday, November 11, 2012 12:14 AM
Subject: Re: [wp-hackers] Accessing Update Check API Outside of WordPress

<shameless plug>
If anyone is interested I have decided to blog about customizations I am
making to WordPress starting with a post about this.

http://hackingwp.wordpress.com/2012/11/11/wordpress-org-update-checking-api/
</shameless plug>

It was an interesting concept I just wanted to share since I kinda like the
idea of what the OP was trying to accomplish anyway hope that helped your
out Mark.


On Sat, Nov 10, 2012 at 11:26 PM, CloudPress Hosting <
cloudpresshosting at gmail.com> wrote:

> Can't say that I knew how the API worked before but with a little clever
> hacking I modified a test install of WordPress to post the request to
> requestb.in then looked at what was posted.
>
> The WordPress site posts a serialized string. The key is "plugins" and
> this is what the value of that post data looks like.
>
>
> O:8:"stdClass":2:{s:7:"plugins";a:2:{s:19:"akismet/akismet.php";a:11:{s:4:"Name";s:7:"Akismet";s:9:"PluginURI";s:31:"
> http://akismet.com/?return=true";s:7:"Version";s:5:"2.5.6";s:11:"Description";s:481:"Used
> by millions, Akismet is quite possibly the best way in the world to
> <strong>protect your blog from comment and trackback spam</strong>. It
> keeps your site protected from spam even while you sleep. To get started:
> 1) Click the "Activate" link to the left of this description, 2) <a href="
> http://akismet.com/get/?return=true">Sign up for an Akismet API key</a>,
> and 3) Go to your <a href="admin.php?page=akismet-key-config">Akismet
> configuration</a> page, and save your API
> key.";s:6:"Author";s:10:"Automattic";s:9:"AuthorURI";s:40:"
> http://automattic.com/wordpress-plugins/";s:10:"TextDomain";s:0:"";s:10:"DomainPath";s:0:"";s:7:"Network";b:0;s:5:"Title";s:7:"Akismet";s:10:"AuthorName";s:10:"Automattic";}s:9:"hello.php";a:11:{s:4:"Name";s:11:"Hello
> Dolly";s:9:"PluginURI";s:48:"
> http://wordpress.org/extend/plugins/hello-dolly/";s:7:"Version";s:3:"1.6";s:11:"Description";s:295:"This
> is not just a plugin, it symbolizes the hope and enthusiasm of an entire
> generation summed up in two words sung most famously by Louis Armstrong:
> Hello, Dolly. When activated you will randomly see a lyric from
> <cite>Hello, Dolly</cite> in the upper right of your admin screen on every
> page.";s:6:"Author";s:14:"Matt Mullenweg";s:9:"AuthorURI";s:13:"
> http://ma.tt/";s:10:"TextDomain";s:0:"";s:10:"DomainPath";s:0:"";s:7:"Network";b:0;s:5:"Title";s:11:"Hello
> Dolly";s:10:"AuthorName";s:14:"Matt Mullenweg";}}s:6:"active";a:0:{}}
>
> A bit of a mess but if you unserialize it then var_dump the resulting
> array you can more easily see what it shows. It basically has all the meta
> data for each plugin. Post that to
> http://api.wordpress.org/plugins/update-check/1.0/ using cURL and what I
> got back was an empty serialized string, meaning all plugins were up to
> date. Modify one of the version numbers in the serialized string that is
> sent to be a previous version number and what I get back is a serialized
> string of meta data on the plugin with an available update like this.
>
>
> a:1:{s:19:"akismet/akismet.php";O:8:"stdClass":5:{s:2:"id";s:2:"15";s:4:"slug";s:7:"akismet";s:11:"new_version";s:5:"2.5.6";s:3:"url";s:44:"
> http://wordpress.org/extend/plugins/akismet/";s:7:"package";s:55:"
> http://downloads.wordpress.org/plugin/akismet.2.5.6.zip";}}
>
> I would assume themes won't be much different.
>
> That was an interesting exercise though I should make a blog post about
> it. Also I have to admit I like the idea to use your own script to detect
> updates and just email you, I might consider making something similar since
> I manage multiple WordPress sites for myself and for my clients. Thanks for
> the idea.
>
>
>
> On Sat, Nov 10, 2012 at 10:01 PM, Mark Smith <mark.smith1187 at yahoo.com>wrote:
>
>> I run numerous sites. Rather than have each site use the built in update
>> check I have disabled all update checks from the site via a plugin I made.
>>
>> Instead I am building a php based cron job that will query the
>> api.wordpress.org site to check for updates and send me an email
>> notification. Personally I prefer that to the constant nags in WordPress to
>> upgrade. While I install minor upgrades as soon as they come out often
>> times I will wait on new major version having to see a nag until I do.
>>
>> Core updates were easy enough, a simple cURL request to
>> http://api.wordpress.org/core/version-check/1.6/ returns a serialized
>> string which includes the current stable release version.
>>
>> $output = unserialize($output);
>> $current_version = $output['offers'][0]['current'];
>> unset($output);
>>
>> Gets me the version number currently available which I can check against
>> my installed versions easily enough.
>>
>> Plugins and themes are a bit more difficult because I have to post data
>> about what plugins and themes I am checking.? This is obviously not
>> documented, the only documentation is a list of the API endpoints at
>> http://codex.wordpress.org/WordPress.org_API.
>>
>> I took a look at update.php to see how WordPress does it but
>> the myriad of WordPress functions seems to just confuse me as to what
>> exactly is being posted to the API endpoints
>> http://api.wordpress.org/plugins/update-check/1.0/ and
>> http://api.wordpress.org/themes/update-check/1.0/. Can anyone explain to
>> me what eactly needs to be posted to get the current version of each plugin
>> and theme.
>>
>> Thanks.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From ipstenu at ipstenu.org  Sun Nov 11 16:24:10 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Sun, 11 Nov 2012 08:24:10 -0800
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <CABzSYNMg9EHzOz=9=82yz2xNnBvUxpmLZfGixSfD9E1d4CeEDA@mail.gmail.com>
References: <mailman.2954.1352491962.1480.wp-hackers@lists.automattic.com>
	<4190F675-7D52-472F-927E-33E759F7A5DA@thoughtrefinery.com>
	<509D718D.20008@ipstenu.org>
	<CABzSYNMg9EHzOz=9=82yz2xNnBvUxpmLZfGixSfD9E1d4CeEDA@mail.gmail.com>
Message-ID: <509FD12A.6040008@ipstenu.org>

Ah, that's probably a better term all around. Thanks :)

scribu wrote:
>
> On Fri, Nov 9, 2012 at 11:11 PM, Mika A Epstein<ipstenu at ipstenu.org> 
> wrote:
>
>>
>> Genesis is a framework, but you don't treat it like a 'normal' framework
>> like _s and Bootstrap. You don't take Genesis, fork it, and publish your
>> own version. You always treat it as a parent, which is why I call it a
>> managed theme. It's managed from the back end vs forked.
>>
>
>
> Please don't call _s and Bootstrap "frameworks". A theme that is meant to
> be forked is called a "starter theme".

From cloudpresshosting at gmail.com  Sun Nov 11 16:26:34 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Sun, 11 Nov 2012 08:26:34 -0800
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <1352650641.59823.YahooMailNeo@web142505.mail.bf1.yahoo.com>
References: <1352613669.58489.YahooMailNeo@web142503.mail.bf1.yahoo.com>
	<CALwRiz_ucgP6a_sKtEDWQuvttLM16HxGBWnrJ_5wgicav45VPg@mail.gmail.com>
	<CALwRiz-HhOxoGK4mB_ZGqCETSau+JgnmCveEDX-oYJxo8tqDOQ@mail.gmail.com>
	<1352650641.59823.YahooMailNeo@web142505.mail.bf1.yahoo.com>
Message-ID: <CALwRiz-J6C=o2bbLENR+=9=5bxDiGbOMfHFzz8n7D296sQ1Ypw@mail.gmail.com>

Glad I could help. That is kinda interesting if you look at plugins
its O:8:"stdClass":
which unless I'm mistaken indicates its a serialized object. Themes does
not do that, it looks like a regular serialized array which is a bit
odd that's its inconsistent but I am glad I helped.


On Sun, Nov 11, 2012 at 8:17 AM, Mark Smith <mark.smith1187 at yahoo.com>wrote:

> That was very helpful cloudpress. Using your method it was much easier to
> see what is sent and I figured out what exactly is sent for themes.
>
> array(3) { ["current_theme"]=> string(10) "twentyeleven"
> ["twentyeleven"]=> array(7) { ["Name"]=> string(13) "Twenty Eleven"
> ["Title"]=> string(13) "Twenty Eleven" ["Version"]=> string(3) "1.3"
> ["Author"]=> string(18) "the WordPress team" ["Author URI"]=> string(21) "
> http://wordpress.org/" ["Template"]=> string(12) "twentyeleven"
> ["Stylesheet"]=> string(12) "twentyeleven" } ["twentyten"]=> array(7) {
> ["Name"]=> string(10) "Twenty Ten" ["Title"]=> string(10) "Twenty Ten"
> ["Version"]=> string(3) "1.4" ["Author"]=> string(18) "the WordPress team"
> ["Author URI"]=> string(0) "" ["Template"]=> string(9) "twentyten"
> ["Stylesheet"]=> string(9) "twentyten" }
> }
> Thank you so much for your help.
>
>
> ----- Original Message -----
> From: CloudPress Hosting <cloudpresshosting at gmail.com>
> To: wp-hackers at lists.automattic.com
> Cc:
> Sent: Sunday, November 11, 2012 12:14 AM
> Subject: Re: [wp-hackers] Accessing Update Check API Outside of WordPress
>
> <shameless plug>
> If anyone is interested I have decided to blog about customizations I am
> making to WordPress starting with a post about this.
>
>
> http://hackingwp.wordpress.com/2012/11/11/wordpress-org-update-checking-api/
> </shameless plug>
>
> It was an interesting concept I just wanted to share since I kinda like the
> idea of what the OP was trying to accomplish anyway hope that helped your
> out Mark.
>
>
> On Sat, Nov 10, 2012 at 11:26 PM, CloudPress Hosting <
> cloudpresshosting at gmail.com> wrote:
>
> > Can't say that I knew how the API worked before but with a little clever
> > hacking I modified a test install of WordPress to post the request to
> > requestb.in then looked at what was posted.
> >
> > The WordPress site posts a serialized string. The key is "plugins" and
> > this is what the value of that post data looks like.
> >
> >
> >
> O:8:"stdClass":2:{s:7:"plugins";a:2:{s:19:"akismet/akismet.php";a:11:{s:4:"Name";s:7:"Akismet";s:9:"PluginURI";s:31:"
> > http://akismet.com/?return=true
> ";s:7:"Version";s:5:"2.5.6";s:11:"Description";s:481:"Used
> > by millions, Akismet is quite possibly the best way in the world to
> > <strong>protect your blog from comment and trackback spam</strong>. It
> > keeps your site protected from spam even while you sleep. To get started:
> > 1) Click the "Activate" link to the left of this description, 2) <a
> href="
> > http://akismet.com/get/?return=true">Sign up for an Akismet API key</a>,
> > and 3) Go to your <a href="admin.php?page=akismet-key-config">Akismet
> > configuration</a> page, and save your API
> > key.";s:6:"Author";s:10:"Automattic";s:9:"AuthorURI";s:40:"
> > http://automattic.com/wordpress-plugins/
> ";s:10:"TextDomain";s:0:"";s:10:"DomainPath";s:0:"";s:7:"Network";b:0;s:5:"Title";s:7:"Akismet";s:10:"AuthorName";s:10:"Automattic";}s:9:"hello.php";a:11:{s:4:"Name";s:11:"Hello
> > Dolly";s:9:"PluginURI";s:48:"
> > http://wordpress.org/extend/plugins/hello-dolly/
> ";s:7:"Version";s:3:"1.6";s:11:"Description";s:295:"This
> > is not just a plugin, it symbolizes the hope and enthusiasm of an entire
> > generation summed up in two words sung most famously by Louis Armstrong:
> > Hello, Dolly. When activated you will randomly see a lyric from
> > <cite>Hello, Dolly</cite> in the upper right of your admin screen on
> every
> > page.";s:6:"Author";s:14:"Matt Mullenweg";s:9:"AuthorURI";s:13:"
> > http://ma.tt/
> ";s:10:"TextDomain";s:0:"";s:10:"DomainPath";s:0:"";s:7:"Network";b:0;s:5:"Title";s:11:"Hello
> > Dolly";s:10:"AuthorName";s:14:"Matt Mullenweg";}}s:6:"active";a:0:{}}
> >
> > A bit of a mess but if you unserialize it then var_dump the resulting
> > array you can more easily see what it shows. It basically has all the
> meta
> > data for each plugin. Post that to
> > http://api.wordpress.org/plugins/update-check/1.0/ using cURL and what I
> > got back was an empty serialized string, meaning all plugins were up to
> > date. Modify one of the version numbers in the serialized string that is
> > sent to be a previous version number and what I get back is a serialized
> > string of meta data on the plugin with an available update like this.
> >
> >
> >
> a:1:{s:19:"akismet/akismet.php";O:8:"stdClass":5:{s:2:"id";s:2:"15";s:4:"slug";s:7:"akismet";s:11:"new_version";s:5:"2.5.6";s:3:"url";s:44:"
> > http://wordpress.org/extend/plugins/akismet/";s:7:"package";s:55:"
> > http://downloads.wordpress.org/plugin/akismet.2.5.6.zip";}}
> >
> > I would assume themes won't be much different.
> >
> > That was an interesting exercise though I should make a blog post about
> > it. Also I have to admit I like the idea to use your own script to detect
> > updates and just email you, I might consider making something similar
> since
> > I manage multiple WordPress sites for myself and for my clients. Thanks
> for
> > the idea.
> >
> >
> >
> > On Sat, Nov 10, 2012 at 10:01 PM, Mark Smith <mark.smith1187 at yahoo.com
> >wrote:
> >
> >> I run numerous sites. Rather than have each site use the built in update
> >> check I have disabled all update checks from the site via a plugin I
> made.
> >>
> >> Instead I am building a php based cron job that will query the
> >> api.wordpress.org site to check for updates and send me an email
> >> notification. Personally I prefer that to the constant nags in
> WordPress to
> >> upgrade. While I install minor upgrades as soon as they come out often
> >> times I will wait on new major version having to see a nag until I do.
> >>
> >> Core updates were easy enough, a simple cURL request to
> >> http://api.wordpress.org/core/version-check/1.6/ returns a serialized
> >> string which includes the current stable release version.
> >>
> >> $output = unserialize($output);
> >> $current_version = $output['offers'][0]['current'];
> >> unset($output);
> >>
> >> Gets me the version number currently available which I can check against
> >> my installed versions easily enough.
> >>
> >> Plugins and themes are a bit more difficult because I have to post data
> >> about what plugins and themes I am checking.  This is obviously not
> >> documented, the only documentation is a list of the API endpoints at
> >> http://codex.wordpress.org/WordPress.org_API.
> >>
> >> I took a look at update.php to see how WordPress does it but
> >> the myriad of WordPress functions seems to just confuse me as to what
> >> exactly is being posted to the API endpoints
> >> http://api.wordpress.org/plugins/update-check/1.0/ and
> >> http://api.wordpress.org/themes/update-check/1.0/. Can anyone explain
> to
> >> me what eactly needs to be posted to get the current version of each
> plugin
> >> and theme.
> >>
> >> Thanks.
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From cloudpresshosting at gmail.com  Sun Nov 11 20:44:55 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Sun, 11 Nov 2012 12:44:55 -0800
Subject: [wp-hackers] Filter Plugin List
Message-ID: <CALwRiz-xJQtgT66FZTQYYGUUzAktu8E+SQQ3wqNps+0XgYwVuw@mail.gmail.com>

I did not see anything in the codex filter reference page but I am looking
for a filter to apply to the plugin list after everything has been loaded
into it and is getting ready to be displayed. Could anyone point me in the
right direction?

From webdev at ms-studio.net  Sun Nov 11 21:34:28 2012
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Sun, 11 Nov 2012 22:34:28 +0100
Subject: [wp-hackers] A method for overriding _e() messages?
Message-ID: <CAHBjUcTnO6OFxJF2PHSQn_8Zxy+2_Ufq3JmBvwbfHGrcKNFqFA@mail.gmail.com>

Hello WP-hackers,

I have a pretty fundamental question:

Is there any official method for changing a specific term in the WP
Admin interface, site-wide?

Let's say I'm building a site in German, and would like to use a
different translation for the _e('Caption') message - a different word
than the translation that already exists in the regular German PO
file.

A primitive way would be to edit myself the PO file. This would work,
but I would have to re-edit this file with every update. And this
method wouldn't work if the interface is in English.

Is there a more sustainable way, such as overriding the translation
string in functions.php, telling WP to use another word for
_e('Caption') ?

And by extension, could such a method also work for English? Is there
a global method for overriding a given _e() message string?

Thanks in advance for your input!

--
Manuel

From batmoo at gmail.com  Sun Nov 11 21:42:02 2012
From: batmoo at gmail.com (Mohammad Jangda)
Date: Sun, 11 Nov 2012 16:42:02 -0500
Subject: [wp-hackers] A method for overriding _e() messages?
In-Reply-To: <CAHBjUcTnO6OFxJF2PHSQn_8Zxy+2_Ufq3JmBvwbfHGrcKNFqFA@mail.gmail.com>
References: <CAHBjUcTnO6OFxJF2PHSQn_8Zxy+2_Ufq3JmBvwbfHGrcKNFqFA@mail.gmail.com>
Message-ID: <CAJBw=jYZNHH-jkJz9oYf4X6TCoyt252KqqBfynU7g7mhuMbFTA@mail.gmail.com>

> Is there any official method for changing a specific term in the WP
> Admin interface, site-wide?

You can use the gettext filter:
http://www.viper007bond.com/2011/07/13/changing-core-wordpress-strings/

From wordpress at zed1.com  Sun Nov 11 21:51:32 2012
From: wordpress at zed1.com (Mike Little)
Date: Sun, 11 Nov 2012 21:51:32 +0000
Subject: [wp-hackers] Filter Plugin List
In-Reply-To: <CALwRiz-xJQtgT66FZTQYYGUUzAktu8E+SQQ3wqNps+0XgYwVuw@mail.gmail.com>
References: <CALwRiz-xJQtgT66FZTQYYGUUzAktu8E+SQQ3wqNps+0XgYwVuw@mail.gmail.com>
Message-ID: <CAMb54M3sGVWYcRVHU3H7BdbXYg_jWPQEWab6yZjy_LtpiPUAgA@mail.gmail.com>

On 11 November 2012 20:44, CloudPress Hosting
<cloudpresshosting at gmail.com>wrote:

> I did not see anything in the codex filter reference page but I am looking
> for a filter to apply to the plugin list after everything has been loaded
> into it and is getting ready to be displayed. Could anyone point me in the
> right direction?
> _______________________________________________
>
>

I use this to hide certain plugins (I don't want them turned off) from some
clients:

add_filter( 'all_plugins', 'z1_remove_some_plugins' );
function z1_remove_some_plugins( $all ) {
global $current_user;
$remove_these = array(
 'limit-login-attempts/limit-login-attempts.php',
'wordpress-firewall-2/wordpress-firewall-2.php',
 'update-notifier/update-notifier.php',
'wp-super-cache/wp-cache.php',
 'audit-trail/audit-trail.php',
);

    if ( isset( $current_user ) && ( 1 != $current_user->id ) ) {
        foreach( $all as $file => $data ) {
            if ( in_array( $file, $remove_these ) )
                unset( $all[$file] );
        }
    }
    return $all;
} // end z1_remove_some_plugins



Mike
-- 
Mike Little
http://zed1.com/

From webdev at ms-studio.net  Sun Nov 11 23:06:45 2012
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Mon, 12 Nov 2012 00:06:45 +0100
Subject: [wp-hackers] A method for overriding _e() messages?
In-Reply-To: <CAJBw=jYZNHH-jkJz9oYf4X6TCoyt252KqqBfynU7g7mhuMbFTA@mail.gmail.com>
References: <CAHBjUcTnO6OFxJF2PHSQn_8Zxy+2_Ufq3JmBvwbfHGrcKNFqFA@mail.gmail.com>
	<CAJBw=jYZNHH-jkJz9oYf4X6TCoyt252KqqBfynU7g7mhuMbFTA@mail.gmail.com>
Message-ID: <CAHBjUcSjYa8TGTVmDePFgYWmba+a+pgH3UOi_oUxOUJFG8+yJQ@mail.gmail.com>

Hi Mohammad,

Thanks a lot for the link, that's exactly what I was looking for.
Extremely useful!

It also lead me to the corresponding trac ticket, which has some
interesting info:
https://core.trac.wordpress.org/ticket/6742

As well as this Codex page:
http://codex.wordpress.org/Plugin_API/Filter_Reference/gettext

Best,
Manuel

On Sun, Nov 11, 2012 at 10:42 PM, Mohammad Jangda <batmoo at gmail.com> wrote:
>> Is there any official method for changing a specific term in the WP
>> Admin interface, site-wide?
>
> You can use the gettext filter:
> http://www.viper007bond.com/2011/07/13/changing-core-wordpress-strings/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From onlyunusedname at gmail.com  Mon Nov 12 15:20:28 2012
From: onlyunusedname at gmail.com (onlyunusedname)
Date: Mon, 12 Nov 2012 10:20:28 -0500
Subject: [wp-hackers] OT: OttoMove
Message-ID: <CABQWr5x5_WC15rV_PBV46YzROnY1amff1zqahyCywJ-Xe=vsSQ@mail.gmail.com>

When I was new to WP dev, I relied on this list heavily to help me develop
my WP site migration technique.  (Thanks!)  So, I couldn't help smile when
I saw this migration product from Media Temple.  I've been using my own
version of "OttoMove" for years.  I hope you get royalties :)

http://mediatemple.net/ottomove/

From bryan at ibaku.net  Mon Nov 12 18:15:29 2012
From: bryan at ibaku.net (Bryan Petty)
Date: Mon, 12 Nov 2012 11:15:29 -0700
Subject: [wp-hackers] Plugin and Theme API Versioning
Message-ID: <CAKB8V+r8+db9aVhjt2az8_YYfbfTarp5KrTb1PxSZuj2=tLg_A@mail.gmail.com>

I've done some research into the WordPress deprecation and backwards
compatibility policies as it relates specifically to the WP.org plugin
and theme repositories, and I have some suggestions on changes I think
need to be made that I want to open up some discussion on. My goals
here are mostly related to the issues surrounding fully automatic
WordPress updates, just so that's clear, but I am interested in also
improving the quality and usefulness of the WP.org plugin and theme
repositories in general, and also improving WordPress core too.

I've outlined my concerns and suggestions in a blog post open to
discussion here:
http://ibaku.wordpress.com/2012/11/08/wordpress-plugin-and-theme-api-manifest-versioning/

I'd prefer to keep the discussion on that post, but replies here are
welcome too.

Regards,
Bryan Petty

From david at wordshell.net  Mon Nov 12 20:20:05 2012
From: david at wordshell.net (David Anderson)
Date: Mon, 12 Nov 2012 23:20:05 +0300
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <mailman.3218.1352666697.1480.wp-hackers@lists.automattic.com>
References: <mailman.3218.1352666697.1480.wp-hackers@lists.automattic.com>
Message-ID: <50A159F5.30700@wordshell.net>

> That was an interesting exercise though I should make a blog post about
> it. Also I have to admit I like the idea to use your own script to detect
> updates and just email you, I might consider making something similar since
> I manage multiple WordPress sites for myself and for my clients. Thanks for
> the idea.
For a plugin that can e-mail you, seehttp://wordpress.org/extend/plugins/updates-notifier

David


-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From martin at lazarov.bg  Mon Nov 12 22:57:19 2012
From: martin at lazarov.bg (Martin Lazarov)
Date: Tue, 13 Nov 2012 00:57:19 +0200
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <50A159F5.30700@wordshell.net>
References: <mailman.3218.1352666697.1480.wp-hackers@lists.automattic.com>
	<50A159F5.30700@wordshell.net>
Message-ID: <CAFJ6JWFdNycvekQ4OvbnHtN2kvHnoOTKc1TL9RdzzwUAKQJ7bw@mail.gmail.com>

For managing updates on many projects you can use some online services like:
http://wpmanager.biz/
remotewp
wpmanagerdx
managewp

and some others

On Mon, Nov 12, 2012 at 10:20 PM, David Anderson <david at wordshell.net> wrote:
>> That was an interesting exercise though I should make a blog post about
>> it. Also I have to admit I like the idea to use your own script to detect
>> updates and just email you, I might consider making something similar
>> since
>> I manage multiple WordPress sites for myself and for my clients. Thanks
>> for
>> the idea.
>
> For a plugin that can e-mail you,
> seehttp://wordpress.org/extend/plugins/updates-notifier
>
> David
>
>
> --
> WordShell - WordPress fast from the CLI - www.wordshell.net
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp at andrewnacin.com  Tue Nov 13 09:32:05 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 13 Nov 2012 04:32:05 -0500
Subject: [wp-hackers] child themes of child themes (grandchildren)
In-Reply-To: <CAD-FghyB+82R0otoWo54zp7kjKWOaAMpNodDjd1edoANseE96g@mail.gmail.com>
References: <CAFQFuXMBG0an1BEMF29S2cEzPf_VXLUZYEy-_81-cpk6CKSUKQ@mail.gmail.com>
	<CAD-Fghyicy3-2E6Ep=fv9xBoNJO+s3uH5hFra9VHVKCN5QdxFg@mail.gmail.com>
	<CAGguigdhttE3tTak-vJi=7QYZb46odiAVL9_JdGHoL1BosZ-Hg@mail.gmail.com>
	<CAD-FghzArua=RGofGK4=LWSZtLGR5kgCp9cesV5mUO2nHmOHQA@mail.gmail.com>
	<CAGguigc1U3udV253=LvV_13orEBF7MFyyd-7CTtuG1w0xxZ+zw@mail.gmail.com>
	<CAD-FghyB+82R0otoWo54zp7kjKWOaAMpNodDjd1edoANseE96g@mail.gmail.com>
Message-ID: <CAP29PviJDnrF+2PEPHho3TmHAF71dBBhZ4f7RO8T85Xp2WGKQg@mail.gmail.com>

On Fri, Nov 9, 2012 at 3:12 PM, Otto <otto at ottodestruct.com> wrote:

> The question is whether you want to modify the theme and thus make the
> upgrade process more complex, or use some simple CSS to change minor
> things in the way you want.


I've been thinking about "grandchild" themes for some time now. In
practice, things become very unstable very quickly as keep adding dependent
layers. Even dependency management baked into core would not make this
easy. It's more than just a dependency problem, of course, and really not a
technical problem, either. It's difficult to conceptualize, understand,
support, build for, etc. At some point, enough is enough.

What I would kind of like to do is introduce the idea of a child-of-child
that is nothing more than a stylesheet. If you are a student of WordPress
history (or were around back then ? I wasn't), you know that child themes
were originally just style.css and functions.php. That's why "template"
refers to the parent theme and "stylesheet" refers to the child theme.
Around 2.7, Ian Stewart proposed template inheritance, and the rest is
history. (The more you know.)

Of course, the more you refine the concept, the more it looks like custom
CSS (as a UI) and the ability to define a stylesheet for a theme other than
style.css (underlying API). And if the theme is using get_stylesheet_uri(),
this is already feasible with a simple filter. This could also apply to a
regular old theme just as much as a child theme. So it sounds like maybe a
good candidate a light API along with some improvements to the theme editor
for how it handles CSS assets. Just my thoughts.

Nacin

From wp at andrewnacin.com  Tue Nov 13 10:40:58 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 13 Nov 2012 05:40:58 -0500
Subject: [wp-hackers] In search of some love & attention:
	http://core.trac.wordpress.org/ticket/17860
In-Reply-To: <509B8193.7020709@gmail.com>
References: <509B8193.7020709@gmail.com>
Message-ID: <CAP29Pvhyu_7WyR-iWwbR5Wi6JoNZ0mqQzvHiMr0hgYQ=RnpZ6Q@mail.gmail.com>

On Thu, Nov 8, 2012 at 4:55 AM, BjornW <burobjorn at gmail.com> wrote:

> http://core.trac.wordpress.org/ticket/17860


Replied.

From kevinjohngallagher at hotmail.com  Tue Nov 13 20:30:52 2012
From: kevinjohngallagher at hotmail.com (Kevinjohn Gallagher)
Date: Tue, 13 Nov 2012 20:30:52 +0000
Subject: [wp-hackers] Should password hashing portability be
 configurable?
In-Reply-To: <509B8D3A.8010204@rotorised.com>
References: <509A6DBB.4090201@dxw.com>,
	<CALwRiz-kYHds3GgS=H8kbRxbyP3iDf_d_m7LWe4mgLg5JG4anQ@mail.gmail.com>,
	<509AAEA3.9080300@dxw.com>,
	<CALwRiz8YkNMD2Q=aXC9=34pO4w+xJgrrH7TAkAAS_znZghprAg@mail.gmail.com>,
	<509AB049.6020208@dxw.com>,
	<CALwRiz8O-CZkrpjN7LLXcnZHrEy_X6qPDDXL8UUEU-esJ7nB_g@mail.gmail.com>,
	<CAD-Fghwrj4BJ9HrwNmLYvRtpO_69gWFkqrhQdMKgxcwyO4qu-Q@mail.gmail.com>,
	<509AB4DD.50902@dxw.com>,
	<CAD-FghwE2Sv=xoD1cHJ6+nxPB4wQ2j9y9i6MYrPpQJmwqRDy_g@mail.gmail.com>,
	<509B8D3A.8010204@rotorised.com>
Message-ID: <BLU150-W34FC1E9138A770120F71C3CC6C0@phx.gbl>



Aren't we on PHP5.4.8 ?

At the very least we're on PHP5.4.4, as it came out the same day as WP3.4.And as we're always being told, there's no reason to not upgrade to the latest version of [insert software].  So everyone who's on 3.4 is also on PHP5.4.4. Riiight? ;-)

That said, I'm very much in favour of a conversation about choosing different - and/or additional - security/hashing functionality.
Thanks,Kevinjohn


> Date: Thu, 8 Nov 2012 20:45:14 +1000
> From: lists at rotorised.com
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Should password hashing portability be	configurable?
> 
> Otto wrote:
> > Yes, that said, bcrypt was indeed intentionally designed to be
> > slow-as-heck for hashing, so it would be more secure in theory. I have
> > my doubts about that in practice. Modern GPU based crackers are
> > uber-fast.
> 
> The idea is that as computers get faster, you increase the "cost" of the
> bcrypt function (where iterations = 2^cost). At the moment, the cost is
> 8 (see wp-includes/class-phpass.php, PasswordHash::PasswordHash() ),
> which is 256 rounds.
> 
> (See also: http://security.stackexchange.com/a/17238 )
> 
> > Since we're on 5.3 and up now, it does make sense to remove the "true"
> > from those functions, since every PHP 5.3 should have bcrypt in it.
> 
> Just to reiterate what was mentioned on #21022 [1], we're not actually
> on 5.3+ yet, we're still on 5.2.4+, just in case anyone was confused.
> 
> [1]: http://core.trac.wordpress.org/ticket/21022
> 
> 
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From tcbarrett at gmail.com  Wed Nov 14 10:33:13 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 14 Nov 2012 10:33:13 +0000
Subject: [wp-hackers] Front end file handling
Message-ID: <CAEgmxabx3Lp3tQuUtN96SrT=aLnhfQcjTkUZEg_N2Dd6+3dUNw@mail.gmail.com>

The aim is to let users upload a picture, but without using /wp-admin/.
They update a post they own.

I already have the file in a subdirectory of uploads. The URL to the file
is stored as a piece of post meta.I want to add the image to the media
library, and attach it to the post being edited.

The media sideload functions live in /wp-admin/includes/media.php and are
not loaded on the front end. They in turn need files.php - however, just
including those two files in a hook breaks things (silently on my set up).

So, before I start rummaging around more, I thought I'd ask! How to best
sideload from the front end in the above scenario?



-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From kevinjohngallagher at hotmail.com  Wed Nov 14 11:17:48 2012
From: kevinjohngallagher at hotmail.com (Kevinjohn Gallagher)
Date: Wed, 14 Nov 2012 11:17:48 +0000
Subject: [wp-hackers] Front end file handling
In-Reply-To: <CAEgmxabx3Lp3tQuUtN96SrT=aLnhfQcjTkUZEg_N2Dd6+3dUNw@mail.gmail.com>
References: <CAEgmxabx3Lp3tQuUtN96SrT=aLnhfQcjTkUZEg_N2Dd6+3dUNw@mail.gmail.com>
Message-ID: <BLU150-W37EFF69394EA29A8C9BF03CC530@phx.gbl>




I'd have a look at some of the bbPress stuff.There was some front-end signature/avatar plugins that did something similar (can't find the link I was looking for - sorry)




> Date: Wed, 14 Nov 2012 10:33:13 +0000
> From: tcbarrett at gmail.com
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] Front end file handling
> 
> The aim is to let users upload a picture, but without using /wp-admin/.
> They update a post they own.
> 
> I already have the file in a subdirectory of uploads. The URL to the file
> is stored as a piece of post meta.I want to add the image to the media
> library, and attach it to the post being edited.
> 
> The media sideload functions live in /wp-admin/includes/media.php and are
> not loaded on the front end. They in turn need files.php - however, just
> including those two files in a hook breaks things (silently on my set up).
> 
> So, before I start rummaging around more, I thought I'd ask! How to best
> sideload from the front end in the above scenario?
> 
> 
> 
> -- 
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From tcbarrett at gmail.com  Wed Nov 14 12:00:18 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 14 Nov 2012 12:00:18 +0000
Subject: [wp-hackers] Front end file handling
In-Reply-To: <BLU150-W37EFF69394EA29A8C9BF03CC530@phx.gbl>
References: <CAEgmxabx3Lp3tQuUtN96SrT=aLnhfQcjTkUZEg_N2Dd6+3dUNw@mail.gmail.com>
	<BLU150-W37EFF69394EA29A8C9BF03CC530@phx.gbl>
Message-ID: <CAEgmxaaZD5NW4ygiV1nQy21bpP26swuY9dHwmmwfuhPruHV_Zw@mail.gmail.com>

This is the hook that is currently failing:

add_action( 'post_post_update', 'tcb_snoop_post_submission', 10 );
function tcb_snoop_post_submission( $postarr ){
  //
http://www.example.com/wp-content/uploads/supplier-pics/ahgajhvbjhb345345/mypic1.png
  $picurl = $postarr['supplier_picture'];

  require_once(ABSPATH . 'wp-admin/includes/file.php');
  require_once(ABSPATH . 'wp-admin/includes/media.php');
  $attach_id = media_sideload_image( $picurl, $postarr['ID'] );  // silent
fail

  update_post_meta( $postarr['ID'], 'supplier_picture', $attach_id );
}



On 14 November 2012 11:17, Kevinjohn Gallagher <
kevinjohngallagher at hotmail.com> wrote:

>
>
>
> I'd have a look at some of the bbPress stuff.There was some front-end
> signature/avatar plugins that did something similar (can't find the link I
> was looking for - sorry)
>
>
>
>
> > Date: Wed, 14 Nov 2012 10:33:13 +0000
> > From: tcbarrett at gmail.com
> > To: wp-hackers at lists.automattic.com
> > Subject: [wp-hackers] Front end file handling
> >
> > The aim is to let users upload a picture, but without using /wp-admin/.
> > They update a post they own.
> >
> > I already have the file in a subdirectory of uploads. The URL to the file
> > is stored as a piece of post meta.I want to add the image to the media
> > library, and attach it to the post being edited.
> >
> > The media sideload functions live in /wp-admin/includes/media.php and are
> > not loaded on the front end. They in turn need files.php - however, just
> > including those two files in a hook breaks things (silently on my set
> up).
> >
> > So, before I start rummaging around more, I thought I'd ask! How to best
> > sideload from the front end in the above scenario?
> >
> >
> >
> > --
> > http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> > http://twitter.com/tcbarrett
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From lists at alexking.org  Wed Nov 14 15:54:24 2012
From: lists at alexking.org (Alex King)
Date: Wed, 14 Nov 2012 08:54:24 -0700
Subject: [wp-hackers] Front end file handling
In-Reply-To: <CAEgmxaaZD5NW4ygiV1nQy21bpP26swuY9dHwmmwfuhPruHV_Zw@mail.gmail.com>
References: <CAEgmxabx3Lp3tQuUtN96SrT=aLnhfQcjTkUZEg_N2Dd6+3dUNw@mail.gmail.com>
	<BLU150-W37EFF69394EA29A8C9BF03CC530@phx.gbl>
	<CAEgmxaaZD5NW4ygiV1nQy21bpP26swuY9dHwmmwfuhPruHV_Zw@mail.gmail.com>
Message-ID: <3E58CFCC-7368-4A77-9EF8-4BAEC8FC89DF@alexking.org>

You may want to take a look at this ticket:

http://core.trac.wordpress.org/ticket/19629

Cheers,
--Alex

http://alexking.org | http://crowdfavorite.com




On Nov 14, 2012, at 5:00 AM, Tom Barrett <tcbarrett at gmail.com> wrote:

> This is the hook that is currently failing:
> 
> add_action( 'post_post_update', 'tcb_snoop_post_submission', 10 );
> function tcb_snoop_post_submission( $postarr ){
>  //
> http://www.example.com/wp-content/uploads/supplier-pics/ahgajhvbjhb345345/mypic1.png
>  $picurl = $postarr['supplier_picture'];
> 
>  require_once(ABSPATH . 'wp-admin/includes/file.php');
>  require_once(ABSPATH . 'wp-admin/includes/media.php');
>  $attach_id = media_sideload_image( $picurl, $postarr['ID'] );  // silent
> fail
> 
>  update_post_meta( $postarr['ID'], 'supplier_picture', $attach_id );
> }
> 
> 
> 
> On 14 November 2012 11:17, Kevinjohn Gallagher <
> kevinjohngallagher at hotmail.com> wrote:
> 
>> 
>> 
>> 
>> I'd have a look at some of the bbPress stuff.There was some front-end
>> signature/avatar plugins that did something similar (can't find the link I
>> was looking for - sorry)
>> 
>> 
>> 
>> 
>>> Date: Wed, 14 Nov 2012 10:33:13 +0000
>>> From: tcbarrett at gmail.com
>>> To: wp-hackers at lists.automattic.com
>>> Subject: [wp-hackers] Front end file handling
>>> 
>>> The aim is to let users upload a picture, but without using /wp-admin/.
>>> They update a post they own.
>>> 
>>> I already have the file in a subdirectory of uploads. The URL to the file
>>> is stored as a piece of post meta.I want to add the image to the media
>>> library, and attach it to the post being edited.
>>> 
>>> The media sideload functions live in /wp-admin/includes/media.php and are
>>> not loaded on the front end. They in turn need files.php - however, just
>>> including those two files in a hook breaks things (silently on my set
>> up).
>>> 
>>> So, before I start rummaging around more, I thought I'd ask! How to best
>>> sideload from the front end in the above scenario?
>>> 
>>> 
>>> 
>>> --
>>> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
>>> http://twitter.com/tcbarrett
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> -- 
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mike at etchsoftware.com  Wed Nov 14 16:15:32 2012
From: mike at etchsoftware.com (Mike Bijon)
Date: Wed, 14 Nov 2012 08:15:32 -0800
Subject: [wp-hackers] Front end file handling
In-Reply-To: <CABwjQByHihWJYOqiHQpsA1EcyG4XLcMFwWDsP0B4E-PU+2vEqw@mail.gmail.com>
References: <CABwjQByHihWJYOqiHQpsA1EcyG4XLcMFwWDsP0B4E-PU+2vEqw@mail.gmail.com>
Message-ID: <CABwjQByjrfJ0iGXcN+A2z02rQC2B5XLQTcaTWNjASy7YKYgWkQ@mail.gmail.com>

Tom,
There are some simple ways to include a file upload text box on the
frontend,
http://goldenapplesdesign.com/2010/07/03/front-end-file-uploads-in-wordpress/

You can also look at plugins named various versions of " frontend upload"
to see different ways of queueing media for reviews, custom upload folders,
etc.

If you really want to use drag-and-drop or multi-uploading everything I've
seen uses a duplicate Pluploader instead of hooking the built-in one,
http://designmodo.com/create-upload-form/. It should be possible to use the
back end one but I don't know about the security of that.

From tcbarrett at gmail.com  Wed Nov 14 17:18:31 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 14 Nov 2012 17:18:31 +0000
Subject: [wp-hackers] Front end file handling
In-Reply-To: <CABwjQByjrfJ0iGXcN+A2z02rQC2B5XLQTcaTWNjASy7YKYgWkQ@mail.gmail.com>
References: <CABwjQByHihWJYOqiHQpsA1EcyG4XLcMFwWDsP0B4E-PU+2vEqw@mail.gmail.com>
	<CABwjQByjrfJ0iGXcN+A2z02rQC2B5XLQTcaTWNjASy7YKYgWkQ@mail.gmail.com>
Message-ID: <CAEgmxabJHPSzLEs4jTHz7qp+vVmyWupiM-70TC_hvLpN93SAsw@mail.gmail.com>

Mike,
The file is sitting on the server (local to WordPress) rather than with the
user at the point where I need to do my attachment.

Alex,
I can see that I am confusing myself a little (media_sideload_image vs
media_handle_sideload). Additionally was sidetracked by function call to
@wp_read_image_metadata($file) which is supported in image.php (which I had
not included and therefore failed silently).

Thank you both!

I wrote my own version of media_sideload_image() which seems to be working.

add_action( 'post_post_update', 'tcb_snoop_post_submission', 10 );
function tcb_snoop_post_submission( $postarr ){
  //
http://www.example.com/wp-content/uploads/supplier-pics/ahgajhvbjhb345345/mypic1.png
  $picurl = $postarr['supplier_picture'];

  require_once(ABSPATH . 'wp-admin/includes/file.php');
  require_once(ABSPATH . 'wp-admin/includes/media.php');
  require_once(ABSPATH . 'wp-admin/includes/image.php');
  $attach_id = tcb_media_sideload_image( $picurl, $postarr['ID'] );  //
Same as core but return post_id

  update_post_meta( $postarr['ID'], 'supplier_picture', $attach_id );
}


On 14 November 2012 16:15, Mike Bijon <mike at etchsoftware.com> wrote:

> Tom,
> There are some simple ways to include a file upload text box on the
> frontend,
>
> http://goldenapplesdesign.com/2010/07/03/front-end-file-uploads-in-wordpress/
>
> You can also look at plugins named various versions of " frontend upload"
> to see different ways of queueing media for reviews, custom upload folders,
> etc.
>
> If you really want to use drag-and-drop or multi-uploading everything I've
> seen uses a duplicate Pluploader instead of hooking the built-in one,
> http://designmodo.com/create-upload-form/. It should be possible to use
> the
> back end one but I don't know about the security of that.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From jnolte at getmoxied.net  Wed Nov 14 20:54:10 2012
From: jnolte at getmoxied.net (Jeffrey Nolte)
Date: Wed, 14 Nov 2012 15:54:10 -0500
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
	Insight / Best Practice
Message-ID: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>

Hello,

We are currently developing a plugin which pulls events from the Facebook API and will display them on the front-end of the site with a shortcode based on some parameters set on the plugins option page.   We are pulling in the data but it takes some time ( 5-10+  seconds depending on how many events, connection, etc). 

I wanted to try to get some insight on how / where we should store this info for the plugin.

I was thinking of the following options:

Store JSON string with all events in options table and have user initiate pull of data in admin on plugin options page -> then:
User initiated pull / update of events via plugin options page.
Update via cron on set interval based on plugin settings (we will be using transients for this option).

We are open to other input / options for this.

Thank you in advance,

Jeffrey Nolte
Moxie Media Group, Inc.
594 Broadway #305
New York, NY 10012
Office: (646) 820-8540




From otto at ottodestruct.com  Wed Nov 14 21:09:02 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 14 Nov 2012 15:09:02 -0600
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
 Insight / Best Practice
In-Reply-To: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
Message-ID: <CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>

On Wed, Nov 14, 2012 at 2:54 PM, Jeffrey Nolte <jnolte at getmoxied.net> wrote:
> Hello,
>
> We are currently developing a plugin which pulls events from the Facebook API and will display them on the front-end of the site with a shortcode based on some parameters set on the plugins option page.   We are pulling in the data but it takes some time ( 5-10+  seconds depending on how many events, connection, etc).
>
> I wanted to try to get some insight on how / where we should store this info for the plugin.
>
> I was thinking of the following options:
>
> Store JSON string with all events in options table and have user initiate pull of data in admin on plugin options page -> then:
> User initiated pull / update of events via plugin options page.
> Update via cron on set interval based on plugin settings (we will be using transients for this option).
>
> We are open to other input / options for this.

Or just use a transient to store the data with a decent amount of
timeout, such as 6-24 hours. Much easier.

If you want background updating and the like, use Mark Jaquith's TLC
Transient code:
https://github.com/markjaquith/WP-TLC-Transients


-Otto

From mike at newclarity.net  Wed Nov 14 23:22:55 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Wed, 14 Nov 2012 18:22:55 -0500
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
	Insight / Best Practice
In-Reply-To: <CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
Message-ID: <81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>

On Nov 14, 2012, at 4:09 PM, Otto <otto at ottodestruct.com> wrote:
> If you want background updating and the like, use Mark Jaquith's TLC
> Transient code:
> https://github.com/markjaquith/WP-TLC-Transients


Ironic that you referenced that today as I started working with it last night. :)

That library presents a great example of an issue I've been wrestling with lately which I described in a comment on this trac ticket:

http://core.trac.wordpress.org/ticket/22316#comment:28

Specifically let's say I build a plugin for distribution via wordpress.org and I decide to include Mark's library. Also Jeffrey Nolte builds a plugin and uses Mark's library too.  All is still good because Mark's library checks class_exists() before creating the class.

However, Mark has 3 pull requests and from reading those pull requests is seems like they have features that in some cases might be requirements for use. And those pull requests also modify the API. 

https://github.com/markjaquith/WP-TLC-Transients/pulls

So let's assume that Mark gets around to accepting some of these pull requests and publishes a new version of WP-TLC-Transients.

Now let's assume that Jeffrey really needs one of those new features so he uses the newer version WP-TLC-Transients. And let's assume my plugin was built with the older version WP-TLC-Transients.  And further, let's assume that somebody is using both of our plugins and that mine loads first so that the new version of WP-TLC-Transients doesn't load.  Jeffrey's plugin will crash is a manner that's hard for him to protect against and all because my plugin inadvertently broke his.  This is bad for the user, bad for Jeffrey because he has to deal with low value and time consuming support issues, and it's bad for me because my plugin inadvertently caused the problem.

The tragedy is that there is no current best practice to guard against this problem AFAIK. I have been wracking my brain for a solution that wouldn't require core to offer some sort of "traffic cop" features and I have come up with nothing. The only solution I can think of is to fork Mark's code and rename all the methods, but that is a really sorry state of affairs as it encourages fragmentation of code with various incompatible enhancements instead of having a best practice way to consolidate enhancements into a single useful library.

Has anyone else recognized this as a problem?  Is there an easy solution I am just missing?  

-Mike



From cloudpresshosting at gmail.com  Thu Nov 15 00:12:28 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Wed, 14 Nov 2012 16:12:28 -0800
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
 Insight / Best Practice
In-Reply-To: <81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
Message-ID: <CALwRiz9vXp=jhqMSX=tU1abcA5M=GmFyifGx00=N1GKZ82e-Dg@mail.gmail.com>

That I think the only was is up tot he class author to guard against by
using a distinct class name in each version he releases. Problem is you
can't always count on class authors to do that. But that issue I think
falls outside the scope of WordPress.


On Wed, Nov 14, 2012 at 3:22 PM, Mike Schinkel <mike at newclarity.net> wrote:

> On Nov 14, 2012, at 4:09 PM, Otto <otto at ottodestruct.com> wrote:
> > If you want background updating and the like, use Mark Jaquith's TLC
> > Transient code:
> > https://github.com/markjaquith/WP-TLC-Transients
>
>
> Ironic that you referenced that today as I started working with it last
> night. :)
>
> That library presents a great example of an issue I've been wrestling with
> lately which I described in a comment on this trac ticket:
>
> http://core.trac.wordpress.org/ticket/22316#comment:28
>
> Specifically let's say I build a plugin for distribution via wordpress.organd I decide to include Mark's library. Also Jeffrey Nolte builds a plugin
> and uses Mark's library too.  All is still good because Mark's library
> checks class_exists() before creating the class.
>
> However, Mark has 3 pull requests and from reading those pull requests is
> seems like they have features that in some cases might be requirements for
> use. And those pull requests also modify the API.
>
> https://github.com/markjaquith/WP-TLC-Transients/pulls
>
> So let's assume that Mark gets around to accepting some of these pull
> requests and publishes a new version of WP-TLC-Transients.
>
> Now let's assume that Jeffrey really needs one of those new features so he
> uses the newer version WP-TLC-Transients. And let's assume my plugin was
> built with the older version WP-TLC-Transients.  And further, let's assume
> that somebody is using both of our plugins and that mine loads first so
> that the new version of WP-TLC-Transients doesn't load.  Jeffrey's plugin
> will crash is a manner that's hard for him to protect against and all
> because my plugin inadvertently broke his.  This is bad for the user, bad
> for Jeffrey because he has to deal with low value and time consuming
> support issues, and it's bad for me because my plugin inadvertently caused
> the problem.
>
> The tragedy is that there is no current best practice to guard against
> this problem AFAIK. I have been wracking my brain for a solution that
> wouldn't require core to offer some sort of "traffic cop" features and I
> have come up with nothing. The only solution I can think of is to fork
> Mark's code and rename all the methods, but that is a really sorry state of
> affairs as it encourages fragmentation of code with various incompatible
> enhancements instead of having a best practice way to consolidate
> enhancements into a single useful library.
>
> Has anyone else recognized this as a problem?  Is there an easy solution I
> am just missing?
>
> -Mike
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Thu Nov 15 00:13:57 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 14 Nov 2012 18:13:57 -0600
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
 Insight / Best Practice
In-Reply-To: <81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
Message-ID: <CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>

On Wed, Nov 14, 2012 at 5:22 PM, Mike Schinkel <mike at newclarity.net> wrote:
> Has anyone else recognized this as a problem?  Is there an easy solution I am just missing?

No, there is no easy solution. Nor do I think the problem is a
universally soluable one, since what you're describing isn't specific
to WordPress, or to PHP, or anything else in particular. Essentially,
the problem of library versioning is a commonplace one to many
systems.

In Unix/Linux, they "solved" it by basically making libraries either
dynamically loaded, or statically loaded. Thus, for any given binary,
it can opt to use the latest version on the system (which is centrally
managed), or it can opt to be compiled in a static manner, where it
contains its own copy of any particular library. If there's a breaking
change to a library and a binary uses it in a dynamic way, then the
binary will generally simply crash, depending on the severity of the
change. Libraries that tend to change a lot thus tend to get compiled
in a static fashion more often. It's a very decentralized solution to
the problem, developers will make the decision on their own, but users
can compile too and recompile if stuff starts breaking. Linux people
tend to be DIY-ers a lot, so it works for them.

PHP could solve the problem of having to rename libraries with the
idea of namespaces, but this is really just the same solution in
different clothing. You're loading your own copy of the library into
your namespace so that you can be sure what your code is doing.

Your "traffic cop" idea basically requires a centrally managed set of
libraries. Which is sort of the idea behind PEAR, except that PEAR is
very generic to PHP in general, and doesn't usually tend to be
particularly concerned with backwards compatibility with older PHP
versions. And you're right, the traffic cop approach doesn't work
unless it's very central to the community in general. Aka, core
supported.

The way I tend to solve it is to avoid using libraries at all,
whenever possible. If I need to use Mark's library, then I wouldn't be
using it in a situation where there was the possibility of conflict
(custom one-off plugin or theme, not something I'd release to the
public), or I'd take out the core functionality I needed from it and
integrated the code directly into my own code instead. This often lets
me optimize for my specific use-case in the process, which is nice,
but it does mean a bit more work, usually, in understanding how the
code works.

Again, I don't think the problem is capable of solution. As long as
you use libraries, you will have library conflicts. The more common
the library, the more conflicts you'll have, unless the library is
*very* stable.

-Otto

From mike at newclarity.net  Thu Nov 15 01:19:51 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Wed, 14 Nov 2012 20:19:51 -0500
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
	Insight / Best Practice
In-Reply-To: <CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
Message-ID: <A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>

On Nov 14, 2012, at 7:13 PM, Otto <otto at ottodestruct.com> wrote:
> On Wed, Nov 14, 2012 at 5:22 PM, Mike Schinkel <mike at newclarity.net> wrote:
>> Has anyone else recognized this as a problem?  Is there an easy solution I am just missing?
> 
> No, there is no easy solution. Nor do I think the problem is a
> universally soluable one...

I agree that there is no panacea and that there will always be further edge cases no matter what we solve.  But I also think we can improve the 20% of use-cases that happen 80% of the time.

> The way I tend to solve it is to avoid using libraries at all,
> whenever possible. 

That approach results is very little ability for people outside of core to collaborate on improved APIs. It keeps 3rd party APIs from getting good enough and widely used enough to be considered for use in core (plugins are viable for end-user functionality, not for APIs.)  

Our current state of affairs is we are metaphorically all speaking different languages while we stare at the Tower of Babel instead of working to build it taller. :(

> Again, I don't think the problem is capable of solution. 

I think this can easily be addressed for the 20% use-case, and here is how:

Add a "register_library()" function to WordPress that accepts the following parameters, to be called by a plugin or theme within an 'init' hook:

	Library Name
	Version of this library
	Filepath of the file to require()
	Rules: Load Latest or Load this Version.

Then call a 'load_libraries()' function after the 'after_setup_theme' hook to load the latest version of each library. If there is a conflict don't load the library and display an error message inside the admin for the administrator to see and take appropriate action about while plugins are in conflict.

Easy peasy.

With the exception of the load latest vs. load current version we've already implemented something like this (although in hindsight I would do it a bit differently.)  Problem is this functionality really needs to be in core because it's like the Highlander; there can be only one because if is it ever updated then we have the same problem all over again.

https://github.com/getsunrise/imperative/blob/master/imperative.php

Will this solve all versioning problems?  No, but it will enable code to be most safely shared than we have today.  

Having this would really help spur collaboration and innovation in the API space for WordPress.  I'm hoping others see the value of and the need for this too.

-Mike

From johnbillion+wp at gmail.com  Thu Nov 15 03:42:13 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu, 15 Nov 2012 03:42:13 +0000
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
 Insight / Best Practice
In-Reply-To: <A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
	<A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>
Message-ID: <CAOqAKWCBhWeAHL=ZdO=MoV9cyh2QnQ=iuq_fAJFUTOcrifx2_g@mail.gmail.com>

On 15 November 2012 01:19, Mike Schinkel <mike at newclarity.net> wrote:
> I think this can easily be addressed for the 20% use-case, and here is how:
>
> Add a "register_library()" function to WordPress that accepts the following parameters, to be called by a plugin or theme within an 'init' hook:
>
>         Library Name
>         Version of this library
>         Filepath of the file to require()
>         Rules: Load Latest or Load this Version.
>
> Then call a 'load_libraries()' function after the 'after_setup_theme' hook to load the latest version of each library. If there is a conflict don't load the library and display an error message inside the admin for the administrator to see and take appropriate action about while plugins are in conflict.

Surely all this can be avoided by simply using namespaces in PHP. If I
bundle API X in my plugin and namespace it, then another plugin can
include the same or a different version of API X and there will be no
conflict.

Am I missing something?

John

From mike at newclarity.net  Thu Nov 15 04:32:00 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Wed, 14 Nov 2012 23:32:00 -0500
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
	Insight / Best Practice
In-Reply-To: <CAOqAKWCBhWeAHL=ZdO=MoV9cyh2QnQ=iuq_fAJFUTOcrifx2_g@mail.gmail.com>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
	<A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>
	<CAOqAKWCBhWeAHL=ZdO=MoV9cyh2QnQ=iuq_fAJFUTOcrifx2_g@mail.gmail.com>
Message-ID: <0E559A6B-F67E-4287-A087-F5EE11919265@newclarity.net>

On Nov 14, 2012, at 10:42 PM, John Blackbourn <johnbillion+wp at gmail.com> wrote:
> On 15 November 2012 01:19, Mike Schinkel <mike at newclarity.net> wrote:
>> I think this can easily be addressed for the 20% use-case, and here is how:
>> 
>> Add a "register_library()" function to WordPress that accepts the following parameters, to be called by a plugin or theme within an 'init' hook:
>> 
>>        Library Name
>>        Version of this library
>>        Filepath of the file to require()
>>        Rules: Load Latest or Load this Version.
>> 
>> Then call a 'load_libraries()' function after the 'after_setup_theme' hook to load the latest version of each library. If there is a conflict don't load the library and display an error message inside the admin for the administrator to see and take appropriate action about while plugins are in conflict.
> 
> Surely all this can be avoided by simply using namespaces in PHP. If I
> bundle API X in my plugin and namespace it, then another plugin can
> include the same or a different version of API X and there will be no
> conflict.

I don't see how PHP namespaces address the problem I posed. What am I missing?

Here's how I see it. If I'm using a published and tested version of Mark Jaquith's transient library in my plugin and you are use a later published and tested version of Mark Jaquith's transient library. Both of those version are still going to have used the same namespace: 

namespace markjaquith/wp_tlc_transients;

So if we both want to use a non-forked version of the library that Mark published we still have the same problem, right? 

Also, PHP namespaces require PHP 5.3 and since WordPress supports 5.2.4 using namespaces it is not even an option to solve the problem of using shared libraries in a WordPress plugin or theme.

Finally, what I proposed is two functions probably less than 40 lines of code each. Is that really so much to avoid if using it would potentially solve a real problem?


-Mike



From bryan at ibaku.net  Thu Nov 15 05:01:42 2012
From: bryan at ibaku.net (Bryan Petty)
Date: Wed, 14 Nov 2012 22:01:42 -0700
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
 Insight / Best Practice
In-Reply-To: <A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
	<A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>
Message-ID: <CAKB8V+oO-rhjpjtrKPYCPcYROmQuH0yqWP-Pm70AG18O1HdGoQ@mail.gmail.com>

On Wed, Nov 14, 2012 at 6:19 PM, Mike Schinkel <mike at newclarity.net> wrote:
> https://github.com/getsunrise/imperative/blob/master/imperative.php

This could be way more flexible (and less code) if it just used
version_compare() along with uksort(). It would probably also be best
to just require the plugin to specify the version as a second
parameter instead of trying to parse the filename for it, the plugin
should already know the version anyway. That way library file names
can also go unmodified, and use vendor folder conventions that play
nicely with version control.

But...

There is one option available to solve this issue without requiring
any changes to core, is compatible with PHP 5.2, and doesn't require
any modifications to the 3rd party library. Unfortunately, it involves
building a service in front of the library in question that doesn't
include WP in any way, which you can then interface with like any
other external API. It can still be distributed with the plugin rather
than relying on an external server if preferred though. The downsides
are that this involves a slightly more complicated code architecture,
and can become very inefficient if designed incorrectly. The upside is
that it helps you build modular code (literally by forcing you to),
assuming you consider this a good thing anyway.

Regards,
Bryan Petty

From mike at newclarity.net  Thu Nov 15 05:14:47 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Thu, 15 Nov 2012 00:14:47 -0500
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
	Insight / Best Practice
In-Reply-To: <CAKB8V+oO-rhjpjtrKPYCPcYROmQuH0yqWP-Pm70AG18O1HdGoQ@mail.gmail.com>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
	<A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>
	<CAKB8V+oO-rhjpjtrKPYCPcYROmQuH0yqWP-Pm70AG18O1HdGoQ@mail.gmail.com>
Message-ID: <D802B64C-60D9-44BF-81B4-31F424A2AC6A@newclarity.net>

On Nov 15, 2012, at 12:01 AM, Bryan Petty <bryan at ibaku.net> wrote:
> On Wed, Nov 14, 2012 at 6:19 PM, Mike Schinkel <mike at newclarity.net> wrote:
>> https://github.com/getsunrise/imperative/blob/master/imperative.php
> 
> This could be way more flexible (and less code) if it just used
> version_compare() along with uksort(). It would probably also be best
> to just require the plugin to specify the version as a second
> parameter instead of trying to parse the filename for it, the plugin
> should already know the version anyway. That way library file names
> can also go unmodified, and use vendor folder conventions that play
> nicely with version control.

Agree. Like I said, I would do it differently now that I've used it for all the reasons you state.  I was trying to make it really simple but in doing so I think I made it oversimple.  

> There is one option available to solve this issue without requiring
> any changes to core, is compatible with PHP 5.2, and doesn't require
> any modifications to the 3rd party library. Unfortunately, it involves
> building a service in front of the library in question that doesn't
> include WP in any way, which you can then interface with like any
> other external API. It can still be distributed with the plugin rather
> than relying on an external server if preferred though. The downsides
> are that this involves a slightly more complicated code architecture,
> and can become very inefficient if designed incorrectly. The upside is
> that it helps you build modular code (literally by forcing you to),
> assuming you consider this a good thing anyway.

Thanks for the, but I'm sorry, I don't follow your thoughts at all.  Do you have an example where some other platform has done this to help me understand your idea?  

-Mike

From johnbillion+wp at gmail.com  Thu Nov 15 05:34:54 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu, 15 Nov 2012 05:34:54 +0000
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
 Insight / Best Practice
In-Reply-To: <0E559A6B-F67E-4287-A087-F5EE11919265@newclarity.net>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
	<A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>
	<CAOqAKWCBhWeAHL=ZdO=MoV9cyh2QnQ=iuq_fAJFUTOcrifx2_g@mail.gmail.com>
	<0E559A6B-F67E-4287-A087-F5EE11919265@newclarity.net>
Message-ID: <CAOqAKWBfY=-DRxVhZ0FXd5cEa68Od1S3+U18PSiuoqJcwA8ANA@mail.gmail.com>

On 15 November 2012 04:32, Mike Schinkel <mike at newclarity.net> wrote:
> On Nov 14, 2012, at 10:42 PM, John Blackbourn <johnbillion+wp at gmail.com> wrote:
>> Surely all this can be avoided by simply using namespaces in PHP. If I
>> bundle API X in my plugin and namespace it, then another plugin can
>> include the same or a different version of API X and there will be no
>> conflict.
>
> I don't see how PHP namespaces address the problem I posed. What am I missing?
>
> Here's how I see it. If I'm using a published and tested version of Mark Jaquith's transient library in my plugin and you are use a later published and tested version of Mark Jaquith's transient library. Both of those version are still going to have used the same namespace:
>
> namespace markjaquith/wp_tlc_transients;
>
> So if we both want to use a non-forked version of the library that Mark published we still have the same problem, right?

No, you would namespace it according to your plugin, not according to
the library. So for example:

namespace myplugin;

class wp_tlc_transients { ... }

And another plugin might use:

namespace foo_plugin;

class wp_tlc_transients { ... }

People use classes for namespacing their functions in the same way.

> Also, PHP namespaces require PHP 5.3 and since WordPress supports 5.2.4 using namespaces it is not even an option to solve the problem of using shared libraries in a WordPress plugin or theme.

Correct of course, and this is unfortunate, but it doesn't rule out
plugins having PHP requirements higher than WordPress'. Even
Automattic publishes plugins which require PHP 5.3.

> Finally, what I proposed is two functions probably less than 40 lines of code each. Is that really so much to avoid if using it would potentially solve a real problem?

Your proposal is simple and is quite similar to WordPress'
enqueuing/dependencies API for scripts and stylesheets. I was simply
offering a solution that can work outside of WordPress too.

John

From bryan at ibaku.net  Thu Nov 15 05:37:56 2012
From: bryan at ibaku.net (Bryan Petty)
Date: Wed, 14 Nov 2012 22:37:56 -0700
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
 Insight / Best Practice
In-Reply-To: <CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
Message-ID: <CAKB8V+qB2ACta+inWhXGxadrnosuJCJ3w5az9t8UwjSEJ25iZQ@mail.gmail.com>

On Wed, Nov 14, 2012 at 5:13 PM, Otto <otto at ottodestruct.com> wrote:
> In Unix/Linux, they "solved" it by basically making libraries either
> dynamically loaded, or statically loaded. Thus, for any given binary,
> it can opt to use the latest version on the system (which is centrally
> managed), or it can opt to be compiled in a static manner, where it
> contains its own copy of any particular library. If there's a breaking
> change to a library and a binary uses it in a dynamic way, then the
> binary will generally simply crash, depending on the severity of the
> change. Libraries that tend to change a lot thus tend to get compiled
> in a static fashion more often. It's a very decentralized solution to
> the problem, developers will make the decision on their own, but users
> can compile too and recompile if stuff starts breaking. Linux people
> tend to be DIY-ers a lot, so it works for them.

Statically linking libraries is usually done for a different reason.
You can still distribute a custom version of a dynamically linked
library along with your application (and link to that instead of the
system-provided versions).

If there's an ABI-incompatible change in a library, it's done in a new
stable branch of the library, and is provided as another dynamic
library with the ABI version indicated in the filename. Pretty much
all systems (including Windows) provide multiple ABI versions of the
library available to link to (depending on which versions are still in
use). You can see those version numbers in the library names in
/usr/lib.

Not that any of that helps here, but it's still interesting.

Regards,
Bryan Petty

From mike at newclarity.net  Thu Nov 15 05:39:21 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Thu, 15 Nov 2012 00:39:21 -0500
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
	Insight / Best Practice
In-Reply-To: <CAOqAKWBfY=-DRxVhZ0FXd5cEa68Od1S3+U18PSiuoqJcwA8ANA@mail.gmail.com>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
	<A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>
	<CAOqAKWCBhWeAHL=ZdO=MoV9cyh2QnQ=iuq_fAJFUTOcrifx2_g@mail.gmail.com>
	<0E559A6B-F67E-4287-A087-F5EE11919265@newclarity.net>
	<CAOqAKWBfY=-DRxVhZ0FXd5cEa68Od1S3+U18PSiuoqJcwA8ANA@mail.gmail.com>
Message-ID: <0BB689D4-F4EE-4DA9-A8CD-4384015FEEFD@newclarity.net>

On Nov 15, 2012, at 12:34 AM, John Blackbourn <johnbillion+wp at gmail.com> wrote:
> No, you would namespace it according to your plugin, not according to
> the library. So for example:
> 
> namespace myplugin;
> 
> class wp_tlc_transients { ... }
> 
> And another plugin might use:
> 
> namespace foo_plugin;
> 
> class wp_tlc_transients { ... }
> 
> People use classes for namespacing their functions in the same way.

That still requires modifying the library's source code, correct?

> Correct of course, and this is unfortunate, but it doesn't rule out
> plugins having PHP requirements higher than WordPress'. Even
> Automattic publishes plugins which require PHP 5.3.

It does rule out requiring 5.3 for people who don't want to be limited to the subset of users who do not run PHP5.3.  Over 66% of users, currently:

http://wordpress.org/about/stats/

According to comment I've seen made by Nacin, it's going to be a long time before WordPress moves to requiring 5.3 so waiting would mean waiting a long time.

-Mike

From mike at newclarity.net  Thu Nov 15 05:56:24 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Thu, 15 Nov 2012 00:56:24 -0500
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
	Insight / Best Practice
In-Reply-To: <CAKB8V+qB2ACta+inWhXGxadrnosuJCJ3w5az9t8UwjSEJ25iZQ@mail.gmail.com>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
	<CAKB8V+qB2ACta+inWhXGxadrnosuJCJ3w5az9t8UwjSEJ25iZQ@mail.gmail.com>
Message-ID: <9352AC28-9B3F-4830-85D5-EC16B9429A5D@newclarity.net>

On Nov 15, 2012, at 12:37 AM, Bryan Petty <bryan at ibaku.net> wrote:
> Not that any of that helps here...

Agreed.

Maybe I should present some assumed goals:

- Smallest changes to WordPress core that would reasonably address the problem.
- Does not require a version of PHP later than PHP 5.2.4.
- Allows inclusion of PHP libraries from GitHub and other sources with zero modification to the library's packaging and source code 
- Allows multiple plugins to include a library in their distributed source code and the loading of only one of those if they are the same.
- Ensures against conflicts if a simple rules are followed by plugin developer: use a well-known name and well-known version #.
- Plugin developers could effectively state "Use any version >= version X" or "Use only version X"
- If a conflict occurs WordPress to present admin with enough information to know which plugins are in conflict.

Where I see this being most useful is for libraries specifically developed for use with WordPress, libraries like Mark Jaquith's library for transients.  I have several libraries I'd like to release but what's holding me up is this issue. Without solving this problem using 3rd party libraries isn't really a good solution for plugin or theme developers.

-Mike
P.S. if we solve the issue of theme developers using custom post types[1][2]. With library support their end users could switch themes and then use a library loader plugin to use the same custom post types in another theme.

[1] http://www.wpbeginner.com/opinion/wordpress-custom-post-types-debate-functions-php-or-plugins/
[2] http://themeforest.net/forums/thread/wp-theme-forward-compatibility-shortcodescpts/75050





From lists at rotorised.com  Thu Nov 15 07:03:48 2012
From: lists at rotorised.com (Ryan McCue)
Date: Thu, 15 Nov 2012 17:03:48 +1000
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
 Insight / Best Practice
In-Reply-To: <81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
Message-ID: <50A493D4.1070404@rotorised.com>

Mike Schinkel wrote:
> Specifically let's say I build a plugin for distribution via wordpress.org and I decide to include Mark's library. Also Jeffrey Nolte builds a plugin and uses Mark's library too.  All is still good because Mark's library checks class_exists() before creating the class.
> 
> However, Mark has 3 pull requests and from reading those pull requests is seems like they have features that in some cases might be requirements for use. And those pull requests also modify the API. 

If they modify the API, they're breaking compatibility, simple as that.

This is one of the things we discussed at #wpcs (which is where that
ticket was born), and there's no good way to handle it. The best we can
do is say "a requires b version >= 0.2", and the plugins have to handle
API backwards compatibility.

Namespaces would help, but would still be a pretty crappy way of
handling it.

-- 
Ryan McCue
<http://ryanmccue.info/>

From mike at newclarity.net  Thu Nov 15 07:25:31 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Thu, 15 Nov 2012 02:25:31 -0500
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
	Insight / Best Practice
In-Reply-To: <50A493D4.1070404@rotorised.com>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<50A493D4.1070404@rotorised.com>
Message-ID: <3C8572D4-705D-4160-804E-4FE0541B4950@newclarity.net>

On Nov 15, 2012, at 2:03 AM, Ryan McCue <lists at rotorised.com> wrote:
> Mike Schinkel wrote:
>> Specifically let's say I build a plugin for distribution via wordpress.org and I decide to include Mark's library. Also Jeffrey Nolte builds a plugin and uses Mark's library too.  All is still good because Mark's library checks class_exists() before creating the class.
>> 
>> However, Mark has 3 pull requests and from reading those pull requests is seems like they have features that in some cases might be requirements for use. And those pull requests also modify the API. 
> 
> If they modify the API, they're breaking compatibility, simple as that.

That position allows for no improvements to a library's functionality, and that's just not realistic.  Libraries should be able to make backward compatible changes that in many cases are not forward compatible.

For example if two plugins need the same library but Plugin A uses Library v1.0 whereas Plugin B needs Library v1.1 then if Plugin A loads Library v1.0 first Plugin B is screwed because it cannot load Library v1.1 but if WordPress would allow both plugins to register the library they each need WordPress could choose to load v1.1 instead of v1.0. And the code to make all this work is pretty trivial.

> This is one of the things we discussed at #wpcs (which is where that
> ticket was born), and there's no good way to handle it. 

Doesn't what I just presented above not a good way to handle it?  If not, why not?

> The best we can do is say "a requires b version >= 0.2", and the plugins have to handle

> API backwards compatibility.

I don't follow "a requires b version >= 0.2"

> Namespaces would help, but would still be a pretty crappy way of
> handling it.

Agreed.

-Mike

From otto at ottodestruct.com  Thu Nov 15 14:07:19 2012
From: otto at ottodestruct.com (Otto)
Date: Thu, 15 Nov 2012 08:07:19 -0600
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
 Insight / Best Practice
In-Reply-To: <A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<CAD-FghxfENCQwrEBV9Mtd9YmqJ_7M6OB3C_1pvRuYqYWBmP1rA@mail.gmail.com>
	<A5F6DB8B-788B-48D2-8598-6BBDF6C18FB1@newclarity.net>
Message-ID: <CAD-FghyxH79=0vJNQHEiqCR8YjuktkVkKFH_9mkVG4bU1xQxLg@mail.gmail.com>

On Wed, Nov 14, 2012 at 7:19 PM, Mike Schinkel <mike at newclarity.net> wrote:
> If there is a conflict don't load the library and display an error message inside the admin for the administrator to see and take appropriate action about while plugins are in conflict.

That isn't a solution to the problem, because it doesn't solve
anything, it just throws the problem back on the user. The problem
already is on the user, now, all you're doing is adding a bunch of
extra code which will let you put a prettier face on failure.

A true solution would let both plugins not conflict with each other in
the first place.

-Otto

From lists at rotorised.com  Thu Nov 15 14:17:52 2012
From: lists at rotorised.com (Ryan McCue)
Date: Fri, 16 Nov 2012 00:17:52 +1000
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
 Insight / Best Practice
In-Reply-To: <3C8572D4-705D-4160-804E-4FE0541B4950@newclarity.net>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<50A493D4.1070404@rotorised.com>
	<3C8572D4-705D-4160-804E-4FE0541B4950@newclarity.net>
Message-ID: <50A4F990.5020603@rotorised.com>

Mike Schinkel wrote:
> That position allows for no improvements to a library's functionality, and that's just not realistic.  Libraries should be able to make backward compatible changes that in many cases are not forward compatible.

That's why the latest version would be loaded, so only backwards
compatibility would matter.

> For example if two plugins need the same library but Plugin A uses Library v1.0 whereas Plugin B needs Library v1.1 then if Plugin A loads Library v1.0 first Plugin B is screwed because it cannot load Library v1.1 but if WordPress would allow both plugins to register the library they each need WordPress could choose to load v1.1 instead of v1.0. And the code to make all this work is pretty trivial.

If it can't load 1.1 and use it the same as 1.0, that's a backwards
compatibility breakage.

> Doesn't what I just presented above not a good way to handle it?  If not, why not?

What specific implementation is that? When I say "no good way to handle
it", I mean multiple versions of the same plugin.

>> The best we can do is say "a requires b version >= 0.2", and the plugins have to handle
> 
>> API backwards compatibility.
> 
> I don't follow "a requires b version >= 0.2"

As in, you can require a minimum version, but you can't require a single
version or a maximum version. That way, we can solve dependency versions
quite easily.

In any case, this is all fairly off-topic of the original thread.

-- 
Ryan McCue
<http://ryanmccue.info/>

From halukkaramete at gmail.com  Thu Nov 15 17:37:23 2012
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Thu, 15 Nov 2012 09:37:23 -0800
Subject: [wp-hackers] tags with alias power
Message-ID: <CAHERW=2pE1frv3wkYE9+abjrCGbdb=GYmDaaMB8F+Bcwe+mmkw@mail.gmail.com>

Is there such a feature in WordPress, that you have one tag which is
the alias for another?

Example:

Muhammad Ali and Cassius Clay is the same thing. I have two separate
tags for each. And I tag my article with Muhammad Ali only while my
colleague tags another article that talks about Muhammad Ali as
Cassius Clay. And I want my users to be able to click on either term
"Cassius Clay" or "Muhammad Ali" and end up on the same URL. Now,
where does this handy? When I display my tag cloud alphabetically,
wouldn't it be nice whether you go to C's or M's you can spot the
topic either way. So, when you go to C's, and click on "Cassius Clay"
in there, you end up on the same url's as those who scans the M tags
and click on "Muhammad Ali".

I guess the functionality I need here is the same as that is found in
the back of many books. You go look up a word at the index, and you
read something like "see XYZ" redirecting you to look up the item
titled "XYZ", eventually getting you to the correct page.

If WordPress does not have a solution for this, my back up plan is to
analyze the terms using the Google trend tool and pick the one which
has the better volume and go with that as the first term and post fix
the other term into parenthesis, i.e, "Muhammad Ali (Cassius Clay)".

This unfortunately won't help those users who seek the topic under the
wrong alphabetical heading.

I'd like to hear your opinions on this.

http://wordpress.stackexchange.com/questions/72725/tag-with-alias-capability

From wordpress at zed1.com  Thu Nov 15 18:33:44 2012
From: wordpress at zed1.com (Mike Little)
Date: Thu, 15 Nov 2012 18:33:44 +0000
Subject: [wp-hackers] tags with alias power
In-Reply-To: <CAHERW=2pE1frv3wkYE9+abjrCGbdb=GYmDaaMB8F+Bcwe+mmkw@mail.gmail.com>
References: <CAHERW=2pE1frv3wkYE9+abjrCGbdb=GYmDaaMB8F+Bcwe+mmkw@mail.gmail.com>
Message-ID: <CAMb54M3j5RA6zgn--37n2_EhZwX1iO7-xaXsq0qg28M60DDU0Q@mail.gmail.com>

On 15 November 2012 17:37, Haluk Karamete <halukkaramete at gmail.com> wrote:

> Is there such a feature in WordPress, that you have one tag which is
> the alias for another?
>
> Example:
>
> Muhammad Ali and Cassius Clay is the same thing. I have two separate
> tags for each. And I tag my article with Muhammad Ali only while my
> colleague tags another article that talks about Muhammad Ali as
>

[SNIP]


>
> I guess the functionality I need here is the same as that is found in
> the back of many books. You go look up a word at the index, and you
> read something like "see XYZ" redirecting you to look up the item
> titled "XYZ", eventually getting you to the correct page.
>
>
WordPress does actually support an 'alias_of' field when creating taxonomy
terms programatically. eg:

wp_insert_term( 'Wheelchair access', 'venue_access', array( 'description'
=> 'Wheelchair / ramp access', 'slug' => 'wheelchair' ) );

wp_insert_term( 'Ramp access', 'venue_access', array( 'description' =>
'Ramp Access (same as wheelchair access)', 'slug' => 'ramp', 'alias_of' =>
'wheelchair' ) );

But I've never seen any plugin expose that functionality in the UI.

WordPress does not seem to support the capability in the way you might
expect (searching), other than to support sorting by term_group (which is
created for a group of aliases). So when retrieving a list of terms
(get_terms()), and choosing order_by 'term_group' as an argument, the
aliases will be sorted together.

I think that does mean you could add support for what you want, but I've
not seen it done.

Mike
-- 
Mike Little
http://zed1.com/

From mike at newclarity.net  Thu Nov 15 20:13:15 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Thu, 15 Nov 2012 15:13:15 -0500
Subject: [wp-hackers] Facebook API and WordPress Plugin Development -
	Insight / Best Practice
In-Reply-To: <50A4F990.5020603@rotorised.com>
References: <31299BCA-6D6E-4B67-8BA8-7882C7F06626@getmoxied.net>
	<CAD-FghxE+pSE6BZ+QSrEQn+MNEWuFtmeNCkNSM=6srrqY-3Egw@mail.gmail.com>
	<81F0DF8E-6722-4C1A-B804-3516AAA79A33@newclarity.net>
	<50A493D4.1070404@rotorised.com>
	<3C8572D4-705D-4160-804E-4FE0541B4950@newclarity.net>
	<50A4F990.5020603@rotorised.com>
Message-ID: <3BEB2122-BF71-4E77-9227-AC093F220C83@newclarity.net>

On Nov 15, 2012, at 9:07 AM, Otto <otto at ottodestruct.com> wrote:
> On Wed, Nov 14, 2012 at 7:19 PM, Mike Schinkel <mike at newclarity.net> wrote:
>> If there is a conflict don't load the library and display an error message inside the admin for the administrator to see and take appropriate action about while plugins are in conflict.
> 
> That isn't a solution to the problem, because it doesn't solve
> anything, it just throws the problem back on the user.

Having WordPress enable loading of the latest version of a library would be a big win compared to what we have now.

It only throws back on the user in the edge case, not the general case.  The general case is  developers building libraries for use in WordPress would follow proposed best practices and make sure that all changes in new versions are backward compatible with plugins that use older versions. 

Users would ONLY get an error when the developer of the plugin didn't trust that the library developer would support backward compatibility and ONLY when there was a conflicting plugin that required a later version.

> The problem already is on the user, now, all you're doing is
> adding a bunch of extra code which will let you put a prettier face
> on failure.

It's not a "bunch" of extra code, it's a trivial amount of code.  

In the current case when there is an error the users just get a crashed site with no advice on how to fix it. With the proposed approach the user would get an error message that indicates the problem and what steps they could take to correct it.  

And you are saying telling users what went wrong and how to fix it has no value? 

> A true solution would let both plugins not conflict with each other in
> the first place.

Perfect is the enemy of good.  


On Nov 15, 2012, at 9:17 AM, Ryan McCue <lists at rotorised.com> wrote:
> That's why the latest version would be loaded, so only backwards
> compatibility would matter.
> ...
> If it can't load 1.1 and use it the same as 1.0, that's a backwards
> compatibility breakage.
> ...
> What specific implementation is that? When I say "no good way to handle
> it", I mean multiple versions of the same plugin.
> ...
> As in, you can require a minimum version, but you can't require a single
> version or a maximum version. That way, we can solve dependency versions
> quite easily.

So I'm confused why you made the points because what I proposed addressed the ability to load the latest version.

> In any case, this is all fairly off-topic of the original thread.

Yes, except Otto's suggestions to use Mark's plugin exposed this issue.  

But noted. I will follow up with a trac ticket instead of continuing the thread unless there are further replies.

-Mike


From martin at lazarov.bg  Fri Nov 16 12:25:19 2012
From: martin at lazarov.bg (Martin Lazarov)
Date: Fri, 16 Nov 2012 14:25:19 +0200
Subject: [wp-hackers] plugin request wait time
Message-ID: <CAFJ6JWEF3YCczmcT_vM1N4xAFwN_qWTBCu6ThM3-QW6DzpF3Nw@mail.gmail.com>

What's the reason sometimes i have to wait days new plugin requests?

From helen.y.hou at gmail.com  Fri Nov 16 12:35:03 2012
From: helen.y.hou at gmail.com (Helen Hou-Sandi)
Date: Fri, 16 Nov 2012 07:35:03 -0500
Subject: [wp-hackers] plugin request wait time
In-Reply-To: <CAFJ6JWEF3YCczmcT_vM1N4xAFwN_qWTBCu6ThM3-QW6DzpF3Nw@mail.gmail.com>
References: <CAFJ6JWEF3YCczmcT_vM1N4xAFwN_qWTBCu6ThM3-QW6DzpF3Nw@mail.gmail.com>
Message-ID: <CAA0DF=88cY9=8+fOoFNCcsXUknzcYPVipXF3Pm6koarP+-m1sw@mail.gmail.com>

Because, as it says on the Developer Center page, "your plugin will be
manually reviewed". Sometimes the number of plugins submitted in a given
time period is more than can possibly be kept up with by the lovely
people/volunteers who review plugin submissions.

From martin at lazarov.bg  Fri Nov 16 18:30:48 2012
From: martin at lazarov.bg (Martin Lazarov)
Date: Fri, 16 Nov 2012 20:30:48 +0200
Subject: [wp-hackers] plugin request wait time
In-Reply-To: <CAA0DF=88cY9=8+fOoFNCcsXUknzcYPVipXF3Pm6koarP+-m1sw@mail.gmail.com>
References: <CAFJ6JWEF3YCczmcT_vM1N4xAFwN_qWTBCu6ThM3-QW6DzpF3Nw@mail.gmail.com>
	<CAA0DF=88cY9=8+fOoFNCcsXUknzcYPVipXF3Pm6koarP+-m1sw@mail.gmail.com>
Message-ID: <CAFJ6JWH7qEeEpOkVhTHRTVYvkyuPunXf9KWQqJSZHgRLX1DQYA@mail.gmail.com>

Is there a way to become lovely man/volunteer to help plugin submission reviews?

On Fri, Nov 16, 2012 at 2:35 PM, Helen Hou-Sandi <helen.y.hou at gmail.com> wrote:
> Because, as it says on the Developer Center page, "your plugin will be
> manually reviewed". Sometimes the number of plugins submitted in a given
> time period is more than can possibly be kept up with by the lovely
> people/volunteers who review plugin submissions.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mail at scribu.net  Fri Nov 16 18:45:24 2012
From: mail at scribu.net (scribu)
Date: Fri, 16 Nov 2012 20:45:24 +0200
Subject: [wp-hackers] plugin request wait time
In-Reply-To: <CAFJ6JWH7qEeEpOkVhTHRTVYvkyuPunXf9KWQqJSZHgRLX1DQYA@mail.gmail.com>
References: <CAFJ6JWEF3YCczmcT_vM1N4xAFwN_qWTBCu6ThM3-QW6DzpF3Nw@mail.gmail.com>
	<CAA0DF=88cY9=8+fOoFNCcsXUknzcYPVipXF3Pm6koarP+-m1sw@mail.gmail.com>
	<CAFJ6JWH7qEeEpOkVhTHRTVYvkyuPunXf9KWQqJSZHgRLX1DQYA@mail.gmail.com>
Message-ID: <CABzSYNMHEKPFwq0ZSfb3P6fwVp9bdbzZeZj38PqyedYGE4x7_Q@mail.gmail.com>

On Fri, Nov 16, 2012 at 8:30 PM, Martin Lazarov <martin at lazarov.bg> wrote:

> Is there a way to become lovely man/volunteer to help plugin submission
> reviews?
>

Unlike with theme reviews, the process through which one can become a
plugin reviewer hasn't been "open-sourced" yet. I'm hopeful that it will
be, eventually.

-- 
http://scribu.net

From cloudpresshosting at gmail.com  Fri Nov 16 20:04:17 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Fri, 16 Nov 2012 12:04:17 -0800
Subject: [wp-hackers] wpdb Outside of WordPress
Message-ID: <CALwRiz-2dzytrLsoRcXwhtPYWg+RYpAaPj+5Rapqu9EfUFesLg@mail.gmail.com>

I have a non WordPress project where I do need to connect to a mysql
database. I am so used to the wpdb syntax and it is so much easier than
using just the native php functions I want to use it outside of WordPress.
I know it is based on ezSQL but sadly I don't see any prepare method in
that that wpdb has.

So I was just going to re-purpose wpdb for non WordPress use which would
include removing all the WordPress specific stuff from it and just thought
I'd see if someone already has done this.

From brad at bradparbs.com  Fri Nov 16 20:13:24 2012
From: brad at bradparbs.com (Brad Parbs)
Date: Fri, 16 Nov 2012 14:13:24 -0600
Subject: [wp-hackers] wpdb Outside of WordPress
In-Reply-To: <CALwRiz-2dzytrLsoRcXwhtPYWg+RYpAaPj+5Rapqu9EfUFesLg@mail.gmail.com>
References: <CALwRiz-2dzytrLsoRcXwhtPYWg+RYpAaPj+5Rapqu9EfUFesLg@mail.gmail.com>
Message-ID: <D519CA97E7F8424989B0A5D0A0337B7E@bradparbs.com>

You could always check out B (http://backpress.org/)ackPress, adds a bunch of WordPress stuff as just PHP libraries.

On Friday, November 16, 2012 at 2:04 PM, CloudPress Hosting wrote:

> I have a non WordPress project where I do need to connect to a mysql
> database. I am so used to the wpdb syntax and it is so much easier than
> using just the native php functions I want to use it outside of WordPress.
> I know it is based on ezSQL but sadly I don't see any prepare method in
> that that wpdb has.
> 
> So I was just going to re-purpose wpdb for non WordPress use which would
> include removing all the WordPress specific stuff from it and just thought
> I'd see if someone already has done this.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 



From dragonfly at dragonflyeye.net  Fri Nov 16 20:16:45 2012
From: dragonfly at dragonflyeye.net (Thomas Belknap)
Date: Fri, 16 Nov 2012 15:16:45 -0500
Subject: [wp-hackers] wpdb Outside of WordPress
In-Reply-To: <D519CA97E7F8424989B0A5D0A0337B7E@bradparbs.com>
References: <CALwRiz-2dzytrLsoRcXwhtPYWg+RYpAaPj+5Rapqu9EfUFesLg@mail.gmail.com>
	<D519CA97E7F8424989B0A5D0A0337B7E@bradparbs.com>
Message-ID: <CAEamYWQKUSJ7PBPt0mOjHT-LRjCCwcsjxjLcQHe=ey+Ued7OGg@mail.gmail.com>

Ok, so does Backpress stay current with Wordpress? If I was looking, for
example, to load this as a vendor to a CakePHP project, would I be correct
in thinking I could pull WP data more or less in the same manner as the
current version of WP?

From brad at bradparbs.com  Fri Nov 16 20:21:50 2012
From: brad at bradparbs.com (Brad Parbs)
Date: Fri, 16 Nov 2012 14:21:50 -0600
Subject: [wp-hackers] wpdb Outside of WordPress
In-Reply-To: <CAEamYWQKUSJ7PBPt0mOjHT-LRjCCwcsjxjLcQHe=ey+Ued7OGg@mail.gmail.com>
References: <CALwRiz-2dzytrLsoRcXwhtPYWg+RYpAaPj+5Rapqu9EfUFesLg@mail.gmail.com>
	<D519CA97E7F8424989B0A5D0A0337B7E@bradparbs.com>
	<CAEamYWQKUSJ7PBPt0mOjHT-LRjCCwcsjxjLcQHe=ey+Ued7OGg@mail.gmail.com>
Message-ID: <81E47BE2142B42A5AA48AC4AFC4C15BD@bradparbs.com>

Not sure at all, I haven't ever used it. I'd say pull it down via svn, play around with it.

-- 
Brad Parbs
http://BradParbs.com
@bradparbs


On Friday, November 16, 2012 at 2:16 PM, Thomas Belknap wrote:

> Ok, so does Backpress stay current with Wordpress? If I was looking, for
> example, to load this as a vendor to a CakePHP project, would I be correct
> in thinking I could pull WP data more or less in the same manner as the
> current version of WP?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 



From mail at scribu.net  Fri Nov 16 21:54:46 2012
From: mail at scribu.net (scribu)
Date: Fri, 16 Nov 2012 23:54:46 +0200
Subject: [wp-hackers] wpdb Outside of WordPress
In-Reply-To: <81E47BE2142B42A5AA48AC4AFC4C15BD@bradparbs.com>
References: <CALwRiz-2dzytrLsoRcXwhtPYWg+RYpAaPj+5Rapqu9EfUFesLg@mail.gmail.com>
	<D519CA97E7F8424989B0A5D0A0337B7E@bradparbs.com>
	<CAEamYWQKUSJ7PBPt0mOjHT-LRjCCwcsjxjLcQHe=ey+Ued7OGg@mail.gmail.com>
	<81E47BE2142B42A5AA48AC4AFC4C15BD@bradparbs.com>
Message-ID: <CABzSYNP+-+hzGhgAaie=VvL_iDKZuKRER9c3w8By2DCUvNmbJg@mail.gmail.com>

Note that there's an object-oriented MySQL abstraction built right into
PHP, called PDO.

Here's just one of many articles that describes the advantages of PDO:
http://net.tutsplus.com/tutorials/php/pdo-vs-mysqli-which-should-you-use/

From lists at lobaugh.net  Fri Nov 16 22:06:02 2012
From: lists at lobaugh.net (Ben Lobaugh)
Date: Fri, 16 Nov 2012 14:06:02 -0800
Subject: [wp-hackers] plugin request wait time
In-Reply-To: <CABzSYNMHEKPFwq0ZSfb3P6fwVp9bdbzZeZj38PqyedYGE4x7_Q@mail.gmail.com>
References: <CAFJ6JWEF3YCczmcT_vM1N4xAFwN_qWTBCu6ThM3-QW6DzpF3Nw@mail.gmail.com>
	<CAA0DF=88cY9=8+fOoFNCcsXUknzcYPVipXF3Pm6koarP+-m1sw@mail.gmail.com>
	<CAFJ6JWH7qEeEpOkVhTHRTVYvkyuPunXf9KWQqJSZHgRLX1DQYA@mail.gmail.com>
	<CABzSYNMHEKPFwq0ZSfb3P6fwVp9bdbzZeZj38PqyedYGE4x7_Q@mail.gmail.com>
Message-ID: <50A6B8CA.8080902@lobaugh.net>

Do it, do it, do it

Then call me and I will hop on board :)

On 11/16/12 10:45 AM, scribu wrote:
> Unlike with theme reviews, the process through which one can become a
> plugin reviewer hasn't been "open-sourced" yet. I'm hopeful that it will
> be, eventually.


From david at carrcommunications.com  Fri Nov 16 22:07:34 2012
From: david at carrcommunications.com (David F. Carr)
Date: Fri, 16 Nov 2012 17:07:34 -0500
Subject: [wp-hackers] wpdb Outside of WordPress
In-Reply-To: <CABzSYNP+-+hzGhgAaie=VvL_iDKZuKRER9c3w8By2DCUvNmbJg@mail.gmail.com>
References: <CALwRiz-2dzytrLsoRcXwhtPYWg+RYpAaPj+5Rapqu9EfUFesLg@mail.gmail.com>
	<D519CA97E7F8424989B0A5D0A0337B7E@bradparbs.com>
	<CAEamYWQKUSJ7PBPt0mOjHT-LRjCCwcsjxjLcQHe=ey+Ued7OGg@mail.gmail.com>
	<81E47BE2142B42A5AA48AC4AFC4C15BD@bradparbs.com>
	<CABzSYNP+-+hzGhgAaie=VvL_iDKZuKRER9c3w8By2DCUvNmbJg@mail.gmail.com>
Message-ID: <CAJbdpGuj44VgCfUZXOZ5ptcCp8O46egpE+uRSygscZ2wko6=Yg@mail.gmail.com>

I've often created standalone PHP scripts, for example to be used with cron
job, that simply include "/pathto/wp-config.php" and then make use of the
$wpdb object.

Standard disclaimers apply about security concerns / protecting your
database.

On Fri, Nov 16, 2012 at 4:54 PM, scribu <mail at scribu.net> wrote:

> Note that there's an object-oriented MySQL abstraction built right into
> PHP, called PDO.
>
> Here's just one of many articles that describes the advantages of PDO:
> http://net.tutsplus.com/tutorials/php/pdo-vs-mysqli-which-should-you-use/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
David F. Carr
Writer, Editor, Web Consultant
david at carrcommunications.com
http://www.carrcommunications.com/

Editor, The BrainYard http://www.informationweek.com/thebrainyard
LinkedIn - http://www.linkedin.com/in/davidfcarr
Facebook - http://www.facebook.com/carrcomm

From cloudpresshosting at gmail.com  Fri Nov 16 23:21:41 2012
From: cloudpresshosting at gmail.com (CloudPress Hosting)
Date: Fri, 16 Nov 2012 15:21:41 -0800
Subject: [wp-hackers] wpdb Outside of WordPress
In-Reply-To: <CAJbdpGuj44VgCfUZXOZ5ptcCp8O46egpE+uRSygscZ2wko6=Yg@mail.gmail.com>
References: <CALwRiz-2dzytrLsoRcXwhtPYWg+RYpAaPj+5Rapqu9EfUFesLg@mail.gmail.com>
	<D519CA97E7F8424989B0A5D0A0337B7E@bradparbs.com>
	<CAEamYWQKUSJ7PBPt0mOjHT-LRjCCwcsjxjLcQHe=ey+Ued7OGg@mail.gmail.com>
	<81E47BE2142B42A5AA48AC4AFC4C15BD@bradparbs.com>
	<CABzSYNP+-+hzGhgAaie=VvL_iDKZuKRER9c3w8By2DCUvNmbJg@mail.gmail.com>
	<CAJbdpGuj44VgCfUZXOZ5ptcCp8O46egpE+uRSygscZ2wko6=Yg@mail.gmail.com>
Message-ID: <CALwRiz_4HAQdtU2Bb44_1vCONK_9F=E6v-MDWEnpWY3BV8sVoQ@mail.gmail.com>

I normally just use mysqli but for consistency since I am used to wpdb when
working with WordPress figured I could use it outside of WordPress as well.

On Fri, Nov 16, 2012 at 1:54 PM, scribu <mail at scribu.net> wrote:

> Note that there's an object-oriented MySQL abstraction built right into
> PHP, called PDO.
>
> Here's just one of many articles that describes the advantages of PDO:
> http://net.tutsplus.com/tutorials/php/pdo-vs-mysqli-which-should-you-use/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
Seems like overkill to load up a whole instance of WordPress just to access
a database. Shouldn't take much modification to the wpdb class to remove
the WordPress specific stuff and you can use it directly. It should be
possible to use it as is I believe I would just clean it up a little by
removing the WordPress specific stuff.

On Fri, Nov 16, 2012 at 2:07 PM, David F. Carr <david at carrcommunications.com
> wrote:

> I've often created standalone PHP scripts, for example to be used with cron
> job, that simply include "/pathto/wp-config.php" and then make use of the
> $wpdb object.
>
> Standard disclaimers apply about security concerns / protecting your
> database.
>
> On Fri, Nov 16, 2012 at 4:54 PM, scribu <mail at scribu.net> wrote:
>
> > Note that there's an object-oriented MySQL abstraction built right into
> > PHP, called PDO.
> >
> > Here's just one of many articles that describes the advantages of PDO:
> >
> http://net.tutsplus.com/tutorials/php/pdo-vs-mysqli-which-should-you-use/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> David F. Carr
> Writer, Editor, Web Consultant
> david at carrcommunications.com
> http://www.carrcommunications.com/
>
> Editor, The BrainYard http://www.informationweek.com/thebrainyard
> LinkedIn - http://www.linkedin.com/in/davidfcarr
> Facebook - http://www.facebook.com/carrcomm
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scott.c.taylor at mac.com  Sat Nov 17 19:20:35 2012
From: scott.c.taylor at mac.com (Scott Taylor)
Date: Sat, 17 Nov 2012 14:20:35 -0500
Subject: [wp-hackers] wpdb Outside of WordPress
In-Reply-To: <CALwRiz_4HAQdtU2Bb44_1vCONK_9F=E6v-MDWEnpWY3BV8sVoQ@mail.gmail.com>
References: <CALwRiz-2dzytrLsoRcXwhtPYWg+RYpAaPj+5Rapqu9EfUFesLg@mail.gmail.com>
	<D519CA97E7F8424989B0A5D0A0337B7E@bradparbs.com>
	<CAEamYWQKUSJ7PBPt0mOjHT-LRjCCwcsjxjLcQHe=ey+Ued7OGg@mail.gmail.com>
	<81E47BE2142B42A5AA48AC4AFC4C15BD@bradparbs.com>
	<CABzSYNP+-+hzGhgAaie=VvL_iDKZuKRER9c3w8By2DCUvNmbJg@mail.gmail.com>
	<CAJbdpGuj44VgCfUZXOZ5ptcCp8O46egpE+uRSygscZ2wko6=Yg@mail.gmail.com>
	<CALwRiz_4HAQdtU2Bb44_1vCONK_9F=E6v-MDWEnpWY3BV8sVoQ@mail.gmail.com>
Message-ID: <56ED890B07D441BF8C47F662D62490C2@mac.com>

wpdb is based on: https://github.com/jv2222/ezSQL

Those who work on WP core want to make wpdb work well for WordPress, not make a one-size-fits-all solution for all PHP environments. But there's nothing stopping anyone else (you) from doing that, and others would probably appreciate it 

-- 
scott taylor
musician / software engineer
160 west end ave #2H 
new york, ny 10023
m 646.715.7347
twitter: wonderboymusic
web: scotty-t.com


On Friday, November 16, 2012 at 6:21 PM, CloudPress Hosting wrote:

> I normally just use mysqli but for consistency since I am used to wpdb when
> working with WordPress figured I could use it outside of WordPress as well.
> 
> On Fri, Nov 16, 2012 at 1:54 PM, scribu <mail at scribu.net (mailto:mail at scribu.net)> wrote:
> 
> > Note that there's an object-oriented MySQL abstraction built right into
> > PHP, called PDO.
> > 
> > Here's just one of many articles that describes the advantages of PDO:
> > http://net.tutsplus.com/tutorials/php/pdo-vs-mysqli-which-should-you-use/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > 
> 
> Seems like overkill to load up a whole instance of WordPress just to access
> a database. Shouldn't take much modification to the wpdb class to remove
> the WordPress specific stuff and you can use it directly. It should be
> possible to use it as is I believe I would just clean it up a little by
> removing the WordPress specific stuff.
> 
> On Fri, Nov 16, 2012 at 2:07 PM, David F. Carr <david at carrcommunications.com (mailto:david at carrcommunications.com)
> > wrote:
> 
> 
> > I've often created standalone PHP scripts, for example to be used with cron
> > job, that simply include "/pathto/wp-config.php" and then make use of the
> > $wpdb object.
> > 
> > Standard disclaimers apply about security concerns / protecting your
> > database.
> > 
> > On Fri, Nov 16, 2012 at 4:54 PM, scribu <mail at scribu.net (mailto:mail at scribu.net)> wrote:
> > 
> > > Note that there's an object-oriented MySQL abstraction built right into
> > > PHP, called PDO.
> > > 
> > > Here's just one of many articles that describes the advantages of PDO:
> > http://net.tutsplus.com/tutorials/php/pdo-vs-mysqli-which-should-you-use/
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > 
> > 
> > 
> > 
> > 
> > --
> > David F. Carr
> > Writer, Editor, Web Consultant
> > david at carrcommunications.com (mailto:david at carrcommunications.com)
> > http://www.carrcommunications.com/
> > 
> > Editor, The BrainYard http://www.informationweek.com/thebrainyard
> > LinkedIn - http://www.linkedin.com/in/davidfcarr
> > Facebook - http://www.facebook.com/carrcomm
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 



From mrwiblog at gmail.com  Sat Nov 17 23:27:23 2012
From: mrwiblog at gmail.com (Chris Taylor - stillbreathing.co.uk)
Date: Sat, 17 Nov 2012 23:27:23 +0000
Subject: [wp-hackers] Plugin custom page
Message-ID: <CAOb_bYapZmEfvUWnLxMpt+7Y36yeSV084z8YhGt-CHSngXdqaw@mail.gmail.com>

Hi,

I'm currently updating my VoucherPress plugin which allows WP admins
to create vouchers that visitors can download. One of the optional
features of a voucher is to require the user to register their name
and email address to get a link to download the voucher. When the user
clicks a link to the voucher they should see a form asking for their
name and email address. If the voucher doesn't require their email
then they get the PDF immediately.

To support any template I need the form to be output using something
like the "the_content" filter, so it appears as if it's a real page.
The URL which is requested is something like
mysite.com/?voucher=abc123. This looked like it was going to work,
however when the front page is set to display multiple posts each post
gets its content filtered leading to multiple voucher forms on the
page. What would be the best way to handle this kind of custom page in
my plugin, seeing as just calling get_header() and get_footer() (which
is what the current version of the plugin does) may miss out large
parts of a templates design?

1) Use "the_content" and somehow break the loop?
2) Use a custom URL (e.g. "mysite.com/voucherpress/abc123") and map
that to the page/single/index page?
3) Something else?

Many thanks,

Chris

From christian at buro2.se  Sun Nov 18 22:01:54 2012
From: christian at buro2.se (Christian Gundersson)
Date: Sun, 18 Nov 2012 23:01:54 +0100
Subject: [wp-hackers] Overriding the template
Message-ID: <94DD9933-751F-4665-AE77-6239E44971F1@buro2.se>

Hi,

I've been asked to adapt an existing WP site to mobile, but the current "theme" (emphasis on the "") will be a nightmare to handle. The client also wants the structure and content to be slightly different on the frontpage. Oh, and I also don't want to muck with the urls and create a /mob/ directory or subdomain or what have you.

I had an idea that perhaps I could write a separate template file and maybe do a check-for-mobile/switch-to-mobile thing. Any thoughts and/or ideas how this could be done? Suggestions? I'll take anything really :)

Cheers
Christian

From dan at dansmart.co.uk  Sun Nov 18 22:11:33 2012
From: dan at dansmart.co.uk (Dan Smart)
Date: Sun, 18 Nov 2012 22:11:33 +0000
Subject: [wp-hackers] Overriding the template
In-Reply-To: <94DD9933-751F-4665-AE77-6239E44971F1@buro2.se>
References: <94DD9933-751F-4665-AE77-6239E44971F1@buro2.se>
Message-ID: <A26E05F9-1AB9-4C2E-A39C-9D8B2E142E8B@dansmart.co.uk>

Hi Christian,

There are a number of mobile theme switching plugins out there, including (shameful plug) my Mobile Smart plugin that does what you need: http://wordpress.org/extend/plugins/mobile-smart/

Best,

Dan

(Sent from iPhone)
Dan Smart - Web Developer
www.dansmart.co.uk

On 18 Nov 2012, at 22:01, Christian Gundersson <christian at buro2.se> wrote:

> Hi,
> 
> I've been asked to adapt an existing WP site to mobile, but the current "theme" (emphasis on the "") will be a nightmare to handle. The client also wants the structure and content to be slightly different on the frontpage. Oh, and I also don't want to muck with the urls and create a /mob/ directory or subdomain or what have you.
> 
> I had an idea that perhaps I could write a separate template file and maybe do a check-for-mobile/switch-to-mobile thing. Any thoughts and/or ideas how this could be done? Suggestions? I'll take anything really :)
> 
> Cheers
> Christian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From whsatterwhite at gmail.com  Sun Nov 18 22:11:09 2012
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Sun, 18 Nov 2012 17:11:09 -0500
Subject: [wp-hackers] Overriding the template
In-Reply-To: <94DD9933-751F-4665-AE77-6239E44971F1@buro2.se>
References: <94DD9933-751F-4665-AE77-6239E44971F1@buro2.se>
Message-ID: <CAGbA+aahGPfV6snUoq9bSvKxyzU7WaZnV-++1eUjG0acxJUXEA@mail.gmail.com>

You could create a separate mobile theme then check for mobile user-agents
and serve the mobile theme by way of the template_redirect hook.

On Sun, Nov 18, 2012 at 5:01 PM, Christian Gundersson <christian at buro2.se>wrote:

> Hi,
>
> I've been asked to adapt an existing WP site to mobile, but the current
> "theme" (emphasis on the "") will be a nightmare to handle. The client also
> wants the structure and content to be slightly different on the frontpage.
> Oh, and I also don't want to muck with the urls and create a /mob/
> directory or subdomain or what have you.
>
> I had an idea that perhaps I could write a separate template file and
> maybe do a check-for-mobile/switch-to-mobile thing. Any thoughts and/or
> ideas how this could be done? Suggestions? I'll take anything really :)
>
> Cheers
> Christian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From christian at buro2.se  Sun Nov 18 22:58:55 2012
From: christian at buro2.se (Christian Gundersson)
Date: Sun, 18 Nov 2012 23:58:55 +0100
Subject: [wp-hackers] Overriding the template
In-Reply-To: <CAGbA+aahGPfV6snUoq9bSvKxyzU7WaZnV-++1eUjG0acxJUXEA@mail.gmail.com>
References: <94DD9933-751F-4665-AE77-6239E44971F1@buro2.se>
	<CAGbA+aahGPfV6snUoq9bSvKxyzU7WaZnV-++1eUjG0acxJUXEA@mail.gmail.com>
Message-ID: <C1B8C68B-1289-4B78-B5CC-2F8EDFA178B1@buro2.se>

Hey!

Thanks for the inputs, both Dan and William, I'll look into both suggestions. Dan, your plugin looks like a good alternative, I'll have a closer look tomorrow.

Thanks!
//Christian



18 nov 2012 kl. 23:11 skrev William Satterwhite <whsatterwhite at gmail.com>:

> You could create a separate mobile theme then check for mobile user-agents
> and serve the mobile theme by way of the template_redirect hook.
> 
> On Sun, Nov 18, 2012 at 5:01 PM, Christian Gundersson <christian at buro2.se>wrote:
> 
>> Hi,
>> 
>> I've been asked to adapt an existing WP site to mobile, but the current
>> "theme" (emphasis on the "") will be a nightmare to handle. The client also
>> wants the structure and content to be slightly different on the frontpage.
>> Oh, and I also don't want to muck with the urls and create a /mob/
>> directory or subdomain or what have you.
>> 
>> I had an idea that perhaps I could write a separate template file and
>> maybe do a check-for-mobile/switch-to-mobile thing. Any thoughts and/or
>> ideas how this could be done? Suggestions? I'll take anything really :)
>> 
>> Cheers
>> Christian
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> -- 
> Hunter Satterwhite
> http://linkedin.com/in/hsatterwhite
> (252) 762-5177
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From kwight at kwight.ca  Sun Nov 18 23:31:13 2012
From: kwight at kwight.ca (Kirk Wight)
Date: Sun, 18 Nov 2012 18:31:13 -0500
Subject: [wp-hackers] Overriding the template
In-Reply-To: <C1B8C68B-1289-4B78-B5CC-2F8EDFA178B1@buro2.se>
References: <94DD9933-751F-4665-AE77-6239E44971F1@buro2.se>
	<CAGbA+aahGPfV6snUoq9bSvKxyzU7WaZnV-++1eUjG0acxJUXEA@mail.gmail.com>
	<C1B8C68B-1289-4B78-B5CC-2F8EDFA178B1@buro2.se>
Message-ID: <CAFQFuXPqeKrXkwzUQ2v5Mchh=o88bb50CJQYg2ET21CM1AGUtg@mail.gmail.com>

There's a mobile theme option included with the Jetpack plugin too.

On Sunday, November 18, 2012, Christian Gundersson wrote:

> Hey!
>
> Thanks for the inputs, both Dan and William, I'll look into both
> suggestions. Dan, your plugin looks like a good alternative, I'll have a
> closer look tomorrow.
>
> Thanks!
> //Christian
>
>
>
> 18 nov 2012 kl. 23:11 skrev William Satterwhite <whsatterwhite at gmail.com<javascript:;>
> >:
>
> > You could create a separate mobile theme then check for mobile
> user-agents
> > and serve the mobile theme by way of the template_redirect hook.
> >
> > On Sun, Nov 18, 2012 at 5:01 PM, Christian Gundersson <
> christian at buro2.se <javascript:;>>wrote:
> >
> >> Hi,
> >>
> >> I've been asked to adapt an existing WP site to mobile, but the current
> >> "theme" (emphasis on the "") will be a nightmare to handle. The client
> also
> >> wants the structure and content to be slightly different on the
> frontpage.
> >> Oh, and I also don't want to muck with the urls and create a /mob/
> >> directory or subdomain or what have you.
> >>
> >> I had an idea that perhaps I could write a separate template file and
> >> maybe do a check-for-mobile/switch-to-mobile thing. Any thoughts and/or
> >> ideas how this could be done? Suggestions? I'll take anything really :)
> >>
> >> Cheers
> >> Christian
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com <javascript:;>
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> >
> > --
> > Hunter Satterwhite
> > http://linkedin.com/in/hsatterwhite
> > (252) 762-5177
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From chris at stillbreathing.co.uk  Mon Nov 19 08:35:02 2012
From: chris at stillbreathing.co.uk (Chris Taylor - stillbreathing.co.uk)
Date: Mon, 19 Nov 2012 08:35:02 +0000
Subject: [wp-hackers] Plugin custom page
Message-ID: <CAOb_bYY4qP2ojOHSno1mgs2WHbN=jsgjfPbKJPRiT4n4D=t2XQ@mail.gmail.com>

Hi,

I'm currently updating my VoucherPress plugin which allows WP admins
to create vouchers that visitors can download. One of the optional
features of a voucher is to require the user to register their name
and email address to get a link to download the voucher. When the user
clicks a link to the voucher they should see a form asking for their
name and email address. If the voucher doesn't require their email
then they get the PDF immediately.

To support any template I need the form to be output using something
like the "the_content" filter, so it appears as if it's a real page.
The URL which is requested is something like
mysite.com/?voucher=abc123. This looked like it was going to work,
however when the front page is set to display multiple posts each post
gets its content filtered leading to multiple voucher forms on the
page. What would be the best way to handle this kind of custom page in
my plugin, seeing as just calling get_header() and get_footer() (which
is what the current version of the plugin does) may miss out large
parts of a templates design?

1) Use "the_content" and somehow break the loop?
2) Use a custom URL (e.g. "mysite.com/voucherpress/abc123") and map
that to the page/single/index page?
3) Something else?

Many thanks,

Chris

From wp at andrewnacin.com  Mon Nov 19 09:47:36 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 19 Nov 2012 04:47:36 -0500
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <1352613669.58489.YahooMailNeo@web142503.mail.bf1.yahoo.com>
References: <1352613669.58489.YahooMailNeo@web142503.mail.bf1.yahoo.com>
Message-ID: <CAP29PvhLGM++K5qKnKK+f6zwZ_xUyMfHvk_LZ+EK+sM+ZXFkyA@mail.gmail.com>

On Sun, Nov 11, 2012 at 1:01 AM, Mark Smith <mark.smith1187 at yahoo.com>wrote:

> I took a look at update.php to see how WordPress does it but the myriad of
> WordPress functions seems to just confuse me as to what exactly is being
> posted to the API endpoints
> http://api.wordpress.org/plugins/update-check/1.0/ and
> http://api.wordpress.org/themes/update-check/1.0/. Can anyone explain to
> me what eactly needs to be posted to get the current version of each plugin
> and theme.


If you use the /info/ endpoint for a single plugin, you'll end up with the
current version. The update-check endpoints are designed for checking a
bunch of plugins en masse, and for when you may not know the actual slug of
the plugin. (It does some fairly complex matching using pretty much every
plugin header to make sure it finds the right plugin.)

Example: http://api.wordpress.org/plugins/info/1.0/debug-bar.json. Other
accepted formats include .xml and .php.

From david at wordshell.net  Mon Nov 19 12:24:54 2012
From: david at wordshell.net (David Anderson)
Date: Mon, 19 Nov 2012 15:24:54 +0300
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <mailman.9.1353326402.29591.wp-hackers@lists.automattic.com>
References: <mailman.9.1353326402.29591.wp-hackers@lists.automattic.com>
Message-ID: <50AA2516.4050403@wordshell.net>

> If you use the/info/  endpoint for a single plugin, you'll end up with the
> current version. The update-check endpoints are designed for checking a
> bunch of plugins en masse, and for when you may not know the actual slug of
> the plugin. (It does some fairly complex matching using pretty much every
> plugin header to make sure it finds the right plugin.)
>
> Example:http://api.wordpress.org/plugins/info/1.0/debug-bar.json. Other
> accepted formats include .xml and .php.

Do you think there's any possibility that .ini could be provided? PHP serialized, JSON and XML are all nasty to try to process from shell, which is what I'm doing. (I chose shell because of its portability across the POSIX world). Presently I have a dependency on PHP, and some hacky fall-backs if it's not available, which works for all my customers so far, but it could be much improved. I realise that there are external tools I could call out to to do the processing, but that loses the portability. I'd like something I can process reasonably elegantly from Bash.

David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From chris at lod.com  Mon Nov 19 13:09:42 2012
From: chris at lod.com (chris mccoy)
Date: Mon, 19 Nov 2012 08:09:42 -0500
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <50AA2516.4050403@wordshell.net>
References: <mailman.9.1353326402.29591.wp-hackers@lists.automattic.com>
	<50AA2516.4050403@wordshell.net>
Message-ID: <000301cdc657$238c15d0$6aa44170$@lod.com>

You could prob use sed/awk, I used that for a shell script I wrote to
install wp by specifying the version, if not get the current version.

Here are two diff ways I used.

            wp_current_version=`curl -s
http://api.wordpress.org/core/version-check/1.6/ | awk -F\" '{print $34}'`
            wp_current_version=`curl -s
http://api.wordpress.org/core/version-check/1.6/ | sed -e
's/.*s:7:"current";s:5:"//;s/".*//'`

of course this is just for wp version not plugin, but you get the idea.

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of David Anderson
Sent: November 19, 2012 7:25 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Accessing Update Check API Outside of WordPress

> If you use the/info/  endpoint for a single plugin, you'll end up with 
> the current version. The update-check endpoints are designed for 
> checking a bunch of plugins en masse, and for when you may not know 
> the actual slug of the plugin. (It does some fairly complex matching 
> using pretty much every plugin header to make sure it finds the right 
> plugin.)
>
> Example:http://api.wordpress.org/plugins/info/1.0/debug-bar.json. 
> Other accepted formats include .xml and .php.

Do you think there's any possibility that .ini could be provided? PHP
serialized, JSON and XML are all nasty to try to process from shell, which
is what I'm doing. (I chose shell because of its portability across the
POSIX world). Presently I have a dependency on PHP, and some hacky
fall-backs if it's not available, which works for all my customers so far,
but it could be much improved. I realise that there are external tools I
could call out to to do the processing, but that loses the portability. I'd
like something I can process reasonably elegantly from Bash.

David

--
WordShell - WordPress fast from the CLI - www.wordshell.net

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From jbutkus at time.ly  Mon Nov 19 13:48:36 2012
From: jbutkus at time.ly (Justas Butkus)
Date: Mon, 19 Nov 2012 13:48:36 +0000
Subject: [wp-hackers] RFC on a ticket on trac
Message-ID: <0000013b18ed819d-d715cf3e-9b16-4a5a-ba78-ca381f307ee6-000000@email.amazonses.com>

Hello, everyone.

I would like to ask, maybe some could take a look, and maybe post some 
comment under one ticket, I have created few weeks ago: 
http://core.trac.wordpress.org/ticket/22286

Intention there is to get better performance on `backslashit` function 
(as might be seen from the patch).

This function is rather heavily used in `date_i18n` and we (Timely Inc., 
http://wordpress.org/extend/plugins/all-in-one-event-calendar/) are 
using later one intensively. Thus this patch could help us, and the 
community - to get better performance.

I would be glad to receive any comments upon patch.


-- 
Regards,
Justas Butkus

From bryangentry at gmail.com  Mon Nov 19 14:58:28 2012
From: bryangentry at gmail.com (Bryan Gentry)
Date: Mon, 19 Nov 2012 09:58:28 -0500
Subject: [wp-hackers] Plugin custom page
Message-ID: <CALabX+OXKodiW2c-1dSNgYoCY4WtWLyfeJ2tkgrg4aUGhy19Qw@mail.gmail.com>

Chris,

You will want to use the template_redirect hook:

          add_action( 'template_redirect', 'voucher_template' );
          function voucher_template() {
              //check your query variables to determine whether a voucher
is being displayed.
             if ( $voucher_is_being_displayed ) {
                       add_filter( 'the_content', 'voucher_content' );
                      }
            }

Then you create a function that accepts the content and changes it
appropriately:

             function voucher_content($content) {
                          //now add or change whatever you want to $content
                          return $content;
              }

My Easy FAQ With Expanding Text plugin uses this, as does an unpublished
plugin that allows one of my clients to create event pages.So far, this
does the trick and is working with several different themes.

Bryan Gentry


> Date: Mon, 19 Nov 2012 08:35:02 +0000
> From: "Chris Taylor - stillbreathing.co.uk"
>         <chris at stillbreathing.co.uk>
> Subject: [wp-hackers] Plugin custom page
> To: wp-hackers at lists.automattic.com
> Message-ID:
>         <CAOb_bYY4qP2ojOHSno1mgs2WHbN=jsgjfPbKJPRiT4n4D=
> t2XQ at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi,
>
> I'm currently updating my VoucherPress plugin which allows WP admins
> to create vouchers that visitors can download. One of the optional
> features of a voucher is to require the user to register their name
> and email address to get a link to download the voucher. When the user
> clicks a link to the voucher they should see a form asking for their
> name and email address. If the voucher doesn't require their email
> then they get the PDF immediately.
>
> To support any template I need the form to be output using something
> like the "the_content" filter, so it appears as if it's a real page.
> The URL which is requested is something like
> mysite.com/?voucher=abc123. This looked like it was going to work,
> however when the front page is set to display multiple posts each post
> gets its content filtered leading to multiple voucher forms on the
> page. What would be the best way to handle this kind of custom page in
> my plugin, seeing as just calling get_header() and get_footer() (which
> is what the current version of the plugin does) may miss out large
> parts of a templates design?
>
> 1) Use "the_content" and somehow break the loop?
> 2) Use a custom URL (e.g. "mysite.com/voucherpress/abc123") and map
> that to the page/single/index page?
> 3) Something else?
>
> Many thanks,
>
> Chris
>
>
> ------------------------------
>
> Message: 7
> Date: Mon, 19 Nov 2012 04:47:36 -0500
> From: Andrew Nacin <wp at andrewnacin.com>
> Subject: Re: [wp-hackers] Accessing Update Check API Outside of
>         WordPress
> To: wp-hackers at lists.automattic.com
> Message-ID:
>         <
> CAP29PvhLGM++K5qKnKK+f6zwZ_xUyMfHvk_LZ+EK+sM+ZXFkyA at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> On Sun, Nov 11, 2012 at 1:01 AM, Mark Smith <mark.smith1187 at yahoo.com
> >wrote:
>
> > I took a look at update.php to see how WordPress does it but the myriad
> of
> > WordPress functions seems to just confuse me as to what exactly is being
> > posted to the API endpoints
> > http://api.wordpress.org/plugins/update-check/1.0/ and
> > http://api.wordpress.org/themes/update-check/1.0/. Can anyone explain to
> > me what eactly needs to be posted to get the current version of each
> plugin
> > and theme.
>
>
> If you use the /info/ endpoint for a single plugin, you'll end up with the
> current version. The update-check endpoints are designed for checking a
> bunch of plugins en masse, and for when you may not know the actual slug of
> the plugin. (It does some fairly complex matching using pretty much every
> plugin header to make sure it finds the right plugin.)
>
> Example: http://api.wordpress.org/plugins/info/1.0/debug-bar.json. Other
> accepted formats include .xml and .php.
>
>
> ------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> End of wp-hackers Digest, Vol 94, Issue 28
> ******************************************
>



-- 
*Bryan Gentry*
Web designer, writer, editor
http://bryangentry.us

From jbutkus at time.ly  Mon Nov 19 18:30:46 2012
From: jbutkus at time.ly (Justas Butkus)
Date: Mon, 19 Nov 2012 18:30:46 +0000
Subject: [wp-hackers] RFC on a ticket on trac
In-Reply-To: <0000013b18ed819d-d715cf3e-9b16-4a5a-ba78-ca381f307ee6-000000@email.amazonses.com>
References: <0000013b18ed819d-d715cf3e-9b16-4a5a-ba78-ca381f307ee6-000000@email.amazonses.com>
Message-ID: <0000013b19efd781-7d493cea-6557-4622-a12e-550cafb2ea67-000000@email.amazonses.com>

I would like to thank Andrew Nacin for comments.

Thank you.
And I will have in mind comment on diff's attachment.

And I just wanted to avoid flooding the ticket - there is one other, 
rather old ticket:
http://core.trac.wordpress.org/ticket/10404

It is not about performance.
It is about dbDelta white-spaces handling.
We are working on a replacement, that would allow to diagnose (and 
compare) schema changes more accurately. Maybe it could make into WP 
core at some time as well.
In the mean time - the best I could think of is the patch on the later 
ticket.


-- 
Regards,
Justas B.

From wp at andrewnacin.com  Mon Nov 19 18:43:37 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 19 Nov 2012 13:43:37 -0500
Subject: [wp-hackers] RFC on a ticket on trac
In-Reply-To: <0000013b19efd781-7d493cea-6557-4622-a12e-550cafb2ea67-000000@email.amazonses.com>
References: <0000013b18ed819d-d715cf3e-9b16-4a5a-ba78-ca381f307ee6-000000@email.amazonses.com>
	<0000013b19efd781-7d493cea-6557-4622-a12e-550cafb2ea67-000000@email.amazonses.com>
Message-ID: <CAP29PvjZXaiDzOtxdZzneq4kYrQPK1t+wteT-XJFxV-OQec5-A@mail.gmail.com>

On Mon, Nov 19, 2012 at 1:30 PM, Justas Butkus <jbutkus at time.ly> wrote:

> It is about dbDelta white-spaces handling.
> We are working on a replacement, that would allow to diagnose (and
> compare) schema changes more accurately. Maybe it could make into WP core
> at some time as well.
> In the mean time - the best I could think of is the patch on the later
> ticket.
>

I think we'd love a dbDelta() that doesn't suck. We've made a few
performance-based improvements to it over the last few versions, but
haven't gone beyond that.

There's actually a newer parser in BackPress here:
http://backpress.trac.wordpress.org/browser/trunk/includes/class.bp-sql-schema-parser.php.
It has some issues, like being MySQL-version dependent in a few spots,
ignoring blocks against global table upgrades, etc. If MySQL corrects a
schema update to use a similar but different column type/definition, it'll
keep trying to run the upgrade anyway. Not fun. (Peter Westwood (westi)
could probably share more.)

We're not beholden to that parser, though. We would welcome something that
is backed with unit tests (and is testable, that'd be nice) and could pass
muster at the scale WordPress sees, which is literally every MySQL
configuration under the sun.

Nacin

From david at wordshell.net  Tue Nov 20 13:00:45 2012
From: david at wordshell.net (David Anderson)
Date: Tue, 20 Nov 2012 16:00:45 +0300
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <mailman.11.1353412802.13581.wp-hackers@lists.automattic.com>
References: <mailman.11.1353412802.13581.wp-hackers@lists.automattic.com>
Message-ID: <50AB7EFD.5030307@wordshell.net>

>
> You could prob use sed/awk, I used that for a shell script I wrote to
> install wp by specifying the version, if not get the current version.
>
> Here are two diff ways I used.
>
>              wp_current_version=`curl -s
> http://api.wordpress.org/core/version-check/1.6/  | awk -F\" '{print $34}'`
>              wp_current_version=`curl -s
> http://api.wordpress.org/core/version-check/1.6/  | sed -e
> 's/.*s:7:"current";s:5:"//;s/".*//'`
>
> of course this is just for wp version not plugin, but you get the idea.
That particular one's not necessary, as if you specify version 1.5 
instead of 1.6, you get plain text:

    curl -s http://api.wordpress.org/core/version-check/1.5/
    upgrade
    http://wordpress.org/download/
    http://wordpress.org/wordpress-3.4.2.zip
    3.4.2
    en_US
    5.2.4
    5.0

Trying to process PHP serialized data using sed and awk is probably 
enough to get you put in an institution in many jurisdictions. If I want 
to parse something like this to answer a question "is version Y of this 
plugin tested with version X of WordPress", the only reliable way to do 
it is to write a complete shell implementation of PHP's "unserialize" 
function to process this:

O:8:"stdClass":18:{s:4:"name";s:29:"Print Friendly and PDF 
Button";s:4:"slug";s:13:"printfriendly";s:7:"version";s:5:"3.1.4";s:6:"author";s:57:"<a 
href="http://www.PrintFriendly.com">Print 
Friendly</a>";s:14:"author_profile";s:43:"http://profiles.wordpress.org/printfriendly";s:12:"contributors";a:2:{s:13:"printfriendly";s:43:"http://profiles.wordpress.org/printfriendly";s:11:"joostdevalk";s:41:"http://profiles.wordpress.org/joostdevalk";}s:8:"requires";s:3:"2.8";s:6:"tested";s:5:"3.4.2";s:13:"compatibility";a:20:{s:5:"2.8.5";a:1:{s:3:"1.3";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}}s:5:"2.9.1";a:2:{s:3:"1.3";a:3:{i:0;i:100;i:1;i:3;i:2;i:3;}s:5:"3.0.6";a:3:{i:0;i:0;i:1;i:1;i:2;i:0;}}s:5:"2.9.2";a:1:{s:3:"1.3";a:3:{i:0;i:67;i:1;i:3;i:2;i:2;}}s:3:"3.0";a:1:{s:3:"1.4";a:3:{i:0;i:71;i:1;i:7;i:2;i:5;}}s:5:"3.0.1";a:3:{s:3:"1.4";a:3:{i:0;i:73;i:1;i:11;i:2;i:8;}s:3:"2.0";a:3:{i:0;i:80;i:1;i:10;i:2;i:8;}s:5:"3.0.6";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}}s:5:"3.0.3";a:4:{s:5:"1.3.1";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}s:3:"2.0";a:3:{i:0;i:67;i:1;i:3;i:2;i:2;}s:3:"2.1";a:3:{i:0;i:33;i:1;i:3;i:2;i:1;}s:5:"2.1.5";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}}s:5:"3.0.4";a:2:{s:5:"1.3.1";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}s:5:"2.1.2";a:3:{i:0;i:0;i:1;i:1;i:2;i:0;}}s:5:"3.0.5";a:1:{s:5:"2.1.8";a:3:{i:0;i:0;i:1;i:1;i:2;i:0;}}s:3:"3.1";a:3:{s:5:"2.1.2";a:3:{i:0;i:71;i:1;i:7;i:2;i:5;}s:5:"2.1.4";a:3:{i:0;i:75;i:1;i:8;i:2;i:6;}s:5:"2.1.5";a:3:{i:0;i:100;i:1;i:6;i:2;i:6;}}s:5:"3.1.1";a:1:{s:5:"2.1.5";a:3:{i:0;i:0;i:1;i:1;i:2;i:0;}}s:5:"3.1.2";a:2:{s:5:"2.1.5";a:3:{i:0;i:100;i:1;i:4;i:2;i:4;}s:5:"3.0.6";a:3:{i:0;i:0;i:1;i:1;i:2;i:0;}}s:5:"3.1.3";a:3:{s:5:"2.1.5";a:3:{i:0;i:100;i:1;i:3;i:2;i:3;}s:5:"2.1.7";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}s:5:"2.1.8";a:3:{i:0;i:100;i:1;i:2;i:2;i:2;}}s:3:"3.2";a:2:{s:5:"2.1.8";a:3:{i:0;i:100;i:1;i:4;i:2;i:4;}s:3:"3.0";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}}s:5:"3.2.1";a:6:{s:3:"3.0";a:3:{i:0;i:100;i:1;i:3;i:2;i:3;}s:5:"3.0.2";a:3:{i:0;i:100;i:1;i:2;i:2;i:2;}s:5:"3.0.3";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}s:5:"3.0.4";a:3:{i:0;i:78;i:1;i:9;i:2;i:7;}s:5:"3.0.6";a:3:{i:0;i:88;i:1;i:16;i:2;i:14;}s:5:"3.0.8";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}}s:3:"3.3";a:3:{s:5:"3.0.6";a:3:{i:0;i:100;i:1;i:4;i:2;i:4;}s:5:"3.0.7";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}s:5:"3.0.8";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}}s:5:"3.3.1";a:2:{s:5:"3.0.6";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}s:5:"3.0.8";a:3:{i:0;i:83;i:1;i:24;i:2;i:20;}}s:5:"3.3.2";a:1:{s:5:"3.0.8";a:3:{i:0;i:90;i:1;i:10;i:2;i:9;}}s:3:"3.4";a:1:{s:5:"3.0.8";a:3:{i:0;i:100;i:1;i:5;i:2;i:5;}}s:5:"3.4.1";a:1:{s:5:"3.0.8";a:3:{i:0;i:100;i:1;i:16;i:2;i:16;}}s:5:"3.4.2";a:3:{s:5:"3.0.8";a:3:{i:0;i:100;i:1;i:2;i:2;i:2;}s:5:"3.1.1";a:3:{i:0;i:100;i:1;i:4;i:2;i:4;}s:5:"3.1.3";a:3:{i:0;i:100;i:1;i:1;i:2;i:1;}}}s:6:"rating";d:86.7999999999999971578290569595992565155029296875;s:11:"num_ratings";i:188;s:10:"downloaded";i:164030;s:12:"last_updated";s:10:"2012-11-19";s:5:"added";s:10:"2009-05-01";s:8:"homepage";s:28:"http://www.printfriendly.com";s:8:"sections";a:5:{s:11:"description";s:2466:"<p>The 
Print Friendly &#38; PDF button saves paper and ink when printing or 
creating a PDF. It's fast, easy, and looks great when printed. Add the 
button now, and your users will see the difference.</p> (etc.)

That kind of task reminds me of when I was at school and someone gave me 
a handbook for learning machine code. Fun, if you have a long time to 
invest in it.

JSON is similar, but less complex and easier to write a parser for, but 
still a long job. I hadn't realised that api.wordpress.org output JSON 
until Andrew mentioned it yesterday - I'd only know of the serialized 
and XML. Now I've Googled, it seems that there is a MIT-licensed 
pure-shell parser for JSON, here which I'm about to investigate: 
https://github.com/dominictarr/JSON.sh. Looks promising.

David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From david at wordshell.net  Tue Nov 20 13:11:57 2012
From: david at wordshell.net (David Anderson)
Date: Tue, 20 Nov 2012 16:11:57 +0300
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <50AB7EFD.5030307@wordshell.net>
References: <mailman.11.1353412802.13581.wp-hackers@lists.automattic.com>
	<50AB7EFD.5030307@wordshell.net>
Message-ID: <50AB819D.4090607@wordshell.net>


On 20/11/12 16:00, David Anderson wrote:
>
> JSON is similar, but less complex and easier to write a parser for, 
> but still a long job. I hadn't realised that api.wordpress.org output 
> JSON until Andrew mentioned it yesterday - I'd only know of the 
> serialized and XML. Now I've Googled, it seems that there is a 
> MIT-licensed pure-shell parser for JSON, here which I'm about to 
> investigate: https://github.com/dominictarr/JSON.sh. Looks promising.
>

In case anyone else is interested, it's a clever bit of work - and 
suprisingly compact. Very awk-able:

# curl -s 
http://api.wordpress.org/plugins/info/1.0/add-email-signature.json | 
./JSON.sh | head
["name"]        "Add Email Signature"
["slug"]        "add-email-signature"
["version"]     "1.0.2"
["author"]      "<a href=\"http:\/\/david.dw-perspective.org.uk\">David 
Anderson<\/a>"
["author_profile"] "http:\/\/profiles.wordpress.org\/davidanderson"
["contributors","David Anderson"] 
"http:\/\/profiles.wordpress.org\/davidanderson"
["contributors"]        {"David 
Anderson":"http:\/\/profiles.wordpress.org\/davidanderson"}
["requires"]    "3.2"
["tested"]      "3.5"
["compatibility","3.4.2","1.0",0]       100


David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From wordpress at zed1.com  Tue Nov 20 13:19:24 2012
From: wordpress at zed1.com (Mike Little)
Date: Tue, 20 Nov 2012 13:19:24 +0000
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <50AB7EFD.5030307@wordshell.net>
References: <mailman.11.1353412802.13581.wp-hackers@lists.automattic.com>
	<50AB7EFD.5030307@wordshell.net>
Message-ID: <CAMb54M2h+VdXw-NVj=WDi=qAe5aBt6wW4eqp4WBvKMK_csufqA@mail.gmail.com>

I presume most of these kind of scripts would be run on the machine that
also hosts the sites in question. Thus PHP will be installed. Why not just
write the parsing code in PHP (using the WP code to start) and have it spit
out the specific bits required, then call that PHP code from your shell
scripts?

Mike
-- 
Mike Little
http://zed1.com/

From tcbarrett at gmail.com  Tue Nov 20 13:44:55 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Tue, 20 Nov 2012 13:44:55 +0000
Subject: [wp-hackers] Re-ordering search results
Message-ID: <CAEgmxaa0Qmqs44bNDYjg53KFdttCt1kSJOohZPR=sXJ4qyZLvA@mail.gmail.com>

I have a list of companies on a site, their profiles are stored as a custom
post type and they have several levels of membership (e.g. free, bronze,
silver, gold). Their membership is handled with a taxonomy. I want the free
text search to prioritise gold-package search results over silver (over
bronze, over free).

Is there a nice hook-able way for me to do this?

Other solutions are to:
 a) perform multiple searches (ew?)
 b) loop several times over search result?
 c) loop once and build my own set of results.

My thinking is that a simpler db query with lots of results would be better
than 4 more complex queries (but I will need the taxonomy term at some
point). So I either need to hook into pre_get_posts or loop through
$wp_query->posts?

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From chris at lod.com  Tue Nov 20 13:44:59 2012
From: chris at lod.com (chris mccoy)
Date: Tue, 20 Nov 2012 08:44:59 -0500
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <50AB819D.4090607@wordshell.net>
References: <mailman.11.1353412802.13581.wp-hackers@lists.automattic.com>
	<50AB7EFD.5030307@wordshell.net> <50AB819D.4090607@wordshell.net>
Message-ID: <000001cdc725$3c6d0ef0$b5472cd0$@lod.com>

Also a neat rubygem called jgrep.

chris at sorry:~$ curl -s
http://api.wordpress.org/plugins/info/1.0/add-email-signature.json | jgrep
-s version
1.0.2
chris at sorry:~$

https://github.com/ploubser/JSON-Grep



-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of David Anderson
Sent: November 20, 2012 8:12 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Accessing Update Check API Outside of WordPress


On 20/11/12 16:00, David Anderson wrote:
>
> JSON is similar, but less complex and easier to write a parser for, 
> but still a long job. I hadn't realised that api.wordpress.org output 
> JSON until Andrew mentioned it yesterday - I'd only know of the 
> serialized and XML. Now I've Googled, it seems that there is a 
> MIT-licensed pure-shell parser for JSON, here which I'm about to
> investigate: https://github.com/dominictarr/JSON.sh. Looks promising.
>

In case anyone else is interested, it's a clever bit of work - and 
suprisingly compact. Very awk-able:

# curl -s 
http://api.wordpress.org/plugins/info/1.0/add-email-signature.json | 
./JSON.sh | head
["name"]        "Add Email Signature"
["slug"]        "add-email-signature"
["version"]     "1.0.2"
["author"]      "<a href=\"http:\/\/david.dw-perspective.org.uk\">David 
Anderson<\/a>"
["author_profile"] "http:\/\/profiles.wordpress.org\/davidanderson"
["contributors","David Anderson"] 
"http:\/\/profiles.wordpress.org\/davidanderson"
["contributors"]        {"David 
Anderson":"http:\/\/profiles.wordpress.org\/davidanderson"}
["requires"]    "3.2"
["tested"]      "3.5"
["compatibility","3.4.2","1.0",0]       100


David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From partnuz at gmail.com  Tue Nov 20 14:12:34 2012
From: partnuz at gmail.com (Partnuz)
Date: Tue, 20 Nov 2012 15:12:34 +0100
Subject: [wp-hackers] accordion script doesnt work after saving on widget
	page
Message-ID: <50AB8FD2.5090309@gmail.com>

Hi
I added accordion script to one my widgets. Everything works fine until 
I save a widget . Then everything acts like the script hasn't been ever 
loaded. How to fix this ?

From wp at andrewnacin.com  Tue Nov 20 14:39:49 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 20 Nov 2012 09:39:49 -0500
Subject: [wp-hackers] Re-ordering search results
In-Reply-To: <CAEgmxaa0Qmqs44bNDYjg53KFdttCt1kSJOohZPR=sXJ4qyZLvA@mail.gmail.com>
References: <CAEgmxaa0Qmqs44bNDYjg53KFdttCt1kSJOohZPR=sXJ4qyZLvA@mail.gmail.com>
Message-ID: <CAP29PvjWDsaFhqtt8rqFsJh4MhTDnyBrJFRJC1t+RVy4zoevFg@mail.gmail.com>

On Tue, Nov 20, 2012 at 8:44 AM, Tom Barrett <tcbarrett at gmail.com> wrote:

> I have a list of companies on a site, their profiles are stored as a custom
> post type and they have several levels of membership (e.g. free, bronze,
> silver, gold). Their membership is handled with a taxonomy. I want the free
> text search to prioritise gold-package search results over silver (over
> bronze, over free).
>
> Is there a nice hook-able way for me to do this?
>
> Other solutions are to:
>  a) perform multiple searches (ew?)
>  b) loop several times over search result?
>  c) loop once and build my own set of results.
>
> My thinking is that a simpler db query with lots of results would be better
> than 4 more complex queries (but I will need the taxonomy term at some
> point). So I either need to hook into pre_get_posts or loop through
> $wp_query->posts?


You can re-order $wp_query->posts on your own, but that will only be
sufficient
if you aren't using any pagination here. You may also want to look into how
we
may implement smarter ordering in core in the future (possibly 3.6) ?
http://core.trac.wordpress.org/ticket/7394. This is possible with the
existing
search and orderby filters.

Nacin

From chris at stillbreathing.co.uk  Tue Nov 20 17:18:09 2012
From: chris at stillbreathing.co.uk (Chris Taylor - stillbreathing.co.uk)
Date: Tue, 20 Nov 2012 17:18:09 +0000
Subject: [wp-hackers] Plugin custom page
In-Reply-To: <CALabX+OXKodiW2c-1dSNgYoCY4WtWLyfeJ2tkgrg4aUGhy19Qw@mail.gmail.com>
References: <CALabX+OXKodiW2c-1dSNgYoCY4WtWLyfeJ2tkgrg4aUGhy19Qw@mail.gmail.com>
Message-ID: <CAOb_bYYaGQi2+_0s04MXFHyahmPDinfWi2J=2+jbdEM-NQahfQ@mail.gmail.com>

Hi,

Thanks for the replay but this is (ignoring abstractions) exactly what
I'm doing. I've got a URL like this:

mysite.com/?voucher=abc123

Which then uses template_redirect to check if a voucher is being
requested, then uses add_filter( 'the_content', ...) to change the
content that is being output to display my form. The problem is that
when the site homepage is displaying multiple blog entries (as a
standard installation does) then the add_filter( 'the_content', ...)
call gets run *once per post* leading to multiple instances of my
modified content down the page.

I need a way to say "when this querystring parameter is set display
this content once and once only, within the page/single/index
template".

Thanks,

Chris


On Mon, Nov 19, 2012 at 2:58 PM, Bryan Gentry <bryangentry at gmail.com> wrote:
> Chris,
>
> You will want to use the template_redirect hook:
>
>           add_action( 'template_redirect', 'voucher_template' );
>           function voucher_template() {
>               //check your query variables to determine whether a voucher
> is being displayed.
>              if ( $voucher_is_being_displayed ) {
>                        add_filter( 'the_content', 'voucher_content' );
>                       }
>             }
>
> Then you create a function that accepts the content and changes it
> appropriately:
>
>              function voucher_content($content) {
>                           //now add or change whatever you want to $content
>                           return $content;
>               }
>
> My Easy FAQ With Expanding Text plugin uses this, as does an unpublished
> plugin that allows one of my clients to create event pages.So far, this
> does the trick and is working with several different themes.
>
> Bryan Gentry
>
>
>> Date: Mon, 19 Nov 2012 08:35:02 +0000
>> From: "Chris Taylor - stillbreathing.co.uk"
>>         <chris at stillbreathing.co.uk>
>> Subject: [wp-hackers] Plugin custom page
>> To: wp-hackers at lists.automattic.com
>> Message-ID:
>>         <CAOb_bYY4qP2ojOHSno1mgs2WHbN=jsgjfPbKJPRiT4n4D=
>> t2XQ at mail.gmail.com>
>> Content-Type: text/plain; charset=ISO-8859-1
>>
>> Hi,
>>
>> I'm currently updating my VoucherPress plugin which allows WP admins
>> to create vouchers that visitors can download. One of the optional
>> features of a voucher is to require the user to register their name
>> and email address to get a link to download the voucher. When the user
>> clicks a link to the voucher they should see a form asking for their
>> name and email address. If the voucher doesn't require their email
>> then they get the PDF immediately.
>>
>> To support any template I need the form to be output using something
>> like the "the_content" filter, so it appears as if it's a real page.
>> The URL which is requested is something like
>> mysite.com/?voucher=abc123. This looked like it was going to work,
>> however when the front page is set to display multiple posts each post
>> gets its content filtered leading to multiple voucher forms on the
>> page. What would be the best way to handle this kind of custom page in
>> my plugin, seeing as just calling get_header() and get_footer() (which
>> is what the current version of the plugin does) may miss out large
>> parts of a templates design?
>>
>> 1) Use "the_content" and somehow break the loop?
>> 2) Use a custom URL (e.g. "mysite.com/voucherpress/abc123") and map
>> that to the page/single/index page?
>> 3) Something else?
>>
>> Many thanks,
>>
>> Chris
>>
>>
>> ------------------------------
>>
>> Message: 7
>> Date: Mon, 19 Nov 2012 04:47:36 -0500
>> From: Andrew Nacin <wp at andrewnacin.com>
>> Subject: Re: [wp-hackers] Accessing Update Check API Outside of
>>         WordPress
>> To: wp-hackers at lists.automattic.com
>> Message-ID:
>>         <
>> CAP29PvhLGM++K5qKnKK+f6zwZ_xUyMfHvk_LZ+EK+sM+ZXFkyA at mail.gmail.com>
>> Content-Type: text/plain; charset=ISO-8859-1
>>
>> On Sun, Nov 11, 2012 at 1:01 AM, Mark Smith <mark.smith1187 at yahoo.com
>> >wrote:
>>
>> > I took a look at update.php to see how WordPress does it but the myriad
>> of
>> > WordPress functions seems to just confuse me as to what exactly is being
>> > posted to the API endpoints
>> > http://api.wordpress.org/plugins/update-check/1.0/ and
>> > http://api.wordpress.org/themes/update-check/1.0/. Can anyone explain to
>> > me what eactly needs to be posted to get the current version of each
>> plugin
>> > and theme.
>>
>>
>> If you use the /info/ endpoint for a single plugin, you'll end up with the
>> current version. The update-check endpoints are designed for checking a
>> bunch of plugins en masse, and for when you may not know the actual slug of
>> the plugin. (It does some fairly complex matching using pretty much every
>> plugin header to make sure it finds the right plugin.)
>>
>> Example: http://api.wordpress.org/plugins/info/1.0/debug-bar.json. Other
>> accepted formats include .xml and .php.
>>
>>
>> ------------------------------
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>> End of wp-hackers Digest, Vol 94, Issue 28
>> ******************************************
>>
>
>
>
> --
> *Bryan Gentry*
> Web designer, writer, editor
> http://bryangentry.us
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From david at wordshell.net  Tue Nov 20 17:28:50 2012
From: david at wordshell.net (David Anderson)
Date: Tue, 20 Nov 2012 20:28:50 +0300
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <mailman.5023.1353431890.1480.wp-hackers@lists.automattic.com>
References: <mailman.5023.1353431890.1480.wp-hackers@lists.automattic.com>
Message-ID: <50ABBDD2.8090905@wordshell.net>


> I presume most of these kind of scripts would be run on the machine that
> also hosts the sites in question. Thus PHP will be installed. Why not just
> write the parsing code in PHP (using the WP code to start) and have it spit
> out the specific bits required, then call that PHP code from your shell
> scripts?

That's what I'm presently doing (calling out to PHP if present to 
unserialize). But my goal is to allow WordShell to not have a dependency 
on PHP (for now, without PHP, you just lose some meta-data and it 
carries on), so that it can be installed anywhere where there's a basic 
POSIX environment. I know that some customers are using Mac OS X which 
doesn't have PHP installed by default. They develop on servers across 
the network, but want to manage their collection of sites from their 
local workstation.

Anyway, with that shell JSON parser it looks like my problem is solved; 
we can access the meta-data that way, no PHP needed.

David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From wordpress at zed1.com  Tue Nov 20 17:45:17 2012
From: wordpress at zed1.com (Mike Little)
Date: Tue, 20 Nov 2012 17:45:17 +0000
Subject: [wp-hackers] Plugin custom page
In-Reply-To: <CAOb_bYYaGQi2+_0s04MXFHyahmPDinfWi2J=2+jbdEM-NQahfQ@mail.gmail.com>
References: <CALabX+OXKodiW2c-1dSNgYoCY4WtWLyfeJ2tkgrg4aUGhy19Qw@mail.gmail.com>
	<CAOb_bYYaGQi2+_0s04MXFHyahmPDinfWi2J=2+jbdEM-NQahfQ@mail.gmail.com>
Message-ID: <CAMb54M3-kuHXD0ggWgZAym4+wcRLws0onJiiNtQM2Bgf0DtvnQ@mail.gmail.com>

On 20 November 2012 17:18, Chris Taylor - stillbreathing.co.uk <
chris at stillbreathing.co.uk> wrote:

> Hi,
>
> Thanks for the replay but this is (ignoring abstractions) exactly what
> I'm doing. I've got a URL like this:
>
> mysite.com/?voucher=abc123
>
> Which then uses template_redirect to check if a voucher is being
> requested, then uses add_filter( 'the_content', ...) to change the
> content that is being output to display my form. The problem is that
> when the site homepage is displaying multiple blog entries (as a
> standard installation does) then the add_filter( 'the_content', ...)
> call gets run *once per post* leading to multiple instances of my
> modified content down the page.
>
> I need a way to say "when this querystring parameter is set display
> this content once and once only, within the page/single/index
> template".
>
>
Quick solution: Remove your filter in the filter code itself.

add_filter( 'the_content', 'my_content_filter');
function my_content_filter($content) {
 if ( some_test() ) { // check my special conditions
     $content .= add_my_extra_content();
     remove_filter( 'the_content', 'my_content_filter');
 }
return $content;
}


Mike
-- 
Mike Little
http://zed1.com/

From wordpress at zed1.com  Tue Nov 20 17:46:56 2012
From: wordpress at zed1.com (Mike Little)
Date: Tue, 20 Nov 2012 17:46:56 +0000
Subject: [wp-hackers] Accessing Update Check API Outside of WordPress
In-Reply-To: <50ABBDD2.8090905@wordshell.net>
References: <mailman.5023.1353431890.1480.wp-hackers@lists.automattic.com>
	<50ABBDD2.8090905@wordshell.net>
Message-ID: <CAMb54M1U_2L-k_nn=3ccbc+_21JDGtrtuJFJYsYNajF18yAQmw@mail.gmail.com>

On 20 November 2012 17:28, David Anderson <david at wordshell.net> wrote:

>
>  I presume most of these kind of scripts would be run on the machine that
>> also hosts the sites in question. Thus PHP will be installed. Why not just
>> write the parsing code in PHP (using the WP code to start) and have it
>> spit
>> out the specific bits required, then call that PHP code from your shell
>> scripts?
>>
>
> That's what I'm presently doing (calling out to PHP if present to
> unserialize). But my goal is to allow WordShell to not have a dependency on
> PHP (for now, without PHP, you just lose some meta-data and it carries on),
> so that it can be installed anywhere where there's a basic POSIX
> environment. I know that some customers are using Mac OS X which doesn't
> have PHP installed by default. They develop on servers across the network,
> but want to manage their collection of sites from their local workstation.
>
>
Ok. I hadn't got that you wanted to run this in such different environments.


> Anyway, with that shell JSON parser it looks like my problem is solved; we
> can access the meta-data that way, no PHP needed.
>
>
Cool.

Mike
-- 
Mike Little
http://zed1.com/

From chris at stillbreathing.co.uk  Tue Nov 20 19:54:53 2012
From: chris at stillbreathing.co.uk (Chris Taylor - stillbreathing.co.uk)
Date: Tue, 20 Nov 2012 19:54:53 +0000
Subject: [wp-hackers] Plugin custom page
In-Reply-To: <CAMb54M3-kuHXD0ggWgZAym4+wcRLws0onJiiNtQM2Bgf0DtvnQ@mail.gmail.com>
References: <CALabX+OXKodiW2c-1dSNgYoCY4WtWLyfeJ2tkgrg4aUGhy19Qw@mail.gmail.com>
	<CAOb_bYYaGQi2+_0s04MXFHyahmPDinfWi2J=2+jbdEM-NQahfQ@mail.gmail.com>
	<CAMb54M3-kuHXD0ggWgZAym4+wcRLws0onJiiNtQM2Bgf0DtvnQ@mail.gmail.com>
Message-ID: <CAOb_bYbfcFW+yJQOq0aE3ZebtBsThyexavLURk2aC_K=q+FTSw@mail.gmail.com>

Thanks Mike, but won't that return the first post filtered, then the
rest of the posts unfiltered? Something like:

Post 3
... my filtered content ...

Post 2
... content ...

Post 1
... content ...

I'm starting to think I'm going about this entirely wrong! There must
be an easy way to create a custom page with a plugin, isn't there?

Thanks for the continued help,

Chris



On Tue, Nov 20, 2012 at 5:45 PM, Mike Little <wordpress at zed1.com> wrote:
> On 20 November 2012 17:18, Chris Taylor - stillbreathing.co.uk <
> chris at stillbreathing.co.uk> wrote:
>
>> Hi,
>>
>> Thanks for the replay but this is (ignoring abstractions) exactly what
>> I'm doing. I've got a URL like this:
>>
>> mysite.com/?voucher=abc123
>>
>> Which then uses template_redirect to check if a voucher is being
>> requested, then uses add_filter( 'the_content', ...) to change the
>> content that is being output to display my form. The problem is that
>> when the site homepage is displaying multiple blog entries (as a
>> standard installation does) then the add_filter( 'the_content', ...)
>> call gets run *once per post* leading to multiple instances of my
>> modified content down the page.
>>
>> I need a way to say "when this querystring parameter is set display
>> this content once and once only, within the page/single/index
>> template".
>>
>>
> Quick solution: Remove your filter in the filter code itself.
>
> add_filter( 'the_content', 'my_content_filter');
> function my_content_filter($content) {
>  if ( some_test() ) { // check my special conditions
>      $content .= add_my_extra_content();
>      remove_filter( 'the_content', 'my_content_filter');
>  }
> return $content;
> }
>
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at zed1.com  Tue Nov 20 23:44:02 2012
From: wordpress at zed1.com (Mike Little)
Date: Tue, 20 Nov 2012 23:44:02 +0000
Subject: [wp-hackers] Plugin custom page
In-Reply-To: <CAOb_bYbfcFW+yJQOq0aE3ZebtBsThyexavLURk2aC_K=q+FTSw@mail.gmail.com>
References: <CALabX+OXKodiW2c-1dSNgYoCY4WtWLyfeJ2tkgrg4aUGhy19Qw@mail.gmail.com>
	<CAOb_bYYaGQi2+_0s04MXFHyahmPDinfWi2J=2+jbdEM-NQahfQ@mail.gmail.com>
	<CAMb54M3-kuHXD0ggWgZAym4+wcRLws0onJiiNtQM2Bgf0DtvnQ@mail.gmail.com>
	<CAOb_bYbfcFW+yJQOq0aE3ZebtBsThyexavLURk2aC_K=q+FTSw@mail.gmail.com>
Message-ID: <CAMb54M2ZvJMhzGvpgQonetWQGJ8uEvLcRfL0GXse8dYLbgD6hw@mail.gmail.com>

OK. I re-read your orginal post and understand what you are trying to do.

A quick and dirty solution is to use a shortcode.
create a page with that shortcode in it.

In the shortcode handler, do your processing.
pseudo code:

add_shortcode( 'voucher', 'my_voucher_shortcode_handler' );

function my_voucher_shortcode_handler( $atts, $content = null, $code = '' )
{
 if ( isset( $_POST['name'] ) && isset( $_POST['email'] ) && isset(
$_POST['voucher_code'] ) ) {
//validate and
 return 'pdf download link';
}
if ( isset( $_GET['voucher'] ) ) {
 $voucher_code = intval( $_GET['voucher'] ); // validate this properly
if ( need_login( $voucher_code ) ) {
 // output login form with voucher_code in hidden field
return get_login_form( $voucher_code );
 } else {
return 'pdf download link';
}
 }
return 'some default output';
}

Mike
-- 
Mike Little
http://zed1.com/

From chris at stillbreathing.co.uk  Wed Nov 21 08:42:28 2012
From: chris at stillbreathing.co.uk (Chris Taylor - stillbreathing.co.uk)
Date: Wed, 21 Nov 2012 08:42:28 +0000
Subject: [wp-hackers] Plugin custom page
In-Reply-To: <CAMb54M2ZvJMhzGvpgQonetWQGJ8uEvLcRfL0GXse8dYLbgD6hw@mail.gmail.com>
References: <CALabX+OXKodiW2c-1dSNgYoCY4WtWLyfeJ2tkgrg4aUGhy19Qw@mail.gmail.com>
	<CAOb_bYYaGQi2+_0s04MXFHyahmPDinfWi2J=2+jbdEM-NQahfQ@mail.gmail.com>
	<CAMb54M3-kuHXD0ggWgZAym4+wcRLws0onJiiNtQM2Bgf0DtvnQ@mail.gmail.com>
	<CAOb_bYbfcFW+yJQOq0aE3ZebtBsThyexavLURk2aC_K=q+FTSw@mail.gmail.com>
	<CAMb54M2ZvJMhzGvpgQonetWQGJ8uEvLcRfL0GXse8dYLbgD6hw@mail.gmail.com>
Message-ID: <CAOb_bYa3pgbyJsGapWD6v9Eaisck1GgT3PaSdY_siuzwD9hurA@mail.gmail.com>

Hi Mike,

Many thanks, but that isn't going to solve my problem either! Here's a
basic workflow for a "open" voucher:

1) The user creates a voucher that is available to anyone (i.e. it
doesn't require email registration to download)
2) The user puts the shortcode for that voucher on a page
3) A visitor clicks the link the shortcode generates (/?voucher=abc123)
4) The visitor downloads the resulting PDF file

And here's the workflow for a "closed" voucher:

1) The user creates a voucher that requires email registration to download
2) The user puts the shortcode for that voucher on a page
3) A visitor clicks the link the shortcode generates
(/?voucher=abc123) and sees the email registration form
4) The visitor enters their name and email address; the plugin then
creates a unique code for them and emails the visitor a link
5) The visitor clicks the link in the email
(/?voucher=abc123&downloadcode=xyz987)
6) The visitor downloads the resulting PDF file

So for step 3 of the process I'm using template_redirect to see if a
voucher is being requested. If it is, and it's a valid voucher ID, and
the voucher is "open", then the plugin generates a PDF and hands it
back to the HTTP request for download. If it is a "closed" voucher
then a form needs to be displayed.

I suppose, if this is getting really tricky, I could redirect to a
custom page at step 3 for a "closed" voucher. Therefore the process
would be like this:

3) The visitor clicks the link the shortcode generates (/?voucher=abc123)
4) The plugin sees that the voucher requires email registration and
redirects the visitor to /voucher-registration?voucher=abc123 which
then displays the email registration form
5) etc...

In that case the plugin needs to register a custom URL, which I
believe can be done with the WP_Rewrite class. However would that work
if pretty permalinks were not enabled?

Many thanks for the continuing help,

Chris


On Tue, Nov 20, 2012 at 11:44 PM, Mike Little <wordpress at zed1.com> wrote:
> OK. I re-read your orginal post and understand what you are trying to do.
>
> A quick and dirty solution is to use a shortcode.
> create a page with that shortcode in it.
>
> In the shortcode handler, do your processing.
> pseudo code:
>
> add_shortcode( 'voucher', 'my_voucher_shortcode_handler' );
>
> function my_voucher_shortcode_handler( $atts, $content = null, $code = '' )
> {
>  if ( isset( $_POST['name'] ) && isset( $_POST['email'] ) && isset(
> $_POST['voucher_code'] ) ) {
> //validate and
>  return 'pdf download link';
> }
> if ( isset( $_GET['voucher'] ) ) {
>  $voucher_code = intval( $_GET['voucher'] ); // validate this properly
> if ( need_login( $voucher_code ) ) {
>  // output login form with voucher_code in hidden field
> return get_login_form( $voucher_code );
>  } else {
> return 'pdf download link';
> }
>  }
> return 'some default output';
> }
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at zed1.com  Wed Nov 21 09:16:41 2012
From: wordpress at zed1.com (Mike Little)
Date: Wed, 21 Nov 2012 09:16:41 +0000
Subject: [wp-hackers] Plugin custom page
In-Reply-To: <CAOb_bYa3pgbyJsGapWD6v9Eaisck1GgT3PaSdY_siuzwD9hurA@mail.gmail.com>
References: <CALabX+OXKodiW2c-1dSNgYoCY4WtWLyfeJ2tkgrg4aUGhy19Qw@mail.gmail.com>
	<CAOb_bYYaGQi2+_0s04MXFHyahmPDinfWi2J=2+jbdEM-NQahfQ@mail.gmail.com>
	<CAMb54M3-kuHXD0ggWgZAym4+wcRLws0onJiiNtQM2Bgf0DtvnQ@mail.gmail.com>
	<CAOb_bYbfcFW+yJQOq0aE3ZebtBsThyexavLURk2aC_K=q+FTSw@mail.gmail.com>
	<CAMb54M2ZvJMhzGvpgQonetWQGJ8uEvLcRfL0GXse8dYLbgD6hw@mail.gmail.com>
	<CAOb_bYa3pgbyJsGapWD6v9Eaisck1GgT3PaSdY_siuzwD9hurA@mail.gmail.com>
Message-ID: <CAMb54M2BBDssFNmA8qjsLE7q5b1yOjKQ_3_Qk4Ytu-hjcL1nXw@mail.gmail.com>

On 21 November 2012 08:42, Chris Taylor - stillbreathing.co.uk <
chris at stillbreathing.co.uk> wrote:

> Hi Mike,
>
> Many thanks, but that isn't going to solve my problem either! Here's a
> basic workflow for a "open" voucher:
>
> 1) The user creates a voucher that is available to anyone (i.e. it
> doesn't require email registration to download)
> 2) The user puts the shortcode for that voucher on a page
> 3) A visitor clicks the link the shortcode generates (/?voucher=abc123)
> 4) The visitor downloads the resulting PDF file
>
>
Why are all these steps together? You are combining three different things
now:
* Admin/User creation of the voucher;
* distribution of the voucher URL; and
* visitor retrieval of the voucher.

They are three separate process that occur non-sequentially, and even by
different people.

If you split those three very separate processes you will find my solution
addresses all cases for visitor voucher retrieval.

If you need to respond with the pdf itself in the case of a open voucher,
you could do so on the template_redirect hook looking ahead into the
content of the already retrieved post/page for the shortcode. Though that's
always awkward because the visitor is left at an empty browser tab with
your url in the address bar after they have downloaded the file.


Mike
-- 
Mike Little
http://zed1.com/

From chris at stillbreathing.co.uk  Wed Nov 21 12:59:05 2012
From: chris at stillbreathing.co.uk (Chris Taylor - stillbreathing.co.uk)
Date: Wed, 21 Nov 2012 12:59:05 +0000
Subject: [wp-hackers] Plugin custom page
In-Reply-To: <CAMb54M2BBDssFNmA8qjsLE7q5b1yOjKQ_3_Qk4Ytu-hjcL1nXw@mail.gmail.com>
References: <CALabX+OXKodiW2c-1dSNgYoCY4WtWLyfeJ2tkgrg4aUGhy19Qw@mail.gmail.com>
	<CAOb_bYYaGQi2+_0s04MXFHyahmPDinfWi2J=2+jbdEM-NQahfQ@mail.gmail.com>
	<CAMb54M3-kuHXD0ggWgZAym4+wcRLws0onJiiNtQM2Bgf0DtvnQ@mail.gmail.com>
	<CAOb_bYbfcFW+yJQOq0aE3ZebtBsThyexavLURk2aC_K=q+FTSw@mail.gmail.com>
	<CAMb54M2ZvJMhzGvpgQonetWQGJ8uEvLcRfL0GXse8dYLbgD6hw@mail.gmail.com>
	<CAOb_bYa3pgbyJsGapWD6v9Eaisck1GgT3PaSdY_siuzwD9hurA@mail.gmail.com>
	<CAMb54M2BBDssFNmA8qjsLE7q5b1yOjKQ_3_Qk4Ytu-hjcL1nXw@mail.gmail.com>
Message-ID: <CAOb_bYYPeSDOfUj_w2dEujrCvZ1bd-f=ek46bUDpkfAWMtyN-A@mail.gmail.com>

Hi Mike,

Sorry for not making it clear. The steps to produce a voucher and
insert a shortcode into a post linking to that voucher are entirely
separate (I was simplifying to get the overal gist of the system
across). More details on how vouchers are created is here:
http://wordpress.org/extend/plugins/voucherpress/screenshots/

I'll give your suggestion a try, hopefully if I look at this again I
can figure out what I'm doing wrong.

Many thanks,

Chris


On Wed, Nov 21, 2012 at 9:16 AM, Mike Little <wordpress at zed1.com> wrote:
> On 21 November 2012 08:42, Chris Taylor - stillbreathing.co.uk <
> chris at stillbreathing.co.uk> wrote:
>
>> Hi Mike,
>>
>> Many thanks, but that isn't going to solve my problem either! Here's a
>> basic workflow for a "open" voucher:
>>
>> 1) The user creates a voucher that is available to anyone (i.e. it
>> doesn't require email registration to download)
>> 2) The user puts the shortcode for that voucher on a page
>> 3) A visitor clicks the link the shortcode generates (/?voucher=abc123)
>> 4) The visitor downloads the resulting PDF file
>>
>>
> Why are all these steps together? You are combining three different things
> now:
> * Admin/User creation of the voucher;
> * distribution of the voucher URL; and
> * visitor retrieval of the voucher.
>
> They are three separate process that occur non-sequentially, and even by
> different people.
>
> If you split those three very separate processes you will find my solution
> addresses all cases for visitor voucher retrieval.
>
> If you need to respond with the pdf itself in the case of a open voucher,
> you could do so on the template_redirect hook looking ahead into the
> content of the already retrieved post/page for the shortcode. Though that's
> always awkward because the visitor is left at an empty browser tab with
> your url in the address bar after they have downloaded the file.
>
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From zamoose at gmail.com  Wed Nov 21 15:37:10 2012
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 21 Nov 2012 10:37:10 -0500
Subject: [wp-hackers] Undeletable "null posts"
Message-ID: <CANFh3d6qKDSQzLctMpa6LbA0L7NTsogmQpy5kx9eY3BkF0+uTA@mail.gmail.com>

Before I work up a full Trac ticket, I thought I'd post here and see if
this is a) a bug or b) expected behavior. (I'm thinking "a".)

1) Open a New Post screen on either WP 3.4 or 3.5.
2) Immediately click "Publish" without entering any text or title.
3) Go to the All Posts listing screen.
4) Where did the post go?

There seems to be no native way to get to the post directly. If you
happened to remember the post ID, you can plunk it into the
wp-admin/post.php URL directly and get to it, but there's no other way to
access it.

This seems like incorrect behavior to me.
-- 
-Doug

From wp at andrewnacin.com  Wed Nov 21 15:43:21 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 21 Nov 2012 10:43:21 -0500
Subject: [wp-hackers] Undeletable "null posts"
In-Reply-To: <CANFh3d6qKDSQzLctMpa6LbA0L7NTsogmQpy5kx9eY3BkF0+uTA@mail.gmail.com>
References: <CANFh3d6qKDSQzLctMpa6LbA0L7NTsogmQpy5kx9eY3BkF0+uTA@mail.gmail.com>
Message-ID: <CAP29Pvho75XzrNO250Ep=VBy5ATwOYKreOH__3iPY1GPcSLOkw@mail.gmail.com>

On Wed, Nov 21, 2012 at 10:37 AM, Doug Stewart <zamoose at gmail.com> wrote:

> Before I work up a full Trac ticket, I thought I'd post here and see if
> this is a) a bug or b) expected behavior. (I'm thinking "a".)
>
> 1) Open a New Post screen on either WP 3.4 or 3.5.
> 2) Immediately click "Publish" without entering any text or title.
> 3) Go to the All Posts listing screen.
> 4) Where did the post go?
>
> There seems to be no native way to get to the post directly. If you
> happened to remember the post ID, you can plunk it into the
> wp-admin/post.php URL directly and get to it, but there's no other way to
> access it.
>
> This seems like incorrect behavior to me.


This has been a weird bug that has manifested itself a few different ways
over the years:
http://core.trac.wordpress.org/ticket/11082
http://core.trac.wordpress.org/ticket/17115

From jbutkus at time.ly  Wed Nov 21 15:55:27 2012
From: jbutkus at time.ly (Justas Butkus)
Date: Wed, 21 Nov 2012 15:55:27 +0000
Subject: [wp-hackers] RFC on a ticket on trac
In-Reply-To: <CAP29PvjZXaiDzOtxdZzneq4kYrQPK1t+wteT-XJFxV-OQec5-A@mail.gmail.com>
References: <0000013b18ed819d-d715cf3e-9b16-4a5a-ba78-ca381f307ee6-000000@email.amazonses.com>
	<0000013b19efd781-7d493cea-6557-4622-a12e-550cafb2ea67-000000@email.amazonses.com>
	<CAP29PvjZXaiDzOtxdZzneq4kYrQPK1t+wteT-XJFxV-OQec5-A@mail.gmail.com>
Message-ID: <0000013b23ae5c32-35558700-af7a-4a48-83b2-bfa68e717ba3-000000@email.amazonses.com>

Our implementation, so far, is aimed towards DDL only.
To be more precise - on 'CREATE TABLE' statements parsing. With all 
these flavours, that may occur - we made attempts to handle edge cases 
we do not use so far, but may be obliged to use at some time.

The BackPress approach seems viable. Although our approach is a bit 
different - in that it attempts to parse multitude of SQL variants, 
although compile to as basic SQL as possible, that would be recognized 
by dbDelta. There seems some drawbacks to it, so would we come to get a 
full-fledged replacement for dbDelta - I think it would be reasonable to 
raise more discussion, as to make a solution, that could make into core.

As I see - from this point of view, WordPress lock on MySQL is a good 
choice, because trying to support something else may become completely 
impossible via plain SQL statements parsing (i.e. how to convert that 
simple AUTO_INCREMENT into a sequence trigger).


-- 
Regards,
Justas B.

On 2012.11.19 20:43, Andrew Nacin wrote:
> I think we'd love a dbDelta() that doesn't suck. We've made a few
> performance-based improvements to it over the last few versions, but
> haven't gone beyond that.
>
> There's actually a newer parser in BackPress here:
> http://backpress.trac.wordpress.org/browser/trunk/includes/class.bp-sql-schema-parser.php.
> It has some issues, like being MySQL-version dependent in a few spots,
> ignoring blocks against global table upgrades, etc. If MySQL corrects a
> schema update to use a similar but different column type/definition, it'll
> keep trying to run the upgrade anyway. Not fun. (Peter Westwood (westi)
> could probably share more.)
>
> We're not beholden to that parser, though. We would welcome something that
> is backed with unit tests (and is testable, that'd be nice) and could pass
> muster at the scale WordPress sees, which is literally every MySQL
> configuration under the sun.


From tcbarrett at gmail.com  Wed Nov 21 16:07:21 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 21 Nov 2012 16:07:21 +0000
Subject: [wp-hackers] Enabling pretty url search redirect
Message-ID: <CAEgmxaYpT5X+7mRfTA1yna-cFsLO9kpKgaEDDvHdJYqWcB2SgA@mail.gmail.com>

I want to redirect all front end searches (?s=) onto the /search/ pretty
permalink. For pages (?p=) this happens automatically when permalinks are
switched on, but search is different.

If that isn't clear, here are two links. The first redirects to the pretty
url, the second doesn't:
http://www.tcbarrett.com/?p=1038
http://www.tcbarrett.com/?s=donate

I'm currently using a hook:
add_action( 'template_redirect', 'tcb_search_pretty_permalinks' );
function tcb_search_pretty_permalinks(){
  if( !is_admin() and is_search() ):
    if( $search = $_GET['s'] ):
      wp_redirect( home_url("search/{$search}/") );
      exit;
    endif;
  endif;
}

But wondered if there was a better way? I'm a little worried that I've
missed something and am now breaking things...

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From lists at alexking.org  Wed Nov 21 16:22:55 2012
From: lists at alexking.org (Alex King)
Date: Wed, 21 Nov 2012 09:22:55 -0700
Subject: [wp-hackers] Enabling pretty url search redirect
In-Reply-To: <CAEgmxaYpT5X+7mRfTA1yna-cFsLO9kpKgaEDDvHdJYqWcB2SgA@mail.gmail.com>
References: <CAEgmxaYpT5X+7mRfTA1yna-cFsLO9kpKgaEDDvHdJYqWcB2SgA@mail.gmail.com>
Message-ID: <769F2CF5-6557-4DDD-9FA8-015AD30E142C@alexking.org>

You should do your redirect way earlier in the stack (init, wp_loaded, etc.) so that WordPress doesn't do all the DB queries, etc. that it needs to pull the content to display. I'd experiment to find the earliest place this could be done.

You might also want to consider doing it at the .htaccess/mod_rewrite level so that it doesn't hit the PHP/WordPress layer at all.

Cheers,
--Alex

http://alexking.org | http://crowdfavorite.com




On Nov 21, 2012, at 9:07 AM, Tom Barrett <tcbarrett at gmail.com> wrote:

> I want to redirect all front end searches (?s=) onto the /search/ pretty
> permalink. For pages (?p=) this happens automatically when permalinks are
> switched on, but search is different.
> 
> If that isn't clear, here are two links. The first redirects to the pretty
> url, the second doesn't:
> http://www.tcbarrett.com/?p=1038
> http://www.tcbarrett.com/?s=donate
> 
> I'm currently using a hook:
> add_action( 'template_redirect', 'tcb_search_pretty_permalinks' );
> function tcb_search_pretty_permalinks(){
>  if( !is_admin() and is_search() ):
>    if( $search = $_GET['s'] ):
>      wp_redirect( home_url("search/{$search}/") );
>      exit;
>    endif;
>  endif;
> }
> 
> But wondered if there was a better way? I'm a little worried that I've
> missed something and am now breaking things...
> 
> -- 
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett


From wordpress at zed1.com  Wed Nov 21 16:32:01 2012
From: wordpress at zed1.com (Mike Little)
Date: Wed, 21 Nov 2012 16:32:01 +0000
Subject: [wp-hackers] Enabling pretty url search redirect
In-Reply-To: <CAEgmxaYpT5X+7mRfTA1yna-cFsLO9kpKgaEDDvHdJYqWcB2SgA@mail.gmail.com>
References: <CAEgmxaYpT5X+7mRfTA1yna-cFsLO9kpKgaEDDvHdJYqWcB2SgA@mail.gmail.com>
Message-ID: <CAMb54M0kK64bU5SH0pXU5o=ZtCKWONU7L21_s6VABHrsp+WOUA@mail.gmail.com>

On 21 November 2012 16:07, Tom Barrett <tcbarrett at gmail.com> wrote:

> I want to redirect all front end searches (?s=) onto the /search/ pretty
> permalink. For pages (?p=) this happens automatically when permalinks are
> switched on, but search is different.
>
>
Take a look at this plugin http://wordpress.org/extend/plugins/nice-search/

Seems to work ok.

Mike
-- 
Mike Little
http://zed1.com/

From tcbarrett at gmail.com  Wed Nov 21 16:53:56 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 21 Nov 2012 16:53:56 +0000
Subject: [wp-hackers] Enabling pretty url search redirect
In-Reply-To: <CAMb54M0kK64bU5SH0pXU5o=ZtCKWONU7L21_s6VABHrsp+WOUA@mail.gmail.com>
References: <CAEgmxaYpT5X+7mRfTA1yna-cFsLO9kpKgaEDDvHdJYqWcB2SgA@mail.gmail.com>
	<CAMb54M0kK64bU5SH0pXU5o=ZtCKWONU7L21_s6VABHrsp+WOUA@mail.gmail.com>
Message-ID: <CAEgmxaaiz0Cp+3+v0X5wAVc-2JA_Xp=H-g18KHwf1qiAT3VTBg@mail.gmail.com>

Interesting!

@Alex briefly:
 - The 's' query var is used in a various places (eg admin search) so not a
trivial rewrite.
 - I prefer to let WordPress to work out what should happen (just like for
any other rewrite).
 - (I don't use apache ;p).

@Mike
Thanks. Mark uses template_redirect and has some other useful sanity checks
in there. It's the 3rd plugin I've found today that either does something I
was doing, or is doing something I want to. 'Mazing.

Still leaves me wondering why it isn't core behaviour. There are no
caveat's to Mark's code, and I only learnt about /search/ when I tried to
add it myself and found it already there. The lack of redirect made me
think that /search/ wasn't there. But it is.

Oh well, enough pondering. Thanks for help :)



On 21 November 2012 16:32, Mike Little <wordpress at zed1.com> wrote:

> On 21 November 2012 16:07, Tom Barrett <tcbarrett at gmail.com> wrote:
>
> > I want to redirect all front end searches (?s=) onto the /search/ pretty
> > permalink. For pages (?p=) this happens automatically when permalinks are
> > switched on, but search is different.
> >
> >
> Take a look at this plugin
> http://wordpress.org/extend/plugins/nice-search/
>
> Seems to work ok.
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From wp at andrewnacin.com  Wed Nov 21 16:57:55 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 21 Nov 2012 11:57:55 -0500
Subject: [wp-hackers] Enabling pretty url search redirect
In-Reply-To: <CAEgmxaaiz0Cp+3+v0X5wAVc-2JA_Xp=H-g18KHwf1qiAT3VTBg@mail.gmail.com>
References: <CAEgmxaYpT5X+7mRfTA1yna-cFsLO9kpKgaEDDvHdJYqWcB2SgA@mail.gmail.com>
	<CAMb54M0kK64bU5SH0pXU5o=ZtCKWONU7L21_s6VABHrsp+WOUA@mail.gmail.com>
	<CAEgmxaaiz0Cp+3+v0X5wAVc-2JA_Xp=H-g18KHwf1qiAT3VTBg@mail.gmail.com>
Message-ID: <CAP29PvjCym_rsyCY=wO8uKO-08BzX-yQ6jt0s4gLkAObt=Nr6Q@mail.gmail.com>

On Wed, Nov 21, 2012 at 11:53 AM, Tom Barrett <tcbarrett at gmail.com> wrote:

> Still leaves me wondering why it isn't core behaviour. There are no
> caveat's to Mark's code, and I only learnt about /search/ when I tried to
> add it myself and found it already there. The lack of redirect made me
> think that /search/ wasn't there. But it is.


Search is generally accessed from form submissions, which helpfully puts
?s= into the URL,
so it's not like we are simply changing how our links a generated, which is
fairly easy. A redirect
for every search provide the pretty URL can feel unnecessary.

I think it would be nice if you could turn it on with nothing more than a
filter. Maybe for 3.6.

Nacin

From wordpress at zed1.com  Wed Nov 21 17:05:12 2012
From: wordpress at zed1.com (Mike Little)
Date: Wed, 21 Nov 2012 17:05:12 +0000
Subject: [wp-hackers] Enabling pretty url search redirect
In-Reply-To: <CAEgmxaaiz0Cp+3+v0X5wAVc-2JA_Xp=H-g18KHwf1qiAT3VTBg@mail.gmail.com>
References: <CAEgmxaYpT5X+7mRfTA1yna-cFsLO9kpKgaEDDvHdJYqWcB2SgA@mail.gmail.com>
	<CAMb54M0kK64bU5SH0pXU5o=ZtCKWONU7L21_s6VABHrsp+WOUA@mail.gmail.com>
	<CAEgmxaaiz0Cp+3+v0X5wAVc-2JA_Xp=H-g18KHwf1qiAT3VTBg@mail.gmail.com>
Message-ID: <CAMb54M2x6LcTkc4_f8vgAxr2xcerJSXFbtfdAoywOmdoXn-35A@mail.gmail.com>

On 21 November 2012 16:53, Tom Barrett <tcbarrett at gmail.com> wrote:

>
> @Mike
> Thanks. Mark uses template_redirect and has some other useful sanity checks
> in there. It's the 3rd plugin I've found today that either does something I
> was doing, or is doing something I want to. 'Mazing.
>
> Still leaves me wondering why it isn't core behaviour. There are no
> caveat's to Mark's code, and I only learnt about /search/ when I tried to
> add it myself and found it already there. The lack of redirect made me
> think that /search/ wasn't there. But it is.
>
>
I should image it's not core because
a) pretty urls are not guaranteed to work on all installations,
b) it's a perverse use of the url that appeals to we techies but could
confuse many people, and
c) unless you are distributing search links to your site, it's value is
pretty limited. That's what tag and category archive links are for.

Mike
-- 
Mike Little
http://zed1.com/

From chris at lod.com  Thu Nov 22 20:52:23 2012
From: chris at lod.com (chris mccoy)
Date: Thu, 22 Nov 2012 15:52:23 -0500
Subject: [wp-hackers] best way for cpt and galleries
Message-ID: <000001cdc8f3$4591e5d0$d0b5b170$@lod.com>

Want some advice on the best route to go with this issue, I want to have a
cpt of fashion models, but have multiple galleries for each fashion model, I
was going to use the CPT to create each model with bio, etc, then have posts
which represent galleries (using the gallery shortcode)

How would I tie each post of a gallery into the certain fashion model?

Maybe another route is better?

Thanks.


From mike at newclarity.net  Thu Nov 22 21:10:30 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Thu, 22 Nov 2012 16:10:30 -0500
Subject: [wp-hackers] best way for cpt and galleries
In-Reply-To: <000001cdc8f3$4591e5d0$d0b5b170$@lod.com>
References: <000001cdc8f3$4591e5d0$d0b5b170$@lod.com>
Message-ID: <1128F4D3-5031-42E0-A897-0921BB137C2C@newclarity.net>

Look at scribu's posts-2-posts plugin.

-Mike

Sent from my iPad

On Nov 22, 2012, at 3:52 PM, "chris mccoy" <chris at lod.com> wrote:

> Want some advice on the best route to go with this issue, I want to have a
> cpt of fashion models, but have multiple galleries for each fashion model, I
> was going to use the CPT to create each model with bio, etc, then have posts
> which represent galleries (using the gallery shortcode)
> 
> How would I tie each post of a gallery into the certain fashion model?
> 
> Maybe another route is better?
> 
> Thanks.
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at dd32.id.au  Thu Nov 22 22:46:18 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Thu, 22 Nov 2012 22:46:18 +0000
Subject: [wp-hackers] best way for cpt and galleries
In-Reply-To: <000001cdc8f3$4591e5d0$d0b5b170$@lod.com>
References: <000001cdc8f3$4591e5d0$d0b5b170$@lod.com>
Message-ID: <CAL4EHfnxAa4Hhq=w5GKd+2pJKEGhD13QbTnbXmL+PKvhJ5R6Zg@mail.gmail.com>

the gallery shortcut allows you to specify which attachments are shown
within agallery instance through the include attribute.
3.5's new media dialogue also makes it easy to pick which images to show in
galleries..  so that's probably the best way to achieve what you want
On 22/11/2012 3:52 PM, "chris mccoy" <chris at lod.com> wrote:

> Want some advice on the best route to go with this issue, I want to have a
> cpt of fashion models, but have multiple galleries for each fashion model,
> I
> was going to use the CPT to create each model with bio, etc, then have
> posts
> which represent galleries (using the gallery shortcode)
>
> How would I tie each post of a gallery into the certain fashion model?
>
> Maybe another route is better?
>
> Thanks.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From chris at lod.com  Thu Nov 22 22:58:47 2012
From: chris at lod.com (chris mccoy)
Date: Thu, 22 Nov 2012 17:58:47 -0500
Subject: [wp-hackers] best way for cpt and galleries
In-Reply-To: <CAL4EHfnxAa4Hhq=w5GKd+2pJKEGhD13QbTnbXmL+PKvhJ5R6Zg@mail.gmail.com>
References: <000001cdc8f3$4591e5d0$d0b5b170$@lod.com>
	<CAL4EHfnxAa4Hhq=w5GKd+2pJKEGhD13QbTnbXmL+PKvhJ5R6Zg@mail.gmail.com>
Message-ID: <000601cdc904$edffaa20$c9fefe60$@lod.com>

Thanks, ya I know about the gallery shortcode, looks like the posts 2 posts
plugin is what I am after.

Since the bio page is the cpt, and each regular post will represent a
gallery for each model and wanting to link certain posts to each model bio

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Dion Hulse
(dd32)
Sent: November 22, 2012 5:46 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] best way for cpt and galleries

the gallery shortcut allows you to specify which attachments are shown
within agallery instance through the include attribute.
3.5's new media dialogue also makes it easy to pick which images to show in
galleries..  so that's probably the best way to achieve what you want On
22/11/2012 3:52 PM, "chris mccoy" <chris at lod.com> wrote:

> Want some advice on the best route to go with this issue, I want to 
> have a cpt of fashion models, but have multiple galleries for each 
> fashion model, I was going to use the CPT to create each model with 
> bio, etc, then have posts which represent galleries (using the gallery 
> shortcode)
>
> How would I tie each post of a gallery into the certain fashion model?
>
> Maybe another route is better?
>
> Thanks.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From mc at stuffmc.com  Fri Nov 23 00:06:11 2012
From: mc at stuffmc.com (StuFF mc)
Date: Fri, 23 Nov 2012 01:06:11 +0100
Subject: [wp-hackers] wp.getOptions only answers from the "main" multi-site?
Message-ID: <CAHvd4xRBXXiZj344cLU7Qc6nju0H40h72mc4agRu32=zuT=VDg@mail.gmail.com>

Hi,

I'm calling wp.getOptions on a WordPress MU 2.7 ? I haven't tried yet
on a "recent" WP, but I'd like to support 2.7 upwards anyways.

I was suprised to see that I don't get an answer when calling this on
anything else than "blog_id = 1".

Any idea?

From tareq1988 at gmail.com  Wed Nov 28 13:17:06 2012
From: tareq1988 at gmail.com (Tareq Hasan)
Date: Wed, 28 Nov 2012 19:17:06 +0600
Subject: [wp-hackers] [Plugin Release] WP Project Manager - Managing project
	is now much easier
Message-ID: <CAL=Zo5u-NH6EchuvBbdShZ1-cWG3mvg97eRR6HOHCxM5FC2nKQ@mail.gmail.com>

A WordPress Project Management plugin. Manage your project simply with the
*right* tools and options. It gives you the test of basecamp, just inside
your loved WordPress.

*Features*

   - Projects
      - Create a new project
      - Set title and details of that project
      - Assign users for that project
   - Messages
      - Messages are used for discussing about the project with co-workers
      of that project
      - You can add attachments on messages
      - Comments can be made for discussion
   - To-do List
      - Add as many to-do list as you want with title and description
      - Add tasks, assign users, assign due date
      - See progressbar on the list
      - Add comments on individual to-do lists and to-do's
      - Mark to-do as complete/incomplete
   - Milestone
      - Create milestone
      - Assign messages and to-do list on milestone
      - 3 types of milestones are there, a) upcoming, b) completed and c)
      late milstone
   - Files
      - See all the uploaded files on messages and comments in one place
      and navigate to invidual attached threads.

*Download:*
http://wordpress.org/extend/plugins/wedevs-project-manager/

*Plugin Home*:
http://wedevs.com/plugin/wp-project-manager/

*Github Repo:*
https://github.com/tareq1988/wp-project-manager

--------------------------------------------
Best regards
Tareq Hasan
Blog <http://tareq.wedevs.com> | Twitter <http://twitter.com/tareq_cse>

From mario at peshev.net  Wed Nov 28 13:34:52 2012
From: mario at peshev.net (Mario Peshev)
Date: Wed, 28 Nov 2012 15:34:52 +0200
Subject: [wp-hackers] [Plugin Release] WP Project Manager - Managing
 project is now much easier
In-Reply-To: <CAL=Zo5u-NH6EchuvBbdShZ1-cWG3mvg97eRR6HOHCxM5FC2nKQ@mail.gmail.com>
References: <CAL=Zo5u-NH6EchuvBbdShZ1-cWG3mvg97eRR6HOHCxM5FC2nKQ@mail.gmail.com>
Message-ID: <CAN_8tK5Rj1tcgyjEx3UNFjkjdsBvhcRGypkjXkDRVMk5SGK2PQ@mail.gmail.com>

The screenshots look promising, I'm looking forward to seeing where does it
go.

Mario Peshev
Training and Consulting Services @ DevriX
http://www.linkedin.com/in/mpeshev
http://devrix.com
http://me.peshev.net




On Wed, Nov 28, 2012 at 3:17 PM, Tareq Hasan <tareq1988 at gmail.com> wrote:

> A WordPress Project Management plugin. Manage your project simply with the
> *right* tools and options. It gives you the test of basecamp, just inside
> your loved WordPress.
>
> *Features*
>
>    - Projects
>       - Create a new project
>       - Set title and details of that project
>       - Assign users for that project
>    - Messages
>       - Messages are used for discussing about the project with co-workers
>       of that project
>       - You can add attachments on messages
>       - Comments can be made for discussion
>    - To-do List
>       - Add as many to-do list as you want with title and description
>       - Add tasks, assign users, assign due date
>       - See progressbar on the list
>       - Add comments on individual to-do lists and to-do's
>       - Mark to-do as complete/incomplete
>    - Milestone
>       - Create milestone
>       - Assign messages and to-do list on milestone
>       - 3 types of milestones are there, a) upcoming, b) completed and c)
>       late milstone
>    - Files
>       - See all the uploaded files on messages and comments in one place
>       and navigate to invidual attached threads.
>
> *Download:*
> http://wordpress.org/extend/plugins/wedevs-project-manager/
>
> *Plugin Home*:
> http://wedevs.com/plugin/wp-project-manager/
>
> *Github Repo:*
> https://github.com/tareq1988/wp-project-manager
>
> --------------------------------------------
> Best regards
> Tareq Hasan
> Blog <http://tareq.wedevs.com> | Twitter <http://twitter.com/tareq_cse>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From moraleida at gmail.com  Wed Nov 28 13:37:32 2012
From: moraleida at gmail.com (Ricardo Moraleida)
Date: Wed, 28 Nov 2012 11:37:32 -0200
Subject: [wp-hackers] [Plugin Release] WP Project Manager - Managing
 project is now much easier
In-Reply-To: <CAN_8tK5Rj1tcgyjEx3UNFjkjdsBvhcRGypkjXkDRVMk5SGK2PQ@mail.gmail.com>
References: <CAL=Zo5u-NH6EchuvBbdShZ1-cWG3mvg97eRR6HOHCxM5FC2nKQ@mail.gmail.com>
	<CAN_8tK5Rj1tcgyjEx3UNFjkjdsBvhcRGypkjXkDRVMk5SGK2PQ@mail.gmail.com>
Message-ID: <CAF_HY=p5RSp8JOQ9u5Xyqaqu=QADax-GKoXvnvJWycV19BgRhg@mail.gmail.com>

This looks awesome, thanks!

I'm halfway into bulding my own PM system on top of WP, but i'd gladily
dump it for yours if functionalities match :)

Ricardo Moraleida



2012/11/28 Mario Peshev <mario at peshev.net>

> The screenshots look promising, I'm looking forward to seeing where does it
> go.
>
> Mario Peshev
> Training and Consulting Services @ DevriX
> http://www.linkedin.com/in/mpeshev
> http://devrix.com
> http://me.peshev.net
>
>
>
>
> On Wed, Nov 28, 2012 at 3:17 PM, Tareq Hasan <tareq1988 at gmail.com> wrote:
>
> > A WordPress Project Management plugin. Manage your project simply with
> the
> > *right* tools and options. It gives you the test of basecamp, just inside
> > your loved WordPress.
> >
> > *Features*
> >
> >    - Projects
> >       - Create a new project
> >       - Set title and details of that project
> >       - Assign users for that project
> >    - Messages
> >       - Messages are used for discussing about the project with
> co-workers
> >       of that project
> >       - You can add attachments on messages
> >       - Comments can be made for discussion
> >    - To-do List
> >       - Add as many to-do list as you want with title and description
> >       - Add tasks, assign users, assign due date
> >       - See progressbar on the list
> >       - Add comments on individual to-do lists and to-do's
> >       - Mark to-do as complete/incomplete
> >    - Milestone
> >       - Create milestone
> >       - Assign messages and to-do list on milestone
> >       - 3 types of milestones are there, a) upcoming, b) completed and c)
> >       late milstone
> >    - Files
> >       - See all the uploaded files on messages and comments in one place
> >       and navigate to invidual attached threads.
> >
> > *Download:*
> > http://wordpress.org/extend/plugins/wedevs-project-manager/
> >
> > *Plugin Home*:
> > http://wedevs.com/plugin/wp-project-manager/
> >
> > *Github Repo:*
> > https://github.com/tareq1988/wp-project-manager
> >
> > --------------------------------------------
> > Best regards
> > Tareq Hasan
> > Blog <http://tareq.wedevs.com> | Twitter <http://twitter.com/tareq_cse>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From tareq1988 at gmail.com  Wed Nov 28 13:49:30 2012
From: tareq1988 at gmail.com (Tareq Hasan)
Date: Wed, 28 Nov 2012 19:49:30 +0600
Subject: [wp-hackers] [Plugin Release] WP Project Manager - Managing
 project is now much easier
In-Reply-To: <CAF_HY=p5RSp8JOQ9u5Xyqaqu=QADax-GKoXvnvJWycV19BgRhg@mail.gmail.com>
References: <CAL=Zo5u-NH6EchuvBbdShZ1-cWG3mvg97eRR6HOHCxM5FC2nKQ@mail.gmail.com>
	<CAN_8tK5Rj1tcgyjEx3UNFjkjdsBvhcRGypkjXkDRVMk5SGK2PQ@mail.gmail.com>
	<CAF_HY=p5RSp8JOQ9u5Xyqaqu=QADax-GKoXvnvJWycV19BgRhg@mail.gmail.com>
Message-ID: <CAL=Zo5vQN9Kmmym11rc7TqadqNXQ0gK0pd9+h83WBQ52NmxeyQ@mail.gmail.com>

> This looks awesome, thanks!
>
> I'm halfway into bulding my own PM system on top of WP, but i'd gladily
> dump it for yours if functionalities match :)
>
> Ricardo Moraleida
>

 This plugin is inspired by basecamp, hope it'll work for you. Or you are
welcome to make it more improved :)

--------------------------------------------
Best regards
Tareq Hasan
Blog <http://tareq.wedevs.com> | Twitter <http://twitter.com/tareq_cse>

From mailing at markoheijnen.nl  Wed Nov 28 14:26:19 2012
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Wed, 28 Nov 2012 15:26:19 +0100
Subject: [wp-hackers] [Plugin Release] WP Project Manager - Managing
	project is now much easier
In-Reply-To: <CAL=Zo5vQN9Kmmym11rc7TqadqNXQ0gK0pd9+h83WBQ52NmxeyQ@mail.gmail.com>
References: <CAL=Zo5u-NH6EchuvBbdShZ1-cWG3mvg97eRR6HOHCxM5FC2nKQ@mail.gmail.com>
	<CAN_8tK5Rj1tcgyjEx3UNFjkjdsBvhcRGypkjXkDRVMk5SGK2PQ@mail.gmail.com>
	<CAF_HY=p5RSp8JOQ9u5Xyqaqu=QADax-GKoXvnvJWycV19BgRhg@mail.gmail.com>
	<CAL=Zo5vQN9Kmmym11rc7TqadqNXQ0gK0pd9+h83WBQ52NmxeyQ@mail.gmail.com>
Message-ID: <09B15A15-E12F-4FA5-B9B0-5A3672DEDBFF@markoheijnen.nl>

I'm also busy with something similar. I do however think that it shouldn't be one menu item. The installation is mostly dedicated to your plugin.

Curious if you have ideas on your mind that you can enable it on a network and that every site is a project. Something to do with user capabilities maybe adding pages for only one project and only those people can see it. In case you do have a front-end theme.

Marko


Op 28 nov. 2012, om 14:49 heeft Tareq Hasan <tareq1988 at gmail.com> het volgende geschreven:

>> This looks awesome, thanks!
>> 
>> I'm halfway into bulding my own PM system on top of WP, but i'd gladily
>> dump it for yours if functionalities match :)
>> 
>> Ricardo Moraleida
>> 
> 
> This plugin is inspired by basecamp, hope it'll work for you. Or you are
> welcome to make it more improved :)
> 
> --------------------------------------------
> Best regards
> Tareq Hasan
> Blog <http://tareq.wedevs.com> | Twitter <http://twitter.com/tareq_cse>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mike at donaghy.biz  Wed Nov 28 14:44:17 2012
From: mike at donaghy.biz (Michael Donaghy)
Date: Wed, 28 Nov 2012 09:44:17 -0500
Subject: [wp-hackers] [Plugin Release] WP Project Manager - Managing
 project is now much easier
In-Reply-To: <09B15A15-E12F-4FA5-B9B0-5A3672DEDBFF@markoheijnen.nl>
References: <CAL=Zo5u-NH6EchuvBbdShZ1-cWG3mvg97eRR6HOHCxM5FC2nKQ@mail.gmail.com>
	<CAN_8tK5Rj1tcgyjEx3UNFjkjdsBvhcRGypkjXkDRVMk5SGK2PQ@mail.gmail.com>
	<CAF_HY=p5RSp8JOQ9u5Xyqaqu=QADax-GKoXvnvJWycV19BgRhg@mail.gmail.com>
	<CAL=Zo5vQN9Kmmym11rc7TqadqNXQ0gK0pd9+h83WBQ52NmxeyQ@mail.gmail.com>
	<09B15A15-E12F-4FA5-B9B0-5A3672DEDBFF@markoheijnen.nl>
Message-ID: <CA+9wY=FfO_yMQjscAw+VKiUZcuwiwk4J-xAPnxsS5hFFdWu79Q@mail.gmail.com>

I look forward to seeing where this goes.

I agree with Marko - some type of per-project view would be great.  I see
the value in associating the projects on a site level in a network.  In my
case, this view would most useful with an option to make it private or
public.  With some cases, it's easier to be able to provide a link so that
the client can quickly access project information without logging in (which
is why google docs has been a great for me) and in other cases it needs to
be locked down.

If there was a plugin that provided enough PM functionality on the back-end
, while providing a clean project-status view (with some configurable
options) on the front-end I would be all over it.

A great example of a project status view is:
http://wordpress.org/extend/plugins/project-status/screenshots/ - but
unfortunately it's mainly just a view and doesn't provide many core PM
features.

Looks great so far, and thanks for sharing!

Mike

On Wed, Nov 28, 2012 at 9:26 AM, Marko Heijnen <mailing at markoheijnen.nl>wrote:

> I'm also busy with something similar. I do however think that it shouldn't
> be one menu item. The installation is mostly dedicated to your plugin.
>
> Curious if you have ideas on your mind that you can enable it on a network
> and that every site is a project. Something to do with user capabilities
> maybe adding pages for only one project and only those people can see it.
> In case you do have a front-end theme.
>
> Marko
>
>
> Op 28 nov. 2012, om 14:49 heeft Tareq Hasan <tareq1988 at gmail.com> het
> volgende geschreven:
>
> >> This looks awesome, thanks!
> >>
> >> I'm halfway into bulding my own PM system on top of WP, but i'd gladily
> >> dump it for yours if functionalities match :)
> >>
> >> Ricardo Moraleida
> >>
> >
> > This plugin is inspired by basecamp, hope it'll work for you. Or you are
> > welcome to make it more improved :)
> >
> > --------------------------------------------
> > Best regards
> > Tareq Hasan
> > Blog <http://tareq.wedevs.com> | Twitter <http://twitter.com/tareq_cse>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From m.witt at ia-sh.de  Wed Nov 28 23:39:45 2012
From: m.witt at ia-sh.de (Malte Witt)
Date: Thu, 29 Nov 2012 00:39:45 +0100
Subject: [wp-hackers] Wordpress SSO
Message-ID: <50B6A0C1.8000407@ia-sh.de>

Hey at all,
I have the following situation: There are two different wordpress 
installs, different domains, different databases, different servers and 
I want to establish an SSO mechanism between those two.

All plugins I found so far that match "sso" are in fact doing shared 
authentification and no 'real' sso at all, but I want to login to 
wordpress A and then surf to wordpress B and still be logged in (or be 
automatically logged in to wordpress B in that second).

The only chance I can think of to get the session cookie from wordpress 
A is to redirect to wordpress A, check the cookie and then redirect back 
to wordpress B (including some handshake to safely pass the information 
if the user is logged in), but because I don't know if there even is a 
session I would have to do this on every pageload of wordpress B (so 
this can't be a real solution ...). Alternatively I could do some crazy 
AJAX/CORS stuff on every pageload of wordpress B to get the session 
information from wordpress A and then refresh the page if needed ...

I hoped somebody already thought about all this stuff because I don't 
have a clue in the moment. So I would be really glad if someone could 
share his thoughts about this topic (maybe this is impossible at all and 
that's the reason there is no plugin or howto available?) ...

Regards,
Malte

From martin at lazarov.bg  Wed Nov 28 23:52:03 2012
From: martin at lazarov.bg (Martin Lazarov)
Date: Thu, 29 Nov 2012 01:52:03 +0200
Subject: [wp-hackers] Wordpress SSO
In-Reply-To: <50B6A0C1.8000407@ia-sh.de>
References: <50B6A0C1.8000407@ia-sh.de>
Message-ID: <CAFJ6JWHTYeTL-DGVzQonhBv+_Q2J3TW9Jgk+C4zK9v09D6wG2g@mail.gmail.com>

Do you have completely same users tables? If you don't you will need
new db table which will hold connection between users.

On Thu, Nov 29, 2012 at 1:39 AM, Malte Witt <m.witt at ia-sh.de> wrote:
> Hey at all,
> I have the following situation: There are two different wordpress installs,
> different domains, different databases, different servers and I want to
> establish an SSO mechanism between those two.
>
> All plugins I found so far that match "sso" are in fact doing shared
> authentification and no 'real' sso at all, but I want to login to wordpress
> A and then surf to wordpress B and still be logged in (or be automatically
> logged in to wordpress B in that second).
>
> The only chance I can think of to get the session cookie from wordpress A is
> to redirect to wordpress A, check the cookie and then redirect back to
> wordpress B (including some handshake to safely pass the information if the
> user is logged in), but because I don't know if there even is a session I
> would have to do this on every pageload of wordpress B (so this can't be a
> real solution ...). Alternatively I could do some crazy AJAX/CORS stuff on
> every pageload of wordpress B to get the session information from wordpress
> A and then refresh the page if needed ...
>
> I hoped somebody already thought about all this stuff because I don't have a
> clue in the moment. So I would be really glad if someone could share his
> thoughts about this topic (maybe this is impossible at all and that's the
> reason there is no plugin or howto available?) ...
>
> Regards,
> Malte
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From m.witt at ia-sh.de  Thu Nov 29 00:05:53 2012
From: m.witt at ia-sh.de (Malte Witt)
Date: Thu, 29 Nov 2012 01:05:53 +0100
Subject: [wp-hackers] Wordpress SSO
In-Reply-To: <CAFJ6JWHTYeTL-DGVzQonhBv+_Q2J3TW9Jgk+C4zK9v09D6wG2g@mail.gmail.com>
References: <50B6A0C1.8000407@ia-sh.de>
	<CAFJ6JWHTYeTL-DGVzQonhBv+_Q2J3TW9Jgk+C4zK9v09D6wG2g@mail.gmail.com>
Message-ID: <50B6A6E1.4050804@ia-sh.de>

Thank's for your reply. I already thought about this and wanted to use 
SimpleSAMLphp (wordpress A would be the Identity Provider in that case).

There already is a plugin for this 
http://wordpress.org/extend/plugins/simplesamlphp-authentication/ but I 
didn't had a look at it yet.

Actually - as outlined in my previous mail - I'm already stuck before 
getting that far in the login process. ;-)

Am 29.11.2012 00:52, schrieb Martin Lazarov:
> Do you have completely same users tables? If you don't you will need
> new db table which will hold connection between users.
>
> On Thu, Nov 29, 2012 at 1:39 AM, Malte Witt <m.witt at ia-sh.de> wrote:
>> Hey at all,
>> I have the following situation: There are two different wordpress installs,
>> different domains, different databases, different servers and I want to
>> establish an SSO mechanism between those two.
>>
>> All plugins I found so far that match "sso" are in fact doing shared
>> authentification and no 'real' sso at all, but I want to login to wordpress
>> A and then surf to wordpress B and still be logged in (or be automatically
>> logged in to wordpress B in that second).
>>
>> The only chance I can think of to get the session cookie from wordpress A is
>> to redirect to wordpress A, check the cookie and then redirect back to
>> wordpress B (including some handshake to safely pass the information if the
>> user is logged in), but because I don't know if there even is a session I
>> would have to do this on every pageload of wordpress B (so this can't be a
>> real solution ...). Alternatively I could do some crazy AJAX/CORS stuff on
>> every pageload of wordpress B to get the session information from wordpress
>> A and then refresh the page if needed ...
>>
>> I hoped somebody already thought about all this stuff because I don't have a
>> clue in the moment. So I would be really glad if someone could share his
>> thoughts about this topic (maybe this is impossible at all and that's the
>> reason there is no plugin or howto available?) ...
>>
>> Regards,
>> Malte
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From paolo.tresso at swergroup.com  Thu Nov 29 00:20:57 2012
From: paolo.tresso at swergroup.com (Paolo Tresso)
Date: Thu, 29 Nov 2012 01:20:57 +0100
Subject: [wp-hackers] Wordpress SSO
In-Reply-To: <50B6A6E1.4050804@ia-sh.de>
References: <50B6A0C1.8000407@ia-sh.de>
	<CAFJ6JWHTYeTL-DGVzQonhBv+_Q2J3TW9Jgk+C4zK9v09D6wG2g@mail.gmail.com>
	<50B6A6E1.4050804@ia-sh.de>
Message-ID: <F008BB84-4B89-4F32-8A0D-0B243871A365@swergroup.com>

Il giorno 29/nov/2012, alle ore 01:05, Malte Witt ha scritto:

> Thank's for your reply. I already thought about this and wanted to use SimpleSAMLphp (wordpress A would be the Identity Provider in that case).
> There already is a plugin for this http://wordpress.org/extend/plugins/simplesamlphp-authentication/ but I didn't had a look at it yet.
> Actually - as outlined in my previous mail - I'm already stuck before getting that far in the login process. ;-)

Hi, 

I don't know if this can fit your scenario, but we usually link two WordPress by OpenID, 
making WordPress A an authority provider and using that to authenticate on WordPress B..  

There's an excellent plugin out there for that:

http://wordpress.org/extend/plugins/openid/

Hope it helps!

Paolo Tresso
Lead Developer
SWERgroup

+39 340 2330437
http://swergroup.com
skype://pixline





From m.witt at ia-sh.de  Thu Nov 29 00:36:43 2012
From: m.witt at ia-sh.de (Malte Witt)
Date: Thu, 29 Nov 2012 01:36:43 +0100
Subject: [wp-hackers] Wordpress SSO
In-Reply-To: <F008BB84-4B89-4F32-8A0D-0B243871A365@swergroup.com>
References: <50B6A0C1.8000407@ia-sh.de>
	<CAFJ6JWHTYeTL-DGVzQonhBv+_Q2J3TW9Jgk+C4zK9v09D6wG2g@mail.gmail.com>
	<50B6A6E1.4050804@ia-sh.de>
	<F008BB84-4B89-4F32-8A0D-0B243871A365@swergroup.com>
Message-ID: <50B6AE1B.2020604@ia-sh.de>

That's an interesting alternative to SAML. Thank's for the link.

But as far as I understand this plugin can by default also only be used 
for shared authentification (meaning that two applications share the 
same user-database), or do you use it for 'real' SSO? (With that I mean 
that the user is automatically logged in to both applications if he logs 
in to one of them.)

Sorry, if it's somehow confusing, but I'm trying to achieve the latter. :-)

Am 29.11.2012 01:20, schrieb Paolo Tresso:
> Il giorno 29/nov/2012, alle ore 01:05, Malte Witt ha scritto:
>
>> Thank's for your reply. I already thought about this and wanted to use SimpleSAMLphp (wordpress A would be the Identity Provider in that case).
>> There already is a plugin for this http://wordpress.org/extend/plugins/simplesamlphp-authentication/ but I didn't had a look at it yet.
>> Actually - as outlined in my previous mail - I'm already stuck before getting that far in the login process. ;-)
> Hi,
>
> I don't know if this can fit your scenario, but we usually link two WordPress by OpenID,
> making WordPress A an authority provider and using that to authenticate on WordPress B..
>
> There's an excellent plugin out there for that:
>
> http://wordpress.org/extend/plugins/openid/
>
> Hope it helps!
>
> Paolo Tresso
> Lead Developer
> SWERgroup
>
> +39 340 2330437
> http://swergroup.com
> skype://pixline
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From wp-hackers at thecodecave.com  Thu Nov 29 01:39:55 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Wed, 28 Nov 2012 20:39:55 -0500
Subject: [wp-hackers] Wordpress SSO
In-Reply-To: <50B6AE1B.2020604@ia-sh.de>
References: <50B6A0C1.8000407@ia-sh.de>
	<CAFJ6JWHTYeTL-DGVzQonhBv+_Q2J3TW9Jgk+C4zK9v09D6wG2g@mail.gmail.com>
	<50B6A6E1.4050804@ia-sh.de>
	<F008BB84-4B89-4F32-8A0D-0B243871A365@swergroup.com>
	<50B6AE1B.2020604@ia-sh.de>
Message-ID: <50B6BCEB.5010907@thecodecave.com>

Yeah the Open ID probably won't provide you with that sign in once and 
access both sites feature.

SimpleSAML works and works well once you get it set up, but it can be a 
bear to do so.  It's a heavy system and there is a learning curve.  To 
save you from one headache, I recommend one thing - if you do any kind 
of load balancing, I strongly recommend you configure a shared memcache 
server for your sessions.  WordPress doesn't usually deal with sessions, 
but simple saml does.  With that information kept server side,  if you 
have a single side load balanced between several machines, you can find 
yourself suddenly logged out when the load on one machine bounces you to 
a different machine mid session.

Brian Layman
http://eHermitsInc.com

On 11/28/2012 7:36 PM, Malte Witt wrote:
> That's an interesting alternative to SAML. Thank's for the link.
>
> But as far as I understand this plugin can by default also only be 
> used for shared authentification (meaning that two applications share 
> the same user-database), or do you use it for 'real' SSO? (With that I 
> mean that the user is automatically logged in to both applications if 
> he logs in to one of them.)
>
> Sorry, if it's somehow confusing, but I'm trying to achieve the 
> latter. :-)


From lists at rotorised.com  Thu Nov 29 03:43:24 2012
From: lists at rotorised.com (Ryan McCue)
Date: Thu, 29 Nov 2012 13:43:24 +1000
Subject: [wp-hackers] Wordpress SSO
In-Reply-To: <50B6A0C1.8000407@ia-sh.de>
References: <50B6A0C1.8000407@ia-sh.de>
Message-ID: <50B6D9DC.5050401@rotorised.com>

Malte Witt wrote:
> All plugins I found so far that match "sso" are in fact doing shared
> authentification and no 'real' sso at all, but I want to login to
> wordpress A and then surf to wordpress B and still be logged in (or be
> automatically logged in to wordpress B in that second).

The question is, are these on the same domain, but different subdomains?
If they are on the same domain, then you can set various constants
relating to the cookie domain, etc. [1] [2]

[1]:
http://codex.wordpress.org/Editing_wp-config.php#Additional_Defined_Constants
[2]: http://betterwp.net/282-wordpress-constants/ (see #3)

If not, you'll have to invent your own solution, since cookies can't be
shared cross-domain. I know WordPress.com used to have a special
solution for this for their external domain sites, but I can't seem to
find that anywhere now. Basically: load in Javascript or an iframe from
the original domain which has access to those cookies, then use that to
set the cookies on the domain you're on.

-- 
Ryan McCue
<http://ryanmccue.info/>

From m.witt at ia-sh.de  Thu Nov 29 09:13:45 2012
From: m.witt at ia-sh.de (Malte Witt)
Date: Thu, 29 Nov 2012 10:13:45 +0100
Subject: [wp-hackers] Wordpress SSO
In-Reply-To: <50B6D9DC.5050401@rotorised.com>
References: <50B6A0C1.8000407@ia-sh.de> <50B6D9DC.5050401@rotorised.com>
Message-ID: <50B72749.6030307@ia-sh.de>

Different domains ... :-(

Ok, I'm so far now that I know I won't have a chance on the server-side 
and have to deliver a logged out page by default and then check somehow 
with JS and reload the page if needed, but whatever technology I had a 
look at (HTML5 postMessage, CORS+JSON, JSONP) ... they can transfer data 
from domain A to domain B but when I'm on domain A and I'm doing an 
AJAX-Call to domain B, there are no cookies included. So this also is no 
solution, or is it?

Am 29.11.2012 04:43, schrieb Ryan McCue:
> Malte Witt wrote:
>> All plugins I found so far that match "sso" are in fact doing shared
>> authentification and no 'real' sso at all, but I want to login to
>> wordpress A and then surf to wordpress B and still be logged in (or be
>> automatically logged in to wordpress B in that second).
> The question is, are these on the same domain, but different subdomains?
> If they are on the same domain, then you can set various constants
> relating to the cookie domain, etc. [1] [2]
>
> [1]:
> http://codex.wordpress.org/Editing_wp-config.php#Additional_Defined_Constants
> [2]: http://betterwp.net/282-wordpress-constants/ (see #3)
>
> If not, you'll have to invent your own solution, since cookies can't be
> shared cross-domain. I know WordPress.com used to have a special
> solution for this for their external domain sites, but I can't seem to
> find that anywhere now. Basically: load in Javascript or an iframe from
> the original domain which has access to those cookies, then use that to
> set the cookies on the domain you're on.
>


From zack at grossbart.com  Thu Nov 29 13:32:01 2012
From: zack at grossbart.com (Zack Grossbart)
Date: Thu, 29 Nov 2012 08:32:01 -0500
Subject: [wp-hackers] Plugins on WordPress.com
Message-ID: <00f601cdce35$eb500190$c1f004b0$@com>

Hello Everyone,

I'm curious about the process for adding plugins to WordPress.com.  I know
the set of plugins available to WordPress.com users is very limited, but how
do they choose them?  Is there a process for deciding to add new plugins to
WordPress.com?

Thanks,
Zack


From daryl at automattic.com  Thu Nov 29 13:43:18 2012
From: daryl at automattic.com (Daryl L. L. Houston)
Date: Thu, 29 Nov 2012 08:43:18 -0500
Subject: [wp-hackers] Plugins on WordPress.com
In-Reply-To: <00f601cdce35$eb500190$c1f004b0$@com>
References: <00f601cdce35$eb500190$c1f004b0$@com>
Message-ID: <2177355F708C45DF90507D39A94E755E@a8c.com>

Nope, you can't add plugins to WordPress.com. We do offer a bunch of widgets and other features in the form of plugins that we manage, but users can't add their own. Although we're receptive to ideas for features (see http://en.forums.wordpress.com/forum/ideas), our roadmap isn't driven by such requests. Still, it can't hurt anything to leave your feedback there.

Daryl 


On Thursday, November 29, 2012 at 8:32 AM, Zack Grossbart wrote:

> Hello Everyone,
> 
> I'm curious about the process for adding plugins to WordPress.com (http://WordPress.com). I know
> the set of plugins available to WordPress.com (http://WordPress.com) users is very limited, but how
> do they choose them? Is there a process for deciding to add new plugins to
> WordPress.com (http://WordPress.com)?
> 
> Thanks,
> Zack
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 



From zack at grossbart.com  Thu Nov 29 13:48:44 2012
From: zack at grossbart.com (Zack Grossbart)
Date: Thu, 29 Nov 2012 08:48:44 -0500
Subject: [wp-hackers] Plugins on WordPress.com
In-Reply-To: <2177355F708C45DF90507D39A94E755E@a8c.com>
References: <00f601cdce35$eb500190$c1f004b0$@com>
	<2177355F708C45DF90507D39A94E755E@a8c.com>
Message-ID: <010301cdce38$41261e40$c3725ac0$@com>

Hi Daryl,

Thank you for the quick response.  I'm curious about the process you use to
create the roadmap and select the features for WordPress.com.

Thank you,
Zack

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Daryl L. L.
Houston
Sent: Thursday, November 29, 2012 8:43 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Plugins on WordPress.com

Nope, you can't add plugins to WordPress.com. We do offer a bunch of widgets
and other features in the form of plugins that we manage, but users can't
add their own. Although we're receptive to ideas for features (see
http://en.forums.wordpress.com/forum/ideas), our roadmap isn't driven by
such requests. Still, it can't hurt anything to leave your feedback there.

Daryl 


On Thursday, November 29, 2012 at 8:32 AM, Zack Grossbart wrote:

> Hello Everyone,
> 
> I'm curious about the process for adding plugins to WordPress.com 
> (http://WordPress.com). I know the set of plugins available to 
> WordPress.com (http://WordPress.com) users is very limited, but how do 
> they choose them? Is there a process for deciding to add new plugins to
WordPress.com (http://WordPress.com)?
> 
> Thanks,
> Zack
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com 
> (mailto:wp-hackers at lists.automattic.com)
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 


_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From lukebryan at sharefaith.com  Thu Nov 29 23:59:36 2012
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Thu, 29 Nov 2012 15:59:36 -0800
Subject: [wp-hackers] Wordpress Plugin API
Message-ID: <CAFnKAk2QQ0EENUECyHEXd70A85LnS9BHFDoW+uk6LJQNdLMaew@mail.gmail.com>

Greetings,

I'm having some trouble using the api as described here:
http://dd32.id.au/projects/wordpressorg-plugin-information-api-docs/
http://wp.tutsplus.com/tutorials/creative-coding/interacting-with-wordpress-plug-in-theme-api/

I'm using:
    $browseargs = array(
        'search' => $args->search,
        'fields' => array(
            'version'=>false,
            'author'=>false,
            'preview_url'=>FALSE,
            'screenshot_url'=>FALSE,
            'screenshot_count'=>FALSE,
            'screenshots'=>FALSE,
            'rating'=>FALSE,
            'num_ratings'=>FALSE,
            'downloaded'=>FALSE,
            'sections'=>FALSE,
            'description'=>FALSE,
            'download_link'=>FALSE,
            'slug'   => TRUE         )
    );

    $request = wp_remote_post('http://api.wordpress.org/plugins/info/1.0/',
array( 'timeout' => 15, 'body' => array('action' => $action, 'request' =>
serialize((object)$browseargs))));
... and requesting it as described in the link above.

I'm trying to just get the slug for plugins, and while I've been able to
expand search to return many, many plugins, the fields parameter isn't
doing what it says it does on the documentation. It always sends back the
full name, slug, version... in a slower long response. I'm wondering, has
this parameter been renamed?

Best regards,
Luke

From wordpress at dd32.id.au  Fri Nov 30 01:50:58 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 30 Nov 2012 12:50:58 +1100
Subject: [wp-hackers] Wordpress Plugin API
In-Reply-To: <CAFnKAk2QQ0EENUECyHEXd70A85LnS9BHFDoW+uk6LJQNdLMaew@mail.gmail.com>
References: <CAFnKAk2QQ0EENUECyHEXd70A85LnS9BHFDoW+uk6LJQNdLMaew@mail.gmail.com>
Message-ID: <CAL4EHf=JAsd7JDKT21YKE9HCtiGEY9-z3Fg2oDSodbZ61cPMTA@mail.gmail.com>

The fields arguement is not designed to be used to turn all of the
fields on and off, It's a incredibly simple API thats only designed
for core's usage of it.
Only certain fields can be turned on/off by that argument, as
mentioned in the documentation links you've mentioned, although
they're somewhat out of date now as extra things have been added to
the API.

Adding 'compatibility' => false, 'short_description' => false, to the
list will also reduce the payload of the data you're requesting
significantly. I also notice you're sending a lot of fieldnames which
are not for the Plugin API (But appear to be for the Themes API) so
that's not helping either..

In short.. Yes, The API is working as expected, Remove a bunch of
those field requirements from your call and you'll get back even more
data than you are currently getting.. but there isn't an option to
just get a list of slugs.

On 30 November 2012 10:59, Luke Bryan <lukebryan at sharefaith.com> wrote:
> Greetings,
>
> I'm having some trouble using the api as described here:
> http://dd32.id.au/projects/wordpressorg-plugin-information-api-docs/
> http://wp.tutsplus.com/tutorials/creative-coding/interacting-with-wordpress-plug-in-theme-api/
>
> I'm using:
>     $browseargs = array(
>         'search' => $args->search,
>         'fields' => array(
>             'version'=>false,
>             'author'=>false,
>             'preview_url'=>FALSE,
>             'screenshot_url'=>FALSE,
>             'screenshot_count'=>FALSE,
>             'screenshots'=>FALSE,
>             'rating'=>FALSE,
>             'num_ratings'=>FALSE,
>             'downloaded'=>FALSE,
>             'sections'=>FALSE,
>             'description'=>FALSE,
>             'download_link'=>FALSE,
>             'slug'   => TRUE         )
>     );
>
>     $request = wp_remote_post('http://api.wordpress.org/plugins/info/1.0/',
> array( 'timeout' => 15, 'body' => array('action' => $action, 'request' =>
> serialize((object)$browseargs))));
> ... and requesting it as described in the link above.
>
> I'm trying to just get the slug for plugins, and while I've been able to
> expand search to return many, many plugins, the fields parameter isn't
> doing what it says it does on the documentation. It always sends back the
> full name, slug, version... in a slower long response. I'm wondering, has
> this parameter been renamed?
>
> Best regards,
> Luke
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mike at newclarity.net  Fri Nov 30 07:13:19 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 30 Nov 2012 02:13:19 -0500
Subject: [wp-hackers] Wordpress Plugin API
In-Reply-To: <CAL4EHf=JAsd7JDKT21YKE9HCtiGEY9-z3Fg2oDSodbZ61cPMTA@mail.gmail.com>
References: <CAFnKAk2QQ0EENUECyHEXd70A85LnS9BHFDoW+uk6LJQNdLMaew@mail.gmail.com>
	<CAL4EHf=JAsd7JDKT21YKE9HCtiGEY9-z3Fg2oDSodbZ61cPMTA@mail.gmail.com>
Message-ID: <C5FDC22E-6FC5-4E30-B774-3F1513A973F9@newclarity.net>

Hey Dion,

When you visit the API URL[1] in your browser is has a link for API Docs which when clicked says "If only I had written some.. Sorry! -DD32"

Since it appears you have since written some docs[2], any chance of linking those to ease the journey for future API travelers?

-Mike 
[1] http://api.wordpress.org/plugins/info/1.0/ 
[2] http://dd32.id.au/projects/wordpressorg-plugin-information-api-docs/

On Nov 29, 2012, at 8:50 PM, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:

> The fields arguement is not designed to be used to turn all of the
> fields on and off, It's a incredibly simple API thats only designed
> for core's usage of it.
> Only certain fields can be turned on/off by that argument, as
> mentioned in the documentation links you've mentioned, although
> they're somewhat out of date now as extra things have been added to
> the API.
> 
> Adding 'compatibility' => false, 'short_description' => false, to the
> list will also reduce the payload of the data you're requesting
> significantly. I also notice you're sending a lot of fieldnames which
> are not for the Plugin API (But appear to be for the Themes API) so
> that's not helping either..
> 
> In short.. Yes, The API is working as expected, Remove a bunch of
> those field requirements from your call and you'll get back even more
> data than you are currently getting.. but there isn't an option to
> just get a list of slugs.
> 
> On 30 November 2012 10:59, Luke Bryan <lukebryan at sharefaith.com> wrote:
>> Greetings,
>> 
>> I'm having some trouble using the api as described here:
>> http://dd32.id.au/projects/wordpressorg-plugin-information-api-docs/
>> http://wp.tutsplus.com/tutorials/creative-coding/interacting-with-wordpress-plug-in-theme-api/
>> 
>> I'm using:
>>    $browseargs = array(
>>        'search' => $args->search,
>>        'fields' => array(
>>            'version'=>false,
>>            'author'=>false,
>>            'preview_url'=>FALSE,
>>            'screenshot_url'=>FALSE,
>>            'screenshot_count'=>FALSE,
>>            'screenshots'=>FALSE,
>>            'rating'=>FALSE,
>>            'num_ratings'=>FALSE,
>>            'downloaded'=>FALSE,
>>            'sections'=>FALSE,
>>            'description'=>FALSE,
>>            'download_link'=>FALSE,
>>            'slug'   => TRUE         )
>>    );
>> 
>>    $request = wp_remote_post('http://api.wordpress.org/plugins/info/1.0/',
>> array( 'timeout' => 15, 'body' => array('action' => $action, 'request' =>
>> serialize((object)$browseargs))));
>> ... and requesting it as described in the link above.
>> 
>> I'm trying to just get the slug for plugins, and while I've been able to
>> expand search to return many, many plugins, the fields parameter isn't
>> doing what it says it does on the documentation. It always sends back the
>> full name, slug, version... in a slower long response. I'm wondering, has
>> this parameter been renamed?
>> 
>> Best regards,
>> Luke
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wordpress at dd32.id.au  Fri Nov 30 07:21:49 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 30 Nov 2012 18:21:49 +1100
Subject: [wp-hackers] Wordpress Plugin API
In-Reply-To: <C5FDC22E-6FC5-4E30-B774-3F1513A973F9@newclarity.net>
References: <CAFnKAk2QQ0EENUECyHEXd70A85LnS9BHFDoW+uk6LJQNdLMaew@mail.gmail.com>
	<CAL4EHf=JAsd7JDKT21YKE9HCtiGEY9-z3Fg2oDSodbZ61cPMTA@mail.gmail.com>
	<C5FDC22E-6FC5-4E30-B774-3F1513A973F9@newclarity.net>
Message-ID: <CAL4EHf=_JjND4o_8sda-8sv2yEczkZTiCcS95ivOwEN23872tw@mail.gmail.com>

When some official docs are written, if ever, then yes, until then, no.
The docs posted there are a copy-paste from a wp-hackers email reply
many many many months ago, and are since out of date.
And since the API isn't designed to be used by anything other than
Core really, there haven't been any official docs written.

On 30 November 2012 18:13, Mike Schinkel <mike at newclarity.net> wrote:
> Hey Dion,
>
> When you visit the API URL[1] in your browser is has a link for API Docs which when clicked says "If only I had written some.. Sorry! -DD32"
>
> Since it appears you have since written some docs[2], any chance of linking those to ease the journey for future API travelers?
>
> -Mike
> [1] http://api.wordpress.org/plugins/info/1.0/
> [2] http://dd32.id.au/projects/wordpressorg-plugin-information-api-docs/
>
> On Nov 29, 2012, at 8:50 PM, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
>
>> The fields arguement is not designed to be used to turn all of the
>> fields on and off, It's a incredibly simple API thats only designed
>> for core's usage of it.
>> Only certain fields can be turned on/off by that argument, as
>> mentioned in the documentation links you've mentioned, although
>> they're somewhat out of date now as extra things have been added to
>> the API.
>>
>> Adding 'compatibility' => false, 'short_description' => false, to the
>> list will also reduce the payload of the data you're requesting
>> significantly. I also notice you're sending a lot of fieldnames which
>> are not for the Plugin API (But appear to be for the Themes API) so
>> that's not helping either..
>>
>> In short.. Yes, The API is working as expected, Remove a bunch of
>> those field requirements from your call and you'll get back even more
>> data than you are currently getting.. but there isn't an option to
>> just get a list of slugs.
>>
>> On 30 November 2012 10:59, Luke Bryan <lukebryan at sharefaith.com> wrote:
>>> Greetings,
>>>
>>> I'm having some trouble using the api as described here:
>>> http://dd32.id.au/projects/wordpressorg-plugin-information-api-docs/
>>> http://wp.tutsplus.com/tutorials/creative-coding/interacting-with-wordpress-plug-in-theme-api/
>>>
>>> I'm using:
>>>    $browseargs = array(
>>>        'search' => $args->search,
>>>        'fields' => array(
>>>            'version'=>false,
>>>            'author'=>false,
>>>            'preview_url'=>FALSE,
>>>            'screenshot_url'=>FALSE,
>>>            'screenshot_count'=>FALSE,
>>>            'screenshots'=>FALSE,
>>>            'rating'=>FALSE,
>>>            'num_ratings'=>FALSE,
>>>            'downloaded'=>FALSE,
>>>            'sections'=>FALSE,
>>>            'description'=>FALSE,
>>>            'download_link'=>FALSE,
>>>            'slug'   => TRUE         )
>>>    );
>>>
>>>    $request = wp_remote_post('http://api.wordpress.org/plugins/info/1.0/',
>>> array( 'timeout' => 15, 'body' => array('action' => $action, 'request' =>
>>> serialize((object)$browseargs))));
>>> ... and requesting it as described in the link above.
>>>
>>> I'm trying to just get the slug for plugins, and while I've been able to
>>> expand search to return many, many plugins, the fields parameter isn't
>>> doing what it says it does on the documentation. It always sends back the
>>> full name, slug, version... in a slower long response. I'm wondering, has
>>> this parameter been renamed?
>>>
>>> Best regards,
>>> Luke
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp at andrewnacin.com  Fri Nov 30 07:21:41 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 30 Nov 2012 02:21:41 -0500
Subject: [wp-hackers] Wordpress Plugin API
In-Reply-To: <C5FDC22E-6FC5-4E30-B774-3F1513A973F9@newclarity.net>
References: <CAFnKAk2QQ0EENUECyHEXd70A85LnS9BHFDoW+uk6LJQNdLMaew@mail.gmail.com>
	<CAL4EHf=JAsd7JDKT21YKE9HCtiGEY9-z3Fg2oDSodbZ61cPMTA@mail.gmail.com>
	<C5FDC22E-6FC5-4E30-B774-3F1513A973F9@newclarity.net>
Message-ID: <CAP29Pvhw5NT3sMAq_Wn+R2XJ3DzE8zGHouiqNc7yiMn+bRkkBw@mail.gmail.com>

On Fri, Nov 30, 2012 at 2:13 AM, Mike Schinkel <mike at newclarity.net> wrote:

> When you visit the API URL[1] in your browser is has a link for API Docs
> which when clicked says "If only I had written some.. Sorry! -DD32"
>
> Since it appears you have since written some docs[2], any chance of
> linking those to ease the journey for future API travelers?
>

I've updated both http://api.wordpress.org/plugins/info/1.0/ and
http://api.wordpress.org/themes/info/1.0/ to link to
http://codex.wordpress.org/WordPress.org_API.

From mike at newclarity.net  Fri Nov 30 07:26:11 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 30 Nov 2012 02:26:11 -0500
Subject: [wp-hackers] Wordpress Plugin API
In-Reply-To: <CAP29Pvhw5NT3sMAq_Wn+R2XJ3DzE8zGHouiqNc7yiMn+bRkkBw@mail.gmail.com>
References: <CAFnKAk2QQ0EENUECyHEXd70A85LnS9BHFDoW+uk6LJQNdLMaew@mail.gmail.com>
	<CAL4EHf=JAsd7JDKT21YKE9HCtiGEY9-z3Fg2oDSodbZ61cPMTA@mail.gmail.com>
	<C5FDC22E-6FC5-4E30-B774-3F1513A973F9@newclarity.net>
	<CAP29Pvhw5NT3sMAq_Wn+R2XJ3DzE8zGHouiqNc7yiMn+bRkkBw@mail.gmail.com>
Message-ID: <EB2E36AA-AC1C-499E-A0D0-FAE2A61771B5@newclarity.net>

Cool, thanks on behalf of others who this may help in the future. :)

-Mike 

On Nov 30, 2012, at 2:21 AM, Andrew Nacin <wp at andrewnacin.com> wrote:

> On Fri, Nov 30, 2012 at 2:13 AM, Mike Schinkel <mike at newclarity.net> wrote:
> 
>> When you visit the API URL[1] in your browser is has a link for API Docs
>> which when clicked says "If only I had written some.. Sorry! -DD32"
>> 
>> Since it appears you have since written some docs[2], any chance of
>> linking those to ease the journey for future API travelers?
>> 
> 
> I've updated both http://api.wordpress.org/plugins/info/1.0/ and
> http://api.wordpress.org/themes/info/1.0/ to link to
> http://codex.wordpress.org/WordPress.org_API.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mc at stuffmc.com  Fri Nov 30 10:12:05 2012
From: mc at stuffmc.com (StuFF mc)
Date: Fri, 30 Nov 2012 11:12:05 +0100
Subject: [wp-hackers] Which version runs on Wordpress.com?
Message-ID: <CAHvd4xRTMVeA4poo_kf+zrQBe8=9Feh1TAc3y8fKx77WY5AOOQ@mail.gmail.com>

Hi,

I'm wondering. Is it always a beta running on WordPress.com? Mine runs
a 3.5 Beta and I wonder if this got rolled to all the users or if
someone "keeps" his old version? How does that work?

Any idea?

From xoodrew at gmail.com  Fri Nov 30 21:22:18 2012
From: xoodrew at gmail.com (Drew)
Date: Fri, 30 Nov 2012 14:22:18 -0700
Subject: [wp-hackers] gzinflate Warning on transient expiration
Message-ID: <CAEJabWhp_Q=7=KNsaTfAqdVkSuT7pFWwGnj3isTACvdMQCu6rA@mail.gmail.com>

Hey guys,

I'm running into a frustrating issue where I'm getting a gzinflate Warning
on the first page load after transient(s) holding remote GETs have expired.

This is the error:

WARNING: wp-includes/class-http.php:1654 - gzinflate()
[function.gzinflate]: data error

I'm working with a method that pulls data via wp_remote_get() from various
sites based on the value of a post meta key. When the transient(s) have
expired I can see the transient has been set again, but it throws the
warning on the first page load. Refreshing the page clears the warning and
displays the value(s) of the transients. This happens every time the
transients expire.

So two questions:
1) Should I not be caching inside the method and if not, what are my
alternatives?
2) If the caching doesn't seem to be to blame, how do I overcome the
warning when transients are reset?

This is the block I'm concerned with:
$cached = get_transient( $meta->_stats_type . '-count' );
if ( false == $cached ) {
    $count = number_format( stats_count( $meta->_stats_type ), 0, '', ',' );
    set_transient( $meta->_stats_type . '-count', $count, 3600 );
}
return $cached;

Also, if it makes a difference, I'm working on localhost.

Drew
--

From wordpress at dd32.id.au  Fri Nov 30 21:45:21 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sat, 1 Dec 2012 08:45:21 +1100
Subject: [wp-hackers] gzinflate Warning on transient expiration
In-Reply-To: <CAEJabWhp_Q=7=KNsaTfAqdVkSuT7pFWwGnj3isTACvdMQCu6rA@mail.gmail.com>
References: <CAEJabWhp_Q=7=KNsaTfAqdVkSuT7pFWwGnj3isTACvdMQCu6rA@mail.gmail.com>
Message-ID: <CAL4EHf=DK7eFFKLMrD5Z9TY2aAkBvLho79wmFPF1qJ3XZaHF+g@mail.gmail.com>

Hi Drew,

The gzinflate error isn't coming from the Transient API, It's coming
from the WP_HTTP API, the one retrieving the remote document.

The reason you've started seeing it now, may be because you've
upgraded a PHP version, or the remote server has changed their
environment - I'm not sure, but I've started seeing the warning myself
a lot in the last few days and haven't had a chance to track down what
changed.

So it's not a code error on your behalf at all.

The cause comes from WP_HTTP_Encoding::decompress():
http://core.trac.wordpress.org/browser/trunk/wp-includes/class-http.php#L1651

It attempts to decompress the server deflate response with PHP's own
gzinflate() first, unfortunately, this function doesn't actually
decompress data correctly from some servers, which is why we've got a
WP_HTTP_Encoding::compatible_gzinflate() which tries to alter the
compressed data into a state that gzinflate() can actually handle.

gzinflate() currently has error suppression enabled, because when it
can't decompress data, it gives off that PHP Warning, of course the
Debug bar ignores that..

What can you do to avoid the Warning? Not much really, unless you feel
like hacking the core code..
Changing the order of operations in WP_HTTP_Encoding::decompress() to
first try the compatible gzinflate() may result in the warning going
away for that site, however, at the expense of the warning when you
attempt to retrieve a document from a different host which compresses
their data differently.

Moral of the story?  Although servers day "Oh yes, my content is Gzip
encoded!" PHP's decompression methods are lame and every server sends
their data in 1 of 3 different ways..

I hope this helps :)

D


On 1 December 2012 08:22, Drew <xoodrew at gmail.com> wrote:
> Hey guys,
>
> I'm running into a frustrating issue where I'm getting a gzinflate Warning
> on the first page load after transient(s) holding remote GETs have expired.
>
> This is the error:
>
> WARNING: wp-includes/class-http.php:1654 - gzinflate()
> [function.gzinflate]: data error
>
> I'm working with a method that pulls data via wp_remote_get() from various
> sites based on the value of a post meta key. When the transient(s) have
> expired I can see the transient has been set again, but it throws the
> warning on the first page load. Refreshing the page clears the warning and
> displays the value(s) of the transients. This happens every time the
> transients expire.
>
> So two questions:
> 1) Should I not be caching inside the method and if not, what are my
> alternatives?
> 2) If the caching doesn't seem to be to blame, how do I overcome the
> warning when transients are reset?
>
> This is the block I'm concerned with:
> $cached = get_transient( $meta->_stats_type . '-count' );
> if ( false == $cached ) {
>     $count = number_format( stats_count( $meta->_stats_type ), 0, '', ',' );
>     set_transient( $meta->_stats_type . '-count', $count, 3600 );
> }
> return $cached;
>
> Also, if it makes a difference, I'm working on localhost.
>
> Drew
> --
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

