From lists at frozenpc.net  Thu Jan  1 05:41:00 2009
From: lists at frozenpc.net (Aaron Axelsen)
Date: Thu Jan  1 05:41:18 2009
Subject: [wp-hackers] Retain Meta Data on Status Change
Message-ID: <495C576C.1080507@frozenpc.net>

Is there an easy way for a post to retain the meta data on status
change?  I'm trying to have my plugin retain a meta tag when it is being
changed from future to published - or published to draft.  The meta data
seems to get removed on status change.

Any ideas?

-- 
Aaron Axelsen
lists@frozenpc.net

Great hosting, low prices.  Modevia Web Services LLC -- http://www.modevia.com

From dino at duechiacchiere.it  Thu Jan  1 07:37:36 2009
From: dino at duechiacchiere.it (Dino Termini)
Date: Thu Jan  1 07:37:53 2009
Subject: [wp-hackers] Retain Meta Data on Status Change
In-Reply-To: <495C576C.1080507@frozenpc.net>
References: <495C576C.1080507@frozenpc.net>
Message-ID: <d58b9c590812312337m59a91472nf20aaeae9d77f0c5@mail.gmail.com>

Gee, man! Enjoy the new year :) Happy 2009 to you all... and thank you for
Wordpress!

On Thu, Jan 1, 2009 at 12:41 AM, Aaron Axelsen <lists@frozenpc.net> wrote:

> Is there an easy way for a post to retain the meta data on status
> change?  I'm trying to haver new yea my plugin retain a meta tag when it is
> being
> changed from future to published - or published to draft.  The meta data
> seems to get removed on status change.
>
> Any ideas?
>
> --
> Aaron Axelsen
> lists@frozenpc.net
>
> Great hosting, low prices.  Modevia Web Services LLC --
> http://www.modevia.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From dangayle at gmail.com  Thu Jan  1 07:41:35 2009
From: dangayle at gmail.com (Dan Gayle)
Date: Thu Jan  1 07:41:52 2009
Subject: [wp-hackers] Running a script
Message-ID: <FE25A972-2A78-4E70-9473-BB425DAF688E@gmail.com>

I know this may seem trivial to some, but I have a php script that I  
need to have run every time some accesses my blog. It's a script that  
updates info from an XML feed, and I could set it up as a cron job.  
But since the feed works best if it is pulling data real time, I want  
to attach it to Wordpress so that whenever WP is accessed, the script  
runs.

Can someone point me in the right direction? Thanks.
From viper at viper007bond.com  Thu Jan  1 08:22:02 2009
From: viper at viper007bond.com (Viper007Bond)
Date: Thu Jan  1 08:22:14 2009
Subject: [wp-hackers] Running a script
In-Reply-To: <FE25A972-2A78-4E70-9473-BB425DAF688E@gmail.com>
References: <FE25A972-2A78-4E70-9473-BB425DAF688E@gmail.com>
Message-ID: <8f93a7390901010022j2a44647bxa90e1ab23749dee3@mail.gmail.com>

http://codex.wordpress.org/Plugin_API

On Wed, Dec 31, 2008 at 11:41 PM, Dan Gayle <dangayle@gmail.com> wrote:

> I know this may seem trivial to some, but I have a php script that I need
> to have run every time some accesses my blog. It's a script that updates
> info from an XML feed, and I could set it up as a cron job. But since the
> feed works best if it is pulling data real time, I want to attach it to
> Wordpress so that whenever WP is accessed, the script runs.
>
> Can someone point me in the right direction? Thanks.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/ | http://www.finalgear.com/
From jayarjo at gmail.com  Thu Jan  1 09:42:20 2009
From: jayarjo at gmail.com (dave jaggy)
Date: Thu Jan  1 09:43:11 2009
Subject: [wp-hackers] same taxonomy on two different object types?..
Message-ID: <9aa12a490901010142j7a83956bmf53d514664242716@mail.gmail.com>

I'm trying to implement custom taxonomies with custom object types. By
now I have two object types and nearly eight different taxonomies -
tree for one object type and five for another. The problem is that one
taxonomy  is common for both object types. But it stills registers
itself only for the latter one. I wonder if  there any way to bind a
taxonomy to two different objects?
From andre.renaut at gmail.com  Thu Jan  1 12:15:39 2009
From: andre.renaut at gmail.com (=?UTF-8?Q?andr=C3=A9_renaut?=)
Date: Thu Jan  1 12:15:50 2009
Subject: [wp-hackers] same taxonomy on two different object types?
Message-ID: <8810a71a0901010415l72fa9d50k4d9f7ac57beb3db0@mail.gmail.com>

I am afraid you can't

for a plugin development, i made my own taxonomy (based on wp ones) and had
to face strange behavior when slug had the same value for the same term in
different taxonomies.

i hope that in a future release (see http://codex.wordpress.org/Version_2.8),
MPTT <http://codex.wordpress.org/index.php?title=MPTT&action=edit> for
hierarchies will be implemented with a true Taxonomy API in an Object
Oriented way.
From jayarjo at gmail.com  Thu Jan  1 12:35:38 2009
From: jayarjo at gmail.com (dave jaggy)
Date: Thu Jan  1 12:35:50 2009
Subject: [wp-hackers] same taxonomy on two different object types?
In-Reply-To: <8810a71a0901010415l72fa9d50k4d9f7ac57beb3db0@mail.gmail.com>
References: <8810a71a0901010415l72fa9d50k4d9f7ac57beb3db0@mail.gmail.com>
Message-ID: <9aa12a490901010435r71063864oce9cce4adec35a87@mail.gmail.com>

Hmm... they were not differentiated one from another? So there is a
potential bug in my app... damn. Are you planning to implement it
yourself?

What's the point of binding taxonomy to object type anyway? Are there
any benefits or restrictions?

On Thu, Jan 1, 2009 at 4:15 PM, andr? renaut <andre.renaut@gmail.com> wrote:
> I am afraid you can't
>
> for a plugin development, i made my own taxonomy (based on wp ones) and had
> to face strange behavior when slug had the same value for the same term in
> different taxonomies.
>
> i hope that in a future release (see http://codex.wordpress.org/Version_2.8),
> MPTT <http://codex.wordpress.org/index.php?title=MPTT&action=edit> for
> hierarchies will be implemented with a true Taxonomy API in an Object
> Oriented way.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From scribu at gmail.com  Thu Jan  1 12:37:07 2009
From: scribu at gmail.com (scribu)
Date: Thu Jan  1 12:37:18 2009
Subject: [wp-hackers] Running a script
In-Reply-To: <8f93a7390901010022j2a44647bxa90e1ab23749dee3@mail.gmail.com>
References: <FE25A972-2A78-4E70-9473-BB425DAF688E@gmail.com>
	<8f93a7390901010022j2a44647bxa90e1ab23749dee3@mail.gmail.com>
Message-ID: <349fe48b0901010437h3dd31e9i842d17a6ad55e652@mail.gmail.com>

Also take a look at wp_cron. (Can't seem to find it on the Codex).

On Thu, Jan 1, 2009 at 10:22 AM, Viper007Bond <viper@viper007bond.com>wrote:

> http://codex.wordpress.org/Plugin_API
>

-- 
http://scribu.net
From wordpress at dd32.id.au  Thu Jan  1 13:36:54 2009
From: wordpress at dd32.id.au (DD32)
Date: Thu Jan  1 13:37:08 2009
Subject: [wp-hackers] same taxonomy on two different object types?
In-Reply-To: <9aa12a490901010435r71063864oce9cce4adec35a87@mail.gmail.com>
References: <8810a71a0901010415l72fa9d50k4d9f7ac57beb3db0@mail.gmail.com>
	<9aa12a490901010435r71063864oce9cce4adec35a87@mail.gmail.com>
Message-ID: <45055a190901010536t2ef0a5a0l4c9534496c358f39@mail.gmail.com>

You can assign any object ID to a term in a taxonomy, Completely ignoring
the object type, So yes, You can assign multiple object types to

However, The API functions may complain if you're using something like
get_attachments_in_taxonomy() or get_posts_in_term() or something.. But if
you're using get_objects_in_term() things should work fine from what i've
seen. (Those function names are made up)


Also, @andr?: Having 2 terms of identical slugs in different taxonomies is a
different kettle of fish, Its nothing about having both a post and a page
attached to the same term in a taxonomy
2009/1/1 dave jaggy <jayarjo@gmail.com>

> Hmm... they were not differentiated one from another? So there is a
> potential bug in my app... damn. Are you planning to implement it
> yourself?
>
> What's the point of binding taxonomy to object type anyway? Are there
> any benefits or restrictions?
>
> On Thu, Jan 1, 2009 at 4:15 PM, andr? renaut <andre.renaut@gmail.com>
> wrote:
> > I am afraid you can't
> >
> > for a plugin development, i made my own taxonomy (based on wp ones) and
> had
> > to face strange behavior when slug had the same value for the same term
> in
> > different taxonomies.
> >
> > i hope that in a future release (see
> http://codex.wordpress.org/Version_2.8),
> > MPTT <http://codex.wordpress.org/index.php?title=MPTT&action=edit> for
> > hierarchies will be implemented with a true Taxonomy API in an Object
> > Oriented way.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at dd32.id.au  Thu Jan  1 13:37:51 2009
From: wordpress at dd32.id.au (DD32)
Date: Thu Jan  1 13:38:04 2009
Subject: [wp-hackers] same taxonomy on two different object types?
In-Reply-To: <8810a71a0901010415l72fa9d50k4d9f7ac57beb3db0@mail.gmail.com>
References: <8810a71a0901010415l72fa9d50k4d9f7ac57beb3db0@mail.gmail.com>
Message-ID: <45055a190901010537ud6585d3q2930ef6bd8d5940a@mail.gmail.com>

WTF is this MPTT that you keep linking to? I've seen it mentioned with
regard to 2.8 and leading to a non-exitant wiki page enough times now..

2009/1/1 andr? renaut <andre.renaut@gmail.com>

> I am afraid you can't
>
> for a plugin development, i made my own taxonomy (based on wp ones) and had
> to face strange behavior when slug had the same value for the same term in
> different taxonomies.
>
> i hope that in a future release (see
> http://codex.wordpress.org/Version_2.8),
> MPTT <http://codex.wordpress.org/index.php?title=MPTT&action=edit> for
> hierarchies will be implemented with a true Taxonomy API in an Object
> Oriented way.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From peter.westwood at ftwr.co.uk  Thu Jan  1 16:13:32 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Thu Jan  1 16:13:52 2009
Subject: [wp-hackers] Retain Meta Data on Status Change
In-Reply-To: <495C576C.1080507@frozenpc.net>
References: <495C576C.1080507@frozenpc.net>
Message-ID: <D71B6D45-9742-44A6-8C26-78D8BE2B8429@ftwr.co.uk>


On 1 Jan 2009, at 05:41, Aaron Axelsen wrote:

> Is there an easy way for a post to retain the meta data on status
> change?  I'm trying to have my plugin retain a meta tag when it is  
> being
> changed from future to published - or published to draft.  The meta  
> data
> seems to get removed on status change.
>

Are you ending up with the meta data associated with the revision  
rather than the main post?

westi
-- 
Peter Westwood
From lists at frozenpc.net  Thu Jan  1 17:39:00 2009
From: lists at frozenpc.net (Aaron Axelsen)
Date: Thu Jan  1 17:38:43 2009
Subject: [wp-hackers] Retain Meta Data on Status Change
In-Reply-To: <D71B6D45-9742-44A6-8C26-78D8BE2B8429@ftwr.co.uk>
References: <495C576C.1080507@frozenpc.net>
	<D71B6D45-9742-44A6-8C26-78D8BE2B8429@ftwr.co.uk>
Message-ID: <495CFFB4.1050605@frozenpc.net>

I'm pretty sure that is whats going on - I have not confirmed it yet
though.  Any thoughts?

Peter Westwood wrote:
>
> On 1 Jan 2009, at 05:41, Aaron Axelsen wrote:
>
>> Is there an easy way for a post to retain the meta data on status
>> change?  I'm trying to have my plugin retain a meta tag when it is being
>> changed from future to published - or published to draft.  The meta data
>> seems to get removed on status change.
>>
>
> Are you ending up with the meta data associated with the revision
> rather than the main post?
>
> westi

-- 
Aaron Axelsen
lists@frozenpc.net

Great hosting, low prices.  Modevia Web Services LLC -- http://www.modevia.com

From daiv at daivmowbray.com  Thu Jan  1 18:21:57 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Thu Jan  1 18:22:11 2009
Subject: [wp-hackers] wp_list_categories()
In-Reply-To: <b4dd281c0812311545i1ddf4c7etce417f1eab7cbc81@mail.gmail.com>
References: <b4dd281c0812271726w718bb87bgefd17389f6397e6d@mail.gmail.com>
	<45055a190812271742x1a4f9b0dnaf66a89a47f9c900@mail.gmail.com>
	<b4dd281c0812272217r78df4968jdd854e1a370ae032@mail.gmail.com>
	<47276776-0D88-4B85-B541-DB4A810B742D@daivmowbray.com>
	<74a8f8d80812301806w2e8257dbu96598f93a36e2ef3@mail.gmail.com>
	<FDBDF7D5-632F-4AD3-A5A1-4EA3AEBDEB38@daivmowbray.com>
	<6dbcd2670812311139p21c0e641kac1f0344be7de450@mail.gmail.com>
	<b4dd281c0812311441v33d22cat286c33c06ad42715@mail.gmail.com>
	<6dbcd2670812311457m2b10f3eaud77835d7435b920a@mail.gmail.com>
	<b4dd281c0812311545i1ddf4c7etce417f1eab7cbc81@mail.gmail.com>
Message-ID: <A2BF8974-7BFD-4470-B495-5FF7894EBD4E@daivmowbray.com>


On Jan 1, 2009, at 12:45 AM, Mike Schinkel wrote:

> That said, if Daiv Mowbray will post an example similar to the  
> example I
> posted of what he wants his markup to look like down to, say, the  
> 4th level
> I'll write the recursive login for him. Just not tonight as I'm  
> leaving for
> an NYE party soon. :-)

Hey Mike, hope the party was great!
We had a family party here at home.
Lots of fun with the kids.

Re your offer...I'd really appreciate a hand with this, been going  
around in circles
for a couple of weeks, If you're willing and able,  I've added bellow  
the relevant functions.
As for what I'm trying to do...
I have an array of categories, and an array of posts .

The desired result down to the 4th level is ;
<dl>
     <dt class="dtL1">Cat level1</dt>
     <dd class="ddL1">
         <dl>
         <dt class="dtL2">Cat level2</dt>
         <dd class="ddL2">
             <dl>
             <dt class="dtL3">Cat level3</dt>
             <dd class="ddL3">
                 <dl>
                 <dt class="dtL4">Cat level4</dt>
                 <dd class="ddL4"><span>post level4</span>
                 </dd>
                 </dl>
             <span>post level3</span>
             </dd>
             <dt class="dtL3">Cat level3-B</dt>
             <dd class="ddL3"><span>post level3-B</span>
             </dd>
             </dl>
         <span>post level2</span>
         </dd>
         </dl>
     <span>post level1</span>
     </dd>
</dl>


Here are the functions, I think I'm doing pretty well so far for a non  
phper.

function getDepth( array &$items, $node,  $depth = 0)
{
		if ($node->parent == 0) {
			// Root node, return current depth
			return $depth;
		} else {
			// Search for matching parent node
			$parent = array_filter(
				$items,
				create_function(
					'$item',
					'return ($item->term_id == ' . $node->parent . ');'
				)
			);
			$parent = array_pop($parent);
			return getDepth($items, $parent, ++$depth);
		}
}
function make_def_list($categories, $posts, $options ) {
		global $showPostCount, $linkToCat, $catfeed, $showPosts ;	
		$parents =array();

		echo "\n<div id='ssMenuHolder'><dl id='ssMenuList'>\n";
	

	foreach( $categories as $cat ) {
			$my_depth = (getDepth( $categories, $cat) +1);
			$cat->depth = $my_depth;
		
			array_push ($parents , ($cat->parent) );
	if ($cat->depth == 1) // equals level 0 , Start top level
     {
			$rssLink=add_feedlink($catfeed,$cat);
			$sub_cat_post_count=0;
			$sub_cat_count=0;
			
			list ($sub_cat_links,$sub_cat_count,$sub_cat_post_count, 
$sub_cat_posts)=
			get_ssmsub_cat($cat, $categories, $parents, $posts, $sub_cat_count,  
$sub_cat_post_count, $number);

			$theCount=$cat->count;//$cat->count is num of posts
			
			cat_bar($cat, $showPostCount, $theCount, $rssLink);
			
         	echo( "\n\t<dd class='showme_".$my_depth." ".$cat->slug." '> 
\n" );
			
		if ($sub_cat_count > 0)
			{ // this top level cat has sub cats
				echo "\n\t<dl>\n".$sub_cat_links."\t\n</dl>\n ";
			}
		
		// Now print out the posts
		if( ! empty($posts)  || ($showPosts=='yes'))
				
			add_posts($posts, $cat, $sub_cat_posts);
	
		echo "\t</dd><!-- ending first level category -->\n";
		
	        }
       } // end if theCount>0

       echo "\n</dl></div>\n";
  }
function get_ssmsub_cat($cat, $categories, $parents, $posts,  
$sub_cat_count, $sub_cat_post_count, $number) {
		
		global $showPostCount, $linkToCat, $catfeed, $showPosts ;		
		$sub_cat_posts=array();		
		$link2 = '';
		
	  if (in_array($cat->term_id, $parents)) {
		
		foreach ($categories as $cat2) {

			$sub_cat_link2=''; // clear info from sub_cat_link2

			if ($cat->term_id == $cat2->parent)
			{
				// check to see if there are more subcategories under this one
				$sub_cat_post_count=$sub_cat_post_count+$cat2->count;

					if (!in_array($cat2->term_id, $parents)) {

						$sub_cat_count = 0;
						
						$sub_cat_links = cat_bar($cat2, $showPostCount, $theCount,  
$rssLink);
							
					 } else {			
					  list ($sub_cat_link2, $sub_cat_count,$sub_cat_post_count, 
$sub_cat_posts)=
							get_ssmsub_cat($cat2, $categories, $parents, $posts,  
$sub_cat_count, $sub_cat_post_count, $number);
					
						$sub_cat_count=1;					
						$sub_cat_links = cat_bar($cat2, $showPostCount, $theCount,  
$rssLink);
					}
			}
			$sub_cat_links.="\n\t<dd class='showme_".$my_depth."' >\n";
			
			if ($showPosts=='yes')
			{
				add_posts ($posts, $cat2, $sub_cat_posts);

			}

		$sub_cat_links.= "</dd><!-- ending subcategory dd -->\n";
	}
   }
   return array($sub_cat_links,$sub_cat_count,$sub_cat_post_count, 
$sub_cat_posts);
}
function cat_bar( $cat, $showPostCount, $theCount, $rssLink)	{
		global $showPostCount, $linkToCat, $catfeed, $showPosts ;	
		
		echo "\n\t<dt class='ssmToggleBar ".$cat->slug."'><span  
class='show_".$cat->depth." subsym'>&nbsp;</span>";
				
		$catbarlink = "\n\t\t<span class='catlink'><a  
href='".get_category_link($cat->term_id)."' class='tool' title='".  
sprintf(__("View all entries filed under %s"), wp_specialchars($cat- 
 >name))."'";
								
			if ( !empty($cat->description) )
			{
				$catbarlink .= 'rel="' .  
wp_specialchars(apply_filters('description',$cat->description,$cat)) .  
'"';
			}
		
		$catbarlink .= '>'.apply_filters('list_cats', $cat->name, $cat).'</ 
a></span>';
						
		if( $showPostCount=='yes')
			{
				$catbarlink .= " (" . $theCount.")".$rssLink."\n\t</dt><!--this is  
catbar with post count -->";
			
			} else {
				
				$catbarlink .= $rssLink."\n\t</dt><!--this is catbar no post count  
-->";
			}
		echo $catbarlink ;		
	
}
function add_posts ($posts, $cat, $sub_cat_posts) {

		foreach ($posts as $post) {
							
			if ($post->term_id == $cat->term_id) {				

				echo "\n\t<span class='ssMenuPost'>\n\t<a href='".
					get_permalink($post->id)."'>".strip_tags($post->post_title) . "</ 
a></span>\n";
			}
			if (!in_array($post->id, $sub_cat_posts)) {
				array_push($sub_cat_posts, $post->id);
			}
		}
}
----------
Daiv Mowbray
daiv@daivmowbray.com
----------


From a.haakmat at chello.nl  Thu Jan  1 23:07:57 2009
From: a.haakmat at chello.nl (Pascal Haakmat)
Date: Thu Jan  1 23:08:15 2009
Subject: [wp-hackers] Re: [PATCH] New feature: 'Hidden' categories
In-Reply-To: <20081231120005.576F56C24@comox.textdrive.com>
References: <20081231120005.576F56C24@comox.textdrive.com>
Message-ID: <20090101230757.GA29147@awacs.dhs.org>

31/12/08 12:00, Jeremy Visser <jeremy.visser@gmail.com> wrote:

> I can see that your post to the list contains the paper clip icon
> suggesting you attached the patch on the original e-mail, but the
> attachment was scrubbed when the mailing list processed it.
> 
> Probably a good idea to <http://wordpress.pastebin.com/> it instead
> (select the 'Forever' option).

Hi Jeremy

Thanks for mentioning that! I have placed the patch in the pastebin:

http://wordpress.pastebin.com/f7295062b

There is a brief description up at my blog:

http://awacs.dhs.org/2008/12/hiding-posts-in-wordpress

Have a fine 2009!

Pascal.
From mikeschinkel at gmail.com  Thu Jan  1 23:21:32 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Thu Jan  1 23:21:43 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
Message-ID: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>

Hi All (especially DD32):

Happy New Year.

I need help understanding how to call the API on WordPress.org.

 What am I trying to do?  I love the new plugin install option found in
v2.7's admin console but I find the plugin search results are not very good
so I'm working on a plugin that will use Google Search results to order the
search results.  I've got it all working except for the fact that the search
results returned by requesting results from the API on WordPress.org doing
even include some of the top search results from Google using the same term.


I'm using the following Google search for the keyword "Category" (i.e. if
I'm looking for plugins related to categories.) Note how I'm search
for "*WordPress
Category Plug*", limiting to just http://wordpress.org/extend/plugins/,
omitting http://wordpress.org/extend/plugins/tags/ and requesting 100
results:

   -
   http://www.google.com/search?q=wordpress+category+plugins+site:http://wordpress.org/extend/plugins/+-site:http://wordpress.org/extend/plugins/tags/&num=100

The "equivalent" search on WordPress.org is here:

   - http://wordpress.org/extend/plugins/search.php?q=category

 For example, the Top 10 results on Google are:

   1. Category Page
   2. Category Cloud Widget
   3. Category Icons
   4. Front Page Excluded Categories
   5. Category Posts Widget
   6. My Category Order
   7. Category Order
   8. Advanced Category Excluder
   9. Collapsing Categories
   10. Enhanced Categories

 And the Top 10 results on WordPress.org (which appear to be the same as
returned by the API are):

   1. Simple Tags
   2. WP-Cumulus
   3. Search Everything
   4. Event Calendar 3
   5. WP Security Scan
   6. Admin Management Xtended
   7. Sidebar Widgets
   8. DMSGuestbook
   9. Wordpress Download Monitor
   10. Yet Another Related Posts Plugin

 Hopefully it is not a stretch for me to assert that the Google search
results are far more applicable than the WordPress.org search results?

What my code currently does is grab the Google search results and correlate
them to the WordPress.org API results which are ultimately returned from the
*plugins_api()* function found in */wp-admin/includes/plugin-install.php*.
The API call ultimately looks like this:

$request = wp_remote_post('http://api.wordpress.org/plugins/info/1.0/',
                          array( 'body' => array('action' => $action,
'request' => serialize($args))) );

I correlate the two result sets because the WordPress.org API results have
the metadata needed for the 2.7 admin console plugin search results such as
rating and version and Google search results has the desired order.  But as
stated I've found that many of the top search results from Google don't even
show up in WordPress.org's search results.  A serious bummer. :-(

So what I'm hoping is to find an API function that would let me in a single
POST send a list of plugin slugs and have it return me the same array of
plugin info and metadata for those identified plugins that is currently
being returned by the aforementioned line from plugins_api().  I know the
link to the API Docs at http://api.wordpress.org/plugins/info/1.0/ says "*If
only I had written some...Sorry -DD32*" but I'm hoping we can start
documenting here on the list? :-)  Minimally if someone could pastebin the
code for the API then I could figure it out myself.

Thanks in advance.

 -Mike Schinkel
http://mikeschinkel.com
From wordpress at dd32.id.au  Fri Jan  2 00:18:29 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan  2 00:22:46 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
Message-ID: <45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>

Happy new year to you too :)

Alright, Lets see now, First things that spring to my mind:
 * I was going to do the *exact* same thing as you are doing now, But i
quickly stoped, for 1 reason, Google doesnt like Screen scrapers, Google
block you off after 2-3 similar repeditive searches, do it enough times
(like the plugin search) and you'll get blocked very quickly, Google's good
at detecting this.

 * So, Lets use one of the available Google API's! ...Then you realise the
only ones available only return the first 10 results with no further
listing.. and that plugins may appear multiple times in that listing..
(Maybe it was 50... but eitherway, it really reduced the number of viable
results)

Also, mdawaffe was looking into fixing up the .org searching using a proper
search engine functionality (Currently bbPress's searching just doesnt cut
it), I'm not sure if its been released yet, But i believe its in the works.

So for the time being, I'd advise you to not waste your time on a Google
search option, Yahoo might be possible, They actually have API's they like
you using.. and since .org will hopefully get a better search functionality
in the near future, It might not be worth your time (& the extra requests
which would need to happen for it)

Ok, Now onto the actual API, Theres no docs available, but there'll be
something within the month hopefully, I've been talking to someone who's
going to document it for himself, and release it, Its not that complex
really at all

However, Since its not that complex, There isnt a function to send a list of
slugs and get a list of details back, Only a function to return those
details for a single plugin -- Mainly because there was no need for that
kind of functionality in the requirements at the time.. :)

Some basic documentation:
*Actions:*
query_plugins
plugin_information
hot_tags

*query_plugins*

Accepts an object with a property of either:
a: *browse* - A bbPress View to "browse", eg, "popular" =
http://wordpress.org/extend/plugins/browse/popular/
b: *search* - The term to search for
c: *tag* - Browse by a tag
d: *author* - Browse by an author (Note: .org has a few plugins to extend
the author search to include contributors/etc)

Other properties which the object can have:
*page* - the page of the results (duh..)
*per_page* - the number of results per page
*fields* - This is a bit.. odd.. an array of which fields to return, the API
has defaults for requests, but it can be overridden from the client, send an
array with the field as the key, and true|false as the value to return or
not, The fields are: *'description', 'sections', 'tested' ,'requires',
'rating', 'downloaded', 'downloadlink', 'last_updated' , 'homepage', 'tags'*

*return array of objects:*
An array of the same object that *plugin_information* returns

*plugin_information*
Takes an object with the property:
*slug* - The slug of the plugin to return the info for
*fields* - once again, Optional, Same deal as in the previous action, just
its got different defautls (ie. this one will return all the sections of the
readme, whilst the previous will only return the short description)

*return object:*
*name* - The plugins name*
*
*slug* - the plugins slug
*version* - The latest version
*author* - The Author of the plugin - If a URL is available for the author,
This will be a link
The following fields are optional, And are returned based on the *fields*param
*requires* - The required WordPress version
*tested* - The highest tested compatible WordPress version
*rating* - returns the % rating (ie, 10%, 100%) as a number.  (This is
displayed on .org as a 1-5 scale)
  *num_ratings* - If *ratings* is requsted, this will be returned as well,
Its the number of people that have rated the plugin
*downloads* - the number of times the plugin has been downloaded
*last_updated* - the date that the plugin was last updated, Excludes the
time
*homepage* - The URL of the plugin
*description* - The short description of the plugin(s)
*sections* - An array of readme sections, ie. array( 'faq' => 'FAQ... blah
blah my plugin is great.. blah blah', 'installing' => 'fgfg.... If no readme
sections are found, It returns  array('description' => (*description field
here from above)* )
*downloadlink* - The Download Link for the plugin (Theres a bug in this at
present, Any version with a space in the URL returns the wrong URL:
http://trac.wordpress.org/ticket/8610
*tags* - an array of array( 'tag_slug' => 'Tag Name, 'slug2' => 'Pretty
Butterflies')*

*
*
*
*hot_tags*
Takes an object of:
*number* - The number of tags to return, Defaults to 100

*return array of objects: *(key will be tag slug)
*name* - The tags name
*slug* - The tags slug
*count* - The number of plugins

Final note, The API may also return an error object in the case of an error,
It'll be an object with a single property:
*error* - A Error string, ie. "Slug not provided" or "action not
implemented"


2009/1/2 Mike Schinkel <mikeschinkel@gmail.com>

> Hi All (especially DD32):
>
> Happy New Year.
>
> I need help understanding how to call the API on WordPress.org.
>
>  What am I trying to do?  I love the new plugin install option found in
> v2.7's admin console but I find the plugin search results are not very good
> so I'm working on a plugin that will use Google Search results to order the
> search results.  I've got it all working except for the fact that the
> search
> results returned by requesting results from the API on WordPress.org doing
> even include some of the top search results from Google using the same
> term.
>
>
> I'm using the following Google search for the keyword "Category" (i.e. if
> I'm looking for plugins related to categories.) Note how I'm search
> for "*WordPress
> Category Plug*", limiting to just http://wordpress.org/extend/plugins/,
> omitting http://wordpress.org/extend/plugins/tags/ and requesting 100
> results:
>
>   -
>
> http://www.google.com/search?q=wordpress+category+plugins+site:http://wordpress.org/extend/plugins/+-site:http://wordpress.org/extend/plugins/tags/&num=100
>
> The "equivalent" search on WordPress.org is here:
>
>   - http://wordpress.org/extend/plugins/search.php?q=category
>
>  For example, the Top 10 results on Google are:
>
>   1. Category Page
>   2. Category Cloud Widget
>   3. Category Icons
>   4. Front Page Excluded Categories
>   5. Category Posts Widget
>   6. My Category Order
>   7. Category Order
>   8. Advanced Category Excluder
>   9. Collapsing Categories
>   10. Enhanced Categories
>
>  And the Top 10 results on WordPress.org (which appear to be the same as
> returned by the API are):
>
>   1. Simple Tags
>   2. WP-Cumulus
>   3. Search Everything
>   4. Event Calendar 3
>   5. WP Security Scan
>   6. Admin Management Xtended
>   7. Sidebar Widgets
>   8. DMSGuestbook
>   9. Wordpress Download Monitor
>   10. Yet Another Related Posts Plugin
>
>  Hopefully it is not a stretch for me to assert that the Google search
> results are far more applicable than the WordPress.org search results?
>
> What my code currently does is grab the Google search results and correlate
> them to the WordPress.org API results which are ultimately returned from
> the
> *plugins_api()* function found in */wp-admin/includes/plugin-install.php*.
> The API call ultimately looks like this:
>
> $request = wp_remote_post('http://api.wordpress.org/plugins/info/1.0/',
>                          array( 'body' => array('action' => $action,
> 'request' => serialize($args))) );
>
> I correlate the two result sets because the WordPress.org API results have
> the metadata needed for the 2.7 admin console plugin search results such as
> rating and version and Google search results has the desired order.  But as
> stated I've found that many of the top search results from Google don't
> even
> show up in WordPress.org's search results.  A serious bummer. :-(
>
> So what I'm hoping is to find an API function that would let me in a single
> POST send a list of plugin slugs and have it return me the same array of
> plugin info and metadata for those identified plugins that is currently
> being returned by the aforementioned line from plugins_api().  I know the
> link to the API Docs at http://api.wordpress.org/plugins/info/1.0/ says
> "*If
> only I had written some...Sorry -DD32*" but I'm hoping we can start
> documenting here on the list? :-)  Minimally if someone could pastebin the
> code for the API then I could figure it out myself.
>
> Thanks in advance.
>
>  -Mike Schinkel
> http://mikeschinkel.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at gmail.com  Fri Jan  2 00:24:24 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 00:24:38 2009
Subject: [wp-hackers] wp_list_categories()
In-Reply-To: <A2BF8974-7BFD-4470-B495-5FF7894EBD4E@daivmowbray.com>
References: <b4dd281c0812271726w718bb87bgefd17389f6397e6d@mail.gmail.com>
	<b4dd281c0812272217r78df4968jdd854e1a370ae032@mail.gmail.com>
	<47276776-0D88-4B85-B541-DB4A810B742D@daivmowbray.com>
	<74a8f8d80812301806w2e8257dbu96598f93a36e2ef3@mail.gmail.com>
	<FDBDF7D5-632F-4AD3-A5A1-4EA3AEBDEB38@daivmowbray.com>
	<6dbcd2670812311139p21c0e641kac1f0344be7de450@mail.gmail.com>
	<b4dd281c0812311441v33d22cat286c33c06ad42715@mail.gmail.com>
	<6dbcd2670812311457m2b10f3eaud77835d7435b920a@mail.gmail.com>
	<b4dd281c0812311545i1ddf4c7etce417f1eab7cbc81@mail.gmail.com>
	<A2BF8974-7BFD-4470-B495-5FF7894EBD4E@daivmowbray.com>
Message-ID: <b4dd281c0901011624u45b2f93g7896350da0f2becd@mail.gmail.com>

Daiv Mowbray wrote:

> > Here are the functions, I think I'm doing pretty well so far for a non
> phper....
>
Gaaack!  That's a lot of code.

Which is your entry point?  make_def_list()?   Is yes, run the following
code for me in the same place you'd call that function and paste the output
to http://pastebin.com/ and reply with the URL it gives you:

echo '$categories = ' . serialize($categories);
echo '$posts = ' . serialize($posts);
echo '$options  = ' . serialize($options);
echo '---------------------------------';
 print_r($categories);
print_r($posts);
print_r($options);

 -Mike Schinkel
http://mikeschinkel.com
From wordpress at dd32.id.au  Fri Jan  2 00:29:47 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan  2 00:30:02 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
Message-ID: <45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>

Also, For future reference, I've stored my reply of the API here:
http://dd32.id.au/wordpressorg-plugin-information-api-docs/

2009/1/2 DD32 <wordpress@dd32.id.au>

> Happy new year to you too :)
>
> Alright, Lets see now, First things that spring to my mind:
>  * I was going to do the *exact* same thing as you are doing now, But i
> quickly stoped, for 1 reason, Google doesnt like Screen scrapers, Google
> block you off after 2-3 similar repeditive searches, do it enough times
> (like the plugin search) and you'll get blocked very quickly, Google's good
> at detecting this.
>
>  * So, Lets use one of the available Google API's! ...Then you realise the
> only ones available only return the first 10 results with no further
> listing.. and that plugins may appear multiple times in that listing..
> (Maybe it was 50... but eitherway, it really reduced the number of viable
> results)
>
> Also, mdawaffe was looking into fixing up the .org searching using a proper
> search engine functionality (Currently bbPress's searching just doesnt cut
> it), I'm not sure if its been released yet, But i believe its in the works.
>
> So for the time being, I'd advise you to not waste your time on a Google
> search option, Yahoo might be possible, They actually have API's they like
> you using.. and since .org will hopefully get a better search functionality
> in the near future, It might not be worth your time (& the extra requests
> which would need to happen for it)
>
> Ok, Now onto the actual API, Theres no docs available, but there'll be
> something within the month hopefully, I've been talking to someone who's
> going to document it for himself, and release it, Its not that complex
> really at all
>
> However, Since its not that complex, There isnt a function to send a list
> of slugs and get a list of details back, Only a function to return those
> details for a single plugin -- Mainly because there was no need for that
> kind of functionality in the requirements at the time.. :)
>
> Some basic documentation:
> *Actions:*
> query_plugins
> plugin_information
> hot_tags
>
> *query_plugins*
>
> Accepts an object with a property of either:
> a: *browse* - A bbPress View to "browse", eg, "popular" =
> http://wordpress.org/extend/plugins/browse/popular/
> b: *search* - The term to search for
> c: *tag* - Browse by a tag
> d: *author* - Browse by an author (Note: .org has a few plugins to extend
> the author search to include contributors/etc)
>
> Other properties which the object can have:
> *page* - the page of the results (duh..)
> *per_page* - the number of results per page
> *fields* - This is a bit.. odd.. an array of which fields to return, the
> API has defaults for requests, but it can be overridden from the client,
> send an array with the field as the key, and true|false as the value to
> return or not, The fields are: *'description', 'sections', 'tested'
> ,'requires', 'rating', 'downloaded', 'downloadlink', 'last_updated' ,
> 'homepage', 'tags'*
>
> *return array of objects:*
> An array of the same object that *plugin_information* returns
>
> *plugin_information*
> Takes an object with the property:
> *slug* - The slug of the plugin to return the info for
> *fields* - once again, Optional, Same deal as in the previous action, just
> its got different defautls (ie. this one will return all the sections of the
> readme, whilst the previous will only return the short description)
>
> *return object:*
> *name* - The plugins name*
> *
> *slug* - the plugins slug
> *version* - The latest version
> *author* - The Author of the plugin - If a URL is available for the
> author, This will be a link
> The following fields are optional, And are returned based on the *fields*param
> *requires* - The required WordPress version
> *tested* - The highest tested compatible WordPress version
> *rating* - returns the % rating (ie, 10%, 100%) as a number.  (This is
> displayed on .org as a 1-5 scale)
>   *num_ratings* - If *ratings* is requsted, this will be returned as well,
> Its the number of people that have rated the plugin
> *downloads* - the number of times the plugin has been downloaded
> *last_updated* - the date that the plugin was last updated, Excludes the
> time
> *homepage* - The URL of the plugin
> *description* - The short description of the plugin(s)
> *sections* - An array of readme sections, ie. array( 'faq' => 'FAQ... blah
> blah my plugin is great.. blah blah', 'installing' => 'fgfg.... If no readme
> sections are found, It returns  array('description' => (*description field
> here from above)* )
> *downloadlink* - The Download Link for the plugin (Theres a bug in this at
> present, Any version with a space in the URL returns the wrong URL:
> http://trac.wordpress.org/ticket/8610
> *tags* - an array of array( 'tag_slug' => 'Tag Name, 'slug2' => 'Pretty
> Butterflies')*
>
> *
> *
> *
> *hot_tags*
> Takes an object of:
> *number* - The number of tags to return, Defaults to 100
>
> *return array of objects: *(key will be tag slug)
> *name* - The tags name
> *slug* - The tags slug
> *count* - The number of plugins
>
> Final note, The API may also return an error object in the case of an
> error, It'll be an object with a single property:
> *error* - A Error string, ie. "Slug not provided" or "action not
> implemented"
>
>
> 2009/1/2 Mike Schinkel <mikeschinkel@gmail.com>
>
>> Hi All (especially DD32):
>>
>> Happy New Year.
>>
>> I need help understanding how to call the API on WordPress.org.
>>
>>  What am I trying to do?  I love the new plugin install option found in
>> v2.7's admin console but I find the plugin search results are not very
>> good
>> so I'm working on a plugin that will use Google Search results to order
>> the
>> search results.  I've got it all working except for the fact that the
>> search
>> results returned by requesting results from the API on WordPress.org doing
>> even include some of the top search results from Google using the same
>> term.
>>
>>
>> I'm using the following Google search for the keyword "Category" (i.e. if
>> I'm looking for plugins related to categories.) Note how I'm search
>> for "*WordPress
>> Category Plug*", limiting to just http://wordpress.org/extend/plugins/,
>> omitting http://wordpress.org/extend/plugins/tags/ and requesting 100
>> results:
>>
>>   -
>>
>> http://www.google.com/search?q=wordpress+category+plugins+site:http://wordpress.org/extend/plugins/+-site:http://wordpress.org/extend/plugins/tags/&num=100
>>
>> The "equivalent" search on WordPress.org is here:
>>
>>   - http://wordpress.org/extend/plugins/search.php?q=category
>>
>>  For example, the Top 10 results on Google are:
>>
>>   1. Category Page
>>   2. Category Cloud Widget
>>   3. Category Icons
>>   4. Front Page Excluded Categories
>>   5. Category Posts Widget
>>   6. My Category Order
>>   7. Category Order
>>   8. Advanced Category Excluder
>>   9. Collapsing Categories
>>   10. Enhanced Categories
>>
>>  And the Top 10 results on WordPress.org (which appear to be the same as
>> returned by the API are):
>>
>>   1. Simple Tags
>>   2. WP-Cumulus
>>   3. Search Everything
>>   4. Event Calendar 3
>>   5. WP Security Scan
>>   6. Admin Management Xtended
>>   7. Sidebar Widgets
>>   8. DMSGuestbook
>>   9. Wordpress Download Monitor
>>   10. Yet Another Related Posts Plugin
>>
>>  Hopefully it is not a stretch for me to assert that the Google search
>> results are far more applicable than the WordPress.org search results?
>>
>> What my code currently does is grab the Google search results and
>> correlate
>> them to the WordPress.org API results which are ultimately returned from
>> the
>> *plugins_api()* function found in */wp-admin/includes/plugin-install.php*.
>> The API call ultimately looks like this:
>>
>> $request = wp_remote_post('http://api.wordpress.org/plugins/info/1.0/',
>>                          array( 'body' => array('action' => $action,
>> 'request' => serialize($args))) );
>>
>> I correlate the two result sets because the WordPress.org API results have
>> the metadata needed for the 2.7 admin console plugin search results such
>> as
>> rating and version and Google search results has the desired order.  But
>> as
>> stated I've found that many of the top search results from Google don't
>> even
>> show up in WordPress.org's search results.  A serious bummer. :-(
>>
>> So what I'm hoping is to find an API function that would let me in a
>> single
>> POST send a list of plugin slugs and have it return me the same array of
>> plugin info and metadata for those identified plugins that is currently
>> being returned by the aforementioned line from plugins_api().  I know the
>> link to the API Docs at http://api.wordpress.org/plugins/info/1.0/ says
>> "*If
>> only I had written some...Sorry -DD32*" but I'm hoping we can start
>> documenting here on the list? :-)  Minimally if someone could pastebin the
>> code for the API then I could figure it out myself.
>>
>> Thanks in advance.
>>
>>  -Mike Schinkel
>> http://mikeschinkel.com
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
From mikeschinkel at gmail.com  Fri Jan  2 00:32:04 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 00:32:19 2009
Subject: [wp-hackers] wp_list_categories()
In-Reply-To: <A2BF8974-7BFD-4470-B495-5FF7894EBD4E@daivmowbray.com>
References: <b4dd281c0812271726w718bb87bgefd17389f6397e6d@mail.gmail.com>
	<b4dd281c0812272217r78df4968jdd854e1a370ae032@mail.gmail.com>
	<47276776-0D88-4B85-B541-DB4A810B742D@daivmowbray.com>
	<74a8f8d80812301806w2e8257dbu96598f93a36e2ef3@mail.gmail.com>
	<FDBDF7D5-632F-4AD3-A5A1-4EA3AEBDEB38@daivmowbray.com>
	<6dbcd2670812311139p21c0e641kac1f0344be7de450@mail.gmail.com>
	<b4dd281c0812311441v33d22cat286c33c06ad42715@mail.gmail.com>
	<6dbcd2670812311457m2b10f3eaud77835d7435b920a@mail.gmail.com>
	<b4dd281c0812311545i1ddf4c7etce417f1eab7cbc81@mail.gmail.com>
	<A2BF8974-7BFD-4470-B495-5FF7894EBD4E@daivmowbray.com>
Message-ID: <b4dd281c0901011632u4ce6fe06tdd84124d716d73a6@mail.gmail.com>

Also, it would be helpful to know where you got the list of categories and
posts?
get_categories()'s and get_posts()?  If yes, what parameters did you pass to
get them?

-Mike

On Thu, Jan 1, 2009 at 1:21 PM, Daiv Mowbray <daiv@daivmowbray.com> wrote:

>
> On Jan 1, 2009, at 12:45 AM, Mike Schinkel wrote:
>
> That said, if Daiv Mowbray will post an example similar to the example I
>> posted of what he wants his markup to look like down to, say, the 4th
>> level
>> I'll write the recursive login for him. Just not tonight as I'm leaving
>> for
>> an NYE party soon. :-)
>>
>
> Hey Mike, hope the party was great!
> We had a family party here at home.
> Lots of fun with the kids.
>
> Re your offer...I'd really appreciate a hand with this, been going around
> in circles
> for a couple of weeks, If you're willing and able,  I've added bellow the
> relevant functions.
> As for what I'm trying to do...
> I have an array of categories, and an array of posts .
>
> The desired result down to the 4th level is ;
> <dl>
>    <dt class="dtL1">Cat level1</dt>
>    <dd class="ddL1">
>        <dl>
>        <dt class="dtL2">Cat level2</dt>
>        <dd class="ddL2">
>            <dl>
>            <dt class="dtL3">Cat level3</dt>
>            <dd class="ddL3">
>                <dl>
>                <dt class="dtL4">Cat level4</dt>
>                <dd class="ddL4"><span>post level4</span>
>                </dd>
>                </dl>
>            <span>post level3</span>
>            </dd>
>            <dt class="dtL3">Cat level3-B</dt>
>            <dd class="ddL3"><span>post level3-B</span>
>            </dd>
>            </dl>
>        <span>post level2</span>
>        </dd>
>        </dl>
>    <span>post level1</span>
>    </dd>
> </dl>
>
>
> Here are the functions, I think I'm doing pretty well so far for a non
> phper.
>
> function getDepth( array &$items, $node,  $depth = 0)
> {
>                if ($node->parent == 0) {
>                        // Root node, return current depth
>                        return $depth;
>                } else {
>                        // Search for matching parent node
>                        $parent = array_filter(
>                                $items,
>                                create_function(
>                                        '$item',
>                                        'return ($item->term_id == ' .
> $node->parent . ');'
>                                )
>                        );
>                        $parent = array_pop($parent);
>                        return getDepth($items, $parent, ++$depth);
>                }
> }
> function make_def_list($categories, $posts, $options ) {
>                global $showPostCount, $linkToCat, $catfeed, $showPosts ;
>
>                $parents =array();
>
>                echo "\n<div id='ssMenuHolder'><dl id='ssMenuList'>\n";
>
>
>        foreach( $categories as $cat ) {
>                        $my_depth = (getDepth( $categories, $cat) +1);
>                        $cat->depth = $my_depth;
>
>                        array_push ($parents , ($cat->parent) );
>        if ($cat->depth == 1) // equals level 0 , Start top level
>    {
>                        $rssLink=add_feedlink($catfeed,$cat);
>                        $sub_cat_post_count=0;
>                        $sub_cat_count=0;
>
>                        list
> ($sub_cat_links,$sub_cat_count,$sub_cat_post_count,$sub_cat_posts)=
>                        get_ssmsub_cat($cat, $categories, $parents, $posts,
> $sub_cat_count, $sub_cat_post_count, $number);
>
>                        $theCount=$cat->count;//$cat->count is num of posts
>
>                        cat_bar($cat, $showPostCount, $theCount, $rssLink);
>
>                echo( "\n\t<dd class='showme_".$my_depth." ".$cat->slug."
> '>\n" );
>
>                if ($sub_cat_count > 0)
>                        { // this top level cat has sub cats
>                                echo
> "\n\t<dl>\n".$sub_cat_links."\t\n</dl>\n ";
>                        }
>
>                // Now print out the posts
>                if( ! empty($posts)  || ($showPosts=='yes'))
>
>                        add_posts($posts, $cat, $sub_cat_posts);
>
>                echo "\t</dd><!-- ending first level category -->\n";
>
>                }
>      } // end if theCount>0
>
>      echo "\n</dl></div>\n";
>  }
> function get_ssmsub_cat($cat, $categories, $parents, $posts,
> $sub_cat_count, $sub_cat_post_count, $number) {
>
>                global $showPostCount, $linkToCat, $catfeed, $showPosts ;
>
>                $sub_cat_posts=array();
>                $link2 = '';
>
>          if (in_array($cat->term_id, $parents)) {
>
>                foreach ($categories as $cat2) {
>
>                        $sub_cat_link2=''; // clear info from sub_cat_link2
>
>                        if ($cat->term_id == $cat2->parent)
>                        {
>                                // check to see if there are more
> subcategories under this one
>
>  $sub_cat_post_count=$sub_cat_post_count+$cat2->count;
>
>                                        if (!in_array($cat2->term_id,
> $parents)) {
>
>                                                $sub_cat_count = 0;
>
>                                                $sub_cat_links =
> cat_bar($cat2, $showPostCount, $theCount, $rssLink);
>
>                                         } else {
>                                          list ($sub_cat_link2,
> $sub_cat_count,$sub_cat_post_count,$sub_cat_posts)=
>
>  get_ssmsub_cat($cat2, $categories, $parents, $posts, $sub_cat_count,
> $sub_cat_post_count, $number);
>
>                                                $sub_cat_count=1;
>
>                                                $sub_cat_links =
> cat_bar($cat2, $showPostCount, $theCount, $rssLink);
>                                        }
>                        }
>                        $sub_cat_links.="\n\t<dd
> class='showme_".$my_depth."' >\n";
>
>                        if ($showPosts=='yes')
>                        {
>                                add_posts ($posts, $cat2, $sub_cat_posts);
>
>                        }
>
>                $sub_cat_links.= "</dd><!-- ending subcategory dd -->\n";
>        }
>  }
>  return
> array($sub_cat_links,$sub_cat_count,$sub_cat_post_count,$sub_cat_posts);
> }
> function cat_bar( $cat, $showPostCount, $theCount, $rssLink)    {
>                global $showPostCount, $linkToCat, $catfeed, $showPosts ;
>
>
>                echo "\n\t<dt class='ssmToggleBar ".$cat->slug."'><span
> class='show_".$cat->depth." subsym'>&nbsp;</span>";
>
>                $catbarlink = "\n\t\t<span class='catlink'><a
> href='".get_category_link($cat->term_id)."' class='tool' title='".
> sprintf(__("View all entries filed under %s"),
> wp_specialchars($cat->name))."'";
>
>                        if ( !empty($cat->description) )
>                        {
>                                $catbarlink .= 'rel="' .
> wp_specialchars(apply_filters('description',$cat->description,$cat)) . '"';
>                        }
>
>                $catbarlink .= '>'.apply_filters('list_cats', $cat->name,
> $cat).'</a></span>';
>
>                if( $showPostCount=='yes')
>                        {
>                                $catbarlink .= " (" .
> $theCount.")".$rssLink."\n\t</dt><!--this is catbar with post count -->";
>
>                        } else {
>
>                                $catbarlink .= $rssLink."\n\t</dt><!--this
> is catbar no post count -->";
>                        }
>                echo $catbarlink ;
>
> }
> function add_posts ($posts, $cat, $sub_cat_posts) {
>
>                foreach ($posts as $post) {
>
>                        if ($post->term_id == $cat->term_id) {
>
>
>                                echo "\n\t<span class='ssMenuPost'>\n\t<a
> href='".
>
>  get_permalink($post->id)."'>".strip_tags($post->post_title) .
> "</a></span>\n";
>                        }
>                        if (!in_array($post->id, $sub_cat_posts)) {
>                                array_push($sub_cat_posts, $post->id);
>                        }
>                }
> }
> ----------
> Daiv Mowbray
> daiv@daivmowbray.com
>
> ----------
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at gmail.com  Fri Jan  2 00:52:47 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 00:52:58 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
Message-ID: <b4dd281c0901011652x7879c15t58d1c72ed5e2f305@mail.gmail.com>

DD32 <wordpress@dd32.id.au> wrote:
> * I was going to do the *exact* same thing as you are doing now, But...

Ah, I was curious why it wasn't that way because I know you guys are good
enough to do so... :-)

> i quickly stoped, for 1 reason, Google doesnt like Screen scrapers, Google
block you off after 2-3 similar repeditive searches, do it enough times
(like the plugin search) and you'll get blocked very quickly, Google's good
at detecting this.

Good point, but here are my thoughts on that. If you were doing for
WordPress.org I'd agree, but if doing in a plugin where the user
will probably only do a few searches at any one time I think they shouldn't
care so much and that they would have a very hard time to detect. If it
becomes a problem I could simulate the user's browser using their user
agent, etc. Since this would be such a low volume thing on a per person
basis I can't see it causing that much trouble?

Also, I'm doing it for my own use but planning to make available for others
who want to use it.

> So, Lets use one of the available Google API's! ...Then you realise the
 only ones available only return the first 10 results with no further
listing..

> Actually today you can get 4 or 8 results and then you can get subsequent
> pages. BUT, the showstopper for me was their lack of "exclude"
> functionality. Sure I could do with PHP but then I have to add in a JSON
> library and I decide it would just be easier to parse the HTML.
>
> Also, mdawaffe was looking into fixing up the .org searching using a
proper search engine functionality (Currently bbPress's searching just
doesnt cut
it), I'm not sure if its been released yet, But i believe its in the works.
> So for the time being, I'd advise you to not waste your time on a Google search
option, Yahoo might be possible, They actually have API's they like
you using.. and since .org will hopefully get a better search functionality
in the near future, It might not be worth your time (& the extra requests
which would need to happen for it)

> I have a big project coming up next week where I am going to be doing LOTS
> of plugin research so I've got to get this working for my own self ASAP. :-)
> I'll look into Yahoo but I've got Google working for now and the real
> problem is the WordPress.org's search and/or API.
>
> However, Since its not that complex, There isnt a function to send a list
of
slugs and get a list of details back, Only a function to return those
details for a single plugin -- Mainly because there was no need for that
kind of functionality in the requirements at the time.. :)

> Ugh :-(   I guess I could scrape WordPress.org and cache locally. Yuck.
>
> Any chance I could write an alpha version that could be hosted on
> WordPress.org?
>
> BTW, even though it's now what I needed thanks for documenting the API!
>
-Mike Schinkel
http://mikeschinkel.com
From mikeschinkel at gmail.com  Fri Jan  2 01:06:43 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 01:06:56 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
Message-ID: <b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>

On Thu, Jan 1, 2009 at 7:29 PM, DD32 <wordpress@dd32.id.au> wrote:

> Also, For future reference, I've stored my reply of the API here:
> http://dd32.id.au/wordpressorg-plugin-information-api-docs/
>

Just a quick related question, any reason the API is not more RESTful?

In case you'll not familar with the arcane details of RESTfulness, instead
of using $_POST['action'] why not instead use URLs as nouns and use GET to
retrieve? For example, instead of POSTing to
http://api.wordpress.org/plugins/info/1.0/ with an action of 'query_plugins'
instead you would simple GET a URL like this:
http://restapi.wordpress.org/info/1.0/plugins.json?q=category where this
would hypothetically return a list of plugins by category in JSON format.

Without putting my "RESTful Zealot" hat on (which I do have :-) and
preaching all the benefits of real RESTfulness (vs. RPC over HTTP) I'll just
say that what I just proposed would be a lot easier to work with by people
wanting to use the API because they could do their testing using the
browser.

BTW, this is something I'd be willing to work on if it was something that WP
team would consider.

-Mike Schinkel
http://mikeschinkel.com
From wordpress at dd32.id.au  Fri Jan  2 01:17:05 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan  2 01:17:19 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901011652x7879c15t58d1c72ed5e2f305@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<b4dd281c0901011652x7879c15t58d1c72ed5e2f305@mail.gmail.com>
Message-ID: <45055a190901011717i379563a4uecf2a6aa279ad1cb@mail.gmail.com>

2009/1/2 Mike Schinkel <mikeschinkel@gmail.com>

> > i quickly stoped, for 1 reason, Google doesnt like Screen scrapers,
> Google
> block you off after 2-3 similar repeditive searches, do it enough times
> (like the plugin search) and you'll get blocked very quickly, Google's good
> at detecting this.
>
> Good point, but here are my thoughts on that. If you were doing for
> WordPress.org I'd agree, but if doing in a plugin where the user
> will probably only do a few searches at any one time I think they shouldn't
> care so much and that they would have a very hard time to detect. If it
> becomes a problem I could simulate the user's browser using their user
> agent, etc. Since this would be such a low volume thing on a per person
> basis I can't see it causing that much trouble?

What i found was that Volume wasnt the issue, It was relitivly closely
related searches within a certain timeframe, For example, "site:
wordpress.org/extend/plugins" is going to be constant, its just the search
term that changes, Or flicking to the next page faster than what a normal
human would (as you've got to filter out many duplicates from a google
search). Imitating a users browser does nothing.. They'll block a human if a
human does it too fast too..  Similar search queries coming from a single
host can also trip the block.. I've been blocked numerous times when
searching for things when i'm changing the search terms slightly and
flicking through a few pages..




>
>
> Also, I'm doing it for my own use but planning to make available for others
> who want to use it.
>
> > So, Lets use one of the available Google API's! ...Then you realise the
>  only ones available only return the first 10 results with no further
> listing..
>
> > Actually today you can get 4 or 8 results and then you can get subsequent
> > pages. BUT, the showstopper for me was their lack of "exclude"
> > functionality. Sure I could do with PHP but then I have to add in a JSON
> > library and I decide it would just be easier to parse the HTML.
>

Ah.. JSON.. And those 4 or 8 pages include duplicates.. things like /plugin/
and /plugin/installation/ that was the showstopper for me with JSON


>
>
> > I have a big project coming up next week where I am going to be doing
> LOTS
> > of plugin research so I've got to get this working for my own self ASAP.
> :-)
> > I'll look into Yahoo but I've got Google working for now and the real
> > problem is the WordPress.org's search and/or API.
> >
> > However, Since its not that complex, There isnt a function to send a list
> of
> slugs and get a list of details back, Only a function to return those
> details for a single plugin -- Mainly because there was no need for that
> kind of functionality in the requirements at the time.. :)
>

> Ugh :-(   I guess I could scrape WordPress.org and cache locally. Yuck.
> >
> > Any chance I could write an alpha version that could be hosted on
> > WordPress.org?


I highly doubt it :) They dont like just running any code.. Needs to be
written to take advantage of bbPress correctly, something which i didnt do
really well.. So there was another wait of a few weeks while someone rewrote
parts of it.. even now, whats on there has been modified by someone else i'm
pretty sure :)


>
> >
> > BTW, even though it's now what I needed thanks for documenting the API!

I said i'd do it.. And 2 people asking related to it in the same week kicked
me into action :) Need to accomplish something today!
From wordpress at dd32.id.au  Fri Jan  2 01:24:12 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan  2 01:24:25 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
Message-ID: <45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>

(sorry for my replies being all over the place, Gmail is absolutely
horrible for replying to mailing lists in Opera..)

2009/1/2 Mike Schinkel <mikeschinkel@gmail.com>
>
> On Thu, Jan 1, 2009 at 7:29 PM, DD32 <wordpress@dd32.id.au> wrote:
>
> > Also, For future reference, I've stored my reply of the API here:
> > http://dd32.id.au/wordpressorg-plugin-information-api-docs/
> >
>
> Just a quick related question, any reason the API is not more RESTful?

Because it has no need to be?

> In case you'll not familar with the arcane details of RESTfulness, instead
> of using $_POST['action'] why not instead use URLs as nouns and use GET to
> retrieve? For example, instead of POSTing to
> http://api.wordpress.org/plugins/info/1.0/ with an action of 'query_plugins'
> instead you would simple GET a URL like this:
> http://restapi.wordpress.org/info/1.0/plugins.json?q=category where this
> would hypothetically return a list of plugins by category in JSON format.

Well.. Just checking, It can accept $_GET too, but since it was
originally spec'd for POST, i thought it'd be simpler to just not
mention it.. And keep all the params tied together (since passing a
serialised string via GET would break standards - the url would reach
maximum length quickly)

As for the multiple output formats.. That'd complicate the output
stages, Not something that was needed, So it was skipped. Generally JS
cannot access files on different domains too, so theres no real need
for a JS output given that it'd not be useable to the majority.

> Without putting my "RESTful Zealot" hat on (which I do have :-) and
> preaching all the benefits of real RESTfulness (vs. RPC over HTTP) I'll just
> say that what I just proposed would be a lot easier to work with by people
> wanting to use the API because they could do their testing using the
> browser.

Well, The fact its not a human-use API really.. It accepts PHP, it
gives back PHP, It makes sense to test from within PHP, And since the
primary use of it is for WP, calling plugins_api('action',
(object)array('test'= > 'a')); makes a lot more sense than allowing
for browsers/etc.


I'm not against any of those ideas,  just dont see the benefit for the
purpose of the API, If you want to have a json output, you're going to
have to run through a middleman on your own server anyway, you might
as well use PHP to request and output in the format you want. (Yes,
i'm aware JSON can be used in multiple languages)
From derek at amphibian.info  Fri Jan  2 01:45:43 2009
From: derek at amphibian.info (Derek Hogue)
Date: Fri Jan  2 01:45:58 2009
Subject: [wp-hackers] Help debugging long load time in plugin
Message-ID: <D6D158AF-0726-4A70-90E1-A80A53DDB4A4@amphibian.info>

Hey all,

I recently released an update to my plugin (GigPress - <http://gigpress.com 
 >), and it caused people on some hosts to be reduced to unacceptable  
load times on their WP installs (2-3 seconds in some cases).  I can't  
find the common thread as of yet, as it's been a few different hosts  
(Bluehost and MediaTemple among them), but it must be somewhat rare,  
as more people than not have experienced no such slowdowns, and I  
can't recreate the issue on Dreamhost.

The main thing that differentiates the new version (where these issues  
are occurring for some people) and the old version (where it did not)  
is that I've moved to using the shortcode API for GigPress' output -  
and I'm using the output buffer to capture the output and return or  
echo it, depending on whether it was called via the shortcode or  
called directly via a template tag.

I should note that GigPress uses its own DB tables, and thus generates  
more MySQL queries than most plugins.  There are a couple of issues  
related to this that I'd be grateful for any help with.

1) What's the best way to display the elapsed time of each function  
(or portion thereof) in my plugin when my debug mode is on?  This  
would obviously help in finding the slowdown culprit in these cases.

2) Is there any way I can prevent my plugins queries from being run  
all the time, even when it's not being called by a post/page?  As soon  
as GigPress is enabled, the queries for a default install jump way up,  
as though every function in the plug-in is being called on each page  
load.

Any ideas would be greatly appreciated ...

Thanks in advance, and happy new year,
Derek
--
http://amphibian.info



From casey.bisson at gmail.com  Fri Jan  2 02:14:36 2009
From: casey.bisson at gmail.com (Casey Bisson)
Date: Fri Jan  2 02:14:51 2009
Subject: [wp-hackers] Help debugging long load time in plugin
In-Reply-To: <D6D158AF-0726-4A70-90E1-A80A53DDB4A4@amphibian.info>
References: <D6D158AF-0726-4A70-90E1-A80A53DDB4A4@amphibian.info>
Message-ID: <7E7106A3-D741-42FC-A757-F9D6969CBC35@gmail.com>


If you think it's DB interactions that are going slow, you can turn  
out query logging and print out all the queries and how long they took  
to execute. Just define SAVEQUERIES true in your wp-config.php and  
then print_r( $wpdb->queries ) somewhere near the end of your code's  
execution.

If the DB isn't the hold up, you can time other activities. There's a  
simple timer function in wpdb, but it's not really public and only  
tracks one thing at a time (that one thing is usually an active  
query). I put an improved timer in my bSuite plugin that can track an  
arbitrary number things. Take a look at the code here:

http://plugins.trac.wordpress.org/browser/bsuite/tags/4.0.3/bsuite.php#L2014

I use it like this:

		global $bsuite;
		$bsuite->timer_start( 'some_timer_name' );

		do some stuff

		$this->queries[] = array( 'some text about what is going', $bsuite- 
 >timer_stop( 'some_timer_name' ));

		print_r( $this->queries[] );


--Casey

http://about.Scriblio.net/
http://MaisonBisson.com/


On Jan 1, 2009, at 8:45 PM, Derek Hogue wrote:

> Hey all,
>
> I recently released an update to my plugin (GigPress - <http://gigpress.com 
> >), and it caused people on some hosts to be reduced to unacceptable  
> load times on their WP installs (2-3 seconds in some cases).  I  
> can't find the common thread as of yet, as it's been a few different  
> hosts (Bluehost and MediaTemple among them), but it must be somewhat  
> rare, as more people than not have experienced no such slowdowns,  
> and I can't recreate the issue on Dreamhost.
>
> The main thing that differentiates the new version (where these  
> issues are occurring for some people) and the old version (where it  
> did not) is that I've moved to using the shortcode API for GigPress'  
> output - and I'm using the output buffer to capture the output and  
> return or echo it, depending on whether it was called via the  
> shortcode or called directly via a template tag.
>
> I should note that GigPress uses its own DB tables, and thus  
> generates more MySQL queries than most plugins.  There are a couple  
> of issues related to this that I'd be grateful for any help with.
>
> 1) What's the best way to display the elapsed time of each function  
> (or portion thereof) in my plugin when my debug mode is on?  This  
> would obviously help in finding the slowdown culprit in these cases.
>
> 2) Is there any way I can prevent my plugins queries from being run  
> all the time, even when it's not being called by a post/page?  As  
> soon as GigPress is enabled, the queries for a default install jump  
> way up, as though every function in the plug-in is being called on  
> each page load.
>
> Any ideas would be greatly appreciated ...
>
> Thanks in advance, and happy new year,
> Derek
> --
> http://amphibian.info
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at gmail.com  Fri Jan  2 05:56:44 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 05:56:56 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
Message-ID: <b4dd281c0901012156n20f9cca3o78ee032680266887@mail.gmail.com>

"DD32" <wordpress@dd32.id.au> wrote:
> Because it has no need to be (RESTful)?

Oh, now there you've gone and done it. You've just unleashed my "RESTful
Zealot" persona and now I feel compelled to enter proselytizing mode. :-)

But before I start, let me say that my mention of a JSON return type was an
arbitrary example; more on that in a bit.

I spent about a year between 2006 & 2007 studying HTTP-based web services
and came away with the fervent belief that almost all HTTP-based APIs are
better off when they are RESTful, especially on domains as publicly relevant
as WordPress.org. Unfortunately most of the benefits, while real and
tangible with many use-cases, are not immediately apparent without a healthy
combination of motivated study and a moderately intuitive nature as well as
ideally a bit of mentoring such as can be found on the rest-discuss list.
Suffice it to say that many of the benefits are enabling serendipity,
something which is rarely the most obvious requirement unless someone goes
explicitly searching for it.

REST is basically the same as the broader HTTP-based web but with numerous
added constraints and thus, when done right, bring along many of the
benefits of the HTTP web "for free." And those constrains add structure and
compatibility, both which are benefits. As it has been said "Embracing
constraints can be very liberating."

By comparison, the RESTians would call the style of the WordPress.org Plugin
API "RPC over HTTP" were most of the benefits of the HTTP web are provided
automatically.  Let me give you once such real and tangible benefit of
having a RESTful API for Plugins on WordPress.org vs. using the existing RCP
over HTTP API: "HTTP caching."

Here one BIG reason why your API *does* need to be RESTful.  Using the
approach I suggested you get HTTP Caching "for free."  Said http caching
would 1.) reduce the load on the WordPress.org API servers and 2.) it would
speed the end user experience as they page through the multiple pages of the
same results. Yes, you could cache the values you retrieve from your API but
you'd have to write caching code and caching on RESTful APIs comes with
(almost) no extra code.

And that's the thing about RESTful APIs; you get so much of what you'd
otherwise have to write for free. Basically anything that understands the
HTTP web can also understand a RESTful web service and add additional
functionality, such bookmarking services, etc.

> Well.. Just checking, It can accept $_GET too, but since
> it was originally spec'd for POST, i thought it'd be
> simpler to just not mention it..

Actually allowing GET and POST to do the same this is, from a RESTful
perspective, a big no-no and for good reason (and I used to write web apps
that did it, so I'm calling my prior self out on this one.) With RESTful web
services the two verbs mean two different things. GET retrieves
representations and can be cached by intermediaries on the web including
browsers and POST explicitly should not be cached. A bit more on this below.

> And keep all the params tied together (since passing
> a serialised string via GET would break standards - the
> url would reach maximum length quickly)

Although in the HTTP spec there is not a maximum URL length googling
"maximum url length" gives a recommendation for no more than 2000 characters
because of arbitrary limits that browser and servers places on URLs (
http://www.boutell.com/newfaq/misc/urllength.html). But 2000 is a lot of
characters and I don't think any of your current API capabilities would
exceed that.

Of course allowing for retrieval of information about a list of plugins
given the list of plugin slugs could easily exceed 2000 characters (it is
ironic that that was my needed use-case.) The way that could be addressed
would be to allow them to be encoded into the URL for short lists and for
longer lists split into two HTTP transaction, i.e.

   #1 - POST to "http://restapi.wordpress.org/plugins/sets/new" with the
POST body being "plugin_list=plugin1&plugin2&plugin3&...&plugin"

The response to the post would be "201 Created" (or maybe "303 See Other",
I'd need to ask on the rest-discuss list) with a header of "Location:
http://restapi.wordpress.org/plugins/sets/{set-id}" where {set-id} would be
the unique ID given to the that set of plugins on the server. Note that the
first time this POST was submitted for a list of plugins it would create the
new set; each time after it would simply retrieve the set ID for the
existing set.

   #2 ? GET http://restapi.wordpress.org/plugins/sets/{set-id}.{ext}

This would return the list of plugin information for the plugsin contained
in the set identified by {set-id}. The representation returned by the
response would be the mime-type that mapped to the {ext}, i.e.

   json ? Javascript object notation
   xml ? Basic XML layout (as formatted by your API)
   rss ? An RSS feed
   atom ? An Atom feed
   sphp ? Serialized PHP (is there a "standard" extension for this?)
   html ? The data in HTML format

So for short lists it's a single transaction but for longer lists it's a
two-part transaction. Since most calls from plugin_api() would fit into the
2000 character limit this isn't a big deal.

> As for the multiple output formats.. That'd
> complicate the output stages, Not something
> that was needed, So it was skipped.

When architected in the way I just mentioned it really does not complicate
the output stage; you just use an internal representation (PHP objects and
arrays) and then each response representation can be generated by a
pluggable serializer. Piece of cake. :-)

But I do understand it wasn't needed and "Good Today" is usually better than
"Great Tomorrow." :-)

> Well, The fact its not a human-use API really..
> It accepts PHP, it gives back PHP, It makes sense
> to test from within PHP,

My response is "Every API is a human-use API, or at least should be
considered one."

Why? Because programmers are humans and they have to figure out how to
program them. The more conceptually accessible and easily testable an API,
the more often people actually use it (or at least that's what statistical
logic would tell me? :-)  That's one reason I advocate always having an HTML
response representation so that developers can quickly and easily see the
result of their API GETs.

It might make sense for *you* to test the API you developed with PHP because
you already know all your own assumptions and don't have to discover how to
call your API; that's not true for others (like me!) But for someone who
doesn't know your assumptions writing code is a lot more effort than
performing a simple URL request in a browser. And where there is more effort
required it reduces how often people decide to do it. (btw, convincing
people of make their APIs browser-accessible is a crusade of mine and if you
google enough you'll find me advocating it elsewhere too. :)

One thing you find when you start building RESTful APIs is that almost all
of the interaction patterns you might need are covered by HTTP and thus you
don't need to "design" the API; you just follow the best practice patterns.
As an example, consider this URL:

   http://restapi.wordpress.org/plugins/sets/abd123.yaml

Here let's assume the web service has (yet?) to implement a YAML
specification format representation renderer but the web service still
"handles" it just fine, it returns a "501 Not Implemented" status code and
all intermediaries that "speak" HTTP understand what that means. Easy peasy.
:-)

> And since the primary use of it is for WP, calling
> plugins_api('action', (object)array('test'= > 'a'));
> makes a lot more sense than allowing for browsers/etc.

I'd (respectfully) argue that your implementation will (almost) certainly
doom it to be so (i.e. only ever used by plugins_api().)

However I can actually envision lots of different use-case for the WordPress
Plugin API if it were more accessible.  For example, if there were a RESTful
API with an RSS representation format then plugin authors could use an RSS
Widget to list their own plugsin on their own blog. Here's the
(hypothetical) URL that would list your (dd32's) plugins:

   http://restapi.wordpress.org/authors/plugins/dd32.rss

See how the serendipity of the RESTful approach starts to expose itself? :-)


BTW, the Twitter API does most of this and just look at how many Twitter
add-ons there are! (though notably it doesn't have HTML response rendering.)
 Clearly there is more to it than an accessible API, but that accessible API
have helped, I know that for certain in my local peer group.  As an example,
here's my own stream which you can view in the browser:

The nice thing about APIs on the server is they are just interfaces to a
back-end so it's possible and easy to implement multiple APIs to the same
back-end. Which brings me back to my offer to implement a truly RESTful API
for WordPress.org plugin repository: I've got lots of the code already
implemented from other projects; so who do I propose this to? :-)

-Mike Schinkel
http://mikeschinkel.com

P.S.  Now imagine that we had such a RESTful API?  We can easily extend it
to include plugin usage logging. We could set up a scheduled task to daily
perform a PUT to the following URL with the HTTP body being the list of
plugins currently installed.

   PUT http://restapi.wordpress.org/sites/{site-id}/plugins/

The {site-id} could be a GUID that is generated the first time the scheduled
task is called and, if this were included in core it could be an option that
administrators could turn off if they don't want to report this information
(we could even ask for permission on the install screen.)

But with this information collected we could know plugins are in use and, if
we also later added the ability for people to rank how important a plugin is
to their site we could find out which plugins people depend on most and thus
which ones most need to be upgraded.  This could also be used to rank plugin
search results like Google uses PageRank.

Just a thought.  A RESTful approach opens up huge possibilities without
having to spent lots of time doing API design.
From mikeschinkel at gmail.com  Fri Jan  2 05:59:36 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 05:59:47 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901012156n20f9cca3o78ee032680266887@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901012156n20f9cca3o78ee032680266887@mail.gmail.com>
Message-ID: <b4dd281c0901012159y572d2981r8ac1da98de05ecba@mail.gmail.com>

> What i found was that Volume wasnt the issue, It was
> relitivly closely related searches within a certain
> timeframe,

Hearing your experience is greatly appreciated even moreso because it helps
me feel more confident about scraping Google for this My plugin only issues
one HTTP request of Google before the user has to take another action so I
wouldn't have the problem with too many requests in too short a timeframe;
it will be about the same as if the user were using Google directly.

> Similar search queries coming from a single host can
> also trip the block.. I've been blocked numerous times
> when searching for things when i'm changing the search
> terms slightly and flicking through a few pages..

You had this problem when you were using Google as an end-user, or when
programming via PHP?  I could see the latter, but would be surprised by the
former.

Still, even if there is a problem I architected it to be a separate Search
Results class whose interface I could duplicate in another class that called
Yahoo or some other index results. My primary problem now getting what I
need from the WordPress API, not issues with screen scrapping Google.

> Ah.. JSON.. And those 4 or 8 pages include duplicates..
> things like /plugin/ and /plugin/installation/ that was
> the showstopper for me with JSON

I definitely agree that their API makes the problem with
'/plugin/installation/' an issue. OTOH, with the search results I've been
getting I see it only rarely.  I need to be sure I filter them out.  With
Google's result set of 100 results I can certainly get 75 or so good results
and that is more than enough for my use-case.

> I highly doubt it :) They dont like just running any
> code.. Needs to be written to take advantage of bbPress
> correctly, something which i didnt do really well..

Hmm.  Why does this need to be integrated with BBPress?  How is this a forum
app?

Not pushing though, I understand the reason they'd not want to run someone
else's code.

> Need to accomplish something today!
Always a good thing!  Even if it is only just the new year!  :-)

-Mike Schinkel
http://mikeschinkel.com/custom-wordpress-plugins/
From mikeschinkel at gmail.com  Fri Jan  2 06:07:21 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 06:07:31 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901012159y572d2981r8ac1da98de05ecba@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901012156n20f9cca3o78ee032680266887@mail.gmail.com>
	<b4dd281c0901012159y572d2981r8ac1da98de05ecba@mail.gmail.com>
Message-ID: <b4dd281c0901012207j4ffeb5aj38c221a026f486cb@mail.gmail.com>

DD32:

So one thing just occurred to me.  It would be very possible for me to just
write the RESTful API I referred to on my own server using a cache of the
information where the cache is replenished using the Plugin API on
WordPress.org.

Hmmm.  Double hmmmm.

-Mike Schinkel
http://mikeschinkel.com/custom-wordpress-plugins/
From wordpress at dd32.id.au  Fri Jan  2 06:41:05 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan  2 06:41:15 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901012159y572d2981r8ac1da98de05ecba@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901012156n20f9cca3o78ee032680266887@mail.gmail.com>
	<b4dd281c0901012159y572d2981r8ac1da98de05ecba@mail.gmail.com>
Message-ID: <45055a190901012241s60558454mffc7eafdbd55c19d@mail.gmail.com>

I'm not going to have time to reply to all of that.. But, Yes, RESTful
api's do make sense sometimes, and yes, It would be very powerful.

as for caching, My understanding is that on .org they use very little
caching at all, bbPress handles the high loads (or not so high..)
fine.. caching would impact users access speeds though potentially
(But that seems pretty damn quick too)

Whilst i wrote the original API, there's been changes made to it by
Automattic/WP guys, and at the time, the API in its current form does
everything it was originally intended to, I'm sure if it was designed
to be used for such applications you outlined, then it probably
would've happened, I guess it'll be up to WordPress/Automattic if they
feel like implementing such a new API or not, It could be very usable
by people like yourself, on the other hand, It'd provide very little
benefit to myself, or very little benefit over the current
implementation.
I'm not trying to be defending of my own code, It was mearly the way i
chose to do it at the time, I'd have done it exactly the way you
outlined if it was the way i operated (in my sense, over engineering
the problem) - anyway, Thanks for the read, it was good :)

2009/1/2 Mike Schinkel <mikeschinkel@gmail.com>:
>> I highly doubt it :) They dont like just running any
>> code.. Needs to be written to take advantage of bbPress
>> correctly, something which i didnt do really well..
>
> Hmm.  Why does this need to be integrated with BBPress?  How is this a forum
> app?

Because wordpress.org/extend/*/ runs on bbPress installations, All the
data is stored within the bbPress database, So it makes sense to
utilise bbPress's API.

> So one thing just occurred to me.  It would be very possible for me to just
> write the RESTful API I referred to on my own server using a cache of the
> information where the cache is replenished using the Plugin API on
> WordPress.org.

No reason why you couldnt do that at all IMO
From ryanmccue at cubegames.net  Fri Jan  2 07:22:55 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Fri Jan  2 07:23:49 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
Message-ID: <495DC0CF.6040005@cubegames.net>

DD32 wrote:
> Ok, Now onto the actual API, Theres no docs available, but there'll be
> something within the month hopefully, I've been talking to someone who's
> going to document it for himself, and release it, Its not that complex
> really at all
>   

Yeah, yeah, I'll get to it. :-P I should have something up by the end of
the week, but no guarantees.

-- 
Ryan McCue
<http://cubegames.net/>

From peter.westwood at ftwr.co.uk  Fri Jan  2 08:08:16 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Jan  2 08:08:45 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901012156n20f9cca3o78ee032680266887@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901012156n20f9cca3o78ee032680266887@mail.gmail.com>
Message-ID: <03A3FFA9-65DD-4254-870D-293B61A6928D@ftwr.co.uk>


On 2 Jan 2009, at 05:56, Mike Schinkel wrote:

> "DD32" <wordpress@dd32.id.au> wrote:
>> Because it has no need to be (RESTful)?
>
> Oh, now there you've gone and done it. You've just unleashed my  
> "RESTful
> Zealot" persona and now I feel compelled to enter proselytizing  
> mode. :-)
>
> By comparison, the RESTians would call the style of the  
> WordPress.org Plugin
> API "RPC over HTTP" were most of the benefits of the HTTP web are  
> provided
> automatically.  Let me give you once such real and tangible benefit of
> having a RESTful API for Plugins on WordPress.org vs. using the  
> existing RCP
> over HTTP API: "HTTP caching."
>
> Here one BIG reason why your API *does* need to be RESTful.  Using the
> approach I suggested you get HTTP Caching "for free."  Said http  
> caching
> would 1.) reduce the load on the WordPress.org API servers and 2.)  
> it would
> speed the end user experience as they page through the multiple  
> pages of the
> same results. Yes, you could cache the values you retrieve from  
> your API but
> you'd have to write caching code and caching on RESTful APIs comes  
> with
> (almost) no extra code.
>
> And that's the thing about RESTful APIs; you get so much of what you'd
> otherwise have to write for free. Basically anything that  
> understands the
> HTTP web can also understand a RESTful web service and add additional
> functionality, such bookmarking services, etc.
>

Yes being RESTful makes caching easy but you don't always need caching.

Caching is something that you consider when performance becomes an  
issue.

You should never optimise early and relying on caching is optimising  
early.

> Of course allowing for retrieval of information about a list of  
> plugins
> given the list of plugin slugs could easily exceed 2000 characters  
> (it is
> ironic that that was my needed use-case.) The way that could be  
> addressed
> would be to allow them to be encoded into the URL for short lists  
> and for
> longer lists split into two HTTP transaction, i.e.
>
>    #1 - POST to "http://restapi.wordpress.org/plugins/sets/new"  
> with the
> POST body being "plugin_list=plugin1&plugin2&plugin3&...&plugin"
>
> The response to the post would be "201 Created" (or maybe "303 See  
> Other",
> I'd need to ask on the rest-discuss list) with a header of "Location:
> http://restapi.wordpress.org/plugins/sets/{set-id}" where {set-id}  
> would be
> the unique ID given to the that set of plugins on the server. Note  
> that the
> first time this POST was submitted for a list of plugins it would  
> create the
> new set; each time after it would simply retrieve the set ID for the
> existing set.
>

I like the way you abuse REST here.

One of the key principles of REST is that it is stateless and here  
you go introducing state to your REST transactions!


>
>> Well, The fact its not a human-use API really..
>> It accepts PHP, it gives back PHP, It makes sense
>> to test from within PHP,
>
> My response is "Every API is a human-use API, or at least should be
> considered one."
>

Not really, you should develop the API you want to use in this  
situation.

It is very difference from someone providing an API on there service  
which should be designed to be human usable.

This API is very specific in its design and usage.

It supports it's use case very well.

>
>> And since the primary use of it is for WP, calling
>> plugins_api('action', (object)array('test'= > 'a'));
>> makes a lot more sense than allowing for browsers/etc.
>
> I'd (respectfully) argue that your implementation will (almost)  
> certainly
> doom it to be so (i.e. only ever used by plugins_api().)
>
> However I can actually envision lots of different use-case for the  
> WordPress
> Plugin API if it were more accessible.  For example, if there were  
> a RESTful
> API with an RSS representation format then plugin authors could use  
> an RSS
> Widget to list their own plugsin on their own blog. Here's the
> (hypothetical) URL that would list your (dd32's) plugins:
>
>    http://restapi.wordpress.org/authors/plugins/dd32.rss
>
> See how the serendipity of the RESTful approach starts to expose  
> itself? :-)

Except that API would have never been written in the first place as  
there was no use-case for it in the first place!

>
> The nice thing about APIs on the server is they are just interfaces  
> to a
> back-end so it's possible and easy to implement multiple APIs to  
> the same
> back-end. Which brings me back to my offer to implement a truly  
> RESTful API
> for WordPress.org plugin repository: I've got lots of the code already
> implemented from other projects; so who do I propose this to? :-)
>
>

Your welcome to do this.

I would recommend if you want to do this to start off by creating  
your own site which hosts the services to prove there usefulness.

All the source data you need is publicly available.

In general while I agree with you that REST is a good approach for  
public web-service APIs you need to recognise when you are developing  
one of them first.

You also need to recognise when you are developing a private api but  
making it available publicly and then you develop the api very close  
to your use-case.

westi
-- 
Peter Westwood
From mikeschinkel at gmail.com  Fri Jan  2 09:27:17 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 09:27:32 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
Message-ID: <b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>

DD32 <wordpress@dd32.id.au> wrote:
> as for caching, My understanding is that on .org they use
> very little caching at all, bbPress handles the high loads
> (or not so high..) fine.. caching would impact users access
> speeds though potentially (But that seems pretty damn quick
> too)

One of my complaints is how slow and tedious the page loading is in the
plugin search section of the admin. That's one of the reasons I decided to
pursue this.

Of course 2.7 is light-years better than prior versions because to install
each plugin they required downloading, ungzipping, untarring, FTPing,
activing, etc. but we humans acclimate to improvements really fast and soon
forget the pain of the past, and then we want more, more, more! :-)

> It could be very usable by people like yourself, on
> the other hand, It'd provide very little benefit to
> myself, or very little benefit over the current
> implementation.

Isn't that one of the beauties of life? We all have so many different
perspectives. If we all wanted the same thing in many cases we'd be fighting
over those same things. :-)

> I'm not trying to be defending of my own code, It
> was mearly the way i chose to do it at the time,
> I'd have done it exactly the way you outlined if
> it was the way i operated (in my sense, over
> engineering the problem) - anyway, Thanks for the
> read, it was good :)

And in no way am I criticizing your code. Though we've never conversed
before today I've seen your contributions have been significant and have
great respect for you. If all *my* prior code were placed under a microscope
I fear I'd not fair anywhere near as well as you would for a similar
analysis. :-)

I only discuss these topics in hopes for potential improvement but also
because defending my ideas helps me learn.

> as for caching, My understanding is that on .org they use
> very little caching at all, bbPress handles the high loads
> (or not so high..) fine.. caching would impact users access
> speeds though potentially (But that seems pretty damn quick
> too)

One of my complaints is how slow and tedious the page loading is in the
plugin search section of the admin. That's one of the reasons I decided to
pursue this.

Of course 2.7 is light-years better than prior versions because to install
each plugin they required downloading, ungzipping, untarring, FTPing,
activing, etc. but we humans acclimate to improvements really fast and soon
forget the pain of the past, and then we want more, more, more! :-)

> It could be very usable by people like yourself, on
> the other hand, It'd provide very little benefit to
> myself, or very little benefit over the current
> implementation.

Isn't that one of the beauties of life? We all have so many different
perspectives. If we all wanted the same thing in many cases we'd be fighting
over those same things. :-)

> I'm not trying to be defending of my own code, It
> was mearly the way i chose to do it at the time,
> I'd have done it exactly the way you outlined if
> it was the way i operated (in my sense, over
> engineering the problem) - anyway, Thanks for the
> read, it was good :)

And in no way am I criticizing your code. Though we've never conversed
before today I've seen your contributions have been significant and have
great respect for you. If all *my* prior code were placed under a microscope
I fear I'd not fair anywhere near as well as you would for a similar
analysis. :-)

I only discuss these topics in hopes for potential improvement but also
because defending my ideas helps me learn.

BTW if I were attempting to continue the debate I'd challenge that "over
engineered" comment, but I won't. :-)

> No reason why you couldnt do that at all IMO

Well I've started the first half and have come across what appear to be bugs
in the API.  I've double-checked my code to make sure it wasn't a stupid
error on my part (although it could still be) and I'm finding two unusual
situations:

1.) Even if you specify "downloads" as one of the request fields it does not
include it in the plugin objects in the response.
2.) If you include "downloadlink" in the request fields the response plugin
objects have a property "download_link." Alternately if you include
"download_link" in the request fields the response plugin objects won't have
any property for "download_link" or "downloadlink."

I don't really need # of downloads (at least not at the moment) and I can
work around issue #2 but I'd think someone would want to fix these?

Here is a pastebin that has a PHP file you can plot into the root for a 2.7
install that will demonstrate the problem:

   http://mikeschinkel.pastebin.com/f45f47aa4

-Mike Schinkel
http://mikeschinkel.com/
From wordpress at dd32.id.au  Fri Jan  2 10:17:52 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan  2 10:18:05 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
Message-ID: <45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>

2009/1/2 Mike Schinkel <mikeschinkel@gmail.com>:
> One of my complaints is how slow and tedious the page loading is in the
> plugin search section of the admin. That's one of the reasons I decided to
> pursue this.
>
> Of course 2.7 is light-years better than prior versions because to install
> each plugin they required downloading, ungzipping, untarring, FTPing,
> activing, etc. but we humans acclimate to improvements really fast and soon
> forget the pain of the past, and then we want more, more, more! :-)

Changing the API wouldnt help your page load times in the least. If
the connection between your server and the api.wordpress.org server is
low bandwidth or has high latency for whatever reason, its going to
impact you, The same as if the .org servers are high-load.

I just checked with a plugin i'm writing, and according to this, the
.org api's return between 120~300ms, which seems perfectly reasonable
to me, mind you, If your server is based on the other side of the
world, then thats not going to help you.. API results return within
~600ms(worst case) for me in Australia.

If the need ever arrises, I'm sure Automattic would lash out and throw
some extra servers in a few geographical different locations to help
load times :) (I'm not saying its needed yet though, but the
Automattic Network guys would know what they're doing.. )

PS: The plugin? http://dd32.id.au/files/core-control.zip , Activate
the "HTTP Access Logger" module to find out how long the requests are
actually taking -- It'll be up on wordpress.org/extend/plugins/
sometime later tonight :)
From mikeschinkel at gmail.com  Fri Jan  2 10:32:35 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 10:32:46 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
Message-ID: <b4dd281c0901020232u18d13bdbh71ecb623f4ef3f11@mail.gmail.com>

"Peter Westwood" <peter.westwood@ftwr.co.uk> wrote:
> Yes being RESTful makes caching easy but you don't always need caching.

No you don't, but you should always plan for it in case you need it.
Implement using a RESTful approach and that planning becomes "free."

> Caching is something that you consider when performance
> becomes an issue. You should never optimise early and
> relying on caching is optimising early.

While I agree with the principle of not optimizing early, I don't agree that
designing for being able to cache is optimizing early. I'm also very sure
that you get a lot of people who would debate you on that assertion over at
the rest-discuss list (http://tech.groups.yahoo.com/group/rest-discuss/)
because that is one of thing that RESTians argue makes REST superior to
RPC-over-HTML.

Basically designing for being able to cache is an architecture concern, not
an optimization concern. Tuning the caching too early is an optimization
concern.

However in this case if I search for "Category" via the WordPress.org Plugin
API multiple times in a short period of time it makes absolutely no sense
for the client to contact the server again each time. It causes the servers
to work unnecessarily and it makes the user experience slower, all when it
simple HTTP header could tell the client to cache for a reasonable amount of
time (10 minutes, 1 hour, 1 days? Not sure how long yet, as that's the
optimization part.)

> I like the way you abuse REST here.
> One of the key principles of REST is that
> it is stateless and here you go introducing
> state to your REST transactions!

Au contraire my good man!  It is not me abusing the principle of
statelessness, it is you misunderstanding the principle of statelessness!

That's okay though, it took me several months on the rest-discuss list to
get it banged into my head so I don't expect many others would get it prior
to similar pain. :-)

First off, the way I described transactions is a RESTful best-practice.
That same approach was advocated in the RESTian's bible, "RESTful Web
Services" By Leonard Richardson and Sam Ruby and published by O'Reilly:
http://oreilly.com/catalog/9780596529260/ You can find it on page 231 in
Chapter 8 "REST Best Practices" section "Transactions."  It has also been
advocated as a best-practice on the rest-discuss list ad-nauseum, here being
one example:

   http://tech.groups.yahoo.com/group/rest-discuss/message/7781

Anyway, as for understanding statelessness your statement confuses state on
the server with state on the client. If you couldn't change state on the
server you'd rarely ever be able to do anything useful on the web. One
example of such state changing, which if a very common, is a shopping cart.
It doesn't not violate REST's statelessness principle to add an item to your
shopping cart and have that state stored on the server. What DOES violate
REST's statelessness principle is if you were to store the items in the
shopping cart in a cookie on the client.
Using cookies violates REST, period. On page 406 of "RESTful Web Services":
"The use of the 'Set-Cookie' header violates the principle if
statelessness." Storing a shopping cart ID that links back to the server
even violates statelessness but we do it on the "human" web because it
improves user experience even though it is less RESTful. For RESTful
services all state that the client needs to know to interact with a server
should be encoded into the URL.

In a RESTful shopping cart app, you've have the following:

   POST http://example.com/cart/new
      {cart-data}
      -> returns 201, Location:http://example.com/cart/{cart-id}

   POST http://example.com/cart/{cart-id}/items/new<http://example.com/cart/%7Bcart-id%7D/items/new>
      {item-data}
      -> returns 201, Location:
http://example.com/cart/{cart-id}/items/{item-id}

So as you can see, using REST in this way does not in any way violate the
statelessness principle.

BTW, the book "RESTFUL PHP Web Services" by Samisa Abeysinghe published by
PACKT http://www.packtpub.com/restful-php-web-services/book is mostly a
regrettable book filled with lots of little errors and where the author has
very little apparent understanding of the nuances of REST.  I was actually
sent a copy of that book by the publisher at his offer in exchange for
writing a blog post about it (since I've blogged about REST and PHP in the
past) and I'm having a hard time making myself write that post because I
can't say much good for the book. I will say it has some useful code (that I
assume works) that will give you some shortcuts, but don't under any
circumstances read PACKT's  "RESTFUL PHP Web Services" *before* reading
O'Reilly's "RESTful Web Services."

>> My response is "Every API is a human-use API, or at least should be
>> considered one."
>>
> Not really, you should develop the API you want to use in
> this situation. It is very difference from someone providing
> an API on there service which should be designed to be human
> usable.

I don't follow your logic here.

> This API is very specific in its design and usage.

Which is a shame since it could be used for so much more.

> It supports it's use case very well.

I assert that it does not support its use case as well as it (easily) could.

> Except that API would have never been written in the first
> place as there was no use-case for it in the first place!

But that's the difference between a visionary API and one that is not.  Yes,
you can easily argue that this API didn't have another use-case, and what I
argued was that because of that short-sightedness, it likely never will (as
is.)

BTW, please take all my words to be "matter of fact" and please don't infer
any sarcasm or condescension. I very much mean to be respectful and just
want to have a debate on the technical merits but know that sometimes it can
be very hard to do that on a mailing list when you don't know the person.

It's my belief that optimizing the sociology of technology is the key to
value creation now and in the foreseeable future. Twitter is a perfect
example of a service that got so many things right; the use-case, the
usability, the API, etc. WordPress has gotten so many things right (UI
usability, use-cases, the hook system, etc.) it's a shame for the
WordPress.org API not to be able to be more.

> I would recommend if you want to do this to start off
> by creating your own site which hosts the services to
> prove there usefulness.
> All the source data you need is publicly available.

I'm actually working on exactly that right now! :-)

> You also need to recognise when you are developing a
> private api but making it available publicly and then
> you develop the api very close to your use-case.

We may end up agreeing to disagree on this but I strongly believe that even
private API should be designed RESTfully. Hopefully you'll see the benefits
after I launch my version. (Forgive me, but if we do disagree now my
assumption is you'll come around within in a few years to appreciating the
value of REST as it proliferates and more people start actually understand
it rather than assume they understand it. Note that latter part is not me
being snarky, it's the process one takes on the rest-discuss list where the
RESTians constantly tell you "You don't get it!" until after a long time you
finally do. :-)

-Mike Schinkel
http://mikeschinkel.com

P.S. One final note: even though I advocate for "better" I do understand
"what gets it done."  But there's a difference between saying "That is just
what it took to get it done" and "What it took to just get it done is the
best way to do it."  It's only the latter type of assertions I will usually
challenge.
From mikeschinkel at gmail.com  Fri Jan  2 10:51:56 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 10:52:22 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
	<45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>
Message-ID: <b4dd281c0901020251s5060d577x16b75aa413fed327@mail.gmail.com>

DD32 <wordpress@dd32.id.au> wrote:
> Changing the API wouldnt help your page load times in the
> least. If the connection between your server and the
> api.wordpress.org server is low bandwidth or has high
> latency for whatever reason, its going to impact you,
> The same as if the .org servers are high-load.

Not exactly. Let me give you a use-case: say I'm research Twitter plugins
and there are 10 of them. Assuming the search results are good, I might go
back through the search 10 times to install each one. With HTTP caching
using a TTL of 1 hour, if I installed them all in 1 hour my server would
never have to call api.wordpress.org more than once. Currently in that
use-case it calls it 10 times.

And that use-case was not contrived. That is exactly what I was doing that
caused me to get frustrated with both the search order and the time it took
for the pages to load.

BTW, one thing unrelated to REST or cachine that could greatly improve that
use-case (which I haven't looked into yet) would be to make it so that once
the plugin is activated it returns back to the plugin search page the user
was last viewing. This would be very helpful when trying to install several
similar plugins for evaluation.

Or even better, let me put the plugins into a "basket" and then install and
activate them all at once!

> I just checked with a plugin i'm writing, and according to this,
> the .org api's return between 120~300ms, which seems perfectly
> reasonable to me, mind you, If your server is based on the other
> side of the  world, then thats not going to help you.. API results
> return within ~600ms(worst case) for me in Australia.

When a browser calls an HTTP page which then calls another HTTP page, those
delays can add-up to a slow user experience especially if thhe user is on a
slow link or the server is hosted on a congested shared server. (Speaking of
which, my guess is you have some pretty good bandwidth?)

We can split hairs over the time it takes for any specific use-case but
fundamentally I'm leaning on people like Roy Fielding and Mark Nottingham
who are architects of the web and who have explained the benefits of HTTP
caching many times.

Matter of fact, I should just give you the link to Mark Nottingham's
"Caching Tutorial for Web Authors and Webmasters."  I'd be interested to
know if you will still think the same about the relative benefits of caching
after you read it, assuming you have the time to do so:

   http://www.mnot.net/cache_docs/

> If the need ever arrises, I'm sure Automattic would lash out and
> throw some extra servers in a few geographical different locations
> to help load times :)

Why architect software that requires more hardware when it could just as
easily be architected where it doesn't require more?  Hardware and bandwidth
costs money where money seems to be in short supply these days; at least
here in the Bush's America it is. ;-)

> (I'm not saying its needed yet though, but the
> Automattic Network guys would know what they're doing.. )

There's a lot of smart people on the web. And because 'the web' is such a
broad topic, nobody has it all figured out. Not even Google or Yahoo, though
they come close. :-)

> The plugin? http://dd32.id.au/files/core-control.zip ,
> Activate the "HTTP Access Logger" module to find out
> how long the requests are actually taking -- It'll be
> up on wordpress.org/extend/plugins/ sometime later
> tonight :)

COOL!
-Mike Schinkel
http://mikeschinkel.com
From daiv at daivmowbray.com  Fri Jan  2 11:38:33 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Fri Jan  2 11:38:52 2009
Subject: [wp-hackers] wp_list_categories()
In-Reply-To: <b4dd281c0901011624u45b2f93g7896350da0f2becd@mail.gmail.com>
References: <b4dd281c0812271726w718bb87bgefd17389f6397e6d@mail.gmail.com>
	<b4dd281c0812272217r78df4968jdd854e1a370ae032@mail.gmail.com>
	<47276776-0D88-4B85-B541-DB4A810B742D@daivmowbray.com>
	<74a8f8d80812301806w2e8257dbu96598f93a36e2ef3@mail.gmail.com>
	<FDBDF7D5-632F-4AD3-A5A1-4EA3AEBDEB38@daivmowbray.com>
	<6dbcd2670812311139p21c0e641kac1f0344be7de450@mail.gmail.com>
	<b4dd281c0812311441v33d22cat286c33c06ad42715@mail.gmail.com>
	<6dbcd2670812311457m2b10f3eaud77835d7435b920a@mail.gmail.com>
	<b4dd281c0812311545i1ddf4c7etce417f1eab7cbc81@mail.gmail.com>
	<A2BF8974-7BFD-4470-B495-5FF7894EBD4E@daivmowbray.com>
	<b4dd281c0901011624u45b2f93g7896350da0f2becd@mail.gmail.com>
Message-ID: <E2E9E298-A3E0-4300-B29C-DAF6211AB833@daivmowbray.com>


Sorry about the Gaaack,
and yes make_def_list is the entry function.
This code is inside of a multiple widget, ie options are numbered.

In my initial function which does the DB query I first get options:
$options = array();
$options = get_option('My_widget_options');
extract($options[$number]);

Then I go through the exclusions and ordering,

if ($catSort=='catName') {
			$catSortColumn="ORDER BY $wpdb->terms.name";
etc.

Then I construct the query based on order type options.
$catquery = "SELECT $wpdb->term_taxonomy.count as 'count',
			$wpdb->terms.term_id, $wpdb->terms.name, $wpdb->terms.slug,
			$wpdb->term_taxonomy.parent, $wpdb->term_taxonomy.description FROM
			$wpdb->terms, $wpdb->term_taxonomy WHERE $wpdb->terms.term_id =
			$wpdb->term_taxonomy.term_id AND $wpdb->terms.name != 'Blogroll' AND
			$wpdb->term_taxonomy.taxonomy = 'category' $inExcludeQuery  
$catSortColumn
			$catSortOrder";
		$postquery = "SELECT $wpdb->terms.term_id, $wpdb->terms.name,
			$wpdb->terms.slug, $wpdb->term_taxonomy.count, $wpdb->posts.id,
			$wpdb->posts.post_title, $wpdb->posts.post_name,
			date($wpdb->posts.post_date) as 'date' FROM $wpdb->posts, $wpdb- 
 >terms,
			$wpdb->term_taxonomy, $wpdb->term_relationships  WHERE $wpdb- 
 >posts.id =
			$wpdb->term_relationships.object_id AND $wpdb- 
 >posts.post_status='publish'
			AND $wpdb->terms.term_id = $wpdb->term_taxonomy.term_id AND
			$wpdb->term_relationships.term_taxonomy_id =
			$wpdb->term_taxonomy.term_taxonomy_id AND $wpdb- 
 >term_taxonomy.taxonomy =
			'category' $isPage $postSortColumn $postSortOrder";
			
			  $categories = $wpdb->get_results($catquery);			
			  $posts = $wpdb->get_results($postquery);


I use this function to print out arrays:

function print_format_array($array_name) {
		echo 'This array contains: ';
	  echo '<pre>';
	  ksort($array_name);
	  print_r($array_name);
	  echo '</pre>';
	  echo '--- end array listing ----';
	}

options:
http://pastebin.com/m3c4cccae
Posts:
http://pastebin.com/m4d5c61bc
Categories:
http://pastebin.com/m5f33ebdf

function getDepth assigns a depth to each category,

The difficult part of all this for me is to plan the logic.
I appreciate any help or suggestions.
Thanx.


On Jan 2, 2009, at 1:24 AM, Mike Schinkel wrote:

> Gaaack!  That's a lot of code.
>
> Which is your entry point?  make_def_list()?   Is yes, run the  
> following
> code for me in the same place you'd call that function and paste the  
> output
> to http://pastebin.com/ and reply with the URL it gives you:


----------
Daiv Mowbray
daiv@daivmowbray.com
----------


From mikeschinkel at gmail.com  Fri Jan  2 13:03:18 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 13:03:32 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901020251s5060d577x16b75aa413fed327@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
	<45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>
	<b4dd281c0901020251s5060d577x16b75aa413fed327@mail.gmail.com>
Message-ID: <b4dd281c0901020503v5a095fd2y4d4ea59d7e039432@mail.gmail.com>

One thing I'm finding is the data returned for the plugs is not very clean
(go figure!)   I had to apply this function to name, author, and description
to get it to write correctly to my local MySQL testing UTF8-encoded database
I'm using for testing:

 function strip_hi_bits($string) {
  $string = utf8_decode($string);
  if (preg_match("/[\x80-\xff]/", $string)) {
   for ($i=0; $i < strlen($string); $i++) {
    if (ord($string{$i})>126) {
     $string = substr_replace($string, '?', $i, 1);
    }
   }
  }
  return $string;
 }

I'm sure I could probably have salvaged of the non-English characters if I
just understood charsets and encoding better, but that is a task for another
day.

Also, while most authors have the same format for their links, some have
decided to be complex about it making it pretty impossible to extract the
author reliably from the link:

     *name*
 *slug*
 *author*
 DashboardZone
 dashboardzone
 Mark Phillips of <a href="http://www.dashboardzone.com/">Dashboards</a>
Zone and Nilesh Jethwa of <a href="http://www.infocaptor.com">Dashboard
Software</a>
 Genki Announcement
 genki-announcement
 Genkisan</a> - <a href="http://wp.mmrt-jp.net/">i18n patched by
Masayan</a><a>
 Hidden Content
 hidden-content
 Nikolay aka 'cmepthuk'</a>, ??????? ?? <a href="http://sonika.ru/blog/
">Sonika
 WP Authors
 wp-authors
 Robert Tsai</a>; i18n/l10n by <a href="http://aufBlog.de/">Gerhard Lehnhoff
 WP-Modore
 wp-modore
 Hiromasa <a href="http://wp.mmrt-jp.net/">& Masayan</a>

Anyway, just FYI.

-Mike Schinkel
http://mikeschinkel.com
From mikeschinkel at gmail.com  Fri Jan  2 13:13:10 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Fri Jan  2 13:13:21 2009
Subject: [wp-hackers] wp_list_categories()
In-Reply-To: <E2E9E298-A3E0-4300-B29C-DAF6211AB833@daivmowbray.com>
References: <b4dd281c0812271726w718bb87bgefd17389f6397e6d@mail.gmail.com>
	<74a8f8d80812301806w2e8257dbu96598f93a36e2ef3@mail.gmail.com>
	<FDBDF7D5-632F-4AD3-A5A1-4EA3AEBDEB38@daivmowbray.com>
	<6dbcd2670812311139p21c0e641kac1f0344be7de450@mail.gmail.com>
	<b4dd281c0812311441v33d22cat286c33c06ad42715@mail.gmail.com>
	<6dbcd2670812311457m2b10f3eaud77835d7435b920a@mail.gmail.com>
	<b4dd281c0812311545i1ddf4c7etce417f1eab7cbc81@mail.gmail.com>
	<A2BF8974-7BFD-4470-B495-5FF7894EBD4E@daivmowbray.com>
	<b4dd281c0901011624u45b2f93g7896350da0f2becd@mail.gmail.com>
	<E2E9E298-A3E0-4300-B29C-DAF6211AB833@daivmowbray.com>
Message-ID: <b4dd281c0901020513y11c170c0n967a866fed42a29a@mail.gmail.com>

Daiv:

My next question is, is it fair to say these are your two SQL queries?
(They execute on my v2.7 test install):

SELECT
 wp_term_taxonomy.count as 'count',
 wp_terms.term_id,
 wp_terms.name,
 wp_terms.slug,
 wp_term_taxonomy.parent,
 wp_term_taxonomy.description
FROM
 wp_terms,  wp_term_taxonomy
WHERE
 wp_terms.term_id = wp_term_taxonomy.term_id AND
 wp_terms.name != 'Blogroll' AND
 wp_term_taxonomy.taxonomy = 'category'
ORDER BY
 wp_terms.name

SELECT  wp_terms.term_id,
 wp_terms.name,
 wp_terms.slug,
 wp_term_taxonomy.count,
 wp_posts.id,
 wp_posts.post_title,
 wp_posts.post_name,
 date(wp_posts.post_date) as 'date'
FROM
 wp_posts,
 wp_terms,
 wp_term_taxonomy,
 wp_term_relationships
WHERE
 wp_posts.id = wp_term_relationships.object_id AND
 wp_posts.post_status='publish' AND
 wp_terms.term_id = wp_term_taxonomy.term_id AND
 wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id
AND
 wp_term_taxonomy.taxonomy = 'category'

-Mike Schinkel
http://mikeschinkel.com
From daiv at daivmowbray.com  Fri Jan  2 15:35:57 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Fri Jan  2 15:36:09 2009
Subject: [wp-hackers] wp_list_categories()
In-Reply-To: <b4dd281c0901020513y11c170c0n967a866fed42a29a@mail.gmail.com>
References: <b4dd281c0812271726w718bb87bgefd17389f6397e6d@mail.gmail.com>
	<74a8f8d80812301806w2e8257dbu96598f93a36e2ef3@mail.gmail.com>
	<FDBDF7D5-632F-4AD3-A5A1-4EA3AEBDEB38@daivmowbray.com>
	<6dbcd2670812311139p21c0e641kac1f0344be7de450@mail.gmail.com>
	<b4dd281c0812311441v33d22cat286c33c06ad42715@mail.gmail.com>
	<6dbcd2670812311457m2b10f3eaud77835d7435b920a@mail.gmail.com>
	<b4dd281c0812311545i1ddf4c7etce417f1eab7cbc81@mail.gmail.com>
	<A2BF8974-7BFD-4470-B495-5FF7894EBD4E@daivmowbray.com>
	<b4dd281c0901011624u45b2f93g7896350da0f2becd@mail.gmail.com>
	<E2E9E298-A3E0-4300-B29C-DAF6211AB833@daivmowbray.com>
	<b4dd281c0901020513y11c170c0n967a866fed42a29a@mail.gmail.com>
Message-ID: <284A8B45-2E98-4A26-A0C3-8B59515E54B1@daivmowbray.com>


On Jan 2, 2009, at 2:13 PM, Mike Schinkel wrote:

> Daiv:
>
> My next question is, is it fair to say these are your two SQL queries?
> (They execute on my v2.7 test install):


That looks correct to me,
I have :
$wpdb->term_taxonomy.count as 'count',
for example. and I take it that I don't need to put the $wpdb->
but instead:
wp_term_taxonomy.count as 'count',

----------
Daiv Mowbray
daiv@daivmowbray.com
----------


From otto at ottodestruct.com  Fri Jan  2 16:49:15 2009
From: otto at ottodestruct.com (Otto)
Date: Fri Jan  2 16:49:27 2009
Subject: [wp-hackers] Running a script
In-Reply-To: <349fe48b0901010437h3dd31e9i842d17a6ad55e652@mail.gmail.com>
References: <FE25A972-2A78-4E70-9473-BB425DAF688E@gmail.com>
	<8f93a7390901010022j2a44647bxa90e1ab23749dee3@mail.gmail.com>
	<349fe48b0901010437h3dd31e9i842d17a6ad55e652@mail.gmail.com>
Message-ID: <161617690901020849u3b95e7a8jfe48c668e4e6402f@mail.gmail.com>

http://codex.wordpress.org/Function_Reference/wp_schedule_event


On Thu, Jan 1, 2009 at 6:37 AM, scribu <scribu@gmail.com> wrote:
> Also take a look at wp_cron. (Can't seem to find it on the Codex).
>
> On Thu, Jan 1, 2009 at 10:22 AM, Viper007Bond <viper@viper007bond.com>wrote:
>
>> http://codex.wordpress.org/Plugin_API
>>
From mikeschinkel at gmail.com  Sat Jan  3 00:17:58 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Sat Jan  3 00:18:08 2009
Subject: [wp-hackers] wp_list_categories()
In-Reply-To: <284A8B45-2E98-4A26-A0C3-8B59515E54B1@daivmowbray.com>
References: <b4dd281c0812271726w718bb87bgefd17389f6397e6d@mail.gmail.com>
	<6dbcd2670812311139p21c0e641kac1f0344be7de450@mail.gmail.com>
	<b4dd281c0812311441v33d22cat286c33c06ad42715@mail.gmail.com>
	<6dbcd2670812311457m2b10f3eaud77835d7435b920a@mail.gmail.com>
	<b4dd281c0812311545i1ddf4c7etce417f1eab7cbc81@mail.gmail.com>
	<A2BF8974-7BFD-4470-B495-5FF7894EBD4E@daivmowbray.com>
	<b4dd281c0901011624u45b2f93g7896350da0f2becd@mail.gmail.com>
	<E2E9E298-A3E0-4300-B29C-DAF6211AB833@daivmowbray.com>
	<b4dd281c0901020513y11c170c0n967a866fed42a29a@mail.gmail.com>
	<284A8B45-2E98-4A26-A0C3-8B59515E54B1@daivmowbray.com>
Message-ID: <b4dd281c0901021617v159bba5fm96e33ea74ac45460@mail.gmail.com>

Daiv Mowbray <daiv@daivmowbray.com> wrote:


> That looks correct to me,
> I have :
> $wpdb->term_taxonomy.count as 'count',
> for example. and I take it that I don't need to put the $wpdb->
> but instead...


No, no!  Actually using $wpdb-> is a WordPress best-practice.  However, I
can't test SQL code with $wpdb-> in it in a MySQL client so I converted your
code to be able to test it w/o having to write a test PHP app.

Also, we'll continue this off-list since you emailed me directly requesting
so.

-Mike Schinkel
http://mikeschinkel
From mikael at cylinderlabs.se  Sat Jan  3 00:57:25 2009
From: mikael at cylinderlabs.se (Mikael Hedengren)
Date: Sat Jan  3 00:57:32 2009
Subject: [wp-hackers] How find the latest uploaded pictures
Message-ID: <ab03dc280901021657s334a7d37ob61d2ecf567f5f29@mail.gmail.com>

Hi,
Does anybody know the best way to find the latest uploaded pictures with
their corresponding URL?
I would like to present them like the media gallery with a picture and when
a picture is selected its URL will be collected.

I am not interested in any specific post connected to the picture but only
the picture and its URL.

Can anybody point me in the right direction?
Thanks!
From wordpress at dd32.id.au  Sat Jan  3 01:02:13 2009
From: wordpress at dd32.id.au (DD32)
Date: Sat Jan  3 01:02:28 2009
Subject: [wp-hackers] How find the latest uploaded pictures
In-Reply-To: <ab03dc280901021657s334a7d37ob61d2ecf567f5f29@mail.gmail.com>
References: <ab03dc280901021657s334a7d37ob61d2ecf567f5f29@mail.gmail.com>
Message-ID: <45055a190901021702y3fea142esacc4b12089f74bc9@mail.gmail.com>

Heres some code i used in my previous theme:
http://wordpress.pastebin.com/m377f7aba

You can strip out the group-by filter if your not after a single-image
per post..
& you'll need to modify it to suit your needs obviously :)

2009/1/3 Mikael Hedengren <mikael@cylinderlabs.se>:
> Hi,
> Does anybody know the best way to find the latest uploaded pictures with
> their corresponding URL?
> I would like to present them like the media gallery with a picture and when
> a picture is selected its URL will be collected.
>
> I am not interested in any specific post connected to the picture but only
> the picture and its URL.
>
> Can anybody point me in the right direction?
> Thanks!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikael at cylinderlabs.se  Sat Jan  3 11:42:57 2009
From: mikael at cylinderlabs.se (Mikael Hedengren)
Date: Sat Jan  3 11:43:41 2009
Subject: [wp-hackers] How find the latest uploaded pictures
Message-ID: <ab03dc280901030342m1a0b1d8cuae773ef261c380bb@mail.gmail.com>

Thanks DD32, I will try this.

I  have never used get_posts before; is there a way to get the pictures in
descending date order and also get a certain interval of posts if there are
a lot of them?


>Heres some code i used in my previous theme:
>http://wordpress.pastebin.com/m377f7aba
>
>You can strip out the group-by filter if your not after a single-image
>per post..
>& you'll need to modify it to suit your needs obviously :)

>>2009/1/3 Mikael Hedengren <mikael at cylinderlabs.se>:
>> Hi,
>> Does anybody know the best way to find the latest uploaded pictures with
>> their corresponding URL?
>> I would like to present them like the media gallery with a picture and
when
>> a picture is selected its URL will be collected.
>>
>> I am not interested in any specific post connected to the picture but
only
>> the picture and its URL.
>>
>> Can anybody point me in the right direction?
>> Thanks!
From r at schestowitz.com  Sat Jan  3 11:45:51 2009
From: r at schestowitz.com (Roy Schestowitz)
Date: Sat Jan  3 11:47:58 2009
Subject: [wp-hackers] WP-Hackers Stats for January 2009
Message-ID: <495F4FEF.40404@schestowitz.com>

  ?  Times are Greenwich Mean Time (GMT) +0:00

  ?  Statistics span a period of one month

  ?  Subject line formatted consistently "WP-Hackers Stats for <MONTH>
<YEAR>"

  ?  Killfile <subject contains "WP-Hackers Stats for "> if uninterested
____________________________________________________________

Stats for wp-hackers
~~~~~~~~~~~~~~~~~~~~
***** People who have written most messages:
+----+-----Author-----------------------------------+--Msg-+-Percent-+
|  1 | jeffro jeffro2pt0.com                        |   58 |  8.08 % |
|  2 | peter avirtualhome.com                       |   44 |  6.13 % |
|  3 | scribu gmail.com                             |   43 |  5.99 % |
|  4 | wordpress santosj.name                       |   30 |  4.18 % |
|  5 | frank bueltge.de                             |   28 |  3.90 % |
|  6 | chris.hearn01 ntlworld.com                   |   25 |  3.48 % |
|  7 | mikeschinkel gmail.com                       |   24 |  3.34 % |
|  8 | elflop googlemail.com                        |   23 |  3.20 % |
|  9 | andre.renaut gmail.com                       |   22 |  3.06 % |
| 10 | niladam gmail.com                            |   20 |  2.79 % |
| 11 | ozh planetozh.com                            |   19 |  2.65 % |
| 12 | repost_08 yahoo.com                          |   19 |  2.65 % |
| 13 | wp-hackers striderweb.com                    |   18 |  2.51 % |
| 14 | dangayle gmail.com                           |   18 |  2.51 % |
| 15 | info mindsharestudios.com                    |   17 |  2.37 % |
| 16 | dino duechiacchiere.it                       |   15 |  2.09 % |
| 17 | wordpress dd32.id.au                         |   14 |  1.95 % |
| 18 | ron cavemonkey50.com                         |   13 |  1.81 % |
| 19 | jayarjo gmail.com                            |   13 |  1.81 % |
| 20 | gaarai gaarai.com                            |   13 |  1.81 % |
| 21 | vicent vcubells.net                          |   11 |  1.53 % |
| 22 | otto ottodestruct.com                        |   11 |  1.53 % |
| 23 | helgi binary.is                              |   10 |  1.39 % |
| 24 | johnbillion+wp gmail.com                     |   10 |  1.39 % |
| 25 | fitztrev gmail.com                           |    8 |  1.11 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  192 | 26.74 % |
+----+----------------------------------------------+------+---------+

***** Best authors, by total size of their messages (w/o quoting):
+----+-----Author-------------------------------------------+-KBytes-+
|  1 | connect2shashi gmail.com                             |  139.1 |
|  2 | jeffro jeffro2pt0.com                                |   52.1 |
|  3 | peter avirtualhome.com                               |   49.3 |
|  4 | wordpress santosj.name                               |   27.9 |
|  5 | helgi binary.is                                      |   25.4 |
|  6 | mikeschinkel gmail.com                               |   25.3 |
|  7 | runner1031 gmail.com                                 |   23.2 |
|  8 | chris.hearn01 ntlworld.com                           |   21.3 |
|  9 | scribu gmail.com                                     |   20.9 |
| 10 | mrtorbert gmail.com                                  |   17.7 |
| 11 | niladam gmail.com                                    |   16.9 |
| 12 | elflop googlemail.com                                |   16.8 |
| 13 | johnbillion+wp gmail.com                             |   15.0 |
| 14 | ron cavemonkey50.com                                 |   14.5 |
| 15 | repost_08 yahoo.com                                  |   14.3 |
| 16 | wp-hackers striderweb.com                            |   14.2 |
| 17 | andre.renaut gmail.com                               |   13.2 |
| 18 | dino duechiacchiere.it                               |   13.1 |
| 19 | frank bueltge.de                                     |   12.1 |
| 20 | gaarai gaarai.com                                    |   11.9 |
| 21 | wordpress dd32.id.au                                 |   11.8 |
| 22 | dangayle gmail.com                                   |   10.2 |
| 23 | ozh planetozh.com                                    |    9.5 |
| 24 | jayarjo gmail.com                                    |    8.8 |
| 25 | info mindsharestudios.com                            |    6.7 |
+----+------------------------------------------------------+--------+

***** Best authors, by average size of their message (w/o quoting):
+----+-----Author--------------------------------------------+-bytes-+
|  1 | connect2shashi gmail.com                              | 20346 |
|  2 | runner1031 gmail.com                                  |  4755 |
|  3 | mrtorbert gmail.com                                   |  3018 |
|  4 | helgi binary.is                                       |  2599 |
|  5 | kontakt weinschenker.name                             |  1578 |
|  6 | johnbillion+wp gmail.com                              |  1533 |
|  7 | gamito gmail.com                                      |  1512 |
|  8 | amystephen gmail.com                                  |  1283 |
|  9 | paramaggarwal gmail.com                               |  1200 |
| 10 | foolistbar googlemail.com                             |  1190 |
| 11 | peter avirtualhome.com                                |  1148 |
| 12 | ron cavemonkey50.com                                  |  1140 |
| 13 | a.haakmat chello.nl                                   |  1139 |
| 14 | mikeschinkel gmail.com                                |  1079 |
| 15 | brian nerdlife.net                                    |  1021 |
| 16 | yahgrp poplarware.com                                 |  1004 |
| 17 | michael.joseph.cohen gmail.com                        |   992 |
| 18 | jwhavican gmail.com                                   |   965 |
| 19 | wordpress santosj.name                                |   950 |
| 20 | gaarai gaarai.com                                     |   933 |
| 21 | jeffro jeffro2pt0.com                                 |   920 |
| 22 | dino duechiacchiere.it                                |   894 |
| 23 | mark.cunningham gmail.com                             |   891 |
| 24 | chris.hearn01 ntlworld.com                            |   871 |
| 25 | niladam gmail.com                                     |   867 |
+----+-------------------------------------------------------+-------+

***** Table showing the most successful subjects:
+----+----Subject-----------------------------------+--Msg-+-Percent-+
|  1 | [wp-hackers] Removal Of Over 200 Themes?     |   58 |  8.08 % |
|  2 | [wp-hackers] Unique permalinks vs. unique po |   30 |  4.18 % |
|  3 | [wp-hackers] Codex function page proposal    |   29 |  4.04 % |
|  4 | [wp-hackers] Minify Scripts and CSS and why  |   25 |  3.48 % |
|  5 | [wp-hackers] Known when on Comment page x?   |   23 |  3.20 % |
|  6 | [wp-hackers] Slow loading WordPress          |   21 |  2.92 % |
|  7 | [wp-hackers] XSS vuln in wordpress 2.7 ?     |   20 |  2.79 % |
|  8 | [wp-hackers] wp_list_categories()            |   14 |  1.95 % |
|  9 | [wp-hackers] Using eval within Wordpress for |   12 |  1.67 % |
| 10 | [wp-hackers] trying to understand the Admin  |   12 |  1.67 % |
| 11 | [wp-hackers] Sitemap XML with class          |   12 |  1.67 % |
| 12 | [wp-hackers] Best Practices for Caching Plug |   12 |  1.67 % |
| 13 | [wp-hackers] Permalink problems              |   11 |  1.53 % |
| 14 | [wp-hackers] Possible to deactivate Dashboar |   11 |  1.53 % |
| 15 | [wp-hackers] Redirection in wp 2.7           |   11 |  1.53 % |
| 16 | [wp-hackers] any plan about bufferizing the  |   11 |  1.53 % |
| 17 | [wp-hackers] Database padded with junk conte |   11 |  1.53 % |
| 18 | [wp-hackers] Hide category                   |   10 |  1.39 % |
| 19 | [wp-hackers] Roles and capabilities          |   10 |  1.39 % |
| 20 | [wp-hackers] 'Password Protected' - bug or f |   10 |  1.39 % |
| 21 | [wp-hackers] New on the list, want to clean  |   10 |  1.39 % |
| 22 | [wp-hackers] My new utility plugin for plugi |   10 |  1.39 % |
| 23 | [wp-hackers] Restrict users to given categor |    9 |  1.25 % |
| 24 | [wp-hackers] Any alternative to $_SERVER['QU |    9 |  1.25 % |
| 25 | [wp-hackers] Problems with shortcode functio |    9 |  1.25 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  318 | 44.29 % |
+----+----------------------------------------------+------+---------+

***** Most used email clients:
+----+----Mailer------------------------------------+--Msg-+-Percent-+
|  1 | Google Mail/Other                            |  377 | 52.51 % |
|  2 | Thunderbird 2.0.0.18 (Windows/20081105)      |  155 | 21.59 % |
|  3 | Claws Mail 3.6.1 (GTK+ 2.14.4; i486-pc-linux |   44 |  6.13 % |
|  4 | Apple Mail (2.929.2)                         |   44 |  6.13 % |
|  5 | Microsoft Office Outlook 12.0                |   22 |  3.06 % |
|  6 | Thunderbird 2.0.0.12 (Windows/20080213)      |   20 |  2.79 % |
|  7 | Thunderbird 2.0.0.18 (X11/20081125)          |   18 |  2.51 % |
|  8 | Apple Mail (2.930.3)                         |    7 |  0.97 % |
|  9 | Openwave WebEngine, version 2.8.19 (webedge2 |    4 |  0.56 % |
| 10 | G2/1.0                                       |    4 |  0.56 % |
| 11 | Hamster-Pg/1.25                              |    4 |  0.56 % |
| 12 | Turnpike/6.07-M (<rJPGtHQjkIvRXEx9Z9BTX3FTOK |    3 |  0.42 % |
| 13 | Mutt                                         |    3 |  0.42 % |
| 14 | Unknown (No Version)                         |    2 |  0.28 % |
| 15 | Industrious bit-pushing elves                |    2 |  0.28 % |
| 16 | iPhone Mail (5G77)                           |    2 |  0.28 % |
| 17 | Microsoft Outlook Express 6.x                |    2 |  0.28 % |
| 18 | Thunderbird 2.0.0.18 (Macintosh/20081105)    |    2 |  0.28 % |
| 19 | Microsoft-Entourage/11.4.0.080122            |    1 |  0.14 % |
| 20 | Mozilla/5.x                                  |    1 |  0.14 % |
| 21 | Evolution 2.22.3.1                           |    1 |  0.14 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |    0 |  0.00 % |
+----+----------------------------------------------+------+---------+

***** Table of maximal quoting:
+----+-----Author------------------------------------------+-Percent-+
|  1 | beyondnet cslanet.org                               | 90.35 % |
|  2 | charles cefm.ca                                     | 88.92 % |
|  3 | brian nerdlife.net                                  | 85.10 % |
|  4 | regulatethis gmail.com                              | 82.52 % |
|  5 | lvillarino gmail.com                                | 82.05 % |
|  6 | god.dreams gmail.com                                | 78.63 % |
|  7 | jayarjo gmail.com                                   | 78.05 % |
|  8 | otto ottodestruct.com                               | 74.56 % |
|  9 | navjotjsingh gmail.com                              | 72.20 % |
| 10 | wp-hackers itsananderson.com                        | 71.21 % |
| 11 | gaarai gaarai.com                                   | 70.31 % |
| 12 | amystephen gmail.com                                | 64.00 % |
| 13 | viper viper007bond.com                              | 63.41 % |
| 14 | joost yoast.com                                     | 59.70 % |
| 15 | chris.hearn01 ntlworld.com                          | 59.40 % |
| 16 | wordpress dd32.id.au                                | 59.07 % |
| 17 | kparsell-wp kpdesign.net                            | 59.04 % |
| 18 | peter.westwood ftwr.co.uk                           | 58.64 % |
| 19 | ryanmccue cubegames.net                             | 52.57 % |
| 20 | andrew fergcorp.com                                 | 52.16 % |
| 21 | photofantaisie gmail.com                            | 46.40 % |
| 22 | mike_walsh mindspring.com                           | 42.53 % |
| 23 | harish.mlists gmail.com                             | 40.09 % |
| 24 | lynne.pope gmail.com                                | 39.01 % |
| 25 | wp xentek.net                                       | 38.16 % |
+----+-----------------------------------------------------+---------+
|    | average                                             | 25.95 % |
+----+-----------------------------------------------------+---------+

***** Graph showing number of messages written during hours of day:

100% ---#--------------------------------------------- - 72
 90% ---#---------------------------------------#---#- msgs
 80% ---#-----------------#---------------------#---#-
 70% ---#-----------------#---#-----------------#---#-
 60% ---#-----------------#---#-------------#---#---#-
 50% ---#-----------------#---#---#---------#---#-#-#-
 40% ---#---------------#-#---#-#-#-------#-#---#-#-#-
 30% -#-#---------------#-#-#-#-#-#-#-#-#-#-#---#-#-#-
 20% -#-#---------------#-#-#-#-#-#-#-#-#-#-#---#-#-#-
 10% -#-#-#-------------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
      * * * * * * * * * * * * * * * * * * * * * * * *
hour  0         5           11          17          23


***** Graph showing number of messages written during days of month:

100% -----------------------#--------------------------------------- - 88
 90% -----------------------#--------------------------------------- msgs
 80% -----------------------#---------------------------------------
 70% -----------------------#---#-----------------------------------
 60% -#---------------------#---#-----------------------------------
 50% -#---------------------#---#-#-------------#-------------------
 40% -#---------------------#---#-#-#-----------#-------------------
 30% -#-------------#-------#---#-#-#-----------#-#-------#---------
 20% -#-#-----------#-#---#-#---#-#-#-----------#-#-------#-----#---
 10% -#-#-----#---#-#-#-#-#-#-#-#-#-#-#---#-#---#-#-#---#-#-#-#-#-#-
      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 day  1         6           12          18          24            31


***** Graph showing number of messages written during days of week:

100% -#--------------------------- - 206
 90% -#--------------------------- msgs
 80% -#---------------------------
 70% -#---------------------------
 60% -#---------------#-----------
 50% -#---#-----------#-----------
 40% -#---#-----------#-------#---
 30% -#---#-----------#-------#---
 20% -#---#---#-------#---#---#---
 10% -#---#---#---#---#---#---#---
      *   *   *   *   *   *   *
     Mon Tue Wed Thu Fri Sat Sun


***** Maximal quoting:
      Author     : charles cefm.ca
      Subject    : [wp-hackers] Codex function page proposal
      Date       : Sun, 28 Dec 2008 11:04:13 -0400
      Quote ratio: 94.04% / 5825 bytes

***** Longest message:
      Author     : connect2shashi gmail.com
      Subject    : [wp-hackers] hi all... a hack,
      Date       : Mon, 8 Dec 2008 11:56:19 +0530
      Size       : 23780 bytes

***** Most successful subject:
      Subject    : [wp-hackers] Removal Of Over 200 Themes?
      No. of msgs: 58
      Total size : 53360 bytes

***** Final summary:
      Total number of messages:             718
      Total number of different authors:    82
      Total number of different subjects:   107
      Total size of messages (w/o headers): 998318 bytes
      Average size of a message:            1390 bytes

***** Generated by MailListStat v1.3, (C) 2001-2003 <marki (at) nexin.sk>
***** See http://freshmeat.net/projects/mls for details...


DISCLAIMER: Stats automatically produced. Remember that stats are often
meaningless and deceiving.
From repost_08 at yahoo.com  Sat Jan  3 19:42:09 2009
From: repost_08 at yahoo.com (RePost)
Date: Sat Jan  3 19:42:35 2009
Subject: [wp-hackers] Re: Some feeds will not display
In-Reply-To: <4956D014.30905@yahoo.com>
References: <4956D014.30905@yahoo.com>
Message-ID: <495FBF91.4060907@yahoo.com>

RePost wrote:
> I've been unable to get WordPress to display any feeds other than RSS, 
> FeedBurner and comments.
>
> RSS2, Atom, tags and categories feeds show a blank screen in Firefox 
> and a "The page can not be displayed" message in IE.
>
> I've disabled my FeedBurner redirect plugin, but can't think of any 
> other settings that may be affecting my feeds.

Apologies for bumping the thread, but I'm still unable to determine why 
several feeds are still not displaying for my WordPress installation.

These will display:
RSS: http://dwarfurl.com/607d8
Comments (individual post): http://dwarfurl.com/5f71c

Most others will not display. Here's a category feed, for example:
http://dwarfurl.com/f52b0

RSS 2 will not display:
http://dwarfurl.com/d3439

I'd appreciate any suggestions.

Thanks!

From mdmartz at sivel.net  Sat Jan  3 20:38:31 2009
From: mdmartz at sivel.net (Matt Martz)
Date: Sat Jan  3 20:38:43 2009
Subject: [wp-hackers] Re: Some feeds will not display
In-Reply-To: <495FBF91.4060907@yahoo.com>
References: <4956D014.30905@yahoo.com> <495FBF91.4060907@yahoo.com>
Message-ID: <518fa9630901031238l50a13472tad5e0c26ae2dacb6@mail.gmail.com>

On Sat, Jan 3, 2009 at 2:42 PM, RePost <repost_08@yahoo.com> wrote:
> RePost wrote:
>>
>> I've been unable to get WordPress to display any feeds other than RSS,
>> FeedBurner and comments.
>>
>> RSS2, Atom, tags and categories feeds show a blank screen in Firefox and a
>> "The page can not be displayed" message in IE.
>>
>> I've disabled my FeedBurner redirect plugin, but can't think of any other
>> settings that may be affecting my feeds.
>
> Apologies for bumping the thread, but I'm still unable to determine why
> several feeds are still not displaying for my WordPress installation.
>
> These will display:
> RSS: http://dwarfurl.com/607d8
> Comments (individual post): http://dwarfurl.com/5f71c
>
> Most others will not display. Here's a category feed, for example:
> http://dwarfurl.com/f52b0
>
> RSS 2 will not display:
> http://dwarfurl.com/d3439
>
> I'd appreciate any suggestions.
>
> Thanks!

Sounds like the WordPress rewrites are not working properly.  Try
going to Settings->Permalinks and only clicking save changes and then
trying again.  This has been known to fix permalink problems.

-- 
Matt Martz
matt@sivel.net
From repost_08 at yahoo.com  Sat Jan  3 21:02:31 2009
From: repost_08 at yahoo.com (RePost)
Date: Sat Jan  3 21:02:55 2009
Subject: [wp-hackers] Re: Some feeds will not display
In-Reply-To: <518fa9630901031238l50a13472tad5e0c26ae2dacb6@mail.gmail.com>
References: <4956D014.30905@yahoo.com> <495FBF91.4060907@yahoo.com>
	<518fa9630901031238l50a13472tad5e0c26ae2dacb6@mail.gmail.com>
Message-ID: <495FD267.5060909@yahoo.com>

Matt Martz wrote:
>> Apologies for bumping the thread, but I'm still unable to determine why
>> several feeds are still not displaying for my WordPress installation.
>>
>> These will display:
>> RSS: http://dwarfurl.com/607d8
>> Comments (individual post): http://dwarfurl.com/5f71c
>>
>> Most others will not display. Here's a category feed, for example:
>> http://dwarfurl.com/f52b0
>>
>> RSS 2 will not display:
>> http://dwarfurl.com/d3439
>> I'd appreciate any suggestions.
>>
>>
>> Thanks!
>>     
>
> Sounds like the WordPress rewrites are not working properly.  Try
> going to Settings->Permalinks and only clicking save changes and then
> trying again.  This has been known to fix permalink problems

Didn't work, Matt.
From mikeschinkel at gmail.com  Sat Jan  3 22:51:41 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Sat Jan  3 22:51:53 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901020503v5a095fd2y4d4ea59d7e039432@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
	<45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>
	<b4dd281c0901020251s5060d577x16b75aa413fed327@mail.gmail.com>
	<b4dd281c0901020503v5a095fd2y4d4ea59d7e039432@mail.gmail.com>
Message-ID: <b4dd281c0901031451v357bde5cq53971abd344c0778@mail.gmail.com>

Hi all:

I've managed to get a very simple proof-of-concept of my RESTful API for
WordPress plugins online. It is based on a project I developed a year ago I
called RESTian (http://code.google.com/p/restian/) for which I had planned
to release the code but never found time. I was new to PHP then (although
with 10+ years prior experience on ASP) and looking at the code I somewhat
cringe now but it is working and I can always refactor!

As an aside, the key point of RESTian, btw, was to establish standard usage
patterns for URL design for RESTful services, to establish coding patterns
for implementing RESTful services that could transcend languages (i.e.
Python, Ruby, etc. in addition to PHP), and to provide standard modules for
both Javascript client and PHP/Python/Ruby/et al. server. Since then I've
decided to focus on PHP so I doubt I'd be the one to move anything forward
with Python or Ruby but the other goals remain.

Anyway, here is what I have working at the moment:

*List all plugins in text/html:
*
http://api.advancedwordpress.net/0.1/plugins.html

*List all plugins in application/json:
* http://api.advancedwordpress.net/0.1/plugins.json

*List all plugins in application/json but serve as text/plain mimetype:
* http://api.advancedwordpress.net/0.1/plugins.json?serve=txt

*List one plugin (in this case Akismet) in text/html:*
http://api.advancedwordpress.net/0.1/plugins/akismet.html

*List one plugin (in this case Akismet) **in application/json:
* http://api.advancedwordpress.net/0.1/plugins/akismet.json

*List one plugin (in this case Akismet) **in application/**json but serve as
text/plain mimetype:** *
http://api.advancedwordpress.net/0.1/plugins/akismet.json?serve=txt

It works quite well if I do say so myself. :-)

I could easily implement a serialized PHP response type but I want to
rearchitect the RESTian code to make it pluggable before I do that. Also,
does anyone know if there *is* a standardized PHP response type?  If not,
there should be, no?

I could easily implement the ability to create subset like the following:

http://api.advancedwordpress.net/0.1/plugins/popular/
 http://api.advancedwordpress.net/0.1/plugins/updated/
http://api.advancedwordpress.net/0.1/plugins/newest/

Or even searching (and the RSS mimetype):

http://api.advancedwordpress.net/0.1/plugins.html?q=Posts
 http://api.advancedwordpress.net/0.1/plugins.json?q=Video
http://api.advancedwordpress.net/0.1/plugins.rss?q=Google+AdSense

You'll note that I versioned is 0.1 to indicate that it is very rough and
certainly not ready for primetime or nor should there be any expectation
that it will continue to work at this point so please no one go writing code
for it that you depend on. For one, I still need to think a lot more about
the URL design baked into RESTian and of course I need to refactor the
entire RESTian codebase.  I will do my best to keep from breaking it but I
can't promise.

Any comments, questions, or suggestions will be appreciated.

That said, I'll soon come to the end of my free time to devote to this as I
start a major project on the 5th to last at least a month. We'll see if I
can move it forward during January but I can't promise.

-Mike Schinkel
http://mikeschinkel.com
From peter.westwood at ftwr.co.uk  Sat Jan  3 23:09:51 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sat Jan  3 23:10:20 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901031451v357bde5cq53971abd344c0778@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011618i2b6ab71dld4f9242bf8a6d318@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
	<45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>
	<b4dd281c0901020251s5060d577x16b75aa413fed327@mail.gmail.com>
	<b4dd281c0901020503v5a095fd2y4d4ea59d7e039432@mail.gmail.com>
	<b4dd281c0901031451v357bde5cq53971abd344c0778@mail.gmail.com>
Message-ID: <4BBB6050-C088-492F-964B-86B3C9DBDCF2@ftwr.co.uk>


On 3 Jan 2009, at 22:51, Mike Schinkel wrote:
> I could easily implement a serialized PHP response type but I want to
> rearchitect the RESTian code to make it pluggable before I do that.  
> Also,
> does anyone know if there *is* a standardized PHP response type?   
> If not,
> there should be, no?
>

Serialised data is the standard response type I would use with php.

>
> Any comments, questions, or suggestions will be appreciated.
>

Please don't use WordPress in your domain name [1]

Is the code available anywhere for people to build on?

Westi

[1] http://wordpress.org/about/domains/

-- 
Peter Westwood

From mikeschinkel at gmail.com  Sun Jan  4 01:17:53 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Sun Jan  4 01:18:04 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <4BBB6050-C088-492F-964B-86B3C9DBDCF2@ftwr.co.uk>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011629i60aa735cx51e2494f5912d1ce@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
	<45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>
	<b4dd281c0901020251s5060d577x16b75aa413fed327@mail.gmail.com>
	<b4dd281c0901020503v5a095fd2y4d4ea59d7e039432@mail.gmail.com>
	<b4dd281c0901031451v357bde5cq53971abd344c0778@mail.gmail.com>
	<4BBB6050-C088-492F-964B-86B3C9DBDCF2@ftwr.co.uk>
Message-ID: <b4dd281c0901031717w3765a33eu652535dfc51c4ef7@mail.gmail.com>

 "Peter Westwood" <peter.westwood@ftwr.co.uk> wrote:
>> Serialised data is the standard response type I would use with php.

Actually, there are standards and then there are "Standards."

You were referring to the format you use by convention for your convenience
and which is also arguably a defacto-standard because of the functional
inclusion in PHP. I was referring to the "MIME Type" standards (
http://en.wikipedia.org/wiki/Internet_media_type) as set forth the the
Internet Assigned Numbers Authority (IANA) and as recognized as
authoritative by the W3C and all other Internet-oriented standards bodies.
You can see the list of recognized MIME types here:

   http://www.iana.org/assignments/media-types/

After a quick review I don't see anything that mentioned serialized PHP so
it appears that it's use as a representation for HTTP request responses has
not established any widespread use, at least not by anyone significant who
values web standards.

Since WordPress is using serialized PHP for web services over the open
Internet and probably will be do so even more in the future so it would be a
really good idea to register as a well-known MIME Type, probably
"application/serialized-php."  Registration procedures and information are
here:

   http://www.iana.org/assignments/media-types/application/
   http://www.iana.org/cgi-bin/mediatypes.pl
   ftp://ftp.rfc-editor.org/in-notes/rfc4288.txt

Prior to an accepted registration "application/x-serialized-php" would be
acceptable but it's a good idea to get the non "x-" version registered
before proliferation of software that uses the "x-" format which is a best
practice as mentioned in the registration documents. BTW, it seems I'm not
the first to suggest "application/x-serialized-php":

   http://sandeep.shetty.in/2006/04/yahoo-unrest.html

Actually I just checked the response type for the web service at
http://api.wordpress.org/plugins/info/1.0/ and that web service is not
following the HTTP standards recommendations with respect to the
"Content-Type" requirement. Its returned content type header is the
following which tells a client/user agent that what is returned should be
interpreted as HTML, not as serialized PHP:

   "Content-Type: text/html; charset=UTF-8"

According to the standard in section 7.2.1:

   "Any HTTP/1.1 message containing an entity-body SHOULD
    include a Content-Type header field defining the media
    type of that body. If and only if the media type is not
    given by a Content-Type field, the recipient MAY attempt
    to guess the media type via inspection of its content
    and/or the name extension(s) of the URI used to identify
    the resource. If the media type remains unknown, the
    recipient SHOULD treat it as type "application/octet-stream".

For more details on this, see:

   http://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7.2.1
   http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17
   http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.7

Today (at least) the WordPress Plugin API really should set the content type
header (something like) this:

   "Content-Type: application/x-serialized-php; charset=UTF-8"

Later, upon successful MIME type registration, if could return this:

   "Content-Type: application/serialized-php; charset=UTF-8"

These standards, BTW, are for maximum interoperability. You might say "But
we don't need that because it is a *private* API" to which I'd reply
"Nothing is private that goes unencrypted over the public Internet." More
specifically why you should care is some firewalls doing active monitoring
might block serialized PHP that is identified as HTML because it doesn't
look at all like HTML and thus (as far as the firewall is concerned) could
potentially be a virus. So I repeat: "For maximum interoperability, follow
the standards."  Besides, in this case it would be cake to fix the Content
Type header on the WordPress.org server.

> Please don't use WordPress in your domain name [1]

You mean like http://advancedwordpress.com/? :-)

Yeah, I know about [1].  I bought the domain name for a potential book I'm
considering writing with a planned title of "Advanced WordPress" and it just
didn't seem to make sense to use different name for the domain that the
planned book title. What's more usage of trademarks in book titles has
pretty much always been given fair-use legal protection. I don't know if it
will definitely write the book but if it gets to that point it will be made
clear that it is a book about advanced WordPress techniques and not
something blessed or otherwise legally related to WordPress.org/.net.

BTW, my reason for considering writing a book is because I'm probably going
to write a lot of the content anyway for my own learning, why not make it
generally available? What's more, if I do it I will hope to lean on everyone
else who has come before me preparing excellent examples of advanced
Wordpress Techniques with full attribution and only with approval. BTW, by
"advanced" I mean mostly writing plugins, not being a hipster marketer who
at best can install the thing.  Maybe it should be called "Professional
WordPress" or "Programming WordPress"; whatever the case it would still
ideally contains the name "WordPress" in the domain so same issue. (Wishing
there were a ".book" TLD, that's resolve this issue here for sure.:-)

OTOH, the API doesn't *have* to live there long term if its a problem but it
seemed the most logical place to put it given the domains I have.

> Is the code available anywhere for people to build on?

Not yet, I want to flesh out the RESTian library before I release it. It
really needs a lot of thought before it gets unleashed to the world and it
starts proliferating, and I don't want to have to support older versions. I
also recently did something related called SimpleUrlMapper (
http://code.google.com/p/simpleurlmapper/) and want to try to integrate the
functionality of the two.

IF there is significant interest from others I'll be motivated to get it
done sooner than later. :-)

-Mike Schinkel
http://mikeschinkel.com
From mikeschinkel at gmail.com  Sun Jan  4 01:59:02 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Sun Jan  4 01:59:15 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901031717w3765a33eu652535dfc51c4ef7@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
	<45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>
	<b4dd281c0901020251s5060d577x16b75aa413fed327@mail.gmail.com>
	<b4dd281c0901020503v5a095fd2y4d4ea59d7e039432@mail.gmail.com>
	<b4dd281c0901031451v357bde5cq53971abd344c0778@mail.gmail.com>
	<4BBB6050-C088-492F-964B-86B3C9DBDCF2@ftwr.co.uk>
	<b4dd281c0901031717w3765a33eu652535dfc51c4ef7@mail.gmail.com>
Message-ID: <b4dd281c0901031759q46834e92s29c5c04d0f3e7400@mail.gmail.com>

Just for grins I decided to see how hard it was to add in a few more
"services."  Given the RESTian library I wrote and a few lines of code, now
I have services for all of the following. Of course they probably make no
sense in relation to the plugs, but whatever, these all work now just for
demonstration:

    http://api.advancedwordpress.net/0.1/posts.html
    http://api.advancedwordpress.net/0.1/posts/1.html
    http://api.advancedwordpress.net/0.1/posts.json
    http://api.advancedwordpress.net/0.1/posts/1.json
    http://api.advancedwordpress.net/0.1/posts.json?serve=txt
    http://api.advancedwordpress.net/0.1/posts/1.json?serve=txt

    http://api.advancedwordpress.net/0.1/pages.html
    http://api.advancedwordpress.net/0.1/pages/2.html
    http://api.advancedwordpress.net/0.1/pages.json
    http://api.advancedwordpress.net/0.1/pages/2.json
    http://api.advancedwordpress.net/0.1/pages.json?serve=txt
    http://api.advancedwordpress.net/0.1/pages/2.json?serve=txt

    http://api.advancedwordpress.net/0.1/links.html
    http://api.advancedwordpress.net/0.1/links/4.html
    http://api.advancedwordpress.net/0.1/links.json
    http://api.advancedwordpress.net/0.1/links/4.json
    http://api.advancedwordpress.net/0.1/links.json?serve=txt
    http://api.advancedwordpress.net/0.1/links/4.json?serve=txt

    http://api.advancedwordpress.net/0.1/terms.html
    http://api.advancedwordpress.net/0.1/terms/2.html
    http://api.advancedwordpress.net/0.1/terms.json
    http://api.advancedwordpress.net/0.1/terms/2.json
    http://api.advancedwordpress.net/0.1/terms.json?serve=txt
    http://api.advancedwordpress.net/0.1/terms/2.json?serve=txt

-Mike Schinkel
http://mikeschinkel.com

>
>
From morten at kaplak.com  Sun Jan  4 18:56:20 2009
From: morten at kaplak.com (Morten Blaabjerg)
Date: Sun Jan  4 18:56:32 2009
Subject: [wp-hackers] Re: Some feeds will not display
In-Reply-To: <495FD267.5060909@yahoo.com>
References: <4956D014.30905@yahoo.com> <495FBF91.4060907@yahoo.com>
	<518fa9630901031238l50a13472tad5e0c26ae2dacb6@mail.gmail.com>
	<495FD267.5060909@yahoo.com>
Message-ID: <3981412e0901041056y23ec959fn28cbe7716de053a3@mail.gmail.com>

I have the same issue on some of our sites - /feed works okay, but /atom and
category feeds do not. This is only a problem on some internal sites with no
public access right now, where we are experimenting with the effects of
different plugins. Therefore I suspect the error in this case to be caused
by a plugin, but at the moment I don't know which one.

Best Wishes,
Morten


On Sat, Jan 3, 2009 at 10:02 PM, RePost <repost_08@yahoo.com> wrote:

> Matt Martz wrote:
>
>> Apologies for bumping the thread, but I'm still unable to determine why
>>> several feeds are still not displaying for my WordPress installation.
>>>
>>> These will display:
>>> RSS: http://dwarfurl.com/607d8
>>> Comments (individual post): http://dwarfurl.com/5f71c
>>>
>>> Most others will not display. Here's a category feed, for example:
>>> http://dwarfurl.com/f52b0
>>>
>>> RSS 2 will not display:
>>> http://dwarfurl.com/d3439
>>> I'd appreciate any suggestions.
>>>
>>>
>>> Thanks!
>>>
>>>
>>
>> Sounds like the WordPress rewrites are not working properly.  Try
>> going to Settings->Permalinks and only clicking save changes and then
>> trying again.  This has been known to fix permalink problems
>>
>
> Didn't work, Matt.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Kaplak has chartered unknown waters and reached strange shores :
http://kaplak.com - http://blog.kaplak.com
From lists at frozenpc.net  Sun Jan  4 19:22:21 2009
From: lists at frozenpc.net (Aaron Axelsen)
Date: Sun Jan  4 19:21:29 2009
Subject: [wp-hackers] Retain Meta Data on Status Change
In-Reply-To: <495CFFB4.1050605@frozenpc.net>
References: <495C576C.1080507@frozenpc.net>	<D71B6D45-9742-44A6-8C26-78D8BE2B8429@ftwr.co.uk>
	<495CFFB4.1050605@frozenpc.net>
Message-ID: <49610C6D.3020202@frozenpc.net>

After further investigation, the post meta is set on the main post - not
the revision entry.  When wordpress changes the status of a post -
whether it be future to published or published to draft the meta
information is not retained.  I have not been able to figure out where
the meta data is getting whipped out during the process yet.

Any thoughts or ideas are welcome!

-- Aaron

Aaron Axelsen wrote:
> I'm pretty sure that is whats going on - I have not confirmed it yet
> though.  Any thoughts?
>
> Peter Westwood wrote:
>   
>> On 1 Jan 2009, at 05:41, Aaron Axelsen wrote:
>>
>>     
>>> Is there an easy way for a post to retain the meta data on status
>>> change?  I'm trying to have my plugin retain a meta tag when it is being
>>> changed from future to published - or published to draft.  The meta data
>>> seems to get removed on status change.
>>>
>>>       
>> Are you ending up with the meta data associated with the revision
>> rather than the main post?
>>
>> westi
>>     
>
>   

-- 
Aaron Axelsen
lists@frozenpc.net

Great hosting, low prices.  Modevia Web Services LLC -- http://www.modevia.com

From joost at yoast.com  Sun Jan  4 19:48:36 2009
From: joost at yoast.com (Joost de Valk)
Date: Sun Jan  4 19:49:21 2009
Subject: [wp-hackers] PHPXref of the WordPress source
Message-ID: <D6ED9ECC-A3AE-42F5-BF06-198747CBF461@yoast.com>

Hi all,

as I needed a cross reference of the WP source of a couple of  
different versions, and trunk as well, I've created one here:

http://xref.yoast.com/

The trunk PHPXref there updates every 30 minutes, and I'll try to  
update it with newer releases as soon as they're released. If you've  
got any requests or remarks, please let me know!

Best,
Joost

--
Joost de Valk
http://yoast.com/

P.S. Join my WordPress Newsletter, and hear all the latest WordPress  
tips & tricks! Sign up here:

http://yoast.com/wordpress-newsletter/


From repost_08 at yahoo.com  Sun Jan  4 20:50:02 2009
From: repost_08 at yahoo.com (RePost)
Date: Sun Jan  4 20:50:24 2009
Subject: [wp-hackers] Re: Some feeds will not display
In-Reply-To: <3981412e0901041056y23ec959fn28cbe7716de053a3@mail.gmail.com>
References: <4956D014.30905@yahoo.com>
	<495FBF91.4060907@yahoo.com>	<518fa9630901031238l50a13472tad5e0c26ae2dacb6@mail.gmail.com>	<495FD267.5060909@yahoo.com>
	<3981412e0901041056y23ec959fn28cbe7716de053a3@mail.gmail.com>
Message-ID: <496120FA.3070204@yahoo.com>

Morten Blaabjerg wrote:
> I have the same issue on some of our sites - /feed works okay, but /atom and
> category feeds do not. This is only a problem on some internal sites with no
> public access right now, where we are experimenting with the effects of
> different plugins. Therefore I suspect the error in this case to be caused
> by a plugin, but at the moment I don't know which one.
>   
I have tried disabling all recent plugins, without any improvement in 
the feed problem.

I can't pinpoint when the feeds stopped displaying, but I would suspect 
it began with a WordPress version change. If we're experiencing the 
problem, others must be as well. It deserves some serious attention.
From lynne.pope at gmail.com  Sun Jan  4 21:29:49 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Sun Jan  4 21:30:09 2009
Subject: [wp-hackers] Re: Some feeds will not display
In-Reply-To: <496120FA.3070204@yahoo.com>
References: <4956D014.30905@yahoo.com> <495FBF91.4060907@yahoo.com>
	<518fa9630901031238l50a13472tad5e0c26ae2dacb6@mail.gmail.com>
	<495FD267.5060909@yahoo.com>
	<3981412e0901041056y23ec959fn28cbe7716de053a3@mail.gmail.com>
	<496120FA.3070204@yahoo.com>
Message-ID: <427667db0901041329h6e5c602fme052dbd5d64a0dd8@mail.gmail.com>

2009/1/5 RePost <repost_08@yahoo.com>

> Morten Blaabjerg wrote:
>
>> I have the same issue on some of our sites - /feed works okay, but /atom
>> and
>> category feeds do not. This is only a problem on some internal sites with
>> no
>> public access right now, where we are experimenting with the effects of
>> different plugins. Therefore I suspect the error in this case to be caused
>> by a plugin, but at the moment I don't know which one.
>>
>>
> I have tried disabling all recent plugins, without any improvement in the
> feed problem.
>
> I can't pinpoint when the feeds stopped displaying, but I would suspect it
> began with a WordPress version change. If we're experiencing the problem,
> others must be as well. It deserves some serious attention.
>
>
Category feeds stopped displaying on my sites when they were upgraded to
2.6.5. I have just tested ATOM and confirm that ATOM feeds are not working
either. Tested with a clean install of 2.6.5 out of curiosity, with no
plugins or content in functions.php.

If you can gather enough information together RePost it would be a good idea
to log this on the tracker.

Lynne
From regulatethis at gmail.com  Sun Jan  4 21:48:41 2009
From: regulatethis at gmail.com (Daniel Torreblanca)
Date: Sun Jan  4 21:48:52 2009
Subject: [wp-hackers] Re: Some feeds will not display
In-Reply-To: <427667db0901041329h6e5c602fme052dbd5d64a0dd8@mail.gmail.com>
References: <4956D014.30905@yahoo.com> <495FBF91.4060907@yahoo.com>
	<518fa9630901031238l50a13472tad5e0c26ae2dacb6@mail.gmail.com>
	<495FD267.5060909@yahoo.com>
	<3981412e0901041056y23ec959fn28cbe7716de053a3@mail.gmail.com>
	<496120FA.3070204@yahoo.com>
	<427667db0901041329h6e5c602fme052dbd5d64a0dd8@mail.gmail.com>
Message-ID: <39fdab560901041348x4981e17r2417d95f123787a8@mail.gmail.com>

Hmm... They're both working fine for me, and my blog is running off
trunk code since before 2.6 .... What exactly do you mean by "not
working"? Is it a 404?

Daniel

On Sun, Jan 4, 2009 at 4:29 PM, Lynne Pope <lynne.pope@gmail.com> wrote:
> 2009/1/5 RePost <repost_08@yahoo.com>
>
>> Morten Blaabjerg wrote:
>>
>>> I have the same issue on some of our sites - /feed works okay, but /atom
>>> and
>>> category feeds do not. This is only a problem on some internal sites with
>>> no
>>> public access right now, where we are experimenting with the effects of
>>> different plugins. Therefore I suspect the error in this case to be caused
>>> by a plugin, but at the moment I don't know which one.
>>>
>>>
>> I have tried disabling all recent plugins, without any improvement in the
>> feed problem.
>>
>> I can't pinpoint when the feeds stopped displaying, but I would suspect it
>> began with a WordPress version change. If we're experiencing the problem,
>> others must be as well. It deserves some serious attention.
>>
>>
> Category feeds stopped displaying on my sites when they were upgraded to
> 2.6.5. I have just tested ATOM and confirm that ATOM feeds are not working
> either. Tested with a clean install of 2.6.5 out of curiosity, with no
> plugins or content in functions.php.
>
> If you can gather enough information together RePost it would be a good idea
> to log this on the tracker.
>
> Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From repost_08 at yahoo.com  Sun Jan  4 22:50:18 2009
From: repost_08 at yahoo.com (RePost)
Date: Sun Jan  4 22:50:40 2009
Subject: [wp-hackers] Re: Some feeds will not display
In-Reply-To: <427667db0901041329h6e5c602fme052dbd5d64a0dd8@mail.gmail.com>
References: <4956D014.30905@yahoo.com>
	<495FBF91.4060907@yahoo.com>	<518fa9630901031238l50a13472tad5e0c26ae2dacb6@mail.gmail.com>	<495FD267.5060909@yahoo.com>	<3981412e0901041056y23ec959fn28cbe7716de053a3@mail.gmail.com>	<496120FA.3070204@yahoo.com>
	<427667db0901041329h6e5c602fme052dbd5d64a0dd8@mail.gmail.com>
Message-ID: <49613D2A.7050805@yahoo.com>

Lynne Pope wrote:
> If you can gather enough information together RePost it would be a good idea
> to log this on the tracker.
>   

How would I get to the tracker, Lynne?

> What exactly do you mean by "not
> working"? Is it a 404?
Check one of the links I provided, Daniel. I get a blank screen in 
Firefox and "The page can not be displayed" message in IE. The feeds are 
just not being produced by WordPress.


From ryanmccue at cubegames.net  Mon Jan  5 00:54:09 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Mon Jan  5 00:54:36 2009
Subject: [wp-hackers] Re: Some feeds will not display
In-Reply-To: <3981412e0901041056y23ec959fn28cbe7716de053a3@mail.gmail.com>
References: <4956D014.30905@yahoo.com>
	<495FBF91.4060907@yahoo.com>	<518fa9630901031238l50a13472tad5e0c26ae2dacb6@mail.gmail.com>	<495FD267.5060909@yahoo.com>
	<3981412e0901041056y23ec959fn28cbe7716de053a3@mail.gmail.com>
Message-ID: <49615A31.4000605@cubegames.net>

Morten Blaabjerg wrote:
> I have the same issue on some of our sites - /feed works okay, but /atom and
> category feeds do not. This is only a problem on some internal sites with no
> public access right now, where we are experimenting with the effects of
> different plugins. Therefore I suspect the error in this case to be caused
> by a plugin, but at the moment I don't know which one.
>
> Best Wishes,
> Morten
>   

Are you trying to access http://example.com/wordpress/feed/ or
http://example.com/wordpress/feed/atom/ ? The first one is not correct,
I believe.

-- 
Ryan McCue
<http://cubegames.net/>

From jayarjo at gmail.com  Mon Jan  5 06:40:48 2009
From: jayarjo at gmail.com (dave jaggy)
Date: Mon Jan  5 06:41:14 2009
Subject: [wp-hackers] what's the purpose of user_status field in wp_users
	table?
Message-ID: <9aa12a490901042240n248a933fv426161bdbe88a302@mail.gmail.com>

I need to store user status somewhere. I don't want it to reside in
meta table, 'cause it brings some joining and compatibility issues to
my code.

I wonder what's the purpose of user_status field in wp_users table? Is
it used somewhere? As far as I see it is zero for admins and
subscribers. Can I break something if I put my user status into it?
From if.website at gmail.com  Mon Jan  5 06:49:43 2009
From: if.website at gmail.com (Austin Matzko)
Date: Mon Jan  5 06:49:52 2009
Subject: [wp-hackers] what's the purpose of user_status field in wp_users
	table?
In-Reply-To: <9aa12a490901042240n248a933fv426161bdbe88a302@mail.gmail.com>
References: <9aa12a490901042240n248a933fv426161bdbe88a302@mail.gmail.com>
Message-ID: <674b4a3b0901042249u2e0bbd4cnd0237348d1decc31@mail.gmail.com>

On Mon, Jan 5, 2009 at 12:40 AM, dave jaggy <jayarjo@gmail.com> wrote:
> I wonder what's the purpose of user_status field in wp_users table? Is
> it used somewhere?

"user_status" is not used in core WordPress.  It is a vestigial organ.

However, are you sure you can't just use the WordPress usermeta API?
It's probably better for forwards-compatibility.
From jayarjo at gmail.com  Mon Jan  5 09:24:29 2009
From: jayarjo at gmail.com (dave jaggy)
Date: Mon Jan  5 09:24:43 2009
Subject: [wp-hackers] what's the purpose of user_status field in wp_users
	table?
In-Reply-To: <674b4a3b0901042249u2e0bbd4cnd0237348d1decc31@mail.gmail.com>
References: <9aa12a490901042240n248a933fv426161bdbe88a302@mail.gmail.com>
	<674b4a3b0901042249u2e0bbd4cnd0237348d1decc31@mail.gmail.com>
Message-ID: <9aa12a490901050124l5d5c23d1pdaf4ac34fb82f886@mail.gmail.com>

"vestigial organ" :) user_status field could be very useful in some cases.

On Mon, Jan 5, 2009 at 10:49 AM, Austin Matzko <if.website@gmail.com> wrote:
> On Mon, Jan 5, 2009 at 12:40 AM, dave jaggy <jayarjo@gmail.com> wrote:
>> I wonder what's the purpose of user_status field in wp_users table? Is
>> it used somewhere?
>
> "user_status" is not used in core WordPress.  It is a vestigial organ.
>
> However, are you sure you can't just use the WordPress usermeta API?
> It's probably better for forwards-compatibility.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From otto at ottodestruct.com  Mon Jan  5 14:37:38 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jan  5 14:37:51 2009
Subject: [wp-hackers] what's the purpose of user_status field in wp_users
	table?
In-Reply-To: <9aa12a490901050124l5d5c23d1pdaf4ac34fb82f886@mail.gmail.com>
References: <9aa12a490901042240n248a933fv426161bdbe88a302@mail.gmail.com>
	<674b4a3b0901042249u2e0bbd4cnd0237348d1decc31@mail.gmail.com>
	<9aa12a490901050124l5d5c23d1pdaf4ac34fb82f886@mail.gmail.com>
Message-ID: <161617690901050637vf715c46s4995f46318de32e4@mail.gmail.com>

The usermeta structures are far better for this sort of thing. Using
an old field might mean you get boned when WP takes that old field
out.

Look at http://codex.wordpress.org/Function_Reference/update_usermeta instead.


On Mon, Jan 5, 2009 at 3:24 AM, dave jaggy <jayarjo@gmail.com> wrote:
> "vestigial organ" :) user_status field could be very useful in some cases.
>
> On Mon, Jan 5, 2009 at 10:49 AM, Austin Matzko <if.website@gmail.com> wrote:
>> On Mon, Jan 5, 2009 at 12:40 AM, dave jaggy <jayarjo@gmail.com> wrote:
>>> I wonder what's the purpose of user_status field in wp_users table? Is
>>> it used somewhere?
>>
>> "user_status" is not used in core WordPress.  It is a vestigial organ.
>>
>> However, are you sure you can't just use the WordPress usermeta API?
>> It's probably better for forwards-compatibility.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From otto at ottodestruct.com  Mon Jan  5 14:42:04 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jan  5 14:42:16 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901031717w3765a33eu652535dfc51c4ef7@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<b4dd281c0901011706o1874cb64ue457a5253845f4e2@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
	<45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>
	<b4dd281c0901020251s5060d577x16b75aa413fed327@mail.gmail.com>
	<b4dd281c0901020503v5a095fd2y4d4ea59d7e039432@mail.gmail.com>
	<b4dd281c0901031451v357bde5cq53971abd344c0778@mail.gmail.com>
	<4BBB6050-C088-492F-964B-86B3C9DBDCF2@ftwr.co.uk>
	<b4dd281c0901031717w3765a33eu652535dfc51c4ef7@mail.gmail.com>
Message-ID: <161617690901050642w2af8aa47x92e8a1b2715177f6@mail.gmail.com>

On Sat, Jan 3, 2009 at 7:17 PM, Mike Schinkel <mikeschinkel@gmail.com> wrote:
>  "Peter Westwood" <peter.westwood@ftwr.co.uk> wrote:
>>> Serialised data is the standard response type I would use with php.
>
> Actually, there are standards and then there are "Standards."
>
> You were referring to the format you use by convention for your convenience
> and which is also arguably a defacto-standard because of the functional
> inclusion in PHP. I was referring to the "MIME Type" standards (
> http://en.wikipedia.org/wiki/Internet_media_type) as set forth the the
> Internet Assigned Numbers Authority (IANA) and as recognized as
> authoritative by the W3C and all other Internet-oriented standards bodies.
> You can see the list of recognized MIME types here:
>
>   http://www.iana.org/assignments/media-types/
>
> After a quick review I don't see anything that mentioned serialized PHP so
> it appears that it's use as a representation for HTTP request responses has
> not established any widespread use, at least not by anyone significant who
> values web standards.

The MIME type of application/vnd.php.serialized is the one I see used
in most places where serialized PHP is used. It's a data structure,
similar to JSON in terms of scope and usage.

-Otto
From mikeschinkel at gmail.com  Mon Jan  5 15:41:45 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Mon Jan  5 15:41:58 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <161617690901050642w2af8aa47x92e8a1b2715177f6@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<45055a190901011724x6a5d6e8ew3954a6b5551aa33f@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
	<45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>
	<b4dd281c0901020251s5060d577x16b75aa413fed327@mail.gmail.com>
	<b4dd281c0901020503v5a095fd2y4d4ea59d7e039432@mail.gmail.com>
	<b4dd281c0901031451v357bde5cq53971abd344c0778@mail.gmail.com>
	<4BBB6050-C088-492F-964B-86B3C9DBDCF2@ftwr.co.uk>
	<b4dd281c0901031717w3765a33eu652535dfc51c4ef7@mail.gmail.com>
	<161617690901050642w2af8aa47x92e8a1b2715177f6@mail.gmail.com>
Message-ID: <b4dd281c0901050741t757c884g242b0ff3430648f4@mail.gmail.com>

"Otto" <otto@ottodestruct.com> wrote:
> The MIME type of application/vnd.php.serialized is the
> one I see used in most places where serialized PHP is
> used. It's a data structure, similar to JSON in terms
> of scope and usage.

Very interesting, and thank you for the follow up!
I'd prefer a non-"vnd" subtype because having one implies that it is vendor
specific, but whatever the case it would be nice to have a "standard" one.

I found mention of a registration for "application/vnd.php.serialized" by
googling at
http://www.alvestrand.no/pipermail/ietf-types/2004-August/001259.html  Not
sure of the status of this; I unfortunately don't have the time today to
research but I've cc'd its author in hopes that he can shed some light?
Hopefully there will have been/can be some traction in this.

-Mike Schinkel
http://mikeschinkel.com/
P.S. Also, if this is the "preferred" MIME type for serialized PHP would you
agree that web services returning it such as at
http://api.wordpress.comshould be using it?
From otto at ottodestruct.com  Mon Jan  5 15:49:57 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jan  5 15:50:09 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <b4dd281c0901050741t757c884g242b0ff3430648f4@mail.gmail.com>
References: <b4dd281c0901011521o7ae33761l6ba0189a30961080@mail.gmail.com>
	<b4dd281c0901020127i573d208fpfcd487dd610de789@mail.gmail.com>
	<45055a190901020217r2ffc25a2t77b87bf9fb31b310@mail.gmail.com>
	<b4dd281c0901020251s5060d577x16b75aa413fed327@mail.gmail.com>
	<b4dd281c0901020503v5a095fd2y4d4ea59d7e039432@mail.gmail.com>
	<b4dd281c0901031451v357bde5cq53971abd344c0778@mail.gmail.com>
	<4BBB6050-C088-492F-964B-86B3C9DBDCF2@ftwr.co.uk>
	<b4dd281c0901031717w3765a33eu652535dfc51c4ef7@mail.gmail.com>
	<161617690901050642w2af8aa47x92e8a1b2715177f6@mail.gmail.com>
	<b4dd281c0901050741t757c884g242b0ff3430648f4@mail.gmail.com>
Message-ID: <161617690901050749u7dd386ccyb6b1e1b12983c68e@mail.gmail.com>

On Mon, Jan 5, 2009 at 9:41 AM, Mike Schinkel <mikeschinkel@gmail.com> wrote:
> P.S. Also, if this is the "preferred" MIME type for serialized PHP would you
> agree that web services returning it such as at
> http://api.wordpress.com should be using it?

I'm of the general opinion that it doesn't make any sort of difference
either way. I mean, yes, you can be pedantic about it and add special
code to the thing to make it output a different mime type in the
header, but does it have any real-world impact? No, not at all.

MIME Types are fine and I like the idealized world that sits behind
them, where bits of data are typed and applications use those types
and everything sits happily in it's own little fairy village where
things are what they are and other things can then handle them
correctly. And we'll all have lollipops and candy for breakfast, and
pancakes will be free on Tuesdays.

But I think that on the whole, strict type rigidness causes more
problems than it solves. It makes absolutely no difference what the
mime type returned is unless the client looks at it and acts
differently based on it.

-Otto
From johan.eenfeldt at gmail.com  Mon Jan  5 19:55:24 2009
From: johan.eenfeldt at gmail.com (Johan Eenfeldt)
Date: Mon Jan  5 19:55:32 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
Message-ID: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>

Hi,

When profiling filter performance I found that the single most
expensive one was convert_smilies (can be 30+% of total page
construction time on post with many comments).

This patch changes smilies_init to make a more efficient regular
expression resulting in a *10 speedup.

This is done by:
o the search expression is built up as sub-expressions for smiley
first letter (example of partial result: "8(\)|-\)|-O|O)").
o to handle the replacement it uses the 'e' modifier at end of search
string which makes preg_replace() treat the replacement parameter as
PHP code after reference substitution is done.

Resulting generated search regular expression for default smilies:
"/(\s|^)8(\)|-\)|-O|O)|\:(\!\:|\(|\)|-\(|-\)|-\?|-D|-P|-o|-x|-\||\?|\?\:|\?\?\?\:|D|P|arrow\:|cool\:|cry\:|eek\:|evil\:|grin\:|idea\:|lol\:|mad\:|mrgreen\:|neutral\:|o|oops\:|razz\:|roll\:|sad\:|shock\:|smile\:|twisted\:|wink\:|x|\|)|;(\)|-\))(\s|$)/e"

Of possible note: the $wp_smiliessearch and $wp_smiliesreplace globals
are now plain strings and not arrays.

This makes no difference for any other core code, or any outside uses
if used in the recommended way but could perhaps possibly confuse some
plugin.

Anyone wanting to test this without changing the code can try out the
plugin version included. It replaces the smilies_init action with the
new version.

Please consider this for inclusion.

Thank you,
Johan

[this mail might be duplicated as i somewhat messed up with
subscription/sending]
From listswphackers at mist.org.uk  Mon Jan  5 20:06:38 2009
From: listswphackers at mist.org.uk (mrmist)
Date: Mon Jan  5 20:07:59 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
In-Reply-To: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
References: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
Message-ID: <MR5T6NEOhmYJFwfo@dsl-217-155-35-239.zen.co.uk>

In message 
<7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>, Johan 
Eenfeldt <johan.eenfeldt@gmail.com> writes
>Hi,
>
>When profiling filter performance I found that the single most
>expensive one was convert_smilies (can be 30+% of total page
>construction time on post with many comments).
>
>This patch changes smilies_init to make a more efficient regular
>expression resulting in a *10 speedup.
>
>This is done by:
>o the search expression is built up as sub-expressions for smiley
>first letter (example of partial result: "8(\)|-\)|-O|O)").
>o to handle the replacement it uses the 'e' modifier at end of search
>string which makes preg_replace() treat the replacement parameter as
>PHP code after reference substitution is done.
>
Nice idea, but see http://trac.wordpress.org/ticket/8689
-- 
mrmist
From sewpafly at gmail.com  Mon Jan  5 20:08:38 2009
From: sewpafly at gmail.com (sewpafly)
Date: Mon Jan  5 20:08:52 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
In-Reply-To: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
References: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
Message-ID: <e2e15aad0901051208w2a1b8df7rfacc6059a75e1387@mail.gmail.com>

> to handle the replacement it uses the 'e' modifier at end of search
> string which makes preg_replace() treat the replacement parameter as
> PHP code after reference substitution is done.

I have never tested for myself to find if this makes much of a
difference, but I found this in the php documentation for
preg_replace...  If you're trying to wring the biggest performance
gain in the patch, perhaps this would help?

"Note that it is in most cases much more efficient to use
preg_replace_callback(), with a named function or an anonymous
function created with create_function(), instead of the /e modifier.
When preg_replace() is called with the /e modifier, the interpreter
must parse the replacement string into PHP code once for every
replacement made, while preg_replace_callback() uses a function that
only needs to be parsed once."

http://us.php.net/manual/en/function.preg-replace.php#73063

sewpafly
From harish.mlists at gmail.com  Mon Jan  5 20:41:24 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Mon Jan  5 20:41:45 2009
Subject: [wp-hackers] Padding-left in Dashboard comments CSS
Message-ID: <49627074.8030604@gmail.com>

Hello,

There is an awkward (to me) gap on the left hand-side of the recent
comments list in the Dashboard. I have marked-out what I am referring to
in red in the following image:

http://emphaticallystatic.org/images/comments-gap.png

If someone with more design-fu than I knows if this serves a purpose,
I'd be happy to know what it is.

Thanks!
Harish
From elflop at googlemail.com  Mon Jan  5 20:43:56 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Mon Jan  5 20:44:09 2009
Subject: [wp-hackers] Padding-left in Dashboard comments CSS
In-Reply-To: <49627074.8030604@gmail.com>
References: <49627074.8030604@gmail.com>
Message-ID: <c6c45a350901051243j3e6485b8y97ed73d23ea2736a@mail.gmail.com>

2009/1/5 Harish Narayanan <harish.mlists@gmail.com>:

> If someone with more design-fu than I knows if this serves a purpose,
> I'd be happy to know what it is.

I think that is the placeholder for the gravatar. I'm surprised things
aren't altered if gravatars aren't set...



-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From kparsell-wp at kpdesign.net  Mon Jan  5 21:00:13 2009
From: kparsell-wp at kpdesign.net (Kim Parsell)
Date: Mon Jan  5 21:00:19 2009
Subject: [wp-hackers] Padding-left in Dashboard comments CSS
In-Reply-To: <c6c45a350901051243j3e6485b8y97ed73d23ea2736a@mail.gmail.com>
References: <49627074.8030604@gmail.com>
	<c6c45a350901051243j3e6485b8y97ed73d23ea2736a@mail.gmail.com>
Message-ID: <496274DD.9060708@kpdesign.net>

Yes, that is where the gravatars are displayed when they are enabled.

I agree Rich - the gap needs to disappear if gravatars are disabled.

Kim

------------------------------

Rich Pedley wrote:
> I think that is the placeholder for the gravatar. I'm surprised things
> aren't altered if gravatars aren't set...
>
>
> 2009/1/5 Harish Narayanan <harish.mlists@gmail.com>:
>
>   
>> If someone with more design-fu than I knows if this serves a purpose,
>> I'd be happy to know what it is.
>>     
From harish.mlists at gmail.com  Mon Jan  5 21:06:11 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Mon Jan  5 21:06:27 2009
Subject: [wp-hackers] Padding-left in Dashboard comments CSS
In-Reply-To: <c6c45a350901051243j3e6485b8y97ed73d23ea2736a@mail.gmail.com>
References: <49627074.8030604@gmail.com>
	<c6c45a350901051243j3e6485b8y97ed73d23ea2736a@mail.gmail.com>
Message-ID: <49627643.6090106@gmail.com>

Rich Pedley wrote:
> 2009/1/5 Harish Narayanan <harish.mlists@gmail.com>:
> 
>> If someone with more design-fu than I knows if this serves a purpose,
>> I'd be happy to know what it is.
> 
> I think that is the placeholder for the gravatar. I'm surprised things
> aren't altered if gravatars aren't set...

Thank you Rich and Kim; I knew it had to serve some purpose. For now,
I'll just locally modify the CSS centre the comment in the box.

Harish
From johan.eenfeldt at gmail.com  Mon Jan  5 21:16:07 2009
From: johan.eenfeldt at gmail.com (Johan Eenfeldt)
Date: Mon Jan  5 21:16:20 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
In-Reply-To: <MR5T6NEOhmYJFwfo@dsl-217-155-35-239.zen.co.uk>
References: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
	<MR5T6NEOhmYJFwfo@dsl-217-155-35-239.zen.co.uk>
Message-ID: <7547287e0901051316k242dee7fv6e8a67bb0dbb6875@mail.gmail.com>

On Mon, Jan 5, 2009 at 9:06 PM, mrmist <listswphackers@mist.org.uk> wrote:
> In message <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>,
> Johan Eenfeldt <johan.eenfeldt@gmail.com> writes
>>
>> Hi,
>>
>> When profiling filter performance I found that the single most
>> expensive one was convert_smilies (can be 30+% of total page
>> construction time on post with many comments).
>>
>> This patch changes smilies_init to make a more efficient regular
>> expression resulting in a *10 speedup.
>>
>> This is done by:
>> o the search expression is built up as sub-expressions for smiley
>> first letter (example of partial result: "8(\)|-\)|-O|O)").
>> o to handle the replacement it uses the 'e' modifier at end of search
>> string which makes preg_replace() treat the replacement parameter as
>> PHP code after reference substitution is done.
>>
> Nice idea, but see http://trac.wordpress.org/ticket/8689
> --
> mrmist

Ok, so I rewrote it using preg_replace_callback(), as suggested by
sewpafly as well as the ticket. Patch attached.

Some more numbers. Load time on the site for a post with 403 comments:
Original: 4.3s
Modified: 2.6s

The move to the preg_replace_callback() did not seem to make any big
difference in performance.

(as this required changes in convert_smilies() it is not possible to
make it with the plugin architecture)

/ Johan
From speedboxer at gmail.com  Mon Jan  5 21:21:09 2009
From: speedboxer at gmail.com (Matt)
Date: Mon Jan  5 21:21:22 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
In-Reply-To: <7547287e0901051316k242dee7fv6e8a67bb0dbb6875@mail.gmail.com>
References: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
	<MR5T6NEOhmYJFwfo@dsl-217-155-35-239.zen.co.uk>
	<7547287e0901051316k242dee7fv6e8a67bb0dbb6875@mail.gmail.com>
Message-ID: <b88434820901051321o13a5ac18v45b4aecf052d827c@mail.gmail.com>

> Ok, so I rewrote it using preg_replace_callback(), as suggested by
> sewpafly as well as the ticket. Patch attached.

Attachments sent to this list are taken out before being sent to
subscribers. Please upload your patch to the appropriate Trac ticket
(or make a new ticket).


-- 
Matt (http://mattsblog.ca/)
From johan.eenfeldt at gmail.com  Mon Jan  5 21:36:57 2009
From: johan.eenfeldt at gmail.com (Johan Eenfeldt)
Date: Mon Jan  5 21:37:09 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
In-Reply-To: <b88434820901051321o13a5ac18v45b4aecf052d827c@mail.gmail.com>
References: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
	<MR5T6NEOhmYJFwfo@dsl-217-155-35-239.zen.co.uk>
	<7547287e0901051316k242dee7fv6e8a67bb0dbb6875@mail.gmail.com>
	<b88434820901051321o13a5ac18v45b4aecf052d827c@mail.gmail.com>
Message-ID: <7547287e0901051336x465bb360rc959a1b8e1e0ccd9@mail.gmail.com>

On Mon, Jan 5, 2009 at 10:21 PM, Matt <speedboxer@gmail.com> wrote:
>> Ok, so I rewrote it using preg_replace_callback(), as suggested by
>> sewpafly as well as the ticket. Patch attached.
>
> Attachments sent to this list are taken out before being sent to
> subscribers. Please upload your patch to the appropriate Trac ticket
> (or make a new ticket).

Oh, ok. :)

Found a relevant ticket and added patch:
http://trac.wordpress.org/ticket/6464

/ Johan, can you tell I'm new here?
From peter.westwood at ftwr.co.uk  Mon Jan  5 21:43:17 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Jan  5 21:43:48 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
In-Reply-To: <7547287e0901051336x465bb360rc959a1b8e1e0ccd9@mail.gmail.com>
References: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
	<MR5T6NEOhmYJFwfo@dsl-217-155-35-239.zen.co.uk>
	<7547287e0901051316k242dee7fv6e8a67bb0dbb6875@mail.gmail.com>
	<b88434820901051321o13a5ac18v45b4aecf052d827c@mail.gmail.com>
	<7547287e0901051336x465bb360rc959a1b8e1e0ccd9@mail.gmail.com>
Message-ID: <29177EFB-873E-46EC-BD14-80CB262C8B0A@ftwr.co.uk>


On 5 Jan 2009, at 21:36, Johan Eenfeldt wrote:

> On Mon, Jan 5, 2009 at 10:21 PM, Matt <speedboxer@gmail.com> wrote:
>>> Ok, so I rewrote it using preg_replace_callback(), as suggested by
>>> sewpafly as well as the ticket. Patch attached.
>>
>> Attachments sent to this list are taken out before being sent to
>> subscribers. Please upload your patch to the appropriate Trac ticket
>> (or make a new ticket).
>
> Oh, ok. :)
>
> Found a relevant ticket and added patch:
> http://trac.wordpress.org/ticket/6464
>
> / Johan, can you tell I'm new here?
>

Thank You!

It would be good to see some sort of test harness for this too.

We do have the beginnings of some unit tests for WordPress available [1]

It would be good if you (or someone else) could write some tests for  
this to make sure we still have the same functionality before and  
after :-)

Cheers

westi

[1] http://codex.wordpress.org/Automated_Testing
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From ryanmccue at cubegames.net  Mon Jan  5 22:44:50 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Mon Jan  5 22:46:52 2009
Subject: [wp-hackers] Padding-left in Dashboard comments CSS
In-Reply-To: <c6c45a350901051243j3e6485b8y97ed73d23ea2736a@mail.gmail.com>
References: <49627074.8030604@gmail.com>
	<c6c45a350901051243j3e6485b8y97ed73d23ea2736a@mail.gmail.com>
Message-ID: <49628D62.1090100@cubegames.net>

Rich Pedley wrote:
> I think that is the placeholder for the gravatar. I'm surprised things
> aren't altered if gravatars aren't set...
>   

That depends. It may simply be that the default Gravatar is set to
"blank", in which case, it should be displayed. If Gravatars are
disabled however, then it should hide them, I agree. In this case, do
you actually have Gravatars disabled or just using the blank default?

-- 
Ryan McCue
<http://cubegames.net/>

From harish.mlists at gmail.com  Mon Jan  5 22:51:55 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Mon Jan  5 22:52:31 2009
Subject: [wp-hackers] Padding-left in Dashboard comments CSS
In-Reply-To: <49628D62.1090100@cubegames.net>
References: <49627074.8030604@gmail.com>	<c6c45a350901051243j3e6485b8y97ed73d23ea2736a@mail.gmail.com>
	<49628D62.1090100@cubegames.net>
Message-ID: <49628F0B.2070403@gmail.com>

Ryan McCue wrote:
> Rich Pedley wrote:
>> I think that is the placeholder for the gravatar. I'm surprised things
>> aren't altered if gravatars aren't set...
>>   
> 
> That depends. It may simply be that the default Gravatar is set to
> "blank", in which case, it should be displayed. If Gravatars are
> disabled however, then it should hide them, I agree. In this case, do
> you actually have Gravatars disabled or just using the blank default?
> 

I have not enabled support for Gravatars.

Harish
From johan.eenfeldt at gmail.com  Mon Jan  5 22:52:38 2009
From: johan.eenfeldt at gmail.com (Johan Eenfeldt)
Date: Mon Jan  5 22:53:41 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
In-Reply-To: <29177EFB-873E-46EC-BD14-80CB262C8B0A@ftwr.co.uk>
References: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
	<MR5T6NEOhmYJFwfo@dsl-217-155-35-239.zen.co.uk>
	<7547287e0901051316k242dee7fv6e8a67bb0dbb6875@mail.gmail.com>
	<b88434820901051321o13a5ac18v45b4aecf052d827c@mail.gmail.com>
	<7547287e0901051336x465bb360rc959a1b8e1e0ccd9@mail.gmail.com>
	<29177EFB-873E-46EC-BD14-80CB262C8B0A@ftwr.co.uk>
Message-ID: <7547287e0901051452x4a28052dhf608254a8e1e1bb3@mail.gmail.com>

On Mon, Jan 5, 2009 at 10:43 PM, Peter Westwood
<peter.westwood@ftwr.co.uk> wrote:
>
> On 5 Jan 2009, at 21:36, Johan Eenfeldt wrote:
>
>> On Mon, Jan 5, 2009 at 10:21 PM, Matt <speedboxer@gmail.com> wrote:
>>>>
>>>> Ok, so I rewrote it using preg_replace_callback(), as suggested by
>>>> sewpafly as well as the ticket. Patch attached.
>>>
>>> Attachments sent to this list are taken out before being sent to
>>> subscribers. Please upload your patch to the appropriate Trac ticket
>>> (or make a new ticket).
>>
>> Oh, ok. :)
>>
>> Found a relevant ticket and added patch:
>> http://trac.wordpress.org/ticket/6464
>>
>> / Johan, can you tell I'm new here?
>>
>
> Thank You!
>
> It would be good to see some sort of test harness for this too.
>
> We do have the beginnings of some unit tests for WordPress available [1]
>
> It would be good if you (or someone else) could write some tests for this to
> make sure we still have the same functionality before and after :-)
>
> Cheers
>
> westi
>
> [1] http://codex.wordpress.org/Automated_Testing

Ok, will look at writing one.

Good thing too as I found I mishandled :???: vs :? smilies (must sort
in reverse key order as regexp | is first match not greedy).

Thank you,
/ Johan
From otto at ottodestruct.com  Mon Jan  5 22:55:59 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jan  5 22:56:11 2009
Subject: [wp-hackers] Padding-left in Dashboard comments CSS
In-Reply-To: <c6c45a350901051243j3e6485b8y97ed73d23ea2736a@mail.gmail.com>
References: <49627074.8030604@gmail.com>
	<c6c45a350901051243j3e6485b8y97ed73d23ea2736a@mail.gmail.com>
Message-ID: <161617690901051455u1d98e3acve2f2b3257f48a7f6@mail.gmail.com>

On Mon, Jan 5, 2009 at 2:43 PM, Rich Pedley <elflop@googlemail.com> wrote:
> 2009/1/5 Harish Narayanan <harish.mlists@gmail.com>:
>
>> If someone with more design-fu than I knows if this serves a purpose,
>> I'd be happy to know what it is.
>
> I think that is the placeholder for the gravatar. I'm surprised things
> aren't altered if gravatars aren't set...

It's in the CSS, and I'm guessing that not many people test without
gravatars on.

#the-comment-list .comment-item {
	padding: 1em 10px 1em 70px;
	border-top: 1px solid;
}

The 70px padding on the left of the comment item is there to push the
comment over, making room for the avatar. Probably should have just
floated the avatar left instead.

-Otto
From lynne.pope at gmail.com  Tue Jan  6 04:03:53 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Tue Jan  6 04:04:00 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
In-Reply-To: <7547287e0901051452x4a28052dhf608254a8e1e1bb3@mail.gmail.com>
References: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
	<MR5T6NEOhmYJFwfo@dsl-217-155-35-239.zen.co.uk>
	<7547287e0901051316k242dee7fv6e8a67bb0dbb6875@mail.gmail.com>
	<b88434820901051321o13a5ac18v45b4aecf052d827c@mail.gmail.com>
	<7547287e0901051336x465bb360rc959a1b8e1e0ccd9@mail.gmail.com>
	<29177EFB-873E-46EC-BD14-80CB262C8B0A@ftwr.co.uk>
	<7547287e0901051452x4a28052dhf608254a8e1e1bb3@mail.gmail.com>
Message-ID: <427667db0901052003wdbbd09ew8e548d4046ca9ae@mail.gmail.com>

Sorry, I just couldn't resist...

"Half of programming is coding.. the other 90% is debugging" ;)
Saw it on a t-shirt somewhere and it just popped into my mind.


Good thing too as I found I mishandled :???: vs :? smilies (must sort
> in reverse key order as regexp | is first match not greedy).
>
>
Now for serious stuff - are there any published benchmark testing results
anywhere for WP? L0oking specifically for comparisons version to version.

Lynne
From johan.eenfeldt at gmail.com  Tue Jan  6 12:56:19 2009
From: johan.eenfeldt at gmail.com (Johan Eenfeldt)
Date: Tue Jan  6 12:56:29 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
In-Reply-To: <427667db0901052003wdbbd09ew8e548d4046ca9ae@mail.gmail.com>
References: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
	<MR5T6NEOhmYJFwfo@dsl-217-155-35-239.zen.co.uk>
	<7547287e0901051316k242dee7fv6e8a67bb0dbb6875@mail.gmail.com>
	<b88434820901051321o13a5ac18v45b4aecf052d827c@mail.gmail.com>
	<7547287e0901051336x465bb360rc959a1b8e1e0ccd9@mail.gmail.com>
	<29177EFB-873E-46EC-BD14-80CB262C8B0A@ftwr.co.uk>
	<7547287e0901051452x4a28052dhf608254a8e1e1bb3@mail.gmail.com>
	<427667db0901052003wdbbd09ew8e548d4046ca9ae@mail.gmail.com>
Message-ID: <7547287e0901060456v59786326w86475111c864a36e@mail.gmail.com>

On Tue, Jan 6, 2009 at 5:03 AM, Lynne Pope <lynne.pope@gmail.com> wrote:
> Sorry, I just couldn't resist...
>
> "Half of programming is coding.. the other 90% is debugging" ;)
> Saw it on a t-shirt somewhere and it just popped into my mind.

No kidding. And that still leaves out the remaining 40% not strictly
necessary tweaking.
From johan.eenfeldt at gmail.com  Tue Jan  6 17:24:27 2009
From: johan.eenfeldt at gmail.com (Johan Eenfeldt)
Date: Tue Jan  6 17:24:40 2009
Subject: [wp-hackers] [PATCH] Improve performance of convert_smilies by *10
In-Reply-To: <29177EFB-873E-46EC-BD14-80CB262C8B0A@ftwr.co.uk>
References: <7547287e0901051155x754dcf7dub9cd193f553aa3ee@mail.gmail.com>
	<MR5T6NEOhmYJFwfo@dsl-217-155-35-239.zen.co.uk>
	<7547287e0901051316k242dee7fv6e8a67bb0dbb6875@mail.gmail.com>
	<b88434820901051321o13a5ac18v45b4aecf052d827c@mail.gmail.com>
	<7547287e0901051336x465bb360rc959a1b8e1e0ccd9@mail.gmail.com>
	<29177EFB-873E-46EC-BD14-80CB262C8B0A@ftwr.co.uk>
Message-ID: <7547287e0901060924r6ddc5e2fo611117c29931b725@mail.gmail.com>

On Mon, Jan 5, 2009 at 10:43 PM, Peter Westwood
<peter.westwood@ftwr.co.uk> wrote:
> On 5 Jan 2009, at 21:36, Johan Eenfeldt wrote:
>> On Mon, Jan 5, 2009 at 10:21 PM, Matt <speedboxer@gmail.com> wrote:
>> Found a relevant ticket and added patch:
>> http://trac.wordpress.org/ticket/6464
>
> It would be good to see some sort of test harness for this too.

Ok. Added to http://trac.wordpress.org/ticket/6464 with a few tests.

(both old and proposed version passes)

>
> We do have the beginnings of some unit tests for WordPress available [1]
>

It was a little bit of trouble getting it to work. Notified Alex
Shiels about how it worked for me.

Thank you,
Johan
From alister at alistercameron.com  Wed Jan  7 01:49:34 2009
From: alister at alistercameron.com (Alister Cameron)
Date: Wed Jan  7 01:49:46 2009
Subject: [wp-hackers] I need some help with a very different theme...
Message-ID: <34b546850901061749h3c5d5e03i152cb950f390b7ed@mail.gmail.com>

Friends,
I've been working on my new Vanilla theme, feverishly for a few weeks, and
it's time to call in the assistance of hard-code coders :)

http://code.google.com/p/vanilla-theme/

I've got a Git repository up, issue tracker (above) and google group... so
I'm trying to make it clear that I want a "community effort", not a personal
project.

What makes Vanilla unique is -- at the least -- that it incorporates a
full-blown templating engine, and as a consequence can do some amazing
things.

Demo site (incomplete - as is the code) is here: http://www.vanillatheme.com.
Yes, it uses the Carrington "look"/CSS at present... coz I'm lazy.

All the smarts are under the hood, and very much a work in progress.

See you in the Google group if you wanna be in the communications loop :)

Cheers,

-Alister

---
Alister R Cameron
CEO // Australis Media Pty Ltd
http://www.australismedia.com

Mob. 04 0404 5555
Fax 03 8610 0050

Click here to find me online:
http://clicktoadd.me/alicam
From mikeschinkel at gmail.com  Wed Jan  7 04:52:15 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Wed Jan  7 04:52:27 2009
Subject: [wp-hackers] I need some help with a very different theme...
In-Reply-To: <34b546850901061749h3c5d5e03i152cb950f390b7ed@mail.gmail.com>
References: <34b546850901061749h3c5d5e03i152cb950f390b7ed@mail.gmail.com>
Message-ID: <b4dd281c0901062052j68f5b928pe8105c9614dc0cf3@mail.gmail.com>

"Alister Cameron" <alister@alistercameron.com> wrote:
> I've been working on my new Vanilla theme, feverishly for a
> few weeks, and it's time to call in the assistance of hard-code
> coders :)  What makes Vanilla unique is -- at the least -- that it
> incorporates a full-blown templating engine, and as a
> consequence can do some amazing things.


Alister:

Very interesting.

I've used Thesis on a project and very much would like to see an effort to
move forward to create a set of (semi-)standardized hooks for themes like in
Thesis so we can start working with  'theming frameworks" instead of just
themes.  But having a system that many themers adopt as opposed to just one
theme-specific hooks is key as is having it GPL (which is the "Anti-Thesis,"
no pun intended. Well, sort of.)

For the next month I'm booked solid but would be very interested in working
on something that would move forward a standard theming hook system forward.

-Mike Schinkel
http://mikeschinkel.com/custom-wordpress-plugins/
From gamito at gmail.com  Wed Jan  7 20:58:28 2009
From: gamito at gmail.com (=?ISO-8859-1?Q?M=E1rio_Gamito?=)
Date: Wed Jan  7 20:58:59 2009
Subject: [wp-hackers] Moving a WP blog to a different domain
Message-ID: <49651774.5010301@gmail.com>

Hi,

I'm going to move my WP blog from, let's say, a.com to b.com

What would be the best approach ?

Simply changing all the http://www.a.com ocorrences to http://www.b.com
in the MySQL dump ?

Would it do the trick or are there any gotchas to be aware of ?

Of course I'll maintain the backup.

Any help would be appreciated.

Warm Regards,
-- 
:wq! M?rio Gamito
From joelfisher at gmail.com  Wed Jan  7 21:01:23 2009
From: joelfisher at gmail.com (Joel Fisher)
Date: Wed Jan  7 21:01:39 2009
Subject: [wp-hackers] Moving a WP blog to a different domain
In-Reply-To: <49651774.5010301@gmail.com>
References: <49651774.5010301@gmail.com>
Message-ID: <d238bd620901071301h2f777392g7c690e89e787287@mail.gmail.com>

This guide will help you.

http://codex.wordpress.org/Moving_WordPress



joel.fisher
http://www.linkedin.com/in/jfisher




On Wed, Jan 7, 2009 at 3:58 PM, M?rio Gamito <gamito@gmail.com> wrote:
> Hi,
>
> I'm going to move my WP blog from, let's say, a.com to b.com
>
> What would be the best approach ?
>
> Simply changing all the http://www.a.com ocorrences to http://www.b.com
> in the MySQL dump ?
>
> Would it do the trick or are there any gotchas to be aware of ?
>
> Of course I'll maintain the backup.
>
> Any help would be appreciated.
>
> Warm Regards,
> --
> :wq! M?rio Gamito
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From listswphackers at mist.org.uk  Wed Jan  7 21:02:06 2009
From: listswphackers at mist.org.uk (mrmist)
Date: Wed Jan  7 21:02:28 2009
Subject: [wp-hackers] Moving a WP blog to a different domain
In-Reply-To: <49651774.5010301@gmail.com>
References: <49651774.5010301@gmail.com>
Message-ID: <Rno0n5BOhRZJFwnH@dsl-217-155-35-239.zen.co.uk>

In message <49651774.5010301@gmail.com>, M?rio Gamito <gamito@gmail.com> 
writes
>Hi,
>
>I'm going to move my WP blog from, let's say, a.com to b.com
>
>What would be the best approach ?
>

Check http://codex.wordpress.org/Moving_WordPress
-- 
mrmist
From TurnerJD at cofc.edu  Wed Jan  7 21:03:56 2009
From: TurnerJD at cofc.edu (John Turner)
Date: Wed Jan  7 21:04:12 2009
Subject: [wp-hackers] Moving a WP blog to a different domain
In-Reply-To: <Rno0n5BOhRZJFwnH@dsl-217-155-35-239.zen.co.uk>
Message-ID: <C58A82EC.91C3%TurnerJD@cofc.edu>

This plugin was a huge help when I moved domains.

http://wordpress.org/extend/plugins/search-and-replace/

John Turner
Webmaster 
Information Technology
College of Charleston
Charleston, SC 29424
e: turnerjd@cofc.edu




> From: mrmist <listswphackers@mist.org.uk>
> Reply-To: <wp-hackers@lists.automattic.com>
> Date: Wed, 7 Jan 2009 21:02:06 +0000
> To: <wp-hackers@lists.automattic.com>
> Subject: Re: [wp-hackers] Moving a WP blog to a different domain
> 
> In message <49651774.5010301@gmail.com>, M?rio Gamito <gamito@gmail.com>
> writes
>> Hi,
>> 
>> I'm going to move my WP blog from, let's say, a.com to b.com
>> 
>> What would be the best approach ?
>> 
> 
> Check http://codex.wordpress.org/Moving_WordPress
> -- 
> mrmist
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From emmensetech at gmail.com  Wed Jan  7 21:37:54 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Wed Jan  7 21:38:06 2009
Subject: [wp-hackers] Moving a WP blog to a different domain
In-Reply-To: <49651774.5010301@gmail.com>
References: <49651774.5010301@gmail.com>
Message-ID: <ca7320070901071337t52ea6588xd76a322cb526720f@mail.gmail.com>

As others suggest, refer to the Codex. however, I feel particularly giving
today. These are my steps:

1) Copy all files to new domain
2) Mysqldump > Mysql Import
3) From MySQL prompt or phpMyAdmin: update wp_options set option_value = '
http://mynewdomain.com' where option_name in ('siteurl','home');
   - Set table prefix accordingly if it's not wp_
   - http://mynewdomain.com should be changed to your own new domain
4) Update wp-config.php to use new DB creds
5) Ensure .htaccess is copied over (sometimes it isn't since it is hidden -
depends on how you copy) or recreate

Should be it. YMMV
-- 
Aaron Brazell
web:: www.technosailor.com
phone:: 410-608-6620
skype:: technosailor
twitter:: @technosailor


On Wed, Jan 7, 2009 at 3:58 PM, M?rio Gamito <gamito@gmail.com> wrote:

> Hi,
>
> I'm going to move my WP blog from, let's say, a.com to b.com
>
> What would be the best approach ?
>
> Simply changing all the http://www.a.com ocorrences to http://www.b.com
> in the MySQL dump ?
>
> Would it do the trick or are there any gotchas to be aware of ?
>
> Of course I'll maintain the backup.
>
> Any help would be appreciated.
>
> Warm Regards,
> --
> :wq! M?rio Gamito
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From frank at bueltge.de  Wed Jan  7 21:39:09 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Wed Jan  7 21:39:22 2009
Subject: [wp-hackers] Moving a WP blog to a different domain
In-Reply-To: <C58A82EC.91C3%TurnerJD@cofc.edu>
References: <Rno0n5BOhRZJFwnH@dsl-217-155-35-239.zen.co.uk>
	<C58A82EC.91C3%TurnerJD@cofc.edu>
Message-ID: <db047a770901071339u6d2c3e4bn9ac94fd5e8972afe@mail.gmail.com>

http://wpengineer.com/moving-your-wordpress-blog-to-a-new-domain/

See my blog entry, i think that help you.
From emmensetech at gmail.com  Thu Jan  8 00:26:43 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Thu Jan  8 00:26:54 2009
Subject: [wp-hackers] Thomas Hawk
Message-ID: <ca7320070901071626n69eb95f8kf4bca41a996a8708@mail.gmail.com>

I'm working with Thomas Hawk to move his blog from Blogger to WordPress. As
most of the posts have come in and the Blogger importer reports that most of
the comments have come in, I'm wondering why only a few of the comments are
associated with actual posts while the wp-admin reports that every comment
I've looked at is associated with an actual post.

I also notice that the Blogger importer caps out at 5000 comments.

So in an effort to save time, has anyone done anything with the Blogger Atom
format Export and developed a related WP importer? Second, does anyone know
about the 5000 comment ceiling (or appearance thereof).

Thanks
-- 
Aaron Brazell
web:: www.technosailor.com
phone:: 410-608-6620
skype:: technosailor
twitter:: @technosailor
From info at mindsharestudios.com  Thu Jan  8 01:55:58 2009
From: info at mindsharestudios.com (Mindshare Studios)
Date: Thu Jan  8 01:56:06 2009
Subject: [wp-hackers] get_post_meta in wp_head?
Message-ID: <89f0f8d50901071755s2d93c428w7fedebfed41a173b@mail.gmail.com>

Is it possible to access post custom fields inside of plugin function
that hooks into wp_head?
Here's my code (however $post_ID isn't being returned):

global $post_ID;
$cstm = get_post_meta($post_ID, '_cstm', true);

if ($cstm != '') {
 // stuff
}

Thanks
Damian
From johan.eenfeldt at gmail.com  Thu Jan  8 03:02:15 2009
From: johan.eenfeldt at gmail.com (Johan Eenfeldt)
Date: Thu Jan  8 03:02:26 2009
Subject: [wp-hackers] Profiling Wordpress filters and actions
Message-ID: <7547287e0901071902x50b0031cg560e737f9718ded1@mail.gmail.com>

Hi,

I've spent some time recently profiling the performance of filters and
actions in Wordpress and thought I should write down some of what I've
found in the event that anyone else is interested.. :)

Summary[1]:
Filters take ~12% of the total page creation time on home page, 63% on
a page with 400 comments.

The most expensive ones are, without any competition, the ones in
(among other places) 'the_content' and 'comment_text'. They take 6.2%
of total time on homepage, 62.2% on a page with 400 comments (this
used to be ~82% until someone changed convert_smilies() :) ).

If you want spend some effort optimizing things and make it count this
is the list: wptexturize 18%, wpautop 17%, make_clickable 14%,
convert_smilies 10% (used to be 55%).

That is percentage of total page creation time on that 400 comments page.

Actions take almost no time.

Numbers overview[2]:

Loadtime homepage:
v2.6.5: 0.440s, Filters/Actions: 0.073s (16.6%), Db: 0.032s (7.3%)
Trunk: 0.436s, Filters/Actions: 0.052s (11.8%), Db: 0.031s (7.1%)

Loadtime post with 403 comments:
v2.6.5: 7.052s, Filters/Actions: 5.856s (83%), Db: 0.033s (0.5%)
Trunk: 3.439s, Filters/Actions: 2.174s (63.2%), Db: 0.036s (1%)

Thank you for reading,
Johan

[1] Measured current trunk (10331) with all plugins turned of, except
homebrew profiling. Numbers vary quite a bit between pageloads but
percentages stay pretty even. The profiling adds up to ~5% on total
time, should be mostly outside the filter numbers. This is just from
my computer at home. Beware of statistics.
[2] Remember [1].
From lynne.pope at gmail.com  Thu Jan  8 03:19:35 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu Jan  8 03:19:46 2009
Subject: [wp-hackers] Profiling Wordpress filters and actions
In-Reply-To: <7547287e0901071902x50b0031cg560e737f9718ded1@mail.gmail.com>
References: <7547287e0901071902x50b0031cg560e737f9718ded1@mail.gmail.com>
Message-ID: <427667db0901071919v2ecdf06ahc1228a966b675262@mail.gmail.com>

Thanks for sharing Johan.

This vindicates me always removing wptexturize and wpautop filters in my
blogs ;)
Bit of a shock to see the impact of the other filters on a comment-rich blog
though!

Lynne

2009/1/8 Johan Eenfeldt <johan.eenfeldt@gmail.com>

> ....
>
> If you want spend some effort optimizing things and make it count this
> is the list: wptexturize 18%, wpautop 17%, make_clickable 14%,
> convert_smilies 10% (used to be 55%).
>
>
From johan.eenfeldt at gmail.com  Thu Jan  8 03:20:52 2009
From: johan.eenfeldt at gmail.com (Johan Eenfeldt)
Date: Thu Jan  8 03:21:02 2009
Subject: [wp-hackers] get_post_meta in wp_head?
In-Reply-To: <89f0f8d50901071755s2d93c428w7fedebfed41a173b@mail.gmail.com>
References: <89f0f8d50901071755s2d93c428w7fedebfed41a173b@mail.gmail.com>
Message-ID: <7547287e0901071920g4fa37ff1x5f7d7dfca7085d56@mail.gmail.com>

On Thu, Jan 8, 2009 at 2:55 AM, Mindshare Studios
<info@mindsharestudios.com> wrote:
> Is it possible to access post custom fields inside of plugin function
> that hooks into wp_head?

Kind of.

> Here's my code (however $post_ID isn't being returned):
>
> global $post_ID;

None of the global post variables are available outside the loop.

If you want it, you have to get it from the global $wp_query.

I think you can find it in $wp_query->post->ID.

Other relevant functions could be: have_posts(), is_single(), perhaps is_post().

/ Johan
From info at mindsharestudios.com  Thu Jan  8 03:35:48 2009
From: info at mindsharestudios.com (Mindshare Studios)
Date: Thu Jan  8 03:35:59 2009
Subject: [wp-hackers] get_post_meta in wp_head?
In-Reply-To: <7547287e0901071920g4fa37ff1x5f7d7dfca7085d56@mail.gmail.com>
References: <89f0f8d50901071755s2d93c428w7fedebfed41a173b@mail.gmail.com>
	<7547287e0901071920g4fa37ff1x5f7d7dfca7085d56@mail.gmail.com>
Message-ID: <89f0f8d50901071935y6227c2dkb82d124a5eefc9f6@mail.gmail.com>

Thanks I got it working!
From cclarkson at htcomp.net  Thu Jan  8 07:34:19 2009
From: cclarkson at htcomp.net (Charles K. Clarkson)
Date: Thu Jan  8 07:34:43 2009
Subject: [wp-hackers] get_post_meta in wp_head?
In-Reply-To: <89f0f8d50901071935y6227c2dkb82d124a5eefc9f6@mail.gmail.com>
References: <89f0f8d50901071755s2d93c428w7fedebfed41a173b@mail.gmail.com>	<7547287e0901071920g4fa37ff1x5f7d7dfca7085d56@mail.gmail.com>
	<89f0f8d50901071935y6227c2dkb82d124a5eefc9f6@mail.gmail.com>
Message-ID: <4965AC7B.3050907@htcomp.net>

Mindshare Studios wrote:
> Thanks I got it working!

Perhaps you could share what you did to get it working so future readers 
might learn from you.


HTH,

Charles Clarkson
-- 
Mobile Home Investor
Free Market Advocate
Programmer

Stephenville, TX
http://www.clarksonenergyhomes.com/wordpress/about/
http://twitter.com/CharlesClarkson
+1 (254) 968-8328
From dougal at gunters.org  Thu Jan  8 12:42:51 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Thu Jan  8 12:43:05 2009
Subject: [wp-hackers] get_post_meta in wp_head?
In-Reply-To: <89f0f8d50901071935y6227c2dkb82d124a5eefc9f6@mail.gmail.com>
References: <89f0f8d50901071755s2d93c428w7fedebfed41a173b@mail.gmail.com>	<7547287e0901071920g4fa37ff1x5f7d7dfca7085d56@mail.gmail.com>
	<89f0f8d50901071935y6227c2dkb82d124a5eefc9f6@mail.gmail.com>
Message-ID: <4965F4CB.1080602@gunters.org>

Mindshare Studios wrote:
> Thanks I got it working!
>   
Great! I was going to refer you to my HeadMeta plugin. It's an example 
of using post meta information outside the loop:

  http://wordpress.org/extend/plugins/headmeta/


-- 
Dougal Campbell <dougal@gunters.org <mailto:dougal@gunters.org>>
http://dougal.gunters.org/
http://twitter.com/dougal
From wordpress at santosj.name  Thu Jan  8 15:08:28 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Thu Jan  8 15:08:41 2009
Subject: [wp-hackers] Profiling Wordpress filters and actions
In-Reply-To: <7547287e0901071902x50b0031cg560e737f9718ded1@mail.gmail.com>
References: <7547287e0901071902x50b0031cg560e737f9718ded1@mail.gmail.com>
Message-ID: <496616EC.1010207@santosj.name>

I see so your example involves the hooks and not the Plugin API itself. 
It is somewhat difficult to optimize the Plugin API. Well, you could 
just use plugins which use functions instead of classes or classes that 
use static methods.

Jacob Santos

Johan Eenfeldt wrote:
> Hi,
>
> I've spent some time recently profiling the performance of filters and
> actions in Wordpress and thought I should write down some of what I've
> found in the event that anyone else is interested.. :)
>
> Summary[1]:
> Filters take ~12% of the total page creation time on home page, 63% on
> a page with 400 comments.
>
> The most expensive ones are, without any competition, the ones in
> (among other places) 'the_content' and 'comment_text'. They take 6.2%
> of total time on homepage, 62.2% on a page with 400 comments (this
> used to be ~82% until someone changed convert_smilies() :) ).
>
> If you want spend some effort optimizing things and make it count this
> is the list: wptexturize 18%, wpautop 17%, make_clickable 14%,
> convert_smilies 10% (used to be 55%).
>
> That is percentage of total page creation time on that 400 comments page.
>
> Actions take almost no time.
>
> Numbers overview[2]:
>
> Loadtime homepage:
> v2.6.5: 0.440s, Filters/Actions: 0.073s (16.6%), Db: 0.032s (7.3%)
> Trunk: 0.436s, Filters/Actions: 0.052s (11.8%), Db: 0.031s (7.1%)
>
> Loadtime post with 403 comments:
> v2.6.5: 7.052s, Filters/Actions: 5.856s (83%), Db: 0.033s (0.5%)
> Trunk: 3.439s, Filters/Actions: 2.174s (63.2%), Db: 0.036s (1%)
>
> Thank you for reading,
> Johan
>
> [1] Measured current trunk (10331) with all plugins turned of, except
> homebrew profiling. Numbers vary quite a bit between pageloads but
> percentages stay pretty even. The profiling adds up to ~5% on total
> time, should be mostly outside the filter numbers. This is just from
> my computer at home. Beware of statistics.
> [2] Remember [1].
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From if.website at gmail.com  Thu Jan  8 15:27:54 2009
From: if.website at gmail.com (Austin Matzko)
Date: Thu Jan  8 15:28:01 2009
Subject: [wp-hackers] Profiling Wordpress filters and actions
In-Reply-To: <7547287e0901071902x50b0031cg560e737f9718ded1@mail.gmail.com>
References: <7547287e0901071902x50b0031cg560e737f9718ded1@mail.gmail.com>
Message-ID: <674b4a3b0901080727i6fff4022rf6446fcfb00380c9@mail.gmail.com>

On Wed, Jan 7, 2009 at 9:02 PM, Johan Eenfeldt <johan.eenfeldt@gmail.com> wrote:
> The most expensive ones are, without any competition, the ones in
> (among other places) 'the_content' and 'comment_text'. They take 6.2%
> of total time on homepage, 62.2% on a page with 400 comments (this
> used to be ~82% until someone changed convert_smilies() :) ).
>
> If you want spend some effort optimizing things and make it count this
> is the list: wptexturize 18%, wpautop 17%, make_clickable 14%,
> convert_smilies 10% (used to be 55%).

Since comments are not usually edited that much it makes sense to
apply the formatting functions to the comment text *before* it's saved
(using the 'pre_comment_content' filter perhaps) rather than on
rendering.  That would take care of a big chunk of those performance
issues.

Of course, changing this in core would involve some tricky
backwards-compatibility issues.
From johan.eenfeldt at gmail.com  Thu Jan  8 15:51:51 2009
From: johan.eenfeldt at gmail.com (Johan Eenfeldt)
Date: Thu Jan  8 15:51:59 2009
Subject: [wp-hackers] Profiling Wordpress filters and actions
In-Reply-To: <496616EC.1010207@santosj.name>
References: <7547287e0901071902x50b0031cg560e737f9718ded1@mail.gmail.com>
	<496616EC.1010207@santosj.name>
Message-ID: <7547287e0901080751h7d977115hda05986b9fcb1777@mail.gmail.com>

On Thu, Jan 8, 2009 at 4:08 PM, Jacob Santos <wordpress@santosj.name> wrote:
> I see so your example involves the hooks and not the Plugin API itself. It
> is somewhat difficult to optimize the Plugin API. Well, you could just use
> plugins which use functions instead of classes or classes that use static
> methods.

Well, sure.

But compared to the other stuff here, the cost of the API and
different calling methods are very small. From testing it the
difference between a function and a class called in a filter is not
quite 1 millisecond when called 400times (out of maybe 3.5s unmodified
page creation time in this case).

>From some performance work I've on the various plugins I use the
biggest things (by far) is to not add those filters unless it will
actually be used, and try to work around db calls.

In this case I profiled with all plugins deactivated.

/ Johan
From info at mindsharestudios.com  Thu Jan  8 17:26:57 2009
From: info at mindsharestudios.com (Mindshare Studios)
Date: Thu Jan  8 17:27:07 2009
Subject: [wp-hackers] get_post_meta in wp_head?
In-Reply-To: <4965AC7B.3050907@htcomp.net>
References: <89f0f8d50901071755s2d93c428w7fedebfed41a173b@mail.gmail.com>
	<7547287e0901071920g4fa37ff1x5f7d7dfca7085d56@mail.gmail.com>
	<89f0f8d50901071935y6227c2dkb82d124a5eefc9f6@mail.gmail.com>
	<4965AC7B.3050907@htcomp.net>
Message-ID: <89f0f8d50901080926p2d3cf1b2y44d9fab519a60746@mail.gmail.com>

Hi Charles,

I actually just had to use $post instead and it worked fine:

global $post;
$id = $post->ID;
$latitude = get_post_meta($id, '_latitude', true);
if ($latitude != '') {
// do stuff
}

On Thu, Jan 8, 2009 at 12:34 AM, Charles K. Clarkson
<cclarkson@htcomp.net> wrote:
> Mindshare Studios wrote:
>>
>> Thanks I got it working!
>
> Perhaps you could share what you did to get it working so future readers
> might learn from you.
From dangayle at gmail.com  Thu Jan  8 21:18:20 2009
From: dangayle at gmail.com (Dan Gayle)
Date: Thu Jan  8 21:18:31 2009
Subject: [wp-hackers] Adding meta data to categories
Message-ID: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>

One of the sites that I have been working uses custom fields  
extensively for things like <meta> tags, sidebar information, etc. The  
main issue that we are running into is that we want the same  
flexibility for category/search pages. So my main question is, What is  
the best way to add custom meta fields to non-posts/pages?

The categories page in the admin doesn't appear to have any hooks that  
we could latch onto to create extra inputs, and if we figure out that  
part, which database table would be the best table to add the info to?
From ncrice at gmail.com  Thu Jan  8 23:02:32 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Thu Jan  8 23:02:44 2009
Subject: [wp-hackers] wp_list_pages $args
Message-ID: <862d087f0901081502u4d65114dl88c9d767fa114b3b@mail.gmail.com>

Can someone please tell me why $args isn't filterable in wp_list_pages?  I
know, I can filter the $args for wp_page_menu, but some people might not
want to use that function just yet.
I think it would be a good goal to make as many input variables as humanly
possible filterable.
http://twitter.com/nathanrice/statuses/972614314

Nathan
From mikeschinkel at gmail.com  Thu Jan  8 23:18:03 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Thu Jan  8 23:18:14 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
Message-ID: <b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>

Dan:

I would add records to wp_terms & wp_term_taxomony like this  (in raw SQL):

SET @term_id:= 3;
INSERT wp_terms (term_id,name,slug,term_group) VALUES (@term_id,'Category
Tags','category-tags',0);
INSERT wp_term_taxonomy term_id,taxonomy,parent,count) VALUES
(@term_id,'category_tag',0,0);

 *Note that the "3" this assumes you are using a default install of WP2.7
where you have only two terms, use whatever the largest term_id you have in
the the wp_terms table + 1.*

Once you have this then just add a record to wp_term_relationships for each
tag that you apply to a category where the object_id should be set to the
term_id for the category being tagged and the term_taxonomy_id should be set
to the term_id of the tag that you want to apply to this category.

This sounds like a very useful plugin, I could even use on my current
project.  Will you release to the community after you develop it?

-Mike Schinkel
http://mikeschinkel.com/custom-wordpress-plugins/


On Thu, Jan 8, 2009 at 4:18 PM, Dan Gayle <dangayle@gmail.com> wrote:

> One of the sites that I have been working uses custom fields extensively
> for things like <meta> tags, sidebar information, etc. The main issue that
> we are running into is that we want the same flexibility for category/search
> pages. So my main question is, What is the best way to add custom meta
> fields to non-posts/pages?
> The categories page in the admin doesn't appear to have any hooks that we
> could latch onto to create extra inputs, and if we figure out that part,
> which database table would be the best table to add the info to?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
From jer-wphackers at simianuprising.com  Fri Jan  9 00:28:02 2009
From: jer-wphackers at simianuprising.com (Jeremy Clarke)
Date: Fri Jan  9 00:28:16 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
Message-ID: <e1202cb10901081628u5d031f44nfca80d925c806a59@mail.gmail.com>

Not sure if the previous response is what you were looking for. If I
read you right, you want to add arbitrary metadata to categories and
are looking for the best place because there is no term_meta table.

In that case, you might want to use the category_description field
along with either some sneaky regex or serialization. You might have
to create an alternate UI to enter the data, but you could tell your
script to just save the data into the description field, then load
that data and parse it when you want to actually use it.

The plugin FeedWordPress does something similar with Links, storing
various settings used to aggregate the links in the link description
field and parsing them as necessary.

If you're careful (and have smart users) you can even set up a
human-readable syntax so you can just go in and type the info in the
category description field directly. Actually, if you just formatted
it in the wp_parse_args() style (and have appropriate metadata that
would work with that format) then you could do it pretty quickly.


-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From ionfish at gmail.com  Fri Jan  9 00:33:19 2009
From: ionfish at gmail.com (Benedict Eastaugh)
Date: Fri Jan  9 00:33:31 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <e1202cb10901081628u5d031f44nfca80d925c806a59@mail.gmail.com>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
	<e1202cb10901081628u5d031f44nfca80d925c806a59@mail.gmail.com>
Message-ID: <fd3b80510901081633t54203f31v6beae56f83e52b9f@mail.gmail.com>

> If you're careful (and have smart users) you can even set up a
> human-readable syntax so you can just go in and type the info in the
> category description field directly. Actually, if you just formatted
> it in the wp_parse_args() style (and have appropriate metadata that
> would work with that format) then you could do it pretty quickly.

YAML might be a good option for a human-readable data format, although
the semantic whitespace could be tricky given that the tab key will
take them to the next field.

http://yaml.org/
From if.website at gmail.com  Fri Jan  9 00:40:03 2009
From: if.website at gmail.com (Austin Matzko)
Date: Fri Jan  9 00:40:12 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
Message-ID: <674b4a3b0901081640s4b6b2eeamcc2611d7d8ff5ae7@mail.gmail.com>

On Thu, Jan 8, 2009 at 5:18 PM, Mike Schinkel <mikeschinkel@gmail.com> wrote:
> SET @term_id:= 3;
> INSERT wp_terms (term_id,name,slug,term_group) VALUES (@term_id,'Category
> Tags','category-tags',0);
> INSERT wp_term_taxonomy term_id,taxonomy,parent,count) VALUES
> (@term_id,'category_tag',0,0);

There's no need to do direct MySQL queries.  WordPress's taxonomy
system has a very rich API.
See register_taxonomy(), wp_insert_term(), and wp_set_object_terms().

>   the term_taxonomy_id should be set
> to the term_id of the tag that you want to apply to this category.

Actually---and confusingly---term taxonomy ids and term ids are *not*
the same (sometimes they happen to be the same).
From wp-hackers at striderweb.com  Fri Jan  9 00:54:58 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jan  9 00:55:45 2009
Subject: [wp-hackers] Profiling Wordpress filters and actions
In-Reply-To: <674b4a3b0901080727i6fff4022rf6446fcfb00380c9@mail.gmail.com>
References: <7547287e0901071902x50b0031cg560e737f9718ded1@mail.gmail.com>
	<674b4a3b0901080727i6fff4022rf6446fcfb00380c9@mail.gmail.com>
Message-ID: <6DA9EC21-D04D-43A3-9BB9-0821446F9454@striderweb.com>


On Jan 8, 2009, at 9:27 AM, Austin Matzko wrote:

> Since comments are not usually edited that much it makes sense to
> apply the formatting functions to the comment text *before* it's saved
> (using the 'pre_comment_content' filter perhaps) rather than on
> rendering.  That would take care of a big chunk of those performance
> issues.
>
> Of course, changing this in core would involve some tricky
> backwards-compatibility issues.

...and even more down the road if the filter outputs ever change.   
Probably best to filter at render.

Stephen
From wordpress at dd32.id.au  Fri Jan  9 01:10:54 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan  9 01:11:06 2009
Subject: [wp-hackers] Profiling Wordpress filters and actions
In-Reply-To: <6DA9EC21-D04D-43A3-9BB9-0821446F9454@striderweb.com>
References: <7547287e0901071902x50b0031cg560e737f9718ded1@mail.gmail.com>
	<674b4a3b0901080727i6fff4022rf6446fcfb00380c9@mail.gmail.com>
	<6DA9EC21-D04D-43A3-9BB9-0821446F9454@striderweb.com>
Message-ID: <45055a190901081710l72cf56deka042bd384eb2a59b@mail.gmail.com>

Alternativly, It'd be easy to just cache the list of filters which are
applying to the content, If the list changes, then re-render the
post/comment on the next view

Theres this for post content: http://trac.wordpress.org/ticket/1595
(Ignore my comment on that, i actually think it'd be a good idea now
that i've thought about it more)
The only thing i see bad about that, is shortcodes with dynamic
content, it'd be a pain for them to have to be rewritten to skip the
caching.. But for example, the WP built-in content filters could be
pre-rendered, they dont change.. plugin filters could then filter that
pre-rendered output :)

2009/1/9 Stephen Rider <wp-hackers@striderweb.com>:
>
> On Jan 8, 2009, at 9:27 AM, Austin Matzko wrote:
>
>> Since comments are not usually edited that much it makes sense to
>> apply the formatting functions to the comment text *before* it's saved
>> (using the 'pre_comment_content' filter perhaps) rather than on
>> rendering.  That would take care of a big chunk of those performance
>> issues.
>>
>> Of course, changing this in core would involve some tricky
>> backwards-compatibility issues.
>
> ...and even more down the road if the filter outputs ever change.  Probably
> best to filter at render.
>
> Stephen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From a.haakmat at chello.nl  Fri Jan  9 01:13:36 2009
From: a.haakmat at chello.nl (Pascal Haakmat)
Date: Fri Jan  9 02:31:13 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <20090109002818.760AD73AA@comox.textdrive.com>
References: <20090109002818.760AD73AA@comox.textdrive.com>
Message-ID: <20090109011336.GA20814@awacs.dhs.org>

09/01/09 00:28, Dan Gayle <dangayle@gmail.com> wrote:

> The categories page in the admin doesn't appear to have any hooks that  
> we could latch onto to create extra inputs, and if we figure out that  
> part, which database table would be the best table to add the info to?

I ran into this issue as well. As a curiosity I posted a patch here
last week which addresses this issue by adding a 'flags' column to the
wp_terms table. Tags/flags are stored in this column as a
comma-separated list. This is not ideal for a number of reasons, but
if implemented as a MySQL ENUM type SQL query semantics could be
preserved and it would also be very space and time efficient.

I didn't think to use Mike's suggestion of using the term system to
tag categories. It sounds quite elegant if perhaps a bit indirect.

Having such functionality would I think certainly be useful.

Pascal.

From dangayle at gmail.com  Fri Jan  9 02:40:08 2009
From: dangayle at gmail.com (Dan Gayle)
Date: Fri Jan  9 02:40:01 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <e1202cb10901081628u5d031f44nfca80d925c806a59@mail.gmail.com>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
	<e1202cb10901081628u5d031f44nfca80d925c806a59@mail.gmail.com>
Message-ID: <5A459740-B402-4F1C-9F02-A6F49114CD41@gmail.com>

That's a good idea. We already have a shortcode plugin that uses the  
following php function:

$content_array = array_map('trim',explode('|',$content));

Basically, it breaks $content into array items when delineated by  
pipes ( | ).

The only problem would be trying to remember the order in which the  
array items need to be entered, but it would still be fairly human  
readable.

> If you're careful (and have smart users) you can even set up a
> human-readable syntax so you can just go in and type the info in the
> category description field directly. Actually, if you just formatted
> it in the wp_parse_args() style (and have appropriate metadata that
> would work with that format) then you could do it pretty quickly.
From cclarkson at htcomp.net  Fri Jan  9 04:47:27 2009
From: cclarkson at htcomp.net (Charles K. Clarkson)
Date: Fri Jan  9 04:47:55 2009
Subject: [wp-hackers] Call to add_action() outside function in theme.php
Message-ID: <4966D6DF.1050504@htcomp.net>

Hello,

    I was checking the preview_theme() function in wp-includes/theme.php 
to add a reference page in the codex when I noticed a statement outside 
the the function.

     Is there a good reason for this call to add_action() being located 
outside all function definitions in this file? Shouldn't this be located 
at the top of the file where people would be less likely to miss it?

function preview_theme() {
     .
     .
     .
}
add_action('setup_theme', 'preview_theme');


Thanks,

Charles Clarkson
-- 
Mobile Home Investor
Free Market Advocate
Programmer

Stephenville, TX
http://www.clarksonenergyhomes.com/wordpress/about/
http://twitter.com/CharlesClarkson
+1 (254) 968-8328
From wordpress at dd32.id.au  Fri Jan  9 04:58:18 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan  9 04:58:32 2009
Subject: [wp-hackers] Call to add_action() outside function in theme.php
In-Reply-To: <4966D6DF.1050504@htcomp.net>
References: <4966D6DF.1050504@htcomp.net>
Message-ID: <45055a190901082058o553211a8qb950690ce089216d@mail.gmail.com>

It depends on the developer..
As a dev, I dont look at the headers of files, i just zip straight
through to the function in question, In some files having a few
thousand lines, skipping back to the start, or end of the file for the
actions/filters would simply be anoying..

I personally prefer the calls to be at the start of the function, ie:

add_action('boo', 'bar');
function bar(){
return 'baz';
}
But that can have problems with PHPDoc i think.. And so it then ends
up before pages worth of phpdoc:
add_action('boo', 'bar');
/**
*
*
....
*
*/
function bar(){
return 'baz';
}


Others prefer them at the bottom, (And some claim they need to be at
the bottom possibly due to the way that other languages dont know of
the function until after its defined, not a problem with PHP).

Theres also default-filters.php which makes sense for some items.. But
doesnt really suit items such as preview_theme(); all in all.. I think
its going to continue to be up to whoever creates the filter for where
the filters are defined.. Some files define the actions along with the
function, some define them in blocks at the end of the file, some
define in default-filters.php, some define in other functions
elsewhere..

2009/1/9 Charles K. Clarkson <cclarkson@htcomp.net>:
> Hello,
>
>   I was checking the preview_theme() function in wp-includes/theme.php to
> add a reference page in the codex when I noticed a statement outside the the
> function.
>
>    Is there a good reason for this call to add_action() being located
> outside all function definitions in this file? Shouldn't this be located at
> the top of the file where people would be less likely to miss it?
>
> function preview_theme() {
>    .
>    .
>    .
> }
> add_action('setup_theme', 'preview_theme');
>
>
> Thanks,
>
> Charles Clarkson
> --
> Mobile Home Investor
> Free Market Advocate
> Programmer
>
> Stephenville, TX
> http://www.clarksonenergyhomes.com/wordpress/about/
> http://twitter.com/CharlesClarkson
> +1 (254) 968-8328
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jayarjo at gmail.com  Fri Jan  9 07:32:31 2009
From: jayarjo at gmail.com (dave jaggy)
Date: Fri Jan  9 07:32:43 2009
Subject: [wp-hackers] hooks in Ozh Dropdown Admin Menu
Message-ID: <9aa12a490901082332t5245e91x1ac4993ed893d3e0@mail.gmail.com>

That's kinda generic question, but I'd like to hear what does Ozh
think about it himself. I found out that hooks that were available in
previous version of the plugin, through which one could customize the
look and content of the menu, are now gone from the newest version
designed specially for WP 2.7. What were the motives behind this step?
I mean will hooks return in future versions or there are gone forever?
And why... anyway?
From ozh at planetozh.com  Fri Jan  9 10:31:47 2009
From: ozh at planetozh.com (Ozh)
Date: Fri Jan  9 10:32:27 2009
Subject: [wp-hackers] hooks in Ozh Dropdown Admin Menu
In-Reply-To: <9aa12a490901082332t5245e91x1ac4993ed893d3e0@mail.gmail.com>
Message-ID: <OFF8416BE7.EAA9D4FE-ONC1257539.0039A38D-C1257539.0039D7FB@notes.edfgdf.fr>

>That's kinda generic question, but I'd like to hear what does Ozh
>think about it himself. I found out that hooks that were available in
>previous version of the plugin, through which one could customize the
>look and content of the menu, are now gone from the newest version
>designed specially for WP 2.7. What were the motives behind this step?
>I mean will hooks return in future versions or there are gone forever?
>And why... anyway?

Either I don't get the question or you missed something. The hooks to add 
a custom icon to a plugin in menus are still there (the plugin itself uses 
it to get its own icon).

If I didn't get the point of your question, feel free to reply off-list 
(ozh at planetozh dot com) (unless of course there's something of general 
interest for the list)

Ozh

From burobjorn at gmail.com  Fri Jan  9 16:11:36 2009
From: burobjorn at gmail.com (Burobjorn)
Date: Fri Jan  9 16:11:52 2009
Subject: [wp-hackers] Is there already an IDEAL (dutch pay system) Wordpress
	plugin available?
Message-ID: <49677738.9090303@gmail.com>

Hi,

I'm advising a client on whether they should use Wordpress or not for
their business. They use the Dutch pay system IDEAL[1] to grant visitors
access to their website. So basically I need to do some form of
user-authentication and perhaps in the future they might want to use
also for online commerce.

I have searched the plugins repository and did a Google search and AFAIK
there is no such plugin which offers the IDEAL pay system functionality
in anyway. Am I correct that no such plugin (yet) exists?

If not, are more people interested in such a plugin? I plan on creating
a plugin for it, but I prefer not to re-invent the wheel again (except
if my wheel is much better ;)) and exchange ideas before coding. Thanks
in advance for any pointers on this.

[1] http://www.ideal.nl/?lang=eng-GB

all the best,

grtz
BjornW

-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-126
3551 EM Utrecht
The Netherlands

phone: +31 6 49 74 78 70
http://www.burobjorn.nl
From brian at nerdlife.net  Fri Jan  9 17:13:08 2009
From: brian at nerdlife.net (Brian Krausz)
Date: Fri Jan  9 17:13:21 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <674b4a3b0901081640s4b6b2eeamcc2611d7d8ff5ae7@mail.gmail.com>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
	<674b4a3b0901081640s4b6b2eeamcc2611d7d8ff5ae7@mail.gmail.com>
Message-ID: <63a3a6ce0901090913x55d4a7c8i594a73778bece452@mail.gmail.com>

Also, my plugin abstracts that API into a GUI, may help with what you're
trying to do.

http://wordpress.org/extend/plugins/custom-taxonomies/

--Brian

On Thu, Jan 8, 2009 at 7:40 PM, Austin Matzko <if.website@gmail.com> wrote:

> On Thu, Jan 8, 2009 at 5:18 PM, Mike Schinkel <mikeschinkel@gmail.com>
> wrote:
> > SET @term_id:= 3;
> > INSERT wp_terms (term_id,name,slug,term_group) VALUES (@term_id,'Category
> > Tags','category-tags',0);
> > INSERT wp_term_taxonomy term_id,taxonomy,parent,count) VALUES
> > (@term_id,'category_tag',0,0);
>
> There's no need to do direct MySQL queries.  WordPress's taxonomy
> system has a very rich API.
> See register_taxonomy(), wp_insert_term(), and wp_set_object_terms().
>
> >   the term_taxonomy_id should be set
> > to the term_id of the tag that you want to apply to this category.
>
> Actually---and confusingly---term taxonomy ids and term ids are *not*
> the same (sometimes they happen to be the same).
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From will at willnorris.com  Fri Jan  9 20:09:42 2009
From: will at willnorris.com (Will Norris)
Date: Fri Jan  9 20:09:54 2009
Subject: [wp-hackers] overriding pluggable.php functions
Message-ID: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>

I've been toying around with this thought for a little while, and  
would like hear what others think.  Right now I'm working on an OAuth  
plugin for WordPress.  If we can get it all done in time, it may go  
into WP 2.8, but for the time being I'm just writing it as a plugin.   
One of the things I'm doing is to override wp_authenticate for XML-RPC  
requests so that I can do OAuth authentication rather than standard  
username and password.  This much is really simple:

if (XMLRPC_REQUEST && !function_exists('wp_authenticate')) {
     function wp_authenticate($username, $password) { /* My custom  
function */ }
}

My problem is that if the current request is not using OAuth, then I'd  
like to fall back to the standard username/password logic found in  
pluggable.php.  Unfortunately, because pluggable.php works by  
completely replacing the functions, I can't call that version of  
wp_authenticate.  The only way I could fall back to that logic is to  
completely copy and paste it all into my custom wp_authenticate  
function.  This is of course bad practice, and not future-proof.  So  
I've been thinking about how it would work if pluggable.php were  
instead made up of functions like:

if (!function_exists('wp_authenticate')) {
     function wp_authenticate($username, $password) {
         return _wp_authenticate($username, $password) {
     }
}

function _wp_authenticate($username, $password) {
     /* all the normal authentication logic */
}

So basically, the functions which can be replaced by plugins don't  
actually include any logic whatsoever, they simply call "private"  
counterparts.  This way, I can override wp_authenticate, but can still  
fall back by calling _wp_authenticate myself.  Just to be clear, this  
has nothing to do with OAuth directly... that just happens to be the  
thing I'm working on right now.  I've actually run into this quite  
regularly for a number of different functions in pluggable.php.  If  
this has already been discussed, just point me to that thread so I can  
get caught up.

Thoughts?

-will
From otto at ottodestruct.com  Fri Jan  9 20:55:56 2009
From: otto at ottodestruct.com (Otto)
Date: Fri Jan  9 20:56:08 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
Message-ID: <161617690901091255g48dcc80cmb2414b78bd81731@mail.gmail.com>

I think that is a really solid idea. Make an enhancement ticket on
trac about it.

On Fri, Jan 9, 2009 at 2:09 PM, Will Norris <will@willnorris.com> wrote:
> I've been toying around with this thought for a little while, and would like
> hear what others think.  Right now I'm working on an OAuth plugin for
> WordPress.  If we can get it all done in time, it may go into WP 2.8, but
> for the time being I'm just writing it as a plugin.  One of the things I'm
> doing is to override wp_authenticate for XML-RPC requests so that I can do
> OAuth authentication rather than standard username and password.  This much
> is really simple:
>
> if (XMLRPC_REQUEST && !function_exists('wp_authenticate')) {
>    function wp_authenticate($username, $password) { /* My custom function */
> }
> }
>
> My problem is that if the current request is not using OAuth, then I'd like
> to fall back to the standard username/password logic found in pluggable.php.
>  Unfortunately, because pluggable.php works by completely replacing the
> functions, I can't call that version of wp_authenticate.  The only way I
> could fall back to that logic is to completely copy and paste it all into my
> custom wp_authenticate function.  This is of course bad practice, and not
> future-proof.  So I've been thinking about how it would work if
> pluggable.php were instead made up of functions like:
>
> if (!function_exists('wp_authenticate')) {
>    function wp_authenticate($username, $password) {
>        return _wp_authenticate($username, $password) {
>    }
> }
>
> function _wp_authenticate($username, $password) {
>    /* all the normal authentication logic */
> }
>
> So basically, the functions which can be replaced by plugins don't actually
> include any logic whatsoever, they simply call "private" counterparts.  This
> way, I can override wp_authenticate, but can still fall back by calling
> _wp_authenticate myself.  Just to be clear, this has nothing to do with
> OAuth directly... that just happens to be the thing I'm working on right
> now.  I've actually run into this quite regularly for a number of different
> functions in pluggable.php.  If this has already been discussed, just point
> me to that thread so I can get caught up.
>
> Thoughts?
>
> -will
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From will at willnorris.com  Fri Jan  9 21:24:33 2009
From: will at willnorris.com (Will Norris)
Date: Fri Jan  9 21:24:48 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <161617690901091255g48dcc80cmb2414b78bd81731@mail.gmail.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<161617690901091255g48dcc80cmb2414b78bd81731@mail.gmail.com>
Message-ID: <55A22FCC-6D18-461B-AD44-7B159FAC8AE9@willnorris.com>

On Jan 9, 2009, at 12:55 PM, Otto wrote:

> I think that is a really solid idea. Make an enhancement ticket on
> trac about it.

done. http://trac.wordpress.org/ticket/8833
From joseph at randomnetworks.com  Sat Jan 10 00:03:01 2009
From: joseph at randomnetworks.com (Joseph Scott)
Date: Sat Jan 10 00:03:20 2009
Subject: [wp-hackers] Thomas Hawk
In-Reply-To: <ca7320070901071626n69eb95f8kf4bca41a996a8708@mail.gmail.com>
References: <ca7320070901071626n69eb95f8kf4bca41a996a8708@mail.gmail.com>
Message-ID: <6A3A9EE8-EE92-4FEF-944E-494C5B8A6211@randomnetworks.com>


On Jan 7, 2009, at 5:26 PM, Aaron Brazell wrote:

> I also notice that the Blogger importer caps out at 5000 comments.
>
> So in an effort to save time, has anyone done anything with the  
> Blogger Atom
> format Export and developed a related WP importer? Second, does  
> anyone know
> about the 5000 comment ceiling (or appearance thereof).


This appears to have been a limitation in the Blogger export process:

	http://twitter.com/Blogger/


--
Joseph Scott
joseph@josephscott.org
http://josephscott.org/




From wp-hackers at striderweb.com  Sat Jan 10 02:11:18 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sat Jan 10 02:11:44 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
Message-ID: <0E1DD28E-70A1-4789-888F-4849B5B90FE2@striderweb.com>

It's almost like putting a do_action at the end of every pluggable  
function -- but more powerful and cheaper. :)

Stephen

On Jan 9, 2009, at 2:09 PM, Will Norris wrote:

> I've been thinking about how it would work if pluggable.php were  
> instead made up of functions like:
>
> if (!function_exists('wp_authenticate')) {
>    function wp_authenticate($username, $password) {
>        return _wp_authenticate($username, $password) {
>    }
> }
>
> function _wp_authenticate($username, $password) {
>    /* all the normal authentication logic */
> }
>
> So basically, the functions which can be replaced by plugins don't  
> actually include any logic whatsoever, they simply call "private"  
> counterparts.  This way, I can override wp_authenticate, but can  
> still fall back by calling _wp_authenticate myself.
From gaarai at gaarai.com  Sat Jan 10 02:13:12 2009
From: gaarai at gaarai.com (Gaarai)
Date: Sat Jan 10 02:13:53 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <0E1DD28E-70A1-4789-888F-4849B5B90FE2@striderweb.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<0E1DD28E-70A1-4789-888F-4849B5B90FE2@striderweb.com>
Message-ID: <49680438.3060709@gaarai.com>

I have to say Will, that's a fantastic idea. Great work.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Stephen Rider wrote:
> It's almost like putting a do_action at the end of every pluggable 
> function -- but more powerful and cheaper. :)
>
> Stephen
>
> On Jan 9, 2009, at 2:09 PM, Will Norris wrote:
>
>> I've been thinking about how it would work if pluggable.php were 
>> instead made up of functions like:
>>
>> if (!function_exists('wp_authenticate')) {
>>    function wp_authenticate($username, $password) {
>>        return _wp_authenticate($username, $password) {
>>    }
>> }
>>
>> function _wp_authenticate($username, $password) {
>>    /* all the normal authentication logic */
>> }
>>
>> So basically, the functions which can be replaced by plugins don't 
>> actually include any logic whatsoever, they simply call "private" 
>> counterparts.  This way, I can override wp_authenticate, but can 
>> still fall back by calling _wp_authenticate myself.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From dougal at gunters.org  Sat Jan 10 03:12:25 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Sat Jan 10 03:14:23 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
Message-ID: <49681219.4060100@gunters.org>

Will Norris wrote:
> [...] So I've been thinking about how it would work if pluggable.php 
> were instead made up of functions like:
>
> if (!function_exists('wp_authenticate')) {
>     function wp_authenticate($username, $password) {
>         return _wp_authenticate($username, $password) {
>     }
> }
>
> function _wp_authenticate($username, $password) {
>     /* all the normal authentication logic */
> }
>
> So basically, the functions which can be replaced by plugins don't 
> actually include any logic whatsoever, they simply call "private" 
> counterparts.  This way, I can override wp_authenticate, but can still 
> fall back by calling _wp_authenticate myself. [...]

*headslap, because I didn't think of it myself*

+1 on this idea.

Sometime back, I had run into a a similar problem, wanting to override a 
pluggable function, but still be able to fall back to the original code. 
Of course, I went with the quick-and-dirty solution of just copying the 
original function. But I knew it was an ugly solution, because it wasn't 
future-proof.

This is the kind of elegant solution that's needed. It's basically the 
procedural programming equivalent of being able to call a super() method 
in OOP. :)

-- 
Dougal Campbell <dougal@gunters.org <mailto:dougal@gunters.org>>
http://dougal.gunters.org/
http://twitter.com/dougal
From emmensetech at gmail.com  Sat Jan 10 03:53:59 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Sat Jan 10 03:54:12 2009
Subject: [wp-hackers] Thomas Hawk
In-Reply-To: <6A3A9EE8-EE92-4FEF-944E-494C5B8A6211@randomnetworks.com>
References: <ca7320070901071626n69eb95f8kf4bca41a996a8708@mail.gmail.com>
	<6A3A9EE8-EE92-4FEF-944E-494C5B8A6211@randomnetworks.com>
Message-ID: <ca7320070901091953g974cdeaw16365eef0fb8a6b2@mail.gmail.com>

All I can say is... Stay tuned. I've talked to the Blogger PM and just...
well... stay tuned. :)
-- 
Aaron Brazell
web:: www.technosailor.com
phone:: 410-608-6620
skype:: technosailor
twitter:: @technosailor


On Fri, Jan 9, 2009 at 7:03 PM, Joseph Scott <joseph@randomnetworks.com>wrote:

>
> On Jan 7, 2009, at 5:26 PM, Aaron Brazell wrote:
>
>  I also notice that the Blogger importer caps out at 5000 comments.
>>
>> So in an effort to save time, has anyone done anything with the Blogger
>> Atom
>> format Export and developed a related WP importer? Second, does anyone
>> know
>> about the 5000 comment ceiling (or appearance thereof).
>>
>
>
> This appears to have been a limitation in the Blogger export process:
>
>        http://twitter.com/Blogger/
>
>
> --
> Joseph Scott
> joseph@josephscott.org
> http://josephscott.org/
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From emmensetech at gmail.com  Sat Jan 10 04:19:38 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Sat Jan 10 04:19:50 2009
Subject: [wp-hackers] Thomas Hawk
In-Reply-To: <ca7320070901091953g974cdeaw16365eef0fb8a6b2@mail.gmail.com>
References: <ca7320070901071626n69eb95f8kf4bca41a996a8708@mail.gmail.com>
	<6A3A9EE8-EE92-4FEF-944E-494C5B8A6211@randomnetworks.com>
	<ca7320070901091953g974cdeaw16365eef0fb8a6b2@mail.gmail.com>
Message-ID: <ca7320070901092019y4ced221fhaaa7faea0d7dd931@mail.gmail.com>

On Fri, Jan 9, 2009 at 10:53 PM, Aaron Brazell <emmensetech@gmail.com>wrote:

> All I can say is... Stay tuned. I've talked to the Blogger PM and just...
> well... stay tuned. :)
> --
> Aaron Brazell
> web:: www.technosailor.com
> phone:: 410-608-6620
> skype:: technosailor
> twitter:: @technosailor
>
>
In fact... http://twitter.com/Blogger/status/1107883681

I haven't verified this yet. Won't be able to until tomorrow. But I've
confirmed with my contact that at least he thinks this problem is resolved.
In case anyone is doing a MASSIVE Blogger export at any time soon. :)
From will at willnorris.com  Sat Jan 10 06:13:31 2009
From: will at willnorris.com (Will Norris)
Date: Sat Jan 10 06:13:49 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <49681219.4060100@gunters.org>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
Message-ID: <81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>

On Jan 9, 2009, at 7:12 PM, Dougal Campbell wrote:

> Will Norris wrote:
>> [...] So I've been thinking about how it would work if  
>> pluggable.php were instead made up of functions like:
>>
>> if (!function_exists('wp_authenticate')) {
>>    function wp_authenticate($username, $password) {
>>        return _wp_authenticate($username, $password) {
>>    }
>> }
>>
>> function _wp_authenticate($username, $password) {
>>    /* all the normal authentication logic */
>> }
>>
>> So basically, the functions which can be replaced by plugins don't  
>> actually include any logic whatsoever, they simply call "private"  
>> counterparts.  This way, I can override wp_authenticate, but can  
>> still fall back by calling _wp_authenticate myself. [...]
>
> *headslap, because I didn't think of it myself*
>
> +1 on this idea.
>
> Sometime back, I had run into a a similar problem, wanting to  
> override a pluggable function, but still be able to fall back to the  
> original code. Of course, I went with the quick-and-dirty solution  
> of just copying the original function. But I knew it was an ugly  
> solution, because it wasn't future-proof.
>
> This is the kind of elegant solution that's needed. It's basically  
> the procedural programming equivalent of being able to call a  
> super() method in OOP. :)

I actually chatted with Peter Westwood in #wordpress-dev today and he  
suggested using filters instead... there is certainly an elegance to  
this.  pluggable.php was designed to *replace* functionality, not  
*add* it.  There is already a great mechanism in wordpress to add  
functionality... filters and actions.  So imagine something along the  
lines of...

   if (!function_exists('wp_authenticate')) {
     function wp_authenticate($username, $password) {
       return apply_filters('authenticate', null, $username, password);
     }
   }

   add_filter('authenticate', '_wp_authenticate', 10, 3);
   function _wp_authenticate($user, $username, $password) {
     /* all the normal authentication logic */
   }



Now I could do something like the following in my plugin...

   add_filter('authenticate', 'my_authenticate', 9, 3);
   function my_authenticate($user, $username, $password) {
     if ( /* some check*/) {
       /* custom authenticate logic here */

       // just remove the default authentication filter
       remove_filter('authenticate', '_wp_authenticate');

       // or remove them all
       remove_all_filters('authenticate');
     }
     return $user;
   }


This way we get all the power and flexibility that comes from the  
hooks system.  You do have to think about other plugins that may be  
implementing the same hook, but that's no different than is being done  
today.  Perhaps in the example above, the /* some check */ statement  
should include something along the lines of checking that $user is  
null?  I don't know.  What do you others think?

-will



From wordpress at dd32.id.au  Sat Jan 10 06:31:13 2009
From: wordpress at dd32.id.au (DD32)
Date: Sat Jan 10 06:31:25 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
Message-ID: <45055a190901092231n504dde4lf9e9358c51d61243@mail.gmail.com>

Ooh, Now -that- would be better..

I'm building something on top of WordPress atm, and due to the nature
of it, I've had to override from pluggable functions to get the
functionality i wanted.. However, theres a huge But to that, By
overriding the functionality, I've removed the ability for users to
override the authentication methods themselves.. So right now, its
either my app, or authenticate against a 3rd party.. (App = Its not a
plugin, its not atheme, its a entire app with WP as a backend)

If it was changed to use filters like that, Then it'd be possible for
both my app and for 3rd-party authentication to work at the same
time.. (Assuming the 3rd party auth. used the filters too).. I hadnt
yet sat down and thought about a workaround, but filters definately
fit the bill :)

2009/1/10 Will Norris <will@willnorris.com>:
> On Jan 9, 2009, at 7:12 PM, Dougal Campbell wrote:
> I actually chatted with Peter Westwood in #wordpress-dev today and he
> suggested using filters instead... there is certainly an elegance to this.
>  pluggable.php was designed to *replace* functionality, not *add* it.  There
> is already a great mechanism in wordpress to add functionality... filters
> and actions.  So imagine something along the lines of...
From will at willnorris.com  Sat Jan 10 08:48:12 2009
From: will at willnorris.com (Will Norris)
Date: Sat Jan 10 08:48:24 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
Message-ID: <92282559-27E9-4DC6-8038-9A8DD36837AD@willnorris.com>

Just implemented this to get OAuth working, and found that you don't  
need to remove other filters.  At least the default filter should  
first check the $user variable, and if set, bail out.  Plugins  
*should* do the same thing, but may not if they have good reason to.   
Updated example inline.

On Jan 9, 2009, at 10:13 PM, Will Norris wrote:
> I actually chatted with Peter Westwood in #wordpress-dev today and  
> he suggested using filters instead... there is certainly an elegance  
> to this.  pluggable.php was designed to *replace* functionality, not  
> *add* it.  There is already a great mechanism in wordpress to add  
> functionality... filters and actions.  So imagine something along  
> the lines of...
>
>  if (!function_exists('wp_authenticate')) {
>    function wp_authenticate($username, $password) {
>      return apply_filters('authenticate', null, $username, password);
>    }
>  }
>
>  add_filter('authenticate', '_wp_authenticate', 10, 3);
>  function _wp_authenticate($user, $username, $password) {
>    /* all the normal authentication logic */
>  }

this would now become...

   function _wp_authenticate($user, $username, $password) {
       if (is_a($user, 'WP_User')) return $user;

       /* all the normal authentication logic */

       return $user;
   }


> Now I could do something like the following in my plugin...
>
>  add_filter('authenticate', 'my_authenticate', 9, 3);
>  function my_authenticate($user, $username, $password) {
>    if ( /* some check*/) {
>      /* custom authenticate logic here */
>
>      // just remove the default authentication filter
>      remove_filter('authenticate', '_wp_authenticate');
>
>      // or remove them all
>      remove_all_filters('authenticate');
>    }
>    return $user;
>  }

this gets simplified, and now looks exactly like the standard function  
above:

   function my_authenticate($user, $username, $password) {
       if (is_a($user, 'WP_User')) return $user;  // or leave this out  
if I don't care about other authentication plugins

       /* custom authenticate logic here that may or may not update  
value of $user */

       return $user;
   }
From ryanmccue at cubegames.net  Sat Jan 10 09:22:31 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Sat Jan 10 09:23:30 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
Message-ID: <496868D7.50903@cubegames.net>

Will Norris wrote:
>   if (!function_exists('wp_authenticate')) {
>     function wp_authenticate($username, $password) {
>       return apply_filters('authenticate', null, $username, password);
>     }
>   }

Instead of calling apply_filters() with a null value to filter, call
do_action() instead, as that's what it's built for.

-- 
Ryan McCue
<http://cubegames.net/>

From will at willnorris.com  Sat Jan 10 10:36:20 2009
From: will at willnorris.com (Will Norris)
Date: Sat Jan 10 10:36:31 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <496868D7.50903@cubegames.net>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
	<496868D7.50903@cubegames.net>
Message-ID: <9C7B7F86-9C07-489B-BA56-E2498A1CA618@willnorris.com>


On Jan 10, 2009, at 1:22 AM, Ryan McCue wrote:

> Will Norris wrote:
>>  if (!function_exists('wp_authenticate')) {
>>    function wp_authenticate($username, $password) {
>>      return apply_filters('authenticate', null, $username, password);
>>    }
>>  }
>
> Instead of calling apply_filters() with a null value to filter, call
> do_action() instead, as that's what it's built for.


Actions are just for firing off events at a particular point in the  
code.  The different functions which implement the same action hook do  
not interact with each other at all, nor do they return any values.

Filters on the other hand, are specifically for taking a value, and  
passing it through the multiple filters, with the expectation that a  
final (perhaps modified) value will be returned at the end.  The  
functions which implement the same filter hook are each passed the  
newly updated value in turn, and have the opportunity to modify the  
value further before passing it on to the next function.

in the case of wp_authenticate(), it is expected to return either null  
or an WP_User object.  We begin by passing in null.  If any of the  
filter implementations are able to authenticate the user by whatever  
means, all they need to do is return a new WP_User object.  Otherwise,  
they just return what they were originally passed in.  If no filter  
function is able to authenticate the user, then null ends up being  
returned.

If we were to use do_action(), nothing would ever be returned by  
wp_authenticate.

-will
From scribu at gmail.com  Sat Jan 10 10:43:55 2009
From: scribu at gmail.com (scribu)
Date: Sat Jan 10 10:44:06 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <9C7B7F86-9C07-489B-BA56-E2498A1CA618@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
	<496868D7.50903@cubegames.net>
	<9C7B7F86-9C07-489B-BA56-E2498A1CA618@willnorris.com>
Message-ID: <349fe48b0901100243w13825a37tcd42615d67344251@mail.gmail.com>

If a filter were to be used on wp_authenticate, why would the function need
to be in pluggable.php (save for backwards compatibility)?

-- 
http://scribu.net
From will at willnorris.com  Sat Jan 10 10:53:22 2009
From: will at willnorris.com (Will Norris)
Date: Sat Jan 10 10:53:33 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <349fe48b0901100243w13825a37tcd42615d67344251@mail.gmail.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
	<496868D7.50903@cubegames.net>
	<9C7B7F86-9C07-489B-BA56-E2498A1CA618@willnorris.com>
	<349fe48b0901100243w13825a37tcd42615d67344251@mail.gmail.com>
Message-ID: <E03A1823-B50A-4625-85B7-724BB5D6ACDB@willnorris.com>


On Jan 10, 2009, at 2:43 AM, scribu wrote:

> If a filter were to be used on wp_authenticate, why would the  
> function need
> to be in pluggable.php (save for backwards compatibility)?

that would be the only reason.
From wordpress at dd32.id.au  Sat Jan 10 10:53:50 2009
From: wordpress at dd32.id.au (DD32)
Date: Sat Jan 10 10:54:01 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <349fe48b0901100243w13825a37tcd42615d67344251@mail.gmail.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
	<496868D7.50903@cubegames.net>
	<9C7B7F86-9C07-489B-BA56-E2498A1CA618@willnorris.com>
	<349fe48b0901100243w13825a37tcd42615d67344251@mail.gmail.com>
Message-ID: <45055a190901100253u48e8717cvc24e72e7351b122f@mail.gmail.com>

Backwards compat would be the only reason to have it replaceable like
that still..
Probably makes sense really to move to filters though.

2009/1/10 scribu <scribu@gmail.com>:
> If a filter were to be used on wp_authenticate, why would the function need
> to be in pluggable.php (save for backwards compatibility)?
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From otto at ottodestruct.com  Sat Jan 10 20:18:30 2009
From: otto at ottodestruct.com (Otto)
Date: Sat Jan 10 20:18:39 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
Message-ID: <161617690901101218m6f1ab4e6q88c773c2baea00a9@mail.gmail.com>

On Sat, Jan 10, 2009 at 12:13 AM, Will Norris <will@willnorris.com> wrote:
> What do you others think?

Another way to do this sort of thing is to have a special return value
on a filter.

function wp_authenticate($username, $password) {
  $pre = apply_filters( 'wp_authenticate', false, $username, $password );
  if ( false !== $pre ) return $pre;
  .. normal wp_auth logic here ..
}

Then, to hook in your function, instead of replacing the original, you
simply create your own and hook it in, like so:

function my_authenticate($value, $username, $password) {
.. do my authentication...
...oh noes, I can't authenticate, let's fall back to normal logic...
return false;
}
add_filter('wp_authenticate', 'my_authenticate',10,3);

This is the same method used in a few other places, like in the
get_option function with the pre_option_* filter. Obviously, this only
works for functions that don't return true/false normally, but most
every function has some kind of invalid value that can be returned to
trigger it.

Alternatively, one could use Exceptions. Raise the exception, catch
it, then do the default logic if it's the exception you're looking
for. This would be the ideal way, but I'm not sure exceptions are 100%
PHP4 compatible in all cases.

-Otto
From otto at ottodestruct.com  Sat Jan 10 20:23:28 2009
From: otto at ottodestruct.com (Otto)
Date: Sat Jan 10 20:23:38 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <9C7B7F86-9C07-489B-BA56-E2498A1CA618@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
	<496868D7.50903@cubegames.net>
	<9C7B7F86-9C07-489B-BA56-E2498A1CA618@willnorris.com>
Message-ID: <161617690901101223k3db78131s40a69c26ee7a9ca6@mail.gmail.com>

On Sat, Jan 10, 2009 at 4:36 AM, Will Norris <will@willnorris.com> wrote:
> in the case of wp_authenticate(), it is expected to return either null or an
> WP_User object.  We begin by passing in null.  If any of the filter
> implementations are able to authenticate the user by whatever means, all
> they need to do is return a new WP_User object.  Otherwise, they just return
> what they were originally passed in.  If no filter function is able to
> authenticate the user, then null ends up being returned.

Hah. I like this much better.  Instead of calling wp_authenticate in
the code anywhere, we hook it to a filter. Then you say that every
authentication function needs to hook into that filter and have code
like if ($value !== null) return $value; right at the top of the
function. That way, if somebody authenticated already, it bypasses the
rest and falls on through. You can use the priority of the filter to
determine the order of authentication attempts.

-Otto
From will at willnorris.com  Sat Jan 10 21:04:03 2009
From: will at willnorris.com (Will Norris)
Date: Sat Jan 10 21:04:15 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <161617690901101223k3db78131s40a69c26ee7a9ca6@mail.gmail.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
	<496868D7.50903@cubegames.net>
	<9C7B7F86-9C07-489B-BA56-E2498A1CA618@willnorris.com>
	<161617690901101223k3db78131s40a69c26ee7a9ca6@mail.gmail.com>
Message-ID: <76AA01C9-12A2-447E-BE96-3F266F00F5C3@willnorris.com>


On Jan 10, 2009, at 12:23 PM, Otto wrote:

> On Sat, Jan 10, 2009 at 4:36 AM, Will Norris <will@willnorris.com>  
> wrote:
>> in the case of wp_authenticate(), it is expected to return either  
>> null or an
>> WP_User object.  We begin by passing in null.  If any of the filter
>> implementations are able to authenticate the user by whatever  
>> means, all
>> they need to do is return a new WP_User object.  Otherwise, they  
>> just return
>> what they were originally passed in.  If no filter function is able  
>> to
>> authenticate the user, then null ends up being returned.
>
> Hah. I like this much better.  Instead of calling wp_authenticate in
> the code anywhere, we hook it to a filter. Then you say that every
> authentication function needs to hook into that filter and have code
> like if ($value !== null) return $value; right at the top of the
> function. That way, if somebody authenticated already, it bypasses the
> rest and falls on through. You can use the priority of the filter to
> determine the order of authentication attempts.

Well, I would still leave wp_authenticate() as a public function that  
can be called from wherever... just make it a wrapper around the  
apply_filters stuff.  And as you hinted at in your other post, we  
actually don't need to create the new private functions either...  
instead of having both wp_authenticate and _wp_authenticate which has  
the standard logic, we simply need to add the apply_filters call at  
the beginning of the existing function...

   function wp_authenticate($username, $password) {
       $pre = apply_filters( 'wp_authenticate', false, $username,  
$password );
       if ( false !== $pre ) return $pre;
       .. normal wp_auth logic here ..
   }

Of course, there is still something attractive about being able to  
call the standard logic directly anytime you want.  This only works  
cleanly if it's separated out into another function.  Otherwise, you'd  
have to clear out all the filters, then call wp_authenticate().

-will
From will at willnorris.com  Sat Jan 10 21:17:48 2009
From: will at willnorris.com (Will Norris)
Date: Sat Jan 10 21:18:00 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <76AA01C9-12A2-447E-BE96-3F266F00F5C3@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
	<496868D7.50903@cubegames.net>
	<9C7B7F86-9C07-489B-BA56-E2498A1CA618@willnorris.com>
	<161617690901101223k3db78131s40a69c26ee7a9ca6@mail.gmail.com>
	<76AA01C9-12A2-447E-BE96-3F266F00F5C3@willnorris.com>
Message-ID: <CE2F78A5-0CA4-4659-904B-A0A7CF5329CF@willnorris.com>


On Jan 10, 2009, at 1:04 PM, Will Norris wrote:

>
> On Jan 10, 2009, at 12:23 PM, Otto wrote:
>
>> On Sat, Jan 10, 2009 at 4:36 AM, Will Norris <will@willnorris.com>  
>> wrote:
>>> in the case of wp_authenticate(), it is expected to return either  
>>> null or an
>>> WP_User object.  We begin by passing in null.  If any of the filter
>>> implementations are able to authenticate the user by whatever  
>>> means, all
>>> they need to do is return a new WP_User object.  Otherwise, they  
>>> just return
>>> what they were originally passed in.  If no filter function is  
>>> able to
>>> authenticate the user, then null ends up being returned.
>>
>> Hah. I like this much better.  Instead of calling wp_authenticate in
>> the code anywhere, we hook it to a filter. Then you say that every
>> authentication function needs to hook into that filter and have code
>> like if ($value !== null) return $value; right at the top of the
>> function. That way, if somebody authenticated already, it bypasses  
>> the
>> rest and falls on through. You can use the priority of the filter to
>> determine the order of authentication attempts.
>
> Well, I would still leave wp_authenticate() as a public function  
> that can be called from wherever... just make it a wrapper around  
> the apply_filters stuff.  And as you hinted at in your other post,  
> we actually don't need to create the new private functions either...  
> instead of having both wp_authenticate and _wp_authenticate which  
> has the standard logic, we simply need to add the apply_filters call  
> at the beginning of the existing function...
>
>  function wp_authenticate($username, $password) {
>      $pre = apply_filters( 'wp_authenticate', false, $username,  
> $password );
>      if ( false !== $pre ) return $pre;
>      .. normal wp_auth logic here ..
>  }
>
> Of course, there is still something attractive about being able to  
> call the standard logic directly anytime you want.  This only works  
> cleanly if it's separated out into another function.  Otherwise,  
> you'd have to clear out all the filters, then call wp_authenticate().

The more I'm looking at the authentication code, especially  
wp_signon(), the more I think it is really a unique case.  I think  
more work needs to be done here beyond just adding a filter like we've  
talked about.  I do believe the filter will be part of the overall  
solution though.  I'm going to focus on the wp_authenticate case for  
the time being and see what I can come up with.  Once that's working,  
I suspect we can do similar things with filters (or privates  
functions, whichever seems to work best) with the other pluggable.php  
functions.

-will
From dougal at gunters.org  Sat Jan 10 22:43:11 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Sat Jan 10 22:43:25 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
Message-ID: <4969247F.3030501@gunters.org>

Will Norris wrote:
> I actually chatted with Peter Westwood in #wordpress-dev today and he 
> suggested using filters instead... there is certainly an elegance to 
> this.  pluggable.php was designed to *replace* functionality, not 
> *add* it.  There is already a great mechanism in wordpress to add 
> functionality... filters and actions.  So imagine something along the 
> lines of... [...example using filters...]

At first I thought this was just adding a couple of extra layers of 
function calls without any real advantage. But then I realized that this 
approach avoids a major pitfall of the existing method and the 
previously suggested enhancement: function namespace collisions. 
Currently, if you have two different plugins trying to replace the same 
pluggable function, they can trigger a PHP fatal error unless the 
plugins are *also* using function_exists() as a safety net.

Good evolution of a good idea. :)

-- 
Dougal Campbell <dougal@gunters.org <mailto:dougal@gunters.org>>
http://dougal.gunters.org/
http://twitter.com/dougal
From ryanmccue at cubegames.net  Sat Jan 10 22:44:59 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Sat Jan 10 22:45:26 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <161617690901101218m6f1ab4e6q88c773c2baea00a9@mail.gmail.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>	<49681219.4060100@gunters.org>	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
	<161617690901101218m6f1ab4e6q88c773c2baea00a9@mail.gmail.com>
Message-ID: <496924EB.8070004@cubegames.net>

Otto wrote:
> Alternatively, one could use Exceptions. Raise the exception, catch
> it, then do the default logic if it's the exception you're looking
> for. This would be the ideal way, but I'm not sure exceptions are 100%
> PHP4 compatible in all cases.
>   

Exceptions are PHP5+ only, unfortunately, so they're out of the picture
until WordPress goes PHP5+ only.

-- 
Ryan McCue
<http://cubegames.net/>

From ozh at planetozh.com  Sat Jan 10 22:50:38 2009
From: ozh at planetozh.com (Ozh)
Date: Sat Jan 10 22:50:51 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <496924EB.8070004@cubegames.net>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
	<161617690901101218m6f1ab4e6q88c773c2baea00a9@mail.gmail.com>
	<496924EB.8070004@cubegames.net>
Message-ID: <ae81acd10901101450t6721e4aap3f041c615230e8db@mail.gmail.com>

On Sat, Jan 10, 2009 at 11:44 PM, Ryan McCue <ryanmccue@cubegames.net> wrote:
> Exceptions are PHP5+ only, unfortunately, so they're out of the picture
> until WordPress goes PHP5+ only.
>

Hey? It's been like... ages! since the last "Go PHP5" thread :)

Ozh
-- 
http://planetOzh.com ~ Blog and WordPress Stuff
From ryanmccue at cubegames.net  Sat Jan 10 23:00:00 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Sat Jan 10 23:00:27 2009
Subject: [wp-hackers] Go PHP5
In-Reply-To: <ae81acd10901101450t6721e4aap3f041c615230e8db@mail.gmail.com>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>	<49681219.4060100@gunters.org>	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>	<161617690901101218m6f1ab4e6q88c773c2baea00a9@mail.gmail.com>	<496924EB.8070004@cubegames.net>
	<ae81acd10901101450t6721e4aap3f041c615230e8db@mail.gmail.com>
Message-ID: <49692870.8000608@cubegames.net>

Ozh wrote:
> On Sat, Jan 10, 2009 at 11:44 PM, Ryan McCue <ryanmccue@cubegames.net> wrote:
>   
>> Exceptions are PHP5+ only, unfortunately, so they're out of the picture
>> until WordPress goes PHP5+ only.
>>
>>     
>
> Hey? It's been like... ages! since the last "Go PHP5" thread :)
>
> Ozh
>   

Surely you're not suggesting something here... :-P

-- 
Ryan McCue
<http://cubegames.net/>

From wp-hackers at itsananderson.com  Sun Jan 11 00:50:43 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Sun Jan 11 00:50:59 2009
Subject: [wp-hackers] overriding pluggable.php functions
In-Reply-To: <496924EB.8070004@cubegames.net>
References: <84F3E81F-EB81-4DB4-8AB8-6A667AF15904@willnorris.com>
	<49681219.4060100@gunters.org>
	<81B79474-91D9-4CC4-8DDB-F7A75FA5EDD0@willnorris.com>
	<161617690901101218m6f1ab4e6q88c773c2baea00a9@mail.gmail.com>
	<496924EB.8070004@cubegames.net>
Message-ID: <6dbcd2670901101650q309a0c04k552f079fbe25174@mail.gmail.com>

Along with the PHP4 compatibility issue, it's almost always a bad idea to
use exceptions for testing. Exceptions take enough time and memory to
generate that you're usually better off using an if statement if you can. Of
course there are sometimes cases where you can't use an if statement (which
is why exceptions exist in the first place) but avoiding exceptions when you
can is usually a good idea.

On Sat, Jan 10, 2009 at 5:44 PM, Ryan McCue <ryanmccue@cubegames.net> wrote:

> Otto wrote:
> > Alternatively, one could use Exceptions. Raise the exception, catch
> > it, then do the default logic if it's the exception you're looking
> > for. This would be the ideal way, but I'm not sure exceptions are 100%
> > PHP4 compatible in all cases.
> >
>
> Exceptions are PHP5+ only, unfortunately, so they're out of the picture
> until WordPress goes PHP5+ only.
>
> --
> Ryan McCue
> <http://cubegames.net/>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Will Anderson
http://www.itsananderson.com/
From hempsworth at googlemail.com  Sun Jan 11 03:13:14 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Sun Jan 11 03:13:25 2009
Subject: [wp-hackers] Add a button to TinyMCE to add p.class
Message-ID: <5a1dad880901101913o12b7f177v2bb93127cc7bca97@mail.gmail.com>

Hey all,
This will be my first plugin, and it's to do with TinyMCE so I've got the
feeling it'll be a baptism of fire...
However, I only want something simple!

I would like a user to be able to select some text, press a button on the
TinyMCE console which would just add a <p class="myclass"> to the selected
text. This is because I'm working with complete HTML n00bs, and they won't
want the hassle of editing the HTML every time.

How would I go about this?

Many thanks,
-- Alex
From brian at nerdlife.net  Sun Jan 11 07:50:07 2009
From: brian at nerdlife.net (Brian Krausz)
Date: Sun Jan 11 07:50:23 2009
Subject: [wp-hackers] Plugin SVN Issues?
Message-ID: <63a3a6ce0901102350i7345be90h3880ca33822d0443@mail.gmail.com>

I've been trying to update my plugin for a week now.

http://plugins.svn.wordpress.org/custom-taxonomies/

trunk/readme.txt shows 1.3 as the stable tag, and the folder exists, but the
version isn't showing up at
http://wordpress.org/extend/plugins/custom-taxonomies/download/ (still shows
1.2)

Any ideas?  I think my use of a sub-minor version broke things, since I had
the same issue with 1.2.2 and renamed it in an attempt to fix it.

Thanks,
Brian
From michael at semperfiwebdesign.com  Sun Jan 11 12:11:38 2009
From: michael at semperfiwebdesign.com (Michael Torbert)
Date: Sun Jan 11 12:11:51 2009
Subject: [wp-hackers] re: Plugin SVN Issues?
Message-ID: <a7fb7f880901110411t5537d9d1o646070986c0ed1f4@mail.gmail.com>

You need to update the version in custom-taxonomies.php to 1.3 also.

-----------------
I've been trying to update my plugin for a week now.

http://plugins.svn.wordpress.org/custom-taxonomies/

trunk/readme.txt shows 1.3 as the stable tag, and the folder exists, but the
version isn't showing up at
http://wordpress.org/extend/plugins/custom-taxonomies/download/ (still shows
1.2)

Any ideas?  I think my use of a sub-minor version broke things, since I had
the same issue with 1.2.2 and renamed it in an attempt to fix it.

Thanks,
Brian
From brian at nerdlife.net  Sun Jan 11 17:22:19 2009
From: brian at nerdlife.net (Brian Krausz)
Date: Sun Jan 11 17:22:31 2009
Subject: [wp-hackers] re: Plugin SVN Issues?
In-Reply-To: <a7fb7f880901110411t5537d9d1o646070986c0ed1f4@mail.gmail.com>
References: <a7fb7f880901110411t5537d9d1o646070986c0ed1f4@mail.gmail.com>
Message-ID: <63a3a6ce0901110922r54fb7be6hb8bb9f25ab94b463@mail.gmail.com>

Wow, I'm dumb...that was one of those brainfart moments.  Thanks!

--Brian

On Sun, Jan 11, 2009 at 7:11 AM, Michael Torbert <
michael@semperfiwebdesign.com> wrote:

> You need to update the version in custom-taxonomies.php to 1.3 also.
>
> -----------------
> I've been trying to update my plugin for a week now.
>
> http://plugins.svn.wordpress.org/custom-taxonomies/
>
> trunk/readme.txt shows 1.3 as the stable tag, and the folder exists, but
> the
> version isn't showing up at
> http://wordpress.org/extend/plugins/custom-taxonomies/download/ (still
> shows
> 1.2)
>
> Any ideas?  I think my use of a sub-minor version broke things, since I had
> the same issue with 1.2.2 and renamed it in an attempt to fix it.
>
> Thanks,
> Brian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From dan at sproutventure.com  Mon Jan 12 00:51:41 2009
From: dan at sproutventure.com (Daniel Cameron)
Date: Mon Jan 12 00:51:57 2009
Subject: [wp-hackers] filter the_exceprt
Message-ID: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>

Hey guys,
Can someone help me here. I've written a filter but it seems like it's not
working correctly and I'm at my wits end.

function sp_excerpt($text) { // Fakes an excerpt if needed
if ( '' == $text ) {
$text = get_the_content('');
 $text = strip_shortcodes( $text );
 $text = apply_filters('the_content', $text);
$text = str_replace(']]>', ']]&gt;', $text);
$text = strip_tags($text);
$excerpt_length = 55;
$words = explode(' ', $text, $excerpt_length + 1);
if (count($words) > $excerpt_length) {
array_pop($words);
array_push($words, 'Read More');
$text = implode(' ', $words);
}
}
return $text;
}
// Add filter to the_content
add_filter('the_excerpt', 'sp_excerpt');


Any help would be appreciated.

I'm basically trying to get rid of that horrible [...] ellipses forces on
the_exceprt, so maybe you have another solution (without a plugin).

Thanks.
From dan at sproutventure.com  Mon Jan 12 01:07:48 2009
From: dan at sproutventure.com (Daniel Cameron)
Date: Mon Jan 12 01:07:59 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
Message-ID: <505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>

>
>
> I'm basically trying to get rid of that horrible [...] ellipses forces on
> the_exceprt, so maybe you have another solution (without a plugin).
>
>
I noticed I needed to set the priority. Here's what I'm working with now,
although there's no output.

add_filter('get_the_excerpt', 'sp_excerpt', 1, 2);
function sp_excerpt($text) { // Fakes an excerpt if needed
if ( '' == $text ) {
$text = get_the_content('');
 $text = strip_shortcodes( $text );
 $text = apply_filters('the_content', $text);
$text = str_replace(']]>', ']]&gt;', $text);
$text = strip_tags($text);
$excerpt_length = 55;
$words = explode(' ', $text, $excerpt_length + 1);
if (count($words) > $excerpt_length) {
array_pop($words);
array_push($words, 'Read More');
$text = implode(' ', $words);
}
}
return $text;
}
From jaredbangs at gmail.com  Mon Jan 12 01:31:14 2009
From: jaredbangs at gmail.com (Jared Bangs)
Date: Mon Jan 12 01:31:25 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
Message-ID: <7b4922320901111731j38cfbf1ck465c73a05671da81@mail.gmail.com>

If you're just trying to use '[Read More]' instead of '[...]', why not
just do something like:

function sp_excerpt($text)
{
    return str_replace('[...]', '[Read More]', $text);
}
add_filter('the_excerpt', 'sp_excerpt');

I noticed that you've changed to using the 'get_the_excerpt' filter
rather than 'the_excerpt', which I think is why your original version
wasn't working.

The wp_trim_excerpt function (assuming that's where you got this from)
is already attached and run during 'get_the_excerpt', so then during
'the_excerpt', $text will never be an empty string (because
wp_trim_excerpt already ran), so the first if() is false and it falls
through and returns the text unmodified.

Unless you need to do something other than that basic replacement, I'd
recommend something more simple like I've got above.

If you really want your routine to run *instead of* wp_trim_excerpt,
you should *unregister* that filter for 'get_the_excerpt' and register
your function in its place. But then you'd have to make sure to keep
all that extra code up to date as WP advances and potentially changes
the way it does wp_trim_excerpt, which is probably more of a pain than
it's worth.

- Jared

On Sun, Jan 11, 2009 at 5:07 PM, Daniel Cameron <dan@sproutventure.com> wrote:
>>
>>
>> I'm basically trying to get rid of that horrible [...] ellipses forces on
>> the_exceprt, so maybe you have another solution (without a plugin).
>>
>>
> I noticed I needed to set the priority. Here's what I'm working with now,
> although there's no output.
>
> add_filter('get_the_excerpt', 'sp_excerpt', 1, 2);
> function sp_excerpt($text) { // Fakes an excerpt if needed
> if ( '' == $text ) {
> $text = get_the_content('');
>  $text = strip_shortcodes( $text );
>  $text = apply_filters('the_content', $text);
> $text = str_replace(']]>', ']]&gt;', $text);
> $text = strip_tags($text);
> $excerpt_length = 55;
> $words = explode(' ', $text, $excerpt_length + 1);
> if (count($words) > $excerpt_length) {
> array_pop($words);
> array_push($words, 'Read More');
> $text = implode(' ', $words);
> }
> }
> return $text;
> }
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jer at simianuprising.com  Mon Jan 12 03:22:39 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon Jan 12 03:22:50 2009
Subject: [wp-hackers] Add a button to TinyMCE to add p.class
In-Reply-To: <5a1dad880901101913o12b7f177v2bb93127cc7bca97@mail.gmail.com>
References: <5a1dad880901101913o12b7f177v2bb93127cc7bca97@mail.gmail.com>
Message-ID: <e1202cb10901111922p68376b2ft1a42b0008af6d455@mail.gmail.com>

http://codex.wordpress.org/TinyMCE_Custom_Buttons

Omg would I also love someone to make this something I can add to WP
easily. Even just having a template for a  "tinymce plugin" (i.e. the
mce plugin rather than the wp plugin that would be used to inject the
mce plugin) that just does the standard wrapping of a html tag around
the selected bit of text (for p.class or whatever else people need).

In the html editor the buttonsnap thing is pretty good at making this
easy, but all the existing mce plugins are super complicated (viper's
is a good example but has way too much going on, I can't parse out the
hopefully simple parts that I actually need). There are several layers
of files with various naming conventions that you need to keep track
of and some pretty ugly looking JS (alright, I just can't read JS, but
still, it's farily involved).

Has anyone done this already that could just share the minimum stuff
needed to have a tag button running smoothly? It would be fantastic to
have a wp based API for adding simple buttonsnap-style mce buttons,
but I'll settle for just not having to write the whole plugin myself
:)

Thanks if anyone has input,

-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From dan at sproutventure.com  Mon Jan 12 04:39:33 2009
From: dan at sproutventure.com (Daniel Cameron)
Date: Mon Jan 12 04:39:42 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
Message-ID: <505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>

>
>
> add_filter('get_the_excerpt', 'sp_excerpt', 1, 2);
> function sp_excerpt($text) { // Fakes an excerpt if needed
> if ( '' == $text ) {
> $text = get_the_content('');
>  $text = strip_shortcodes( $text );
>  $text = apply_filters('the_content', $text);
> $text = str_replace(']]>', ']]&gt;', $text);
>  $text = strip_tags($text);
> $excerpt_length = 55;
> $words = explode(' ', $text, $excerpt_length + 1);
>  if (count($words) > $excerpt_length) {
> array_pop($words);
> array_push($words, 'Read More');
>  $text = implode(' ', $words);
> }
> }
>  return $text;
> }
>
>

Turns out this does work, I just placed did a bone-headed move and placed
the add_filter at the top instead of the bottom--where it needs to be to
initiate.

A string replace is a good idea, I originally had something very similar but
I just reminded myself I need to have that "read more" link. So hopefully
I'll get there with the above code.

Thanks again.
From wordpress at dd32.id.au  Mon Jan 12 04:48:48 2009
From: wordpress at dd32.id.au (DD32)
Date: Mon Jan 12 04:48:56 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
	<505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
Message-ID: <45055a190901112048w1189f97bo23c5287b54054961@mail.gmail.com>

Placing add_filter() before OR after a function makes NO difference.
(Assuming that you dont have a missing bracket and it thinks the
function ends furthur down than you thought it did)

PHP parses the entire file before executing it, So it knows about a
function on the thousandth line if you call it on the 2nd line.
Unlike JavaScript where you cannot refer to a function before the JS
parser has actually made it down to the line where the function is
defined.

2009/1/12 Daniel Cameron <dan@sproutventure.com>:
> Turns out this does work, I just placed did a bone-headed move and placed
> the add_filter at the top instead of the bottom--where it needs to be to
> initiate.
From ryanmccue at cubegames.net  Mon Jan 12 04:47:30 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Mon Jan 12 04:49:44 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
	<505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
Message-ID: <496ACB62.2030004@cubegames.net>

Daniel Cameron wrote:
> Turns out this does work, I just placed did a bone-headed move and placed
> the add_filter at the top instead of the bottom--where it needs to be to
> initiate.

It doesn't matter where you place it in the code, all the functions are
loaded into memory before the rest of the file is parsed. You must have
changed something else at the same time to make it work.

-- 
Ryan McCue
<http://cubegames.net/>

From dan at sproutventure.com  Mon Jan 12 05:40:52 2009
From: dan at sproutventure.com (Daniel Cameron)
Date: Mon Jan 12 05:41:01 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <496ACB62.2030004@cubegames.net>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
	<505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
	<496ACB62.2030004@cubegames.net>
Message-ID: <505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>

Thanks Ryan and DD32, I'll have to remember that.
followup: I ended up using excerpt_advanced to build
something entirely different since I needed the "Read More" to link amongst
other things like stripping tags and character count.
From jaredbangs at gmail.com  Mon Jan 12 06:13:53 2009
From: jaredbangs at gmail.com (Jared Bangs)
Date: Mon Jan 12 06:14:02 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
	<505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
	<496ACB62.2030004@cubegames.net>
	<505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>
Message-ID: <7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>

On Sun, Jan 11, 2009 at 9:40 PM, Daniel Cameron <dan@sproutventure.com> wrote:
> Thanks Ryan and DD32, I'll have to remember that.
> followup: I ended up using excerpt_advanced to build
> something entirely different since I needed the "Read More" to link amongst
> other things like stripping tags and character count.

Where is 'excerpt_advanced'? Is this a plugin you're making, replacing
the wp_trim_excerpt code?
From admin at laptoptips.ca  Mon Jan 12 06:37:35 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Mon Jan 12 06:39:11 2009
Subject: [wp-hackers] Add a button to TinyMCE to add p.class
In-Reply-To: <e1202cb10901111922p68376b2ft1a42b0008af6d455@mail.gmail.com>
References: <5a1dad880901101913o12b7f177v2bb93127cc7bca97@mail.gmail.com>
	<e1202cb10901111922p68376b2ft1a42b0008af6d455@mail.gmail.com>
Message-ID: <496AE52F.2040400@laptoptips.ca>

Jeremy Clarke wrote:
> Omg would I also love someone to make this something I can add to WP
> easily. Even just having a template for a  "tinymce plugin" (i.e. the
> mce plugin rather than the wp plugin that would be used to inject the
> mce plugin)...

The template is in the TinyMCE manual. Have a look at 
http://wiki.moxiecode.com/index.php/TinyMCE:Create_plugin/3.x

Also have a look at the API, specifically the DOMUtils class:
http://wiki.moxiecode.com/index.php/TinyMCE:API/tinymce.dom.DOMUtils

And of course download the full TinyMCE and have a look at the included 
plugins. There are a few examples of adding a button that would do 
simple addClass to the parent P tag.
From sales at emailappeal.com  Mon Jan 12 07:13:31 2009
From: sales at emailappeal.com (Jason DeVelvis)
Date: Mon Jan 12 07:14:02 2009
Subject: [wp-hackers] api.wordpress.org/themes ?
In-Reply-To: <20090112044946.1C9906B5F@comox.textdrive.com>
References: <20090112044946.1C9906B5F@comox.textdrive.com>
Message-ID: <00d801c97485$46658320$d3308960$@com>

I'm trying to code a themes installer plugin, similar to the plugin
installer in the core (I know, I know, it'll probably be in 2.8, but I want
it now...) and I've got it to do everything except find the proper theme
.zip file.

The API returns a download URL like
http://downloads.wordpress.org/theme/openair.zip which returns a 404... The
actual extend download URL for openair is
http://wordpress.org/extend/themes/download/openair.1.1.7.zip 

Any ideas why the API download URLs are invalid? Did I jump into the API too
early :) Could it be easily fixed so my plugin works? Or is there something
else going on in my code if the API is returning the wrong d/l links?

Here's the serialized api info for this call:
O:8:"stdClass":13:{s:4:"name";s:7:"OpenAir";s:4:"slug";s:7:"openair";s:7:"ve
rsion";N;s:6:"author";N;s:8:"requires";N;s:6:"tested";N;s:6:"rating";d:32;s:
11:"num_ratings";i:25;s:10:"downloaded";N;s:12:"last_updated";s:10:"2009-01-
07";s:8:"homepage";N;s:13:"download_link";s:48:"http://downloads.wordpress.o
rg/theme/openair.zip";s:4:"tags";a:6:{s:19:"threaded-comments-1";s:17:"threa
ded-comments";s:15:"right-sidebar-2";s:13:"right-sidebar";s:13:"fixed-width-
1";s:11:"fixed-width";s:5:"white";s:5:"white";s:4:"blue";s:4:"blue";s:13:"tw
o-columns-1";s:11:"two-columns";}}

Note, that api info is obtained with this line of code:
$api = themes_api('theme_information', array('slug' => $theme, 'fields' =>
array('sections' => false) ) ); //Save on a bit of bandwidth.

(where $theme = the slug I retrieved earlier in the process, which is
'openair')

Coincidentally, there is no version # passed with the api call either. Could
be the same problem?

Any help would be tremendous!

Thanks,
Jason

From wordpress at dd32.id.au  Mon Jan 12 07:26:02 2009
From: wordpress at dd32.id.au (DD32)
Date: Mon Jan 12 07:26:13 2009
Subject: [wp-hackers] api.wordpress.org/themes ?
In-Reply-To: <00d801c97485$46658320$d3308960$@com>
References: <20090112044946.1C9906B5F@comox.textdrive.com>
	<00d801c97485$46658320$d3308960$@com>
Message-ID: <45055a190901112326j6926e355s35a8115569384461@mail.gmail.com>

You want it now-now-now? Seriously, It'll be hitting trunk within the
next month.. I'm just waiting on some UI direction before submitting a
patch to trac for it.

The API probably has bugs and yes, you've jumped the gun :P, Because
i've not written the front end, so i've hard-coded the theme URL's for
now.. so the API hasnt really had a good testing.. (Infact, I dont
think its had any testing.. other than that it seemed to return the
useful results -- I didnt write it), The reason the URL's wrong, is
because it was a copy-paste of the plugin API code, the plugins and
theme URL types seem different :)

The Version of the API you're using depends on the URL for the actual
request, ie. http://api.wordpress.org/themes/info/1.0/ or
http://api.wordpress.org/themes/info/1.1/ (for a as yet, non-existant
version of the API)

Also, If you're defining any non-WP functions, it'd be appreciated if
you can prefix them with something, just so any Core function dont end
up conflicting with your plugin :) (I cant remember if themes_api() is
in trunk atm)

2009/1/12 Jason DeVelvis <sales@emailappeal.com>:
> I'm trying to code a themes installer plugin, similar to the plugin
> installer in the core (I know, I know, it'll probably be in 2.8, but I want
> it now...) and I've got it to do everything except find the proper theme
> .zip file.
>
> The API returns a download URL like
> http://downloads.wordpress.org/theme/openair.zip which returns a 404... The
> actual extend download URL for openair is
> http://wordpress.org/extend/themes/download/openair.1.1.7.zip
>
> Any ideas why the API download URLs are invalid? Did I jump into the API too
> early :) Could it be easily fixed so my plugin works? Or is there something
> else going on in my code if the API is returning the wrong d/l links?
>
> Here's the serialized api info for this call:
> O:8:"stdClass":13:{s:4:"name";s:7:"OpenAir";s:4:"slug";s:7:"openair";s:7:"ve
> rsion";N;s:6:"author";N;s:8:"requires";N;s:6:"tested";N;s:6:"rating";d:32;s:
> 11:"num_ratings";i:25;s:10:"downloaded";N;s:12:"last_updated";s:10:"2009-01-
> 07";s:8:"homepage";N;s:13:"download_link";s:48:"http://downloads.wordpress.o
> rg/theme/openair.zip";s:4:"tags";a:6:{s:19:"threaded-comments-1";s:17:"threa
> ded-comments";s:15:"right-sidebar-2";s:13:"right-sidebar";s:13:"fixed-width-
> 1";s:11:"fixed-width";s:5:"white";s:5:"white";s:4:"blue";s:4:"blue";s:13:"tw
> o-columns-1";s:11:"two-columns";}}
>
> Note, that api info is obtained with this line of code:
> $api = themes_api('theme_information', array('slug' => $theme, 'fields' =>
> array('sections' => false) ) ); //Save on a bit of bandwidth.
>
> (where $theme = the slug I retrieved earlier in the process, which is
> 'openair')
>
> Coincidentally, there is no version # passed with the api call either. Could
> be the same problem?
>
> Any help would be tremendous!
>
> Thanks,
> Jason
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From kazeneko at gmail.com  Mon Jan 12 07:39:10 2009
From: kazeneko at gmail.com (Kaz)
Date: Mon Jan 12 07:39:22 2009
Subject: [wp-hackers] Ignore Portions of URI
Message-ID: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>

Hello,

I'm hoping someone on this mailing list can help.

I need to run custom PHP code inside of WordPress generated posts and pages
with an odd requirement. I need WordPress to ignore portions of the URI in
order for WordPress not to load a 404 error, and for my script to be able to
read its variables.

Here's 2 examples:
 <http://domainname.com/category/categoryname/title-of-the-post/123/2/5>
http://domainname.com/category/categoryname/post-title/123/2/5<http://domainname.com/category/categoryname/title-of-the-post/123/2/5>

<http://domainname.com/category/categoryname/title-of-the-post/123/2/5>
http://domainname.com/pagename/123/2/5<http://domainname.com/category/categoryname/title-of-the-post/123/2/5>
Where /123/4/5 are the variables.

So, WordPress would need to ignore everything after "post-title" and
"pagename". I can't find an existing plug-in, nor have I had any luck while
going through WordPress' website.  If it helps any, WordPress' permalinks
are set to: /%category%/%postname%/.

All help will be greatly appreciated!
-- 
-Kaz
From dan at sproutventure.com  Mon Jan 12 07:47:44 2009
From: dan at sproutventure.com (Daniel Cameron)
Date: Mon Jan 12 07:47:55 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
	<505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
	<496ACB62.2030004@cubegames.net>
	<505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>
	<7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
Message-ID: <505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>

>
> Where is 'excerpt_advanced'? Is this a plugin you're making, replacing
> the wp_trim_excerpt code?


I meant to say excerpt-reloaded, I called my function excerpt_advanced
(tired if you can't tell).
From mikeschinkel at gmail.com  Mon Jan 12 07:50:35 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Mon Jan 12 07:50:49 2009
Subject: [wp-hackers] api.wordpress.org/themes ?
In-Reply-To: <00d801c97485$46658320$d3308960$@com>
References: <20090112044946.1C9906B5F@comox.textdrive.com>
	<00d801c97485$46658320$d3308960$@com>
Message-ID: <b4dd281c0901112350h11f30216xe59692fd1292486f@mail.gmail.com>

Jason:

Looks like the API was coded with the plugins in mind and not the themes in
mind.

I've been working in similar areas recently albeit for plugins instead of
themes but what I've learned per those on this list is that the API was
designed more to meet the immediate needs for what was viewed as "internal"
functionality rather than architected with other use-cases in mind.

Anyway, I'm 99% sure you can get what you need short term by getting the
theme's slug using the API and then adding the slug to the end of this URL
to compose the URL for the HTML page for the theme:

*http://wordpress.org/extend/themes/*

>From there use file_get_contents() to grab the HTML and preg_match() to
extract the URL for the download file. Doing so violates several "best
practices" as per the W3C but it works and if for short term I'd say go for
it.  It's basically what I'm doing for a related plugin.

HTH.

-Mike Schinkel
http://mikeschinkel.com/

 Mon, Jan 12, 2009 at 2:13 AM, Jason DeVelvis <sales@emailappeal.com> wrote:

> I'm trying to code a themes installer plugin, similar to the plugin
> installer in the core (I know, I know, it'll probably be in 2.8, but I want
> it now...) and I've got it to do everything except find the proper theme
> .zip file.
>
> The API returns a download URL like
> http://downloads.wordpress.org/theme/openair.zip which returns a 404...
> The
> actual extend download URL for openair is
> http://wordpress.org/extend/themes/download/openair.1.1.7.zip
>
> Any ideas why the API download URLs are invalid? Did I jump into the API
> too
> early :) Could it be easily fixed so my plugin works? Or is there something
> else going on in my code if the API is returning the wrong d/l links?
>
> Here's the serialized api info for this call:
>
> O:8:"stdClass":13:{s:4:"name";s:7:"OpenAir";s:4:"slug";s:7:"openair";s:7:"ve
>
> rsion";N;s:6:"author";N;s:8:"requires";N;s:6:"tested";N;s:6:"rating";d:32;s:
>
> 11:"num_ratings";i:25;s:10:"downloaded";N;s:12:"last_updated";s:10:"2009-01-
> 07";s:8:"homepage";N;s:13:"download_link";s:48:"
> http://downloads.wordpress.o
>
> rg/theme/openair.zip";s:4:"tags";a:6:{s:19:"threaded-comments-1";s:17:"threa
>
> ded-comments";s:15:"right-sidebar-2";s:13:"right-sidebar";s:13:"fixed-width-
>
> 1";s:11:"fixed-width";s:5:"white";s:5:"white";s:4:"blue";s:4:"blue";s:13:"tw
> o-columns-1";s:11:"two-columns";}}
>
> Note, that api info is obtained with this line of code:
> $api = themes_api('theme_information', array('slug' => $theme, 'fields' =>
> array('sections' => false) ) ); //Save on a bit of bandwidth.
>
> (where $theme = the slug I retrieved earlier in the process, which is
> 'openair')
>
> Coincidentally, there is no version # passed with the api call either.
> Could
> be the same problem?
>
> Any help would be tremendous!
>
> Thanks,
> Jason
>
From photofantaisie at gmail.com  Mon Jan 12 09:05:05 2009
From: photofantaisie at gmail.com (Ade Walker)
Date: Mon Jan 12 09:05:15 2009
Subject: [wp-hackers] Passing arguments to wp_list_pages
Message-ID: <9dd057850901120105i4fa99f38ydd0fed5ff92fc27a@mail.gmail.com>

Hi all,

I'm trying to write a function which can pass certain user-definable
arguments (via a theme options page) to wp_list_pages().

In my function I have this:

function (mypagesfunction) {

// code to pull in theme options and set variables

$args = array ( "depth" => $page_depth,
                    "exclude" => $exclude_output,
                    "sort_column" => $sort_column,
                    "title_li" => '',
                );
$newpages = wp_list_pages($args);
echo $newpages;
}

The variables in the array are pulled from theme options (I've left this
code out, above).

All works fine EXCEPT the title_li argument (I don't want a title_li) which
is being ignored. I'm sure I've missed something blindingly obvious - I just
can't see what it is. :-)

Any ideas?

Thanks.

Ade.
From mikeschinkel at gmail.com  Mon Jan 12 10:06:13 2009
From: mikeschinkel at gmail.com (Mike Schinkel)
Date: Mon Jan 12 10:06:24 2009
Subject: [wp-hackers] Passing arguments to wp_list_pages
In-Reply-To: <9dd057850901120105i4fa99f38ydd0fed5ff92fc27a@mail.gmail.com>
References: <9dd057850901120105i4fa99f38ydd0fed5ff92fc27a@mail.gmail.com>
Message-ID: <b4dd281c0901120206l44f288a3w6bfa30107b66d30f@mail.gmail.com>

Ade:

Interesting.  Can you produce a standalone file in a pastebin that when
dropped in the root of a v2.7 install will execute by calling the php file
via URL (i.e. test.php to be called with http://example.com/test.php) that
will result the in problem you've found?  If so, I could debug it for you
(but I'll bet you'll figure it out by going through the process of preparing
such a test file...)

-Mike Schinkel
http://mikeschinkel.com


On Mon, Jan 12, 2009 at 4:05 AM, Ade Walker <photofantaisie@gmail.com>wrote:

> Hi all,
>
> I'm trying to write a function which can pass certain user-definable
> arguments (via a theme options page) to wp_list_pages().
>
> In my function I have this:
>
> function (mypagesfunction) {
>
> // code to pull in theme options and set variables
>
> $args = array ( "depth" => $page_depth,
>                    "exclude" => $exclude_output,
>                    "sort_column" => $sort_column,
>                    "tite_li" => '',
>                );
> $newpages = wp_list_pages($args);
> echo $newpages;
> }
>
> The variables in the array are pulled from theme options (I've left this
> code out, above).
>
> All works fine EXCEPT the title_li argument (I don't want a title_li) which
> is being ignored. I'm sure I've missed something blindingly obvious - I
> just
> can't see what it is. :-)
>
> Any ideas?
>
> Thanks.
>
> Ade.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From photofantaisie at gmail.com  Mon Jan 12 10:42:29 2009
From: photofantaisie at gmail.com (Ade Walker)
Date: Mon Jan 12 10:42:41 2009
Subject: [wp-hackers] Passing arguments to wp_list_pages
In-Reply-To: <b4dd281c0901120206l44f288a3w6bfa30107b66d30f@mail.gmail.com>
References: <9dd057850901120105i4fa99f38ydd0fed5ff92fc27a@mail.gmail.com>
	<b4dd281c0901120206l44f288a3w6bfa30107b66d30f@mail.gmail.com>
Message-ID: <9dd057850901120242o4180fccfm706941ed827a7cfc@mail.gmail.com>

Mike,

Thanks for the reply. Yes, that's a good idea.

Oops! Actually, I do need to check my code again because looking at the
snippet I posted in my mail, I've misspelt "title_li". I don't have access
to my development PC from here so I can't see what I've got in the source,
but I wonder if that was the problem all along...  Hopefully, I've just
found the bug. I'll let you know. :-)

Thanks.

Ade.
2009/1/12 Mike Schinkel <mikeschinkel@gmail.com>

> Ade:
>
> Interesting.  Can you produce a standalone file in a pastebin that when
> dropped in the root of a v2.7 install will execute by calling the php file
> via URL (i.e. test.php to be called with http://example.com/test.php) that
> will result the in problem you've found?  If so, I could debug it for you
> (but I'll bet you'll figure it out by going through the process of
> preparing
> such a test file...)
>
> -Mike Schinkel
> http://mikeschinkel.com
>
>
> On Mon, Jan 12, 2009 at 4:05 AM, Ade Walker <photofantaisie@gmail.com
> >wrote:
>
> > Hi all,
> >
> > I'm trying to write a function which can pass certain user-definable
> > arguments (via a theme options page) to wp_list_pages().
> >
> > In my function I have this:
> >
> > function (mypagesfunction) {
> >
> > // code to pull in theme options and set variables
> >
> > $args = array ( "depth" => $page_depth,
> >                    "exclude" => $exclude_output,
> >                    "sort_column" => $sort_column,
> >                    "tite_li" => '',
> >                );
> > $newpages = wp_list_pages($args);
> > echo $newpages;
> > }
> >
> > The variables in the array are pulled from theme options (I've left this
> > code out, above).
> >
> > All works fine EXCEPT the title_li argument (I don't want a title_li)
> which
> > is being ignored. I'm sure I've missed something blindingly obvious - I
> > just
> > can't see what it is. :-)
> >
> > Any ideas?
> >
> > Thanks.
> >
> > Ade.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jeremy.visser at gmail.com  Mon Jan 12 11:52:20 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Mon Jan 12 11:51:32 2009
Subject: [wp-hackers] Posterous (post-by-e-mail with photo attachments)
Message-ID: <1231761140.3108.6.camel@rillian.narnia.sunriseroad.net>

Has anybody else seen Posterous? http://www.posterous.com/

It's a really nice-looking blog-by-e-mail service, much the same as
WordPress' blog-by-e-mail functionality, except several times as cool.

What I like the look of the most is the fact that Posterous accepts
photo, video, and audio attachments, and lets you really easily start up
a photolog with just about zero effort.

I think WordPress could learn a thing or two by that. Just read on the
Codex:

        Posting by email does not support attachments and any
        attachments sent with the email will appear in their raw form in
        the blog post.
        
                -- http://codex.wordpress.org/Blog_by_Email

I reckon adding photo attachment support for blog-by-e-mail would be an
absolute killer for photologgers using WordPress.

Maybe even some syntax could be parsed for entering attachment metadata
at the end of an e-mail, like:

== IMG_001.JPG ==
This is a picture of my dog. It will be used as the description of the
file "IMG_001.JPG" attached to this e-mail.

== IMG_002.JPG ==
Et cetera! Et cetera!

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From ozh at planetozh.com  Mon Jan 12 12:37:11 2009
From: ozh at planetozh.com (Ozh)
Date: Mon Jan 12 12:37:35 2009
Subject: [wp-hackers] Posterous (post-by-e-mail with photo attachments)
In-Reply-To: <1231761140.3108.6.camel@rillian.narnia.sunriseroad.net>
Message-ID: <OF2EA3E3D9.E62D7B15-ONC125753C.00449B76-C125753C.00455315@notes.edfgdf.fr>

>I reckon adding photo attachment support for blog-by-e-mail would be an
>absolute killer for photologgers using WordPress.

I had similar thoughts when I first heard about Posterous (<
http://planetozh.com/blog/2008/07/thoughts-on-blog-by-email-and-wordpress/>

I'm not sure there is actually a real demand for this (it seems that 
Posterous for instance is not really taking of, and I dont remember seeing 
this topic a lot on wp.org/extend/ideas, for what it's worth) but it would 
be indeed very cool.

Ozh


From wordpress at dd32.id.au  Mon Jan 12 12:42:53 2009
From: wordpress at dd32.id.au (DD32)
Date: Mon Jan 12 12:44:08 2009
Subject: [wp-hackers] Posterous (post-by-e-mail with photo attachments)
In-Reply-To: <OF2EA3E3D9.E62D7B15-ONC125753C.00449B76-C125753C.00455315@notes.edfgdf.fr>
References: <1231761140.3108.6.camel@rillian.narnia.sunriseroad.net>
	<OF2EA3E3D9.E62D7B15-ONC125753C.00449B76-C125753C.00455315@notes.edfgdf.fr>
Message-ID: <45055a190901120442p62dbeeb1y3029b6d8f77b7ad2@mail.gmail.com>

http://trac.wordpress.org/ticket/4965

2009/1/12 Ozh <ozh@planetozh.com>:
>>I reckon adding photo attachment support for blog-by-e-mail would be an
>>absolute killer for photologgers using WordPress.
>
> I had similar thoughts when I first heard about Posterous (<
> http://planetozh.com/blog/2008/07/thoughts-on-blog-by-email-and-wordpress/>
>
> I'm not sure there is actually a real demand for this (it seems that
> Posterous for instance is not really taking of, and I dont remember seeing
> this topic a lot on wp.org/extend/ideas, for what it's worth) but it would
> be indeed very cool.
>
> Ozh
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From scribu at gmail.com  Mon Jan 12 12:47:48 2009
From: scribu at gmail.com (scribu)
Date: Mon Jan 12 12:47:59 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
Message-ID: <349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>

I'm just thinking from a SEO point of view here.

instead of this:

.../post-slug/123/5

something better would be this

.../post-slug?arg=123/5

The best would be this:

.../post-slug#123/5
-- 
http://scribu.net
From wordpress at dd32.id.au  Mon Jan 12 12:52:40 2009
From: wordpress at dd32.id.au (DD32)
Date: Mon Jan 12 12:52:53 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
Message-ID: <45055a190901120452k505bc03fhcca16d6f16e22ed7@mail.gmail.com>

You'll need to define some new rewrite rules if you want to use that
type of structure, Heres an example plugin i wrote a while back for
someone: http://dd32.id.au/files/wordpress/test-rewrite.php

2009/1/12 Kaz <kazeneko@gmail.com>:
> Hello,
>
> I'm hoping someone on this mailing list can help.
>
> I need to run custom PHP code inside of WordPress generated posts and pages
> with an odd requirement. I need WordPress to ignore portions of the URI in
> order for WordPress not to load a 404 error, and for my script to be able to
> read its variables.
>
> Here's 2 examples:
>  <http://domainname.com/category/categoryname/title-of-the-post/123/2/5>
> http://domainname.com/category/categoryname/post-title/123/2/5<http://domainname.com/category/categoryname/title-of-the-post/123/2/5>
>
> <http://domainname.com/category/categoryname/title-of-the-post/123/2/5>
> http://domainname.com/pagename/123/2/5<http://domainname.com/category/categoryname/title-of-the-post/123/2/5>
> Where /123/4/5 are the variables.
>
> So, WordPress would need to ignore everything after "post-title" and
> "pagename". I can't find an existing plug-in, nor have I had any luck while
> going through WordPress' website.  If it helps any, WordPress' permalinks
> are set to: /%category%/%postname%/.
>
> All help will be greatly appreciated!
> --
> -Kaz
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From photofantaisie at gmail.com  Mon Jan 12 12:54:10 2009
From: photofantaisie at gmail.com (Ade Walker)
Date: Mon Jan 12 12:54:21 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>
Message-ID: <9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>

Scribu,

Without wanting to hijack this thread, but not knowing the answer, why are
the second two examples better than the first? I'm curious.

Thanks.

Ade.



2009/1/12 scribu <scribu@gmail.com>

> I'm just thinking from a SEO point of view here.
>
> instead of this:
>
> .../post-slug/123/5
>
> something better would be this
>
> .../post-slug?arg=123/5
>
> The best would be this:
>
> .../post-slug#123/5
> --
> http://scribu.net
>  _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From gaarai at gaarai.com  Mon Jan 12 12:55:11 2009
From: gaarai at gaarai.com (Gaarai)
Date: Mon Jan 12 12:55:26 2009
Subject: [wp-hackers] Posterous (post-by-e-mail with photo attachments)
In-Reply-To: <1231761140.3108.6.camel@rillian.narnia.sunriseroad.net>
References: <1231761140.3108.6.camel@rillian.narnia.sunriseroad.net>
Message-ID: <496B3DAF.5030401@gaarai.com>

A number of months ago, I started to build a replacement for the 
built-in blog-by-email functionality. It has the ability to turn a 
complete HTML email into a post, complete with images. I got busy with 
other projects and never got back around to putting the polish on it.

It doesn't do video and audio, but I do think adding audio support 
wouldn't be too difficult.

Video however is a different story as 1) most email accounts that people 
would use wouldn't allow for very large attachments and 2) turning that 
video into a format that could easily be displayed on a variety of 
platforms and browsers successfully would more or less require some type 
of trans coder or Flash wrapper. Installing such a trans coder is 
something that most people are not capable of doing even if their host 
would give them the ability to install such software and use the amount 
of resources required. A Flash wrapper could work, but would limit the 
supported video formats and I have no idea on how to create such a Flash 
app.

If you're interested in seeing what I have, drop me a line and I can 
send you a zip file. Maybe you can help give me suggestions to make it 
robust.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Jeremy Visser wrote:
> Has anybody else seen Posterous? http://www.posterous.com/
>
> It's a really nice-looking blog-by-e-mail service, much the same as
> WordPress' blog-by-e-mail functionality, except several times as cool.
>
> What I like the look of the most is the fact that Posterous accepts
> photo, video, and audio attachments, and lets you really easily start up
> a photolog with just about zero effort.
>
> I think WordPress could learn a thing or two by that. Just read on the
> Codex:
>
>         Posting by email does not support attachments and any
>         attachments sent with the email will appear in their raw form in
>         the blog post.
>         
>                 -- http://codex.wordpress.org/Blog_by_Email
>
> I reckon adding photo attachment support for blog-by-e-mail would be an
> absolute killer for photologgers using WordPress.
>
> Maybe even some syntax could be parsed for entering attachment metadata
> at the end of an e-mail, like:
>
> == IMG_001.JPG ==
> This is a picture of my dog. It will be used as the description of the
> file "IMG_001.JPG" attached to this e-mail.
>
> == IMG_002.JPG ==
> Et cetera! Et cetera!
>
>   
From scribu at gmail.com  Mon Jan 12 13:02:07 2009
From: scribu at gmail.com (scribu)
Date: Mon Jan 12 13:02:17 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>
	<9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>
Message-ID: <349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>

Well, since the 'arguments' stored in the last part, /123/5, I assumed they
could have different values for the same post, which could result in
duplicate content.

Using ?arg=123/5 sintax, this problem could be avoided, for most search
engines, because they ignore arguments like that in URLS.

Using #123/5 would be better because ALL search engines ignore that bit.

On the other hand, those arguments could make each page very different, even
if it is for the same post, in which case the issue would dissapear.

On Mon, Jan 12, 2009 at 4:54 AM, Ade Walker <photofantaisie@gmail.com>wrote:

> Scribu,
>
> Without wanting to hijack this thread, but not knowing the answer, why are
> the second two examples better than the first? I'm curious.
>
> Thanks.
>
> Ade.
>
>
>
> 2009/1/12 scribu <scribu@gmail.com>
>
> > I'm just thinking from a SEO point of view here.
> >
> > instead of this:
> >
> > .../post-slug/123/5
> >
> > something better would be this
> >
> > .../post-slug?arg=123/5
> >
> > The best would be this:
> >
> > .../post-slug#123/5
> > --
> > http://scribu.net
>  >  _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net
From lynne.pope at gmail.com  Mon Jan 12 13:06:08 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon Jan 12 13:06:19 2009
Subject: [wp-hackers] Posterous (post-by-e-mail with photo attachments)
In-Reply-To: <OF2EA3E3D9.E62D7B15-ONC125753C.00449B76-C125753C.00455315@notes.edfgdf.fr>
References: <1231761140.3108.6.camel@rillian.narnia.sunriseroad.net>
	<OF2EA3E3D9.E62D7B15-ONC125753C.00449B76-C125753C.00455315@notes.edfgdf.fr>
Message-ID: <427667db0901120506o2bfbc85bn97d1f9751fdde572@mail.gmail.com>

The problem with demand is that people don't necessarily add to the
extend/ideas and just look for another tool to do the job. Photoblogging
does appear to be becoming more popular and I think extending the
blog-by-email to include image support would be fantastic.

To make it even more attractive just include the ability to add (manually)
geotagging in the meta data - this is something that is starting to become
quite important to those who are serious about their photography and I am
not sure if its available with any other blogging platform yet.

Ozh, I saw your post about Posterous and went off to look at what it offers.
Frankly, the site itself didn't inspire enough confidence for me to want to
entrust it with my data. It's a cool idea but I am probably not the only one
who is reluctant to use it until it reaches greater maturity and builds
confidence that it will stick around. Services like that seem to come and go
so frequently - safer to stick to Flickr (even though its a pain to
login/upload/organise).

Lynne

2009/1/13 Ozh <ozh@planetozh.com>

> I'm not sure there is actually a real demand for this (it seems that
> Posterous for instance is not really taking of, and I dont remember seeing
> this topic a lot on wp.org/extend/ideas, for what it's worth) but it would
> be indeed very cool.
>
From scompt at scompt.com  Mon Jan 12 16:06:18 2009
From: scompt at scompt.com (Edward Dale)
Date: Mon Jan 12 16:06:47 2009
Subject: [wp-hackers] Improving the Pages widget
Message-ID: <1fe4fa230901120806t4d9eb518q836bca16bed76cc0@mail.gmail.com>

In a couple WordPress installs, I've wanted to use the Pages widget to
display the page navigation in the sidebar, but only wanted to go down a
certain depth.  Unfortunately, the widget doesn't support that option of
wp_list_pages, so I've either resorted to copying the code to my
functions.php file and modifying it or installing one of the plugins that
been developed to fill the need [1,2,3,4].  Either way, it seems a bit
heavy-handed for a simple "depth=1".
I propose adding a filter on line 681 of widgets.php to the options that are
passed into wp_list_pages.  This would leave the main functionality the
same, but would allow power users and developers to customize the widget
width resorting to the methods I described above.  This is already done on
line 752 for the Links widget.

What do you all think?

Cheers,
Edward

[1] http://wordpress.org/extend/plugins/flexi-pages-widget/
[2] http://wordpress.org/extend/plugins/subpages-widget/
[3]
http://www.arnoldbreukhoven.nl/2007/03/breukies-pages-widget-for-wordpress/
[4]
http://bitsnbytes.hashout.org/2008/04/07/advanced-wordpress-page-list-widget-plugin/
From jer-wphackers at simianuprising.com  Mon Jan 12 16:40:24 2009
From: jer-wphackers at simianuprising.com (Jeremy Clarke)
Date: Mon Jan 12 16:40:37 2009
Subject: [wp-hackers] Improving the Pages widget
In-Reply-To: <1fe4fa230901120806t4d9eb518q836bca16bed76cc0@mail.gmail.com>
References: <1fe4fa230901120806t4d9eb518q836bca16bed76cc0@mail.gmail.com>
Message-ID: <e1202cb10901120840t60ea6a0ckc613f9357dc66dca@mail.gmail.com>

+1

Its so frustrating to redo a whole widget just to get at the parameter
that the functions already takes. I never thought of checking for a
filter to just modify all uses of the widget, but i'd have been really
happy to find one if i'd looked :)

-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From scompt at scompt.com  Mon Jan 12 17:16:05 2009
From: scompt at scompt.com (Edward Dale)
Date: Mon Jan 12 17:16:21 2009
Subject: [wp-hackers] Improving the Pages widget
In-Reply-To: <e1202cb10901120840t60ea6a0ckc613f9357dc66dca@mail.gmail.com>
References: <1fe4fa230901120806t4d9eb518q836bca16bed76cc0@mail.gmail.com>
	<e1202cb10901120840t60ea6a0ckc613f9357dc66dca@mail.gmail.com>
Message-ID: <1fe4fa230901120916t37415e81u1da4de6b5491137d@mail.gmail.com>

That's enough support for me.  I've created a ticket with a patch:
http://trac.wordpress.org/ticket/8845
Testing would be appreciated.  It works fine on one of my sites with this
code in my functions.php file.

add_filter('widget_pages_args', 'my_widget_pages_args');

function my_widget_pages_args($args) {
    $args['depth'] = 2;
    return $args;
}

Cheers,
Edward

On Mon, Jan 12, 2009 at 11:40 AM, Jeremy Clarke <
jer-wphackers@simianuprising.com> wrote:

> +1
>
> Its so frustrating to redo a whole widget just to get at the parameter
> that the functions already takes. I never thought of checking for a
> filter to just modify all uses of the widget, but i'd have been really
> happy to find one if i'd looked :)
>
> --
> Jeremy Clarke | http://simianuprising.com
> Code and Design | http://globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Edward Dale
www.cs.unc.edu/~eddale
eddale@cs.unc.edu
(919) 962-1729
From photofantaisie at gmail.com  Mon Jan 12 17:35:34 2009
From: photofantaisie at gmail.com (Ade Walker)
Date: Mon Jan 12 17:35:47 2009
Subject: [wp-hackers] Passing arguments to wp_list_pages
In-Reply-To: <9dd057850901120242o4180fccfm706941ed827a7cfc@mail.gmail.com>
References: <9dd057850901120105i4fa99f38ydd0fed5ff92fc27a@mail.gmail.com>
	<b4dd281c0901120206l44f288a3w6bfa30107b66d30f@mail.gmail.com>
	<9dd057850901120242o4180fccfm706941ed827a7cfc@mail.gmail.com>
Message-ID: <9dd057850901120935qa39aa92k2dd3c58ad6294f4c@mail.gmail.com>

For those that are interested, it was simple syntax error that was causing
my problem. Here's the final code:

function my_list_pages() {

// Code to pull in theme options here and set variables
// goes here....

$args = array ("depth" => $page_depth,
                    "exclude" => $exclude_output,
                    "sort_column" => $sort_column,
                    "title_li" => '',
                );
wp_list_pages($args);
}

Nothing earth-shattering, but suits my purposes well. Thanks Mike for making
me take another look! :-)

Ade.





2009/1/12 Ade Walker <photofantaisie@gmail.com>

> Mike,
>
> Thanks for the reply. Yes, that's a good idea.
>
> Oops! Actually, I do need to check my code again because looking at the
> snippet I posted in my mail, I've misspelt "title_li". I don't have access
> to my development PC from here so I can't see what I've got in the source,
> but I wonder if that was the problem all along...  Hopefully, I've just
> found the bug. I'll let you know. :-)
>
> Thanks.
>
> Ade.
> 2009/1/12 Mike Schinkel <mikeschinkel@gmail.com>
>
> Ade:
>>
>> Interesting.  Can you produce a standalone file in a pastebin that when
>> dropped in the root of a v2.7 install will execute by calling the php file
>> via URL (i.e. test.php to be called with http://example.com/test.php)
>> that
>> will result the in problem you've found?  If so, I could debug it for you
>> (but I'll bet you'll figure it out by going through the process of
>> preparing
>> such a test file...)
>>
>> -Mike Schinkel
>> http://mikeschinkel.com
>>
>>
>> On Mon, Jan 12, 2009 at 4:05 AM, Ade Walker <photofantaisie@gmail.com
>> >wrote:
>>
>> > Hi all,
>> >
>> > I'm trying to write a function which can pass certain user-definable
>> > arguments (via a theme options page) to wp_list_pages().
>> >
>> > In my function I have this:
>> >
>> > function (mypagesfunction) {
>> >
>> > // code to pull in theme options and set variables
>> >
>> > $args = array ( "depth" => $page_depth,
>> >                    "exclude" => $exclude_output,
>> >                    "sort_column" => $sort_column,
>> >                    "tite_li" => '',
>> >                );
>> > $newpages = wp_list_pages($args);
>> > echo $newpages;
>> > }
>> >
>> > The variables in the array are pulled from theme options (I've left this
>> > code out, above).
>> >
>> > All works fine EXCEPT the title_li argument (I don't want a title_li)
>> which
>> > is being ignored. I'm sure I've missed something blindingly obvious - I
>> > just
>> > can't see what it is. :-)
>> >
>> > Any ideas?
>> >
>> > Thanks.
>> >
>> > Ade.
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers@lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
From wp-hackers at striderweb.com  Mon Jan 12 19:38:23 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon Jan 12 19:38:37 2009
Subject: [wp-hackers] Improving the Pages widget
In-Reply-To: <1fe4fa230901120916t37415e81u1da4de6b5491137d@mail.gmail.com>
References: <1fe4fa230901120806t4d9eb518q836bca16bed76cc0@mail.gmail.com>
	<e1202cb10901120840t60ea6a0ckc613f9357dc66dca@mail.gmail.com>
	<1fe4fa230901120916t37415e81u1da4de6b5491137d@mail.gmail.com>
Message-ID: <0F011FE5-90D6-4B98-9B18-EFF59C93C93A@striderweb.com>

I don't monkey a lot with widgets, so if this totally won't work feel  
free to say so.  ;-)

Would there be a way to abstract this out a level so that we could  
filter the parameters of any arbitrary widget?  Similar to how we can  
filter any given option as it's updated to the database?

In other words, something like  
add_filter('widget_parameter_<widgetname>' ...

Just a thought. :)

Stephen

On Jan 12, 2009, at 11:16 AM, Edward Dale wrote:

> That's enough support for me.  I've created a ticket with a patch:
> http://trac.wordpress.org/ticket/8845
> Testing would be appreciated.  It works fine on one of my sites with  
> this
> code in my functions.php file.
>
> add_filter('widget_pages_args', 'my_widget_pages_args');
>
> function my_widget_pages_args($args) {
>    $args['depth'] = 2;
>    return $args;
> }

From steph at sillybean.net  Mon Jan 12 23:03:28 2009
From: steph at sillybean.net (Stephanie Leary)
Date: Mon Jan 12 23:03:38 2009
Subject: [wp-hackers] Re: filter =?UTF-8?Q?the=5Fexceprt?=
In-Reply-To: <505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
	<505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
	<496ACB62.2030004@cubegames.net>
	<505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>
	<7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
	<505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>
Message-ID: <9ada14ce261d8db260222a8ca8b72715@laurel.joyent.us>

I would really like to see the functionality of the_excerpt Reloaded as
part of the WP core. Is there any particular reason the_excerpt couldn't be
adjusted to take arguments (whether tags are stripped, how the ellipsis
appears, etc.) with the defaults set for backward compatibility?


Stephanie Leary
sillybean.net

From dan at sproutventure.com  Mon Jan 12 23:26:03 2009
From: dan at sproutventure.com (Daniel Cameron)
Date: Mon Jan 12 23:26:13 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <9ada14ce261d8db260222a8ca8b72715@laurel.joyent.us>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
	<505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
	<496ACB62.2030004@cubegames.net>
	<505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>
	<7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
	<505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>
	<9ada14ce261d8db260222a8ca8b72715@laurel.joyent.us>
Message-ID: <505c639e0901121526y1c6ad03au1083329a69798271@mail.gmail.com>

> I would really like to see the functionality of the_excerpt Reloaded as
> part of the WP core.


+1

at least the basics.
From jeremy.visser at gmail.com  Tue Jan 13 08:05:04 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Tue Jan 13 08:04:18 2009
Subject: [wp-hackers] Posterous (post-by-e-mail with photo attachments)
In-Reply-To: <45055a190901120442p62dbeeb1y3029b6d8f77b7ad2@mail.gmail.com>
References: <1231761140.3108.6.camel@rillian.narnia.sunriseroad.net>
	<OF2EA3E3D9.E62D7B15-ONC125753C.00449B76-C125753C.00455315@notes.edfgdf.fr>
	<45055a190901120442p62dbeeb1y3029b6d8f77b7ad2@mail.gmail.com>
Message-ID: <1231833904.2543.0.camel@rillian.narnia.sunriseroad.net>

On Mon, 2009-01-12 at 23:42 +1100, DD32 wrote:
> http://trac.wordpress.org/ticket/4965

Awesome. I'd love to find time to hack on that.

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From frank at bueltge.de  Tue Jan 13 10:01:18 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Tue Jan 13 10:01:28 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <505c639e0901121526y1c6ad03au1083329a69798271@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
	<505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
	<496ACB62.2030004@cubegames.net>
	<505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>
	<7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
	<505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>
	<9ada14ce261d8db260222a8ca8b72715@laurel.joyent.us>
	<505c639e0901121526y1c6ad03au1083329a69798271@mail.gmail.com>
Message-ID: <db047a770901130201y6f0e6d09x1435e5c0094d06df@mail.gmail.com>

+1

> I would really like to see the functionality of the_excerpt Reloaded as
> > part of the WP core.
>
>
> +1
>
>
From lynne.pope at gmail.com  Tue Jan 13 12:01:04 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Tue Jan 13 12:01:48 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <db047a770901130201y6f0e6d09x1435e5c0094d06df@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
	<505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
	<496ACB62.2030004@cubegames.net>
	<505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>
	<7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
	<505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>
	<9ada14ce261d8db260222a8ca8b72715@laurel.joyent.us>
	<505c639e0901121526y1c6ad03au1083329a69798271@mail.gmail.com>
	<db047a770901130201y6f0e6d09x1435e5c0094d06df@mail.gmail.com>
Message-ID: <427667db0901130401v672835f6p643d209b64dab9b0@mail.gmail.com>

Guess I might be shouted down here but I would hate to see the functionality
of Excerpt Reloaded being included in the core.

Excerpt Reloaded is good for any site where the site owner is not worried
about optimising their sites for search engines and where they are happy to
have duplicate content. For those sites where mitigating duplicate content
issues is a priority, then having a unique excerpt is important and the only
way to have unique content is if you write it.  If you write an excerpt you
don't get that annoying [...] problem and writing a custom "Read More" is
easy.

For example, if you use your own excerpts, then this will do the trick...

<?php the_excerpt(); ?>
 <span class="more"><a href="<?php the_permalink(); ?>">[ Continue Reading:
<?php the_title() ?> ]</a></span>

What I would like to see is an option in the WP settings for a default "Read
More" so that excerpts in the search results, for example, can be displayed
with whatever wording a user chooses. This would also benefit people who are
using WP in different languages.

However, even so, I use different wording on my front page to the wording
used in search results so still prefer to be able to add my own. My WP
clients have all preferred this too and I have yet to have a client who has
wanted to use the plugin.

Lynne
From thomas at backlab.at  Tue Jan 13 14:35:04 2009
From: thomas at backlab.at (Thomas Diesenreiter)
Date: Tue Jan 13 14:35:26 2009
Subject: [wp-hackers] WordPress Video Solution Framework
Message-ID: <20090113153504.xpukubmnuoc0ogks@webmail.servus.at>

Dear Wordpress Hackers,

I've discovered the WordPress Video Solution Framework yesterday and  
I'm amazed, I've been looking for a solution like that for a long time  
(and developing one on my own since a couple of months). Anyway, I  
have some questions to the developers, but cannot find any contact  
information in the plugin itself. Do you know, how is developing this  
thing?

http://wordpress.org/extend/plugins/wordpresscom-video-server/

My primary question would be, why it's wordpress-mu only.

Thanks,
best wishes,
Thomas
-- 
http://www.backlab.at/len
http://www.karlklar.at
http://www.zwischenstrom.at






From jmiloj at gmail.com  Tue Jan 13 14:43:23 2009
From: jmiloj at gmail.com (Jerry Johnson)
Date: Tue Jan 13 14:43:36 2009
Subject: [wp-hackers] WordPress Video Solution Framework
In-Reply-To: <20090113153504.xpukubmnuoc0ogks@webmail.servus.at>
References: <20090113153504.xpukubmnuoc0ogks@webmail.servus.at>
Message-ID: <a1fff2b20901130643s85909d3i4f6d5fb63bac29b@mail.gmail.com>

It looks like it was written by Automattic to power wordpress.com (which is
MU).


On Tue, Jan 13, 2009 at 9:35 AM, Thomas Diesenreiter <thomas@backlab.at>wrote:

> Dear Wordpress Hackers,
>
> I've discovered the WordPress Video Solution Framework yesterday and I'm
> amazed, I've been looking for a solution like that for a long time (and
> developing one on my own since a couple of months). Anyway, I have some
> questions to the developers, but cannot find any contact information in the
> plugin itself. Do you know, how is developing this thing?
>
> http://wordpress.org/extend/plugins/wordpresscom-video-server/
>
> My primary question would be, why it's wordpress-mu only.
>
From tonyscott100 at yahoo.co.uk  Tue Jan 13 18:07:06 2009
From: tonyscott100 at yahoo.co.uk (Tony Scott)
Date: Tue Jan 13 18:07:24 2009
Subject: [wp-hackers] Wanted: venue for WordCamp UK 2009
References: <20090113153504.xpukubmnuoc0ogks@webmail.servus.at>
	<a1fff2b20901130643s85909d3i4f6d5fb63bac29b@mail.gmail.com>
Message-ID: <134191.60519.qm@web25907.mail.ukl.yahoo.com>

Attention all UK subscribers!

Bids are invited to accommodate WordCamp UK 2009, planned to be held 18 and 19 July 2009.

Details http://tonyscott.org.uk/2009/01/12/wanted-venue-for-wordcamp-uk-2009/

 ----


Tony Scott
http://tonyscott.org.uk | http://twitter.com/tonys
http://twestival.com  | http://uk.wordcamp.org



      
From emmensetech at gmail.com  Tue Jan 13 18:11:10 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Tue Jan 13 18:11:24 2009
Subject: [wp-hackers] Wanted: venue for WordCamp UK 2009
In-Reply-To: <134191.60519.qm@web25907.mail.ukl.yahoo.com>
References: <20090113153504.xpukubmnuoc0ogks@webmail.servus.at>
	<a1fff2b20901130643s85909d3i4f6d5fb63bac29b@mail.gmail.com>
	<134191.60519.qm@web25907.mail.ukl.yahoo.com>
Message-ID: <ca7320070901131011v47d45ea2w8861056c74c87673@mail.gmail.com>

Why don't you approach a University? In my experience with PodCamps,
WordCamps and BarCamps, the best events are held at Universities. Many times
they will give you their space for virtually nothing! For instance, we are
doing WordCamp Mid-Atlantic at University of Baltimore. PodCamp Philly was
held at Drexel Univ in 2007 and Temple in 2008. The worst events are held in
corporate space, IMHO. There's usually too many security issues (can't have
walk ups, gotta have badges, etc) and they aren't as cozy.

Food for thought.
-- 
Aaron Brazell
web:: www.technosailor.com
phone:: 410-608-6620
skype:: technosailor
twitter:: @technosailor


On Tue, Jan 13, 2009 at 1:07 PM, Tony Scott <tonyscott100@yahoo.co.uk>wrote:

> Attention all UK subscribers!
>
> Bids are invited to accommodate WordCamp UK 2009, planned to be held 18 and
> 19 July 2009.
>
> Details
> http://tonyscott.org.uk/2009/01/12/wanted-venue-for-wordcamp-uk-2009/
>
>  ----
>
>
> Tony Scott
> http://tonyscott.org.uk | http://twitter.com/tonys
> http://twestival.com  | http://uk.wordcamp.org
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at tekartist.org  Tue Jan 13 20:39:06 2009
From: wordpress at tekartist.org (Stephane Daury)
Date: Tue Jan 13 20:39:25 2009
Subject: [wp-hackers] Wanted: venue for WordCamp UK 2009
In-Reply-To: <ca7320070901131011v47d45ea2w8861056c74c87673@mail.gmail.com>
References: <20090113153504.xpukubmnuoc0ogks@webmail.servus.at>
	<a1fff2b20901130643s85909d3i4f6d5fb63bac29b@mail.gmail.com>
	<134191.60519.qm@web25907.mail.ukl.yahoo.com>
	<ca7320070901131011v47d45ea2w8861056c74c87673@mail.gmail.com>
Message-ID: <6870848C-D6C9-44C4-A4CD-0E3DBCD95B62@tekartist.org>


I concur. This is also due to the fact that blogging is so popular on  
campuses, be it for students, academics or admin staff.
It's not ingrained to most higher ed institution, and might even boost  
your attendance by that much.

Stephane.



On Jan 13, 2009, at 13:11, Aaron Brazell wrote:

> Why don't you approach a University? In my experience with PodCamps,
> WordCamps and BarCamps, the best events are held at Universities.  
> Many times
> they will give you their space for virtually nothing! For instance,  
> we are
> doing WordCamp Mid-Atlantic at University of Baltimore. PodCamp  
> Philly was
> held at Drexel Univ in 2007 and Temple in 2008. The worst events are  
> held in
> corporate space, IMHO. There's usually too many security issues  
> (can't have
> walk ups, gotta have badges, etc) and they aren't as cozy.
>
> Food for thought.
> -- 
> Aaron Brazell
> web:: www.technosailor.com
> phone:: 410-608-6620
> skype:: technosailor
> twitter:: @technosailor
>
>
> On Tue, Jan 13, 2009 at 1:07 PM, Tony Scott  
> <tonyscott100@yahoo.co.uk>wrote:
>
>> Attention all UK subscribers!
>>
>> Bids are invited to accommodate WordCamp UK 2009, planned to be  
>> held 18 and
>> 19 July 2009.
>>
>> Details
>> http://tonyscott.org.uk/2009/01/12/wanted-venue-for-wordcamp-uk-2009/
>>
>> ----
>>
>>
>> Tony Scott
>> http://tonyscott.org.uk | http://twitter.com/tonys
>> http://twestival.com  | http://uk.wordcamp.org
>>
>>
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at tekartist.org  Tue Jan 13 20:40:55 2009
From: wordpress at tekartist.org (Stephane Daury)
Date: Tue Jan 13 20:41:18 2009
Subject: [wp-hackers] Wanted: venue for WordCamp UK 2009
In-Reply-To: <6870848C-D6C9-44C4-A4CD-0E3DBCD95B62@tekartist.org>
References: <20090113153504.xpukubmnuoc0ogks@webmail.servus.at>
	<a1fff2b20901130643s85909d3i4f6d5fb63bac29b@mail.gmail.com>
	<134191.60519.qm@web25907.mail.ukl.yahoo.com>
	<ca7320070901131011v47d45ea2w8861056c74c87673@mail.gmail.com>
	<6870848C-D6C9-44C4-A4CD-0E3DBCD95B62@tekartist.org>
Message-ID: <1B1A9A00-2D22-4EFA-82B9-FD21F9AECB0F@tekartist.org>


On Jan 13, 2009, at 15:39, Stephane Daury wrote:

>
> I concur. This is also due to the fact that blogging is so popular  
> on campuses, be it for students, academics or admin staff.
> It's not ingrained to most higher ed institution, and might even  
> boost your attendance by that much.

Errata: substitute "It's NOT ingrained" for "It's NOW ingrained". :)

>
>
> Stephane.
>
>
>
> On Jan 13, 2009, at 13:11, Aaron Brazell wrote:
>
>> Why don't you approach a University? In my experience with PodCamps,
>> WordCamps and BarCamps, the best events are held at Universities.  
>> Many times
>> they will give you their space for virtually nothing! For instance,  
>> we are
>> doing WordCamp Mid-Atlantic at University of Baltimore. PodCamp  
>> Philly was
>> held at Drexel Univ in 2007 and Temple in 2008. The worst events  
>> are held in
>> corporate space, IMHO. There's usually too many security issues  
>> (can't have
>> walk ups, gotta have badges, etc) and they aren't as cozy.
>>
>> Food for thought.
>> -- 
>> Aaron Brazell
>> web:: www.technosailor.com
>> phone:: 410-608-6620
>> skype:: technosailor
>> twitter:: @technosailor
>>
>>
>> On Tue, Jan 13, 2009 at 1:07 PM, Tony Scott  
>> <tonyscott100@yahoo.co.uk>wrote:
>>
>>> Attention all UK subscribers!
>>>
>>> Bids are invited to accommodate WordCamp UK 2009, planned to be  
>>> held 18 and
>>> 19 July 2009.
>>>
>>> Details
>>> http://tonyscott.org.uk/2009/01/12/wanted-venue-for-wordcamp- 
>>> uk-2009/
>>>
>>> ----
>>>
>>>
>>> Tony Scott
>>> http://tonyscott.org.uk | http://twitter.com/tonys
>>> http://twestival.com  | http://uk.wordcamp.org
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From joseph at randomnetworks.com  Tue Jan 13 21:52:22 2009
From: joseph at randomnetworks.com (Joseph Scott)
Date: Tue Jan 13 21:52:33 2009
Subject: [wp-hackers] api.wordpress.org/themes ?
In-Reply-To: <00d801c97485$46658320$d3308960$@com>
References: <20090112044946.1C9906B5F@comox.textdrive.com>
	<00d801c97485$46658320$d3308960$@com>
Message-ID: <b75e1ac0901131352q4aa9200bn30c0f4b4363a9c78@mail.gmail.com>

On Mon, Jan 12, 2009 at 12:13 AM, Jason DeVelvis <sales@emailappeal.com> wrote:
> I'm trying to code a themes installer plugin, similar to the plugin
> installer in the core (I know, I know, it'll probably be in 2.8, but I want
> it now...) and I've got it to do everything except find the proper theme
> .zip file.
>
> The API returns a download URL like
> http://downloads.wordpress.org/theme/openair.zip which returns a 404... The
> actual extend download URL for openair is
> http://wordpress.org/extend/themes/download/openair.1.1.7.zip
>
> Any ideas why the API download URLs are invalid? Did I jump into the API too
> early :) Could it be easily fixed so my plugin works? Or is there something
> else going on in my code if the API is returning the wrong d/l links?


Exactly what URL did you use for the API?  I don't get a response that
looks anything like what you indicated.
There's code in -trunk that checks for theme updates.  To try and keep
things as close to your example as possible I installed OpenAir 1.1.7
and edited the style.css to make it version 1.1.0 so that it would
trigger an updated theme response.  A current response looks like:

a:1:{s:7:"openair";a:3:{s:11:"new_version";s:5:"1.1.7";s:3:"url";s:42:"http://wordpress.org/extend/themes/openair";s:7:"package";s:61:"http://wordpress.org/extend/themes/download/openair.1.1.7.zip";}}


> Note, that api info is obtained with this line of code:
> $api = themes_api('theme_information', array('slug' => $theme, 'fields' =>
> array('sections' => false) ) ); //Save on a bit of bandwidth.
>
> (where $theme = the slug I retrieved earlier in the process, which is
> 'openair')
>
> Coincidentally, there is no version # passed with the api call either. Could
> be the same problem?



-- 
Joseph Scott
joseph@randomnetworks.com
http://joseph.randomnetworks.com/
From steph at sillybean.net  Tue Jan 13 21:57:27 2009
From: steph at sillybean.net (Stephanie Leary)
Date: Tue Jan 13 21:57:34 2009
Subject: [wp-hackers] Re: filter =?UTF-8?Q?the=5Fexceprt?=
In-Reply-To: <427667db0901130401v672835f6p643d209b64dab9b0@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<505c639e0901111707i79d54b13p7c891511308eb15a@mail.gmail.com>
	<505c639e0901112039m36f68efen61fe80f971e2351e@mail.gmail.com>
	<496ACB62.2030004@cubegames.net>
	<505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>
	<7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
	<505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>
	<9ada14ce261d8db260222a8ca8b72715@laurel.joyent.us>
	<505c639e0901121526y1c6ad03au1083329a69798271@mail.gmail.com>
	<db047a770901130201y6f0e6d09x1435e5c0094d06df@mail.gmail.com>
	<427667db0901130401v672835f6p643d209b64dab9b0@mail.gmail.com>
Message-ID: <71bf92be2e26e23b6815cd8e115ae858@laurel.joyent.us>

On Wed, 14 Jan 2009 01:01:04 +1300, Lynne Pope <lynne.pope@gmail.com>
wrote:
> For those sites where mitigating duplicate content
> issues is a priority, then having a unique excerpt is important and the
> only way to have unique content is if you write it.  If you write an
excerpt
> you don't get that annoying [...] problem and writing a custom "Read
More" is
> easy.
> 
> For example, if you use your own excerpts, then this will do the trick...
> 
> <?php the_excerpt(); ?>
>  <span class="more"><a href="<?php the_permalink(); ?>">[ Continue
> Reading:
> <?php the_title() ?> ]</a></span>

Hi, Lynne. I don't want to shout you down at all because for the most part
we agree. The main reason I use the Reloaded plugin is to circumvent the
tag stripping that occurs with the built-in excerpt function. I do write my
own excerpts most of the time -- but they contain links, images, and lists
that I need to preserve when the excerpt is called. 

Obviously the excerpt function is widely used, and I would prefer to leave
it as-is when called without arguments. I'd just like to add arguments to
it, because its current behavior causes problems on many of the sites I
work on.

Stephanie 

From wordpress at dd32.id.au  Tue Jan 13 22:35:52 2009
From: wordpress at dd32.id.au (DD32)
Date: Tue Jan 13 22:36:11 2009
Subject: [wp-hackers] api.wordpress.org/themes ?
In-Reply-To: <b75e1ac0901131352q4aa9200bn30c0f4b4363a9c78@mail.gmail.com>
References: <20090112044946.1C9906B5F@comox.textdrive.com>
	<00d801c97485$46658320$d3308960$@com>
	<b75e1ac0901131352q4aa9200bn30c0f4b4363a9c78@mail.gmail.com>
Message-ID: <45055a190901131435v3e835d26m6506259b69504bc0@mail.gmail.com>

2009/1/14 Joseph Scott <joseph@randomnetworks.com>:
> Exactly what URL did you use for the API?  I don't get a response that
> looks anything like what you indicated.
> There's code in -trunk that checks for theme updates.  To try and keep
> things as close to your example as possible I installed OpenAir 1.1.7
> and edited the style.css to make it version 1.1.0 so that it would
> trigger an updated theme response.  A current response looks like:
>
> a:1:{s:7:"openair";a:3:{s:11:"new_version";s:5:"1.1.7";s:3:"url";s:42:"http://wordpress.org/extend/themes/openair";s:7:"package";s:61:"http://wordpress.org/extend/themes/download/openair.1.1.7.zip";}}

Thats the update API, Not the Theme information API which is to be
used for the Theme Browser/Installer
(http://api.wordpress.org/themes/info/1.0/) which is yet to be
actually be used by Core.
From joseph at randomnetworks.com  Tue Jan 13 23:06:22 2009
From: joseph at randomnetworks.com (Joseph Scott)
Date: Tue Jan 13 23:06:48 2009
Subject: [wp-hackers] api.wordpress.org/themes ?
In-Reply-To: <45055a190901131435v3e835d26m6506259b69504bc0@mail.gmail.com>
References: <20090112044946.1C9906B5F@comox.textdrive.com>
	<00d801c97485$46658320$d3308960$@com>
	<b75e1ac0901131352q4aa9200bn30c0f4b4363a9c78@mail.gmail.com>
	<45055a190901131435v3e835d26m6506259b69504bc0@mail.gmail.com>
Message-ID: <E18EB4FF-98F0-491F-9AA4-C09D2517D241@randomnetworks.com>


On Jan 13, 2009, at 3:35 PM, DD32 wrote:

> 2009/1/14 Joseph Scott <joseph@randomnetworks.com>:
>> Exactly what URL did you use for the API?  I don't get a response  
>> that
>> looks anything like what you indicated.
>> There's code in -trunk that checks for theme updates.  To try and  
>> keep
>> things as close to your example as possible I installed OpenAir 1.1.7
>> and edited the style.css to make it version 1.1.0 so that it would
>> trigger an updated theme response.  A current response looks like:
>>
>> a:1:{s:7:"openair";a:3:{s:11:"new_version";s:5:"1.1.7";s:3:"url";s: 
>> 42:"http://wordpress.org/extend/themes/openair";s:7:"package";s:61:"http://wordpress.org/extend/themes/download/openair.1.1.7.zip 
>> ";}}
>
> Thats the update API, Not the Theme information API which is to be
> used for the Theme Browser/Installer
> (http://api.wordpress.org/themes/info/1.0/) which is yet to be
> actually be used by Core.



Ahh, well, that would explain it then :-)



--
Joseph Scott
joseph@josephscott.org
http://josephscott.org/




From lynne.pope at gmail.com  Tue Jan 13 23:10:41 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Tue Jan 13 23:10:48 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <71bf92be2e26e23b6815cd8e115ae858@laurel.joyent.us>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<496ACB62.2030004@cubegames.net>
	<505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>
	<7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
	<505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>
	<9ada14ce261d8db260222a8ca8b72715@laurel.joyent.us>
	<505c639e0901121526y1c6ad03au1083329a69798271@mail.gmail.com>
	<db047a770901130201y6f0e6d09x1435e5c0094d06df@mail.gmail.com>
	<427667db0901130401v672835f6p643d209b64dab9b0@mail.gmail.com>
	<71bf92be2e26e23b6815cd8e115ae858@laurel.joyent.us>
Message-ID: <427667db0901131510k2d0e05c5u26da0cafb68d1860@mail.gmail.com>

2009/1/14 Stephanie Leary <steph@sillybean.net>

> Hi, Lynne. I don't want to shout you down at all because for the most part
> we agree. The main reason I use the Reloaded plugin is to circumvent the
> tag stripping that occurs with the built-in excerpt function. I do write my
> own excerpts most of the time -- but they contain links, images, and lists
> that I need to preserve when the excerpt is called.
>
>
Is all this tag stripping coming from wpautop and wptexturize alone?

It's probably just dumb luck but (so far) all my clients have wanted the
editor off and since I work that way too I haven't run into issues with the
editor. I also routinely remove formatting, using this:

remove_filter ('the_content',  'wpautop');
remove_filter ('comment_text', 'wpautop');
remove_filter('the_content', 'wptexturize');
remove_filter('the_excerpt', 'wptexturize');
remove_filter('comment_text', 'wptexturize');
remove_filter('the_title', 'wptexturize');

As a result, I have excerpts formatted the way I like, with all HTML code
intact, without the use of a plugin.

Pros: Works well for those of us who want complete control over our own
HTML.

Cons: Absolutely the wrong thing for the masses.

It seems to me that formatting.php could be made friendlier. For example, if
anyone wants to remove some of wptexturize but keep other parts of the
filter they have only two choices - hack the core or remove the filter and
add their own.
Perhaps what is needed isn't so much an addition of Excerpt Reloaded as the
addition of an option within admin settings to enable wptexturize filters or
not, for content, excerpt and comments?

Lynne
From thomas at backlab.at  Wed Jan 14 12:25:50 2009
From: thomas at backlab.at (Thomas Diesenreiter)
Date: Wed Jan 14 12:26:16 2009
Subject: [wp-hackers] WordPress Video Solution Framework
In-Reply-To: <20090113215236.506C96D6A@comox.textdrive.com>
References: <20090113215236.506C96D6A@comox.textdrive.com>
Message-ID: <20090114132550.btqr1aa4gw4ww488@webmail.servus.at>

Thanks, thats what I know too - but who from the wordpress.com team is  
developing it, and how can I reach him?

Best wishes,
Thomas

Quoting wp-hackers-request@lists.automattic.com:
> Date: Tue, 13 Jan 2009 09:43:23 -0500
> From: Jerry Johnson <jmiloj@gmail.com>
> Subject: Re: [wp-hackers] WordPress Video Solution Framework
> To: wp-hackers@lists.automattic.com
> Message-ID:
> 	<a1fff2b20901130643s85909d3i4f6d5fb63bac29b@mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> It looks like it was written by Automattic to power wordpress.com (which is
> MU).
>
>
> On Tue, Jan 13, 2009 at 9:35 AM, Thomas Diesenreiter   
> <thomas@backlab.at>wrote:
>
>> Dear Wordpress Hackers,
>>
>> I've discovered the WordPress Video Solution Framework yesterday and I'm
>> amazed, I've been looking for a solution like that for a long time (and
>> developing one on my own since a couple of months). Anyway, I have some
>> questions to the developers, but cannot find any contact information in the
>> plugin itself. Do you know, how is developing this thing?
>>
>> http://wordpress.org/extend/plugins/wordpresscom-video-server/
>>
>> My primary question would be, why it's wordpress-mu only.


From gamito at gmail.com  Wed Jan 14 13:20:39 2009
From: gamito at gmail.com (=?ISO-8859-1?Q?M=E1rio_Gamito?=)
Date: Wed Jan 14 13:21:13 2009
Subject: [wp-hackers] Center in WP 2.7 with different code in the editor
Message-ID: <496DE6A7.9010602@gmail.com>

Hi,

I've posed here this very same question a long ago in the WP 2.5 time.

Wp 2.7 TinyMCE center aligns objects with <p style="text-align: center;">
And that's fine and what it should be.

My problem is that my blog is in the most important Portuguese Planet
and it doesn't recognise this code, due to technical complications
regarding different blogging platforms and the way their code manage
things in a diferent way.
And the final result is that what is centered in my blog, appears at
left on the Planet, something that is terribly ugly.

The center code it recognizes unversaly is <p align="center"> which is
kind of old-fashioned, but still does the job and above all, works well
with Planet.

When I asked here how to force WP 2.5 TinyMCE to center with <p
align="center"> instead of <p style="text-align: center;">, someone
responded:

"The easiest hack would be to add:

content = content.replace(/<p style="text-align: center;">/g, '<p>
align="center">');

just above "// Pretty it up for the source editor" in
wp-admin/js/editor.js."

And it worked.

Problem is that now it doesn't work anymore. Applying the same hack,
does nothing. TinyMCE still centers with <p style="text-align: center;">

So my question to you gurus is: how do I make this work in Wp 2.7 ?

Any help would be appreciated.

Warm Regards,
M?rio Gamito
From elflop at googlemail.com  Wed Jan 14 13:50:08 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Wed Jan 14 13:50:21 2009
Subject: [wp-hackers] Center in WP 2.7 with different code in the editor
In-Reply-To: <496DE6A7.9010602@gmail.com>
References: <496DE6A7.9010602@gmail.com>
Message-ID: <c6c45a350901140550v2e461ad9x65414895eb7de018@mail.gmail.com>

2009/1/14 M?rio Gamito <gamito@gmail.com>:
> Hi,
>
> I've posed here this very same question a long ago in the WP 2.5 time.
>
> Wp 2.7 TinyMCE center aligns objects with <p style="text-align: center;">
> And that's fine and what it should be.

> The center code it recognizes unversaly is <p align="center"> which is
> kind of old-fashioned, but still does the job and above all, works well
> with Planet.
>
> When I asked here how to force WP 2.5 TinyMCE to center with <p
> align="center"> instead of <p style="text-align: center;">, someone
> responded:
>
> "The easiest hack would be to add:
>
> content = content.replace(/<p style="text-align: center;">/g, '<p>
> align="center">');
>
> just above "// Pretty it up for the source editor" in
> wp-admin/js/editor.js."
>
> And it worked.
>
 Can this rather convulated system recognise class="" and apply things
correctly?

Editing core files should be avoided. It might be better to look at
ways of adding to the tiny mce bar via a plugin - not sure if
http://wordpress.org/extend/plugins/tinymce-advanced/
would help here.

Rich
(I don't use tinymce)

-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From hempsworth at googlemail.com  Wed Jan 14 14:08:51 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Wed Jan 14 14:09:00 2009
Subject: [wp-hackers] How to remove captions on the homepage
Message-ID: <5a1dad880901140608w11a4deb5lb2a83ef47f2c6b58@mail.gmail.com>

Hi all,
I'm trying to remove the [caption] shortcode stuff from any articles on the
homepage, so that
the <div class="wp-caption"> and all that it contains is not outputted
on the homepage.

I've seen this filter that can be used, and in my functions.php have the
following:

if (is_home()) {
add_filter('disable_captions', create_function('$a','return true;'));
};

But that doesn't make any difference. Is there any way I can achieve this?

Many thanks,
-- Alex

PS. I'm new to PHP but eager to learn, it might explain any bad PHP here :P
From listswphackers at mist.org.uk  Wed Jan 14 13:50:13 2009
From: listswphackers at mist.org.uk (mrmist)
Date: Wed Jan 14 14:18:26 2009
Subject: [wp-hackers] Center in WP 2.7 with different code in the editor
In-Reply-To: <496DE6A7.9010602@gmail.com>
References: <496DE6A7.9010602@gmail.com>
Message-ID: <hYsIokDV2ebJFwic@dsl-217-155-35-239.zen.co.uk>

In message <496DE6A7.9010602@gmail.com>, M?rio Gamito <gamito@gmail.com> 
writes

<snip>

>
>So my question to you gurus is: how do I make this work in Wp 2.7 ?
>
>Any help would be appreciated.
>

It would be better to have the other framework move to support the style 
based centering, which is standards compliant and supported by all 
modern browsers.
-- 
mrmist
From mike at zed1.com  Wed Jan 14 14:25:29 2009
From: mike at zed1.com (Mike Little)
Date: Wed Jan 14 14:25:50 2009
Subject: [wp-hackers] How to remove captions on the homepage
In-Reply-To: <5a1dad880901140608w11a4deb5lb2a83ef47f2c6b58@mail.gmail.com>
References: <5a1dad880901140608w11a4deb5lb2a83ef47f2c6b58@mail.gmail.com>
Message-ID: <7235ce780901140625s3517a667o9c00bc801453a672@mail.gmail.com>

2009/1/14 Alex Hempton-Smith <hempsworth@googlemail.com>:
> Hi all,
> I'm trying to remove the [caption] shortcode stuff from any articles on the
> homepage, so that
> the <div class="wp-caption"> and all that it contains is not outputted
> on the homepage.
>
> I've seen this filter that can be used, and in my functions.php have the
> following:
>
> if (is_home()) {
> add_filter('disable_captions', create_function('$a','return true;'));
> };
>
> But that doesn't make any difference. Is there any way I can achieve this?
>

I believe that filter only prevents the captions being created in the
admin screens.

You  could use CSS to hyde the captions though they would still be
there in the html output.


Mike
-- 
Mike Little
http://zed1.com/
From hempsworth at googlemail.com  Wed Jan 14 14:28:35 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Wed Jan 14 14:28:49 2009
Subject: [wp-hackers] How to remove captions on the homepage
In-Reply-To: <7235ce780901140625s3517a667o9c00bc801453a672@mail.gmail.com>
References: <5a1dad880901140608w11a4deb5lb2a83ef47f2c6b58@mail.gmail.com>
	<7235ce780901140625s3517a667o9c00bc801453a672@mail.gmail.com>
Message-ID: <5a1dad880901140628i42a61989m47de7011744464e8@mail.gmail.com>

> You  could use CSS to hyde the captions though they would still be
> there in the html output.
Thanks Mike, I'm doing that at the moment and although it works it means the
HTML is all cluttered when it shouldn't be. Also, won't be very nice with
CSS disabled or screenreaders etc.

Any other options people know of?

-- Alex


On Wed, Jan 14, 2009 at 2:25 PM, Mike Little <mike@zed1.com> wrote:

> 2009/1/14 Alex Hempton-Smith <hempsworth@googlemail.com>:
> > Hi all,
> > I'm trying to remove the [caption] shortcode stuff from any articles on
> the
> > homepage, so that
> > the <div class="wp-caption"> and all that it contains is not outputted
> > on the homepage.
> >
> > I've seen this filter that can be used, and in my functions.php have the
> > following:
> >
> > if (is_home()) {
> > add_filter('disable_captions', create_function('$a','return true;'));
> > };
> >
> > But that doesn't make any difference. Is there any way I can achieve
> this?
> >
>
> I believe that filter only prevents the captions being created in the
> admin screens.
>
> You  could use CSS to hyde the captions though they would still be
> there in the html output.
>
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at striderweb.com  Wed Jan 14 14:35:12 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed Jan 14 14:35:38 2009
Subject: [wp-hackers] Center in WP 2.7 with different code in the editor
In-Reply-To: <496DE6A7.9010602@gmail.com>
References: <496DE6A7.9010602@gmail.com>
Message-ID: <67013F0E-D229-4E07-8E96-856CEE5684C7@striderweb.com>

If the planet is pulling it from your RSS feed, you might also make a  
plugin that filters the feed.  Do a preg-replace on the feed content. :)

Stephen

On Jan 14, 2009, at 7:20 AM, M?rio Gamito wrote:

> Wp 2.7 TinyMCE center aligns objects with <p style="text-align:  
> center;">
> And that's fine and what it should be.
>
> My problem is that my blog is in the most important Portuguese Planet
> and it doesn't recognise this code, due to technical complications
> regarding different blogging platforms and the way their code manage
> things in a diferent way.
From lynne.pope at gmail.com  Wed Jan 14 14:45:37 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed Jan 14 14:45:49 2009
Subject: [wp-hackers] How to remove captions on the homepage
In-Reply-To: <5a1dad880901140628i42a61989m47de7011744464e8@mail.gmail.com>
References: <5a1dad880901140608w11a4deb5lb2a83ef47f2c6b58@mail.gmail.com>
	<7235ce780901140625s3517a667o9c00bc801453a672@mail.gmail.com>
	<5a1dad880901140628i42a61989m47de7011744464e8@mail.gmail.com>
Message-ID: <427667db0901140645j59e945e5v6beb559de7d6765@mail.gmail.com>

If you find the answer Alex, please post it. I am manually adding captions
and not using the WP captions for this very reason. I decided not to hide
them on the frontpage thru CSS because of concerns that search engines may
treat this as hidden text and penalise the sites.

Lynne

2009/1/15 Alex Hempton-Smith <hempsworth@googlemail.com>

> > You  could use CSS to hyde the captions though they would still be
> > there in the html output.
> Thanks Mike, I'm doing that at the moment and although it works it means
> the
> HTML is all cluttered when it shouldn't be. Also, won't be very nice with
> CSS disabled or screenreaders etc.
>
> Any other options people know of?
>
> -- Alex
>
>
> On Wed, Jan 14, 2009 at 2:25 PM, Mike Little <mike@zed1.com> wrote:
>
> > 2009/1/14 Alex Hempton-Smith <hempsworth@googlemail.com>:
> > > Hi all,
> > > I'm trying to remove the [caption] shortcode stuff from any articles on
> > the
> > > homepage, so that
> > > the <div class="wp-caption"> and all that it contains is not outputted
> > > on the homepage.
> > >
> > > I've seen this filter that can be used, and in my functions.php have
> the
> > > following:
> > >
> > > if (is_home()) {
> > > add_filter('disable_captions', create_function('$a','return true;'));
> > > };
> > >
> > > But that doesn't make any difference. Is there any way I can achieve
> > this?
> > >
> >
> > I believe that filter only prevents the captions being created in the
> > admin screens.
> >
> > You  could use CSS to hyde the captions though they would still be
> > there in the html output.
> >
> >
> > Mike
> > --
> > Mike Little
> > http://zed1.com/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From admin at laptoptips.ca  Wed Jan 14 15:05:54 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Wed Jan 14 15:07:35 2009
Subject: [wp-hackers] How to remove captions on the homepage
In-Reply-To: <427667db0901140645j59e945e5v6beb559de7d6765@mail.gmail.com>
References: <5a1dad880901140608w11a4deb5lb2a83ef47f2c6b58@mail.gmail.com>	<7235ce780901140625s3517a667o9c00bc801453a672@mail.gmail.com>	<5a1dad880901140628i42a61989m47de7011744464e8@mail.gmail.com>
	<427667db0901140645j59e945e5v6beb559de7d6765@mail.gmail.com>
Message-ID: <496DFF52.9040709@laptoptips.ca>

Lynne Pope wrote:
> If you find the answer Alex, please post it. I am manually adding captions
> and not using the WP captions for this very reason. I decided not to hide
> them on the frontpage thru CSS because of concerns that search engines may
> treat this as hidden text and penalise the sites.

Something like this in header.php should work:

if ( is_home() )
	add_filter('img_caption_shortcode', create_function('$a, $b, $c', 
'return $c;'), 10, 3);
From admin at laptoptips.ca  Wed Jan 14 15:18:47 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Wed Jan 14 15:20:26 2009
Subject: [wp-hackers] Center in WP 2.7 with different code in the editor
In-Reply-To: <67013F0E-D229-4E07-8E96-856CEE5684C7@striderweb.com>
References: <496DE6A7.9010602@gmail.com>
	<67013F0E-D229-4E07-8E96-856CEE5684C7@striderweb.com>
Message-ID: <496E0257.7090105@laptoptips.ca>

Stephen Rider wrote:
> If the planet is pulling it from your RSS feed, you might also make a 
> plugin that filters the feed.  Do a preg-replace on the feed content. :)
> 
> Stephen
> 
> On Jan 14, 2009, at 7:20 AM, M?rio Gamito wrote:
> 
>> Wp 2.7 TinyMCE center aligns objects with <p style="text-align: center;">
>> And that's fine and what it should be.
>>
>> My problem is that my blog is in the most important Portuguese Planet
>> and it doesn't recognise this code, due to technical complications
>> regarding different blogging platforms and the way their code manage
>> things in a diferent way.

The old hack should still work, but it has to go at the top of the 
wpautop() function in editor.js so it's applied when saving, not when 
loading the post.

However Stephen is right, much better to make a small plugin that would 
filter the_content_rss and the_excerpt_rss and replace it only there. 
Can also replace <em> and <strong> with <i> and <b> if needed.

From steph at sillybean.net  Wed Jan 14 17:14:41 2009
From: steph at sillybean.net (Stephanie Leary)
Date: Wed Jan 14 17:14:50 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <427667db0901131510k2d0e05c5u26da0cafb68d1860@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<496ACB62.2030004@cubegames.net>
	<505c639e0901112140w48130f43g1c8d5f451af94eb9@mail.gmail.com>
	<7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
	<505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>
	<9ada14ce261d8db260222a8ca8b72715@laurel.joyent.us>
	<505c639e0901121526y1c6ad03au1083329a69798271@mail.gmail.com>
	<db047a770901130201y6f0e6d09x1435e5c0094d06df@mail.gmail.com>
	<427667db0901130401v672835f6p643d209b64dab9b0@mail.gmail.com>
	<71bf92be2e26e23b6815cd8e115ae858@laurel.joyent.us>
	<427667db0901131510k2d0e05c5u26da0cafb68d1860@mail.gmail.com>
Message-ID: <574E4FCA-3880-4B06-B5E1-2C4CEFDB3664@sillybean.net>

On Jan 13, 2009, at 5:10 PM, Lynne Pope wrote:
> Perhaps what is needed isn't so much an addition of Excerpt Reloaded  
> as the
> addition of an option within admin settings to enable wptexturize  
> filters or
> not, for content, excerpt and comments?

That would be a great alternative, yes.

Stephanie
From mikeschinkel at newclarity.net  Wed Jan 14 17:38:04 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jan 14 17:41:47 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <31630405.1651231951312730.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <4328794.1671231953777983.JavaMail.DELL-1405$@Dell-1405>

Hi All:

I've just run into a problem with plugin upgrades failing when using Subversion for version control.  Subversion stores a collection of readme files and when the upgrade process tries to delete them it fails to and then fails the upgrade process.  Am I the first person on this list to experience this?  It fails in a very ungraceful way, i.e. basically it just says "Sorry, sux to be you." ;-)

Potential solutions:

1.) Bypass deleting any .svn directory(s) and in that case don't require the plugin directory to be deleted in order to continue the upgrade process.
2.) Remove the read-only attribute and delete the files.
3.) Something else?

I think #1 is most preferable because it doesn't loose the Subversion info and the next check-in will check-in the new plugin info.  Maybe this could be a configuration option, i.e. to do #1 by default or #2 if configured to do so instead?

I need this fixed ASAP so I can do the work to fix it but I've yet to contribute any patches so I don't know the process.

-Mike Schinkel
http://mikeschinkel.com/
From mikeschinkel at newclarity.net  Wed Jan 14 17:54:54 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jan 14 17:57:28 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <16821491.1691231955594744.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <10531046.1711231955696254.JavaMail.DELL-1405$@Dell-1405>

To follow up, the following HACK allows the plugins to be updated by ignoring .svn but it probably creates negative side effects elsewhere.

http://mikeschinkel.pastebin.com/f5d2cae8b

The fix should probably be in wp_upgrade_plug() from /wp-admin/includes/upgrade.php.  I'll look at that next.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Mike Schinkel" <mikeschinkel@newclarity.net>
To: wp-hackers@lists.automattic.com
Sent: Wednesday, January 14, 2009 12:38:04 PM GMT -05:00 US/Canada Eastern
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion

Hi All:

I've just run into a problem with plugin upgrades failing when using Subversion for version control.  Subversion stores a collection of readme files and when the upgrade process tries to delete them it fails to and then fails the upgrade process.  Am I the first person on this list to experience this?  It fails in a very ungraceful way, i.e. basically it just says "Sorry, sux to be you." ;-)

Potential solutions:

1.) Bypass deleting any .svn directory(s) and in that case don't require the plugin directory to be deleted in order to continue the upgrade process.
2.) Remove the read-only attribute and delete the files.
3.) Something else?

I think #1 is most preferable because it doesn't loose the Subversion info and the next check-in will check-in the new plugin info.  Maybe this could be a configuration option, i.e. to do #1 by default or #2 if configured to do so instead?

I need this fixed ASAP so I can do the work to fix it but I've yet to contribute any patches so I don't know the process.

-Mike Schinkel
http://mikeschinkel.com/
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From hempsworth at googlemail.com  Wed Jan 14 18:44:58 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Wed Jan 14 18:48:01 2009
Subject: [wp-hackers] How to remove captions on the homepage
In-Reply-To: <496DFF52.9040709@laptoptips.ca>
References: <5a1dad880901140608w11a4deb5lb2a83ef47f2c6b58@mail.gmail.com>
	<7235ce780901140625s3517a667o9c00bc801453a672@mail.gmail.com>
	<5a1dad880901140628i42a61989m47de7011744464e8@mail.gmail.com>
	<427667db0901140645j59e945e5v6beb559de7d6765@mail.gmail.com>
	<496DFF52.9040709@laptoptips.ca>
Message-ID: <5a1dad880901141044o2114c828ja2228282d48bee34@mail.gmail.com>

> if ( is_home() ) {
>       add_filter('img_caption_shortcode', create_function('$a, $b, $c',
'return $c;'), 10, 3);> };

That works in the header.php great, but I'm still getting the <img> tag, and
therefore the image, outputted.

I've tried filtering out the <img> using the following methods, but they
BOTH seem to break the above filter and the [caption] is outputted but no
<img> - very strange! Here are the methods I've tried:

$pattern = '/<img[^>]+>/is';
$string = get_the_content();
$string = preg_replace($pattern, '', $string);
echo $string;

AND

echo strip_tags(get_the_content(''),
'<p><a><h2><blockquote><code><ul><li><i><em><strong>');

Any other ideas of how I could get rid of the pesky <img>?

Cheers,
-- Alex
From otto at ottodestruct.com  Wed Jan 14 19:03:32 2009
From: otto at ottodestruct.com (Otto)
Date: Wed Jan 14 19:03:46 2009
Subject: [wp-hackers] How to remove captions on the homepage
In-Reply-To: <5a1dad880901141044o2114c828ja2228282d48bee34@mail.gmail.com>
References: <5a1dad880901140608w11a4deb5lb2a83ef47f2c6b58@mail.gmail.com>
	<7235ce780901140625s3517a667o9c00bc801453a672@mail.gmail.com>
	<5a1dad880901140628i42a61989m47de7011744464e8@mail.gmail.com>
	<427667db0901140645j59e945e5v6beb559de7d6765@mail.gmail.com>
	<496DFF52.9040709@laptoptips.ca>
	<5a1dad880901141044o2114c828ja2228282d48bee34@mail.gmail.com>
Message-ID: <161617690901141103g5efd0c1cj377ce0aab771b7e0@mail.gmail.com>

On Wed, Jan 14, 2009 at 12:44 PM, Alex Hempton-Smith
<hempsworth@googlemail.com> wrote:
>> if ( is_home() ) {
>>       add_filter('img_caption_shortcode', create_function('$a, $b, $c',
> 'return $c;'), 10, 3);> };
>
> That works in the header.php great, but I'm still getting the <img> tag, and
> therefore the image, outputted.
>
> I've tried filtering out the <img> using the following methods, but they
> BOTH seem to break the above filter and the [caption] is outputted but no
> <img> - very strange! Here are the methods I've tried:
>
> $pattern = '/<img[^>]+>/is';
> $string = get_the_content();
> $string = preg_replace($pattern, '', $string);
> echo $string;
>
> AND
>
> echo strip_tags(get_the_content(''),
> '<p><a><h2><blockquote><code><ul><li><i><em><strong>');
>
> Any other ideas of how I could get rid of the pesky <img>?
>
> Cheers,
> -- Alex
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


I think you can just change the return $c; to return ""; and it'll work.

I have not tried it, so buyer beware.

-Otto
From hempsworth at googlemail.com  Wed Jan 14 19:10:43 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Wed Jan 14 19:10:56 2009
Subject: [wp-hackers] How to remove captions on the homepage
In-Reply-To: <161617690901141103g5efd0c1cj377ce0aab771b7e0@mail.gmail.com>
References: <5a1dad880901140608w11a4deb5lb2a83ef47f2c6b58@mail.gmail.com>
	<7235ce780901140625s3517a667o9c00bc801453a672@mail.gmail.com>
	<5a1dad880901140628i42a61989m47de7011744464e8@mail.gmail.com>
	<427667db0901140645j59e945e5v6beb559de7d6765@mail.gmail.com>
	<496DFF52.9040709@laptoptips.ca>
	<5a1dad880901141044o2114c828ja2228282d48bee34@mail.gmail.com>
	<161617690901141103g5efd0c1cj377ce0aab771b7e0@mail.gmail.com>
Message-ID: <5a1dad880901141110p4aa19384h90cfdf9d4c40f1f2@mail.gmail.com>

Brilliant, thanks Ozz and Otto for your input, works a charm now.
Lynn, the final piece of code to be placed in header.php is:

if ( is_home() ) {
add_filter('img_caption_shortcode', create_function('$a, $b, $c', 'return "
";'), 10, 3);
};

-- Alex


On Wed, Jan 14, 2009 at 7:03 PM, Otto <otto@ottodestruct.com> wrote:

> On Wed, Jan 14, 2009 at 12:44 PM, Alex Hempton-Smith
> <hempsworth@googlemail.com> wrote:
> >> if ( is_home() ) {
> >>       add_filter('img_caption_shortcode', create_function('$a, $b, $c',
> > 'return $c;'), 10, 3);> };
> >
> > That works in the header.php great, but I'm still getting the <img> tag,
> and
> > therefore the image, outputted.
> >
> > I've tried filtering out the <img> using the following methods, but they
> > BOTH seem to break the above filter and the [caption] is outputted but no
> > <img> - very strange! Here are the methods I've tried:
> >
> > $pattern = '/<img[^>]+>/is';
> > $string = get_the_content();
> > $string = preg_replace($pattern, '', $string);
> > echo $string;
> >
> > AND
> >
> > echo strip_tags(get_the_content(''),
> > '<p><a><h2><blockquote><code><ul><li><i><em><strong>');
> >
> > Any other ideas of how I could get rid of the pesky <img>?
> >
> > Cheers,
> > -- Alex
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> I think you can just change the return $c; to return ""; and it'll work.
>
> I have not tried it, so buyer beware.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jer-wphackers at simianuprising.com  Wed Jan 14 19:12:29 2009
From: jer-wphackers at simianuprising.com (Jeremy Clarke)
Date: Wed Jan 14 19:12:40 2009
Subject: [wp-hackers] Center in WP 2.7 with different code in the editor
In-Reply-To: <496E0257.7090105@laptoptips.ca>
References: <496DE6A7.9010602@gmail.com>
	<67013F0E-D229-4E07-8E96-856CEE5684C7@striderweb.com>
	<496E0257.7090105@laptoptips.ca>
Message-ID: <e1202cb10901141112v4fff07ffvfb1deaf371dc6ca6@mail.gmail.com>

This ties in to the recent discussion about adding buttons to the
tinymce editor. IMHO you should leave the existing button alone and
add a new one that does what you want. I wish there was an api for
adding simple buttons like this, as people have so many different
reasons to use simple tag wrapper buttons when posting. Something
like:

wp_add_tinymce_button($before_text, $after_text, $button_image);

I've added it to the Wordpress Ideas thing because I dream of it:
http://wordpress.org/extend/ideas/topic.php?id=2280&replies=1#post-8054


-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From jer at simianuprising.com  Wed Jan 14 19:43:48 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed Jan 14 19:43:56 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <574E4FCA-3880-4B06-B5E1-2C4CEFDB3664@sillybean.net>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
	<505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>
	<9ada14ce261d8db260222a8ca8b72715@laurel.joyent.us>
	<505c639e0901121526y1c6ad03au1083329a69798271@mail.gmail.com>
	<db047a770901130201y6f0e6d09x1435e5c0094d06df@mail.gmail.com>
	<427667db0901130401v672835f6p643d209b64dab9b0@mail.gmail.com>
	<71bf92be2e26e23b6815cd8e115ae858@laurel.joyent.us>
	<427667db0901131510k2d0e05c5u26da0cafb68d1860@mail.gmail.com>
	<574E4FCA-3880-4B06-B5E1-2C4CEFDB3664@sillybean.net>
Message-ID: <e1202cb10901141143w39279e8w8863854e4f2797c5@mail.gmail.com>

I think that get_the_excerpt and the_excerpt are both pretty lame
actually. How is it that the right amount of parameters for these
functions is zero? There used to be a parameter but now its gone?

 249  function get_the_excerpt($deprecated = '') {

If nothing else, it should allow for fetching the excerpt from
arbitrary post_id's. It also seems very clear that defining the
character length of automatic excerpts would be very very useful to
have access to at this point (so that any excerpts you fail to input,
which happens believe me, are about as long as your average manual
excerpts). Then finally as mentioned the elipsis string would be very
useful, giving something like:

function get_the_excerpt($post_id = NULL, $length = 50, $after = '[...]')

As it is all the default formatting happens i guess through WP adding
its own filters on the_excerpt, which is nice because plugins can
override the behavior, but is hard for normal users to get their heads
around. They are used to giving parameters to template tags and I
think this is a case where making that work would be very useful.

If there's an issue with the deprecated parameter I think we might as
well switch to get_excerpt() instead of get_THE_excerpt(), the former
is more in tune with WP's naming conventions anyway IMHO.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org
From dangayle at gmail.com  Wed Jan 14 19:51:01 2009
From: dangayle at gmail.com (Dan Gayle)
Date: Wed Jan 14 19:51:12 2009
Subject: [wp-hackers] Re: filter the_exceprt
In-Reply-To: <e1202cb10901141143w39279e8w8863854e4f2797c5@mail.gmail.com>
References: <505c639e0901111651u21eb0224j62b8e0954bd90aaf@mail.gmail.com>
	<7b4922320901112213v1fa3cf9fn7ec7d4b7c3263cd3@mail.gmail.com>
	<505c639e0901112347n4e78a22ega77e4557ed2b5e92@mail.gmail.com>
	<9ada14ce261d8db260222a8ca8b72715@laurel.joyent.us>
	<505c639e0901121526y1c6ad03au1083329a69798271@mail.gmail.com>
	<db047a770901130201y6f0e6d09x1435e5c0094d06df@mail.gmail.com>
	<427667db0901130401v672835f6p643d209b64dab9b0@mail.gmail.com>
	<71bf92be2e26e23b6815cd8e115ae858@laurel.joyent.us>
	<427667db0901131510k2d0e05c5u26da0cafb68d1860@mail.gmail.com>
	<574E4FCA-3880-4B06-B5E1-2C4CEFDB3664@sillybean.net>
	<e1202cb10901141143w39279e8w8863854e4f2797c5@mail.gmail.com>
Message-ID: <557CBDCF-9DFD-48B3-8143-FD7BCEF02547@gmail.com>

This is why I usually end up using
<?php the_content_rss('', TRUE, '', 55); ?>

It basically does the same thing as the_excerpt(), but allows more  
options.

On Jan 14, 2009, at 11:43 AM, Jeremy Clarke wrote:

> I think that get_the_excerpt and the_excerpt are both pretty lame
> actually. How is it that the right amount of parameters for these
> functions is zero? There used to be a parameter but now its gone?
>
> 249  function get_the_excerpt($deprecated = '') {
>
> If nothing else, it should allow for fetching the excerpt from
> arbitrary post_id's. It also seems very clear that defining the
> character length of automatic excerpts would be very very useful to
> have access to at this point (so that any excerpts you fail to input,
> which happens believe me, are about as long as your average manual
> excerpts). Then finally as mentioned the elipsis string would be very
> useful, giving something like:
>
> function get_the_excerpt($post_id = NULL, $length = 50, $after =  
> '[...]')
>
> As it is all the default formatting happens i guess through WP adding
> its own filters on the_excerpt, which is nice because plugins can
> override the behavior, but is hard for normal users to get their heads
> around. They are used to giving parameters to template tags and I
> think this is a case where making that work would be very useful.
>
> If there's an issue with the deprecated parameter I think we might as
> well switch to get_excerpt() instead of get_THE_excerpt(), the former
> is more in tune with WP's naming conventions anyway IMHO.

From otto at ottodestruct.com  Wed Jan 14 20:57:05 2009
From: otto at ottodestruct.com (Otto)
Date: Wed Jan 14 20:58:10 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>
	<9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>
	<349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>
Message-ID: <161617690901141257o464658ey238c5196e21b94aa@mail.gmail.com>

On Mon, Jan 12, 2009 at 7:02 AM, scribu <scribu@gmail.com> wrote:
> Using #123/5 would be better because ALL search engines ignore that bit.

So do servers, since browsers don't send #links to the server. No way
to get that information from inside the PHP code.
From lynne.pope at gmail.com  Wed Jan 14 22:02:58 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed Jan 14 22:03:05 2009
Subject: [wp-hackers] How to remove captions on the homepage
In-Reply-To: <5a1dad880901141110p4aa19384h90cfdf9d4c40f1f2@mail.gmail.com>
References: <5a1dad880901140608w11a4deb5lb2a83ef47f2c6b58@mail.gmail.com>
	<7235ce780901140625s3517a667o9c00bc801453a672@mail.gmail.com>
	<5a1dad880901140628i42a61989m47de7011744464e8@mail.gmail.com>
	<427667db0901140645j59e945e5v6beb559de7d6765@mail.gmail.com>
	<496DFF52.9040709@laptoptips.ca>
	<5a1dad880901141044o2114c828ja2228282d48bee34@mail.gmail.com>
	<161617690901141103g5efd0c1cj377ce0aab771b7e0@mail.gmail.com>
	<5a1dad880901141110p4aa19384h90cfdf9d4c40f1f2@mail.gmail.com>
Message-ID: <427667db0901141402m5efbc677u3c35d0c6d3d1e93c@mail.gmail.com>

Thanks all!
I hope you will blog about this solution Alex because its odds on that if
you and I were looking for a way to do this then others will be too.

Off to try it out...

Cheers,
Lynne

2009/1/15 Alex Hempton-Smith <hempsworth@googlemail.com>

> Brilliant, thanks Ozz and Otto for your input, works a charm now.
> Lynn, the final piece of code to be placed in header.php is:
>
> if ( is_home() ) {
> add_filter('img_caption_shortcode', create_function('$a, $b, $c', 'return "
> ";'), 10, 3);
> };
>
> -- Alex
>
>
>
From dougal at gunters.org  Wed Jan 14 22:22:08 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Wed Jan 14 22:22:33 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <161617690901141257o464658ey238c5196e21b94aa@mail.gmail.com>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>	<9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>	<349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>
	<161617690901141257o464658ey238c5196e21b94aa@mail.gmail.com>
Message-ID: <496E6590.6000202@gunters.org>

Otto wrote:
> On Mon, Jan 12, 2009 at 7:02 AM, scribu <scribu@gmail.com> wrote:
>   
>> Using #123/5 would be better because ALL search engines ignore that bit.
>>     
>
> So do servers, since browsers don't send #links to the server. No way
> to get that information from inside the PHP code.
>   

There is if you use a dash of AJAX :)

I've used that technique on projects before. Use the hash portion of the 
URL to store state data, and use Javascript to communicate it back and 
forth between browser and server.

-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
From barry at automattic.com  Wed Jan 14 22:49:33 2009
From: barry at automattic.com (Barry Abrahamson)
Date: Wed Jan 14 22:49:46 2009
Subject: [wp-hackers] WordPress Video Solution Framework
In-Reply-To: <20090113153504.xpukubmnuoc0ogks@webmail.servus.at>
References: <20090113153504.xpukubmnuoc0ogks@webmail.servus.at>
Message-ID: <AEAD16E9-0BFE-4709-80AC-DC0569FFF363@automattic.com>


On Jan 13, 2009, at 6:35 AM, Thomas Diesenreiter wrote:

> Dear Wordpress Hackers,
>
> I've discovered the WordPress Video Solution Framework yesterday and  
> I'm amazed, I've been looking for a solution like that for a long  
> time (and developing one on my own since a couple of months).  
> Anyway, I have some questions to the developers, but cannot find any  
> contact information in the plugin itself. Do you know, how is  
> developing this thing?
>
> http://wordpress.org/extend/plugins/wordpresscom-video-server/
>
> My primary question would be, why it's wordpress-mu only.

Technically it's not, although its not written as a typical WordPress  
plugin which you install, activate, etc.  There are quite a few parts  
of it which aren't even specific to WordPress.

If you have any questions, you can email me, or post to the list and I  
can reply here.

--
Barry Abrahamson | Systems Wrangler | Automattic
Blog: http://barry.wordpress.com



From wordpress at dd32.id.au  Wed Jan 14 22:58:22 2009
From: wordpress at dd32.id.au (DD32)
Date: Wed Jan 14 23:00:18 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <10531046.1711231955696254.JavaMail.DELL-1405$@Dell-1405>
References: <10531046.1711231955696254.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <op.unrrfkiek6w4mc@dd32.no-ip.com>



From mikeschinkel at newclarity.net  Wed Jan 14 23:46:42 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jan 14 23:47:34 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <op.unrrfkiek6w4mc@dd32.no-ip.com>
Message-ID: <9665660.1931231976802086.JavaMail.DELL-1405$@Dell-1405>

DD32:

Did you forget to type your reply?

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "DD32" <wordpress@dd32.id.au>
To: wp-hackers@lists.automattic.com
Sent: Wednesday, January 14, 2009 5:58:22 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin Upgrade Failing when using Subversion



_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From hempsworth at googlemail.com  Thu Jan 15 00:15:14 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Thu Jan 15 00:15:23 2009
Subject: [wp-hackers]Treat most recent post differently to the rest
Message-ID: <5a1dad880901141615s6e563d70kc11cc44e993e3c7a@mail.gmail.com>

Hi all,
On my category archives page, I'm outputting the first post into a different
HTML structure, and then outputting the rest of them below that as normal.

<?php
$recentPosts = new WP_Query();
$recentPosts->query('showposts=1');

while ($recentPosts->have_posts()) : $recentPosts->the_post();
?>
DOING SOMETHING WEIRD TO THE MOST RECENT POST HERE
<?php
endwhile;

while (have_posts()) : the_post(); ?>
OUTPUTTING THE REST NORMALLY HERE
<?php endwhile; ?>

Because I've already outputted that most recent post, how do I exclude it
from the main output below that?
Almost like offset the output to start 1 post later than the most recent
ones.

Hope this makes sense :)

Many thanks,
-- Alex
From glenn at glennansley.com  Thu Jan 15 00:42:59 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Thu Jan 15 00:43:11 2009
Subject: [wp-hackers]Treat most recent post differently to the rest
In-Reply-To: <5a1dad880901141615s6e563d70kc11cc44e993e3c7a@mail.gmail.com>
References: <5a1dad880901141615s6e563d70kc11cc44e993e3c7a@mail.gmail.com>
Message-ID: <3283f0830901141642t79b218dfo7cd741241eb0c3b8@mail.gmail.com>

I've done this before by just testing for the loop count. $wp_query
has this built in. The first post in the loop is 0
global $wp_query;
if ( $wp_query->current_post === 0 ) {
   // style for first
}else{
  // style for the rest
}

http://codex.wordpress.org/Function_Reference/WP_Query

On Wed, Jan 14, 2009 at 7:15 PM, Alex Hempton-Smith
<hempsworth@googlemail.com> wrote:
> Hi all,
> On my category archives page, I'm outputting the first post into a different
> HTML structure, and then outputting the rest of them below that as normal.
>
> <?php
> $recentPosts = new WP_Query();
> $recentPosts->query('showposts=1');
>
> while ($recentPosts->have_posts()) : $recentPosts->the_post();
> ?>
> DOING SOMETHING WEIRD TO THE MOST RECENT POST HERE
> <?php
> endwhile;
>
> while (have_posts()) : the_post(); ?>
> OUTPUTTING THE REST NORMALLY HERE
> <?php endwhile; ?>
>
> Because I've already outputted that most recent post, how do I exclude it
> from the main output below that?
> Almost like offset the output to start 1 post later than the most recent
> ones.
>
> Hope this makes sense :)
>
> Many thanks,
> -- Alex
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From hempsworth at googlemail.com  Thu Jan 15 00:58:17 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Thu Jan 15 00:58:30 2009
Subject: [wp-hackers]Treat most recent post differently to the rest
In-Reply-To: <3283f0830901141642t79b218dfo7cd741241eb0c3b8@mail.gmail.com>
References: <5a1dad880901141615s6e563d70kc11cc44e993e3c7a@mail.gmail.com>
	<3283f0830901141642t79b218dfo7cd741241eb0c3b8@mail.gmail.com>
Message-ID: <5a1dad880901141658t5c135121paeb3dcdb04172ea0@mail.gmail.com>

Thanks Glenn, works a treat :)

-- Alex


On Thu, Jan 15, 2009 at 12:42 AM, Glenn Ansley <glenn@glennansley.com>wrote:

> I've done this before by just testing for the loop count. $wp_query
> has this built in. The first post in the loop is 0
> global $wp_query;
> if ( $wp_query->current_post === 0 ) {
>   // style for first
> }else{
>  // style for the rest
> }
>
> http://codex.wordpress.org/Function_Reference/WP_Query
>
> On Wed, Jan 14, 2009 at 7:15 PM, Alex Hempton-Smith
> <hempsworth@googlemail.com> wrote:
> > Hi all,
> > On my category archives page, I'm outputting the first post into a
> different
> > HTML structure, and then outputting the rest of them below that as
> normal.
> >
> > <?php
> > $recentPosts = new WP_Query();
> > $recentPosts->query('showposts=1');
> >
> > while ($recentPosts->have_posts()) : $recentPosts->the_post();
> > ?>
> > DOING SOMETHING WEIRD TO THE MOST RECENT POST HERE
> > <?php
> > endwhile;
> >
> > while (have_posts()) : the_post(); ?>
> > OUTPUTTING THE REST NORMALLY HERE
> > <?php endwhile; ?>
> >
> > Because I've already outputted that most recent post, how do I exclude it
> > from the main output below that?
> > Almost like offset the output to start 1 post later than the most recent
> > ones.
> >
> > Hope this makes sense :)
> >
> > Many thanks,
> > -- Alex
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From lynne.pope at gmail.com  Thu Jan 15 03:22:43 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu Jan 15 03:23:01 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
Message-ID: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>

Hi all,

I need to remove the wp_admin_css from the login screen only and am having a
heck of a time working out how to do this.

I have a custom login using my own stylesheets through my themes functions.
I don't need the admin css to load into the headers.

If this cannot be separated out then can anyone tell me what filter is used
to remove the version number that is appended to the stylesheets?


Thanks.
Lynne
From wordpress at dd32.id.au  Thu Jan 15 07:42:42 2009
From: wordpress at dd32.id.au (DD32)
Date: Thu Jan 15 07:43:03 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <9665660.1931231976802086.JavaMail.DELL-1405$@Dell-1405>
References: <9665660.1931231976802086.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <op.unsfpg1sk6w4mc@dd32.no-ip.com>



From wordpress at dd32.id.au  Thu Jan 15 07:44:33 2009
From: wordpress at dd32.id.au (DD32)
Date: Thu Jan 15 07:44:45 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <op.unsfpg1sk6w4mc@dd32.no-ip.com>
References: <9665660.1931231976802086.JavaMail.DELL-1405$@Dell-1405>
	<op.unsfpg1sk6w4mc@dd32.no-ip.com>
Message-ID: <45055a190901142344l754c2f15j5fd1bd5f564c94ca@mail.gmail.com>

Err.. Sorry.. My mail client must've done something stupid. (That 2nd
message is proof of it.. non-mailing list replies are fine..)

Anyway, Long day so:
 * Theres been requests for a filter of what to delete from the plugins folder
 * Plugin folder name may change upon plugin upgrade (It changes to
the plugin slug, There are a number of plugins which still instruct
users to upload it to a differntly-named folder
 * IMO, If there are files/folders in your plugins directory which are
not writable by the credentials given, You're really out of luck..
I've only noticed the problem with Locked files/folders on windows,
Usually related to SVN, SVN'ised installs on linux seem fine
 * Yes, Leaving the svn details for later svn up'ing is nice.. but..
Those who use svn are not those who'll be using the upgrader in the
first place..

 * Yes, I agree this is very narrow sighted of myself here, But the
upgrader really doesn't operate well with not deleting certain files,
I've really been planning on rewriting the upgrade/install for
plugins/themes, i've got a trac ticket on it, I just really dont have
the time right now, Unlike most devs, I dont get payed for any
wordpress-related work, So what i do, and the decisions i make with
regards to what i generally contribute, are generally what my
narrow-sight see's as the 'best' solution. I have nothing against
others contributing code like yours tho, make a trac ticket for it
(Posting code to wp-hackers is really useless), Maybe someone will
massage it into something which can be included in core :)

2009/1/15 DD32 <wordpress@dd32.id.au>:
>
>
>
From jeremy.visser at gmail.com  Thu Jan 15 11:24:47 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Thu Jan 15 11:26:51 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
In-Reply-To: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
References: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
Message-ID: <1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>

On Thu, 2009-01-15 at 16:22 +1300, Lynne Pope wrote:
> I need to remove the wp_admin_css from the login screen only and am having a
> heck of a time working out how to do this.
> 
> I have a custom login using my own stylesheets through my themes functions.
> I don't need the admin css to load into the headers.

This ought to do the trick:

        <?php
        /*
        Plugin Name: Kill Login CSS
        */
        
        function kill_login_css($tag) {
        	return '';
        }
        if (basename($_SERVER['PHP_SELF']) == 'wp-login.php')
        	add_action('style_loader_tag', 'kill_login_css');
        
        ?>

Not sure if there's a better way to do it.

You can't do an add_filter('wp_admin_css'), because wp-login.php calls
wp_admin_css( 'login', true ), where the "true" means "force echo",
which means it bypasses the wp_admin_css filter. (This is the point
where the cyanide comes in.)

I haven't looked at that part of the WP codebase in years, and it's
downright scary. I mean, take a look at this snippet:

        $ver = $this->registered[$handle]->ver ?
        	$this->registered[$handle]->ver : $this->default_version;
        if ( isset($this->args[$handle]) )
        	$ver .= '&amp;' . $this->args[$handle];

I don't know what it is, but it's not poetry. (Nothing personal against
whoever wrote it -- I can't really talk, can I?)

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From wordpress at dd32.id.au  Thu Jan 15 11:36:00 2009
From: wordpress at dd32.id.au (DD32)
Date: Thu Jan 15 11:36:08 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
In-Reply-To: <1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
References: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
	<1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
Message-ID: <45055a190901150336u6613688ao91d3a9cfa93c676a@mail.gmail.com>

2009/1/15 Jeremy Visser <jeremy.visser@gmail.com>:
> I haven't looked at that part of the WP codebase in years, and it's
> downright scary. I mean, take a look at this snippet:
>
>        $ver = $this->registered[$handle]->ver ?
>                $this->registered[$handle]->ver : $this->default_version;
>        if ( isset($this->args[$handle]) )
>                $ver .= '&amp;' . $this->args[$handle];
>
> I don't know what it is, but it's not poetry. (Nothing personal against
> whoever wrote it -- I can't really talk, can I?)

Whats so bad about that?

Set $ver to the current item's 'ver' if set, else to the current
default version, If there are also extra args defined for the current
script/style, append it to $ver

Its hard to judge based on a small sniplet if you do not understand
how the greater glass is working, The same can be said for the Rewrite
Class or the query class in most cases..
From frank at bueltge.de  Thu Jan 15 11:41:24 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Thu Jan 15 11:42:00 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
In-Reply-To: <45055a190901150336u6613688ao91d3a9cfa93c676a@mail.gmail.com>
References: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
	<1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
	<45055a190901150336u6613688ao91d3a9cfa93c676a@mail.gmail.com>
Message-ID: <db047a770901150341r3192e5e8n3a688c22458218a3@mail.gmail.com>

if ( basename($_SERVER['PHP_SELF']) == 'wp-login.php' )
    add_action( 'style_loader_tag', create_function( '$a', "return null;" )
);

I use the hook with a small function for kill the css on login-screen and
add a new styel for corporate identity.
if ( !function_exists('fb_custom_login') ) {
    function fb_custom_login() {
        echo '<link rel="stylesheet" type="text/css" href="' .
get_bloginfo('template_directory') . '/custom-login/custom-login.css" />';
    }

    add_action('login_head', 'fb_custom_login');
}

On Thu, Jan 15, 2009 at 12:36 PM, DD32 <wordpress@dd32.id.au> wrote:

> 2009/1/15 Jeremy Visser <jeremy.visser@gmail.com>:
> > I haven't looked at that part of the WP codebase in years, and it's
> > downright scary. I mean, take a look at this snippet:
> >
> >        $ver = $this->registered[$handle]->ver ?
> >                $this->registered[$handle]->ver : $this->default_version;
> >        if ( isset($this->args[$handle]) )
> >                $ver .= '&amp;' . $this->args[$handle];
> >
> > I don't know what it is, but it's not poetry. (Nothing personal against
> > whoever wrote it -- I can't really talk, can I?)
>
> Whats so bad about that?
>
> Set $ver to the current item's 'ver' if set, else to the current
> default version, If there are also extra args defined for the current
> script/style, append it to $ver
>
> Its hard to judge based on a small sniplet if you do not understand
> how the greater glass is working, The same can be said for the Rewrite
> Class or the query class in most cases..
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From lynne.pope at gmail.com  Thu Jan 15 11:49:59 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu Jan 15 11:50:06 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
In-Reply-To: <db047a770901150341r3192e5e8n3a688c22458218a3@mail.gmail.com>
References: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
	<1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
	<45055a190901150336u6613688ao91d3a9cfa93c676a@mail.gmail.com>
	<db047a770901150341r3192e5e8n3a688c22458218a3@mail.gmail.com>
Message-ID: <427667db0901150349i6664d9c3mfccbdd5b369b7175@mail.gmail.com>

The problem with doing it that way Frank is that the wp_admin_css is still
loaded, even though the styles may be getting overridden by your own CSS.

I just can't see the point in slowing down page loading by having it load
two admin css files I dont want or need. Also, the version is appended to
the wp_admin_css files so not only would your method simply add an
additional css file, but the original ones sit there in the header and give
everyone information about which version of WordPress is running.

Removing the wp_admin_css completely from the header output takes care of
all of that.

Lynne

2009/1/16 Frank Bueltge <frank@bueltge.de>

> if ( basename($_SERVER['PHP_SELF']) == 'wp-login.php' )
>     add_action( 'style_loader_tag', create_function( '$a', "return null;" )
> );
>
> I use the hook with a small function for kill the css on login-screen and
> add a new styel for corporate identity.
> if ( !function_exists('fb_custom_login') ) {
>    function fb_custom_login() {
>        echo '<link rel="stylesheet" type="text/css" href="' .
> get_bloginfo('template_directory') . '/custom-login/custom-login.css" />';
>    }
>
>    add_action('login_head', 'fb_custom_login');
> }
>
>
From lynne.pope at gmail.com  Thu Jan 15 12:00:56 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu Jan 15 12:01:05 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
In-Reply-To: <1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
References: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
	<1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
Message-ID: <427667db0901150400w7d470d2do6c4ca7847743fb57@mail.gmail.com>

Thanks Jeremy, this did the trick perfectly. I now have an unhacked
wp-login.php ;)

I added the function to my custom user-functions.php (which gets included in
the theme's functions.php) along with changes to login_headerurl and
login_headertitle, and the addition of my own CSS file, and viola! 5 minutes
work for a custom login screen with all WP version identification removed.

I prefer to do this through the theme since I always style the login to
match the theme and could never see the need for going the plugin route for
styling.

Its nice not to be hacking the core though!

Lynne


2009/1/16 Jeremy Visser <jeremy.visser@gmail.com>

> On Thu, 2009-01-15 at 16:22 +1300, Lynne Pope wrote:
> > I need to remove the wp_admin_css from the login screen only and am
> having a
> > heck of a time working out how to do this.
> >
> > I have a custom login using my own stylesheets through my themes
> functions.
> > I don't need the admin css to load into the headers.
>
> This ought to do the trick:
>
>        <?php
>        /*
>        Plugin Name: Kill Login CSS
>        */
>
>        function kill_login_css($tag) {
>                return '';
>        }
>        if (basename($_SERVER['PHP_SELF']) == 'wp-login.php')
>                add_action('style_loader_tag', 'kill_login_css');
>
>        ?>
>
>
From joelfisher at gmail.com  Thu Jan 15 12:10:26 2009
From: joelfisher at gmail.com (Joel Fisher)
Date: Thu Jan 15 12:15:25 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
In-Reply-To: <427667db0901150400w7d470d2do6c4ca7847743fb57@mail.gmail.com>
References: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
	<1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
	<427667db0901150400w7d470d2do6c4ca7847743fb57@mail.gmail.com>
Message-ID: <B8C7DDB9-2DB7-46B0-98E7-38F30E3428A4@gmail.com>

cool. Can you explain how user-functions works?

Do you just do an include within functions and then include all custom  
additions in that so functions stay intact?

Did you try the custom login plug prior to this?

I like your approach, especially for reusing it in the future.

Sent from my iPhone

On Jan 15, 2009, at 7:00 AM, Lynne Pope <lynne.pope@gmail.com> wrote:

> Thanks Jeremy, this did the trick perfectly. I now have an unhacked
> wp-login.php ;)
>
> I added the function to my custom user-functions.php (which gets  
> included in
> the theme's functions.php) along with changes to login_headerurl and
> login_headertitle, and the addition of my own CSS file, and viola! 5  
> minutes
> work for a custom login screen with all WP version identification  
> removed.
>
> I prefer to do this through the theme since I always style the login  
> to
> match the theme and could never see the need for going the plugin  
> route for
> styling.
>
> Its nice not to be hacking the core though!
>
> Lynne
>
>
> 2009/1/16 Jeremy Visser <jeremy.visser@gmail.com>
>
>> On Thu, 2009-01-15 at 16:22 +1300, Lynne Pope wrote:
>>> I need to remove the wp_admin_css from the login screen only and am
>> having a
>>> heck of a time working out how to do this.
>>>
>>> I have a custom login using my own stylesheets through my themes
>> functions.
>>> I don't need the admin css to load into the headers.
>>
>> This ought to do the trick:
>>
>>       <?php
>>       /*
>>       Plugin Name: Kill Login CSS
>>       */
>>
>>       function kill_login_css($tag) {
>>               return '';
>>       }
>>       if (basename($_SERVER['PHP_SELF']) == 'wp-login.php')
>>               add_action('style_loader_tag', 'kill_login_css');
>>
>>       ?>
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From frank at bueltge.de  Thu Jan 15 12:25:49 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Thu Jan 15 12:26:04 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
In-Reply-To: <B8C7DDB9-2DB7-46B0-98E7-38F30E3428A4@gmail.com>
References: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
	<1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
	<427667db0901150400w7d470d2do6c4ca7847743fb57@mail.gmail.com>
	<B8C7DDB9-2DB7-46B0-98E7-38F30E3428A4@gmail.com>
Message-ID: <db047a770901150425r54411552h6a9c3b5bba7dd176@mail.gmail.com>

http://wpengineer.com/create-your-own-wordpress-login-design/

You can see on this post for examble login-screen with the functions. The
css works only with the default css of WordPress. When you kill the deault
css of WP, then must your write a little bid more css.


On Thu, Jan 15, 2009 at 1:10 PM, Joel Fisher <joelfisher@gmail.com> wrote:

> cool. Can you explain how user-functions works?
>
> Do you just do an include within functions and then include all custom
> additions in that so functions stay intact?
>
> Did you try the custom login plug prior to this?
>
> I like your approach, especially for reusing it in the future.
>
> Sent from my iPhone
>
> On Jan 15, 2009, at 7:00 AM, Lynne Pope <lynne.pope@gmail.com> wrote:
>
>  Thanks Jeremy, this did the trick perfectly. I now have an unhacked
>> wp-login.php ;)
>>
>> I added the function to my custom user-functions.php (which gets included
>> in
>> the theme's functions.php) along with changes to login_headerurl and
>> login_headertitle, and the addition of my own CSS file, and viola! 5
>> minutes
>> work for a custom login screen with all WP version identification removed.
>>
>> I prefer to do this through the theme since I always style the login to
>> match the theme and could never see the need for going the plugin route
>> for
>> styling.
>>
>> Its nice not to be hacking the core though!
>>
>> Lynne
>>
>>
>> 2009/1/16 Jeremy Visser <jeremy.visser@gmail.com>
>>
>>  On Thu, 2009-01-15 at 16:22 +1300, Lynne Pope wrote:
>>>
>>>> I need to remove the wp_admin_css from the login screen only and am
>>>>
>>> having a
>>>
>>>> heck of a time working out how to do this.
>>>>
>>>> I have a custom login using my own stylesheets through my themes
>>>>
>>> functions.
>>>
>>>> I don't need the admin css to load into the headers.
>>>>
>>>
>>> This ought to do the trick:
>>>
>>>      <?php
>>>      /*
>>>      Plugin Name: Kill Login CSS
>>>      */
>>>
>>>      function kill_login_css($tag) {
>>>              return '';
>>>      }
>>>      if (basename($_SERVER['PHP_SELF']) == 'wp-login.php')
>>>              add_action('style_loader_tag', 'kill_login_css');
>>>
>>>      ?>
>>>
>>>
>>>  _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From lynne.pope at gmail.com  Thu Jan 15 13:10:31 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu Jan 15 13:11:05 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
In-Reply-To: <B8C7DDB9-2DB7-46B0-98E7-38F30E3428A4@gmail.com>
References: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
	<1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
	<427667db0901150400w7d470d2do6c4ca7847743fb57@mail.gmail.com>
	<B8C7DDB9-2DB7-46B0-98E7-38F30E3428A4@gmail.com>
Message-ID: <427667db0901150510x25ddaff1kf835973fe9efcf4a@mail.gmail.com>

I didn't try any custom login plugins prior to this. I did go to each of the
plugin author's sites and looked at their blog posts, but didn't see any
evidence that the plugins were removing the admin css.

I've been including a user-functions.php file in my theme functions.php for
some time - ever since I realised I was reusing the same code over and over,
with different sites, different themes and different versions of WordPress.
Basically, I just have to copy this file, add the include in functions.php
and simply check that my custom code works as expected.

Originally, it had little more than filters for wpautop and wptexturize,
removal of the_generator, and the rsd_link. It's grown quite a bit since
then as everytime I find I am reusing functions I add them to the file.
Where I found I was reusing the same plugins and those plugins were just a
few lines of code, these got added too.

You can call the user-functions.php file anything you like. I keep that name
because its easy for everyone to identify.
I'm really happy I went in this direction because its made developing and
upgrading sites a lot faster.

Lynne


2009/1/16 Joel Fisher <joelfisher@gmail.com>

> cool. Can you explain how user-functions works?
>
> Do you just do an include within functions and then include all custom
> additions in that so functions stay intact?
>
> Did you try the custom login plug prior to this?
>
> I like your approach, especially for reusing it in the future.
>
> Sent from my iPhone
>
>
> On Jan 15, 2009, at 7:00 AM, Lynne Pope <lynne.pope@gmail.com> wrote:
>
>  Thanks Jeremy, this did the trick perfectly. I now have an unhacked
>> wp-login.php ;)
>>
>> I added the function to my custom user-functions.php (which gets included
>> in
>> the theme's functions.php) along with changes to login_headerurl and
>> login_headertitle, and the addition of my own CSS file, and viola! 5
>> minutes
>> work for a custom login screen with all WP version identification removed.
>>
>> I prefer to do this through the theme since I always style the login to
>> match the theme and could never see the need for going the plugin route
>> for
>> styling.
>>
>> Its nice not to be hacking the core though!
>>
>> Lynne
>>
>>
>> 2009/1/16 Jeremy Visser <jeremy.visser@gmail.com>
>>
>>  On Thu, 2009-01-15 at 16:22 +1300, Lynne Pope wrote:
>>>
>>>> I need to remove the wp_admin_css from the login screen only and am
>>>>
>>> having a
>>>
>>>> heck of a time working out how to do this.
>>>>
>>>> I have a custom login using my own stylesheets through my themes
>>>>
>>> functions.
>>>
>>>> I don't need the admin css to load into the headers.
>>>>
>>>
>>> This ought to do the trick:
>>>
>>>      <?php
>>>      /*
>>>      Plugin Name: Kill Login CSS
>>>      */
>>>
>>>      function kill_login_css($tag) {
>>>              return '';
>>>      }
>>>      if (basename($_SERVER['PHP_SELF']) == 'wp-login.php')
>>>              add_action('style_loader_tag', 'kill_login_css');
>>>
>>>      ?>
>>>
>>>
>
From niladam at gmail.com  Thu Jan 15 13:24:55 2009
From: niladam at gmail.com (madalin)
Date: Thu Jan 15 13:25:07 2009
Subject: [wp-hackers] Filter messages on index based on a tag
Message-ID: <df809b110901150524o11a72a44pf313f26f3bcbc8@mail.gmail.com>

Hello,

I'm trying to show on my index page every post that is found in a
specific tag that would be specified manually in theme's
functions.php. How would i go arround that ?

IE: I have a tag called 159, and i'm trying to show (INDEX only) only
the posts found in that specific tag. Is there any plugin or function
that i could use ?

Thanks.

-- 
Regards,
madalin
http://madalin.eu
From glenn at glennansley.com  Thu Jan 15 14:23:08 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Thu Jan 15 14:23:20 2009
Subject: [wp-hackers] Filter messages on index based on a tag
In-Reply-To: <df809b110901150524o11a72a44pf313f26f3bcbc8@mail.gmail.com>
References: <df809b110901150524o11a72a44pf313f26f3bcbc8@mail.gmail.com>
Message-ID: <3283f0830901150623pd3f568cka46224c44d7fffaf@mail.gmail.com>

Try inserting the following directly above if (have_posts()) : ?> on index.php

if( is_home() || is_front_page() ) {
  query_posts('tag=159');
}

On Thu, Jan 15, 2009 at 8:24 AM, madalin <niladam@gmail.com> wrote:
> Hello,
>
> I'm trying to show on my index page every post that is found in a
> specific tag that would be specified manually in theme's
> functions.php. How would i go arround that ?
>
> IE: I have a tag called 159, and i'm trying to show (INDEX only) only
> the posts found in that specific tag. Is there any plugin or function
> that i could use ?
>
> Thanks.
>
> --
> Regards,
> madalin
> http://madalin.eu
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From niladam at gmail.com  Thu Jan 15 14:33:01 2009
From: niladam at gmail.com (madalin)
Date: Thu Jan 15 14:33:14 2009
Subject: [wp-hackers] Filter messages on index based on a tag
In-Reply-To: <3283f0830901150623pd3f568cka46224c44d7fffaf@mail.gmail.com>
References: <df809b110901150524o11a72a44pf313f26f3bcbc8@mail.gmail.com>
	<3283f0830901150623pd3f568cka46224c44d7fffaf@mail.gmail.com>
Message-ID: <df809b110901150633u47046df9x5cccd929200db89a@mail.gmail.com>

Thanks alot :)

On Thu, Jan 15, 2009 at 4:23 PM, Glenn Ansley <glenn@glennansley.com> wrote:
> Try inserting the following directly above if (have_posts()) : ?> on index.php
>
> if( is_home() || is_front_page() ) {
>  query_posts('tag=159');
> }
>
> On Thu, Jan 15, 2009 at 8:24 AM, madalin <niladam@gmail.com> wrote:
>> Hello,
>>
>> I'm trying to show on my index page every post that is found in a
>> specific tag that would be specified manually in theme's
>> functions.php. How would i go arround that ?
>>
>> IE: I have a tag called 159, and i'm trying to show (INDEX only) only
>> the posts found in that specific tag. Is there any plugin or function
>> that i could use ?
>>
>> Thanks.
>>
>> --
>> Regards,
>> madalin
>> http://madalin.eu
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Cu drag,
madalin
http://madalin.eu
http://cezara.tg-jiu.ro
http://www.tg-jiu.ro
http://www.radioomega.ro
http://www.accestv.ro
From paul at codehooligans.com  Thu Jan 15 14:15:05 2009
From: paul at codehooligans.com (Paul)
Date: Thu Jan 15 14:45:06 2009
Subject: [wp-hackers] Filter messages on index based on a tag
In-Reply-To: <df809b110901150524o11a72a44pf313f26f3bcbc8@mail.gmail.com>
References: <df809b110901150524o11a72a44pf313f26f3bcbc8@mail.gmail.com>
Message-ID: <4208F1B8-DF99-41F0-9407-ABD5B0462A19@codehooligans.com>

I have just the plugin. Try Simply Exclude http://wordpress.org/extend/plugins/simply-exclude/

This plugin lets you control Categories, Tags, Authors to display on  
the home page, in an archive, in a feed. The interface is pretty  
simple On each you can specify to include or exclude the category, tag  
or author from the display.

Paul


On Jan 15, 2009, at 7:24 AM, madalin wrote:

> Hello,
>
> I'm trying to show on my index page every post that is found in a
> specific tag that would be specified manually in theme's
> functions.php. How would i go arround that ?
>
> IE: I have a tag called 159, and i'm trying to show (INDEX only) only
> the posts found in that specific tag. Is there any plugin or function
> that i could use ?
>
> Thanks.
>
> -- 
> Regards,
> madalin
> http://madalin.eu
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Thu Jan 15 15:55:56 2009
From: otto at ottodestruct.com (Otto)
Date: Thu Jan 15 15:56:09 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <496E6590.6000202@gunters.org>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>
	<9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>
	<349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>
	<161617690901141257o464658ey238c5196e21b94aa@mail.gmail.com>
	<496E6590.6000202@gunters.org>
Message-ID: <161617690901150755sdce636w69aea3ffcd441d94@mail.gmail.com>

Ugh. Talk about reinventing the wheel. And then making it square. ;)


On Wed, Jan 14, 2009 at 4:22 PM, Dougal Campbell <dougal@gunters.org> wrote:
> Otto wrote:
>>
>> On Mon, Jan 12, 2009 at 7:02 AM, scribu <scribu@gmail.com> wrote:
>>
>>>
>>> Using #123/5 would be better because ALL search engines ignore that bit.
>>>
>>
>> So do servers, since browsers don't send #links to the server. No way
>> to get that information from inside the PHP code.
>>
>
> There is if you use a dash of AJAX :)
>
> I've used that technique on projects before. Use the hash portion of the URL
> to store state data, and use Javascript to communicate it back and forth
> between browser and server.
>
> --
> Dougal Campbell <dougal@gunters.org>
> http://dougal.gunters.org/
> http://twitter.com/dougal
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From dougal at gunters.org  Thu Jan 15 19:16:15 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Thu Jan 15 19:16:30 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <161617690901150755sdce636w69aea3ffcd441d94@mail.gmail.com>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>	<9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>	<349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>	<161617690901141257o464658ey238c5196e21b94aa@mail.gmail.com>	<496E6590.6000202@gunters.org>
	<161617690901150755sdce636w69aea3ffcd441d94@mail.gmail.com>
Message-ID: <496F8B7F.4000304@gunters.org>

Otto wrote:
> Ugh. Talk about reinventing the wheel. And then making it square. ;)
>
>   

I'm not saying it's the best solution for the original problem in this 
thread. It almost certainly isn't :)

But it is a good technique for some situations. For example, play around 
with Addictomatic:

  http://addictomatic.com/

You can do a search, then rearrange or hide various news sources. Your 
view state is stored in the hash portion of the URL, which makes it 
bookmarkable, without cookies. So you can send the bookmark to other 
users, and they get the same search view that you set up. For example:

  http://addictomatic.com/topic/wordpress#kmun.dwqo.tblh

> On Wed, Jan 14, 2009 at 4:22 PM, Dougal Campbell <dougal@gunters.org> wrote:
>   
>> Otto wrote:
>>     
>>> On Mon, Jan 12, 2009 at 7:02 AM, scribu <scribu@gmail.com> wrote:
>>>
>>>       
>>>> Using #123/5 would be better because ALL search engines ignore that bit.
>>>>
>>>>         
>>> So do servers, since browsers don't send #links to the server. No way
>>> to get that information from inside the PHP code.
>>>
>>>       
>> There is if you use a dash of AJAX :)
>>
>> I've used that technique on projects before. Use the hash portion of the URL
>> to store state data, and use Javascript to communicate it back and forth
>> between browser and server.
>>     


-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
From mikeschinkel at newclarity.net  Thu Jan 15 20:13:50 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jan 15 20:14:37 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <45055a190901142344l754c2f15j5fd1bd5f564c94ca@mail.gmail.com>
Message-ID: <12659100.201232050432014.JavaMail.DELL-1405$@Dell-1405>

"DD32" <wordpress@dd32.id.au> wrote:
>  * Yes, Leaving the svn details for later svn up'ing is nice.. but..
Those who use svn are not those who'll be using the upgrader in the
first place..

Totally disagree. I'm using both SVN and the upgrader during project development. I don't want to ship a client app with an old version and at times certain plugins seem to be updated weekly, or more often. I can't see many people launching a professionally developed large WordPress project (i.e. for a Fortune 500 company) without using Subversion or similar to back up the files, and constantly upgrading plugins during development is too tedious to have to do manually.

> * Yes, I agree this is very narrow sighted of myself here, 

We can definitely agree on that! :-) :-) :-)

> But the upgrader really doesn't operate well with not deleting certain files, I've really been planning on rewriting the upgrade/install for
plugins/themes, i've got a trac ticket on it, I just really dont have the time right now, 

I'd be happy to collaborate on this and do most of the work. My biggest need would be to make sure I used the right approach; once that's figured out I can definitely do the coding. There are definitely numerous ways to approach it, some better than others. 

IOW, I could do the bulk of this work, just need to know what the team would agree is a good solution.

> Unlike most devs, I dont get payed for any wordpress-related work, 

I know the feeling, until recently I didn't either.
OTOH, why not?  Is it your choice not to get paid for this work?
Certainly there are people who would pay you to do custom work for WordPress.

> So what i do, and the decisions i make with regards to what i generally contribute, are generally what my narrow-sight see's as the 'best' solution. 

I certainly understand, especially since you don't want to stand in the way of other's needs.

> I have nothing against  others contributing code like yours tho, make a trac ticket for it

How do I go about doing that?  Do I need to be given a login, or just create one?  And where do I go for that?

>> (Posting code to wp-hackers is really useless), Maybe someone will massage it into something which can be included in core :)

Thanks in advance.

-Mike Schinkel
http://mikeschinkel.com
From ionfish at gmail.com  Thu Jan 15 20:22:24 2009
From: ionfish at gmail.com (Benedict Eastaugh)
Date: Thu Jan 15 20:22:37 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <12659100.201232050432014.JavaMail.DELL-1405$@Dell-1405>
References: <45055a190901142344l754c2f15j5fd1bd5f564c94ca@mail.gmail.com>
	<12659100.201232050432014.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <fd3b80510901151222l717bb5cdkb76940cafd51ef50@mail.gmail.com>

You can use your WordPress.org account if you already have one (for
the Codex, support forums etc.), otherwise you'll have to register
one.

<http://trac.wordpress.org/>

I'd also read this Codex article about posting Trac tickets.

<http://codex.wordpress.org/Reporting_Bugs>
From photofantaisie at gmail.com  Thu Jan 15 20:47:35 2009
From: photofantaisie at gmail.com (Ade Walker)
Date: Thu Jan 15 20:47:46 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
In-Reply-To: <427667db0901150510x25ddaff1kf835973fe9efcf4a@mail.gmail.com>
References: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
	<1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
	<427667db0901150400w7d470d2do6c4ca7847743fb57@mail.gmail.com>
	<B8C7DDB9-2DB7-46B0-98E7-38F30E3428A4@gmail.com>
	<427667db0901150510x25ddaff1kf835973fe9efcf4a@mail.gmail.com>
Message-ID: <9dd057850901151247k11d5c55cx7c07df9341070f9b@mail.gmail.com>

@ Jeremy

Cool! Thanks. I'm very glad I found this post. :-)

@ Lynne

user-functions.php That's cool too! I've been thinking about that idea for a
while. You've convinced me now that it's worth it. :-)

Ade.

2009/1/15 Lynne Pope <lynne.pope@gmail.com>

> I didn't try any custom login plugins prior to this. I did go to each of
> the
> plugin author's sites and looked at their blog posts, but didn't see any
> evidence that the plugins were removing the admin css.
>
> I've been including a user-functions.php file in my theme functions.php for
> some time - ever since I realised I was reusing the same code over and
> over,
> with different sites, different themes and different versions of WordPress.
> Basically, I just have to copy this file, add the include in functions.php
> and simply check that my custom code works as expected.
>
> Originally, it had little more than filters for wpautop and wptexturize,
> removal of the_generator, and the rsd_link. It's grown quite a bit since
> then as everytime I find I am reusing functions I add them to the file.
> Where I found I was reusing the same plugins and those plugins were just a
> few lines of code, these got added too.
>
> You can call the user-functions.php file anything you like. I keep that
> name
> because its easy for everyone to identify.
> I'm really happy I went in this direction because its made developing and
> upgrading sites a lot faster.
>
> Lynne
>
>
> 2009/1/16 Joel Fisher <joelfisher@gmail.com>
>
> > cool. Can you explain how user-functions works?
> >
> > Do you just do an include within functions and then include all custom
> > additions in that so functions stay intact?
> >
> > Did you try the custom login plug prior to this?
> >
> > I like your approach, especially for reusing it in the future.
> >
> > Sent from my iPhone
> >
> >
> > On Jan 15, 2009, at 7:00 AM, Lynne Pope <lynne.pope@gmail.com> wrote:
> >
> >  Thanks Jeremy, this did the trick perfectly. I now have an unhacked
> >> wp-login.php ;)
> >>
> >> I added the function to my custom user-functions.php (which gets
> included
> >> in
> >> the theme's functions.php) along with changes to login_headerurl and
> >> login_headertitle, and the addition of my own CSS file, and viola! 5
> >> minutes
> >> work for a custom login screen with all WP version identification
> removed.
> >>
> >> I prefer to do this through the theme since I always style the login to
> >> match the theme and could never see the need for going the plugin route
> >> for
> >> styling.
> >>
> >> Its nice not to be hacking the core though!
> >>
> >> Lynne
> >>
> >>
> >> 2009/1/16 Jeremy Visser <jeremy.visser@gmail.com>
> >>
> >>  On Thu, 2009-01-15 at 16:22 +1300, Lynne Pope wrote:
> >>>
> >>>> I need to remove the wp_admin_css from the login screen only and am
> >>>>
> >>> having a
> >>>
> >>>> heck of a time working out how to do this.
> >>>>
> >>>> I have a custom login using my own stylesheets through my themes
> >>>>
> >>> functions.
> >>>
> >>>> I don't need the admin css to load into the headers.
> >>>>
> >>>
> >>> This ought to do the trick:
> >>>
> >>>      <?php
> >>>      /*
> >>>      Plugin Name: Kill Login CSS
> >>>      */
> >>>
> >>>      function kill_login_css($tag) {
> >>>              return '';
> >>>      }
> >>>      if (basename($_SERVER['PHP_SELF']) == 'wp-login.php')
> >>>              add_action('style_loader_tag', 'kill_login_css');
> >>>
> >>>      ?>
> >>>
> >>>
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at newclarity.net  Thu Jan 15 21:12:09 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jan 15 21:14:33 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <fd3b80510901151222l717bb5cdkb76940cafd51ef50@mail.gmail.com>
Message-ID: <16177413.261232053931142.JavaMail.DELL-1405$@Dell-1405>

Perfect, thanks!

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Benedict Eastaugh" <ionfish@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Thursday, January 15, 2009 3:22:24 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin Upgrade Failing when using Subversion

You can use your WordPress.org account if you already have one (for
the Codex, support forums etc.), otherwise you'll have to register
one.

<http://trac.wordpress.org/>

I'd also read this Codex article about posting Trac tickets.

<http://codex.wordpress.org/Reporting_Bugs>
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From jake.mcmurchie at googlemail.com  Thu Jan 15 21:47:11 2009
From: jake.mcmurchie at googlemail.com (Jake McMurchie)
Date: Thu Jan 15 21:47:37 2009
Subject: [wp-hackers] tagging media
Message-ID: <fcf6e76b0901151347r4c036997m9145b516aa1925d4@mail.gmail.com>

Hello.
I'd like to be able to tag (or categorise) uploaded media. Does anyone know
of a plugin that can help me with this?

Thanks.

Jake
From paul at codehooligans.com  Thu Jan 15 21:50:12 2009
From: paul at codehooligans.com (Paul)
Date: Thu Jan 15 21:50:27 2009
Subject: [wp-hackers] tagging media
In-Reply-To: <fcf6e76b0901151347r4c036997m9145b516aa1925d4@mail.gmail.com>
References: <fcf6e76b0901151347r4c036997m9145b516aa1925d4@mail.gmail.com>
Message-ID: <61E8A24B-6AD0-4F63-A467-D34FB653FF54@codehooligans.com>

Jake,

Yep. Just wrote this in December. PResenting the Media Tags plugin
http://wordpress.org/extend/plugins/media-tags/

This plugin adds the ability to enter tags for uploaded media items.  
There is also a handy template function to return the filtered images  
based on the tag. See my site for more details.
http://www.codehooligans.com/2008/12/14/media-tags-plugin/

Paul



On Jan 15, 2009, at 3:47 PM, Jake McMurchie wrote:

> Hello.
> I'd like to be able to tag (or categorise) uploaded media. Does  
> anyone know
> of a plugin that can help me with this?
>
> Thanks.
>
> Jake
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jake.mcmurchie at googlemail.com  Thu Jan 15 22:21:13 2009
From: jake.mcmurchie at googlemail.com (Jake McMurchie)
Date: Thu Jan 15 22:21:27 2009
Subject: [wp-hackers] tagging media
In-Reply-To: <61E8A24B-6AD0-4F63-A467-D34FB653FF54@codehooligans.com>
References: <fcf6e76b0901151347r4c036997m9145b516aa1925d4@mail.gmail.com>
	<61E8A24B-6AD0-4F63-A467-D34FB653FF54@codehooligans.com>
Message-ID: <fcf6e76b0901151421n4b903e7ctb9353d01f1fad056@mail.gmail.com>

That's fantastic. Thanks Paul.
Your site mentions a 'tag management screen' as a proposed enhancement for
this plugin. Have you got any further with this? I have a client who has
many uploaded images and files (hence the need for tagging) and would like
to be able to search/filter for tags when browsing the media library. Do
your plans include this?

Thanks again.

Jake

2009/1/15 Paul <paul@codehooligans.com>

> Jake,
>
> Yep. Just wrote this in December. PResenting the Media Tags plugin
> http://wordpress.org/extend/plugins/media-tags/
>
> This plugin adds the ability to enter tags for uploaded media items. There
> is also a handy template function to return the filtered images based on the
> tag. See my site for more details.
> http://www.codehooligans.com/2008/12/14/media-tags-plugin/
>
> Paul
>
>
>
>
> On Jan 15, 2009, at 3:47 PM, Jake McMurchie wrote:
>
>  Hello.
>> I'd like to be able to tag (or categorise) uploaded media. Does anyone
>> know
>> of a plugin that can help me with this?
>>
>> Thanks.
>>
>> Jake
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From peter.westwood at ftwr.co.uk  Thu Jan 15 22:16:15 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Thu Jan 15 22:48:29 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <12659100.201232050432014.JavaMail.DELL-1405$@Dell-1405>
References: <12659100.201232050432014.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <33A6F4F1-103A-4E5A-B3FB-8A498AC2CCF0@ftwr.co.uk>


On 15 Jan 2009, at 20:13, Mike Schinkel wrote:

> "DD32" <wordpress@dd32.id.au> wrote:
>>  * Yes, Leaving the svn details for later svn up'ing is nice.. but..
> Those who use svn are not those who'll be using the upgrader in the
> first place..
>
> Totally disagree. I'm using both SVN and the upgrader during  
> project development. I don't want to ship a client app with an old  
> version and at times certain plugins seem to be updated weekly, or  
> more often. I can't see many people launching a professionally  
> developed large WordPress project (i.e. for a Fortune 500 company)  
> without using Subversion or similar to back up the files, and  
> constantly upgrading plugins during development is too tedious to  
> have to do manually.
>

If I was doing this for a large WordPress project I would have my own  
svn repo with externals for WordPress and the plugins pinned on  
specific revisions so as to be able to test in the dev environment  
before pushing to production and I wouldn't go near the built in  
upgrader.

The built in upgrader is designed for people who don't use svn (esp  
those who don't know how to - or that it even exists).

> How do I go about doing that?  Do I need to be given a login, or  
> just create one?  And where do I go for that?
>

As said elsewhere in the thread issues/patchs etc are welcome at  
trac.wordpress.org where you login with your forums username.

The devs hang out on irc in #wordpress-dev on freenode.

Contributions are always welcome.

In fact we positively encourage them.

westi

-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From paul at codehooligans.com  Thu Jan 15 22:49:00 2009
From: paul at codehooligans.com (Paul)
Date: Thu Jan 15 22:49:41 2009
Subject: [wp-hackers] tagging media
In-Reply-To: <fcf6e76b0901151421n4b903e7ctb9353d01f1fad056@mail.gmail.com>
References: <fcf6e76b0901151347r4c036997m9145b516aa1925d4@mail.gmail.com>
	<61E8A24B-6AD0-4F63-A467-D34FB653FF54@codehooligans.com>
	<fcf6e76b0901151421n4b903e7ctb9353d01f1fad056@mail.gmail.com>
Message-ID: <431B3332-6615-49E1-B529-B83D16206564@codehooligans.com>

Yes. At the moment I have some pending client projects to get through  
(need to pay the rest). but my plan is to integrate the some tag  
filtering into the Media Management section.

One kudo to the WP dev team here. One note and Thanks you I'd like to  
pass on. When you are on the Post/Page editor form you will see the  
tags display via the popup. Well, also if you go into the Media  
section and select an item you will also see the tags along with other  
standard media elements. And this is all the same code. Well done guys!

P-

On Jan 15, 2009, at 4:21 PM, Jake McMurchie wrote:

> That's fantastic. Thanks Paul.
> Your site mentions a 'tag management screen' as a proposed  
> enhancement for
> this plugin. Have you got any further with this? I have a client who  
> has
> many uploaded images and files (hence the need for tagging) and  
> would like
> to be able to search/filter for tags when browsing the media  
> library. Do
> your plans include this?
>
> Thanks again.
>
> Jake
>
> 2009/1/15 Paul <paul@codehooligans.com>
>
>> Jake,
>>
>> Yep. Just wrote this in December. PResenting the Media Tags plugin
>> http://wordpress.org/extend/plugins/media-tags/
>>
>> This plugin adds the ability to enter tags for uploaded media  
>> items. There
>> is also a handy template function to return the filtered images  
>> based on the
>> tag. See my site for more details.
>> http://www.codehooligans.com/2008/12/14/media-tags-plugin/
>>
>> Paul
>>
>>
>>
>>
>> On Jan 15, 2009, at 3:47 PM, Jake McMurchie wrote:
>>
>> Hello.
>>> I'd like to be able to tag (or categorise) uploaded media. Does  
>>> anyone
>>> know
>>> of a plugin that can help me with this?
>>>
>>> Thanks.
>>>
>>> Jake
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jeremy.visser at gmail.com  Thu Jan 15 23:37:24 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Thu Jan 15 23:37:41 2009
Subject: [wp-hackers] Removing wp_admin_css from login only
In-Reply-To: <45055a190901150336u6613688ao91d3a9cfa93c676a@mail.gmail.com>
References: <427667db0901141922r5d75069awc46558906c8d3417@mail.gmail.com>
	<1232018687.3477.7.camel@rillian.narnia.sunriseroad.net>
	<45055a190901150336u6613688ao91d3a9cfa93c676a@mail.gmail.com>
Message-ID: <1232062644.6111.0.camel@rillian.narnia.sunriseroad.net>

On Thu, 2009-01-15 at 22:36 +1100, DD32 wrote:
> Set $ver to the current item's 'ver' if set, else to the current
> default version, If there are also extra args defined for the current
> script/style, append it to $ver

That explains why you're a coder and valuable contributor, and I just
create noise on the list. :)

Keep cutting code, DD32. :)

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From gamito at gmail.com  Thu Jan 15 23:44:58 2009
From: gamito at gmail.com (=?ISO-8859-1?Q?M=E1rio_Gamito?=)
Date: Thu Jan 15 23:45:38 2009
Subject: [wp-hackers] Set a unique directory for uploads
Message-ID: <496FCA7A.5020300@gmail.com>

Hi,

I have this blog in WP 2.7
I usually upload my images and files to a attic directory, just above
the DocumentRoot of the site. After that, in TinyMCE, I write the URL to
the image. That's quit a waste of time.

So today, I've decided to use the upload feature. Configured the galery
path to "attic" and uploaded a few files and images for testing.

Well, it worked, but ir also created two directories above "attic": 2009
and 01. So, the total path for an image is
/home/user/public_html/attic/2009/01/image.jpg

I don't wnat this kind of red tape.

How can I make my images and file being uploaded to
/home/user/public_html/attic only ?

Any help would be appreciated.

Warm Regards,
-- 
:wq! M?rio Gamito
Key Fingerprint: 0x04DA9BC9
From otto at ottodestruct.com  Thu Jan 15 23:54:03 2009
From: otto at ottodestruct.com (Otto)
Date: Thu Jan 15 23:54:15 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <33A6F4F1-103A-4E5A-B3FB-8A498AC2CCF0@ftwr.co.uk>
References: <12659100.201232050432014.JavaMail.DELL-1405$@Dell-1405>
	<33A6F4F1-103A-4E5A-B3FB-8A498AC2CCF0@ftwr.co.uk>
Message-ID: <161617690901151554y2c854aa6x993dec996fb9a41c@mail.gmail.com>

If you're going to do SVN, why not really do SVN? Even for the plugins.

svn co http://svn.wp-plugins.org/automatic-timezone/trunk/
blog/wp-content/plugins/automatic-timezone

I don't think a single svn up on the root would then update all the
plugins as well, but there's gotta be a way...

-Otto
From wordpress at dd32.id.au  Fri Jan 16 00:01:04 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 16 00:01:19 2009
Subject: [wp-hackers] Set a unique directory for uploads
In-Reply-To: <496FCA7A.5020300@gmail.com>
References: <496FCA7A.5020300@gmail.com>
Message-ID: <45055a190901151601u675505e1r89b99bbe708677cc@mail.gmail.com>

What i've noticed lately, Is that there isnt a constant you can define
for the uploads directory... Only something relative to the content
directory.. which anoyed me..

Anyway, The settings you want are on the Settings->Miscellaneous,
Here's what i've got set:

"Store uploads in this folder: /home/dd32/public_html/dd32.id.au/uploads
Full URL path to files: http://dd32.id.au/uploads"

You need to define both of them correctly, Else it wont work, and no
trailing slashes!

2009/1/16 M?rio Gamito <gamito@gmail.com>:
> Hi,
>
> I have this blog in WP 2.7
> I usually upload my images and files to a attic directory, just above
> the DocumentRoot of the site. After that, in TinyMCE, I write the URL to
> the image. That's quit a waste of time.
>
> So today, I've decided to use the upload feature. Configured the galery
> path to "attic" and uploaded a few files and images for testing.
>
> Well, it worked, but ir also created two directories above "attic": 2009
> and 01. So, the total path for an image is
> /home/user/public_html/attic/2009/01/image.jpg
>
> I don't wnat this kind of red tape.
>
> How can I make my images and file being uploaded to
> /home/user/public_html/attic only ?
>
> Any help would be appreciated.
>
> Warm Regards,
> --
> :wq! M?rio Gamito
> Key Fingerprint: 0x04DA9BC9
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From gaarai at gaarai.com  Fri Jan 16 00:01:21 2009
From: gaarai at gaarai.com (Gaarai)
Date: Fri Jan 16 00:02:28 2009
Subject: [wp-hackers] Set a unique directory for uploads
In-Reply-To: <496FCA7A.5020300@gmail.com>
References: <496FCA7A.5020300@gmail.com>
Message-ID: <496FCE51.2040803@gaarai.com>

The easy solution is to go to Settings > Miscellaneous, remove the check 
from the "Organize my uploads into month- and year-based folders" 
option, and click "Save Changes".

The other option is to hook into the upload_dir filter and manually 
modify the path and url options directly in order to set it up however 
you want.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



M?rio Gamito wrote:
> Hi,
>
> I have this blog in WP 2.7
> I usually upload my images and files to a attic directory, just above
> the DocumentRoot of the site. After that, in TinyMCE, I write the URL to
> the image. That's quit a waste of time.
>
> So today, I've decided to use the upload feature. Configured the galery
> path to "attic" and uploaded a few files and images for testing.
>
> Well, it worked, but ir also created two directories above "attic": 2009
> and 01. So, the total path for an image is
> /home/user/public_html/attic/2009/01/image.jpg
>
> I don't wnat this kind of red tape.
>
> How can I make my images and file being uploaded to
> /home/user/public_html/attic only ?
>
> Any help would be appreciated.
>
> Warm Regards,
>   
From wordpress at dd32.id.au  Fri Jan 16 00:05:53 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 16 00:06:07 2009
Subject: [wp-hackers] Set a unique directory for uploads
In-Reply-To: <496FCE51.2040803@gaarai.com>
References: <496FCA7A.5020300@gmail.com> <496FCE51.2040803@gaarai.com>
Message-ID: <45055a190901151605n3d2af113ld6a158684027be65@mail.gmail.com>

Oh... I completely missed that part of the message... oops :) Yep..
Decheck that setting and all will be fine i the world (or at least the
world your blog lives in)

2009/1/16 Gaarai <gaarai@gaarai.com>:
> The easy solution is to go to Settings > Miscellaneous, remove the check
> from the "Organize my uploads into month- and year-based folders" option,
> and click "Save Changes".
From gamito at gmail.com  Fri Jan 16 00:12:23 2009
From: gamito at gmail.com (=?ISO-8859-1?Q?M=E1rio_Gamito?=)
Date: Fri Jan 16 00:13:08 2009
Subject: [wp-hackers] Set a unique directory for uploads
In-Reply-To: <496FCA7A.5020300@gmail.com>
References: <496FCA7A.5020300@gmail.com>
Message-ID: <496FD0E7.4000002@gmail.com>

M?rio Gamito wrote:
> Hi,

> How can I make my images and file being uploaded to
> /home/user/public_html/attic only ?
Ok, I've found the answer, but another thing: I upload an image and in
the "attic" directory it creates another two scaled down versions of the
image.

I went to Settings/Media, but I see no option to WP not create these 2
images.

Is it possible in some way to do this ?

Any help would be appreciated.

Warm Regards,
-- 
:wq! M?rio Gamito
Key Fingerprint: 0x04DA9BC9
From wordpress at dd32.id.au  Fri Jan 16 00:13:07 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 16 00:13:22 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <12659100.201232050432014.JavaMail.DELL-1405$@Dell-1405>
References: <45055a190901142344l754c2f15j5fd1bd5f564c94ca@mail.gmail.com>
	<12659100.201232050432014.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <45055a190901151613x6249bd20rdf9cf35b1cb4c4a1@mail.gmail.com>

2009/1/16 Mike Schinkel <mikeschinkel@newclarity.net>:
>> But the upgrader really doesn't operate well with not deleting certain files, I've really been planning on rewriting the upgrade/install for
> plugins/themes, i've got a trac ticket on it, I just really dont have the time right now,
>
> I'd be happy to collaborate on this and do most of the work. My biggest need would be to make sure I used the right approach; once that's figured out I can definitely do the coding. There are definitely numerous ways to approach it, some better than others.
>
> IOW, I could do the bulk of this work, just need to know what the team would agree is a good solution.

Get something that works well, under all situations, and it'd be
accepted I'd say :) I've been meaning to combine all the different
install/upgrade functions into 1 class.. but.. Just havnt gotten
around to it, So theres a lot of duplicated code at present there too,
so just dont make it too hard for someone to reorganise the code in
the future ;)

>> Unlike most devs, I dont get payed for any wordpress-related work,
>
> I know the feeling, until recently I didn't either.
> OTOH, why not?  Is it your choice not to get paid for this work?
> Certainly there are people who would pay you to do custom work for WordPress.

Its certainly my choice not to seek full time employment related to
WP, some people are surprised i havn't applied to Automattic, But
Web-related positions (or even ground level computer tech positions)
are rare to come across in my area atm, so.. Even though i am seeking
full time web dev. employment, It just aint happening around here, and
I'm really not interested in moving to the big smoke :)
I certainly take on some freelance work now and then when someone
contacts me, but really don't advertise or keep an eye on the job
lists.. I was planning on getting into that side of the world more
this year though!

>> I have nothing against  others contributing code like yours tho, make a trac ticket for it
> How do I go about doing that?  Do I need to be given a login, or just create one?  And where do I go for that?

Ah, I see someone else has posted a link to trac and all the details,
Trac's the best place to raise ideas of contributions, but not feature
requests (Leave that for wordpress.org/extend/ideas/ )
From wordpress at dd32.id.au  Fri Jan 16 00:15:40 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 16 00:15:53 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <161617690901151554y2c854aa6x993dec996fb9a41c@mail.gmail.com>
References: <12659100.201232050432014.JavaMail.DELL-1405$@Dell-1405>
	<33A6F4F1-103A-4E5A-B3FB-8A498AC2CCF0@ftwr.co.uk>
	<161617690901151554y2c854aa6x993dec996fb9a41c@mail.gmail.com>
Message-ID: <45055a190901151615i74e471d3v92f37c86147ef6d@mail.gmail.com>

I had a .php script i was running to do SVN up's..
First it svn up'd WP core, Then it ran a svn up on every plugin
directory.. Kept everything up to date pretty well..
..But then i wrote the plugin upgrader, and I have no need to.. and
seems i've since deleted the script.. 2 clicks once a month keeps all
my plugins up to date (I even log in to realise i've not upgraded my
own plugins on my own website sometimes)

2009/1/16 Otto <otto@ottodestruct.com>:
> If you're going to do SVN, why not really do SVN? Even for the plugins.
>
> svn co http://svn.wp-plugins.org/automatic-timezone/trunk/
> blog/wp-content/plugins/automatic-timezone
>
> I don't think a single svn up on the root would then update all the
> plugins as well, but there's gotta be a way...
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From otto at ottodestruct.com  Thu Jan 15 23:50:46 2009
From: otto at ottodestruct.com (Otto)
Date: Fri Jan 16 00:28:23 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <496F8B7F.4000304@gunters.org>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>
	<9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>
	<349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>
	<161617690901141257o464658ey238c5196e21b94aa@mail.gmail.com>
	<496E6590.6000202@gunters.org>
	<161617690901150755sdce636w69aea3ffcd441d94@mail.gmail.com>
	<496F8B7F.4000304@gunters.org>
Message-ID: <161617690901151550g709e8472ja4f519facf7032ff@mail.gmail.com>

On Thu, Jan 15, 2009 at 1:16 PM, Dougal Campbell <dougal@gunters.org> wrote:
> But it is a good technique for some situations. For example, play around
> with Addictomatic:
>
>  http://addictomatic.com/
>
> You can do a search, then rearrange or hide various news sources. Your view
> state is stored in the hash portion of the URL, which makes it bookmarkable,
> without cookies. So you can send the bookmark to other users, and they get
> the same search view that you set up. For example:
>
>  http://addictomatic.com/topic/wordpress#kmun.dwqo.tblh

How is that a substantial improvement over, say,
http://addictomatic.com/topic/wordpress?status=kmun.dwqo.tblh ?

I just don't see how getting hash info from the URL and sending it via
JS is any better than a GET URL.

-Otto
From harish.mlists at gmail.com  Fri Jan 16 00:33:34 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Fri Jan 16 00:33:50 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <4328794.1671231953777983.JavaMail.DELL-1405$@Dell-1405>
References: <4328794.1671231953777983.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <496FD5DE.4060704@gmail.com>

Mike Schinkel wrote:
> Hi All:
> 
> I've just run into a problem with plugin upgrades failing when using Subversion for version control.  Subversion stores a collection of readme files and when the upgrade process tries to delete them it fails to and then fails the upgrade process.  Am I the first person on this list to experience this?  It fails in a very ungraceful way, i.e. basically it just says "Sorry, sux to be you." ;-)
> 
> Potential solutions:
> 
> 1.) Bypass deleting any .svn directory(s) and in that case don't require the plugin directory to be deleted in order to continue the upgrade process.
> 2.) Remove the read-only attribute and delete the files.
> 3.) Something else?
> 
> I think #1 is most preferable because it doesn't loose the Subversion info and the next check-in will check-in the new plugin info.  Maybe this could be a configuration option, i.e. to do #1 by default or #2 if configured to do so instead?
> 
> I need this fixed ASAP so I can do the work to fix it but I've yet to contribute any patches so I don't know the process.

(I apologise for joining this discussion late. I am coming in with a fix
from a different angle.)

I've been running my journal on WordPress from SVN for a long time and
have recently (few months?) begun using the click-to-upgrade plugin
functionality. I have not noticed any problems.

But I do have the following SVN properties set:

1. Ignore all file/folders under wp-content that are not 'plugins' or
'themes.' e.g.,

Properties on '.':
  svn:ignore : wp-cache-config.php
cache
advanced-cache.php
upgrade

2. Ignore all file/folders under wp-content/plugins that are not part of
the default checkout (akismet, hello.php). e.g.,

Properties on '.':
  svn:ignore : rssbasefix.php
wp-print
google-sitemap-generator
wp-super-cache
exec-php
sem-recent-comments.php
popularity-contest.php
math-comment-spam-protection
sustenance.php

  svn:externals : akismet http://plugins.svn.wordpress.org/akismet/trunk/


Perhaps this will work for you.

Harish


From alan at verselogic.net  Fri Jan 16 00:36:47 2009
From: alan at verselogic.net (Alan Castonguay)
Date: Fri Jan 16 00:37:00 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <161617690901150755sdce636w69aea3ffcd441d94@mail.gmail.com>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>
	<9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>
	<349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>
	<161617690901141257o464658ey238c5196e21b94aa@mail.gmail.com>
	<496E6590.6000202@gunters.org>
	<161617690901150755sdce636w69aea3ffcd441d94@mail.gmail.com>
Message-ID: <E43C9D49-C4D9-4FDF-A683-05E388051267@verselogic.net>

#hash urls are useful for linking to a particular place in a list. For  
example, they can lend themselves to a really nice way of making  
javascript-based paged-comments. All the comments could be in the same  
long document (no repeating an article N times), but rolled up into  
"pages" by javascript, bookmarked by #pagenumber or #commentnumber.

Alan J Castonguay


-------------- next part --------------


On Jan 15, 2009, at 10:55 AM, Otto wrote:

> Ugh. Talk about reinventing the wheel. And then making it square. ;)
>
>
> On Wed, Jan 14, 2009 at 4:22 PM, Dougal Campbell  
> <dougal@gunters.org> wrote:
>> Otto wrote:
>>>
>>> On Mon, Jan 12, 2009 at 7:02 AM, scribu <scribu@gmail.com> wrote:
>>>
>>>>
>>>> Using #123/5 would be better because ALL search engines ignore  
>>>> that bit.
>>>>
>>>
>>> So do servers, since browsers don't send #links to the server. No  
>>> way
>>> to get that information from inside the PHP code.
>>>
>>
>> There is if you use a dash of AJAX :)
>>
>> I've used that technique on projects before. Use the hash portion  
>> of the URL
>> to store state data, and use Javascript to communicate it back and  
>> forth
>> between browser and server.
>>
>> --
>> Dougal Campbell <dougal@gunters.org>
>> http://dougal.gunters.org/
>> http://twitter.com/dougal
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From gamito at gmail.com  Fri Jan 16 00:45:49 2009
From: gamito at gmail.com (=?UTF-8?B?TcOhcmlvIEdhbWl0bw==?=)
Date: Fri Jan 16 00:46:30 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <4328794.1671231953777983.JavaMail.DELL-1405$@Dell-1405>
References: <4328794.1671231953777983.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <496FD8BD.4060804@gmail.com>

Mike Schinkel wrote:
> Hi All:
> 
> I've just run into a problem with plugin upgrades failing when using Subversion for version control.  Subversion stores a collection of readme files and when the upgrade process tries to delete them it fails to and then fails the upgrade process.  Am I the first person on this list to experience this?  It fails in a very ungraceful way, i.e. basically it just says "Sorry, sux to be you." ;-)
> 
> Potential solutions:
> 
> 1.) Bypass deleting any .svn directory(s) and in that case don't require the plugin directory to be deleted in order to continue the upgrade process.
> 2.) Remove the read-only attribute and delete the files.
> 3.) Something else?
Sorry if I'm missing something here.
But why don't you just go the *real* SVN way ?

Empty your repository at svn.wp-plugins.org

Then create it again and do a whole commit from your computer.

If I'm not missing something here, that's just about it.

Right ?

Warm Regards,
-- 
:wq! M?rio Gamito
Key Fingerprint: 0x04DA9BC9
From alan at verselogic.net  Fri Jan 16 00:55:47 2009
From: alan at verselogic.net (Alan Castonguay)
Date: Fri Jan 16 00:56:00 2009
Subject: [wp-hackers]Treat most recent post differently to the rest
In-Reply-To: <3283f0830901141642t79b218dfo7cd741241eb0c3b8@mail.gmail.com>
References: <5a1dad880901141615s6e563d70kc11cc44e993e3c7a@mail.gmail.com>
	<3283f0830901141642t79b218dfo7cd741241eb0c3b8@mail.gmail.com>
Message-ID: <1A789A13-3EC7-4EC6-9C36-E86FFAB78D42@verselogic.net>

To combine these, you can also do something like this;

<?php
if( have_posts() ) :

the_post();
?>
DOING SOMETHING WEIRD TO THE MOST RECENT POST HERE
<?php

while (have_posts()) : the_post(); ?>
OUTPUTTING THE REST NORMALLY HERE
<?php endwhile;

endif; ?>


Alan J Castonguay


-------------- next part --------------


On Jan 14, 2009, at 7:42 PM, Glenn Ansley wrote:

> I've done this before by just testing for the loop count. $wp_query
> has this built in. The first post in the loop is 0
> global $wp_query;
> if ( $wp_query->current_post === 0 ) {
>   // style for first
> }else{
>  // style for the rest
> }
>
> http://codex.wordpress.org/Function_Reference/WP_Query
>
> On Wed, Jan 14, 2009 at 7:15 PM, Alex Hempton-Smith
> <hempsworth@googlemail.com> wrote:
>> Hi all,
>> On my category archives page, I'm outputting the first post into a  
>> different
>> HTML structure, and then outputting the rest of them below that as  
>> normal.
>>
>> <?php
>> $recentPosts = new WP_Query();
>> $recentPosts->query('showposts=1');
>>
>> while ($recentPosts->have_posts()) : $recentPosts->the_post();
>> ?>
>> DOING SOMETHING WEIRD TO THE MOST RECENT POST HERE
>> <?php
>> endwhile;
>>
>> while (have_posts()) : the_post(); ?>
>> OUTPUTTING THE REST NORMALLY HERE
>> <?php endwhile; ?>
>>
>> Because I've already outputted that most recent post, how do I  
>> exclude it
>> from the main output below that?
>> Almost like offset the output to start 1 post later than the most  
>> recent
>> ones.
>>
>> Hope this makes sense :)
>>
>> Many thanks,
>> -- Alex
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From if.website at gmail.com  Fri Jan 16 01:01:01 2009
From: if.website at gmail.com (Austin Matzko)
Date: Fri Jan 16 01:01:15 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <161617690901151550g709e8472ja4f519facf7032ff@mail.gmail.com>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>
	<9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>
	<349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>
	<161617690901141257o464658ey238c5196e21b94aa@mail.gmail.com>
	<496E6590.6000202@gunters.org>
	<161617690901150755sdce636w69aea3ffcd441d94@mail.gmail.com>
	<496F8B7F.4000304@gunters.org>
	<161617690901151550g709e8472ja4f519facf7032ff@mail.gmail.com>
Message-ID: <674b4a3b0901151701m7d7ff69chfdcd619d9327e97c@mail.gmail.com>

On Thu, Jan 15, 2009 at 5:50 PM, Otto <otto@ottodestruct.com> wrote:
> How is that a substantial improvement over, say,
> http://addictomatic.com/topic/wordpress?status=kmun.dwqo.tblh ?
>
> I just don't see how getting hash info from the URL and sending it via
> JS is any better than a GET URL.

One advantage is that you can make ajaxy changes yet preserve the
back-button functionality of the browser.  Facebook uses this to good
effect when browsing a series of photos.
From mikeschinkel at newclarity.net  Fri Jan 16 01:33:41 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 01:34:47 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <33A6F4F1-103A-4E5A-B3FB-8A498AC2CCF0@ftwr.co.uk>
Message-ID: <4116535.541232069623407.JavaMail.DELL-1405$@Dell-1405>

"Peter Westwood" <peter.westwood@ftwr.co.uk> wrote:
> If I was doing this for a large WordPress project I would 
> have my own svn repo with externals for WordPress and the 
> plugins pinned on specific revisions so as to be able to 
> test in the dev environment before pushing to production 
> and I wouldn't go near the built in upgrader.
> The built in upgrader is designed for people who don't 
> use svn (esp those who don't know how to - or that it 
> even exists).

Suffice it to say, what works for some doesn't work for everyone.

> The devs hang out on irc in #wordpress-dev on freenode.

Thanks for that. I'm just starting to use IRC so I'll definitely check it out.

-Mike Schinkel
http://mikeschinkel.com
From ionfish at gmail.com  Fri Jan 16 00:58:33 2009
From: ionfish at gmail.com (Benedict Eastaugh)
Date: Fri Jan 16 01:35:19 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <45055a190901151615i74e471d3v92f37c86147ef6d@mail.gmail.com>
References: <12659100.201232050432014.JavaMail.DELL-1405$@Dell-1405>
	<33A6F4F1-103A-4E5A-B3FB-8A498AC2CCF0@ftwr.co.uk>
	<161617690901151554y2c854aa6x993dec996fb9a41c@mail.gmail.com>
	<45055a190901151615i74e471d3v92f37c86147ef6d@mail.gmail.com>
Message-ID: <fd3b80510901151658i49352bf3m9bf218e8f835d44f@mail.gmail.com>

This is basically the script I use.

http://gist.github.com/47744

I also keep a bunch of plugins in my home directory and symlink them
into the WP installs, which also reduces the maintenance.
From mikeschinkel at newclarity.net  Fri Jan 16 01:56:19 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 01:56:40 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <31054307.581232070733831.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <9650148.601232070983551.JavaMail.DELL-1405$@Dell-1405>

>> Empty your repository at svn.wp-plugins.org

I totally don't follow you. Are you assuming I'm using svn.wp-plugins.org?  I'm not.

And why would I need to go to that trouble when I'm looking at an admin console that says "Upgrade me!"?  My use of Subversion is orthogonal to upgrading at the admin console.

That said, the admin console really needs a "Pin the Plugin to this Version and do not ask about upgrading?"  It would also be good if upgrades could be presented as bug-fix-only upgrades vs. feature upgrades.  These are things I might tackle.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "M?rio Gamito" <gamito@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Thursday, January 15, 2009 7:45:49 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin Upgrade Failing when using Subversion

Mike Schinkel wrote:
> Hi All:
> 
> I've just run into a problem with plugin upgrades failing when using Subversion for version control.  Subversion stores a collection of readme files and when the upgrade process tries to delete them it fails to and then fails the upgrade process.  Am I the first person on this list to experience this?  It fails in a very ungraceful way, i.e. basically it just says "Sorry, sux to be you." ;-)
> 
> Potential solutions:
> 
> 1.) Bypass deleting any .svn directory(s) and in that case don't require the plugin directory to be deleted in order to continue the upgrade process.
> 2.) Remove the read-only attribute and delete the files.
> 3.) Something else?

Sorry if I'm missing something here.
But why don't you just go the *real* SVN way ?

Empty your repository at svn.wp-plugins.org

Then create it again and do a whole commit from your computer.

If I'm not missing something here, that's just about it.

Right ?

Warm Regards,
-- 
:wq! M?rio Gamito
Key Fingerprint: 0x04DA9BC9
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Fri Jan 16 02:03:14 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 02:03:53 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <32876915.621232071134080.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <7832993.641232071396825.JavaMail.DELL-1405$@Dell-1405>

"Harish Narayanan" <harish.mlists@gmail.com> wrote:
> I've been running my journal on WordPress from SVN for a long 
> time and have recently (few months?) begun using the click-to-upgrade 
> plugin functionality. I have not noticed any problems.

Thanks for joining the discussion. Your input is appreciated.

>> But I do have the following SVN properties set:...

Where do you set these properties?  Client or Server?

We are using Unfuddle.com for hosted server Subversion and I don't even see any options; maybe my client has access to those options?

So what files do you end up actually storing in your subversion?

-Mike Schinkel
http://mikeschinkel.com

P.S. If it is not clear, I'll state explicitly that I'm new to actually using subversion and I'm using Windows+Tortoise SVN for my client.


From mikeschinkel at newclarity.net  Fri Jan 16 02:05:14 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 02:05:52 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <161617690901151554y2c854aa6x993dec996fb9a41c@mail.gmail.com>
Message-ID: <10380478.661232071514344.JavaMail.DELL-1405$@Dell-1405>

Otto:

Thanks, but I'm missing something. I don't follow your suggestion. Can you please explain differently?

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Otto" <otto@ottodestruct.com>
To: wp-hackers@lists.automattic.com
Sent: Thursday, January 15, 2009 6:54:03 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin Upgrade Failing when using Subversion

If you're going to do SVN, why not really do SVN? Even for the plugins.

svn co http://svn.wp-plugins.org/automatic-timezone/trunk/
blog/wp-content/plugins/automatic-timezone

I don't think a single svn up on the root would then update all the
plugins as well, but there's gotta be a way...

-Otto
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Fri Jan 16 02:07:59 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 02:08:18 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <fd3b80510901151658i49352bf3m9bf218e8f835d44f@mail.gmail.com>
Message-ID: <19601518.681232071680949.JavaMail.DELL-1405$@Dell-1405>

Interesting. Especially that you are a Rubista.

Unfortunately, Windows to which I am currently wedded for development doesn't have symlinks.  Wish it did. :-(

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Benedict Eastaugh" <ionfish@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Thursday, January 15, 2009 7:58:33 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin Upgrade Failing when using Subversion

This is basically the script I use.

http://gist.github.com/47744

I also keep a bunch of plugins in my home directory and symlink them
into the WP installs, which also reduces the maintenance.
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From gamito at gmail.com  Fri Jan 16 02:08:36 2009
From: gamito at gmail.com (=?UTF-8?B?TcOhcmlvIEdhbWl0bw==?=)
Date: Fri Jan 16 02:09:23 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <9650148.601232070983551.JavaMail.DELL-1405$@Dell-1405>
References: <9650148.601232070983551.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <496FEC24.9050805@gmail.com>

Mike Schinkel wrote:
>>> Empty your repository at svn.wp-plugins.org
> 
> I totally don't follow you. Are you assuming I'm using svn.wp-plugins.org?  I'm not.
What part of "Sorry if I'm missing something here." didn't you understand ?

My apologies for trying to help you.

-- M?rio Gamito
From wordpress at dd32.id.au  Fri Jan 16 02:17:16 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 16 02:17:26 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <9650148.601232070983551.JavaMail.DELL-1405$@Dell-1405>
References: <31054307.581232070733831.JavaMail.DELL-1405$@Dell-1405>
	<9650148.601232070983551.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <45055a190901151817l78e683cavb64fcc4966908a40@mail.gmail.com>

2009/1/16 Mike Schinkel <mikeschinkel@newclarity.net>:
> That said, the admin console really needs a "Pin the Plugin to this Version and do not ask about upgrading?"  It would also be good if upgrades could be presented as bug-fix-only upgrades vs. feature upgrades.  These are things I might tackle.

Its possible for plugins to offer that sort of information if they
want to.. just not via the core, It also requires a bit of fiddling in
the readme's and the plugin parser, as well as the API for that sort
of thing in core.. and its likely to be very little used.. All of my
plugins present the user a list of the contents of the changelog when
an upgrade is available, granted, it doesnt offer the user the ability
to ignore it (Simply because, whenever I ever get a support request,
upgrading to the latest version fixes their problem, even if it wasnt
a bug in the first place).

The headspace2 plugin also does it (Its where i got my inspiration
from), I've been meaning to write a blog posting on how to achieve
it..
From wp at xentek.net  Fri Jan 16 03:04:31 2009
From: wp at xentek.net (Eric Marden)
Date: Fri Jan 16 03:04:45 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <7832993.641232071396825.JavaMail.DELL-1405$@Dell-1405>
References: <7832993.641232071396825.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <227FFEBF-DC63-45C1-BB7B-9D2E3EDDB2F3@xentek.net>

>>>
>>> But I do have the following SVN properties set:...
>
> Where do you set these properties?  Client or Server?

You set them with your client and they are stored on the server.

More info in the SVN book: http://svnbook.red-bean.com/en/1.5/svn.advanced.props.html

-e
From mikeschinkel at newclarity.net  Fri Jan 16 04:22:15 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 04:22:40 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <496FEC24.9050805@gmail.com>
Message-ID: <4200393.701232079734481.JavaMail.DELL-1405$@Dell-1405>

>> My apologies for trying to help you.

No apologies needed for trying to help. Apologies are needed for being snotty when I ask for clarification simply because I didn't understand what you meant.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "M?rio Gamito" <gamito@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Thursday, January 15, 2009 9:08:36 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin Upgrade Failing when using Subversion

Mike Schinkel wrote:
>>> Empty your repository at svn.wp-plugins.org
> 
> I totally don't follow you. Are you assuming I'm using svn.wp-plugins.org?  I'm not.
What part of "Sorry if I'm missing something here." didn't you understand ?

My apologies for trying to help you.

-- M?rio Gamito
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From gaarai at gaarai.com  Fri Jan 16 04:45:28 2009
From: gaarai at gaarai.com (Gaarai)
Date: Fri Jan 16 04:46:06 2009
Subject: [wp-hackers] Set a unique directory for uploads
In-Reply-To: <496FD0E7.4000002@gmail.com>
References: <496FCA7A.5020300@gmail.com> <496FD0E7.4000002@gmail.com>
Message-ID: <497010E8.5040302@gaarai.com>

There isn't a direct way to remove these additional images. However, 
there is a filter that you can hook into in order to clear out the array 
that stores the possible sizes. That filter is intermediate_image_sizes.

This filter is used in the wp_generate_attachment_metadata() function 
inside wp-admin/includes/image.php. By default, this filter passes along 
an array, $sizes, with the following definition:

$sizes = array('thumbnail', 'medium', 'large');

After this array is filtered, it is gone through one item at a time in 
order to generate the resized images. You could simply hook into the 
intermediate_image_sizes filter and return an empty array:

add_filter( 'intermediate_image_sizes', 'remove_intermediate_image_sizes' );
function remove_intermediate_image_sizes( $sizes ) {
    return array();
}

This could simply be added to your functions.php file in the theme. I 
tested it this way, and it worked perfectly.

However, you should note that if you do this, every place WordPress uses 
the thumbnail, the complete image will be used instead. This means that 
if you load up the Media Library page, every image shown on that library 
page will be downloaded and shown. This may or may not be a problem for 
you, but you should be aware of it.

It should also be noted that this does not make the Thumbnail, Medium, 
and Large options disappear from the "Add an image" media uploader. It 
simply disables their radio buttons.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



M?rio Gamito wrote:
> M?rio Gamito wrote:
>   
>> Hi,
>>     
>
>   
>> How can I make my images and file being uploaded to
>> /home/user/public_html/attic only ?
>>     
> Ok, I've found the answer, but another thing: I upload an image and in
> the "attic" directory it creates another two scaled down versions of the
> image.
>
> I went to Settings/Media, but I see no option to WP not create these 2
> images.
>
> Is it possible in some way to do this ?
>
> Any help would be appreciated.
>
> Warm Regards,
>   
From mikeschinkel at newclarity.net  Fri Jan 16 04:49:07 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 04:49:25 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <33092286.741232080414573.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <22594539.761232081351992.JavaMail.DELL-1405$@Dell-1405>

Thanks. I'm getting a better handle on it now.

-Mike Schinkel
http://mikeschinkel.com/


----- Original Message -----
From: "Eric Marden" <wp@xentek.net>
To: wp-hackers@lists.automattic.com
Sent: Thursday, January 15, 2009 10:04:31 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin Upgrade Failing when using Subversion

>>>
>>> But I do have the following SVN properties set:...
>
> Where do you set these properties?  Client or Server?

You set them with your client and they are stored on the server.

More info in the SVN book: http://svnbook.red-bean.com/en/1.5/svn.advanced.props.html

-e
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Fri Jan 16 04:32:12 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 04:55:08 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <45055a190901151817l78e683cavb64fcc4966908a40@mail.gmail.com>
Message-ID: <27119741.721232080335485.JavaMail.DELL-1405$@Dell-1405>

"DD32" <wordpress@dd32.id.au> wrote:
> Its possible for plugins to offer that sort of information if 
> they want to.. just not via the core, It also requires a bit 
> of fiddling in the readme's and the plugin parser, as well as 
> the API for that sort of thing in core.. and its likely to be 
> very little used.. All of my plugins present the user a list 
> of the contents of the changelog when an upgrade is available, 

Thanks for the clarification.

> granted, it doesnt offer the user the ability to ignore it 
> (Simply because, whenever I ever get a support request,
> upgrading to the latest version fixes their problem, even 
> if it wasnt a bug in the first place).

Oh I agree with you for my own personal sites. But I'm working on a project for large company and I'm subcontracting to an Interactive Agency and they have asked to lock down the exact implementation and don't allow anyone to upgrade the site, especially 'accidentally', without studying the situation and taking thoughtful and explicit (vs. adhoc) action.

Normally I prefer to fast-and-loose style of development, but when working (indirectly) for a large enterprise things need to be slow, measured, and methodical. In that case a plugin should *only* even be upgraded when they are having a problem. To put into perspective I'm finding that many of the plugins I'd planned to use I'm not going to use because everything is so tightly specified it will be easier just to code most of the functionality than to try to get a plugin to work exactly they way they want. But some plugins are still in use.

Put it this way; if their site went down because of an unplanned plugin upgrade it would be exactly what the people who don't trust open-source would use to make sure that company never again used WordPress as long as they could.  And I don't want my WordPress project to be that negative catalyst for WordPress.

> The headspace2 plugin also does it (Its where i got my inspiration
from), I've been meaning to write a blog posting on how to achieve
it..

Cool.  I'll check it out.

-Mike Schinkel
http://mikeschinkel.com
From wordpress at dd32.id.au  Fri Jan 16 05:07:08 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 16 05:07:19 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <27119741.721232080335485.JavaMail.DELL-1405$@Dell-1405>
References: <45055a190901151817l78e683cavb64fcc4966908a40@mail.gmail.com>
	<27119741.721232080335485.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <45055a190901152107y5fd171a4q3a6f3fc3b11403c6@mail.gmail.com>

2009/1/16 Mike Schinkel <mikeschinkel@newclarity.net>:
> Put it this way; if their site went down because of an unplanned plugin upgrade it would be exactly what the people who don't trust open-source would use to make sure that company never again used WordPress as long as they could.  And I don't want my WordPress project to be that negative catalyst for WordPress.

If it was me, and my site went down due to someone disabling the
upgrade warnings and something exploiting wordpress or a plugin thats
installed.. then i'd be pissed at the developer..

I get in the range of >300 bots every day trying over 100 different
exploits against WordPress & its plugins on my personal site, Most of
them you can trace to either ancient bugs/exploits, or relitivly
recent items, last time i checked through them, I think i found
something targetting 2.5, and a .1 older version of a semi-popular
plugin.

If you're going to leave an install unattended, Definately write the
plugins yourself, its bad enough that you're planning on leaving
WordPress core as is, Whilst i believe that its generally pretty
secure, there are always things targetting older versions.. (And
hiding the version does nothing, they simply dont care)
From mikeschinkel at newclarity.net  Fri Jan 16 05:35:41 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 05:36:05 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <45055a190901152107y5fd171a4q3a6f3fc3b11403c6@mail.gmail.com>
Message-ID: <23886347.781232084143408.JavaMail.DELL-1405$@Dell-1405>

"DD32" <wordpress@dd32.id.au> wrote:
> If you're going to leave an install unattended, Definately write 
> the plugins yourself, its bad enough that you're planning on 
> leaving WordPress core as is, Whilst i believe that its generally 
> pretty secure, there are always things targetting older versions.. 
> (And hiding the version does nothing, they simply dont care)

I didn't say it would be left unattended. I said that the process for upgrading will not be adhoc and godforbid not accidental.

-Mike Schinkel
http://mikeschinkel.com/
From ozh at planetozh.com  Fri Jan 16 07:06:00 2009
From: ozh at planetozh.com (Ozh)
Date: Fri Jan 16 07:06:11 2009
Subject: [wp-hackers] "Warning: This plugin has not been tested with your
	current version of WordPress."
Message-ID: <ae81acd10901152306r7669fd5dl6a00d1941d68c4ba@mail.gmail.com>

When trying to install from WP a plugin which readme says "Requires
WordPress Version: 2.5 or higher", there's a warning that says
"Warning: This plugin has not been tested with your current version of
WordPress."

This is not what I expected. Am I missing something, or does this mean
we'll have to update every single readme.txt for all plugins every
time a new version of WP is out?

-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
From wordpress at dd32.id.au  Fri Jan 16 07:15:22 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 16 07:15:34 2009
Subject: [wp-hackers] "Warning: This plugin has not been tested with your 
	current version of WordPress."
In-Reply-To: <ae81acd10901152306r7669fd5dl6a00d1941d68c4ba@mail.gmail.com>
References: <ae81acd10901152306r7669fd5dl6a00d1941d68c4ba@mail.gmail.com>
Message-ID: <45055a190901152315v6fa16734q2a0ac3a0faaf5aa5@mail.gmail.com>

Which plugin?
Whats the "Tested up to" field set to?

I'm guessing that the plugin in question doesnt have the 'tested' field set?

2009/1/16 Ozh <ozh@planetozh.com>:
> When trying to install from WP a plugin which readme says "Requires
> WordPress Version: 2.5 or higher", there's a warning that says
> "Warning: This plugin has not been tested with your current version of
> WordPress."
>
> This is not what I expected. Am I missing something, or does this mean
> we'll have to update every single readme.txt for all plugins every
> time a new version of WP is out?
>
> --
> http://planetOzh.com ~ Blog and WordPress Stuff
> http://FrenchFragFactory.net ~ Daily Quake News
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jeremy.visser at gmail.com  Fri Jan 16 07:19:11 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Fri Jan 16 07:19:28 2009
Subject: [wp-hackers] "Warning: This plugin has not been tested with
	your current version of WordPress."
In-Reply-To: <ae81acd10901152306r7669fd5dl6a00d1941d68c4ba@mail.gmail.com>
References: <ae81acd10901152306r7669fd5dl6a00d1941d68c4ba@mail.gmail.com>
Message-ID: <1232090351.4081.4.camel@rillian.narnia.sunriseroad.net>

On Fri, 2009-01-16 at 08:06 +0100, Ozh wrote:
> When trying to install from WP a plugin which readme says "Requires
> WordPress Version: 2.5 or higher", there's a warning that says
> "Warning: This plugin has not been tested with your current version of
> WordPress."
> 
> This is not what I expected. Am I missing something, or does this mean
> we'll have to update every single readme.txt for all plugins every
> time a new version of WP is out?

I get that impression too, but I think it makes sense, because there is
always a risk that a plugin will break with a new WP version.

They don't _always_ break, but sometimes do. Until somebody checks that
it actually works, it is well worth warning the user that it may not
work.

I'm not sure if this is the current behaviour, but it only makes sense
to warn if a major version number has changed, e.g. 2.6 ? 2.7, but not
2.6.2 ? 2.6.3, because they are just bugfix releases.

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From harish.mlists at gmail.com  Fri Jan 16 07:47:56 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Fri Jan 16 07:48:11 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <7832993.641232071396825.JavaMail.DELL-1405$@Dell-1405>
References: <7832993.641232071396825.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <49703BAC.8050207@gmail.com>

Mike Schinkel wrote:
> 
>>> But I do have the following SVN properties set:...
> 
> Where do you set these properties?  Client or Server?

I do all my work directly at the server that hosts my journal. (Much to
the annoyance of my audience!)

I set these properties by connecting to my server via ssh, navigating to
the appropriate folders and using svn propset.

Look for svn:ignore on the following page for detailed information:
http://svnbook.red-bean.com/en/1.1/ch07s02.html

> We are using Unfuddle.com for hosted server Subversion and I don't even see any options; maybe my client has access to those options?

Now I am the one who is a little confused. Is this what you are doing?

- You fetch WordPress (from svn.automattic.com) via Tortoise SVN.
- Make changes locally.
- Push your changed repo to this unfuddle.com to host?

> So what files do you end up actually storing in your subversion?

See if this makes sense, as I am doing something fundamentally different:

- I host on a standard Debian machine on which I have ssh and thus svn
(what you call client) access.
- I regularly fetch WordPress via svn directly to this machine that
hosts my site. (So my _web server_ is the _svn client_.)
- SVN accounts for any local changes I've made to the code and attempts
to merge recent updates to WordPress without breaking them. To avoid any
confusion, I keep anything that's not part of the default WordPress
repository explicitly out of this revision control---which is what I was
advising you to do.

Harish
From johnbillion+wp at gmail.com  Fri Jan 16 07:47:12 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri Jan 16 07:49:35 2009
Subject: [wp-hackers] "Warning: This plugin has not been tested with your
	current version of WordPress."
In-Reply-To: <1232090351.4081.4.camel@rillian.narnia.sunriseroad.net>
References: <ae81acd10901152306r7669fd5dl6a00d1941d68c4ba@mail.gmail.com>
	<1232090351.4081.4.camel@rillian.narnia.sunriseroad.net>
Message-ID: <1fa535a70901152347y3990b931h6ae12256bfde7881@mail.gmail.com>

I agree with Jeremy here, only showing the message when the major
version number is greater would be a very elegant solution.

2009/1/16 Jeremy Visser <jeremy.visser@gmail.com>:
> On Fri, 2009-01-16 at 08:06 +0100, Ozh wrote:
>> When trying to install from WP a plugin which readme says "Requires
>> WordPress Version: 2.5 or higher", there's a warning that says
>> "Warning: This plugin has not been tested with your current version of
>> WordPress."
>>
>> This is not what I expected. Am I missing something, or does this mean
>> we'll have to update every single readme.txt for all plugins every
>> time a new version of WP is out?
>
> I get that impression too, but I think it makes sense, because there is
> always a risk that a plugin will break with a new WP version.
>
> They don't _always_ break, but sometimes do. Until somebody checks that
> it actually works, it is well worth warning the user that it may not
> work.
>
> I'm not sure if this is the current behaviour, but it only makes sense
> to warn if a major version number has changed, e.g. 2.6 ? 2.7, but not
> 2.6.2 ? 2.6.3, because they are just bugfix releases.
>
> --
> Jeremy Visser                                 http://jeremy.visser.name/
>
> No Internet Censorship for Australia             http://nocleanfeed.com/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at dd32.id.au  Fri Jan 16 07:24:33 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 16 07:58:30 2009
Subject: [wp-hackers] "Warning: This plugin has not been tested with your 
	current version of WordPress."
In-Reply-To: <1232090351.4081.4.camel@rillian.narnia.sunriseroad.net>
References: <ae81acd10901152306r7669fd5dl6a00d1941d68c4ba@mail.gmail.com>
	<1232090351.4081.4.camel@rillian.narnia.sunriseroad.net>
Message-ID: <45055a190901152324n6b34d79bt184bc9b23c9d5ec5@mail.gmail.com>

2009/1/16 Jeremy Visser <jeremy.visser@gmail.com>:
> I'm not sure if this is the current behaviour, but it only makes sense
> to warn if a major version number has changed, e.g. 2.6 ? 2.7, but not
> 2.6.2 ? 2.6.3, because they are just bugfix releases.

Yeah, I just thought of that myself, It checks against the full
version, But it should probably ignore minor version numbers.. Its
rare that something will break with a minor release..
From ozh at planetozh.com  Fri Jan 16 08:08:44 2009
From: ozh at planetozh.com (Ozh)
Date: Fri Jan 16 08:09:25 2009
Subject: [wp-hackers] "Warning: This plugin has not been tested with your
	current version of WordPress."
In-Reply-To: <1232090351.4081.4.camel@rillian.narnia.sunriseroad.net>
Message-ID: <OF549B6C00.43FB705A-ONC1257540.002B8704-C1257540.002CBF37@notes.edfgdf.fr>

wordpress@dd32.id.au:
>Which plugin?
>Whats the "Tested up to" field set to?
>I'm guessing that the plugin in question doesnt have the 'tested' field 
set?

The plugin header is:

=== Ozh' Who Sees Ads ===
Requires at least: 2.5
Stable tag: trunk

So, no, no tested field. "Requires at least 2.5"  means just that. It 
means "works from 2.5 to 6.0."

"Warning: This plugin has not been tested with your current version of 
WordPress." is totally random and definitely not true. This is a 
misinterpretation.

"Warning: This plugin MIGHT not be compatible with your version, ALTHOUGH 
I don't have any real clue to assert this" would be a more accurate 
statement.

A *LOT* of plugin are totally version independant. They're just basic 
filters and actions.

I think I'm going to put a dummy "tested up to: 9.99" and never bother 
again with that.

jeremy.visser@gmail.com:
>I get that impression too, but I think it makes sense, because there is
>always a risk that a plugin will break with a new WP version.

To me it would make sense if the readme.txt made sense.

Ozh




From wordpress at dd32.id.au  Fri Jan 16 08:29:36 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 16 08:29:48 2009
Subject: [wp-hackers] "Warning: This plugin has not been tested with your 
	current version of WordPress."
In-Reply-To: <OF549B6C00.43FB705A-ONC1257540.002B8704-C1257540.002CBF37@notes.edfgdf.fr>
References: <1232090351.4081.4.camel@rillian.narnia.sunriseroad.net>
	<OF549B6C00.43FB705A-ONC1257540.002B8704-C1257540.002CBF37@notes.edfgdf.fr>
Message-ID: <45055a190901160029k11251458h45861b9451699bf6@mail.gmail.com>

It was just an oversight not to mention the warning if the tested
field wasnt set..

The warning doesnt mention that its not compatble (It does if it
requires WP 2.8 and you're running 2.6 tho), only that it hasnt been
tested.. In the event that the tested field isnt set, then you're
right, It shouldnt show the message.. If you open a trac ticket, i'll
do it (as well as only checking major version numbers, ignoring minor
updates) else i'll open one later on.

2009/1/16 Ozh <ozh@planetozh.com>:
> wordpress@dd32.id.au:
>>Which plugin?
>>Whats the "Tested up to" field set to?
>>I'm guessing that the plugin in question doesnt have the 'tested' field
> set?
>
> The plugin header is:
>
> === Ozh' Who Sees Ads ===
> Requires at least: 2.5
> Stable tag: trunk
>
> So, no, no tested field. "Requires at least 2.5"  means just that. It
> means "works from 2.5 to 6.0."
>
> "Warning: This plugin has not been tested with your current version of
> WordPress." is totally random and definitely not true. This is a
> misinterpretation.
>
> "Warning: This plugin MIGHT not be compatible with your version, ALTHOUGH
> I don't have any real clue to assert this" would be a more accurate
> statement.
>
> A *LOT* of plugin are totally version independant. They're just basic
> filters and actions.
>
> I think I'm going to put a dummy "tested up to: 9.99" and never bother
> again with that.
>
> jeremy.visser@gmail.com:
>>I get that impression too, but I think it makes sense, because there is
>>always a risk that a plugin will break with a new WP version.
>
> To me it would make sense if the readme.txt made sense.
>
> Ozh
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ozh at planetozh.com  Fri Jan 16 08:48:07 2009
From: ozh at planetozh.com (Ozh)
Date: Fri Jan 16 08:48:32 2009
Subject: [wp-hackers] "Warning: This plugin has not been tested with your
	current version of WordPress."
In-Reply-To: <45055a190901160029k11251458h45861b9451699bf6@mail.gmail.com>
Message-ID: <OFB0FE8BFD.9782F404-ONC1257540.00303E72-C1257540.00305A54@notes.edfgdf.fr>

>If you open a trac ticket, i'll
>do it (as well as only checking major version numbers, ignoring minor
>updates) else i'll open one later on.

http://trac.wordpress.org/ticket/8868

Thanks in advance

Ozh

-- 

From ryanmccue at cubegames.net  Fri Jan 16 09:10:35 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Fri Jan 16 09:11:26 2009
Subject: [wp-hackers] "Warning: This plugin has not been tested with	your
	current version of WordPress."
In-Reply-To: <1232090351.4081.4.camel@rillian.narnia.sunriseroad.net>
References: <ae81acd10901152306r7669fd5dl6a00d1941d68c4ba@mail.gmail.com>
	<1232090351.4081.4.camel@rillian.narnia.sunriseroad.net>
Message-ID: <49704F0B.3010906@cubegames.net>

Jeremy Visser wrote:
> I'm not sure if this is the current behaviour, but it only makes sense
> to warn if a major version number has changed, e.g. 2.6 ? 2.7, but not
> 2.6.2 ? 2.6.3, because they are just bugfix releases.
>   
Ooh, you made the font change to Arial Unicode. Stupid Thunderbird.

-- 
Ryan McCue
<http://cubegames.net/>

From cclarkson at htcomp.net  Fri Jan 16 10:52:26 2009
From: cclarkson at htcomp.net (Charles K. Clarkson)
Date: Fri Jan 16 10:52:54 2009
Subject: [wp-hackers] Is HEADER_TEXTCOLOR a Constant in the Custom Header
	API?
Message-ID: <497066EA.8070404@htcomp.net>

Hello,

While adding function reference pages to the Codex and I came across the 
get_header_textcolor() function:

/**
  * Retrieve text color for custom header.
  *
  * @since 2.1.0
  * @uses HEADER_TEXTCOLOR
  *
  * @return string
  */
function get_header_textcolor() {
     return get_theme_mod('header_textcolor', HEADER_TEXTCOLOR);
}

Searching the internet I found that HEADER_TEXTCOLOR may be a constant 
defined while using the Custom Header API. Is that correct?


Thanks,

Charles Clarkson
-- 
Mobile Home Investor
Free Market Advocate
Programmer

Stephenville, TX
http://www.clarksonenergyhomes.com/wordpress/about/
http://twitter.com/CharlesClarkson
+1 (254) 968-8328
From bryanspahr at gmail.com  Fri Jan 16 13:55:49 2009
From: bryanspahr at gmail.com (Bryan Spahr)
Date: Fri Jan 16 13:56:00 2009
Subject: [wp-hackers] Re: wp-hackers Digest, Vol 48, Issue 44
In-Reply-To: <20090116053607.1815F7085@comox.textdrive.com>
References: <20090116053607.1815F7085@comox.textdrive.com>
Message-ID: <5d49cb490901160555i4f368430kb186c1c883009563@mail.gmail.com>

Mike Schinkel wrote:

> ...they have asked to lock down the exact implementation and don't allow
> anyone to upgrade the site, especially 'accidentally', without studying the
> situation and taking thoughtful and explicit (vs. adhoc) action.
>

There are a couple of plugins that hide the upgrade notifications, which
should at least discourage ad hoc upgrades:

http://wordpress.org/extend/plugins/disable-wordpress-plugin-updates/
http://wordpress.org/extend/plugins/disable-wordpress-core-update/

-Bryan
From dougal at gunters.org  Fri Jan 16 14:25:56 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Fri Jan 16 14:58:38 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <161617690901151550g709e8472ja4f519facf7032ff@mail.gmail.com>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>	<9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>	<349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>	<161617690901141257o464658ey238c5196e21b94aa@mail.gmail.com>	<496E6590.6000202@gunters.org>	<161617690901150755sdce636w69aea3ffcd441d94@mail.gmail.com>	<496F8B7F.4000304@gunters.org>
	<161617690901151550g709e8472ja4f519facf7032ff@mail.gmail.com>
Message-ID: <497098F4.9020602@gunters.org>

Otto wrote:
>> You can do a search, then rearrange or hide various news sources. Your view
>> state is stored in the hash portion of the URL, which makes it bookmarkable,
>> without cookies. So you can send the bookmark to other users, and they get
>> the same search view that you set up. For example:
>>
>>  http://addictomatic.com/topic/wordpress#kmun.dwqo.tblh
>>     
>
> How is that a substantial improvement over, say,
> http://addictomatic.com/topic/wordpress?status=kmun.dwqo.tblh ?
>
> I just don't see how getting hash info from the URL and sending it via
> JS is any better than a GET URL.
>   

For one thing, it looks cleaner. For another, you don't have to be 
concerned about whether or not search engines are indexing querystrings. 
So you get cleaner analytics, and hopefully better SEO.

And all the cool kids are doing it.

-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
From cclarkson at htcomp.net  Fri Jan 16 15:11:02 2009
From: cclarkson at htcomp.net (Charles K. Clarkson)
Date: Fri Jan 16 15:11:29 2009
Subject: [wp-hackers] How do I add inline doc changes?
Message-ID: <4970A386.3090505@htcomp.net>

Hello,

    I am updating and creating Function Reference Pages for the Codex. I 
am using/writing a parser to aid in future updates. I need to coordinate 
some of the inline documentation with the Codex. Mostly the Description 
and @usage docs.
	
     The general idea is to update the inline docs and then generate the 
updated portions of the Codex Function Reference pages as new WordPress 
versions come out.
	
     Hopefully, this will avoid a lot of duplication in writing the 
Codex and allow a single source for some information in those pages. One 
of the major observations I have read is that the Codex people do not 
effectively communicate with the inline docs people. I guess I am a 
crossing that bridge.

     Here's what I did so far:
	
     I just downloaded an Subversion client, checked out the WordPress 
repository and read through the WordPress Trac instructions. I am still 
confused. Do I commit my changes through Subversion and then create a 
Trac Ticket or do I create a Trac ticket and wait for something to happen?

     I'd appreciate some help. The SVN is a new experience for me. :)

Thanks,

Charles Clarkson
-- 
Mobile Home Investor
Free Market Advocate
Programmer

Stephenville, TX
http://www.clarksonenergyhomes.com/wordpress/about/
http://twitter.com/CharlesClarkson
+1 (254) 968-8328
From wp-hackers at striderweb.com  Fri Jan 16 15:21:10 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jan 16 15:21:40 2009
Subject: [wp-hackers] How do I add inline doc changes?
In-Reply-To: <4970A386.3090505@htcomp.net>
References: <4970A386.3090505@htcomp.net>
Message-ID: <BFCB24F3-914D-46DE-99B0-80AE7380AB1F@striderweb.com>


On Jan 16, 2009, at 9:11 AM, Charles K. Clarkson wrote:

>    I just downloaded an Subversion client, checked out the WordPress  
> repository and read through the WordPress Trac instructions. I am  
> still confused. Do I commit my changes through Subversion and then  
> create a Trac Ticket or do I create a Trac ticket and wait for  
> something to happen?

You can't commit anything via SVN unless you're a WordPress High Mucky- 
Muck.  What you can do is make a patch file (diff), and submit it by  
creating a ticket on Trac.

Stephen

-- 
Stephen Rider
<http://striderweb.com/>



From cclarkson at htcomp.net  Fri Jan 16 15:43:45 2009
From: cclarkson at htcomp.net (Charles K. Clarkson)
Date: Fri Jan 16 15:44:11 2009
Subject: [wp-hackers] How do I add inline doc changes?
In-Reply-To: <BFCB24F3-914D-46DE-99B0-80AE7380AB1F@striderweb.com>
References: <4970A386.3090505@htcomp.net>
	<BFCB24F3-914D-46DE-99B0-80AE7380AB1F@striderweb.com>
Message-ID: <4970AB31.1000802@htcomp.net>

Stephen Rider wrote:

> You can't commit anything via SVN unless you're a WordPress High 
> Mucky-Muck.  What you can do is make a patch file (diff), and submit it 
> by creating a ticket on Trac.

Thanks Stephen, I'll give it a try.


Charles Clarkson
-- 
Mobile Home Investor
Free Market Advocate
Programmer

Stephenville, TX
http://www.clarksonenergyhomes.com/wordpress/about/
http://twitter.com/CharlesClarkson
+1 (254) 968-8328
From mikeschinkel at newclarity.net  Fri Jan 16 15:57:58 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 15:58:15 2009
Subject: [wp-hackers] Re: wp-hackers Digest, Vol 48, Issue 44
In-Reply-To: <5d49cb490901160555i4f368430kb186c1c883009563@mail.gmail.com>
Message-ID: <2944836.831232121474927.JavaMail.DELL-1405$@Dell-1405>

Bryan:

THANK You.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Bryan Spahr" <bryanspahr@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Friday, January 16, 2009 8:55:49 AM GMT -05:00 US/Canada Eastern
Subject: [wp-hackers] Re: wp-hackers Digest, Vol 48, Issue 44

Mike Schinkel wrote:

> ...they have asked to lock down the exact implementation and don't allow
> anyone to upgrade the site, especially 'accidentally', without studying the
> situation and taking thoughtful and explicit (vs. adhoc) action.
>

There are a couple of plugins that hide the upgrade notifications, which
should at least discourage ad hoc upgrades:

http://wordpress.org/extend/plugins/disable-wordpress-plugin-updates/
http://wordpress.org/extend/plugins/disable-wordpress-core-update/

-Bryan
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From otto at ottodestruct.com  Fri Jan 16 14:47:32 2009
From: otto at ottodestruct.com (Otto)
Date: Fri Jan 16 16:01:42 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <10380478.661232071514344.JavaMail.DELL-1405$@Dell-1405>
References: <161617690901151554y2c854aa6x993dec996fb9a41c@mail.gmail.com>
	<10380478.661232071514344.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <161617690901160647k1ab3f66fl950ff39b21ab371@mail.gmail.com>

On Thu, Jan 15, 2009 at 8:05 PM, Mike Schinkel
<mikeschinkel@newclarity.net> wrote:
> Otto:
>
> Thanks, but I'm missing something. I don't follow your suggestion. Can you please explain differently?

Basically, I'm asking why do you want to use SVN to keep the core up
to date, but the plugin upgrader to keep the plugins up-to-date?
You're mixing two different ways of doing the same thing here. Choose
one, then use that one for both cases. All the plugins in Extend are
available via SVN too.

-Otto
From gamito at gmail.com  Fri Jan 16 16:05:38 2009
From: gamito at gmail.com (=?ISO-8859-1?Q?M=E1rio_Gamito?=)
Date: Fri Jan 16 16:06:26 2009
Subject: [wp-hackers] Set a unique directory for uploads
In-Reply-To: <497010E8.5040302@gaarai.com>
References: <496FCA7A.5020300@gmail.com> <496FD0E7.4000002@gmail.com>
	<497010E8.5040302@gaarai.com>
Message-ID: <4970B052.1010009@gmail.com>

Hi Gaarai,

Thank you for your answer.

Gaarai wrote:
> add_filter( 'intermediate_image_sizes',
> 'remove_intermediate_image_sizes' );
> function remove_intermediate_image_sizes( $sizes ) {
>    return array();
> }
> 
> This could simply be added to your functions.php file in the theme. I
> tested it this way, and it worked perfectly.
Yes, it works. Although I get the "headres already sent" warning after
the crunching.

But the worst part is that it breaks the tools page. I get a blank page.

Any ideias ?

Warm Regards,
-- 
:wq! M?rio Gamito
Key Fingerprint: 0x04DA9BC9
From mikeschinkel at newclarity.net  Fri Jan 16 16:04:37 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 16:07:37 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <49703BAC.8050207@gmail.com>
Message-ID: <14826093.851232121879074.JavaMail.DELL-1405$@Dell-1405>

"Harish Narayanan" <harish.mlists@gmail.com> wrote:
> Now I am the one who is a little confused. Is this 
> what you are doing?
> - You fetch WordPress (from svn.automattic.com) via 
>   Tortoise SVN.
> - Make changes locally.
> - Push your changed repo to this unfuddle.com to 
>   host?

Yes, close enough.

> I set these properties by connecting to my server 
> via ssh, navigating to the appropriate folders and 
> using svn propset. Look for svn:ignore on the 
> following page for detailed information:
> http://svnbook.red-bean.com/en/1.1/ch07s02.html

Thanks, I'll check it out, but probably after this project though; don't have time to become an SVN expert before launch, unfortunately. :-(

> See if this makes sense, as I am doing something 
> fundamentally different:

Yes, it does make sense. What's different is I'm developing locally for a (near-)future deployment.  I think the difference is we are not making any changes on a live server until they first go from dev to staging/testing, then to live.  SVN used on dev but not on stage/test or live.

> To avoid any confusion, I keep anything that's 
> not part of the default WordPress repository 
> explicitly out of this revision control---
> which is what I was advising you to do.

Given our use case, which is partially to archive and partially to be able to recreate a fully working implementation, that doesn't really work for us, unfortunately. Wish it did.  

Thanks for the help.

-Mike Schinkel
http://mikeschinkel.com/
From mikeschinkel at newclarity.net  Fri Jan 16 16:12:33 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 16:14:59 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <161617690901160647k1ab3f66fl950ff39b21ab371@mail.gmail.com>
Message-ID: <22234214.871232122352266.JavaMail.DELL-1405$@Dell-1405>

> Basically, I'm asking why do you want to use SVN to keep the core up
to date, but the plugin upgrader to keep the plugins up-to-date?
You're mixing two different ways of doing the same thing here. Choose
one, then use that one for both cases. All the plugins in Extend are
available via SVN too.

Thanks for clarifying.

Read my most recent earlier email on that subject, but in a nutshell our use-case is different. I deliver the code to my client (the interactive agency) via SVN; it is their SVN server.  I use SVN to archive software that can be completely rebuilt from scratch by them, including SQL scripts to initialize plugins to the proper state, so they need zero knowledge of where to find WordPress things and have no dependency on trying to find those things when they need to rebuild a system for testing and then for deployment.  

Tell me if you think otherwise but I think my use-cases make more sense when working on a large team with lots of players many of who don't know anything more about WordPress than it's name, and yours make more sense when working on a small team of WordPress gurus?

-Mike Schinkel
http://mikeschinkel.com/
From gaarai at gaarai.com  Fri Jan 16 16:16:12 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Fri Jan 16 16:16:27 2009
Subject: [wp-hackers] Set a unique directory for uploads
In-Reply-To: <4970B052.1010009@gmail.com>
References: <496FCA7A.5020300@gmail.com>
	<496FD0E7.4000002@gmail.com>	<497010E8.5040302@gaarai.com>
	<4970B052.1010009@gmail.com>
Message-ID: <4970B2CC.80406@gaarai.com>

I guess it depends on where you put the code and how your site is set 
up. I did this on a stock install of 2.7 with no plugins and put the 
code at the end of the functions.php file of the default theme.

No warnings or errors were generated by this change and all the pages 
functioned properly. Well, all the pages I tested worked correctly. I 
checked again, and my Tools page worked just fine.

It's possible that a plugin or theme feature is causing this failure, so 
I wouldn't know exactly what the problem is nor how to fix it unless I 
were to get more details about what you are running on the site or 
access to the site itself.

You might try disabling all your plugins first and seeing if the problem 
goes away. If the problem goes away, then activate plugins one at a time 
until the problem comes back. That will tell you if a plugin is causing 
the problem and specifically which one it is.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



M?rio Gamito wrote:
> Hi Gaarai,
>
> Thank you for your answer.
>
> Gaarai wrote:
>   
>> add_filter( 'intermediate_image_sizes',
>> 'remove_intermediate_image_sizes' );
>> function remove_intermediate_image_sizes( $sizes ) {
>>    return array();
>> }
>>
>> This could simply be added to your functions.php file in the theme. I
>> tested it this way, and it worked perfectly.
>>     
> Yes, it works. Although I get the "headres already sent" warning after
> the crunching.
>
> But the worst part is that it breaks the tools page. I get a blank page.
>
> Any ideias ?
>
> Warm Regards,
>   
From harish.mlists at gmail.com  Fri Jan 16 16:26:36 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Fri Jan 16 16:26:59 2009
Subject: [wp-hackers] Plugin Upgrade Failing when using Subversion
In-Reply-To: <14826093.851232121879074.JavaMail.DELL-1405$@Dell-1405>
References: <14826093.851232121879074.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <4970B53C.3010305@gmail.com>

Mike Schinkel wrote:
>> I set these properties by connecting to my server 
>> via ssh, navigating to the appropriate folders and 
>> using svn propset. Look for svn:ignore on the 
>> following page for detailed information:
>> http://svnbook.red-bean.com/en/1.1/ch07s02.html
> 
> Thanks, I'll check it out, but probably after this project though; don't have time to become an SVN expert before launch, unfortunately. :-(

All right.

>> See if this makes sense, as I am doing something 
>> fundamentally different:
> 
> Yes, it does make sense. What's different is I'm developing locally for a (near-)future deployment.  I think the difference is we are not making any changes on a live server until they first go from dev to staging/testing, then to live.  SVN used on dev but not on stage/test or live.

I understand, but the persnickety step is really the same. Since my
journal is not mission critical (hah!), what you call staging/testing is
my live implementation.

>> To avoid any confusion, I keep anything that's 
>> not part of the default WordPress repository 
>> explicitly out of this revision control---
>> which is what I was advising you to do.
> 
> Given our use case, which is partially to archive and partially to be able to recreate a fully working implementation, that doesn't really work for us, unfortunately. Wish it did.

I only said keep things external to WordPress out of the original
repository. You can easily have a separate repository for your plug-in
additions/changes or your theme development. But that's a story for
another day. I wish you luck on finding something that works in the
short term for your current project.

> Thanks for the help.

Glad to help.

Harish
From jfontainhas at gmail.com  Fri Jan 16 16:35:48 2009
From: jfontainhas at gmail.com (=?ISO-8859-1?Q?Jos=E9_Fontainhas?=)
Date: Fri Jan 16 16:36:06 2009
Subject: [wp-hackers] Set a unique directory for uploads
In-Reply-To: <4970B2CC.80406@gaarai.com>
References: <496FCA7A.5020300@gmail.com>	<496FD0E7.4000002@gmail.com>	<497010E8.5040302@gaarai.com>	<4970B052.1010009@gmail.com>
	<4970B2CC.80406@gaarai.com>
Message-ID: <4970B764.4010908@gmail.com>


Tried it just now, and works like a charm (and comes in quite handy, 
too. Thanks Gaarai). Which php file is complaining that the headers have 
already been sent, exactly?

-Z?

> M?rio Gamito wrote:
>> Hi Gaarai,
>>
>> Thank you for your answer.
>>
>> Gaarai wrote:
>>  
>>> add_filter( 'intermediate_image_sizes',
>>> 'remove_intermediate_image_sizes' );
>>> function remove_intermediate_image_sizes( $sizes ) {
>>>    return array();
>>> }
>>>
>>> This could simply be added to your functions.php file in the theme. I
>>> tested it this way, and it worked perfectly.
>>>     
>> Yes, it works. Although I get the "headres already sent" warning after
>> the crunching.
>>
>> But the worst part is that it breaks the tools page. I get a blank page.
>>
>> Any ideias ?
>>
>> Warm Regards,
>>   
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Fri Jan 16 17:56:38 2009
From: scribu at gmail.com (scribu)
Date: Fri Jan 16 17:56:48 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <497098F4.9020602@gunters.org>
References: <5309cacd0901112339gdb01d26h80e80eb3d3c7f366@mail.gmail.com>
	<349fe48b0901120447q3f71bfa9n87df691b855ec31c@mail.gmail.com>
	<9dd057850901120454m64710e2dpbfe1496583ee01fa@mail.gmail.com>
	<349fe48b0901120502l7dba670ftafb278cbae71702f@mail.gmail.com>
	<161617690901141257o464658ey238c5196e21b94aa@mail.gmail.com>
	<496E6590.6000202@gunters.org>
	<161617690901150755sdce636w69aea3ffcd441d94@mail.gmail.com>
	<496F8B7F.4000304@gunters.org>
	<161617690901151550g709e8472ja4f519facf7032ff@mail.gmail.com>
	<497098F4.9020602@gunters.org>
Message-ID: <349fe48b0901160956n6a698b59xa169b2045fa2c3bd@mail.gmail.com>

On Fri, Jan 16, 2009 at 4:25 PM, Dougal Campbell <dougal@gunters.org> wrote:

> Otto wrote:
>
>> You can do a search, then rearrange or hide various news sources. Your
>>> view
>>> state is stored in the hash portion of the URL, which makes it
>>> bookmarkable,
>>> without cookies. So you can send the bookmark to other users, and they
>>> get
>>> the same search view that you set up. For example:
>>>
>>>  http://addictomatic.com/topic/wordpress#kmun.dwqo.tblh
>>>
>>>
>>
>> How is that a substantial improvement over, say,
>> http://addictomatic.com/topic/wordpress?status=kmun.dwqo.tblh ?
>>
>> I just don't see how getting hash info from the URL and sending it via
>> JS is any better than a GET URL.
>>
>>
>
> For one thing, it looks cleaner. For another, you don't have to be
> concerned about whether or not search engines are indexing querystrings. So
> you get cleaner analytics, and hopefully better SEO.
>
> And all the cool kids are doing it.


Not to mention that you might avoid several full page reloads.

-- 
http://scribu.net
From scribu at gmail.com  Fri Jan 16 18:17:44 2009
From: scribu at gmail.com (scribu)
Date: Fri Jan 16 18:17:57 2009
Subject: [wp-hackers] Comments popup
Message-ID: <349fe48b0901161017h14766890xbaf97168d1e9ead6@mail.gmail.com>

Is there still any valid reason for disabling
comment_popup_link()<http://trac.wordpress.org/browser/tags/2.7/wp-includes/comment-template.php#L882>on
single posts?

I commented out the two lines (905, 906) and it works just fine on single
posts.

-- 
http://scribu.net
From mikeschinkel at newclarity.net  Fri Jan 16 18:43:25 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 16 18:44:56 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <349fe48b0901160956n6a698b59xa169b2045fa2c3bd@mail.gmail.com>
Message-ID: <9005852.981232131408937.JavaMail.DELL-1405$@Dell-1405>

Hi All:

Hate to get mired into this debate, but finally I can't help myself but make the following points (and I've spent a lot of time researching URL design, see: http://blog.welldesignedurls.org.)

URL fragments and URL parameters create different architectures and really should be used for different use-cases.  

When using URL Fragments you are essentially creating a mini-app within one URL where the fragment is ideally being used to capture and restore state when a user bookmarks the URL. URL fragments are handled completely by the client although some (all?) search engines will index fragments with their URLs. 

URL Parameters are used when you want the server to generate a completely different response representation upon a request. BTW, URLs with parameters (i.e. http://example.com/?p=3) and URLs with parameter data embedded (i.e. http://example.com/about/) are equivalent for the purpose of this discussion.

For example the project that I am working on today will use both parameters and fragments for a media gallery with video and photo tabs.  URLs will look like this:

http://example.com/gallery/videos
http://example.com/gallery/photos

The Video Gallery will have "Channels" and "Videos" where a Channel contains one of more videos. The Photo Gallery will have "Albums" and "Photo Sets" where an Album contains one of more Photo Sets which contains one of more Photos. We want the screen to refresh *between* the video and photo section since we are using different players and all the data on the screen chances but we want full interactivity and quick response *within* the video and the photo galleries *and* we want to be able to bookmark the current state. These are some example URLs w/fragments we'll use:

http://example.com/gallery/videos#vc3v52
http://example.com/gallery/photos#pa2ps7p86

In those fragments vc=Video Channel, v=Video, pa=Photo Album, ps=Photo Set, and p=Photo with the numbers being their respective IDs from the NextGen Gallery (I'm planning to enhance NextGen to support video.)

As the user clicks around in the video and/or photo gallery we'll use Javascript to update the URL to indicate the current "state" of the page/mini-app. When a user returns to a bookmarked URL with those fragments we'll use Javascript to restore the page state to the Channel/Video and/or the Album/PhotoSet/Photo that was being displayed when the URL was bookmarked.

That said, you can potentially use page refreshes (URLs w/parameters) for everything or use in-page navigation (URLs w/fragments) for everything but each creates a different architecture and thus should be used in the use cases that best fit the architecture. For example two completely different pages shouldn't use URL fragments to differentiate but a page with a single cohesive purpose that requires lots of interactivity (like, say, a file manager for server files) should use URL fragments and it should regenerate the relevant state the page was in when bookmarked from the URL fragment.  BTW, this is one thing that most Flash apps do NOT do well, unfortunately.

So in summary, URLs w/parameters and URLs w/fragments are both valid architectures but each should be used with their respective appropriate use-cases.

HTH.

-Mike Schinkel
http://mikeschinkel.com/

P.S. The HTTP spec says that it is up to the client to interpret the URL fragment and that mostly it should do so based on content type. For example, think of how fragments work with PDF files. In the case of HTML the browser does have default behavior for fragment, i.e. repositioning the viewport, but for HTML+AJAX/AHAH-based apps repositioning only is too limited. In essence, when we use fragments we should design them as if we were designing our own new custom content type that is based on HTML+interactivity.
From scribu at gmail.com  Fri Jan 16 18:51:50 2009
From: scribu at gmail.com (scribu)
Date: Fri Jan 16 18:55:13 2009
Subject: [wp-hackers] Ignore Portions of URI
In-Reply-To: <9005852.981232131408937.JavaMail.DELL-1405$@Dell-1405>
References: <349fe48b0901160956n6a698b59xa169b2045fa2c3bd@mail.gmail.com>
	<9005852.981232131408937.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <349fe48b0901161051g6e101057ub6e9038637fa6d32@mail.gmail.com>

I couldn't have said it better. :)

-- 
http://scribu.net
From gamito at gmail.com  Fri Jan 16 22:14:50 2009
From: gamito at gmail.com (=?ISO-8859-1?Q?M=E1rio_Gamito?=)
Date: Fri Jan 16 22:15:10 2009
Subject: [wp-hackers] Set a unique directory for uploads
In-Reply-To: <4970B764.4010908@gmail.com>
References: <496FCA7A.5020300@gmail.com>	<496FD0E7.4000002@gmail.com>	<497010E8.5040302@gaarai.com>	<4970B052.1010009@gmail.com>	<4970B2CC.80406@gaarai.com>
	<4970B764.4010908@gmail.com>
Message-ID: <497106DA.50500@gmail.com>

Hi Jos?/Ol? Jos?,

Jos? Fontainhas wrote:
> 
> Tried it just now, and works like a charm (and comes in quite handy,
> too. Thanks Gaarai). Which php file is complaining that the headers have
> already been sent, exactly?
I've already reached for a solution without touchng the code. I went to
Settings -> Media in the dashboard, filled all the boxes with 0 and
unchecked the checkbox. Works like a charm :)
Thank you all for your kind answeers.

--

J? cheguei  a uma solu??o sem ter que tocar no c?digo, Fui a Media ->
Settings no Dashboard, inseri 0 em todas as caixas e desmarquei a
checkbox. Ficou imediatamente a fungar :)
Obrigado a todos pela simpatia das vossas respostas.

Warm Regars/Cumprimentos,
-- 
M?rio Gamito
From gamito at gmail.com  Fri Jan 16 22:18:11 2009
From: gamito at gmail.com (=?ISO-8859-1?Q?M=E1rio_Gamito?=)
Date: Fri Jan 16 22:18:27 2009
Subject: [wp-hackers] A very simple question about a 404 page for WP
Message-ID: <497107A3.7070505@gmail.com>

Hi,

What is the process for building a 404 (Page not found) file (or
something else in WP's guts) that integrates in my blog template ? In
another words, not a 404.html file that has nothing to do with the
blog's look.

I'm using 2.7

Any help would be appreciated.

Warm regards,
-- 
M?rio Gamito
From gaarai at gaarai.com  Fri Jan 16 22:19:55 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Fri Jan 16 22:20:10 2009
Subject: [wp-hackers] A very simple question about a 404 page for WP
In-Reply-To: <497107A3.7070505@gmail.com>
References: <497107A3.7070505@gmail.com>
Message-ID: <4971080B.7090909@gaarai.com>

http://codex.wordpress.org/Creating_an_Error_404_Page

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



M?rio Gamito wrote:
> Hi,
>
> What is the process for building a 404 (Page not found) file (or
> something else in WP's guts) that integrates in my blog template ? In
> another words, not a 404.html file that has nothing to do with the
> blog's look.
>
> I'm using 2.7
>
> Any help would be appreciated.
>
> Warm regards,
>   
From gamito at gmail.com  Fri Jan 16 22:51:54 2009
From: gamito at gmail.com (=?ISO-8859-1?Q?M=E1rio_Gamito?=)
Date: Fri Jan 16 22:52:11 2009
Subject: [wp-hackers] A very simple question about a 404 page for WP
In-Reply-To: <4971080B.7090909@gaarai.com>
References: <497107A3.7070505@gmail.com> <4971080B.7090909@gaarai.com>
Message-ID: <49710F8A.2050805@gmail.com>

Hoo Chris,

Chris Jean wrote:
> http://codex.wordpress.org/Creating_an_Error_404_Page
Thank you for the link.

Kind Regards,
M?rio Gamito
From donny_loverboy at live.nl  Sat Jan 17 08:09:43 2009
From: donny_loverboy at live.nl (donny schuurman)
Date: Sat Jan 17 08:09:59 2009
Subject: [wp-hackers] RE: wp-hackers Digest, Vol 48, Issue 48
In-Reply-To: <20090116184500.82E5F6BCD@comox.textdrive.com>
References: <20090116184500.82E5F6BCD@comox.textdrive.com>
Message-ID: <COL102-W23CE82FD299EE427C832AEFBD50@phx.gbl>


fuck off

> From: wp-hackers-request@lists.automattic.com
> Subject: wp-hackers Digest, Vol 48, Issue 48
> To: wp-hackers@lists.automattic.com
> Date: Fri, 16 Jan 2009 18:45:00 +0000
> 
> Send wp-hackers mailing list submissions to
> 	wp-hackers@lists.automattic.com
> 
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
> 	wp-hackers-request@lists.automattic.com
> 
> You can reach the person managing the list at
> 	wp-hackers-owner@lists.automattic.com
> 
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
> 
> 
> Today's Topics:
> 
>    1. Re: Plugin Upgrade Failing when using Subversion (Mike Schinkel)
>    2. Re: Set a unique directory for uploads (Chris Jean)
>    3. Re: Plugin Upgrade Failing when using Subversion
>       (Harish Narayanan)
>    4. Re: Set a unique directory for uploads (Jos? Fontainhas)
>    5. Re: Ignore Portions of URI (scribu)
>    6. Comments popup (scribu)
>    7. Re: Ignore Portions of URI (Mike Schinkel)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Fri, 16 Jan 2009 10:12:33 -0600 (CST)
> From: Mike Schinkel <mikeschinkel@newclarity.net>
> Subject: Re: [wp-hackers] Plugin Upgrade Failing when using Subversion
> To: wp-hackers@lists.automattic.com
> Message-ID: <22234214.871232122352266.JavaMail.DELL-1405$@Dell-1405>
> Content-Type: text/plain; charset=utf-8
> 
> > Basically, I'm asking why do you want to use SVN to keep the core up
> to date, but the plugin upgrader to keep the plugins up-to-date?
> You're mixing two different ways of doing the same thing here. Choose
> one, then use that one for both cases. All the plugins in Extend are
> available via SVN too.
> 
> Thanks for clarifying.
> 
> Read my most recent earlier email on that subject, but in a nutshell our use-case is different. I deliver the code to my client (the interactive agency) via SVN; it is their SVN server.  I use SVN to archive software that can be completely rebuilt from scratch by them, including SQL scripts to initialize plugins to the proper state, so they need zero knowledge of where to find WordPress things and have no dependency on trying to find those things when they need to rebuild a system for testing and then for deployment.  
> 
> Tell me if you think otherwise but I think my use-cases make more sense when working on a large team with lots of players many of who don't know anything more about WordPress than it's name, and yours make more sense when working on a small team of WordPress gurus?
> 
> -Mike Schinkel
> http://mikeschinkel.com/
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Fri, 16 Jan 2009 10:16:12 -0600
> From: Chris Jean <gaarai@gaarai.com>
> Subject: Re: [wp-hackers] Set a unique directory for uploads
> To: wp-hackers@lists.automattic.com
> Message-ID: <4970B2CC.80406@gaarai.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> 
> I guess it depends on where you put the code and how your site is set 
> up. I did this on a stock install of 2.7 with no plugins and put the 
> code at the end of the functions.php file of the default theme.
> 
> No warnings or errors were generated by this change and all the pages 
> functioned properly. Well, all the pages I tested worked correctly. I 
> checked again, and my Tools page worked just fine.
> 
> It's possible that a plugin or theme feature is causing this failure, so 
> I wouldn't know exactly what the problem is nor how to fix it unless I 
> were to get more details about what you are running on the site or 
> access to the site itself.
> 
> You might try disabling all your plugins first and seeing if the problem 
> goes away. If the problem goes away, then activate plugins one at a time 
> until the problem comes back. That will tell you if a plugin is causing 
> the problem and specifically which one it is.
> 
> Chris Jean
> http://gaarai.com/
> http://wp-roadmap.com/
> 
> 
> 
> M?rio Gamito wrote:
> > Hi Gaarai,
> >
> > Thank you for your answer.
> >
> > Gaarai wrote:
> >   
> >> add_filter( 'intermediate_image_sizes',
> >> 'remove_intermediate_image_sizes' );
> >> function remove_intermediate_image_sizes( $sizes ) {
> >>    return array();
> >> }
> >>
> >> This could simply be added to your functions.php file in the theme. I
> >> tested it this way, and it worked perfectly.
> >>     
> > Yes, it works. Although I get the "headres already sent" warning after
> > the crunching.
> >
> > But the worst part is that it breaks the tools page. I get a blank page.
> >
> > Any ideias ?
> >
> > Warm Regards,
> >   
> 
> 
> ------------------------------
> 
> Message: 3
> Date: Fri, 16 Jan 2009 17:26:36 +0100
> From: Harish Narayanan <harish.mlists@gmail.com>
> Subject: Re: [wp-hackers] Plugin Upgrade Failing when using Subversion
> To: wp-hackers@lists.automattic.com
> Message-ID: <4970B53C.3010305@gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> Mike Schinkel wrote:
> >> I set these properties by connecting to my server 
> >> via ssh, navigating to the appropriate folders and 
> >> using svn propset. Look for svn:ignore on the 
> >> following page for detailed information:
> >> http://svnbook.red-bean.com/en/1.1/ch07s02.html
> > 
> > Thanks, I'll check it out, but probably after this project though; don't have time to become an SVN expert before launch, unfortunately. :-(
> 
> All right.
> 
> >> See if this makes sense, as I am doing something 
> >> fundamentally different:
> > 
> > Yes, it does make sense. What's different is I'm developing locally for a (near-)future deployment.  I think the difference is we are not making any changes on a live server until they first go from dev to staging/testing, then to live.  SVN used on dev but not on stage/test or live.
> 
> I understand, but the persnickety step is really the same. Since my
> journal is not mission critical (hah!), what you call staging/testing is
> my live implementation.
> 
> >> To avoid any confusion, I keep anything that's 
> >> not part of the default WordPress repository 
> >> explicitly out of this revision control---
> >> which is what I was advising you to do.
> > 
> > Given our use case, which is partially to archive and partially to be able to recreate a fully working implementation, that doesn't really work for us, unfortunately. Wish it did.
> 
> I only said keep things external to WordPress out of the original
> repository. You can easily have a separate repository for your plug-in
> additions/changes or your theme development. But that's a story for
> another day. I wish you luck on finding something that works in the
> short term for your current project.
> 
> > Thanks for the help.
> 
> Glad to help.
> 
> Harish
> 
> 
> ------------------------------
> 
> Message: 4
> Date: Fri, 16 Jan 2009 16:35:48 +0000
> From: Jos? Fontainhas <jfontainhas@gmail.com>
> Subject: Re: [wp-hackers] Set a unique directory for uploads
> To: wp-hackers@lists.automattic.com
> Message-ID: <4970B764.4010908@gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> 
> 
> Tried it just now, and works like a charm (and comes in quite handy, 
> too. Thanks Gaarai). Which php file is complaining that the headers have 
> already been sent, exactly?
> 
> -Z?
> 
> > M?rio Gamito wrote:
> >> Hi Gaarai,
> >>
> >> Thank you for your answer.
> >>
> >> Gaarai wrote:
> >>  
> >>> add_filter( 'intermediate_image_sizes',
> >>> 'remove_intermediate_image_sizes' );
> >>> function remove_intermediate_image_sizes( $sizes ) {
> >>>    return array();
> >>> }
> >>>
> >>> This could simply be added to your functions.php file in the theme. I
> >>> tested it this way, and it worked perfectly.
> >>>     
> >> Yes, it works. Although I get the "headres already sent" warning after
> >> the crunching.
> >>
> >> But the worst part is that it breaks the tools page. I get a blank page.
> >>
> >> Any ideias ?
> >>
> >> Warm Regards,
> >>   
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> 
> 
> 
> ------------------------------
> 
> Message: 5
> Date: Fri, 16 Jan 2009 19:56:38 +0200
> From: scribu <scribu@gmail.com>
> Subject: Re: [wp-hackers] Ignore Portions of URI
> To: wp-hackers@lists.automattic.com
> Message-ID:
> 	<349fe48b0901160956n6a698b59xa169b2045fa2c3bd@mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> On Fri, Jan 16, 2009 at 4:25 PM, Dougal Campbell <dougal@gunters.org> wrote:
> 
> > Otto wrote:
> >
> >> You can do a search, then rearrange or hide various news sources. Your
> >>> view
> >>> state is stored in the hash portion of the URL, which makes it
> >>> bookmarkable,
> >>> without cookies. So you can send the bookmark to other users, and they
> >>> get
> >>> the same search view that you set up. For example:
> >>>
> >>>  http://addictomatic.com/topic/wordpress#kmun.dwqo.tblh
> >>>
> >>>
> >>
> >> How is that a substantial improvement over, say,
> >> http://addictomatic.com/topic/wordpress?status=kmun.dwqo.tblh ?
> >>
> >> I just don't see how getting hash info from the URL and sending it via
> >> JS is any better than a GET URL.
> >>
> >>
> >
> > For one thing, it looks cleaner. For another, you don't have to be
> > concerned about whether or not search engines are indexing querystrings. So
> > you get cleaner analytics, and hopefully better SEO.
> >
> > And all the cool kids are doing it.
> 
> 
> Not to mention that you might avoid several full page reloads.
> 
> -- 
> http://scribu.net
> 
> 
> ------------------------------
> 
> Message: 6
> Date: Fri, 16 Jan 2009 20:17:44 +0200
> From: scribu <scribu@gmail.com>
> Subject: [wp-hackers] Comments popup
> To: wp-hackers@lists.automattic.com
> Message-ID:
> 	<349fe48b0901161017h14766890xbaf97168d1e9ead6@mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> Is there still any valid reason for disabling
> comment_popup_link()<http://trac.wordpress.org/browser/tags/2.7/wp-includes/comment-template.php#L882>on
> single posts?
> 
> I commented out the two lines (905, 906) and it works just fine on single
> posts.
> 
> -- 
> http://scribu.net
> 
> 
> ------------------------------
> 
> Message: 7
> Date: Fri, 16 Jan 2009 12:43:25 -0600 (CST)
> From: Mike Schinkel <mikeschinkel@newclarity.net>
> Subject: Re: [wp-hackers] Ignore Portions of URI
> To: wp-hackers@lists.automattic.com
> Message-ID: <9005852.981232131408937.JavaMail.DELL-1405$@Dell-1405>
> Content-Type: text/plain; charset=utf-8
> 
> Hi All:
> 
> Hate to get mired into this debate, but finally I can't help myself but make the following points (and I've spent a lot of time researching URL design, see: http://blog.welldesignedurls.org.)
> 
> URL fragments and URL parameters create different architectures and really should be used for different use-cases.  
> 
> When using URL Fragments you are essentially creating a mini-app within one URL where the fragment is ideally being used to capture and restore state when a user bookmarks the URL. URL fragments are handled completely by the client although some (all?) search engines will index fragments with their URLs. 
> 
> URL Parameters are used when you want the server to generate a completely different response representation upon a request. BTW, URLs with parameters (i.e. http://example.com/?p=3) and URLs with parameter data embedded (i.e. http://example.com/about/) are equivalent for the purpose of this discussion.
> 
> For example the project that I am working on today will use both parameters and fragments for a media gallery with video and photo tabs.  URLs will look like this:
> 
> http://example.com/gallery/videos
> http://example.com/gallery/photos
> 
> The Video Gallery will have "Channels" and "Videos" where a Channel contains one of more videos. The Photo Gallery will have "Albums" and "Photo Sets" where an Album contains one of more Photo Sets which contains one of more Photos. We want the screen to refresh *between* the video and photo section since we are using different players and all the data on the screen chances but we want full interactivity and quick response *within* the video and the photo galleries *and* we want to be able to bookmark the current state. These are some example URLs w/fragments we'll use:
> 
> http://example.com/gallery/videos#vc3v52
> http://example.com/gallery/photos#pa2ps7p86
> 
> In those fragments vc=Video Channel, v=Video, pa=Photo Album, ps=Photo Set, and p=Photo with the numbers being their respective IDs from the NextGen Gallery (I'm planning to enhance NextGen to support video.)
> 
> As the user clicks around in the video and/or photo gallery we'll use Javascript to update the URL to indicate the current "state" of the page/mini-app. When a user returns to a bookmarked URL with those fragments we'll use Javascript to restore the page state to the Channel/Video and/or the Album/PhotoSet/Photo that was being displayed when the URL was bookmarked.
> 
> That said, you can potentially use page refreshes (URLs w/parameters) for everything or use in-page navigation (URLs w/fragments) for everything but each creates a different architecture and thus should be used in the use cases that best fit the architecture. For example two completely different pages shouldn't use URL fragments to differentiate but a page with a single cohesive purpose that requires lots of interactivity (like, say, a file manager for server files) should use URL fragments and it should regenerate the relevant state the page was in when bookmarked from the URL fragment.  BTW, this is one thing that most Flash apps do NOT do well, unfortunately.
> 
> So in summary, URLs w/parameters and URLs w/fragments are both valid architectures but each should be used with their respective appropriate use-cases.
> 
> HTH.
> 
> -Mike Schinkel
> http://mikeschinkel.com/
> 
> P.S. The HTTP spec says that it is up to the client to interpret the URL fragment and that mostly it should do so based on content type. For example, think of how fragments work with PDF files. In the case of HTML the browser does have default behavior for fragment, i.e. repositioning the viewport, but for HTML+AJAX/AHAH-based apps repositioning only is too limited. In essence, when we use fragments we should design them as if we were designing our own new custom content type that is based on HTML+interactivity.
> 
> 
> ------------------------------
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 
> End of wp-hackers Digest, Vol 48, Issue 48
> ******************************************

_________________________________________________________________
Nieuw: nu ook chatten op je mobiel!
http://www.overaljevriendenbijje.nl/#superdeal
From lists at i-sommer.de  Sat Jan 17 09:54:59 2009
From: lists at i-sommer.de (Kai Sommer)
Date: Sat Jan 17 09:55:18 2009
Subject: [wp-hackers] custom permalinks, paged content and a 404
Message-ID: <200901171055.01409.lists@i-sommer.de>

Dear "hackers",

today I detect a small problem with my blog (at http://sokai.name/blog/).

I hope someone can help me. I googled around and read a lot of similar 
problems - but nothing fixed my issue.

Here are my facts...

options-general.php
  (domain: http://sokai.name)
  WP URL: http://sokai.name
  blog URL: http://sokai.name

options-permalink.php
  custom permalinks: /blog/%postname%/
  category base: blog/kategorie
  tag base: blog/tag

options-reading.php:
  static pages
    start: "Willkommen!" (slug = "sokainame")
    blog: "Blog" (slug = "blog")
  show posts: 4

For my page "Blog" I used a page template that catches all posts from my 
category 31 and shows the last 4 posts correctly.
But if I click "Older Entries" I get an 404 Error at the 
URL "http://sokai.name/blog/page/2/". I think I have correcly set my 
preferences to show the next 4 posts at this URL and don't know how and what 
I could change.

The paged content with archives, eg. 
under "http://sokai.name/blog/2007/01/page/2/", are shown like I expect...

Thanks a lot fpr your reply.
sokai

PS:
I'm German and the above values are translated for you with small knowledge of 
the correct english words. *sryme*

-- 
Kai Sommer | Schopenhauerstra?e 29
14467 Potsdam | http://i-sommer.de
From frank at bueltge.de  Sat Jan 17 12:58:31 2009
From: frank at bueltge.de (frank@bueltge.de)
Date: Sat Jan 17 12:58:46 2009
Subject: [wp-hackers] custom permalinks, paged content and a 404
In-Reply-To: <200901171055.01409.lists@i-sommer.de>
References: <200901171055.01409.lists@i-sommer.de>
Message-ID: <db047a770901170458p444301a6h489e7eab183c67fb@mail.gmail.com>

I think you Must include the paged-parameter in your custom loop.

You can read on my german blog bueltge.de - search for query Quick tipps.


On 1/17/09, Kai Sommer <lists@i-sommer.de> wrote:
> Dear "hackers",
>
> today I detect a small problem with my blog (at http://sokai.name/blog/).
>
> I hope someone can help me. I googled around and read a lot of similar
> problems - but nothing fixed my issue.
>
> Here are my facts...
>
> options-general.php
>   (domain: http://sokai.name)
>   WP URL: http://sokai.name
>   blog URL: http://sokai.name
>
> options-permalink.php
>   custom permalinks: /blog/%postname%/
>   category base: blog/kategorie
>   tag base: blog/tag
>
> options-reading.php:
>   static pages
>     start: "Willkommen!" (slug = "sokainame")
>     blog: "Blog" (slug = "blog")
>   show posts: 4
>
> For my page "Blog" I used a page template that catches all posts from my
> category 31 and shows the last 4 posts correctly.
> But if I click "Older Entries" I get an 404 Error at the
> URL "http://sokai.name/blog/page/2/". I think I have correcly set my
> preferences to show the next 4 posts at this URL and don't know how and what
> I could change.
>
> The paged content with archives, eg.
> under "http://sokai.name/blog/2007/01/page/2/", are shown like I expect...
>
> Thanks a lot fpr your reply.
> sokai
>
> PS:
> I'm German and the above values are translated for you with small knowledge
> of
> the correct english words. *sryme*
>
> --
> Kai Sommer | Schopenhauerstra?e 29
> 14467 Potsdam | http://i-sommer.de
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Liebe Gr?sse
Frank

__
Das Buch: WordPress - Weblogs einrichten und administrieren, Open Source Press
  ISBN 978-3-937514-33-8
  http://wordpress-buch.bueltge.de/das-buch/

http://bueltge.de : frank@bueltge.de : +49 3691 212951

__
Inpsyde GmbH i.Gr.
Frank B?ltge, B.Sc.
Mutzer Heide 3
51467 Bergisch Gladbach

Steuernr:    204/5756/WV VST 6
Gesch?ftsf.: H. Roh?, O. A. Schmitz

http://inpsyde.com : f.bueltge@inpsyde.com : +49 3691 212951
http://pressthis.de
From jidanni at jidanni.org  Sat Jan 17 23:22:55 2009
From: jidanni at jidanni.org (jidanni@jidanni.org)
Date: Sat Jan 17 23:23:09 2009
Subject: [wp-hackers] URIs ending like p=20090118
Message-ID: <87k58tcyb4.fsf@jidanni.org>

Gentlemen, I will do my first WordPress installation soon and wish to
make URIs ending like p=20090118. I.e., one can still see there's a
date there -- and at the same time I won't need any .htaccess file.
(Just one less thing that can go wrong.)

So my question is can I force WordPress to assign "p" numbers like I
choose? Any big deal that there will be a big gaps in p numbers, as my
Mom's http://jidanni.org/abj/articles/ that I will import don't come
close to once a day. I suppose I will make a script that fakes some
standard export format in order to import those articles with my faked
p numbers.
From mikeschinkel at newclarity.net  Sat Jan 17 23:27:34 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat Jan 17 23:27:54 2009
Subject: [wp-hackers] URIs ending like p=20090118
In-Reply-To: <87k58tcyb4.fsf@jidanni.org>
Message-ID: <6211936.1881232234855092.JavaMail.DELL-1405$@Dell-1405>

jidanni@jidanni.org wrote:
> So my question is can I force WordPress to assign "p" 
> numbers like I choose? 

That direction is fraught with peril. My suggestion: bite the bullet and use .htaccess; it's really not that complex.

-Mike Schinkel
http://mikeschinkel.com/


----- Original Message -----
From: jidanni@jidanni.org
To: wp-hackers@lists.automattic.com
Sent: Saturday, January 17, 2009 6:22:55 PM GMT -05:00 US/Canada Eastern
Subject: [wp-hackers] URIs ending like p=20090118

Gentlemen, I will do my first WordPress installation soon and wish to
make URIs ending like p=20090118. I.e., one can still see there's a
date there -- and at the same time I won't need any .htaccess file.
(Just one less thing that can go wrong.)

So my question is can I force WordPress to assign "p" numbers like I
choose? Any big deal that there will be a big gaps in p numbers, as my
Mom's http://jidanni.org/abj/articles/ that I will import don't come
close to once a day. I suppose I will make a script that fakes some
standard export format in order to import those articles with my faked
p numbers.
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Sat Jan 17 23:57:04 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat Jan 17 23:57:27 2009
Subject: [wp-hackers] Help with the API on WordPress.org?
In-Reply-To: <25964963.1961232236071538.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <24742704.1981232236568334.JavaMail.DELL-1405$@Dell-1405>

"Otto" <otto@ottodestruct.com> wrote:
Mike Schinkel <mikeschinkel@gmail.com> wrote:
> > P.S. Also, if this is the "preferred" MIME type for serialized PHP 
> > would you agree that web services returning it such as at
> > http://api.wordpress.com should be using it?
>
> I'm of the general opinion that it doesn't make any sort of 
> difference either way. I mean, yes, you can be pedantic about 
> it and add special code to the thing to make it output a different 
> mime type in the header, but does it have any real-world impact? 
> No, not at all.

Sadly too many people have that view because they don't see the problems when they are coding and testing so they think they don't exist. Mime types matter for security, for maximum interoperability and for enabling serendipitously-discovered use-cases.

> MIME Types are fine and I like the idealized world that sits 
> behind them, where bits of data are typed and applications use 
> those types and everything sits happily in it's own little fairy 
> village where things are what they are and other things can then 
> handle them correctly. And we'll all have lollipops and candy 
> for breakfast, and pancakes will be free on Tuesdays.
> But I think that on the whole, strict type rigidness causes more
> problems than it solves. It makes absolutely no difference what 
> the mime type returned is unless the client looks at it and acts
> differently based on it.

Sadly the approach you take on this has the opposite effect to what you aspire to. Yes, rigidness causes too many problems, but no one is saying to be rigid on the client end. If you were to instead consider The Robustness Principle[1] a.k.a. Postel's law "Be conservative in what you do; be liberal in what you accept from others" then you'd see that it is better for the server to be strict which then allows the client to be strict or not-strict, whatever it likes. Rigidity only causes problems with the client is rigid too.

I do understand the instinct to rebel from authority, I have it myself, but I hope you can see how arguing for chaos on the response end of the HTTP standards is counter-productive. 

-Mike Schinkel
http://mikeschinkel.com/custom-wordpress-plugins/

[1] http://en.wikipedia.org/wiki/Postel's_law


From daiv at daivmowbray.com  Sat Jan 17 23:58:56 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Sat Jan 17 23:59:13 2009
Subject: [wp-hackers] nested shortcode
Message-ID: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>

I've been around the bend on this one.

is it possible to do the following?

hello list

I add a shortcode [myclass] anywhere in a post
which will then add to any image in that post the class of myclass.

remember that a post image probably has [caption] shortcode already.

I have (inside my plugin class):
add_shortcode ( 'myclass' , array(&$this, 'class_shortcode_out'));

function class_shortcode_out( $attr, $content='' ){
	 extract(shortcode_atts(array(
			'class_height' => '',
			'class_color' => ''), $attr));
	$content = $this->class_replace($content);
	return do_shortcode($content);
}
  function class_replace($content) {
         $pattern = "/<img(.*?)src=('|\")([^>]*).(bmp|gif|jpeg|jpg|png) 
('|\")(.*?)class=('|\")(.*?)('|\")(.*?) \/>/i";
         $replacement = "<img$1src=$2$3.$4$5$6class=$7$8 myclass$9$10 / 
 >";
         $content = preg_replace($pattern, $replacement, $content);
	return $content;
}

This isn't working for me. The preg_replace works, but not with the  
[captions] shortcode.
Any ideas?
Thanx.
----------
Daiv Mowbray
daiv@daivmowbray.com
----------


From mikeschinkel at newclarity.net  Sun Jan 18 00:24:57 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun Jan 18 00:25:16 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <63a3a6ce0901090913x55d4a7c8i594a73778bece452@mail.gmail.com>
Message-ID: <15589040.2031232238300219.JavaMail.DELL-1405$@Dell-1405>

"Brian Krausz" <brian@nerdlife.net> wrote:
> my plugin abstracts that API into a GUI, 
> may help with what you're
> trying to do.
> http://wordpress.org/extend/plugins/custom-taxonomies/

This looks really interesting and may be exactly what I need for several different potential use cases but after installing it it is not clear how someone would actually apply it's functionality.  It seems to compete with tags and categories, but I don't see how they relate.

Do you have a blog post anywhere explaining how you've used it?

-Mike Schinkel
http://mikeschinkel.com/
From wp at xentek.net  Sun Jan 18 22:10:08 2009
From: wp at xentek.net (Eric Marden)
Date: Sun Jan 18 22:10:20 2009
Subject: [wp-hackers] URIs ending like p=20090118
In-Reply-To: <6211936.1881232234855092.JavaMail.DELL-1405$@Dell-1405>
References: <6211936.1881232234855092.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <6886F3D2-A1F7-4B12-8EDD-35865458552A@xentek.net>

> jidanni@jidanni.org wrote:
>> So my question is can I force WordPress to assign "p"
>> numbers like I choose?
>
> That direction is fraught with peril. My suggestion: bite the bullet  
> and use .htaccess; it's really not that complex.
>
> -Mike Schinkel


By default the 'p' param is already assigned to the post/page id, and  
will correspond to the database record and not the date.

Your host probably already has all the necessary stuff in place to  
make it work, so go ahead and dive into using .htaccess or learn to  
like the default ?p=123


-e

From eckman.john at gmail.com  Sun Jan 18 22:29:43 2009
From: eckman.john at gmail.com (John Eckman)
Date: Sun Jan 18 22:57:01 2009
Subject: [wp-hackers] Filter/Action for non-standard front page?
Message-ID: <A29E1A59-DBBA-46FA-B759-262BDB03EB1E@gmail.com>

Hello all.

I've written a plugin that enables the user to set up their WordPress  
blog as a Facebook application:
	http://www.wordpress.org/extend/plugins/wpbook/

In essence, users of the plugin give their blog's url as the callback  
URL for a Facebook app. When the Facebook servers call the callback  
url in an iFrame, the plugin uses the filters for theme_root,  
theme_root_url, and template_directory so that a different theme gets  
served.

("fb_sig_in_iframe" gets added to the query string when the callback  
url is called from Facebook's servers - this is how I know the call is  
from Facebook).

It's working pretty well for most people, but folks are reporting  
issues and I believe one issue is when users have set something else  
as the front page.

Is it possible to use a filter or action which will know that the user  
has a custom front page set, and whenever a request comes in that is  
from facebook, know to redirect to my custom theme's index.php, rather  
than the custom from page the user has set?

Or, could I just tell users to provide as the callback url the "Posts"  
page from Settings->Reading, where they've indicated a different front  
page?


Thanks -

John


----------------------------------------
John Eckman
eckman.john@gmail.com
http://www.johneckman.com/





From glenn at glennansley.com  Sun Jan 18 23:07:49 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Sun Jan 18 23:08:00 2009
Subject: [wp-hackers] Filter/Action for non-standard front page?
In-Reply-To: <A29E1A59-DBBA-46FA-B759-262BDB03EB1E@gmail.com>
References: <A29E1A59-DBBA-46FA-B759-262BDB03EB1E@gmail.com>
Message-ID: <3283f0830901181507q21f653a7jeb48165c3c38abda@mail.gmail.com>

get_option('page_on_front') or get_option('show_on_front') or some
combination of the two would probably work.
You can see how different values look by changing them and then
visiting /wp-admin/options.php

On Sun, Jan 18, 2009 at 5:29 PM, John Eckman <eckman.john@gmail.com> wrote:
> Hello all.
>
> I've written a plugin that enables the user to set up their WordPress blog
> as a Facebook application:
>        http://www.wordpress.org/extend/plugins/wpbook/
>
> In essence, users of the plugin give their blog's url as the callback URL
> for a Facebook app. When the Facebook servers call the callback url in an
> iFrame, the plugin uses the filters for theme_root, theme_root_url, and
> template_directory so that a different theme gets served.
>
> ("fb_sig_in_iframe" gets added to the query string when the callback url is
> called from Facebook's servers - this is how I know the call is from
> Facebook).
>
> It's working pretty well for most people, but folks are reporting issues and
> I believe one issue is when users have set something else as the front page.
>
> Is it possible to use a filter or action which will know that the user has a
> custom front page set, and whenever a request comes in that is from
> facebook, know to redirect to my custom theme's index.php, rather than the
> custom from page the user has set?
>
> Or, could I just tell users to provide as the callback url the "Posts" page
> from Settings->Reading, where they've indicated a different front page?
>
>
> Thanks -
>
> John
>
>
> ----------------------------------------
> John Eckman
> eckman.john@gmail.com
> http://www.johneckman.com/
>
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at newclarity.net  Sun Jan 18 23:15:27 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun Jan 18 23:15:59 2009
Subject: [wp-hackers] Filter/Action for non-standard front page?
In-Reply-To: <3283f0830901181507q21f653a7jeb48165c3c38abda@mail.gmail.com>
Message-ID: <24610141.2381232320527323.JavaMail.DELL-1405$@Dell-1405>

"Glenn Ansley" <glenn@glennansley.com> wrote:
> You can see how different values look by changing them
> and then visiting /wp-admin/options.php

Oooh, I didn't know about /wp-admin/options.php  Thanks!

-Mike Schinkel
http://mikeschinkel.com/
From lists at alexking.org  Sun Jan 18 23:18:50 2009
From: lists at alexking.org (Alex King)
Date: Sun Jan 18 23:19:05 2009
Subject: [wp-hackers] Filter/Action for non-standard front page?
In-Reply-To: <24610141.2381232320527323.JavaMail.DELL-1405$@Dell-1405>
References: <24610141.2381232320527323.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <02F34D37-F5FB-414E-85A8-DA946E284D6A@alexking.org>

Careful making changes there if you have any serialized data in your  
options table. I've seen corruption of serialized data by using /wp- 
admin/options.php

Cheers,
--Alex

Personal   http://alexking.org
Business   http://crowdfavorite.com
Schedule   http://alex.myfreebusy.com



On Jan 18, 2009, at 4:15 PM, Mike Schinkel wrote:

> "Glenn Ansley" <glenn@glennansley.com> wrote:
>> You can see how different values look by changing them
>> and then visiting /wp-admin/options.php
>
> Oooh, I didn't know about /wp-admin/options.php  Thanks!
>
> -Mike Schinkel
> http://mikeschinkel.com/
From mikeschinkel at newclarity.net  Sun Jan 18 23:58:14 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun Jan 18 23:58:43 2009
Subject: [wp-hackers] Filter/Action for non-standard front page?
In-Reply-To: <31028841.2401232322751333.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <929818.2421232323098009.JavaMail.DELL-1405$@Dell-1405>

"Alex King" <lists@alexking.org> wrote
> Careful making changes there if you have any serialized data 
> in your options table. I've seen corruption of serialized data 
> by using /wp-admin/options.php

Thanks, appreciate it but no worries. I can recreate anything in there I destroy. I've been using HeidiSQL on Windows to interact directly with the wp_options table, this just gives me a more convenient way to access it on an adhoc basis.

-Mike Schinkel
http://mikeschinkel.com/
From lynne.pope at gmail.com  Mon Jan 19 02:38:26 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon Jan 19 02:38:34 2009
Subject: [wp-hackers] Replace default doctype on one page only through plugin
Message-ID: <427667db0901181838n1758a876mfd36281a74578a38@mail.gmail.com>

Hi all,
I am working on a site that is using XHTML 1.0 Strict but want to serve
XHTML 1.0 Transitional on one page only. The page uses a plugin so the
change to the doctype could go into the plugin.

I can do a query in header.php but want to avoid unnecessary queries (why
add an additional query to 300+ pages when only one is affected?) but cannot
get an override working for the plugin.

Any ideas?

Lynne
From gaarai at gaarai.com  Mon Jan 19 03:07:08 2009
From: gaarai at gaarai.com (Gaarai)
Date: Mon Jan 19 03:07:26 2009
Subject: [wp-hackers] Replace default doctype on one page only through
	plugin
In-Reply-To: <427667db0901181838n1758a876mfd36281a74578a38@mail.gmail.com>
References: <427667db0901181838n1758a876mfd36281a74578a38@mail.gmail.com>
Message-ID: <4973EE5C.6080602@gaarai.com>

Hi Lynne.

Why not create a filter and use it in your header.php file?

For example:

    <?php $page_doctype = '*<!DOCTYPE html PUBLIC "-//W3C...>*'; ?>
    <?php $page_doctype = apply_filters( 'alter_page_doctype',
    $page_doctype ); ?>
    <?php echo $page_doctype; ?>
    <html ...>
    ...

The bold portion needs to be modified to be whatever your default 
doctype is.

Then all you have to do is latch into this filter via your plugin and 
put the necessary code in the filtering function that will determine 
when the conditions are right to change the doctype. Actually, you can 
do the conditional before you add the filter so that the function 
doesn't even run if it doesn't need to.

For example:

    <?php
        if ( preg_match( '|^*/special/*|', $_SERVER['REQUEST_URI'] ) )
           add_filter( 'alter_page_doctype', use_custom_doctype );
       
        function use_custom_doctype( $doctype ) {
           return '*<!DOCTYPE...>*';
        }
    ?>

This code basically looks for any URL of the format 
http://domain.com/special/ or http://domain.com/special/something-else/. 
In other words, it matches anything that has /special/ directly after 
the domain. It then adds the filter to output a custom doctype.

An alternate example that only matches a specific request is as follows:

    <?php
        if ( '*/special/*' === $_SERVER['REQUEST_URI'] )
           add_filter( 'alter_page_doctype', use_custom_doctype );
       
        function use_custom_doctype( $doctype ) {
           return '*<!DOCTYPE...>*';
        }
    ?>

This only works for a request of the form http://domain.com/special/ and 
nothing else.

In each of the last two samples of code, there are two portions in bold.

The first bold portion is what you should change to match the page/post 
link that you are targeting. Note the beginning and ending forward 
slash. The format is extremely important. if you mess it up, the match 
won't work.

The second bold portion is where you put your custom doctype.

Doing the customization this way, you can modify your doctype anyway you 
want and won't be boxed in a corner later on in case you need to modify 
how this doctype change functions. Also, it fits in exactly with the 
coding style of WordPress.

I tested this out by adding the first piece of code to my test site in 
the header.php file in place of the standard doctype definition. I then 
loaded the second bit of code in my functions.php file. I tested it out 
on the page I put in the code, and it worked like a charm.

Good luck.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Lynne Pope wrote:
> Hi all,
> I am working on a site that is using XHTML 1.0 Strict but want to serve
> XHTML 1.0 Transitional on one page only. The page uses a plugin so the
> change to the doctype could go into the plugin.
>
> I can do a query in header.php but want to avoid unnecessary queries (why
> add an additional query to 300+ pages when only one is affected?) but cannot
> get an override working for the plugin.
>
> Any ideas?
>
> Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
From wp at xentek.net  Mon Jan 19 04:00:59 2009
From: wp at xentek.net (Eric Marden)
Date: Mon Jan 19 04:01:16 2009
Subject: [wp-hackers] Filter/Action for non-standard front page?
In-Reply-To: <929818.2421232323098009.JavaMail.DELL-1405$@Dell-1405>
References: <929818.2421232323098009.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <318BA8E6-A8B3-4BAE-9923-615777DF8A75@xentek.net>

> I've been using HeidiSQL on Windows to interact directly with the  
> wp_options table

I'm a big fan of Navicat for that (http://www.navicat.com/) but its  
not free.

-e

From mikeschinkel at newclarity.net  Mon Jan 19 04:04:18 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jan 19 04:04:42 2009
Subject: [wp-hackers] Replace default doctype on one page only through
	plugin
In-Reply-To: <4973EE5C.6080602@gaarai.com>
Message-ID: <16280167.01232337865896.JavaMail.DELL-1405$@Dell-1405>

Lynee:

Does it even need to be in a plugin?  It this for this site only, or are you trying to create generic functionality?  Can't you do just do something like (in ~psudeo-code):

<?php 

if ($_SERVER['REQUEST_URI']=='special_url') {
   echo '<Special DocType>';
} else {
   echo '<Regular DocType>';
}

?>

-Mike Schinkel
http://mikeschinkel.com/custom-wordpress-plugins/


Lynne Pope wrote:
> Hi all,
> I am working on a site that is using XHTML 1.0 Strict but want to serve
> XHTML 1.0 Transitional on one page only. The page uses a plugin so the
> change to the doctype could go into the plugin.
>
> I can do a query in header.php but want to avoid unnecessary queries (why
> add an additional query to 300+ pages when only one is affected?) but cannot
> get an override working for the plugin.
>
> Any ideas?
>
> Lynne
From mikeschinkel at newclarity.net  Mon Jan 19 04:10:28 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jan 19 04:11:11 2009
Subject: [wp-hackers] Filter/Action for non-standard front page?
In-Reply-To: <318BA8E6-A8B3-4BAE-9923-615777DF8A75@xentek.net>
Message-ID: <19534397.21232338236143.JavaMail.DELL-1405$@Dell-1405>

"Eric Marden" <wp@xentek.net> wrote:
> I'm a big fan of Navicat for that (http://www.navicat.com/) 
> but its not free.

I first found and tried the trial of Navicat a few years ago but didn't like it as much as HeidiSQL at the time, so why pay?  I've been using HeidiSQL v3.2 which has some annoyances but once 4.0 gets rid of the bugs, it will be really good.  Still, I might try the trial again just to see if I'm missing anything. At the time I was doing Python programming and really needed Sqlite support (which neither Navicat nor HeidiSQL offer.)

I've a friend who loves EMS SQL Manager Studio (http://sqlmanager.net/) and I've considered it because it has features that HeidiSQL does not have, but it is even less free than Navicat!

Anywho, thanks for the comment; are these options are hands-down better than phpMyAdmin!

-Mike Schinkel
http://mikeschinkel.com/
From lynne.pope at gmail.com  Mon Jan 19 04:15:05 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon Jan 19 04:15:20 2009
Subject: [wp-hackers] Replace default doctype on one page only through 
	plugin
In-Reply-To: <16280167.01232337865896.JavaMail.DELL-1405$@Dell-1405>
References: <4973EE5C.6080602@gaarai.com>
	<16280167.01232337865896.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <427667db0901182015n4b7bfc83hbc27c9381e5a71d@mail.gmail.com>

Well, what I am trying to do is this...

I am using a contact form plugin on my contact page. I have cleaned up XHTML
validation errors on the form but the form uses Recaptcha for anti-spam
assistance and the no-script fallback for Recaptcha is an iframe.

Since DOCTYPE applies to the document and not to an overall site, I decided
to get pendantic and change my XHTML 1.0 STRICT to XHTML 1.0 TRANSITIONAL
for that one page alone.
Now, for my own site I can simply make the contact page into a template and
call a different header, but having got the bit between my teeth I decided
it would be more useful if I could find a way to add a DOCTYPE override to
the plugin.

I didn't write the plugin (too lazy to write my own contact form) but
realise that if I have issues with validation for it then others will have
too. Ergo, if I can find a way to do this safely within the plugin itself
the code then becomes reusable and worth contributing back.

I'm not going to hassle the plugin developer over this as I realise not
everyone cares if they have one page that doesn't validate. Besides, once I
work out a way to do it without creating more than negligable performance
issues this will be something I can reuse.

Lynne

2009/1/19 Mike Schinkel <mikeschinkel@newclarity.net>

> Lynee:
>
> Does it even need to be in a plugin?  It this for this site only, or are
> you trying to create generic functionality?  Can't you do just do something
> like (in ~psudeo-code):
>
> <?php
>
> if ($_SERVER['REQUEST_URI']=='special_url') {
>   echo '<Special DocType>';
> } else {
>   echo '<Regular DocType>';
> }
>
> ?>
>
> -Mike Schinkel
> http://mikeschinkel.com/custom-wordpress-plugins/
>
>
> Lynne Pope wrote:
> > Hi all,
> > I am working on a site that is using XHTML 1.0 Strict but want to serve
> > XHTML 1.0 Transitional on one page only. The page uses a plugin so the
> > change to the doctype could go into the plugin.
> >
> > I can do a query in header.php but want to avoid unnecessary queries (why
> > add an additional query to 300+ pages when only one is affected?) but
> cannot
> > get an override working for the plugin.
> >
> > Any ideas?
> >
> > Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at newclarity.net  Mon Jan 19 04:44:40 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jan 19 04:45:05 2009
Subject: [wp-hackers] Filter/Action for non-standard front page?
In-Reply-To: <318BA8E6-A8B3-4BAE-9923-615777DF8A75@xentek.net>
Message-ID: <29335124.141232340288364.JavaMail.DELL-1405$@Dell-1405>

Eric:

So I just downloaded the trial of NaviCat v8 for MySQL and it looks much nicer than I remember.  I'll try it out for the next 30 days and so if it turns into a keeper.

Thanks.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Eric Marden" <wp@xentek.net>
To: wp-hackers@lists.automattic.com
Sent: Sunday, January 18, 2009 11:00:59 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Filter/Action for non-standard front page?

> I've been using HeidiSQL on Windows to interact directly with the  
> wp_options table

I'm a big fan of Navicat for that (http://www.navicat.com/) but its  
not free.

-e

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Mon Jan 19 04:45:20 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jan 19 04:46:09 2009
Subject: [wp-hackers] Replace default doctype on one page only through
	plugin
In-Reply-To: <11681944.121232340243019.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <23493887.161232340323578.JavaMail.DELL-1405$@Dell-1405>

Ahh, that makes sense.

Sounds like Chris Jean's filter suggestion is the way to go?

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Lynne Pope" <lynne.pope@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Sunday, January 18, 2009 11:15:05 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Replace default doctype on one page only through  plugin

Well, what I am trying to do is this...

I am using a contact form plugin on my contact page. I have cleaned up XHTML
validation errors on the form but the form uses Recaptcha for anti-spam
assistance and the no-script fallback for Recaptcha is an iframe.

Since DOCTYPE applies to the document and not to an overall site, I decided
to get pendantic and change my XHTML 1.0 STRICT to XHTML 1.0 TRANSITIONAL
for that one page alone.
Now, for my own site I can simply make the contact page into a template and
call a different header, but having got the bit between my teeth I decided
it would be more useful if I could find a way to add a DOCTYPE override to
the plugin.

I didn't write the plugin (too lazy to write my own contact form) but
realise that if I have issues with validation for it then others will have
too. Ergo, if I can find a way to do this safely within the plugin itself
the code then becomes reusable and worth contributing back.

I'm not going to hassle the plugin developer over this as I realise not
everyone cares if they have one page that doesn't validate. Besides, once I
work out a way to do it without creating more than negligable performance
issues this will be something I can reuse.

Lynne

2009/1/19 Mike Schinkel <mikeschinkel@newclarity.net>

> Lynee:
>
> Does it even need to be in a plugin?  It this for this site only, or are
> you trying to create generic functionality?  Can't you do just do something
> like (in ~psudeo-code):
>
> <?php
>
> if ($_SERVER['REQUEST_URI']=='special_url') {
>   echo '<Special DocType>';
> } else {
>   echo '<Regular DocType>';
> }
>
> ?>
>
> -Mike Schinkel
> http://mikeschinkel.com/custom-wordpress-plugins/
>
>
> Lynne Pope wrote:
> > Hi all,
> > I am working on a site that is using XHTML 1.0 Strict but want to serve
> > XHTML 1.0 Transitional on one page only. The page uses a plugin so the
> > change to the doctype could go into the plugin.
> >
> > I can do a query in header.php but want to avoid unnecessary queries (why
> > add an additional query to 300+ pages when only one is affected?) but
> cannot
> > get an override working for the plugin.
> >
> > Any ideas?
> >
> > Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From lynne.pope at gmail.com  Mon Jan 19 04:57:53 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon Jan 19 04:58:06 2009
Subject: [wp-hackers] Replace default doctype on one page only through 
	plugin
In-Reply-To: <23493887.161232340323578.JavaMail.DELL-1405$@Dell-1405>
References: <11681944.121232340243019.JavaMail.DELL-1405$@Dell-1405>
	<23493887.161232340323578.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <427667db0901182057g3395935o200813caad7b2b74@mail.gmail.com>

The filter method is good (thanks Chris), but perhaps not quite as
bulletproof as I would like for mass distribution.
I'll keep playing and hoping for a brainwave ;)

Lynne


2009/1/19 Mike Schinkel <mikeschinkel@newclarity.net>

> Ahh, that makes sense.
>
> Sounds like Chris Jean's filter suggestion is the way to go?
>
> -Mike Schinkel
> http://mikeschinkel.com/
>
> ----- Original Message -----
> From: "Lynne Pope" <lynne.pope@gmail.com>
> To: wp-hackers@lists.automattic.com
> Sent: Sunday, January 18, 2009 11:15:05 PM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] Replace default doctype on one page only through
>  plugin
>
> Well, what I am trying to do is this...
>
> I am using a contact form plugin on my contact page. I have cleaned up
> XHTML
> validation errors on the form but the form uses Recaptcha for anti-spam
> assistance and the no-script fallback for Recaptcha is an iframe.
>
> Since DOCTYPE applies to the document and not to an overall site, I decided
> to get pendantic and change my XHTML 1.0 STRICT to XHTML 1.0 TRANSITIONAL
> for that one page alone.
> Now, for my own site I can simply make the contact page into a template and
> call a different header, but having got the bit between my teeth I decided
> it would be more useful if I could find a way to add a DOCTYPE override to
> the plugin.
>
> I didn't write the plugin (too lazy to write my own contact form) but
> realise that if I have issues with validation for it then others will have
> too. Ergo, if I can find a way to do this safely within the plugin itself
> the code then becomes reusable and worth contributing back.
>
> I'm not going to hassle the plugin developer over this as I realise not
> everyone cares if they have one page that doesn't validate. Besides, once I
> work out a way to do it without creating more than negligable performance
> issues this will be something I can reuse.
>
> Lynne
>
> 2009/1/19 Mike Schinkel <mikeschinkel@newclarity.net>
>
> > Lynee:
> >
> > Does it even need to be in a plugin?  It this for this site only, or are
> > you trying to create generic functionality?  Can't you do just do
> something
> > like (in ~psudeo-code):
> >
> > <?php
> >
> > if ($_SERVER['REQUEST_URI']=='special_url') {
> >   echo '<Special DocType>';
> > } else {
> >   echo '<Regular DocType>';
> > }
> >
> > ?>
> >
> > -Mike Schinkel
> > http://mikeschinkel.com/custom-wordpress-plugins/
> >
> >
> > Lynne Pope wrote:
> > > Hi all,
> > > I am working on a site that is using XHTML 1.0 Strict but want to serve
> > > XHTML 1.0 Transitional on one page only. The page uses a plugin so the
> > > change to the doctype could go into the plugin.
> > >
> > > I can do a query in header.php but want to avoid unnecessary queries
> (why
> > > add an additional query to 300+ pages when only one is affected?) but
> > cannot
> > > get an override working for the plugin.
> > >
> > > Any ideas?
> > >
> > > Lynne
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From gaarai at gaarai.com  Mon Jan 19 05:14:20 2009
From: gaarai at gaarai.com (Gaarai)
Date: Mon Jan 19 05:14:36 2009
Subject: [wp-hackers] Replace default doctype on one page only through
	plugin
In-Reply-To: <427667db0901182015n4b7bfc83hbc27c9381e5a71d@mail.gmail.com>
References: <4973EE5C.6080602@gaarai.com>	<16280167.01232337865896.JavaMail.DELL-1405$@Dell-1405>
	<427667db0901182015n4b7bfc83hbc27c9381e5a71d@mail.gmail.com>
Message-ID: <49740C2C.2020203@gaarai.com>

The idea I sent before works, but it would require modification of the 
theme.

The only way I can see of doing this completely inside the plugin with 
not modification of the theme itself is by using the ob_start() function.

For example:

    <?php
        if ( *$contact_page_displayed* ) {
            add_action( 'get_header', 'start_output_collection', 1000 );
            add_action( 'wp_head', 'send_output', 1000 );
        }

        function start_output_collection() {
            ob_start();
        }

        function send_output() {
            $header = ob_get_contents();
            ob_end_clean();

            $header = preg_replace( '|<!DOCTYPE[^>]*>|i',
    '*<!DOCTYPE..>*', $header );

            echo $header;
        }
    ?>

I've tested this on my test site, and it works.

There are two places of interest that I have made bold.

The first one will have to be replaced with logic that determines 
whether or not the contact form is rendered on that page or not. This is 
completely dependent upon exactly which plugin you are using.

The second one is the actual doctype to be output. I know what you are 
going for, but I shortened it to make the code look better in the email.

Now, you just sent a message about wanting a bulletproof way of doing 
it. The way I sent before is bulletproof as it will always work. The 
main issue with the code for mass distribution is the requirement to 
modify the theme.

This solution /seems/ to be ideal then, but it is not. As for 
bulletproof, it definitely is not.

The problem is that the ob_start function does not nest. There is no way 
to guarantee that nothing else will call ob_start between the 
start_output_collection() and send_output() functions. On a standard 
install with the default theme, there are a total of 45 apply_filters 
calls as well as requiring the theme's header.php code. At any point in 
executing any of these sections of code, some code may exist that makes 
use of ob_start.

So, this solution may be useful to you with your own site, but I would 
not recommend it at all for general public use as ob_start should only 
be used in tightly-controlled sections of code where you know for a fact 
that there is no chance that another instance of ob_start will occur.

In closing, you can do what you wish with this code, but I still 
recommend using the first set of code that I sent as it 1) won't cause 
site failure due to unknown code interfering with its operation and 2) 
won't cause other code to fail since it doesn't use the 
possibly-destructive ob_start function.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Lynne Pope wrote:
> Well, what I am trying to do is this...
>
> I am using a contact form plugin on my contact page. I have cleaned up XHTML
> validation errors on the form but the form uses Recaptcha for anti-spam
> assistance and the no-script fallback for Recaptcha is an iframe.
>
> Since DOCTYPE applies to the document and not to an overall site, I decided
> to get pendantic and change my XHTML 1.0 STRICT to XHTML 1.0 TRANSITIONAL
> for that one page alone.
> Now, for my own site I can simply make the contact page into a template and
> call a different header, but having got the bit between my teeth I decided
> it would be more useful if I could find a way to add a DOCTYPE override to
> the plugin.
>
> I didn't write the plugin (too lazy to write my own contact form) but
> realise that if I have issues with validation for it then others will have
> too. Ergo, if I can find a way to do this safely within the plugin itself
> the code then becomes reusable and worth contributing back.
>
> I'm not going to hassle the plugin developer over this as I realise not
> everyone cares if they have one page that doesn't validate. Besides, once I
> work out a way to do it without creating more than negligable performance
> issues this will be something I can reuse.
>
> Lynne
>
> 2009/1/19 Mike Schinkel <mikeschinkel@newclarity.net>
>
>   
>> Lynee:
>>
>> Does it even need to be in a plugin?  It this for this site only, or are
>> you trying to create generic functionality?  Can't you do just do something
>> like (in ~psudeo-code):
>>
>> <?php
>>
>> if ($_SERVER['REQUEST_URI']=='special_url') {
>>   echo '<Special DocType>';
>> } else {
>>   echo '<Regular DocType>';
>> }
>>
>> ?>
>>
>> -Mike Schinkel
>> http://mikeschinkel.com/custom-wordpress-plugins/
>>
>>
>> Lynne Pope wrote:
>>     
>>> Hi all,
>>> I am working on a site that is using XHTML 1.0 Strict but want to serve
>>> XHTML 1.0 Transitional on one page only. The page uses a plugin so the
>>> change to the doctype could go into the plugin.
>>>
>>> I can do a query in header.php but want to avoid unnecessary queries (why
>>> add an additional query to 300+ pages when only one is affected?) but
>>>       
>> cannot
>>     
>>> get an override working for the plugin.
>>>
>>> Any ideas?
>>>
>>> Lynne
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
From mikeschinkel at newclarity.net  Mon Jan 19 06:54:19 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jan 19 06:54:42 2009
Subject: [wp-hackers] Replace default doctype on one page only through
	plugin
In-Reply-To: <427667db0901182057g3395935o200813caad7b2b74@mail.gmail.com>
Message-ID: <19864062.201232348065852.JavaMail.DELL-1405$@Dell-1405>

"Lynne Pope" <lynne.pope@gmail.com>
> The filter method is good (thanks Chris), but perhaps 
> not quite as bulletproof as I would like for mass distribution.
> I'll keep playing and hoping for a brainwave ;)

Why not?  (I'm just curious to know your thoughts...)


-Mike Schinkel
http://mikeschinkel.com/
From mikeschinkel at newclarity.net  Mon Jan 19 06:57:04 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jan 19 06:57:22 2009
Subject: [wp-hackers] Replace default doctype on one page only through
	plugin
In-Reply-To: <19864062.201232348065852.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <21191032.221232348228923.JavaMail.DELL-1405$@Dell-1405>

Doh, nevermind. Just read Chris' reply.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Mike Schinkel" <mikeschinkel@newclarity.net>
To: wp-hackers@lists.automattic.com
Sent: Monday, January 19, 2009 1:54:19 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Replace default doctype on one page only through plugin

"Lynne Pope" <lynne.pope@gmail.com>
> The filter method is good (thanks Chris), but perhaps 
> not quite as bulletproof as I would like for mass distribution.
> I'll keep playing and hoping for a brainwave ;)

Why not?  (I'm just curious to know your thoughts...)


-Mike Schinkel
http://mikeschinkel.com/
From lynne.pope at gmail.com  Mon Jan 19 08:26:17 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon Jan 19 08:26:28 2009
Subject: [wp-hackers] Replace default doctype on one page only through 
	plugin
In-Reply-To: <49740C2C.2020203@gaarai.com>
References: <4973EE5C.6080602@gaarai.com>
	<16280167.01232337865896.JavaMail.DELL-1405$@Dell-1405>
	<427667db0901182015n4b7bfc83hbc27c9381e5a71d@mail.gmail.com>
	<49740C2C.2020203@gaarai.com>
Message-ID: <427667db0901190026v227f36c5wacaf995c3458edb3@mail.gmail.com>

Thanks Chris.
Both your examples work perfectly, of course (in case anyone reading this
wants to know too).

I will be sending my validation fixes to the plugin developer and will
probably blog about the different ways of achieving doctype changes in the
header. Not including the last snippet though - as you say, ob_start can be
a dangerous thing.

If you are happy for me to use your filter code in my post, please let me
know - and also let me know which URL you would like me to link back to when
I give you credit.

Cheers,
Lynne


2009/1/19 Gaarai <gaarai@gaarai.com>

> The idea I sent before works, but it would require modification of the
> theme.
>
> The only way I can see of doing this completely inside the plugin with not
> modification of the theme itself is by using the ob_start() function.
>
> For example:
>
>   <?php
>       if ( *$contact_page_displayed* ) {
>           add_action( 'get_header', 'start_output_collection', 1000 );
>           add_action( 'wp_head', 'send_output', 1000 );
>       }
>
>       function start_output_collection() {
>           ob_start();
>       }
>
>       function send_output() {
>           $header = ob_get_contents();
>           ob_end_clean();
>
>           $header = preg_replace( '|<!DOCTYPE[^>]*>|i',
>   '*<!DOCTYPE..>*', $header );
>
>           echo $header;
>       }
>   ?>
>
> I've tested this on my test site, and it works.
>
> There are two places of interest that I have made bold.
>
> The first one will have to be replaced with logic that determines whether
> or not the contact form is rendered on that page or not. This is completely
> dependent upon exactly which plugin you are using.
>
> The second one is the actual doctype to be output. I know what you are
> going for, but I shortened it to make the code look better in the email.
>
> Now, you just sent a message about wanting a bulletproof way of doing it.
> The way I sent before is bulletproof as it will always work. The main issue
> with the code for mass distribution is the requirement to modify the theme.
>
> This solution /seems/ to be ideal then, but it is not. As for bulletproof,
> it definitely is not.
>
> The problem is that the ob_start function does not nest. There is no way to
> guarantee that nothing else will call ob_start between the
> start_output_collection() and send_output() functions. On a standard install
> with the default theme, there are a total of 45 apply_filters calls as well
> as requiring the theme's header.php code. At any point in executing any of
> these sections of code, some code may exist that makes use of ob_start.
>
> So, this solution may be useful to you with your own site, but I would not
> recommend it at all for general public use as ob_start should only be used
> in tightly-controlled sections of code where you know for a fact that there
> is no chance that another instance of ob_start will occur.
>
> In closing, you can do what you wish with this code, but I still recommend
> using the first set of code that I sent as it 1) won't cause site failure
> due to unknown code interfering with its operation and 2) won't cause other
> code to fail since it doesn't use the possibly-destructive ob_start
> function.
>
> Chris Jean
> http://gaarai.com/
> http://wp-roadmap.com/
>
>
>
> Lynne Pope wrote:
>
>> Well, what I am trying to do is this...
>>
>> I am using a contact form plugin on my contact page. I have cleaned up
>> XHTML
>> validation errors on the form but the form uses Recaptcha for anti-spam
>> assistance and the no-script fallback for Recaptcha is an iframe.
>>
>> Since DOCTYPE applies to the document and not to an overall site, I
>> decided
>> to get pendantic and change my XHTML 1.0 STRICT to XHTML 1.0 TRANSITIONAL
>> for that one page alone.
>> Now, for my own site I can simply make the contact page into a template
>> and
>> call a different header, but having got the bit between my teeth I decided
>> it would be more useful if I could find a way to add a DOCTYPE override to
>> the plugin.
>>
>> I didn't write the plugin (too lazy to write my own contact form) but
>> realise that if I have issues with validation for it then others will have
>> too. Ergo, if I can find a way to do this safely within the plugin itself
>> the code then becomes reusable and worth contributing back.
>>
>> I'm not going to hassle the plugin developer over this as I realise not
>> everyone cares if they have one page that doesn't validate. Besides, once
>> I
>> work out a way to do it without creating more than negligable performance
>> issues this will be something I can reuse.
>>
>> Lynne
>>
>> 2009/1/19 Mike Schinkel <mikeschinkel@newclarity.net>
>>
>>
>>
>>> Lynee:
>>>
>>> Does it even need to be in a plugin?  It this for this site only, or are
>>> you trying to create generic functionality?  Can't you do just do
>>> something
>>> like (in ~psudeo-code):
>>>
>>> <?php
>>>
>>> if ($_SERVER['REQUEST_URI']=='special_url') {
>>>  echo '<Special DocType>';
>>> } else {
>>>  echo '<Regular DocType>';
>>> }
>>>
>>> ?>
>>>
>>> -Mike Schinkel
>>> http://mikeschinkel.com/custom-wordpress-plugins/
>>>
>>>
>>> Lynne Pope wrote:
>>>
>>>
>>>> Hi all,
>>>> I am working on a site that is using XHTML 1.0 Strict but want to serve
>>>> XHTML 1.0 Transitional on one page only. The page uses a plugin so the
>>>> change to the doctype could go into the plugin.
>>>>
>>>> I can do a query in header.php but want to avoid unnecessary queries
>>>> (why
>>>> add an additional query to 300+ pages when only one is affected?) but
>>>>
>>>>
>>> cannot
>>>
>>>
>>>> get an override working for the plugin.
>>>>
>>>> Any ideas?
>>>>
>>>> Lynne
>>>>
>>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at newclarity.net  Mon Jan 19 08:39:53 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jan 19 08:40:22 2009
Subject: [wp-hackers] Replace default doctype on one page only through
	plugin
In-Reply-To: <27390203.661232354271047.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <1482955.681232354396872.JavaMail.DELL-1405$@Dell-1405>

Gaarai <gaarai@gaarai.com> wrote:
> The problem is that the ob_start function does not nest. There is no 
> way to guarantee that nothing else will call ob_start between the
> start_output_collection() and send_output() functions. On a standard 
> install with the default theme, there are a total of 45 apply_filters 
> calls as well as requiring the theme's header.php code. At any point 
> in executing an of these sections of code, some code may exist that 
> makes use of ob_start.

I'm confused.  According to PHP.NET[1]:

   Output buffers are stackable, that is, you may call ob_start() 
   while another ob_start() is active. Just make sure that you call 
   ob_end_flush() the appropriate number of times. If multiple output 
   callback functions are active, output is being filtered sequentially 
   through each of them in nesting order. 

And this[2] explicitly says you can nest calls. Obviously, I'm missing something as your statement and PHP.NET seem to contradict. I'm sure it's my misunderstanding; I've been coding for 20 years but only PHP for two and only recently on a hard-core basis so I haven't learned all it's ins-and-outs of PHP. So I'm hoping you can help me better understand this apparent dichotomy. 

TIA.

-Mike Schinkel
http://mikeschinkel.com/custom-wordpress-plugins/

[1] http://us3.php.net/ob_start
[2] http://www.codewalkers.com/c/a/Miscellaneous/PHP-Output-Buffering/1/


From jeremy.visser at gmail.com  Mon Jan 19 11:07:59 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Mon Jan 19 11:08:13 2009
Subject: [wp-hackers] URIs ending like p=20090118
In-Reply-To: <6211936.1881232234855092.JavaMail.DELL-1405$@Dell-1405>
References: <6211936.1881232234855092.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <1232363279.7307.2.camel@rillian.narnia.sunriseroad.net>

On Sat, 2009-01-17 at 17:27 -0600, Mike Schinkel wrote:
> That direction is fraught with peril. My suggestion: bite the bullet
>  and use .htaccess; it's really not that complex.

And if you can't use .htaccess or mod_rewrite, permalinks like:

  /index.php/20090118-200

will be absolutely trivial to set up. IIRC, the syntax in the Permalinks
options would be:

  /index.php/%year%%monthnum%%day%-%postid%

The reason I put the %postid% on the end is to guarantee that the
permalink will be unique.

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From lynne.pope at gmail.com  Mon Jan 19 12:36:46 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon Jan 19 12:36:56 2009
Subject: [wp-hackers] Replace default doctype on one page only through 
	plugin
In-Reply-To: <1482955.681232354396872.JavaMail.DELL-1405$@Dell-1405>
References: <27390203.661232354271047.JavaMail.DELL-1405$@Dell-1405>
	<1482955.681232354396872.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <427667db0901190436p127d1e87h6e292b35fdac0132@mail.gmail.com>

Output buffering can be really tricky. ob_start starts a buffering process
that prevents anything being output to the browser until the output is sent
to the browser at the end of the request, or ob_end_flush (or ob_get_clean)
are used. Right? Well, if you are writing your own script that is not being
used with anyone else's work then its supposedly easy enough to control the
sequence in which code is being run (I say "supposedly" because I have
wasted hours with ob_start and these days prefer to just avoid it where
possible).
The big problems come in when things get out of sequence, or where code is
being processed differently to the way you expect. If you buffer output and
some other code closes a buffer, depending on the sequence within the stack,
you can find your output turning up in strange places. Or not showing up at
all.

So, if I was to run a plugin, say, that uses ob_start and another plugin
also uses it, plugin 2 could end up closing the buffer on plugin 1, or
outputting content from the wrong buffer, depending on the sequence in which
PHP processes it. The risk of things going wrong increases with every
instance of ob_start.  Because PHP closes all open buffering and outputs it
when the script executes, without the need for ob_end_flush or anything to
explicitly close the buffer, working out where things are going squiffy can
be a real nightmare.

This is simplified and I probably haven't explained it very well, but it
might give you an idea why its a bad idea to use it in plugins for
WordPress, unless you are prepared to have users complaining about
incompatibility with other plugins.

Cheers,
Lynne

2009/1/19 Mike Schinkel <mikeschinkel@newclarity.net>

> Gaarai <gaarai@gaarai.com> wrote:
> > The problem is that the ob_start function does not nest. There is no
> > way to guarantee that nothing else will call ob_start between the
> > start_output_collection() and send_output() functions. On a standard
> > install with the default theme, there are a total of 45 apply_filters
> > calls as well as requiring the theme's header.php code. At any point
> > in executing an of these sections of code, some code may exist that
> > makes use of ob_start.
>
> I'm confused.  According to PHP.NET[1]:
>
>   Output buffers are stackable, that is, you may call ob_start()
>   while another ob_start() is active. Just make sure that you call
>   ob_end_flush() the appropriate number of times. If multiple output
>   callback functions are active, output is being filtered sequentially
>   through each of them in nesting order.
>
> And this[2] explicitly says you can nest calls. Obviously, I'm missing
> something as your statement and PHP.NET seem to contradict. I'm sure it's
> my misunderstanding; I've been coding for 20 years but only PHP for two and
> only recently on a hard-core basis so I haven't learned all it's
> ins-and-outs of PHP. So I'm hoping you can help me better understand this
> apparent dichotomy.
>
> TIA.
>
> -Mike Schinkel
> http://mikeschinkel.com/custom-wordpress-plugins/
>
> [1] http://us3.php.net/ob_start
> [2] http://www.codewalkers.com/c/a/Miscellaneous/PHP-Output-Buffering/1/
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From gaarai at gaarai.com  Mon Jan 19 13:01:44 2009
From: gaarai at gaarai.com (Gaarai)
Date: Mon Jan 19 13:02:01 2009
Subject: [wp-hackers] Replace default doctype on one page only through
	plugin
In-Reply-To: <1482955.681232354396872.JavaMail.DELL-1405$@Dell-1405>
References: <1482955.681232354396872.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <497479B8.4020306@gaarai.com>

I've never seen that entry in the documentation. I just didn't 
understand how they could nest as there is nothing to separate one 
grouping of ob_start/ob_end_flush and another grouping. So, if ob_start 
calls do nest, how do the ob_get_contents calls know which level of 
contents to get, the first or the second?

Thinking about it more (since I was really tired when I made that 
response last night), I suppose it's possible that it forces nesting by 
using a stack. Thus, if I call ob_start, ob_start, $a = ob_get_contents, 
ob_end_flush, $b = ob_get_contents, ob_end_flush, $a will only contain 
the buffer from the most-recent ob_start call while $b contains the 
output buffer that was essentially on the stack and returned to the top 
when ob_end_flush was first called.

I still think that this is a bad idea though. Since the code I provided 
has such a huge gap between the ob_start and ob_end_flush calls, it's 
also possible for someone else to do this. Imagine that this theoretical 
code also latches into the wp_head action, is called before my 
send_output function, and calls ob_start. Now also imagine that this 
code does not call ob_end_flush until the shutdown action. Now we have 
mismatched nesting. There really isn't a way to prevent such issues as 
you can never know what code may interact with your code at some point 
down the line.

My stance remains that using ob_start in this manner is dangerous and 
adds a definitive point-of-failure to the code. So, my conclusion last 
night was correct, but the reason for it being correct was off a bit.

Now if ob_start somehow adopted a naming convention like an object model 
rather than being based off of a stack model, this could work. For 
example, imagine the following:

    <?php
        if ( $contact_page_displayed ) {
            add_action( 'get_header', 'start_output_collection', 1000 );
            add_action( 'wp_head', 'send_output', 1000 );
        }
       
        function start_output_collection() {
            global $my_header_output_buffer;
           
            $my_header_output_buffer = ob_start();
        }
       
        function send_output() {
            global $my_header_output_buffer;
           
            if ( false !== $my_header_output_buffer ) {
                $header = ob_get_contents( $my_header_output_buffer );
               
                if ( false === $header )
                    die( 'send_output() failed to retrieve header output
    buffer. File: ' . __FILE__ . ' on line: ' . __LINE__ );
               
                if ( false === ob_end_clean( $my_header_output_buffer ) )
                    error_log( 'send_output() received a failure when
    trying to remove an output buffer. File: ' . __FILE__ . ' on line: '
    . __LINE__ );
               
                $header = preg_replace( '|<!DOCTYPE[^>]*>|i',
    '<!DOCTYPE..>', $header );
               
                echo $header;
        }
    ?>

If such a mechanism as I've coded here could exist, then I would say 
that using ob_start for such applications would be viable. However, this 
is not the case, thus ob_start is still dangerous to use except in very 
tight sections of code where random code couldn't wander in and ruin the 
party.

For anyone reading this, the code above is theoretical code and won't 
function. I know, I tested it. Besides, it's based off of a premise of 
how code could function if specific PHP functions worked in a different 
manner. In other words, don't use it.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Mike Schinkel wrote:
> Gaarai <gaarai@gaarai.com> wrote:
>   
>> The problem is that the ob_start function does not nest. There is no 
>> way to guarantee that nothing else will call ob_start between the
>> start_output_collection() and send_output() functions. On a standard 
>> install with the default theme, there are a total of 45 apply_filters 
>> calls as well as requiring the theme's header.php code. At any point 
>> in executing an of these sections of code, some code may exist that 
>> makes use of ob_start.
>>     
>
> I'm confused.  According to PHP.NET[1]:
>
>    Output buffers are stackable, that is, you may call ob_start() 
>    while another ob_start() is active. Just make sure that you call 
>    ob_end_flush() the appropriate number of times. If multiple output 
>    callback functions are active, output is being filtered sequentially 
>    through each of them in nesting order. 
>
> And this[2] explicitly says you can nest calls. Obviously, I'm missing something as your statement and PHP.NET seem to contradict. I'm sure it's my misunderstanding; I've been coding for 20 years but only PHP for two and only recently on a hard-core basis so I haven't learned all it's ins-and-outs of PHP. So I'm hoping you can help me better understand this apparent dichotomy. 
>
> TIA.
>
> -Mike Schinkel
> http://mikeschinkel.com/custom-wordpress-plugins/
>
> [1] http://us3.php.net/ob_start
> [2] http://www.codewalkers.com/c/a/Miscellaneous/PHP-Output-Buffering/1/
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
From scribu at gmail.com  Mon Jan 19 13:36:52 2009
From: scribu at gmail.com (scribu)
Date: Mon Jan 19 13:37:03 2009
Subject: [wp-hackers] Conditinal inclusion of admin scripts
Message-ID: <349fe48b0901190536j7bfb05cbocc433876df68ac9d@mail.gmail.com>

I just did a print_r($wp_scripts) and noticed that ALL scripts used
throughout the 2.7 back-end are added on every page. For example, we have
the *media-upload* script on the Installed Plugins page etc.

Am I the only one who thinks that adding these scripts only on the pages
that actually use them would be a big time saver for admin page loads?

-- 
http://scribu.net
From wordpress at dd32.id.au  Mon Jan 19 14:04:09 2009
From: wordpress at dd32.id.au (DD32)
Date: Mon Jan 19 14:04:21 2009
Subject: [wp-hackers] Conditinal inclusion of admin scripts
In-Reply-To: <349fe48b0901190536j7bfb05cbocc433876df68ac9d@mail.gmail.com>
References: <349fe48b0901190536j7bfb05cbocc433876df68ac9d@mail.gmail.com>
Message-ID: <45055a190901190604x3588903k57a14a0f9da3d37@mail.gmail.com>

IIRC $wp_scripts holds the registered scripts, Not the list of scripts
which are actually enqueued.

2009/1/20 scribu <scribu@gmail.com>:
> I just did a print_r($wp_scripts) and noticed that ALL scripts used
> throughout the 2.7 back-end are added on every page. For example, we have
> the *media-upload* script on the Installed Plugins page etc.
>
> Am I the only one who thinks that adding these scripts only on the pages
> that actually use them would be a big time saver for admin page loads?
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From scribu at gmail.com  Mon Jan 19 14:10:17 2009
From: scribu at gmail.com (scribu)
Date: Mon Jan 19 14:10:28 2009
Subject: [wp-hackers] Conditinal inclusion of admin scripts
In-Reply-To: <45055a190901190604x3588903k57a14a0f9da3d37@mail.gmail.com>
References: <349fe48b0901190536j7bfb05cbocc433876df68ac9d@mail.gmail.com>
	<45055a190901190604x3588903k57a14a0f9da3d37@mail.gmail.com>
Message-ID: <349fe48b0901190610v3df866c3o93db24f7d4b621d1@mail.gmail.com>

On Mon, Jan 19, 2009 at 4:04 PM, DD32 <wordpress@dd32.id.au> wrote:

> IIRC $wp_scripts holds the registered scripts, Not the list of scripts
> which are actually enqueued.


That explains it. Thanks for the reply.

-- 
http://scribu.net
From jason at intraffic.net  Mon Jan 19 17:06:16 2009
From: jason at intraffic.net (Jason Webster)
Date: Mon Jan 19 17:06:29 2009
Subject: [wp-hackers] Filter/Action for non-standard front page?
In-Reply-To: <29335124.141232340288364.JavaMail.DELL-1405$@Dell-1405>
References: <29335124.141232340288364.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <4974B308.8030804@intraffic.net>

There is always the actual MySQL query browser, available straight from the horses mouth: 
<http://dev.mysql.com/downloads/gui-tools/5.0.html>

On 18/01/2009 8:44 PM, Mike Schinkel wrote:
> Eric:
>
> So I just downloaded the trial of NaviCat v8 for MySQL and it looks much nicer than I remember.  I'll try it out for the next 30 days and so if it turns into a keeper.
>
> Thanks.
>
> -Mike Schinkel
> http://mikeschinkel.com/
>
> ----- Original Message -----
> From: "Eric Marden"<wp@xentek.net>
> To: wp-hackers@lists.automattic.com
> Sent: Sunday, January 18, 2009 11:00:59 PM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] Filter/Action for non-standard front page?
>
>> I've been using HeidiSQL on Windows to interact directly with the
>> wp_options table
>
> I'm a big fan of Navicat for that (http://www.navicat.com/) but its
> not free.
>
> -e
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Mon Jan 19 19:13:25 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jan 19 19:14:16 2009
Subject: [wp-hackers] Filter/Action for non-standard front page?
In-Reply-To: <4974B308.8030804@intraffic.net>
Message-ID: <25902263.801232392410334.JavaMail.DELL-1405$@Dell-1405>

Thanks, but it's not a great tool compared to the other options.  
More importantly it doesn't work well with WAMP because of non-standard file locations (or didn't when i tried it.)
(Of course I've long since gone with standard installs of PHP & MySQL so that's no longer an issue for me.)

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Jason Webster" <jason@intraffic.net>
To: wp-hackers@lists.automattic.com
Sent: Monday, January 19, 2009 12:06:16 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Filter/Action for non-standard front page?

There is always the actual MySQL query browser, available straight from the horses mouth: 
<http://dev.mysql.com/downloads/gui-tools/5.0.html>

From otto at ottodestruct.com  Mon Jan 19 22:15:03 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jan 19 22:15:16 2009
Subject: [wp-hackers] Replace default doctype on one page only through
	plugin
In-Reply-To: <497479B8.4020306@gaarai.com>
References: <1482955.681232354396872.JavaMail.DELL-1405$@Dell-1405>
	<497479B8.4020306@gaarai.com>
Message-ID: <161617690901191415i63433dekdd7270dbb108c350@mail.gmail.com>

It you're worried about nesting, then use a callback and don't call ob_end.

ob_start('plugin_callback');

function plugin_callback($buffer) {
return preg_replace( '|<!DOCTYPE[^>]*>|i', '*<!DOCTYPE..>*', $buffer);
}

And there you go. The callback will get called at end of execution.

-Otto
From mikeschinkel at newclarity.net  Mon Jan 19 22:39:42 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jan 19 22:40:36 2009
Subject: [wp-hackers] Replace default doctype on one page only through
	plugin
In-Reply-To: <161617690901191415i63433dekdd7270dbb108c350@mail.gmail.com>
Message-ID: <24694400.901232404788920.JavaMail.DELL-1405$@Dell-1405>

> And there you go. The callback will get called at end of execution.

Awesome!

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Otto" <otto@ottodestruct.com>
To: wp-hackers@lists.automattic.com
Sent: Monday, January 19, 2009 5:15:03 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Replace default doctype on one page only through plugin

It you're worried about nesting, then use a callback and don't call ob_end.

ob_start('plugin_callback');

function plugin_callback($buffer) {
return preg_replace( '|<!DOCTYPE[^>]*>|i', '*<!DOCTYPE..>*', $buffer);
}

And there you go. The callback will get called at end of execution.

-Otto
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mailapera at gmail.com  Tue Jan 20 00:09:06 2009
From: mailapera at gmail.com (mailapera)
Date: Tue Jan 20 00:09:15 2009
Subject: [wp-hackers] Adding Google map inside post edit/writing
Message-ID: <e98dfae80901191609g66f4cfces3e2b98e9a4be2040@mail.gmail.com>

I am trying to add a google map to get the geo coordinates by clicking on
the map. The map needs to call a javascript from the google site plus to
load a javascript script in the file. I am trying to accomplish this with a
plugin but I am having a hard time with:

1)calling the external script and loading the script in the file
2)finding the hook to make the map appear on the post edit/write page
without disrupting any other WP activity

Ideas?

Thanks!
From johnbillion+wp at gmail.com  Tue Jan 20 02:23:41 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Tue Jan 20 02:23:57 2009
Subject: [wp-hackers] My new utility plugin for plugin developers
In-Reply-To: <4947ECAC.3010500@kpdesign.net>
References: <1fa535a70812160834x73f004f4ra436b762d06e99cd@mail.gmail.com>
	<4947ECAC.3010500@kpdesign.net>
Message-ID: <1fa535a70901191823i798085bfq1fe5a9160809c1cf@mail.gmail.com>

I've just released version 0.2 of this plugin for those who are
interested. More info here:
<http://lud.icro.us/wordpress-plugin-info/> .

John.

2008/12/16 Kim Parsell <kparsell-wp@kpdesign.net>
>
> Will definitely be giving this a try and will let you know how it works out!
>
> Kim
>
> --------------------
>
> John Blackbourn wrote:
>>
>> * Scenario:
>>
>> You're a plugin author with plugins in the WP Plugin Directory. You
>> blog about the plugins at your own blog, and you've probably got some
>> pages on your blog about these plugins too.
>>
>> * Problem:
>>
>> You've just updated all your plugins so they're 2.7 compatible, or
>> maybe you didn't even need to update them but just changed the readme
>> file to reflect that they do in fact work in 2.7. Now you're going to
>> have to go and edit all the posts/pages on your blog to reflect these
>> changes.
>>
>> * Wouldn't it be nice if:
>>
>> The various attributes of your plugins were automatically updated on
>> your blog whenever you commited a change to the WP Plugin Directory
>> SVN repo?
>>
>> * How about using WordPress shortcodes to type this into your posts/pages:
>>
>> "My plugin is compatible with WordPress version [plugin
>> requires_at_least] and higher. I've successfully tested it up to
>> version [plugin tested_up_to]."
>>
>> Voila. All your posts/pages automatically stay up to date with the
>> details of your plugin in the WP Plugin Directory SVN repo.
>>
>> * Interested?
>>
>> I've written a plugin that provides this functionality and I'm looking
>> for some feedback to see if anyone else finds it useful. Find the
>> plugin at: <http://lud.icro.us/wordpress-plugin-info/>. The plugin
>> isn't yet feature complete and I will be updating it over the next few
>> days, but feel free to take a look.
>>
>> John
>> (johnbillion)
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From alex at dunae.ca  Tue Jan 20 06:07:00 2009
From: alex at dunae.ca (Alex Dunae)
Date: Tue Jan 20 06:07:12 2009
Subject: [wp-hackers] delete_attachment hook firing too soon to be useful
Message-ID: <0139ee5c-5c16-421e-a40c-1b712b261de4@s9g2000prg.googlegroups.com>

In wp_delete_attachment, the delete_attachment action is fired once
all the useful info in the DB is already gone.

I need to be able to figure out the parent of an attachment as it's
being delete to update a playlist file.  Is there any other way, or
should this become a Trac feature request?

FWIW, I'm not the first to be stumped: http://wordpress.org/support/topic/226773

Alex
From technocraze at gmail.com  Tue Jan 20 07:48:33 2009
From: technocraze at gmail.com (technocraze)
Date: Tue Jan 20 07:48:51 2009
Subject: [wp-hackers] A strange problem with wpmu-1.3.3
In-Reply-To: <e1202cb10901120840t60ea6a0ckc613f9357dc66dca@mail.gmail.com>
References: <1fe4fa230901120806t4d9eb518q836bca16bed76cc0@mail.gmail.com>
	<e1202cb10901120840t60ea6a0ckc613f9357dc66dca@mail.gmail.com>
Message-ID: <497581D1.1090109@gmail.com>

Hi,

I have been customising wordpress-1.3.3 and i am facing a strange problem..

When i upload an image file, the file is getting uploaded, but is not 
displayed..  i tried the file url in a new browser and what i could see 
is just the filename displayed in firefox, while in IE nothing displayed.

I checked with blogs.php in wp-content dir, and echoed some statement.. 
the control goes fine, and the file size is also correct.. 

When i commented the following line,  the image content displayed as 
junk characters, which indicates that the file is actually red and sent 
to the browser..
@header( 'Content-type: ' . $mimetype ); // always send this

Could not find out the problem..

The same problem does not appear, when i installed a fresh copy of 1.3.3 
downloaded..

Regards,
Senthil



From jeremy.visser at gmail.com  Tue Jan 20 17:57:54 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Tue Jan 20 07:58:11 2009
Subject: [wp-hackers] A strange problem with wpmu-1.3.3
In-Reply-To: <497581D1.1090109@gmail.com>
References: <1fe4fa230901120806t4d9eb518q836bca16bed76cc0@mail.gmail.com>
	<e1202cb10901120840t60ea6a0ckc613f9357dc66dca@mail.gmail.com>
	<497581D1.1090109@gmail.com>
Message-ID: <1232474274.31725.2.camel@rillian.narnia.sunriseroad.net>

On Tue, 2009-01-20 at 13:18 +0530, technocraze wrote:
> I have been customising wordpress-1.3.3 and i am facing a strange problem..
> 
> The same problem does not appear, when i installed a fresh copy of 1.3.3 
> downloaded..

WPMU 1.3.3 is horribly outdated. Nobody's going to pay much attention to
you unless you get your oven mitts on at least the 2.6.x branch (or
trunk, as it's looking pretty good at the moment).

Interesting that IE trips over on the mime-type. Usually, I find that IE
just ignores the mime-type and displays stuff how it pleases anyway.
(IE displaying HTML when I'm sending text/plain, I'm looking at you.)

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From jayarjo at gmail.com  Tue Jan 20 08:16:04 2009
From: jayarjo at gmail.com (dave jaggy)
Date: Tue Jan 20 08:16:16 2009
Subject: [wp-hackers] www top no-www redirection?
Message-ID: <9aa12a490901200016m2da2328bvd0a4fcc3a460d3f7@mail.gmail.com>

Client has asked me to arrange redirection of all no-www pages to www
prefixed ones. I told him that no-www way is much more easier and
straightforward, but he just want www. But that's not an actual
problem. I've tried to rewrite headers with 301 moved permanently, but
something wierd popped out. I do a redirection to www.*.com and then
SOMETHING (don't know what or where) does redirection back to no-www
version of page name. But that's half trouble again - IT does 302
temporary redirect... huh?

I'm not sure what does that or where. It could be something in apache
conf, something in .htaccess or even in wordpress. I just want to make
sure that that's not something that WP core does by itself.

Dave
From super.pengki at kasatmata.net  Tue Jan 20 08:34:30 2009
From: super.pengki at kasatmata.net (Agung Pengki)
Date: Tue Jan 20 08:34:42 2009
Subject: [wp-hackers] www top no-www redirection?
In-Reply-To: <9aa12a490901200016m2da2328bvd0a4fcc3a460d3f7@mail.gmail.com>
References: <9aa12a490901200016m2da2328bvd0a4fcc3a460d3f7@mail.gmail.com>
Message-ID: <3e954f9f0901200034p1140c345r15e867c255808cf@mail.gmail.com>

On Tue, Jan 20, 2009 at 3:16 PM, dave jaggy <jayarjo@gmail.com> wrote:

> Client has asked me to arrange redirection of all no-www pages to www
> prefixed ones. I told him that no-www way is much more easier and
> straightforward, but he just want www. But that's not an actual
> problem. I've tried to rewrite headers with 301 moved permanently, but
> something wierd popped out. I do a redirection to www.*.com and then
> SOMETHING (don't know what or where) does redirection back to no-www
> version of page name. But that's half trouble again - IT does 302
> temporary redirect... huh?
>
> I'm not sure what does that or where. It could be something in apache
> conf, something in .htaccess or even in wordpress. I just want to make
> sure that that's not something that WP core does by itself.
>
> Dave


have you check 'siteurl' and 'home' in #_options table ?

or update settings from  General Setting for WordPress address (URL)
and Blog address (URL).
From jayarjo at gmail.com  Tue Jan 20 09:35:48 2009
From: jayarjo at gmail.com (dave jaggy)
Date: Tue Jan 20 09:35:59 2009
Subject: [wp-hackers] www top no-www redirection?
In-Reply-To: <3e954f9f0901200034p1140c345r15e867c255808cf@mail.gmail.com>
References: <9aa12a490901200016m2da2328bvd0a4fcc3a460d3f7@mail.gmail.com>
	<3e954f9f0901200034p1140c345r15e867c255808cf@mail.gmail.com>
Message-ID: <9aa12a490901200135h28bee3f7u1a0afe247407c15e@mail.gmail.com>

Ouch... what was that? Is it how it works generally?

On Tue, Jan 20, 2009 at 12:34 PM, Agung Pengki
<super.pengki@kasatmata.net> wrote:
> On Tue, Jan 20, 2009 at 3:16 PM, dave jaggy <jayarjo@gmail.com> wrote:
>
>> Client has asked me to arrange redirection of all no-www pages to www
>> prefixed ones. I told him that no-www way is much more easier and
>> straightforward, but he just want www. But that's not an actual
>> problem. I've tried to rewrite headers with 301 moved permanently, but
>> something wierd popped out. I do a redirection to www.*.com and then
>> SOMETHING (don't know what or where) does redirection back to no-www
>> version of page name. But that's half trouble again - IT does 302
>> temporary redirect... huh?
>>
>> I'm not sure what does that or where. It could be something in apache
>> conf, something in .htaccess or even in wordpress. I just want to make
>> sure that that's not something that WP core does by itself.
>>
>> Dave
>
>
> have you check 'siteurl' and 'home' in #_options table ?
>
> or update settings from  General Setting for WordPress address (URL)
> and Blog address (URL).
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From andre.renaut at gmail.com  Tue Jan 20 09:42:43 2009
From: andre.renaut at gmail.com (=?UTF-8?Q?andr=C3=A9_renaut?=)
Date: Tue Jan 20 09:47:04 2009
Subject: [wp-hackers] RAdding Google map inside post edit/writing
Message-ID: <8810a71a0901200142u116f34fdi878937ab26e2196@mail.gmail.com>

I think there are plenty of plugins doing this
From mailapera at gmail.com  Tue Jan 20 11:28:23 2009
From: mailapera at gmail.com (mailapera)
Date: Tue Jan 20 11:28:36 2009
Subject: [wp-hackers] RAdding Google map inside post edit/writing
In-Reply-To: <8810a71a0901200142u116f34fdi878937ab26e2196@mail.gmail.com>
References: <8810a71a0901200142u116f34fdi878937ab26e2196@mail.gmail.com>
Message-ID: <e98dfae80901200328u27451af0o385b768872b30b2c@mail.gmail.com>

Thanks for the reply...I have searched everywhere but could not find
anything..I mean NOTHING, really...

I would really appreciate if you can find one (or similar) and point me
there

Thanks again

On Tue, Jan 20, 2009 at 10:42 AM, andr? renaut <andre.renaut@gmail.com>wrote:

> I think there are plenty of plugins doing this
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mark.cunningham at gmail.com  Tue Jan 20 11:41:02 2009
From: mark.cunningham at gmail.com (Mark Cunningham)
Date: Tue Jan 20 11:41:17 2009
Subject: [wp-hackers] RAdding Google map inside post edit/writing
In-Reply-To: <e98dfae80901200328u27451af0o385b768872b30b2c@mail.gmail.com>
References: <8810a71a0901200142u116f34fdi878937ab26e2196@mail.gmail.com>
	<e98dfae80901200328u27451af0o385b768872b30b2c@mail.gmail.com>
Message-ID: <ee3949160901200341w35fd0deel8930dcee75493ca2@mail.gmail.com>

2009/1/20 mailapera <mailapera@gmail.com>:
> Thanks for the reply...I have searched everywhere but could not find
> anything..I mean NOTHING, really...
>
> I would really appreciate if you can find one (or similar) and point me
> there

GeoMashup seems to be a popular one:
http://www.cyberhobo.net/downloads/geo-mashup-plugin/

-- 
http://thedeadone.net
http://lostheroesrpg.com
http://irishgamingwiki.com
From if.website at gmail.com  Tue Jan 20 11:52:12 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue Jan 20 11:52:25 2009
Subject: [wp-hackers] www top no-www redirection?
In-Reply-To: <9aa12a490901200016m2da2328bvd0a4fcc3a460d3f7@mail.gmail.com>
References: <9aa12a490901200016m2da2328bvd0a4fcc3a460d3f7@mail.gmail.com>
Message-ID: <674b4a3b0901200352h253ad2f3tf712f839099e9b80@mail.gmail.com>

On Tue, Jan 20, 2009 at 2:16 AM, dave jaggy <jayarjo@gmail.com> wrote:
> I do a redirection to www.*.com and then
> SOMETHING (don't know what or where) does redirection back to no-www
> version of page name. But that's half trouble again - IT does 302
> temporary redirect... huh?
>
> I'm not sure what does that or where. It could be something in apache
> conf, something in .htaccess or even in wordpress. I just want to make
> sure that that's not something that WP core does by itself.

This behavior is done by WordPress core [1].  WordPress will redirect
to whatever  is specified by the "home" option, which is called "Blog
address (URL)" on the Settings > General admin page.

For future support issues, please go to the WordPress support forums
[2].  This mailing list is meant to be concerned with WP development
issues.

[1] http://markjaquith.wordpress.com/2007/09/25/wordpress-23-canonical-urls/
[2] http://wordpress.org/support/
From scribu at gmail.com  Tue Jan 20 13:34:15 2009
From: scribu at gmail.com (scribu)
Date: Tue Jan 20 13:34:27 2009
Subject: [wp-hackers] Adding Google map inside post edit/writing
In-Reply-To: <e98dfae80901191609g66f4cfces3e2b98e9a4be2040@mail.gmail.com>
References: <e98dfae80901191609g66f4cfces3e2b98e9a4be2040@mail.gmail.com>
Message-ID: <349fe48b0901200534r60736e1ct6a58cc7454a62f1d@mail.gmail.com>

I think you should put the map inside a meta box. See the add_meta_box()
function.

On Tue, Jan 20, 2009 at 2:09 AM, mailapera <mailapera@gmail.com> wrote:

> I am trying to add a google map to get the geo coordinates by clicking on
> the map. The map needs to call a javascript from the google site plus to
> load a javascript script in the file. I am trying to accomplish this with a
> plugin but I am having a hard time with:
>
> 1)calling the external script and loading the script in the file
> 2)finding the hook to make the map appear on the post edit/write page
> without disrupting any other WP activity
>
> Ideas?
>
> Thanks!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net
From yahgrp at poplarware.com  Tue Jan 20 14:57:54 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Tue Jan 20 14:56:00 2009
Subject: [wp-hackers] Adding Google map inside post edit/writing
In-Reply-To: <e98dfae80901191609g66f4cfces3e2b98e9a4be2040@mail.gmail.com>
References: <e98dfae80901191609g66f4cfces3e2b98e9a4be2040@mail.gmail.com>
Message-ID: <4975E672.4020407@poplarware.com>

My Routes plugin does this.
     http://poplarware.com/routesplugin.html

For my benefit, what terms did you try in your Google search? I might 
try to add them to the plugin page so the next person can find it. :)

   --Jennifer

mailapera wrote:
> I am trying to add a google map to get the geo coordinates by clicking on
> the map. 

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com

Drupal/WordPress Sites, Themes, Modules/Plugins
Custom Web Programming, Web Databases
PHP, Perl, MySQL, JavaScript, XML, AJAX

From mailapera at gmail.com  Tue Jan 20 16:57:48 2009
From: mailapera at gmail.com (mailapera)
Date: Tue Jan 20 16:58:00 2009
Subject: [wp-hackers] Adding Google map inside post edit/writing
In-Reply-To: <4975E672.4020407@poplarware.com>
References: <e98dfae80901191609g66f4cfces3e2b98e9a4be2040@mail.gmail.com>
	<4975E672.4020407@poplarware.com>
Message-ID: <e98dfae80901200857w3b09cea7ve84633bec940e3fc@mail.gmail.com>

Thanks for the replies..unfortunately neither Geo Mashup nor Routes does
what I need.

I am now pretty sure I have not explained myself correctly. After seeing the
plugins mentioned above, I can say that what I need is pretty basic.

My improved explanation: I need to insert a google map on my post write/edit
page; this map will have zooming and dragging capabilities, in addition to
showing the default map view, and one key feature to get the geo coordinates
of the point clicked on the map. I already have the JS to do this, but I
need to find a way for the map to just show up in the post write/edit page.

The map will have absolutely no use in the "live" website, but will only be
a tool for users to get the geo coordinates of a specific location while
they are writing the post.

I am also working on the add_meta_box() solution, but I still cannot figure
out how to make the JS work in the plugin..




On Tue, Jan 20, 2009 at 3:57 PM, Jennifer Hodgdon <yahgrp@poplarware.com>wrote:

> My Routes plugin does this.
>    http://poplarware.com/routesplugin.html
>
> For my benefit, what terms did you try in your Google search? I might try
> to add them to the plugin page so the next person can find it. :)
>
>  --Jennifer
>
> mailapera wrote:
>
>> I am trying to add a google map to get the geo coordinates by clicking on
>> the map.
>>
>
> --
> Jennifer Hodgdon * Poplar ProductivityWare
> www.poplarware.com
>
> Drupal/WordPress Sites, Themes, Modules/Plugins
> Custom Web Programming, Web Databases
> PHP, Perl, MySQL, JavaScript, XML, AJAX
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From derek at amphibian.info  Tue Jan 20 18:27:18 2009
From: derek at amphibian.info (Derek Hogue)
Date: Tue Jan 20 18:27:33 2009
Subject: [wp-hackers] Plugin queries executed even when plugin is not being
	called?
Message-ID: <03ED9DC2-2D24-4AF1-B385-DF4F8F454C20@amphibian.info>

Hey all - is this expected behaviour, or have I coded this incorrectly  
perhaps?

My plugin makes its own queries (to its own DB tables) through $wpdb.   
These queries are all within functions in my plugin files, and these  
functions are called via either template tags, my plugin's widget or  
my plugin's shortcodes.

However, as soon as my plugin is activated, WP's queries shoot up on  
every single page load, as though every query within every function in  
the plugin is being executed regardless of whether you're on a page  
that actually calls any of these functions, or whether you even have  
called these functions anywhere in your theme.

Any ideas as to why this might be?  Needless to say, my users are a  
little miffed at this.

Thanks,
Derek
--
http://amphibian.info



From mdmartz at sivel.net  Tue Jan 20 18:46:49 2009
From: mdmartz at sivel.net (Matt Martz)
Date: Tue Jan 20 18:46:59 2009
Subject: [wp-hackers] Plugin queries executed even when plugin is not
	being called?
In-Reply-To: <03ED9DC2-2D24-4AF1-B385-DF4F8F454C20@amphibian.info>
References: <03ED9DC2-2D24-4AF1-B385-DF4F8F454C20@amphibian.info>
Message-ID: <518fa9630901201046g50a2339w398e361eb165ca3d@mail.gmail.com>

On Tue, Jan 20, 2009 at 1:27 PM, Derek Hogue <derek@amphibian.info> wrote:
> Hey all - is this expected behaviour, or have I coded this incorrectly
> perhaps?
>
> My plugin makes its own queries (to its own DB tables) through $wpdb.  These
> queries are all within functions in my plugin files, and these functions are
> called via either template tags, my plugin's widget or my plugin's
> shortcodes.
>
> However, as soon as my plugin is activated, WP's queries shoot up on every
> single page load, as though every query within every function in the plugin
> is being executed regardless of whether you're on a page that actually calls
> any of these functions, or whether you even have called these functions
> anywhere in your theme.
>
> Any ideas as to why this might be?  Needless to say, my users are a little
> miffed at this.

Perhaps giving us the url to the plugin would be helpful so we could
look at the code and help more efficiently.


-- 
Matt Martz
matt@sivel.net
From jer-wphackers at simianuprising.com  Tue Jan 20 19:30:20 2009
From: jer-wphackers at simianuprising.com (Jeremy Clarke)
Date: Tue Jan 20 19:30:32 2009
Subject: [wp-hackers] Plugin queries executed even when plugin is not 
	being called?
In-Reply-To: <518fa9630901201046g50a2339w398e361eb165ca3d@mail.gmail.com>
References: <03ED9DC2-2D24-4AF1-B385-DF4F8F454C20@amphibian.info>
	<518fa9630901201046g50a2339w398e361eb165ca3d@mail.gmail.com>
Message-ID: <e1202cb10901201130k533944b4jc527a367049d4387@mail.gmail.com>

Try http://wordpress.org/extend/plugins/wptuner/ , it will show you
exactly which queries are being done as well as which files are
calling the functions.

If you're using any hooks they may be firing more often than you
think, so maybe you need to add more conditionals of some kind in the
hooking function. That would be a good place to start looking if
WP-Tuner doesn't make it clear what the problem is.

-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From ozh at planetozh.com  Tue Jan 20 19:55:41 2009
From: ozh at planetozh.com (Ozh)
Date: Tue Jan 20 19:56:00 2009
Subject: [wp-hackers] Seeking some advice
Message-ID: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>

Ola peeps

I'm about to migrate a site from an old dusty homemade perl solution to WP.
This site has:
- news & comments (ok, that's blogging)
- polls (ok, Democracy or Polldady or whatever)
- forums (ok, PunBB bridge already exists or won't be hard to code)
- "columns": (selected) users have a column of their own where they
can write about anything they'd like, and people can comment. Kind of
like a sideblog for registered users.

This last feature has got me perplex: what you guys think about the
best way to implement this in WP?

Cheers

Ozh
-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
From mikeschinkel at newclarity.net  Tue Jan 20 20:09:42 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jan 20 20:10:16 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
Message-ID: <30215611.621232482188374.JavaMail.DELL-1405$@Dell-1405>

WPMU?

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Ozh" <ozh@planetozh.com>
To: wp-hackers@lists.automattic.com
Sent: Tuesday, January 20, 2009 2:55:41 PM GMT -05:00 US/Canada Eastern
Subject: [wp-hackers] Seeking some advice

Ola peeps

I'm about to migrate a site from an old dusty homemade perl solution to WP.
This site has:
- news & comments (ok, that's blogging)
- polls (ok, Democracy or Polldady or whatever)
- forums (ok, PunBB bridge already exists or won't be hard to code)
- "columns": (selected) users have a column of their own where they
can write about anything they'd like, and people can comment. Kind of
like a sideblog for registered users.

This last feature has got me perplex: what you guys think about the
best way to implement this in WP?

Cheers

Ozh
-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From paul at codehooligans.com  Tue Jan 20 20:57:27 2009
From: paul at codehooligans.com (Paul)
Date: Tue Jan 20 20:57:39 2009
Subject: [wp-hackers] Looking for a way to add a second rich editor to the
	Page form
Message-ID: <0A76710F-A552-4059-A7B3-1E5DC9247D1A@codehooligans.com>

The subject pretty much says it all. I'm looking for a clean and  
simple way to add a second WYSIWYG textarea to the Page form. I have  
the plugin creating the textarea field but the client really needs  
this to be rich so they don't have to type all the html.

Is this doable? Suggestions?

Paul
From info at mindsharestudios.com  Tue Jan 20 21:00:05 2009
From: info at mindsharestudios.com (Mindshare Studios)
Date: Tue Jan 20 21:00:20 2009
Subject: [wp-hackers] Looking for a way to add a second rich editor to the
	Page form
In-Reply-To: <0A76710F-A552-4059-A7B3-1E5DC9247D1A@codehooligans.com>
References: <0A76710F-A552-4059-A7B3-1E5DC9247D1A@codehooligans.com>
Message-ID: <89f0f8d50901201300t62034b18xa35092bc4750d9e2@mail.gmail.com>

The More Fields plugin does this.
http://labs.dagensskiva.com/plugins/more-fields/

--
Damian

On Tue, Jan 20, 2009 at 1:57 PM, Paul <paul@codehooligans.com> wrote:

> The subject pretty much says it all. I'm looking for a clean and simple way
> to add a second WYSIWYG textarea to the Page form. I have the plugin
> creating the textarea field but the client really needs this to be rich so
> they don't have to type all the html.
>
> Is this doable? Suggestions?
>
> Paul
From derek at amphibian.info  Tue Jan 20 21:13:58 2009
From: derek at amphibian.info (Derek Hogue)
Date: Tue Jan 20 21:14:10 2009
Subject: [wp-hackers] Re: Plugin queries executed even when plugin is not
	being called?
In-Reply-To: <518fa9630901201046g50a2339w398e361eb165ca3d@mail.gmail.com>
References: <03ED9DC2-2D24-4AF1-B385-DF4F8F454C20@amphibian.info> 
	<518fa9630901201046g50a2339w398e361eb165ca3d@mail.gmail.com>
Message-ID: <367d58d4-3bf4-45d9-9667-fc5ea57c12cb@n21g2000vba.googlegroups.com>

Hey Matt - fair enough, the plugin is called GigPress:
http://wordpress.org/extend/plugins/gigpress/

Have a peek if you care?

Jeremy - thanks for the suggestion of WP-Tuner - I'll check it out,
and perhaps suggest some of my users that are having trouble do the
same and send me the results.  Will also look into my hooks ... though
I'm sure I've got them pretty-well-wrapped in conditionals already.

Thanks,
Derek

On Jan 20, 2:46?pm, "Matt Martz" <mdma...@sivel.net> wrote:
>
> Perhaps giving us the url to the plugin would be helpful so we could
> look at the code and help more efficiently.
>
> --
> Matt Martz
> m...@sivel.net
> _______________________________________________
> wp-hackers mailing list
> wp-hack...@lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers
From yahgrp at poplarware.com  Tue Jan 20 21:24:31 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Tue Jan 20 21:22:31 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
References: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
Message-ID: <4976410F.1030906@poplarware.com>

Ozh wrote:
> I'm about to migrate a site from an old dusty homemade perl solution to WP.
> This site has:
> - news & comments (ok, that's blogging)
> - polls (ok, Democracy or Polldady or whatever)
> - forums (ok, PunBB bridge already exists or won't be hard to code)
> - "columns": (selected) users have a column of their own where they
> can write about anything they'd like, and people can comment. Kind of
> like a sideblog for registered users.

This "columns" feature sounds to me like more blogging, with 
registered users allowed to create blog posts. You would probably want 
to then restrict the main blog listing to particular authors, and use 
author archives to list each registered user's "columns".

However, why exactly do you want to use WP? I would probably build 
this site in Drupal if I needed all those features, rather than 
hacking together WP with a forum and poll and all that. Right tool for 
the right job...

    --Jennifer

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com

Drupal/WordPress Sites, Themes, Modules/Plugins
Custom Web Programming, Web Databases
PHP, Perl, MySQL, JavaScript, XML, AJAX

From ncrice at gmail.com  Tue Jan 20 21:05:32 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue Jan 20 21:25:09 2009
Subject: [wp-hackers] Looking for a way to add a second rich editor to the
	Page form
In-Reply-To: <89f0f8d50901201300t62034b18xa35092bc4750d9e2@mail.gmail.com>
References: <0A76710F-A552-4059-A7B3-1E5DC9247D1A@codehooligans.com>
	<89f0f8d50901201300t62034b18xa35092bc4750d9e2@mail.gmail.com>
Message-ID: <862d087f0901201305t6bd37359r2126069fa1486fcf@mail.gmail.com>

I would be curious to know the answer to this as well.  If anyone knows
anything, or finds anything out, please let the list know.

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Tue, Jan 20, 2009 at 4:00 PM, Mindshare Studios <
info@mindsharestudios.com> wrote:

> The More Fields plugin does this.
> http://labs.dagensskiva.com/plugins/more-fields/
>
> --
> Damian
>
> On Tue, Jan 20, 2009 at 1:57 PM, Paul <paul@codehooligans.com> wrote:
>
> > The subject pretty much says it all. I'm looking for a clean and simple
> way
> > to add a second WYSIWYG textarea to the Page form. I have the plugin
> > creating the textarea field but the client really needs this to be rich
> so
> > they don't have to type all the html.
> >
> > Is this doable? Suggestions?
> >
> > Paul
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jer-wphackers at simianuprising.com  Tue Jan 20 22:00:44 2009
From: jer-wphackers at simianuprising.com (Jeremy Clarke)
Date: Tue Jan 20 22:00:56 2009
Subject: [wp-hackers] Adding Google map inside post edit/writing
In-Reply-To: <e98dfae80901200857w3b09cea7ve84633bec940e3fc@mail.gmail.com>
References: <e98dfae80901191609g66f4cfces3e2b98e9a4be2040@mail.gmail.com>
	<4975E672.4020407@poplarware.com>
	<e98dfae80901200857w3b09cea7ve84633bec940e3fc@mail.gmail.com>
Message-ID: <e1202cb10901201400p313d8e0dy443fb1f28fe6416b@mail.gmail.com>

To load the script on the editing page you'll probably want to use
http://codex.wordpress.org/Function_Reference/wp_enqueue_script . That
won't help you deal with any conflicts you're experiencing (which is
what it sounds like), but it's the system for loading JS at the right
time in the admin.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org
From ozh at planetozh.com  Tue Jan 20 22:12:33 2009
From: ozh at planetozh.com (Ozh)
Date: Tue Jan 20 22:12:45 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <4976410F.1030906@poplarware.com>
References: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
	<4976410F.1030906@poplarware.com>
Message-ID: <ae81acd10901201412p468a232cs95031f675b8d522e@mail.gmail.com>

On Tue, Jan 20, 2009 at 10:24 PM, Jennifer Hodgdon
<yahgrp@poplarware.com> wrote:
> However, why exactly do you want to use WP? I would probably build this site
> in Drupal if I needed all those features, rather than hacking together WP
> with a forum and poll and all that. Right tool for the right job...

Yeah, thought of this too, but there's a learning curve I don't want to get in.


-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
From mikeschinkel at newclarity.net  Tue Jan 20 23:01:13 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jan 20 23:02:18 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <ae81acd10901201412p468a232cs95031f675b8d522e@mail.gmail.com>
Message-ID: <19922293.941232492478858.JavaMail.DELL-1405$@Dell-1405>

JMTCW, I left Drupal because it ends up being more trouble than WordPress in most cases.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Ozh" <ozh@planetozh.com>
To: wp-hackers@lists.automattic.com
Sent: Tuesday, January 20, 2009 5:12:33 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Seeking some advice

On Tue, Jan 20, 2009 at 10:24 PM, Jennifer Hodgdon
<yahgrp@poplarware.com> wrote:
> However, why exactly do you want to use WP? I would probably build this site
> in Drupal if I needed all those features, rather than hacking together WP
> with a forum and poll and all that. Right tool for the right job...

Yeah, thought of this too, but there's a learning curve I don't want to get in.


-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From glenn at glennansley.com  Tue Jan 20 23:22:54 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Tue Jan 20 23:23:06 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <19922293.941232492478858.JavaMail.DELL-1405$@Dell-1405>
References: <ae81acd10901201412p468a232cs95031f675b8d522e@mail.gmail.com>
	<19922293.941232492478858.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <3283f0830901201522p12d0ac6eofc91e4a32322b486@mail.gmail.com>

What about the following:

1) Don't allow [insert userlevel] to edit other users posts (or user
the user permissions plugin)
2) Create a category called "Columns" or whatever
3) Modify front end loop(s) to work accordingly

* Instruct your columnists just post to that category
* Your loop for Joe's column only shows posts from 'column' category
authored by 'joe'
* Your loop for Pam's column only shows posts from 'column' cat
authored by 'pam'

* If you don't want them posting to other cats, I'm sure you could
easily limit that directly by hooking into save_post and checking the
POST data (kill it if perms don't work out like you want... eg. joe
isn't posting to his column... or better yet... detect the user and
manually delete cats in POST and add users... then you could hide the
whole cat div for joe in write / edit screen).

* You could even use JS to hide cats on write post screen if there
aren't hooks to do that in PHP.

I'm probably missing something but maybe that sparks an idea somewhere

Glenn Ansley
Web Design | http://glennansley.com
Plugin Dev   | http://fullthrottledevelopment.com

On Tue, Jan 20, 2009 at 6:01 PM, Mike Schinkel
<mikeschinkel@newclarity.net> wrote:
> JMTCW, I left Drupal because it ends up being more trouble than WordPress in most cases.
>
> -Mike Schinkel
> http://mikeschinkel.com/
>
> ----- Original Message -----
> From: "Ozh" <ozh@planetozh.com>
> To: wp-hackers@lists.automattic.com
> Sent: Tuesday, January 20, 2009 5:12:33 PM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] Seeking some advice
>
> On Tue, Jan 20, 2009 at 10:24 PM, Jennifer Hodgdon
> <yahgrp@poplarware.com> wrote:
>> However, why exactly do you want to use WP? I would probably build this site
>> in Drupal if I needed all those features, rather than hacking together WP
>> with a forum and poll and all that. Right tool for the right job...
>
> Yeah, thought of this too, but there's a learning curve I don't want to get in.
>
>
> --
> http://planetOzh.com ~ Blog and WordPress Stuff
> http://FrenchFragFactory.net ~ Daily Quake News
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From andre.renaut at gmail.com  Tue Jan 20 23:41:35 2009
From: andre.renaut at gmail.com (=?UTF-8?Q?andr=C3=A9_renaut?=)
Date: Tue Jan 20 23:41:46 2009
Subject: [wp-hackers] Adding Google map inside post edit/writing
Message-ID: <8810a71a0901201541i313d0c87ne8a59862c60fe155@mail.gmail.com>

So you just want to geotag your posts keeping the lat and long for the post,
just by clicking a google map in the admin.

No geocoding ?

You do not need to show the map in the post.

Is it what you want ?
From andre.renaut at gmail.com  Tue Jan 20 23:42:01 2009
From: andre.renaut at gmail.com (=?UTF-8?Q?andr=C3=A9_renaut?=)
Date: Tue Jan 20 23:42:21 2009
Subject: [wp-hackers] Adding Google map inside post edit/writing
In-Reply-To: <8810a71a0901201541i313d0c87ne8a59862c60fe155@mail.gmail.com>
References: <8810a71a0901201541i313d0c87ne8a59862c60fe155@mail.gmail.com>
Message-ID: <8810a71a0901201542y76788568ie1458b5fdf59c97c@mail.gmail.com>

For WordPress 2.7 ?

2009/1/21 andr? renaut <andre.renaut@gmail.com>

> So you just want to geotag your posts keeping the lat and long for the
> post, just by clicking a google map in the admin.
>
> No geocoding ?
>
> You do not need to show the map in the post.
>
> Is it what you want ?
>



-- 
Pensez ? l'environnement avant d'imprimer ce message.
Please, think about the environment before printing this message.
From admin at laptoptips.ca  Tue Jan 20 23:48:08 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Tue Jan 20 23:49:57 2009
Subject: [wp-hackers] Looking for a way to add a second rich editor to
	the	Page form
In-Reply-To: <862d087f0901201305t6bd37359r2126069fa1486fcf@mail.gmail.com>
References: <0A76710F-A552-4059-A7B3-1E5DC9247D1A@codehooligans.com>	<89f0f8d50901201300t62034b18xa35092bc4750d9e2@mail.gmail.com>
	<862d087f0901201305t6bd37359r2126069fa1486fcf@mail.gmail.com>
Message-ID: <497662B8.5040709@laptoptips.ca>

Nathan Rice wrote:
> I would be curious to know the answer to this as well.  If anyone knows
> anything, or finds anything out, please let the list know.

Since TinyMCE is already loaded there, all you need to do is 
tinyMCE.init({...init options...}); in js after the page has finished 
loading.

There are quite a few examples of how to do this: 
http://tinymce.moxiecode.com/examples/example_04.php
From lynne.pope at gmail.com  Wed Jan 21 00:17:21 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed Jan 21 00:17:29 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <ae81acd10901201412p468a232cs95031f675b8d522e@mail.gmail.com>
References: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
	<4976410F.1030906@poplarware.com>
	<ae81acd10901201412p468a232cs95031f675b8d522e@mail.gmail.com>
Message-ID: <427667db0901201617r76569595hacf504a183e2d41a@mail.gmail.com>

2009/1/21 Ozh <ozh@planetozh.com>

> On Tue, Jan 20, 2009 at 10:24 PM, Jennifer Hodgdon
> <yahgrp@poplarware.com> wrote:
> > However, why exactly do you want to use WP? I would probably build this
> site
> > in Drupal if I needed all those features, rather than hacking together WP
> > with a forum and poll and all that. Right tool for the right job...
>
> Yeah, thought of this too, but there's a learning curve I don't want to get
> in.


Almost everything you want to do is part of blogging. If you don't mind a
dumbed-down forum, then bbpress will do the job. If you don't need forum
logins to be integrated with WP then any forum will do the job - its just a
matter of applying the same design.
Polls are the same. Either use a plugin, write your own, or if logins
between the poll and WP don't need integration then simply apply the same
design/theme and you have a site that appears to be integrated.

The only sticking point that I can see is for the columnists access
permissions. Writing some functions to handle that would be a whole heap
easier than learning a completely new system.

The right tool for the job is important, but I am not sure WP is the wrong
tool for this job. I am a Mambo developer and do a lot of work with Mambo.
But sometimes a full-featured CMS is overkill for a site and where a site is
really a blog it just plain makes sense to extend the functionality of WP
rather than trying to make a CMS behave more like a blogging platform.

Lynne
From hempsworth at googlemail.com  Wed Jan 21 00:55:19 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Wed Jan 21 00:55:33 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <427667db0901201617r76569595hacf504a183e2d41a@mail.gmail.com>
References: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
	<4976410F.1030906@poplarware.com>
	<ae81acd10901201412p468a232cs95031f675b8d522e@mail.gmail.com>
	<427667db0901201617r76569595hacf504a183e2d41a@mail.gmail.com>
Message-ID: <5a1dad880901201655w20fa1c63rf6c8e56dc72f20d8@mail.gmail.com>

This final feature should actually be quite easy to create. In your custom
theme, create a theme template [1]. In this template file have the usual
calls for get_header, get_footer etc. but have a form on there and use the
functionality of the prologue theme [2] to provide a really dumbed down post
editor, and hard-code the category to be something like 'columns-USERNAME'
or user_id perhaps - up to you.
Then you just need to create a new page in WordPress with a slug like
'write' and apply the template you just made, making your new custom page
available at www.example.com/write/.

Everything you need is in the Prologue theme really. Except its not the
'real' post editor. I suppose you could try to import all that stuff, but it
would be far more complex!

[1] http://codex.wordpress.org/Pages#Page_Templates
[2] http://svn.automattic.com/wpcom-themes/prologue/

Hope this helps,
Alex

On Wed, Jan 21, 2009 at 12:17 AM, Lynne Pope <lynne.pope@gmail.com> wrote:

> 2009/1/21 Ozh <ozh@planetozh.com>
>
> > On Tue, Jan 20, 2009 at 10:24 PM, Jennifer Hodgdon
> > <yahgrp@poplarware.com> wrote:
> > > However, why exactly do you want to use WP? I would probably build this
> > site
> > > in Drupal if I needed all those features, rather than hacking together
> WP
> > > with a forum and poll and all that. Right tool for the right job...
> >
> > Yeah, thought of this too, but there's a learning curve I don't want to
> get
> > in.
>
>
> Almost everything you want to do is part of blogging. If you don't mind a
> dumbed-down forum, then bbpress will do the job. If you don't need forum
> logins to be integrated with WP then any forum will do the job - its just a
> matter of applying the same design.
> Polls are the same. Either use a plugin, write your own, or if logins
> between the poll and WP don't need integration then simply apply the same
> design/theme and you have a site that appears to be integrated.
>
> The only sticking point that I can see is for the columnists access
> permissions. Writing some functions to handle that would be a whole heap
> easier than learning a completely new system.
>
> The right tool for the job is important, but I am not sure WP is the wrong
> tool for this job. I am a Mambo developer and do a lot of work with Mambo.
> But sometimes a full-featured CMS is overkill for a site and where a site
> is
> really a blog it just plain makes sense to extend the functionality of WP
> rather than trying to make a CMS behave more like a blogging platform.
>
> Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From hempsworth at googlemail.com  Wed Jan 21 01:02:24 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Wed Jan 21 01:02:37 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <5a1dad880901201655w20fa1c63rf6c8e56dc72f20d8@mail.gmail.com>
References: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
	<4976410F.1030906@poplarware.com>
	<ae81acd10901201412p468a232cs95031f675b8d522e@mail.gmail.com>
	<427667db0901201617r76569595hacf504a183e2d41a@mail.gmail.com>
	<5a1dad880901201655w20fa1c63rf6c8e56dc72f20d8@mail.gmail.com>
Message-ID: <5a1dad880901201702i2a33aa73q1af71adf01b8411d@mail.gmail.com>

Ahh, on an unrelated post to the list somebody asked about having a new
instance of TinyMCE, and it looks really easy; Andrew Ozz said:
> Since TinyMCE is already loaded there, all you need to do is
tinyMCE.init({...init options...}); in js
> after the page has finished loading.

> There are quite a few examples of how to do this:
http://tinymce.moxiecode.com/examples/example_04.php

So it would be very possible to add the rich text editor to your custom
post-form. :)

-- Alex


On Wed, Jan 21, 2009 at 12:55 AM, Alex Hempton-Smith <
hempsworth@googlemail.com> wrote:

> This final feature should actually be quite easy to create. In your custom
> theme, create a theme template [1]. In this template file have the usual
> calls for get_header, get_footer etc. but have a form on there and use the
> functionality of the prologue theme [2] to provide a really dumbed down post
> editor, and hard-code the category to be something like 'columns-USERNAME'
> or user_id perhaps - up to you.
> Then you just need to create a new page in WordPress with a slug like
> 'write' and apply the template you just made, making your new custom page
> available at www.example.com/write/.
>
> Everything you need is in the Prologue theme really. Except its not the
> 'real' post editor. I suppose you could try to import all that stuff, but it
> would be far more complex!
>
> [1] http://codex.wordpress.org/Pages#Page_Templates
> [2] http://svn.automattic.com/wpcom-themes/prologue/
>
> Hope this helps,
> Alex
>
>
> On Wed, Jan 21, 2009 at 12:17 AM, Lynne Pope <lynne.pope@gmail.com> wrote:
>
>> 2009/1/21 Ozh <ozh@planetozh.com>
>>
>> > On Tue, Jan 20, 2009 at 10:24 PM, Jennifer Hodgdon
>> > <yahgrp@poplarware.com> wrote:
>> > > However, why exactly do you want to use WP? I would probably build
>> this
>> > site
>> > > in Drupal if I needed all those features, rather than hacking together
>> WP
>> > > with a forum and poll and all that. Right tool for the right job...
>> >
>> > Yeah, thought of this too, but there's a learning curve I don't want to
>> get
>> > in.
>>
>>
>> Almost everything you want to do is part of blogging. If you don't mind a
>> dumbed-down forum, then bbpress will do the job. If you don't need forum
>> logins to be integrated with WP then any forum will do the job - its just
>> a
>> matter of applying the same design.
>> Polls are the same. Either use a plugin, write your own, or if logins
>> between the poll and WP don't need integration then simply apply the same
>> design/theme and you have a site that appears to be integrated.
>>
>> The only sticking point that I can see is for the columnists access
>> permissions. Writing some functions to handle that would be a whole heap
>> easier than learning a completely new system.
>>
>> The right tool for the job is important, but I am not sure WP is the wrong
>> tool for this job. I am a Mambo developer and do a lot of work with Mambo.
>> But sometimes a full-featured CMS is overkill for a site and where a site
>> is
>> really a blog it just plain makes sense to extend the functionality of WP
>> rather than trying to make a CMS behave more like a blogging platform.
>>
>> Lynne
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
From otto at ottodestruct.com  Wed Jan 21 05:47:12 2009
From: otto at ottodestruct.com (Otto)
Date: Wed Jan 21 05:47:21 2009
Subject: [wp-hackers] Plugin queries executed even when plugin is not 
	being called?
In-Reply-To: <03ED9DC2-2D24-4AF1-B385-DF4F8F454C20@amphibian.info>
References: <03ED9DC2-2D24-4AF1-B385-DF4F8F454C20@amphibian.info>
Message-ID: <161617690901202147p129efde9k539c8ad3bb8557f3@mail.gmail.com>

On Tue, Jan 20, 2009 at 12:27 PM, Derek Hogue <derek@amphibian.info> wrote:
> Hey all - is this expected behaviour, or have I coded this incorrectly
> perhaps?
>
> My plugin makes its own queries (to its own DB tables) through $wpdb.  These
> queries are all within functions in my plugin files, and these functions are
> called via either template tags, my plugin's widget or my plugin's
> shortcodes.
>
> However, as soon as my plugin is activated, WP's queries shoot up on every
> single page load, as though every query within every function in the plugin
> is being executed regardless of whether you're on a page that actually calls
> any of these functions, or whether you even have called these functions
> anywhere in your theme.
>
> Any ideas as to why this might be?  Needless to say, my users are a little
> miffed at this.

In your admin-upgrade.php file:

$gpo['db_verson'] < $gigpress['db_version']

You misspelled "version" there. I think that might be causing all your
extra queries.

-Otto
From otto at ottodestruct.com  Wed Jan 21 06:31:03 2009
From: otto at ottodestruct.com (Otto)
Date: Wed Jan 21 06:31:12 2009
Subject: [wp-hackers] Adding Google map inside post edit/writing
In-Reply-To: <e98dfae80901200857w3b09cea7ve84633bec940e3fc@mail.gmail.com>
References: <e98dfae80901191609g66f4cfces3e2b98e9a4be2040@mail.gmail.com>
	<4975E672.4020407@poplarware.com>
	<e98dfae80901200857w3b09cea7ve84633bec940e3fc@mail.gmail.com>
Message-ID: <161617690901202231l5ec91546q98ec37830709aa4c@mail.gmail.com>

On Tue, Jan 20, 2009 at 10:57 AM, mailapera <mailapera@gmail.com> wrote:
> Thanks for the replies..unfortunately neither Geo Mashup nor Routes does
> what I need.
>
> I am now pretty sure I have not explained myself correctly. After seeing the
> plugins mentioned above, I can say that what I need is pretty basic.
>
> My improved explanation: I need to insert a google map on my post write/edit
> page; this map will have zooming and dragging capabilities, in addition to
> showing the default map view, and one key feature to get the geo coordinates
> of the point clicked on the map. I already have the JS to do this, but I
> need to find a way for the map to just show up in the post write/edit page.
>
> The map will have absolutely no use in the "live" website, but will only be
> a tool for users to get the geo coordinates of a specific location while
> they are writing the post.

Look closer at the Geo Mashup plugin.
http://code.google.com/p/wordpress-geo-mashup/

The reason I say this is not because it does what you want, but
because it does something very similar to what you want. Mainly, it
puts a google map onto the edit page. Now, in particular it does this
for geotagging posts, however that's not the part of the plugin you
need. Just look at how it adds the meta box and the map, then create
your own plugin using similar methodology.

-Otto
From otto at ottodestruct.com  Wed Jan 21 06:37:03 2009
From: otto at ottodestruct.com (Otto)
Date: Wed Jan 21 06:38:39 2009
Subject: [wp-hackers] nested shortcode
In-Reply-To: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>
References: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>
Message-ID: <161617690901202237t6dbad17dp2a8ba9f6c20d9d6b@mail.gmail.com>

On Sat, Jan 17, 2009 at 5:58 PM, Daiv Mowbray <daiv@daivmowbray.com> wrote:
> return do_shortcode($content);

Why are you returning do_shortcode($content)? It's already doing the
shortcodes, you don't need to have it run through them again. Just
return the new $content.

-Otto
From otto at ottodestruct.com  Wed Jan 21 06:41:56 2009
From: otto at ottodestruct.com (Otto)
Date: Wed Jan 21 06:42:22 2009
Subject: [wp-hackers] nested shortcode
In-Reply-To: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>
References: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>
Message-ID: <161617690901202241v7e027c2g8f14fd4d3393722d@mail.gmail.com>

On Sat, Jan 17, 2009 at 5:58 PM, Daiv Mowbray <daiv@daivmowbray.com> wrote:
> I add a shortcode [myclass] anywhere in a post
> which will then add to any image in that post the class of myclass.
>
> remember that a post image probably has [caption] shortcode already.
>
> I have (inside my plugin class):
> add_shortcode ( 'myclass' , array(&$this, 'class_shortcode_out'));

Also, remember that there's two types of shortcodes.

1. Something like [gallery], which simply gets replaced with a bunch of content.
2. Something like [caption]<img whatever>[/caption], which adds stuff
to the existing content.

If you're simply adding [myclass] in the post, then I your $content
will be empty, since you're not surrounding anything, thus using the
first type of shortcode. Shortcodes only get the content that they
enclose. Not the whole post.

-Otto
From jeremy.visser at gmail.com  Wed Jan 21 17:38:50 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Wed Jan 21 07:39:08 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
Message-ID: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>

Hey hackers,

I'm syndicated on Planet Linux Australia [1], one of the many
Planet-based [2] sites where hackergotchis (basically avatars) are
displayed next to posts.

The process for getting your hackergotchi put up there, basically, is to
e-mail the Planet administrator with a .png file, and he uploads it and
configures it for you. Which is, I suppose, a little tedious, especially
if you are syndicated on several planets and want to change your avatar
one day.

Well, I think this could be improved. WordPress should look at the site
administrator's e-mail address, turn it into a Gravatar URL, and put it
somewhere in the RSS and Atom feeds.

Not sure if the feeds have a provision for "blog avatars", but a
xmlns:wp namespace could easily be specified.

Then, we can get the Planet software (I'm sure Jeff would be obliging)
to display the Gravatar if specified by the feed.

I'm not sure what provisions exist either way -- WordPress should be
able to do it with get_avatar(), and feeds should be able to handle it
through the addition of an xmlns if they don't have support already.

What do you guys think?

[1] http://planet.linux.org.au/
[2] http://planetplanet.org/

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From technocraze at gmail.com  Wed Jan 21 09:40:29 2009
From: technocraze at gmail.com (technocraze)
Date: Wed Jan 21 09:40:46 2009
Subject: [wp-hackers] A strange problem with wpmu-1.3.3
In-Reply-To: <1232474274.31725.2.camel@rillian.narnia.sunriseroad.net>
References: <1fe4fa230901120806t4d9eb518q836bca16bed76cc0@mail.gmail.com>	<e1202cb10901120840t60ea6a0ckc613f9357dc66dca@mail.gmail.com>	<497581D1.1090109@gmail.com>
	<1232474274.31725.2.camel@rillian.narnia.sunriseroad.net>
Message-ID: <4976ED8D.5060605@gmail.com>


> WPMU 1.3.3 is horribly outdated. Nobody's going to pay much attention to
> you unless you get your oven mitts on at least the 2.6.x branch (or
> trunk, as it's looking pretty good at the moment).
>
> Interesting that IE trips over on the mime-type. Usually, I find that IE
> just ignores the mime-type and displays stuff how it pleases anyway.
> (IE displaying HTML when I'm sending text/plain, I'm looking at you.)
>   
The problem was because of two new line space at the end of 
wpmu-settings.php (after closing php tag) and this created output before 
headers could be sent in blogs.php file.

We have heavily customised on 1,3,3 before .. and hence continuing with 
this..  we are maintaining an internal corporate blog of more than 
10,000 blogs..  we have to work out plans for migrating to latest code.. 
probably as you said 2.6.x branch..

Thanks,
Senthil



From daiv at daivmowbray.com  Wed Jan 21 09:48:26 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Wed Jan 21 09:48:38 2009
Subject: [wp-hackers] nested shortcode
In-Reply-To: <161617690901202241v7e027c2g8f14fd4d3393722d@mail.gmail.com>
References: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>
	<161617690901202241v7e027c2g8f14fd4d3393722d@mail.gmail.com>
Message-ID: <36720C64-AE3D-4FB2-B5BE-4AAB53E15B4E@daivmowbray.com>


Ok thanx, Otto,

I didn't realize that there are 2 types of response to a shortcode.
I knew there's various manners to add it,
I wanted to simply add the tag [addmyclass]
and activate a search replace in my plugin to add the class="myclass"  
to any image in the post.

Easier for the user to add [addmyclass] than to review in code all  
images and
have to add class="myclass".

I guess that wrapping a post in [addmyclass]post[/addmyclass] is an  
option.


Also, I had been trying to use : do_shortcode($content)
as recommended in the docs, as the shortcode search and replace function
only does a single pass of the post content.

I was getting results with unprocessed shortcode, namely the [caption].
Perhaps my problem lay elsewhere.

Daiv

On Jan 21, 2009, at 7:37 AM, Otto wrote:
> Why are you returning do_shortcode($content)? It's already doing the
> shortcodes, you don't need to have it run through them again. Just
> return the new $content.




On Jan 21, 2009, at 7:41 AM, Otto wrote:

> Also, remember that there's two types of shortcodes.
>
> 1. Something like [gallery], which simply gets replaced with a bunch  
> of content.
> 2. Something like [caption]<img whatever>[/caption], which adds stuff
> to the existing content.
>
> If you're simply adding [myclass] in the post, then I your $content
> will be empty, since you're not surrounding anything, thus using the
> first type of shortcode. Shortcodes only get the content that they
> enclose. Not the whole post.


----------
Daiv Mowbray
daiv@daivmowbray.com
----------


From raven at mecus.es  Wed Jan 21 09:49:41 2009
From: raven at mecus.es (Rafael Poveda <RaveN>)
Date: Wed Jan 21 09:49:59 2009
Subject: [wp-hackers] A strange problem with wpmu-1.3.3
In-Reply-To: <4976ED8D.5060605@gmail.com>
References: <1fe4fa230901120806t4d9eb518q836bca16bed76cc0@mail.gmail.com>	<e1202cb10901120840t60ea6a0ckc613f9357dc66dca@mail.gmail.com>	<497581D1.1090109@gmail.com>
	<1232474274.31725.2.camel@rillian.narnia.sunriseroad.net>
	<4976ED8D.5060605@gmail.com>
Message-ID: <CDB00538-7846-4B1A-9512-B9DEF664A191@mecus.es>

You just need to make some changes in CSS and be careful with tags and  
categories.

Your customers will be pleased with the change :?)



El 21/01/2009, a las 10:40 , technocraze escribi?:

>
>> WPMU 1.3.3 is horribly outdated. Nobody's going to pay much  
>> attention to
>> you unless you get your oven mitts on at least the 2.6.x branch (or
>> trunk, as it's looking pretty good at the moment).
>>
>> Interesting that IE trips over on the mime-type. Usually, I find  
>> that IE
>> just ignores the mime-type and displays stuff how it pleases anyway.
>> (IE displaying HTML when I'm sending text/plain, I'm looking at you.)
>>
> The problem was because of two new line space at the end of wpmu- 
> settings.php (after closing php tag) and this created output before  
> headers could be sent in blogs.php file.
>
> We have heavily customised on 1,3,3 before .. and hence continuing  
> with this..  we are maintaining an internal corporate blog of more  
> than 10,000 blogs..  we have to work out plans for migrating to  
> latest code.. probably as you said 2.6.x branch..
>
> Thanks,
> Senthil
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

--
Rafael Poveda <RaveN>
Mecus.es
work: raven@mecus.es
personal: raven@raven.es
gtalk: rafael.poveda
+34 620 739 206

From viper at viper007bond.com  Wed Jan 21 10:06:49 2009
From: viper at viper007bond.com (Viper007Bond)
Date: Wed Jan 21 10:07:05 2009
Subject: [wp-hackers] nested shortcode
In-Reply-To: <36720C64-AE3D-4FB2-B5BE-4AAB53E15B4E@daivmowbray.com>
References: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>
	<161617690901202241v7e027c2g8f14fd4d3393722d@mail.gmail.com>
	<36720C64-AE3D-4FB2-B5BE-4AAB53E15B4E@daivmowbray.com>
Message-ID: <8f93a7390901210206o5048c38bn50d20ef400cfbfa5@mail.gmail.com>

Shortcodes are not the best way to do what you are trying to accomplish. Use
a generic the_content filter and just check for the existence of
"[addmyclass]" in the post. If found, regex the images and remove the tag.

On Wed, Jan 21, 2009 at 1:48 AM, Daiv Mowbray <daiv@daivmowbray.com> wrote:

>
> Ok thanx, Otto,
>
> I didn't realize that there are 2 types of response to a shortcode.
> I knew there's various manners to add it,
> I wanted to simply add the tag [addmyclass]
> and activate a search replace in my plugin to add the class="myclass" to
> any image in the post.
>
> Easier for the user to add [addmyclass] than to review in code all images
> and
> have to add class="myclass".
>
> I guess that wrapping a post in [addmyclass]post[/addmyclass] is an option.
>
>
> Also, I had been trying to use : do_shortcode($content)
> as recommended in the docs, as the shortcode search and replace function
> only does a single pass of the post content.
>
> I was getting results with unprocessed shortcode, namely the [caption].
> Perhaps my problem lay elsewhere.
>
> Daiv
>
> On Jan 21, 2009, at 7:37 AM, Otto wrote:
>
>> Why are you returning do_shortcode($content)? It's already doing the
>> shortcodes, you don't need to have it run through them again. Just
>> return the new $content.
>>
>
>
>
>
> On Jan 21, 2009, at 7:41 AM, Otto wrote:
>
>  Also, remember that there's two types of shortcodes.
>>
>> 1. Something like [gallery], which simply gets replaced with a bunch of
>> content.
>> 2. Something like [caption]<img whatever>[/caption], which adds stuff
>> to the existing content.
>>
>> If you're simply adding [myclass] in the post, then I your $content
>> will be empty, since you're not surrounding anything, thus using the
>> first type of shortcode. Shortcodes only get the content that they
>> enclose. Not the whole post.
>>
>
>
> ----------
> Daiv Mowbray
> daiv@daivmowbray.com
> ----------
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/ | http://www.finalgear.com/
From ryanmccue at cubegames.net  Wed Jan 21 10:15:43 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Wed Jan 21 10:16:37 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
Message-ID: <4976F5CF.9060601@cubegames.net>

Jeremy Visser wrote:
> Well, I think this could be improved. WordPress should look at the site
> administrator's e-mail address, turn it into a Gravatar URL, and put it
> somewhere in the RSS and Atom feeds.
>   

IMHO, this should be done on the aggregator end. I'm not sure if WP does
so, but feeds can specify an email address in the author element (for
each item for RSS [1], otherwise or in the feed element itself in Atom
[2] ), and Planet could work from that.

[1]: http://www.rssboard.org/rss-profile#element-channel-item-author
[2]: http://atomenabled.org/developers/syndication/#recommendedFeedElements

-- 
Ryan McCue
<http://cubegames.net/>

From wordpress at dd32.id.au  Wed Jan 21 10:22:28 2009
From: wordpress at dd32.id.au (DD32)
Date: Wed Jan 21 10:22:41 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <4976F5CF.9060601@cubegames.net>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
Message-ID: <45055a190901210222u2c33317atbed9fc692c0ef788@mail.gmail.com>

Somewhat sounds similar to a Blavatar, Which is an Avatar for a blog
or something.. http://en.blog.wordpress.com/2008/12/02/go-get-a-blavatar/

2009/1/21 Ryan McCue <ryanmccue@cubegames.net>:
> Jeremy Visser wrote:
>> Well, I think this could be improved. WordPress should look at the site
>> administrator's e-mail address, turn it into a Gravatar URL, and put it
>> somewhere in the RSS and Atom feeds.
>>
>
> IMHO, this should be done on the aggregator end. I'm not sure if WP does
> so, but feeds can specify an email address in the author element (for
> each item for RSS [1], otherwise or in the feed element itself in Atom
> [2] ), and Planet could work from that.
>
> [1]: http://www.rssboard.org/rss-profile#element-channel-item-author
> [2]: http://atomenabled.org/developers/syndication/#recommendedFeedElements
>
> --
> Ryan McCue
> <http://cubegames.net/>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ozh at planetozh.com  Wed Jan 21 10:30:55 2009
From: ozh at planetozh.com (Ozh)
Date: Wed Jan 21 10:33:09 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <45055a190901210222u2c33317atbed9fc692c0ef788@mail.gmail.com>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
	<45055a190901210222u2c33317atbed9fc692c0ef788@mail.gmail.com>
Message-ID: <ae81acd10901210230h7a7957c2w4e2b673ec6729757@mail.gmail.com>

Sort of related random thought for anyone interested: planet is a
really old piece of software and it behaves quite badly with a lot of
feed. I've really simplified my life when I got rid of it in favor of
FeedWordPress.

On Wed, Jan 21, 2009 at 11:22 AM, DD32 <wordpress@dd32.id.au> wrote:
> Somewhat sounds similar to a Blavatar, Which is an Avatar for a blog
> or something.. http://en.blog.wordpress.com/2008/12/02/go-get-a-blavatar/
>
> 2009/1/21 Ryan McCue <ryanmccue@cubegames.net>:
>> Jeremy Visser wrote:
>>> Well, I think this could be improved. WordPress should look at the site
>>> administrator's e-mail address, turn it into a Gravatar URL, and put it
>>> somewhere in the RSS and Atom feeds.
>>>
>>
>> IMHO, this should be done on the aggregator end. I'm not sure if WP does
>> so, but feeds can specify an email address in the author element (for
>> each item for RSS [1], otherwise or in the feed element itself in Atom
>> [2] ), and Planet could work from that.
>>
>> [1]: http://www.rssboard.org/rss-profile#element-channel-item-author
>> [2]: http://atomenabled.org/developers/syndication/#recommendedFeedElements
>>
>> --
>> Ryan McCue
>> <http://cubegames.net/>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
From mailapera at gmail.com  Wed Jan 21 12:55:27 2009
From: mailapera at gmail.com (mailapera)
Date: Wed Jan 21 12:55:42 2009
Subject: [wp-hackers] Adding Google map inside post edit/writing
In-Reply-To: <161617690901202231l5ec91546q98ec37830709aa4c@mail.gmail.com>
References: <e98dfae80901191609g66f4cfces3e2b98e9a4be2040@mail.gmail.com>
	<4975E672.4020407@poplarware.com>
	<e98dfae80901200857w3b09cea7ve84633bec940e3fc@mail.gmail.com>
	<161617690901202231l5ec91546q98ec37830709aa4c@mail.gmail.com>
Message-ID: <e98dfae80901210455n237dc7edjf38e268b2acb423@mail.gmail.com>

To Andre Renaut:

Yes correct.

To Otto:

You are right, but I have no expertise to do that, although it sounds
easy...I've tried, but I cannot accomplish it...I am trying a similar thing
with Routes, just stripping the code of the things that I do not
need..although that does not seem easy at all for me..I am not good at
sniffing what I need and what not, that's why I was trying to go with
building my own from scratch..

To Jeremy Clarke:

I'll try that

Anyway, thank you all!



On Wed, Jan 21, 2009 at 7:31 AM, Otto <otto@ottodestruct.com> wrote:

> On Tue, Jan 20, 2009 at 10:57 AM, mailapera <mailapera@gmail.com> wrote:
> > Thanks for the replies..unfortunately neither Geo Mashup nor Routes does
> > what I need.
> >
> > I am now pretty sure I have not explained myself correctly. After seeing
> the
> > plugins mentioned above, I can say that what I need is pretty basic.
> >
> > My improved explanation: I need to insert a google map on my post
> write/edit
> > page; this map will have zooming and dragging capabilities, in addition
> to
> > showing the default map view, and one key feature to get the geo
> coordinates
> > of the point clicked on the map. I already have the JS to do this, but I
> > need to find a way for the map to just show up in the post write/edit
> page.
> >
> > The map will have absolutely no use in the "live" website, but will only
> be
> > a tool for users to get the geo coordinates of a specific location while
> > they are writing the post.
>
> Look closer at the Geo Mashup plugin.
> http://code.google.com/p/wordpress-geo-mashup/
>
> The reason I say this is not because it does what you want, but
> because it does something very similar to what you want. Mainly, it
> puts a google map onto the edit page. Now, in particular it does this
> for geotagging posts, however that's not the part of the plugin you
> need. Just look at how it adds the meta box and the map, then create
> your own plugin using similar methodology.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From derek at amphibian.info  Wed Jan 21 13:24:52 2009
From: derek at amphibian.info (Derek Hogue)
Date: Wed Jan 21 13:25:02 2009
Subject: [wp-hackers] Re: Plugin queries executed even when plugin is not
	being called?
In-Reply-To: <161617690901202147p129efde9k539c8ad3bb8557f3@mail.gmail.com>
References: <03ED9DC2-2D24-4AF1-B385-DF4F8F454C20@amphibian.info> 
	<161617690901202147p129efde9k539c8ad3bb8557f3@mail.gmail.com>
Message-ID: <c7b153a1-27ee-42e6-8b49-0263bc4828ac@r10g2000prf.googlegroups.com>

Otto,

I know, I know ... I feel like an idiot.  Thanks for taking the time
to have a look and catch that error ...  I actually found that myself
last night (after staring at that typo over and over and missing it
every time), and it was indeed the problem.  That bad conditional was
running my DB update scheme on every single page load.  Oops.

I found the problem thanks to Jeremy's suggestion of installing WP-
Tuner.  I can't believe I haven't installed this before - it's
brilliant for troubleshooting.

Thanks all,
Derek

On Jan 21, 1:47?am, Otto <o...@ottodestruct.com> wrote:
> On Tue, Jan 20, 2009 at 12:27 PM, Derek Hogue <de...@amphibian.info> wrote:
> > Hey all - is this expected behaviour, or have I coded this incorrectly
> > perhaps?
>
> > My plugin makes its own queries (to its own DB tables) through $wpdb. ?These
> > queries are all within functions in my plugin files, and these functions are
> > called via either template tags, my plugin's widget or my plugin's
> > shortcodes.
>
> > However, as soon as my plugin is activated, WP's queries shoot up on every
> > single page load, as though every query within every function in the plugin
> > is being executed regardless of whether you're on a page that actually calls
> > any of these functions, or whether you even have called these functions
> > anywhere in your theme.
>
> > Any ideas as to why this might be? ?Needless to say, my users are a little
> > miffed at this.
>
> In your admin-upgrade.php file:
>
> $gpo['db_verson'] < $gigpress['db_version']
>
> You misspelled "version" there. I think that might be causing all your
> extra queries.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hack...@lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers
From zamoose at gmail.com  Wed Jan 21 15:35:47 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed Jan 21 15:35:55 2009
Subject: [wp-hackers] WP.org->Extend->Themes
Message-ID: <71ddd7490901210735h2350b447xf065096875bfeaac@mail.gmail.com>

Didn't know where to address this precisely, but it dawned on me recently --
the Recent Themes feed from WP.org's Extend section features textual
descriptions of the themes as they're posted but lacks a thumbnail preview,
making it less-than-useful.   With one click installation of themes coming
in 2.8, is this something that will be addressed?
Pretty please?

-- 
-Doug
From wp-hackers at striderweb.com  Wed Jan 21 16:12:02 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed Jan 21 16:12:37 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
References: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
Message-ID: <B74774A2-AA5D-4DF1-BAEE-718ACDE2D7E6@striderweb.com>


On Jan 20, 2009, at 1:55 PM, Ozh wrote:

> Ola peeps
>
> I'm about to migrate a site from an old dusty homemade perl solution  
> to WP.
> This site has:
> - "columns": (selected) users have a column of their own where they
> can write about anything they'd like, and people can comment. Kind of
> like a sideblog for registered users.
>
> This last feature has got me perplex: what you guys think about the
> best way to implement this in WP?

People are suggesting limiting authors to a certain category and such  
-- but couldn't you instead put a custom loop in your theme that only  
pulls posts by author X, Y or Z?  Then those authors could give their  
posts categories if they wanted.

You're limiting by author, so you should do the same in code rather  
than faking it with a category.

(I'm no Loop expert... just my two bits....)

Stephen


-- 
Stephen Rider
<http://striderweb.com/>



From wp-hackers at striderweb.com  Wed Jan 21 16:19:01 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed Jan 21 16:19:20 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <45055a190901210222u2c33317atbed9fc692c0ef788@mail.gmail.com>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
	<45055a190901210222u2c33317atbed9fc692c0ef788@mail.gmail.com>
Message-ID: <BBE8199A-C6C9-428A-A409-DCD098BFAA5C@striderweb.com>

Heh.  I thought it was an avatar for black people!  ;)

(Sorry -- I read your email and the first thing that popped into my  
head was "Blackula" -- a "blaxploitation" vampire movie from the  
'70s...)

On Jan 21, 2009, at 4:22 AM, DD32 wrote:

> Somewhat sounds similar to a Blavatar, Which is an Avatar for a blog
> or something..
From flo.thiel+wphackers at googlemail.com  Wed Jan 21 16:20:30 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Wed Jan 21 16:20:44 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
Message-ID: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>

Hello everybody,

My name is Florian and I'm doing research on open source projects and
security for my diploma thesis. I would like to propose (patch
included) a very lightweight, evolutionary approach to fix or at least
mitigate SQL Injection weaknesses, some of which plagued WordPress in
the past.

Previous attempts to "just make WordPress use data access abstraction"
(as sometimes proposed on the mailing list) were understandably met
with a lot of opposition as large structural changes don't come easy
in an open source project (or any project).

I noticed that there already is basic data access abstraction in the
code (e.g. $wpdb->insert and $wpdb->update in wp-db.php) and also an
issue in the tracker that says developers should use these
abstractions more often. That's why I think you are fundamentally in
favor of these abstractions and I'd like to make the transition easier
for everybody.

I produced a patch against WordPress 2.7 which annotates and
classifies all uses of raw inline SQL. The classification tells you
how much work it would be to get rid of the inline use of SQL. The
patch can be found at
http://www.noroute.de/downloads/research/wordpress-2.7_sqlannotations.diff

>From the 443 places where I found inline SQL, there are 85 places
where an abstraction already exists and just had to be used (these are
mostly the cases which were mentioned in the issue
tracker). Furthermore, there are 172 places where a trivial
implementation (trivial meaning that a very similar method already
exists) would help get rid of the use of inline SQL. So by adding
around 5 simple methods to wp-db.php you would get rid of more than
250 problematic uses of inline SQL. And the best part: We can start
with the low-hanging fruit and gradually move to the harder ones while
keeping the code working all the time!

The process is really simple: Find a spot you'd like to fix, get rid
of the use of raw SQL (for annotations containing
"trivial_implementation", "simple_code" and "algorithmic" you may need
to write the abstraction methods first, see descriptions at the bottom
of the posting) and remove the annotation. A simple search
gives you the number of annotations remaining, so you know how for
along you are. (There's a tiny script at
http://www.noroute.de/downloads/research/sqlannotation_stats.sh that
gives you annotation count for the different classes (run it in the
root folder of the source code); works on unix only, sorry).

I'd definitely like to get feedback from you, even (or especially) if
you don't think my approach is worth it. If you have any concerns,
questions or further suggestions I'll be delighted to help. I'll be in
the loop. If this works for you I'll do another annotation set for
HTML escaping against XSS.

You can find a detailed explanation of the classes of inline SQL use
at the bottom of this posting.

Hope to hear from you,
Florian

----
Detailed description of the SQL annotation classifications:

method_exists:
This can be easily fixed by looking up the correct abstraction in
wp-db.php and applying it.

trivial_implementation:
The SQL statement does not use any "advanced" features and a similar
abstraction already exists for another SQL clause. You can look
at the existing abstractions in wp-db.php and create a new one for the
needed clause. Applies to DELETE, DROP and SELECT, etc.

simple_code:
After you have all the abstractions for trivial_implementation you can
go on implementing advanced SQL features like LIMIT, GROUP BY etc.

algorithmic:
These are the most advanced abstractions. Here you need an algorithm
that can generate complex clauses. The most prominent clauses here are
WHERE (including inequality, AND, OR, NOT, IN, parentheses and LIKE),
SELECT (with AS and functions) and JOIN.
From glenn at glennansley.com  Wed Jan 21 16:24:11 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Wed Jan 21 16:24:25 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <B74774A2-AA5D-4DF1-BAEE-718ACDE2D7E6@striderweb.com>
References: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
	<B74774A2-AA5D-4DF1-BAEE-718ACDE2D7E6@striderweb.com>
Message-ID: <3283f0830901210824v2afe9fb0ld5023088c543aeca@mail.gmail.com>

||so you should do the same in code rather than faking it with a category||

To piggyback on this - and to address the "can I trust my columnists
to only post to certain categories" issue behind the limiting authors
to cats suggestion - you could additionally filter all your other
loops (the non-column loops) to not include posts by your columnist
authors.

* Individual column loops only include posts by respective column authors
* Non-column loops exclude posts by all column authors

It just depends on whether you would rather restrict columnists from
accidentally posting to another loop via the backend or the frontend.

On Wed, Jan 21, 2009 at 11:12 AM, Stephen Rider
<wp-hackers@striderweb.com> wrote:
>
> On Jan 20, 2009, at 1:55 PM, Ozh wrote:
>
>> Ola peeps
>>
>> I'm about to migrate a site from an old dusty homemade perl solution to
>> WP.
>> This site has:
>> - "columns": (selected) users have a column of their own where they
>> can write about anything they'd like, and people can comment. Kind of
>> like a sideblog for registered users.
>>
>> This last feature has got me perplex: what you guys think about the
>> best way to implement this in WP?
>
> People are suggesting limiting authors to a certain category and such -- but
> couldn't you instead put a custom loop in your theme that only pulls posts
> by author X, Y or Z?  Then those authors could give their posts categories
> if they wanted.
>
> You're limiting by author, so you should do the same in code rather than
> faking it with a category.
>
> (I'm no Loop expert... just my two bits....)
>
> Stephen
>
>
> --
> Stephen Rider
> <http://striderweb.com/>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jer at simianuprising.com  Wed Jan 21 16:31:41 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed Jan 21 16:31:53 2009
Subject: [wp-hackers] www top no-www redirection?
In-Reply-To: <674b4a3b0901200352h253ad2f3tf712f839099e9b80@mail.gmail.com>
References: <9aa12a490901200016m2da2328bvd0a4fcc3a460d3f7@mail.gmail.com>
	<674b4a3b0901200352h253ad2f3tf712f839099e9b80@mail.gmail.com>
Message-ID: <e1202cb10901210831ubfa1desf33f8de517cd721a@mail.gmail.com>

Austin is right about the list, but just in case, you can also set
those options in wp-config.php:
http://codex.wordpress.org/Editing_wp-config.php#Blog_address_.28URL.29

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org
From jer at simianuprising.com  Wed Jan 21 16:35:18 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed Jan 21 16:35:29 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <ae81acd10901210230h7a7957c2w4e2b673ec6729757@mail.gmail.com>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
	<45055a190901210222u2c33317atbed9fc692c0ef788@mail.gmail.com>
	<ae81acd10901210230h7a7957c2w4e2b673ec6729757@mail.gmail.com>
Message-ID: <e1202cb10901210835u127c41echfc8f869d593b9d81@mail.gmail.com>

On Wed, Jan 21, 2009 at 5:30 AM, Ozh <ozh@planetozh.com> wrote:
> Sort of related random thought for anyone interested: planet is a
> really old piece of software and it behaves quite badly with a lot of
> feed. I've really simplified my life when I got rid of it in favor of
> FeedWordPress.
>

+1 - FWP is badass and the dev has recently started working on it
again. It's WP software as relevant and needed as PodPress. Please
lets all use it for our aggregation needs so that if necessary we can
all keep it going forever :)


-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org
From daiv at daivmowbray.com  Wed Jan 21 16:36:23 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Wed Jan 21 16:36:35 2009
Subject: [wp-hackers] nested shortcode
In-Reply-To: <8f93a7390901210206o5048c38bn50d20ef400cfbfa5@mail.gmail.com>
References: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>
	<161617690901202241v7e027c2g8f14fd4d3393722d@mail.gmail.com>
	<36720C64-AE3D-4FB2-B5BE-4AAB53E15B4E@daivmowbray.com>
	<8f93a7390901210206o5048c38bn50d20ef400cfbfa5@mail.gmail.com>
Message-ID: <B1489E52-8034-4539-B180-49AA1E41C7D1@daivmowbray.com>

Thanx for the suggestion Viper,

I'll get on that asap.


On Jan 21, 2009, at 11:06 AM, Viper007Bond wrote:

> Shortcodes are not the best way to do what you are trying to  
> accomplish. Use
> a generic the_content filter and just check for the existence of
> "[addmyclass]" in the post. If found, regex the images and remove  
> the tag.


----------
Daiv Mowbray
daiv@daivmowbray.com
----------


From malaiac at gmail.com  Wed Jan 21 16:53:20 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed Jan 21 16:53:30 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <3283f0830901210824v2afe9fb0ld5023088c543aeca@mail.gmail.com>
References: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
	<B74774A2-AA5D-4DF1-BAEE-718ACDE2D7E6@striderweb.com>
	<3283f0830901210824v2afe9fb0ld5023088c543aeca@mail.gmail.com>
Message-ID: <59e7f3130901210853l7d321477o460385b702a40796@mail.gmail.com>

my 2 cents
'new role' for your users

on the post-new form, restrict the categories box to show only the right
category, or better remove the categories box and add a hidden input
on the save_post hook, make sure that a post by this 'new role' is assigned
to this right category (double check)

exclude the category from your regular loop (no need to manage exclusion on
authors' list)

use /author/ page to show their posts, with a trick on URLs
on the author_link (not the right name) hook, rewrite :
 regular wp editor : /author/john
 happy few who get a column (based on their 'new role') => /column/john
From mikeschinkel at newclarity.net  Wed Jan 21 17:35:19 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jan 21 17:36:15 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <B1489E52-8034-4539-B180-49AA1E41C7D1@daivmowbray.com>
Message-ID: <8884524.1241232559326241.JavaMail.DELL-1405$@Dell-1405>

Hi all:

When, if ever, should I call wp_register_script() vs. just calling wp_enqueue_script()?  The same question applies to the *_style() versions as well.

Is wp_register_script() just something to call in core WP to create shortcuts for standard scripts/styles?

Thanks in advance.

-Mike Schinkel
http://mikeschinkel.com/
From gaarai at gaarai.com  Wed Jan 21 17:47:18 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Wed Jan 21 17:47:39 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <8884524.1241232559326241.JavaMail.DELL-1405$@Dell-1405>
References: <8884524.1241232559326241.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <49775FA6.6090508@gaarai.com>

Technically, you never have to register anything if you don't want to. 
The register functions are there and can be valuable if you want a 
central location that defines scripts and styles that will be used in 
your plugin/theme. You can then simply use the enqueue functions while 
referring to just the handle in order to enqueue the script or style for 
inclusion in the head.

So, the main purpose of the register functions is to allow you to 
simplify your code by removing the need to duplicate code if you enqueue 
the same script or style in more than one section of code. The benefits 
of this are many and probably don't need to be listed here.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Mike Schinkel wrote:
> Hi all:
>
> When, if ever, should I call wp_register_script() vs. just calling wp_enqueue_script()?  The same question applies to the *_style() versions as well.
>
> Is wp_register_script() just something to call in core WP to create shortcuts for standard scripts/styles?
>
> Thanks in advance.
>
> -Mike Schinkel
> http://mikeschinkel.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
From if.website at gmail.com  Wed Jan 21 17:49:05 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed Jan 21 17:49:12 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <8884524.1241232559326241.JavaMail.DELL-1405$@Dell-1405>
References: <B1489E52-8034-4539-B180-49AA1E41C7D1@daivmowbray.com>
	<8884524.1241232559326241.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <674b4a3b0901210949x5530cf97t3d5ede8d449f7590@mail.gmail.com>

On Wed, Jan 21, 2009 at 11:35 AM, Mike Schinkel
<mikeschinkel@newclarity.net> wrote:
> When, if ever, should I call wp_register_script() vs. just calling wp_enqueue_script()?  The same question applies to the *_style() versions as well.

wp_register_script is particularly useful when you have several
scripts dependent on each other.  So when you initialize your plugin,
you register each of the scripts with their dependencies using
wp_register_script. Then later at the point you actually need one of
the scripts to be printed, you call wp_enqueue_script using the handle
of that particular script, and WordPress handles the dependencies for
you.

In basic situations, wp_enqueue_script is probably sufficient.
From joseph at josephscott.org  Wed Jan 21 18:00:08 2009
From: joseph at josephscott.org (Joseph Scott)
Date: Wed Jan 21 18:00:27 2009
Subject: [wp-hackers] WP.org->Extend->Themes
In-Reply-To: <71ddd7490901210735h2350b447xf065096875bfeaac@mail.gmail.com>
References: <71ddd7490901210735h2350b447xf065096875bfeaac@mail.gmail.com>
Message-ID: <CF9C2E20-96BF-446C-BE6E-F44E7701E09F@josephscott.org>


On Jan 21, 2009, at 8:35 AM, Doug Stewart wrote:

> Didn't know where to address this precisely, but it dawned on me  
> recently --
> the Recent Themes feed from WP.org's Extend section features textual
> descriptions of the themes as they're posted but lacks a thumbnail  
> preview,
> making it less-than-useful.   With one click installation of themes  
> coming
> in 2.8, is this something that will be addressed?
> Pretty please?


Screen shot images are now part of the feeds.

--
Joseph Scott
joseph@josephscott.org
http://josephscott.org/




From if.website at gmail.com  Wed Jan 21 19:28:47 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed Jan 21 19:28:58 2009
Subject: [wp-hackers] delete_attachment hook firing too soon to be useful
In-Reply-To: <0139ee5c-5c16-421e-a40c-1b712b261de4@s9g2000prg.googlegroups.com>
References: <0139ee5c-5c16-421e-a40c-1b712b261de4@s9g2000prg.googlegroups.com>
Message-ID: <674b4a3b0901211128m28a98647rb6bfe8acec92bf98@mail.gmail.com>

On Tue, Jan 20, 2009 at 12:07 AM, Alex Dunae <alex@dunae.ca> wrote:
> In wp_delete_attachment, the delete_attachment action is fired once
> all the useful info in the DB is already gone.

I created a ticket here: http://trac.wordpress.org/ticket/8909
From zamoose at gmail.com  Wed Jan 21 21:09:45 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed Jan 21 21:09:54 2009
Subject: [wp-hackers] WP.org->Extend->Themes
In-Reply-To: <CF9C2E20-96BF-446C-BE6E-F44E7701E09F@josephscott.org>
References: <71ddd7490901210735h2350b447xf065096875bfeaac@mail.gmail.com>
	<CF9C2E20-96BF-446C-BE6E-F44E7701E09F@josephscott.org>
Message-ID: <71ddd7490901211309j13cb023fw2d0b8622df8a760@mail.gmail.com>

On Wed, Jan 21, 2009 at 1:00 PM, Joseph Scott <joseph@josephscott.org>wrote:

>
>
> Screen shot images are now part of the feeds.
>

Indeed they are.  Sweet!

-- 
-Doug
From pkarolis at gmail.com  Wed Jan 21 23:13:38 2009
From: pkarolis at gmail.com (Karolis Pajeda)
Date: Wed Jan 21 23:13:45 2009
Subject: [wp-hackers] Paging custom author page
Message-ID: <850e13640901211513i7961c24dh694ac146986a2cb9@mail.gmail.com>

Hi Folks

I have been working on modifying author.php page to include both posts and
comments for particular author. The problem I encountered was implementation
of paging. Currently i do this:
I get $posts, obtain $comments of author and combine them together with
correct sorting.
However, paging is failing cause it is only based on posts.

Could you give advice how to tackle this problem? how should i approach this
paging problem? Implement new custom paging or tweak existing wp
functionality?

Thanks
Karolis
From wordpress at dd32.id.au  Wed Jan 21 23:21:51 2009
From: wordpress at dd32.id.au (DD32)
Date: Wed Jan 21 23:22:05 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
Message-ID: <45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>

You might be interested in:
http://trac.wordpress.org/ticket/6836
http://trac.wordpress.org/ticket/7171

Also, It seems to be that you're suggesting in your patch that using
raw SQL (even though its prepared) is a bad idea?  Or am i reading it
wrong? :)

2009/1/22 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
> I produced a patch against WordPress 2.7 which annotates and
> classifies all uses of raw inline SQL. The classification tells you
> how much work it would be to get rid of the inline use of SQL. The
> patch can be found at
> http://www.noroute.de/downloads/research/wordpress-2.7_sqlannotations.diff
From jeremy.visser at gmail.com  Thu Jan 22 01:07:04 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Thu Jan 22 01:07:21 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <4976F5CF.9060601@cubegames.net>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
Message-ID: <1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>

On Wed, 2009-01-21 at 20:15 +1000, Ryan McCue wrote:
> IMHO, this should be done on the aggregator end. I'm not sure if WP does
> so, but feeds can specify an email address in the author element (for
> each item for RSS [1], otherwise or in the feed element itself in Atom
> [2] ), and Planet could work from that.

In which case, my suggestion would become that.

I would say "Let's implement it" right now, but I'm a little concerned
about putting an e-mail address in plain text in the feed. Obfuscation
wouldn't work, as that would stop them from being parsed into Gravatar
URLs.

Any ideas?

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From speedboxer at gmail.com  Thu Jan 22 01:14:13 2009
From: speedboxer at gmail.com (Matt)
Date: Thu Jan 22 01:14:27 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
	<1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>
Message-ID: <b88434820901211714g3f2df032r4a9aa35f6f6ed895@mail.gmail.com>

On Wed, Jan 21, 2009 at 5:07 PM, Jeremy Visser <jeremy.visser@gmail.com> wrote:
> I would say "Let's implement it" right now, but I'm a little concerned
> about putting an e-mail address in plain text in the feed. Obfuscation
> wouldn't work, as that would stop them from being parsed into Gravatar
> URLs.

Just put the md5 hash of the email address in the feed. Then you can
just get the avatar in the form of:

http://www.gravatar.com/avatar/md5_hash



--
Matt (http://mattsblog.ca/)
From mikeschinkel at newclarity.net  Thu Jan 22 02:10:33 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jan 22 02:10:51 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <16858810.1491232564632242.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <7074611.1741232590236024.JavaMail.DELL-1405$@Dell-1405>

Chris Jean <gaarai@gaarai.com> wrote:
> Technically, you never have to register anything if you don't 
> want to. The register functions are there and can be valuable 
> if you want a central location that defines scripts and styles
> that will be used in your plugin/theme. You can then simply use 
> the enqueue functions while referring to just the handle in 
> order to enqueue the script or style for inclusion in the head.
>
> So, the main purpose of the register functions is to allow you 
> to simplify your code by removing the need to duplicate code 
> if you enqueue the same script or style in more than one 
> section of code. The benefits of this are many and probably 
> don't need to be listed here.

That's very clear. Thanks! 

"Austin Matzko" <if.website@gmail.com> wrote:
> wp_register_script is particularly useful when you have 
> several scripts dependent on each other.  So when you 
> initialize your plugin,you register each of the scripts 
> with their dependencies using wp_register_script. Then 
> later at the point you actually need one of the scripts 
> to be printed, you call wp_enqueue_script using the 
> handle of that particular script, and WordPress handles 
> the dependencies for you.

So does wp_enqueue_script() explicitly NOT establish a name for managing dependencies in the same way that wp_register_script() does?  If yes, why do you have to give the script a name in wp_enqueue_script()?

But anyway, it brings up another question I know from the wp_enqueue_script() docs that WP core registers several standard scripts like "jquery" and "scriptaculous." However, it doesn't (and couldn't) register many other well-known scripts people might need and that might results in them being duplicated by different plugins. One very common one I need that is not in core is "swfobject" and I know other plugins include it. For example, we might end up with the following because of two different plugins using their own local copy of the same script: 

   // In HTML generated by WordPress install with both FOO and BAR plugins
   <script type="text/javascript" src="http://example.com/wp-content/plugins/FOO/js/swfobject.js"></script>
   <script type="text/javascript" src="http://example.com/wp-content/plugins/BAR/js/swfobject.js"></script>

Has there been any thought to creating a set of "standards" for well-known scripts such that, if used by more than one plugin would only use one of them?  Maybe something like this?

   // In FOO plugin
   wp_enqueue_script("wp-std/swfobject","http://example.com/wp-content/plugins/FOO/js/swfobject.js",array(),'2.1');

   // In BAR plugin
   wp_enqueue_script("wp-std/swfobject","http://example.com/wp-content/plugins/BAR/js/swfobject.js",array(),'2.1');

This could then be documented on a wiki page at WordPress.org and become a best practice for plugin development maybe?


-Mike Schinkel
http://mikeschinkel.com/
From if.website at gmail.com  Thu Jan 22 03:40:50 2009
From: if.website at gmail.com (Austin Matzko)
Date: Thu Jan 22 03:40:59 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <7074611.1741232590236024.JavaMail.DELL-1405$@Dell-1405>
References: <16858810.1491232564632242.JavaMail.DELL-1405$@Dell-1405>
	<7074611.1741232590236024.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <674b4a3b0901211940o4ec49637m897129a7721f6f@mail.gmail.com>

On Wed, Jan 21, 2009 at 8:10 PM, Mike Schinkel
<mikeschinkel@newclarity.net> wrote:
> So does wp_enqueue_script() explicitly NOT establish a name for managing dependencies in the same way that wp_register_script() does?  If yes, why do you have to give the script a name in wp_enqueue_script()?

You need the name (or the "handle") because WP_Dependencies, the class
behind all of this, makes sure that it doesn't enqueue the same handle
more than once at any given time.  That also answers your other
question about duplicate scripts: duplicates are avoided so long as
the handles are the same.
From mikeschinkel at newclarity.net  Thu Jan 22 06:15:04 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jan 22 06:16:07 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <21659702.1901232604636163.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <20885691.1921232604908458.JavaMail.DELL-1405$@Dell-1405>

"Austin Matzko" <if.website@gmail.com> wrote:
> You need the name (or the "handle") because WP_Dependencies, 
> the class behind all of this, makes sure that it doesn't 
> enqueue the same handle more than once at any given time.  

Thanks for the reply.

So using enqueue *can* achieve the same register with the addition of also emitting the link into the header. If I misunderstand please let me know otherwise it's what I assumed would make sense.

> That also answers your other question about duplicate 
> scripts: duplicates are avoided so long as the handles 
> are the same.

But that would only help *if* different plugins used the same name, right?  So three different plugins could register "Nifty Corners"[1] respectively  each as the following and they would all three get included, right?

   1.) wp_register_script('niftycorners', ...);
   2.) wp_register_script('nifty-corners', ...);
   3.) wp_register_script('nifty_corners', ...);

Hence my suggestion to have a single place to list how they are used...?

-Mike Schinkel
http://mikeschinkel.com/

[1] Nifty Corners found listed at http://javascriptlibraries.com/ 
From ryanmccue at cubegames.net  Thu Jan 22 08:24:17 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Thu Jan 22 08:25:04 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <e1202cb10901210835u127c41echfc8f869d593b9d81@mail.gmail.com>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>	<4976F5CF.9060601@cubegames.net>	<45055a190901210222u2c33317atbed9fc692c0ef788@mail.gmail.com>	<ae81acd10901210230h7a7957c2w4e2b673ec6729757@mail.gmail.com>
	<e1202cb10901210835u127c41echfc8f869d593b9d81@mail.gmail.com>
Message-ID: <49782D31.9030500@cubegames.net>

Jeremy Clarke wrote:
> +1 - FWP is badass and the dev has recently started working on it
> again. It's WP software as relevant and needed as PodPress. Please
> lets all use it for our aggregation needs so that if necessary we can
> all keep it going forever :)
>   

IMHO, Planet isn't really outdated: the feed specifications don't change
often at all and even if they do, most implementations don't change at
all. RSS itself isn't going to have any more (official) updates at all,
as the specification has been frozen.

And while we're pimping aggregators, I develop one called Lilina. Feel
free to check it out:
<http://getlilina.org/>
[/end-self-promo] ;)

-- 
Ryan McCue
<http://cubegames.net/>

From ryanmccue at cubegames.net  Thu Jan 22 08:28:17 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Thu Jan 22 08:29:11 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
Message-ID: <49782E21.4030404@cubegames.net>

DD32 wrote:
> Also, It seems to be that you're suggesting in your patch that using
> raw SQL (even though its prepared) is a bad idea?  Or am i reading it
> wrong? :)

Removing raw SQL completely from anywhere but the abstraction is the
whole point, as it allows the database system to be exchanged easily,
even using non-SQL database systems.

-- 
Ryan McCue
<http://cubegames.net/>

From ryanmccue at cubegames.net  Thu Jan 22 08:32:32 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Thu Jan 22 08:33:20 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <49782D31.9030500@cubegames.net>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>	<4976F5CF.9060601@cubegames.net>	<45055a190901210222u2c33317atbed9fc692c0ef788@mail.gmail.com>	<ae81acd10901210230h7a7957c2w4e2b673ec6729757@mail.gmail.com>	<e1202cb10901210835u127c41echfc8f869d593b9d81@mail.gmail.com>
	<49782D31.9030500@cubegames.net>
Message-ID: <49782F20.9030705@cubegames.net>

Ryan McCue wrote:
> IMHO, Planet isn't really outdated: the feed specifications don't change
> often at all and even if they do, most implementations don't change at
> all. RSS itself isn't going to have any more (official) updates at all,
> as the specification has been frozen.
>   

Oh, and I forgot to mention, Sam Ruby forked Planet a while back and
maintains Venus now:
<http://www.intertwingly.net/code/venus/>

-- 
Ryan McCue
<http://cubegames.net/>

From ryanmccue at cubegames.net  Thu Jan 22 08:40:28 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Thu Jan 22 08:41:17 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <b88434820901211714g3f2df032r4a9aa35f6f6ed895@mail.gmail.com>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>	<4976F5CF.9060601@cubegames.net>	<1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>
	<b88434820901211714g3f2df032r4a9aa35f6f6ed895@mail.gmail.com>
Message-ID: <497830FC.20000@cubegames.net>

Matt wrote:
> Just put the md5 hash of the email address in the feed. Then you can
> just get the avatar in the form of:
>
> http://www.gravatar.com/avatar/md5_hash
>   

The problem is that isn't in the Atom or RSS standards, and would have
to be implemented in a WP namespace. That would inevitably cause more
work, especially if the WP developers ever actually write a DTD for the
namespace.

What one *could* do is to set the author's URL in the feed to the
Gravatar URL for their email.

-- 
Ryan McCue
<http://cubegames.net/>

From jeremy.visser at gmail.com  Thu Jan 22 09:30:29 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Thu Jan 22 09:30:47 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <497830FC.20000@cubegames.net>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
	<1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>
	<b88434820901211714g3f2df032r4a9aa35f6f6ed895@mail.gmail.com>
	<497830FC.20000@cubegames.net>
Message-ID: <1232616629.2502.4.camel@rillian.narnia.sunriseroad.net>

On Thu, 2009-01-22 at 18:40 +1000, Ryan McCue wrote:
> The problem is that isn't in the Atom or RSS standards, and would have
> to be implemented in a WP namespace. That would inevitably cause more
> work, especially if the WP developers ever actually write a DTD for the
> namespace.

Like I just discovered from the Atom and RSS links you sent, there is
actually provision for a "blog logo" in both standards, which WordPress
would set to the Gravatar URL of the blog admin (I suppose from the
"admin_email" field in wp_options).

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From ryanmccue at cubegames.net  Thu Jan 22 09:33:13 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Thu Jan 22 09:34:11 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <1232616629.2502.4.camel@rillian.narnia.sunriseroad.net>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>	<4976F5CF.9060601@cubegames.net>	<1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>	<b88434820901211714g3f2df032r4a9aa35f6f6ed895@mail.gmail.com>	<497830FC.20000@cubegames.net>
	<1232616629.2502.4.camel@rillian.narnia.sunriseroad.net>
Message-ID: <49783D59.9010605@cubegames.net>

Jeremy Visser wrote:
> Like I just discovered from the Atom and RSS links you sent, there is
> actually provision for a "blog logo" in both standards, which WordPress
> would set to the Gravatar URL of the blog admin (I suppose from the
> "admin_email" field in wp_options).
>   

Hmm, that is a good point and I didn't consider that. We now have a
viable way to add Gravatars to the feeds, we just need a ticket and a
patch. *wishes he wasn't heading back to school*

Ideally, this would be a administration option to select which image to
use. Possibly even a plugin-domain thing.

-- 
Ryan McCue
<http://cubegames.net/>

From flo.thiel+wphackers at googlemail.com  Thu Jan 22 10:20:55 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Thu Jan 22 10:21:14 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
Message-ID: <f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>

On Thu, Jan 22, 2009 at 12:21 AM, DD32 <wordpress@dd32.id.au> wrote:
> You might be interested in:
> http://trac.wordpress.org/ticket/6836
> http://trac.wordpress.org/ticket/7171

Yes, that's what I meant with "you already have some abstraction in
place but it's being used everywhere. I want to make it real easy to
pick up the places that need updating.

> Also, It seems to be that you're suggesting in your patch that using
> raw SQL (even though its prepared) is a bad idea?  Or am i reading it
> wrong? :)

Yes, that's my point, I'm probably not making that clear enough. The
whole idea is centralising access to the database. When you have 5
places in the system where the db is accessed, it's really easy to fix
things once you notice there is a security vulnerability. You're
fixing it in one place and all callers profit from that. Experience
shows that if you have critical things like db access all over the
place you will forget updating one or two places when applying a
security fix. When you look at the last XSS incidents with WP, there's
the exact pattern. The problem was fixed by applying another magic
escaping method to the vulnerable spot. This probably leaves other
places vulnerable because escaping is not done in a consistent way
everywhere it's used. Obviously, you still need to find all the places
where db access (or client output) happens. But you only have to do
that one time.

Does that make sense to you?

Florian

> 2009/1/22 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
>> I produced a patch against WordPress 2.7 which annotates and
>> classifies all uses of raw inline SQL. The classification tells you
>> how much work it would be to get rid of the inline use of SQL. The
>> patch can be found at
>> http://www.noroute.de/downloads/research/wordpress-2.7_sqlannotations.diff
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From flo.thiel+wphackers at googlemail.com  Thu Jan 22 10:25:19 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Thu Jan 22 10:25:29 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <49782E21.4030404@cubegames.net>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
	<49782E21.4030404@cubegames.net>
Message-ID: <f932c74c0901220225i65158bcese1b85576c48f17c3@mail.gmail.com>

On Thu, Jan 22, 2009 at 9:28 AM, Ryan McCue <ryanmccue@cubegames.net> wrote:
> DD32 wrote:
>> Also, It seems to be that you're suggesting in your patch that using
>> raw SQL (even though its prepared) is a bad idea?  Or am i reading it
>> wrong? :)
>
> Removing raw SQL completely from anywhere but the abstraction is the
> whole point, as it allows the database system to be exchanged easily,
> even using non-SQL database systems.

Not exactly. My point is to centralise db access for security reasons.
Once you have abstractions everywhere, you can do good sanitation in
the abstraction and be done with it (have a look at my reply to DD32,
too).

Database independence would be a side effect if the abstraction did
not use any features specific to MySQL. But that would require the
additional step of making the queries database agnostic.

Florian
From ryanmccue at cubegames.net  Thu Jan 22 10:27:09 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Thu Jan 22 10:28:15 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901220225i65158bcese1b85576c48f17c3@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>	<49782E21.4030404@cubegames.net>
	<f932c74c0901220225i65158bcese1b85576c48f17c3@mail.gmail.com>
Message-ID: <497849FD.8020403@cubegames.net>

Florian Thiel wrote:
> Not exactly. My point is to centralise db access for security reasons.
> Once you have abstractions everywhere, you can do good sanitation in
> the abstraction and be done with it (have a look at my reply to DD32,
> too).

Ah, my apologies, I misinterpreted what you said. Still, removing SQL
(not just MySQL) specific  terms would be nice...

-- 
Ryan McCue
<http://cubegames.net/>

From wordpress at dd32.id.au  Thu Jan 22 10:32:01 2009
From: wordpress at dd32.id.au (DD32)
Date: Thu Jan 22 10:32:11 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
Message-ID: <45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>

2009/1/22 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
>> Also, It seems to be that you're suggesting in your patch that using
>> raw SQL (even though its prepared) is a bad idea?  Or am i reading it
>> wrong? :)
>
> Yes, that's my point, I'm probably not making that clear enough. The
> whole idea is centralising access to the database. When you have 5
> places in the system where the db is accessed, it's really easy to fix
> things once you notice there is a security vulnerability. You're
> fixing it in one place and all callers profit from that. Experience
> shows that if you have critical things like db access all over the
> place you will forget updating one or two places when applying a
> security fix. When you look at the last XSS incidents with WP, there's
> the exact pattern. The problem was fixed by applying another magic
> escaping method to the vulnerable spot. This probably leaves other
> places vulnerable because escaping is not done in a consistent way
> everywhere it's used. Obviously, you still need to find all the places
> where db access (or client output) happens. But you only have to do
> that one time.

Thats the thing, I dont see how this is different from current. All
queries which use user-data go through the wpdb::prepare() function,
which sanitizes the data for the query.. wpdb->prepare("SELECT a, b, c
FROM table WHERE a = %s", ' '\ UNION...'); would result in the -exact-
variable passed in being quoted -correctly-, Of course, since
wpdb::query() uses addslashes() instead of mysql_real_escape_string()
There may be chars which make it through that.. But thats beside the
point, Do you see where my confusion lies?
From flo.thiel+wphackers at googlemail.com  Thu Jan 22 10:46:35 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Thu Jan 22 10:46:47 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
Message-ID: <f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>

On Thu, Jan 22, 2009 at 11:32 AM, DD32 <wordpress@dd32.id.au> wrote:
> 2009/1/22 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
>>> Also, It seems to be that you're suggesting in your patch that using
>>> raw SQL (even though its prepared) is a bad idea?  Or am i reading it
>>> wrong? :)
>>
>> Yes, that's my point, I'm probably not making that clear enough. The
>> whole idea is centralising access to the database. When you have 5
>> places in the system where the db is accessed, it's really easy to fix
>> things once you notice there is a security vulnerability. You're
>> fixing it in one place and all callers profit from that. Experience
>> shows that if you have critical things like db access all over the
>> place you will forget updating one or two places when applying a
>> security fix. When you look at the last XSS incidents with WP, there's
>> the exact pattern. The problem was fixed by applying another magic
>> escaping method to the vulnerable spot. This probably leaves other
>> places vulnerable because escaping is not done in a consistent way
>> everywhere it's used. Obviously, you still need to find all the places
>> where db access (or client output) happens. But you only have to do
>> that one time.
>
> Thats the thing, I dont see how this is different from current. All
> queries which use user-data go through the wpdb::prepare() function,
> which sanitizes the data for the query.. wpdb->prepare("SELECT a, b, c
> FROM table WHERE a = %s", ' '\ UNION...'); would result in the -exact-
> variable passed in being quoted -correctly-, Of course, since
> wpdb::query() uses addslashes() instead of mysql_real_escape_string()
> There may be chars which make it through that.. But thats beside the
> point, Do you see where my confusion lies?

Using prepare everywhere is definitely a step in the right direction.
The problem is that it does not help against flawed SQL passed from
the caller. If you do it like it's done for INSERT and UPDATE now, you
control the construction of SQL statements in one place and can avoid
constructing evil SQL. Since you have an abstract representation of
the statement (semantically richer) you have much more control over
the SQL generated. You could even do fancy things like making sure
that all columns mentioned in SELECT or WHERE really exist. We don't
have to go that far, but once it's centralized, improving these
central methods has a much larger payoff, since you only have to do it
once. That justifies spending more time on this, creating a more
secure WordPress in the end.

Florian
From wordpress at santosj.name  Thu Jan 22 11:53:51 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Thu Jan 22 11:54:19 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
Message-ID: <49785E4F.1010005@santosj.name>

The Active Record Pattern already has many (3: Zend Framework, ADODB, 
and ADODB Lite, also part of other frameworks (Yii, Code Igniter, etc) ) 
libraries devoted to it. Basically, the idea of using it for security is 
pointless based on the idea of abstracting everything. Yeah sure, you 
can use something like mysql_real_escape_string() and protect the 
database from SQL injection attacks.

This will not protect against XSS attacks or CSRF attacks. Those are 
really independent of the database abstraction, you'll really just want 
to focus on protecting the database, which prepare does a lot to do in 
the first place. I suppose the reason the XSS attack was fixed in one 
place was that was the one known place where it was affected. If you 
protected every place from XSS attacks, then it would really screw with 
plugins and posts that want to post YouTube or something like Google 
Analytics.

The magic escaping method was probably KSES or another of the entities 
encoding functions in WordPress. This is how it should be.

I'd be against Active Record Pattern, because of the additional overhead 
and no real benefits from it. It isn't like WordPress is actually ever 
going to add support for other RDBMS, so it isn't like it will have full 
support for other databases. Of course, WordPress could use ADODB Lite, 
it is GPL, but you know it would even more solidify that every plugin 
and some themes would have to be GPL.

Jacob Santos


Florian Thiel wrote:
> On Thu, Jan 22, 2009 at 11:32 AM, DD32 <wordpress@dd32.id.au> wrote:
>   
>> 2009/1/22 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
>>     
>>>> Also, It seems to be that you're suggesting in your patch that using
>>>> raw SQL (even though its prepared) is a bad idea?  Or am i reading it
>>>> wrong? :)
>>>>         
>>> Yes, that's my point, I'm probably not making that clear enough. The
>>> whole idea is centralising access to the database. When you have 5
>>> places in the system where the db is accessed, it's really easy to fix
>>> things once you notice there is a security vulnerability. You're
>>> fixing it in one place and all callers profit from that. Experience
>>> shows that if you have critical things like db access all over the
>>> place you will forget updating one or two places when applying a
>>> security fix. When you look at the last XSS incidents with WP, there's
>>> the exact pattern. The problem was fixed by applying another magic
>>> escaping method to the vulnerable spot. This probably leaves other
>>> places vulnerable because escaping is not done in a consistent way
>>> everywhere it's used. Obviously, you still need to find all the places
>>> where db access (or client output) happens. But you only have to do
>>> that one time.
>>>       
>> Thats the thing, I dont see how this is different from current. All
>> queries which use user-data go through the wpdb::prepare() function,
>> which sanitizes the data for the query.. wpdb->prepare("SELECT a, b, c
>> FROM table WHERE a = %s", ' '\ UNION...'); would result in the -exact-
>> variable passed in being quoted -correctly-, Of course, since
>> wpdb::query() uses addslashes() instead of mysql_real_escape_string()
>> There may be chars which make it through that.. But thats beside the
>> point, Do you see where my confusion lies?
>>     
>
> Using prepare everywhere is definitely a step in the right direction.
> The problem is that it does not help against flawed SQL passed from
> the caller. If you do it like it's done for INSERT and UPDATE now, you
> control the construction of SQL statements in one place and can avoid
> constructing evil SQL. Since you have an abstract representation of
> the statement (semantically richer) you have much more control over
> the SQL generated. You could even do fancy things like making sure
> that all columns mentioned in SELECT or WHERE really exist. We don't
> have to go that far, but once it's centralized, improving these
> central methods has a much larger payoff, since you only have to do it
> once. That justifies spending more time on this, creating a more
> secure WordPress in the end.
>
> Florian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From jeremy.visser at gmail.com  Thu Jan 22 12:03:56 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Thu Jan 22 12:04:11 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <49783D59.9010605@cubegames.net>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
	<1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>
	<b88434820901211714g3f2df032r4a9aa35f6f6ed895@mail.gmail.com>
	<497830FC.20000@cubegames.net>
	<1232616629.2502.4.camel@rillian.narnia.sunriseroad.net>
	<49783D59.9010605@cubegames.net>
Message-ID: <1232625836.2502.9.camel@rillian.narnia.sunriseroad.net>

On Thu, 2009-01-22 at 19:33 +1000, Ryan McCue wrote:
> Ideally, this would be a administration option to select which image to
> use. Possibly even a plugin-domain thing.

Not sure if this is what you mean, but if get_avatar() is used to
generate the Gravatar URL, the image will respect the Gravatar
preferences in the Settings menu -- i.e. Wavatar, Identicon, whatever.

And, um, to "select" an image to display, you go to
http://www.gravatar.com/ and upload one. ;)

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From flo.thiel+wphackers at googlemail.com  Thu Jan 22 12:13:28 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Thu Jan 22 12:13:39 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <49785E4F.1010005@santosj.name>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
	<49785E4F.1010005@santosj.name>
Message-ID: <f932c74c0901220413v6b77ceachfa50d3695da798bc@mail.gmail.com>

On Thu, Jan 22, 2009 at 12:53 PM, Jacob Santos <wordpress@santosj.name> wrote:
> The Active Record Pattern already has many (3: Zend Framework, ADODB, and
> ADODB Lite, also part of other frameworks (Yii, Code Igniter, etc) )
> libraries devoted to it. Basically, the idea of using it for security is
> pointless based on the idea of abstracting everything. Yeah sure, you can
> use something like mysql_real_escape_string() and protect the database from
> SQL injection attacks.

I'm NOT suggesting the Active Record pattern. Active Record would
require a rework of the WordPress data model. All I suggest is doing
for the rest of the queries what has already been done for INSERT and
UPDATE. And I wanted to provide you with a smooth path to get there.

> This will not protect against XSS attacks or CSRF attacks. Those are really
> independent of the database abstraction, you'll really just want to focus on
> protecting the database, which prepare does a lot to do in the first place.
> I suppose the reason the XSS attack was fixed in one place was that was the
> one known place where it was affected. If you protected every place from XSS
> attacks, then it would really screw with plugins and posts that want to post
> YouTube or something like Google Analytics.

My remark on XSS was about the point of doing checks, filtering, etc.
in a central place because it's much easier to maintain. My current
proposal DOES NOT fix XSS or CSRF. But would argue that another set of
annotations could do (at least part of) what the current annotation
does for SQL.

> The magic escaping method was probably KSES or another of the entities
> encoding functions in WordPress. This is how it should be.
>
> I'd be against Active Record Pattern, because of the additional overhead and
> no real benefits from it. It isn't like WordPress is actually ever going to
> add support for other RDBMS, so it isn't like it will have full support for
> other databases. Of course, WordPress could use ADODB Lite, it is GPL, but
> you know it would even more solidify that every plugin and some themes would
> have to be GPL.

Yes, you're absolutely right. Moving to Active Record or using ADODB
is quite a disruptive change and really hard to bear for the project.
That's why I wanted to provide a way for gradual improvement. You can
change the SQL calls one at a time without breaking anything. And
after that is done, we could move on to another area (XSS comes to
mind, but that needs a little more research). I think lightweight,
evolutionary approaches are called for.

Florian

> Florian Thiel wrote:
>>
>> On Thu, Jan 22, 2009 at 11:32 AM, DD32 <wordpress@dd32.id.au> wrote:
>>
>>>
>>> 2009/1/22 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
>>>
>>>>>
>>>>> Also, It seems to be that you're suggesting in your patch that using
>>>>> raw SQL (even though its prepared) is a bad idea?  Or am i reading it
>>>>> wrong? :)
>>>>>
>>>>
>>>> Yes, that's my point, I'm probably not making that clear enough. The
>>>> whole idea is centralising access to the database. When you have 5
>>>> places in the system where the db is accessed, it's really easy to fix
>>>> things once you notice there is a security vulnerability. You're
>>>> fixing it in one place and all callers profit from that. Experience
>>>> shows that if you have critical things like db access all over the
>>>> place you will forget updating one or two places when applying a
>>>> security fix. When you look at the last XSS incidents with WP, there's
>>>> the exact pattern. The problem was fixed by applying another magic
>>>> escaping method to the vulnerable spot. This probably leaves other
>>>> places vulnerable because escaping is not done in a consistent way
>>>> everywhere it's used. Obviously, you still need to find all the places
>>>> where db access (or client output) happens. But you only have to do
>>>> that one time.
>>>>
>>>
>>> Thats the thing, I dont see how this is different from current. All
>>> queries which use user-data go through the wpdb::prepare() function,
>>> which sanitizes the data for the query.. wpdb->prepare("SELECT a, b, c
>>> FROM table WHERE a = %s", ' '\ UNION...'); would result in the -exact-
>>> variable passed in being quoted -correctly-, Of course, since
>>> wpdb::query() uses addslashes() instead of mysql_real_escape_string()
>>> There may be chars which make it through that.. But thats beside the
>>> point, Do you see where my confusion lies?
>>>
>>
>> Using prepare everywhere is definitely a step in the right direction.
>> The problem is that it does not help against flawed SQL passed from
>> the caller. If you do it like it's done for INSERT and UPDATE now, you
>> control the construction of SQL statements in one place and can avoid
>> constructing evil SQL. Since you have an abstract representation of
>> the statement (semantically richer) you have much more control over
>> the SQL generated. You could even do fancy things like making sure
>> that all columns mentioned in SELECT or WHERE really exist. We don't
>> have to go that far, but once it's centralized, improving these
>> central methods has a much larger payoff, since you only have to do it
>> once. That justifies spending more time on this, creating a more
>> secure WordPress in the end.
>>
>> Florian
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ckunte at gmail.com  Thu Jan 22 12:40:07 2009
From: ckunte at gmail.com (Chetan Kunte)
Date: Thu Jan 22 12:40:21 2009
Subject: [wp-hackers] Howto exclude capital words (within URL address) from
	being searched and replaced?
Message-ID: <f99a6f640901220440h78fdf8d0w664b2ef855eeb895@mail.gmail.com>

Hi -

I was wondering if any of you could help me with a unique problem I
have with regards to a plugin I wrote sometime ago:
http://wordpress.org/extend/plugins/small-caps/

This plugin takes capitalized words, and turns them into small caps
using the <abbr> html tag. ( More here:
http://ckunte.com/archives/small-caps ). Please see the basic plugin
code below.

-- start of code --

function ckunte_smallcaps($text) {
        $search = "/\b([A-Z][A-Z0-9]{2,})\b/";
        $replace = "<abbr>$1</abbr>";
        $text = preg_replace($search,$replace,$text);
        return $text;
}
//
if (function_exists('add_filter')) {
        add_filter('the_content', 'ckunte_smallcaps');
}

-- end of code --

This code works well--with an exception and an unintended consequence.
For example, if a URL has a Capital words in them like for example
below,

http://somesite.com/2007/04/i-worship-GANDHI/

then this plugin does, yes you guessed it:

http://somesite.com/2007/04/i-worship-<abbr>GANDHI</abbr>/

And thus potentially breaking the link.

Could anyone suggest how I could escape the words inside <a> tag please?

Grateful for your help,
-- 
Chetan, ckunte.com
From wordpress at santosj.name  Thu Jan 22 12:44:56 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Thu Jan 22 12:45:24 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901220413v6b77ceachfa50d3695da798bc@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>	<49785E4F.1010005@santosj.name>
	<f932c74c0901220413v6b77ceachfa50d3695da798bc@mail.gmail.com>
Message-ID: <49786A48.4030506@santosj.name>

I apologize, I recognized some of the functions you were proposing as 
those usually found in database abstraction (which I confused with 
Active Record (!= ADODB) ). When I think data-access abstraction 
(Documentation might be incorrect on php.net, PDO appears to be database 
access abstraction with some touch of data access abstraction in that 
you can use the same methods to access queries in any database), I think 
of PDO and it certainly doesn't have an insert, update, where or select 
method. It has prepare method. Actually query is actually a prepare that 
is abstracted from the developer.

Direct SQL in and of itself is not a bad thing, because if you know what 
you are doing and protect against hacking attempts, then there is no 
reason to further extend it by abstracting the SQL out. You are adding 
overhead where none is really needed. Your requirements have already 
been met by using prepare().

What you seem to be worried about are plugin authors, which don't know 
about or don't use prepare() when using SQL. If they aren't, then they 
probably aren't protecting against other attacks.

Jacob Santos


Florian Thiel wrote:
> On Thu, Jan 22, 2009 at 12:53 PM, Jacob Santos <wordpress@santosj.name> wrote:
>   
>> The Active Record Pattern already has many (3: Zend Framework, ADODB, and
>> ADODB Lite, also part of other frameworks (Yii, Code Igniter, etc) )
>> libraries devoted to it. Basically, the idea of using it for security is
>> pointless based on the idea of abstracting everything. Yeah sure, you can
>> use something like mysql_real_escape_string() and protect the database from
>> SQL injection attacks.
>>     
>
> I'm NOT suggesting the Active Record pattern. Active Record would
> require a rework of the WordPress data model. All I suggest is doing
> for the rest of the queries what has already been done for INSERT and
> UPDATE. And I wanted to provide you with a smooth path to get there.
>
>   
>> This will not protect against XSS attacks or CSRF attacks. Those are really
>> independent of the database abstraction, you'll really just want to focus on
>> protecting the database, which prepare does a lot to do in the first place.
>> I suppose the reason the XSS attack was fixed in one place was that was the
>> one known place where it was affected. If you protected every place from XSS
>> attacks, then it would really screw with plugins and posts that want to post
>> YouTube or something like Google Analytics.
>>     
>
> My remark on XSS was about the point of doing checks, filtering, etc.
> in a central place because it's much easier to maintain. My current
> proposal DOES NOT fix XSS or CSRF. But would argue that another set of
> annotations could do (at least part of) what the current annotation
> does for SQL.
>
>   
>> The magic escaping method was probably KSES or another of the entities
>> encoding functions in WordPress. This is how it should be.
>>
>> I'd be against Active Record Pattern, because of the additional overhead and
>> no real benefits from it. It isn't like WordPress is actually ever going to
>> add support for other RDBMS, so it isn't like it will have full support for
>> other databases. Of course, WordPress could use ADODB Lite, it is GPL, but
>> you know it would even more solidify that every plugin and some themes would
>> have to be GPL.
>>     
>
> Yes, you're absolutely right. Moving to Active Record or using ADODB
> is quite a disruptive change and really hard to bear for the project.
> That's why I wanted to provide a way for gradual improvement. You can
> change the SQL calls one at a time without breaking anything. And
> after that is done, we could move on to another area (XSS comes to
> mind, but that needs a little more research). I think lightweight,
> evolutionary approaches are called for.
>
> Florian
>
>   
>> Florian Thiel wrote:
>>     
>>> On Thu, Jan 22, 2009 at 11:32 AM, DD32 <wordpress@dd32.id.au> wrote:
>>>
>>>       
>>>> 2009/1/22 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
>>>>
>>>>         
>>>>>> Also, It seems to be that you're suggesting in your patch that using
>>>>>> raw SQL (even though its prepared) is a bad idea?  Or am i reading it
>>>>>> wrong? :)
>>>>>>
>>>>>>             
>>>>> Yes, that's my point, I'm probably not making that clear enough. The
>>>>> whole idea is centralising access to the database. When you have 5
>>>>> places in the system where the db is accessed, it's really easy to fix
>>>>> things once you notice there is a security vulnerability. You're
>>>>> fixing it in one place and all callers profit from that. Experience
>>>>> shows that if you have critical things like db access all over the
>>>>> place you will forget updating one or two places when applying a
>>>>> security fix. When you look at the last XSS incidents with WP, there's
>>>>> the exact pattern. The problem was fixed by applying another magic
>>>>> escaping method to the vulnerable spot. This probably leaves other
>>>>> places vulnerable because escaping is not done in a consistent way
>>>>> everywhere it's used. Obviously, you still need to find all the places
>>>>> where db access (or client output) happens. But you only have to do
>>>>> that one time.
>>>>>
>>>>>           
>>>> Thats the thing, I dont see how this is different from current. All
>>>> queries which use user-data go through the wpdb::prepare() function,
>>>> which sanitizes the data for the query.. wpdb->prepare("SELECT a, b, c
>>>> FROM table WHERE a = %s", ' '\ UNION...'); would result in the -exact-
>>>> variable passed in being quoted -correctly-, Of course, since
>>>> wpdb::query() uses addslashes() instead of mysql_real_escape_string()
>>>> There may be chars which make it through that.. But thats beside the
>>>> point, Do you see where my confusion lies?
>>>>
>>>>         
>>> Using prepare everywhere is definitely a step in the right direction.
>>> The problem is that it does not help against flawed SQL passed from
>>> the caller. If you do it like it's done for INSERT and UPDATE now, you
>>> control the construction of SQL statements in one place and can avoid
>>> constructing evil SQL. Since you have an abstract representation of
>>> the statement (semantically richer) you have much more control over
>>> the SQL generated. You could even do fancy things like making sure
>>> that all columns mentioned in SELECT or WHERE really exist. We don't
>>> have to go that far, but once it's centralized, improving these
>>> central methods has a much larger payoff, since you only have to do it
>>> once. That justifies spending more time on this, creating a more
>>> secure WordPress in the end.
>>>
>>> Florian
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From frank at bueltge.de  Thu Jan 22 12:50:59 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Thu Jan 22 12:51:13 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <20885691.1921232604908458.JavaMail.DELL-1405$@Dell-1405>
References: <21659702.1901232604636163.JavaMail.DELL-1405$@Dell-1405>
	<20885691.1921232604908458.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <db047a770901220450n41715ad4l6c5855325d33b1a1@mail.gmail.com>

http://wpengineer.com/use-javascript-libraries-in-and-of-wordpress/
maybe you understand the functions when you read this small tutorial.



On Thu, Jan 22, 2009 at 7:15 AM, Mike Schinkel
<mikeschinkel@newclarity.net>wrote:

> "Austin Matzko" <if.website@gmail.com> wrote:
> > You need the name (or the "handle") because WP_Dependencies,
> > the class behind all of this, makes sure that it doesn't
> > enqueue the same handle more than once at any given time.
>
> Thanks for the reply.
>
> So using enqueue *can* achieve the same register with the addition of also
> emitting the link into the header. If I misunderstand please let me know
> otherwise it's what I assumed would make sense.
>
> > That also answers your other question about duplicate
> > scripts: duplicates are avoided so long as the handles
> > are the same.
>
> But that would only help *if* different plugins used the same name, right?
>  So three different plugins could register "Nifty Corners"[1] respectively
>  each as the following and they would all three get included, right?
>
>   1.) wp_register_script('niftycorners', ...);
>   2.) wp_register_script('nifty-corners', ...);
>   3.) wp_register_script('nifty_corners', ...);
>
> Hence my suggestion to have a single place to list how they are used...?
>
> -Mike Schinkel
> http://mikeschinkel.com/
>
> [1] Nifty Corners found listed at http://javascriptlibraries.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From scribu at gmail.com  Thu Jan 22 12:54:57 2009
From: scribu at gmail.com (scribu)
Date: Thu Jan 22 12:55:09 2009
Subject: [wp-hackers] Howto exclude capital words (within URL address) 
	from being searched and replaced?
In-Reply-To: <f99a6f640901220440h78fdf8d0w664b2ef855eeb895@mail.gmail.com>
References: <f99a6f640901220440h78fdf8d0w664b2ef855eeb895@mail.gmail.com>
Message-ID: <349fe48b0901220454g2d270309oec46d9358b773542@mail.gmail.com>

You would have to not select "words" that begin with '.+://' or something.

Instead of using a filter that has to parse the content on each page load,
wouldn't it be better to add the abbr tags just before the post is saved to
the database?

On Thu, Jan 22, 2009 at 2:40 PM, Chetan Kunte <ckunte@gmail.com> wrote:

> Hi -
>
> I was wondering if any of you could help me with a unique problem I
> have with regards to a plugin I wrote sometime ago:
> http://wordpress.org/extend/plugins/small-caps/
>
> This plugin takes capitalized words, and turns them into small caps
> using the <abbr> html tag. ( More here:
> http://ckunte.com/archives/small-caps ). Please see the basic plugin
> code below.
>
> -- start of code --
>
> function ckunte_smallcaps($text) {
>        $search = "/\b([A-Z][A-Z0-9]{2,})\b/";
>        $replace = "<abbr>$1</abbr>";
>        $text = preg_replace($search,$replace,$text);
>        return $text;
> }
> //
> if (function_exists('add_filter')) {
>        add_filter('the_content', 'ckunte_smallcaps');
> }
>
> -- end of code --
>
> This code works well--with an exception and an unintended consequence.
> For example, if a URL has a Capital words in them like for example
> below,
>
> http://somesite.com/2007/04/i-worship-GANDHI/
>
> then this plugin does, yes you guessed it:
>
> http://somesite.com/2007/04/i-worship-<abbr>GANDHI</abbr>/
>
> And thus potentially breaking the link.
>
> Could anyone suggest how I could escape the words inside <a> tag please?
>
> Grateful for your help,
> --
> Chetan, ckunte.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net
From flo.thiel+wphackers at googlemail.com  Thu Jan 22 13:14:36 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Thu Jan 22 13:14:49 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <49786A48.4030506@santosj.name>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
	<49785E4F.1010005@santosj.name>
	<f932c74c0901220413v6b77ceachfa50d3695da798bc@mail.gmail.com>
	<49786A48.4030506@santosj.name>
Message-ID: <f932c74c0901220514o58b2cbf7vd051c7dbc9f129e7@mail.gmail.com>

On Thu, Jan 22, 2009 at 1:44 PM, Jacob Santos <wordpress@santosj.name> wrote:
> I apologize, I recognized some of the functions you were proposing as those
> usually found in database abstraction (which I confused with Active Record
> (!= ADODB) ). When I think data-access abstraction (Documentation might be
> incorrect on php.net, PDO appears to be database access abstraction with
> some touch of data access abstraction in that you can use the same methods
> to access queries in any database), I think of PDO and it certainly doesn't
> have an insert, update, where or select method. It has prepare method.
> Actually query is actually a prepare that is abstracted from the developer.

No problem.

> Direct SQL in and of itself is not a bad thing, because if you know what you
> are doing and protect against hacking attempts, then there is no reason to
> further extend it by abstracting the SQL out. You are adding overhead where
> none is really needed. Your requirements have already been met by using
> prepare().
>
> What you seem to be worried about are plugin authors, which don't know about
> or don't use prepare() when using SQL. If they aren't, then they probably
> aren't protecting against other attacks.

No, I'm not especially worried about plugin developers. And I'm not
especially worried about people who don't know about prepare().
Experience shows that these things "just happen" (tm). That's where I
was going with the XSS example. WordPress developers seem to know
about the problem of XSS in general, but sometimes you forget to
sanitize your output (or input in the SQL case) or use the wrong
sanitation. If you use abstraction, the right thing has to be done in
one place only. If everybody was perfect all the time, your argument
would be totally valid. But we're not. That's why reducing redundancy
(in the end, that's what these abstractions do) is a good thing. It
makes code more readable, more maintainable and more secure.

Comet Support has an article about how SQL abstraction is handled in
CakePHP (http://cakephp.prometsupport.com/tag/sql-injection/). This is
a good example how powerful such an abstraction can be. NOTE: I'm not
suggesting WP should absolutely do it that way. I just want to give an
example how powerful an abstraction can be (note that you can
guarantee correct SQL because you're building the statement in the
abstraction method).

Still unconvinced?
Florian

> Florian Thiel wrote:
>>
>> On Thu, Jan 22, 2009 at 12:53 PM, Jacob Santos <wordpress@santosj.name>
>> wrote:
>>
>>>
>>> The Active Record Pattern already has many (3: Zend Framework, ADODB, and
>>> ADODB Lite, also part of other frameworks (Yii, Code Igniter, etc) )
>>> libraries devoted to it. Basically, the idea of using it for security is
>>> pointless based on the idea of abstracting everything. Yeah sure, you can
>>> use something like mysql_real_escape_string() and protect the database
>>> from
>>> SQL injection attacks.
>>>
>>
>> I'm NOT suggesting the Active Record pattern. Active Record would
>> require a rework of the WordPress data model. All I suggest is doing
>> for the rest of the queries what has already been done for INSERT and
>> UPDATE. And I wanted to provide you with a smooth path to get there.
>>
>>
>>>
>>> This will not protect against XSS attacks or CSRF attacks. Those are
>>> really
>>> independent of the database abstraction, you'll really just want to focus
>>> on
>>> protecting the database, which prepare does a lot to do in the first
>>> place.
>>> I suppose the reason the XSS attack was fixed in one place was that was
>>> the
>>> one known place where it was affected. If you protected every place from
>>> XSS
>>> attacks, then it would really screw with plugins and posts that want to
>>> post
>>> YouTube or something like Google Analytics.
>>>
>>
>> My remark on XSS was about the point of doing checks, filtering, etc.
>> in a central place because it's much easier to maintain. My current
>> proposal DOES NOT fix XSS or CSRF. But would argue that another set of
>> annotations could do (at least part of) what the current annotation
>> does for SQL.
>>
>>
>>>
>>> The magic escaping method was probably KSES or another of the entities
>>> encoding functions in WordPress. This is how it should be.
>>>
>>> I'd be against Active Record Pattern, because of the additional overhead
>>> and
>>> no real benefits from it. It isn't like WordPress is actually ever going
>>> to
>>> add support for other RDBMS, so it isn't like it will have full support
>>> for
>>> other databases. Of course, WordPress could use ADODB Lite, it is GPL,
>>> but
>>> you know it would even more solidify that every plugin and some themes
>>> would
>>> have to be GPL.
>>>
>>
>> Yes, you're absolutely right. Moving to Active Record or using ADODB
>> is quite a disruptive change and really hard to bear for the project.
>> That's why I wanted to provide a way for gradual improvement. You can
>> change the SQL calls one at a time without breaking anything. And
>> after that is done, we could move on to another area (XSS comes to
>> mind, but that needs a little more research). I think lightweight,
>> evolutionary approaches are called for.
>>
>> Florian
>>
>>
>>>
>>> Florian Thiel wrote:
>>>
>>>>
>>>> On Thu, Jan 22, 2009 at 11:32 AM, DD32 <wordpress@dd32.id.au> wrote:
>>>>
>>>>
>>>>>
>>>>> 2009/1/22 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
>>>>>
>>>>>
>>>>>>>
>>>>>>> Also, It seems to be that you're suggesting in your patch that using
>>>>>>> raw SQL (even though its prepared) is a bad idea?  Or am i reading it
>>>>>>> wrong? :)
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> Yes, that's my point, I'm probably not making that clear enough. The
>>>>>> whole idea is centralising access to the database. When you have 5
>>>>>> places in the system where the db is accessed, it's really easy to fix
>>>>>> things once you notice there is a security vulnerability. You're
>>>>>> fixing it in one place and all callers profit from that. Experience
>>>>>> shows that if you have critical things like db access all over the
>>>>>> place you will forget updating one or two places when applying a
>>>>>> security fix. When you look at the last XSS incidents with WP, there's
>>>>>> the exact pattern. The problem was fixed by applying another magic
>>>>>> escaping method to the vulnerable spot. This probably leaves other
>>>>>> places vulnerable because escaping is not done in a consistent way
>>>>>> everywhere it's used. Obviously, you still need to find all the places
>>>>>> where db access (or client output) happens. But you only have to do
>>>>>> that one time.
>>>>>>
>>>>>>
>>>>>
>>>>> Thats the thing, I dont see how this is different from current. All
>>>>> queries which use user-data go through the wpdb::prepare() function,
>>>>> which sanitizes the data for the query.. wpdb->prepare("SELECT a, b, c
>>>>> FROM table WHERE a = %s", ' '\ UNION...'); would result in the -exact-
>>>>> variable passed in being quoted -correctly-, Of course, since
>>>>> wpdb::query() uses addslashes() instead of mysql_real_escape_string()
>>>>> There may be chars which make it through that.. But thats beside the
>>>>> point, Do you see where my confusion lies?
>>>>>
>>>>>
>>>>
>>>> Using prepare everywhere is definitely a step in the right direction.
>>>> The problem is that it does not help against flawed SQL passed from
>>>> the caller. If you do it like it's done for INSERT and UPDATE now, you
>>>> control the construction of SQL statements in one place and can avoid
>>>> constructing evil SQL. Since you have an abstract representation of
>>>> the statement (semantically richer) you have much more control over
>>>> the SQL generated. You could even do fancy things like making sure
>>>> that all columns mentioned in SELECT or WHERE really exist. We don't
>>>> have to go that far, but once it's centralized, improving these
>>>> central methods has a much larger payoff, since you only have to do it
>>>> once. That justifies spending more time on this, creating a more
>>>> secure WordPress in the end.
>>>>
>>>> Florian
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at santosj.name  Thu Jan 22 14:28:46 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Thu Jan 22 14:29:03 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901220514o58b2cbf7vd051c7dbc9f129e7@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>	<49785E4F.1010005@santosj.name>	<f932c74c0901220413v6b77ceachfa50d3695da798bc@mail.gmail.com>	<49786A48.4030506@santosj.name>
	<f932c74c0901220514o58b2cbf7vd051c7dbc9f129e7@mail.gmail.com>
Message-ID: <4978829E.5000502@santosj.name>

The problem is that you are stated XSS attacks, which are unrelated to 
database attacks. What you are trying to prevent, is SQL injection, 
which is what prepare() does. Which isn't a perfect method, however 
neither is yours. You are proposing we abstract and do it for the 
developer, like they are idiots. You are suggesting we do it for 
WordPress core, which means the core developers and contributors are 
idiots for not protecting against SQL injection (which all of the places 
I've seen already protect against SQL injection using prepare).

This ignores true hacking prevention known as sanitization. It is really 
simple to sanitize integers, dates, and what not, because they have a 
set format which can be validated very easily and sanitized. The issue 
is actually strings, such as HTML, which can exist in posts, as well as 
other string formats which need to be accepted, but still protected. 
What you have is something that needs to be sanitized liberally based on 
the user role and capability. WordPress already does this, so I guess my 
confusion is and what I should be question is: Are you proposing to 
abstract and protect the users and developers from themselves with the 
possibility of entering strings that might be venerable to XSS attacks?

The contention I have is that I come from the understanding that each 
validation and sanitization should be created for each variable. For 
example, if the database field is a date, I will validate and, or 
sanitize for date before placing it in the SQL. If I'm using integers, 
I'll cast to an integer. I come from the group that you shouldn't 
abstract all data types into the same group, when you have multiple 
groups and multiple validations and sanitizations. So, if you protect 
each string against XSS attacks, you are ignoring the date formats. This 
could be sensed by the abstraction, but that will add overhead that 
would be unacceptable.

So I mean, you are talking about protecting against XSS attacks in the 
database layer, when it belongs to the layer directly above database 
layer, which interacts with the database layer. Adding something that 
needs to be separate from the database layer to the database layer will 
add protection which doesn't exist. If you do it this way, then no one 
will have freedom in adding JavaScript to their posts and you'll need 
something to override this.

The reason sanitization is added to one area and not others, is because 
it shouldn't be in other areas, because such protections will prevent 
freedoms that would otherwise be abstracted away from the users and 
developers. I can see the bug reports now (as editors and contributors 
who file bugs that they can't enter certain HTML elements) from 
developers and users saying that they can't enter video or [enter some 
future or current popular site] snippet into their post.

The point with security is that there are already functions inside of 
WordPress which exist to protect against certain XSS and also 
protections in the administration to protect against CSRF attacks. So 
for example, if you go to a WordPress blog and try to enter some 
JavaScript that steals the cookies, it won't execute, because the 
comment functions (and not the database methods) protect against XSS 
attacks. This is the way it should be.

The problem with security is that it isn't cut and dry, unless you don't 
want to accept any user input at all.

I would also advise against using CakePHP, which holds your hand and 
empties your garbage for you, as an example in the future as "best 
practice" because I don't really buy that CakePHP is best practice. It 
isn't for performance reasons, however neither is WordPress and in fact 
a lot of the developers suggest features and implementations which would 
make WordPress even more slow, so take what you will. I'm not the most 
intelligent developer on this list, nor the best, but I do read a lot 
and I do give advice based on other intelligent developers. I'll tell 
you now, that from what I've read, this sort of generalization of 
security is NOT the way to go, because it offers a false sense of security.

Jacob Sanots


Florian Thiel wrote:
> On Thu, Jan 22, 2009 at 1:44 PM, Jacob Santos <wordpress@santosj.name> wrote:
>   
>> I apologize, I recognized some of the functions you were proposing as those
>> usually found in database abstraction (which I confused with Active Record
>> (!= ADODB) ). When I think data-access abstraction (Documentation might be
>> incorrect on php.net, PDO appears to be database access abstraction with
>> some touch of data access abstraction in that you can use the same methods
>> to access queries in any database), I think of PDO and it certainly doesn't
>> have an insert, update, where or select method. It has prepare method.
>> Actually query is actually a prepare that is abstracted from the developer.
>>     
>
> No problem.
>
>   
>> Direct SQL in and of itself is not a bad thing, because if you know what you
>> are doing and protect against hacking attempts, then there is no reason to
>> further extend it by abstracting the SQL out. You are adding overhead where
>> none is really needed. Your requirements have already been met by using
>> prepare().
>>
>> What you seem to be worried about are plugin authors, which don't know about
>> or don't use prepare() when using SQL. If they aren't, then they probably
>> aren't protecting against other attacks.
>>     
>
> No, I'm not especially worried about plugin developers. And I'm not
> especially worried about people who don't know about prepare().
> Experience shows that these things "just happen" (tm). That's where I
> was going with the XSS example. WordPress developers seem to know
> about the problem of XSS in general, but sometimes you forget to
> sanitize your output (or input in the SQL case) or use the wrong
> sanitation. If you use abstraction, the right thing has to be done in
> one place only. If everybody was perfect all the time, your argument
> would be totally valid. But we're not. That's why reducing redundancy
> (in the end, that's what these abstractions do) is a good thing. It
> makes code more readable, more maintainable and more secure.
>
> Comet Support has an article about how SQL abstraction is handled in
> CakePHP (http://cakephp.prometsupport.com/tag/sql-injection/). This is
> a good example how powerful such an abstraction can be. NOTE: I'm not
> suggesting WP should absolutely do it that way. I just want to give an
> example how powerful an abstraction can be (note that you can
> guarantee correct SQL because you're building the statement in the
> abstraction method).
>
> Still unconvinced?
> Florian
>   
>

From wordpress at redfootwebdesign.com  Thu Jan 22 14:45:00 2009
From: wordpress at redfootwebdesign.com (Red Foot Web Design Wordpress)
Date: Thu Jan 22 14:45:14 2009
Subject: [wp-hackers] Howto exclude capital words (within URL address) 
	from being searched and replaced?
In-Reply-To: <f99a6f640901220440h78fdf8d0w664b2ef855eeb895@mail.gmail.com>
References: <f99a6f640901220440h78fdf8d0w664b2ef855eeb895@mail.gmail.com>
Message-ID: <160203ed0901220645q1d5297d2mad5d9ed4eebf2dfd@mail.gmail.com>

The problem is stemming from your use of \b (word boundaries). It is seeing
the word "GANDHI" as a word because "
http://somesite.com/2007/04/i-worship-GANDHI/" matches the definition of a
boundary. More specifically it sees GANDHI/, the first character is a word
character and the last character is a non-Word character. Probably the only
way to get away form this is to not use word boundaries. With word
boundaries setup like this you aren't even considering whether or not the
text is wrapped in an <a>. So it is difficult to prevent it from
happening...

You may consider using this regex:

([A-Z][A-Z0-9]{2,})(\s|$)

This will match an capitalized word with a space character following it, or
is the end of line. This will not match the URL above. But should find all
your other capitalized cases.

Lew

On Thu, Jan 22, 2009 at 7:40 AM, Chetan Kunte <ckunte@gmail.com> wrote:

> Hi -
>
> I was wondering if any of you could help me with a unique problem I
> have with regards to a plugin I wrote sometime ago:
> http://wordpress.org/extend/plugins/small-caps/
>
> This plugin takes capitalized words, and turns them into small caps
> using the <abbr> html tag. ( More here:
> http://ckunte.com/archives/small-caps ). Please see the basic plugin
> code below.
>
> -- start of code --
>
> function ckunte_smallcaps($text) {
>        $search = "/\b([A-Z][A-Z0-9]{2,})\b/";
>        $replace = "<abbr>$1</abbr>";
>        $text = preg_replace($search,$replace,$text);
>        return $text;
> }
> //
> if (function_exists('add_filter')) {
>        add_filter('the_content', 'ckunte_smallcaps');
> }
>
> -- end of code --
>
> This code works well--with an exception and an unintended consequence.
> For example, if a URL has a Capital words in them like for example
> below,
>
> http://somesite.com/2007/04/i-worship-GANDHI/
>
> then this plugin does, yes you guessed it:
>
> http://somesite.com/2007/04/i-worship-<abbr>GANDHI</abbr>/
>
> And thus potentially breaking the link.
>
> Could anyone suggest how I could escape the words inside <a> tag please?
>
> Grateful for your help,
> --
> Chetan, ckunte.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jer-wphackers at simianuprising.com  Thu Jan 22 14:48:02 2009
From: jer-wphackers at simianuprising.com (Jeremy Clarke)
Date: Thu Jan 22 14:48:14 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <1232625836.2502.9.camel@rillian.narnia.sunriseroad.net>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
	<1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>
	<b88434820901211714g3f2df032r4a9aa35f6f6ed895@mail.gmail.com>
	<497830FC.20000@cubegames.net>
	<1232616629.2502.4.camel@rillian.narnia.sunriseroad.net>
	<49783D59.9010605@cubegames.net>
	<1232625836.2502.9.camel@rillian.narnia.sunriseroad.net>
Message-ID: <e1202cb10901220648u3973e92dk63d88173c33a0a11@mail.gmail.com>

On Thu, Jan 22, 2009 at 7:03 AM, Jeremy Visser <jeremy.visser@gmail.com> wrote:
> On Thu, 2009-01-22 at 19:33 +1000, Ryan McCue wrote:
>> Ideally, this would be a administration option to select which image to
>> use. Possibly even a plugin-domain thing.
>
> Not sure if this is what you mean, but if get_avatar() is used to
> generate the Gravatar URL, the image will respect the Gravatar
> preferences in the Settings menu -- i.e. Wavatar, Identicon, whatever.
>
> And, um, to "select" an image to display, you go to
> http://www.gravatar.com/ and upload one. ;)

I think he meant more that it should be possible to override the image
in favor of something other than the admin email's gravatar. For
instance a multi-use blog would probably rather have the blog's logo
than the face of their site manager ;)

-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From jason.wohlford at beasleyallen.com  Thu Jan 22 15:00:51 2009
From: jason.wohlford at beasleyallen.com (Jason Wohlford)
Date: Thu Jan 22 15:01:04 2009
Subject: [wp-hackers] Bad Link Bug?
Message-ID: <4FC5AE1B-F321-4080-9389-DE71A716034E@beasleyallen.com>

I'm tracking to track down a bug. I'm getting anchor tag attributes  
that start with a double-quote and end with a single quote in my  
trackback section. This makes for a bad link.

See one of the websites I manage for an example[1]. Look for a  
trackback link with a "external nofollow" attribute. That rel  
attribute has bad quotes as well.

[1] Yamaha Rhino Rollover: Report Outlines Danger | Beasley Allen
<http://www.yamaha-rhino-lawyer.com/news/2008/05/28/report-outlines-danger/ 
 >

I'm using Disqus, but when I turn off the plugin the problem still  
exists.

Is this a bug?

Cheers,
Jason

-- 
Jason Wohlford
<jason.wohlford@beasleyallen.com>
<http://www.beasleyallen.com/>



From jason.wohlford at beasleyallen.com  Thu Jan 22 15:16:18 2009
From: jason.wohlford at beasleyallen.com (Jason Wohlford)
Date: Thu Jan 22 15:16:35 2009
Subject: [wp-hackers] Bad Link Bug?
In-Reply-To: <4FC5AE1B-F321-4080-9389-DE71A716034E@beasleyallen.com>
References: <4FC5AE1B-F321-4080-9389-DE71A716034E@beasleyallen.com>
Message-ID: <BEEC5254-FA18-47DD-984E-DD734CEDD4A2@beasleyallen.com>

Bah! Nevermind. Turns out its the Google Analyticator plugin.

On Jan 22, 2009, at 9:00 AM, Jason Wohlford wrote:

> I'm tracking to track down a bug. I'm getting anchor tag attributes  
> that start with a double-quote and end with a single quote in my  
> trackback section. This makes for a bad link.
>
> See one of the websites I manage for an example[1]. Look for a  
> trackback link with a "external nofollow" attribute. That rel  
> attribute has bad quotes as well.
>
> [1] Yamaha Rhino Rollover: Report Outlines Danger | Beasley Allen
> <http://www.yamaha-rhino-lawyer.com/news/2008/05/28/report-outlines-danger/ 
> >
>
> I'm using Disqus, but when I turn off the plugin the problem still  
> exists.
>
> Is this a bug?
>
> Cheers,
> Jason


-- 
Jason Wohlford
<jason.wohlford@beasleyallen.com>
<http://www.beasleyallen.com/>

From ron at cavemonkey50.com  Thu Jan 22 15:29:26 2009
From: ron at cavemonkey50.com (Ronald Heft)
Date: Thu Jan 22 15:29:39 2009
Subject: [wp-hackers] Bad Link Bug?
In-Reply-To: <BEEC5254-FA18-47DD-984E-DD734CEDD4A2@beasleyallen.com>
References: <4FC5AE1B-F321-4080-9389-DE71A716034E@beasleyallen.com>
	<BEEC5254-FA18-47DD-984E-DD734CEDD4A2@beasleyallen.com>
Message-ID: <eff2e86c0901220729o30af8ad5yc48f64fe4a7940b8@mail.gmail.com>

Hey Jason,
I'm the author of the Google Analyticator plugin. Feel free to email me off
list and we can correct your issue with the links.

--
Ronald Heft, Jr.
Information Sciences and Technology
Pennsylvania State University

ronaldheft.com
cavemonkey50.com


On Thu, Jan 22, 2009 at 10:16 AM, Jason Wohlford <
jason.wohlford@beasleyallen.com> wrote:

> Bah! Nevermind. Turns out its the Google Analyticator plugin.
>
>
> On Jan 22, 2009, at 9:00 AM, Jason Wohlford wrote:
>
>  I'm tracking to track down a bug. I'm getting anchor tag attributes that
>> start with a double-quote and end with a single quote in my trackback
>> section. This makes for a bad link.
>>
>> See one of the websites I manage for an example[1]. Look for a trackback
>> link with a "external nofollow" attribute. That rel attribute has bad quotes
>> as well.
>>
>> [1] Yamaha Rhino Rollover: Report Outlines Danger | Beasley Allen
>> <
>> http://www.yamaha-rhino-lawyer.com/news/2008/05/28/report-outlines-danger/
>> >
>>
>> I'm using Disqus, but when I turn off the plugin the problem still exists.
>>
>> Is this a bug?
>>
>> Cheers,
>> Jason
>>
>
>
> --
> Jason Wohlford
> <jason.wohlford@beasleyallen.com>
> <http://www.beasleyallen.com/>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ozh at planetozh.com  Thu Jan 22 15:31:11 2009
From: ozh at planetozh.com (Ozh)
Date: Thu Jan 22 15:33:27 2009
Subject: [wp-hackers] Howto exclude capital words (within URL address) from
	being searched and replaced?
In-Reply-To: <160203ed0901220645q1d5297d2mad5d9ed4eebf2dfd@mail.gmail.com>
Message-ID: <OF19581A00.E3BA3A4E-ONC1257546.00513FB5-C1257546.00554120@notes.edfgdf.fr>

> Could anyone suggest how I could escape the words inside <a> tag please?

Most likely, you want to exclude anything inside tags, not just <a> (and 
not just a tricky regexp to find URLs only). For instance you don't want 
to deal with <em class="BOLD"> or whatever is inside a tag.

The following is untested but should be a decent start:

--- code ---

add_filter('the_content', 'ckunte_smallcaps_parse');

function ckunte_smallcaps_parse($content) {
  $split_on_html_tags = '/(<[^>]+>)/';
  $content_split = preg_split($split_on_html_tags, $content,
    -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);

  foreach ($content_split as $num=>$chunk) {
    if (substr($chunk, 0, 1) != '<') {
      $content_split[$num] = ckunte_smallcaps($chunk);
    }
  }

  $content = join('', $content_split);

  return $content;
}

--- /code ---

with your original ckunte_smallcaps function.

Explanations:

We split everything on html tags (the (<[^>]+>) regexp) so
<anytag stuff="this">some text inside tags</anytag>
becomes
array('<anytag stuff="this">', 'some text inside tags', '</anytag>');

Then for each of this array items, if it's not a tag (ie first char is not 
"<") we're passing them through your smallcap function

At the end, glue everything back and return

Still not perfect because you won't want to deal with what's within 
<script> and </script>, or <style> and </style> for instance.

Hope that helps.


Ozh
-- 
http://planetozh.com/


From jason.wohlford at beasleyallen.com  Thu Jan 22 15:34:54 2009
From: jason.wohlford at beasleyallen.com (Jason Wohlford)
Date: Thu Jan 22 15:35:09 2009
Subject: [wp-hackers] Bad Link Bug?
In-Reply-To: <eff2e86c0901220729o30af8ad5yc48f64fe4a7940b8@mail.gmail.com>
References: <4FC5AE1B-F321-4080-9389-DE71A716034E@beasleyallen.com>
	<BEEC5254-FA18-47DD-984E-DD734CEDD4A2@beasleyallen.com>
	<eff2e86c0901220729o30af8ad5yc48f64fe4a7940b8@mail.gmail.com>
Message-ID: <B1CE2E68-4CFD-4BCC-AA19-FF01066939C4@beasleyallen.com>

Thanks Ron. I've already contacted you through your website.

Oh! And there's already a patch from you in my mailbox. Thanks!

On Jan 22, 2009, at 9:29 AM, Ronald Heft wrote:

> Hey Jason,
> I'm the author of the Google Analyticator plugin. Feel free to email  
> me off
> list and we can correct your issue with the links.
>
> --
> Ronald Heft, Jr.
> Information Sciences and Technology
> Pennsylvania State University
>
> ronaldheft.com
> cavemonkey50.com
>
>
> On Thu, Jan 22, 2009 at 10:16 AM, Jason Wohlford <
> jason.wohlford@beasleyallen.com> wrote:
>
>> Bah! Nevermind. Turns out its the Google Analyticator plugin.
>>
>>
>> On Jan 22, 2009, at 9:00 AM, Jason Wohlford wrote:
>>
>> I'm tracking to track down a bug. I'm getting anchor tag attributes  
>> that
>>> start with a double-quote and end with a single quote in my  
>>> trackback
>>> section. This makes for a bad link.
>>>
>>> See one of the websites I manage for an example[1]. Look for a  
>>> trackback
>>> link with a "external nofollow" attribute. That rel attribute has  
>>> bad quotes
>>> as well.
>>>
>>> [1] Yamaha Rhino Rollover: Report Outlines Danger | Beasley Allen
>>> <
>>> http://www.yamaha-rhino-lawyer.com/news/2008/05/28/report-outlines-danger/
>>>>
>>>
>>> I'm using Disqus, but when I turn off the plugin the problem still  
>>> exists.
>>>
>>> Is this a bug?
>>>
>>> Cheers,
>>> Jason
>>>
>>
>>
>> --
>> Jason Wohlford
>> <jason.wohlford@beasleyallen.com>
>> <http://www.beasleyallen.com/>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


-- 
Jason Wohlford
<jason.wohlford@beasleyallen.com>
<http://www.beasleyallen.com/>



From ozh at planetozh.com  Thu Jan 22 15:33:07 2009
From: ozh at planetozh.com (Ozh)
Date: Thu Jan 22 15:36:23 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <5a1dad880901201702i2a33aa73q1af71adf01b8411d@mail.gmail.com>
Message-ID: <OFA8D8EE73.DF439CC4-ONC1257546.00554D10-C1257546.00556E5C@notes.edfgdf.fr>

Thanks for all your suggestions peeps.
Didn't elected a way to do things yet, but this will surely help.

Cheers

Ozh
-- 
http://planetozh.com/

From dangayle at gmail.com  Thu Jan 22 15:45:40 2009
From: dangayle at gmail.com (Dan Gayle)
Date: Thu Jan 22 15:45:51 2009
Subject: [wp-hackers] Seeking some advice
In-Reply-To: <B74774A2-AA5D-4DF1-BAEE-718ACDE2D7E6@striderweb.com>
References: <ae81acd10901201155r426f59fdkc26a129266dc3493@mail.gmail.com>
	<B74774A2-AA5D-4DF1-BAEE-718ACDE2D7E6@striderweb.com>
Message-ID: <74733758-6ABD-4741-A2B2-E446290291C4@gmail.com>

How about using custom fields? I love custom fields for editorial use.  
Although, sometimes I have to wonder how many taxonomies we really  
need, or if it would be better to learn how to do more with the  
already existing categories/tags.

> People are suggesting limiting authors to a certain category and  
> such -- but couldn't you instead put a custom loop in your theme  
> that only pulls posts by author X, Y or Z?  Then those authors could  
> give their posts categories if they wanted.
From wp-hackers at striderweb.com  Thu Jan 22 15:50:15 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jan 22 15:50:29 2009
Subject: [wp-hackers] distinguish plugin options?
Message-ID: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>

Okay, I have a quandry.

I'm trying to figure out if there's any way to distinguish, in the  
wp_options table, core WordPress options from options set by plugins.   
The only way I can think to do this is to (shudder) maintain a list of  
WP Core options, and if a particular option isn't on that list it must  
be from a plugin.

That isn't a very good solution because it's fragile and manpower  
intensive -- I would have to maintain that list vigilantly and  
basically forever....

Does anyone else have any suggestion as to how this might be  
accomplished?

This all relates to my Virtual Multiblog system -- a commenter on my  
blog had what I thought was an excellent idea, but I don't see how to  
implement it well, unless I can distinguish third-party options from  
core.  Here's a link to the original discussion:

http://striderweb.com/nerdaphernalia/?p=236&cp=1#comment-2133

Stephen
From TurnerJD at cofc.edu  Thu Jan 22 15:57:13 2009
From: TurnerJD at cofc.edu (John Turner)
Date: Thu Jan 22 15:57:30 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>
Message-ID: <C59E0189.9A58%TurnerJD@cofc.edu>

Just create the list automatically, write a shell scripts that checks out
the file from the wordpress repository every night and parse that file for
the fields in wp then update your list or db.


John Turner
johndturner.com




> From: Stephen Rider <wp-hackers@striderweb.com>
> Reply-To: <wp-hackers@lists.automattic.com>
> Date: Thu, 22 Jan 2009 09:50:15 -0600
> To: <wp-hackers@lists.automattic.com>
> Subject: [wp-hackers] distinguish plugin options?
> 
> Okay, I have a quandry.
> 
> I'm trying to figure out if there's any way to distinguish, in the
> wp_options table, core WordPress options from options set by plugins.
> The only way I can think to do this is to (shudder) maintain a list of
> WP Core options, and if a particular option isn't on that list it must
> be from a plugin.
> 
> That isn't a very good solution because it's fragile and manpower
> intensive -- I would have to maintain that list vigilantly and
> basically forever....
> 
> Does anyone else have any suggestion as to how this might be
> accomplished?
> 
> This all relates to my Virtual Multiblog system -- a commenter on my
> blog had what I thought was an excellent idea, but I don't see how to
> implement it well, unless I can distinguish third-party options from
> core.  Here's a link to the original discussion:
> 
> http://striderweb.com/nerdaphernalia/?p=236&cp=1#comment-2133
> 
> Stephen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From glenn at glennansley.com  Thu Jan 22 15:57:41 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Thu Jan 22 16:28:24 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>
References: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>
Message-ID: <3283f0830901220757x65ec800bxee2453252efda18@mail.gmail.com>

Could you GREP svn trunk for add/update_option and parse the data?

Glenn Ansley
Web Design | http://glennansley.com
Custom WP Plugins | http://fullthrottledevelopment.com

On Thu, Jan 22, 2009 at 10:50 AM, Stephen Rider
<wp-hackers@striderweb.com> wrote:
> Okay, I have a quandry.
>
> I'm trying to figure out if there's any way to distinguish, in the
> wp_options table, core WordPress options from options set by plugins.  The
> only way I can think to do this is to (shudder) maintain a list of WP Core
> options, and if a particular option isn't on that list it must be from a
> plugin.
>
> That isn't a very good solution because it's fragile and manpower intensive
> -- I would have to maintain that list vigilantly and basically forever....
>
> Does anyone else have any suggestion as to how this might be accomplished?
>
> This all relates to my Virtual Multiblog system -- a commenter on my blog
> had what I thought was an excellent idea, but I don't see how to implement
> it well, unless I can distinguish third-party options from core.  Here's a
> link to the original discussion:
>
> http://striderweb.com/nerdaphernalia/?p=236&cp=1#comment-2133
>
> Stephen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at striderweb.com  Thu Jan 22 16:56:47 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jan 22 16:57:02 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <3283f0830901220757x65ec800bxee2453252efda18@mail.gmail.com>
References: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>
	<3283f0830901220757x65ec800bxee2453252efda18@mail.gmail.com>
Message-ID: <848D50E3-C9E1-46DE-8A3D-009188D2F31E@striderweb.com>

I'm trying to avoid having to create/maintain some kind of ongoing  
master list.  Especially as, in order for users to have the most  
current, they would basically be dinging my servers constantly.

In the long term, it would be nice if WordPress created such a list  
that could exist *within the core download*, so that scripts trying to  
figure out what options are "core" or not could do so easily.

Such a thing would also be handy for people (or plugins) trying to  
clean up old stale data, such as options for plugins they no longer  
have.

Also, aren't there some cases in WP core where there are variable  
option names?  add_option( 'option-'.$x, ...) or similar?

Stephen

-- 
Stephen Rider
<http://striderweb.com/>


On Jan 22, 2009, at 9:57 AM, Glenn Ansley wrote:

> Could you GREP svn trunk for add/update_option and parse the data?
>
> On Thu, Jan 22, 2009 at 10:50 AM, Stephen Rider
> <wp-hackers@striderweb.com> wrote:
>
>> I'm trying to figure out if there's any way to distinguish, in the
>> wp_options table, core WordPress options from options set by  
>> plugins.  The
>> only way I can think to do this is to (shudder) maintain a list of  
>> WP Core
>> options, and if a particular option isn't on that list it must be  
>> from a
>> plugin.
>>
>> That isn't a very good solution because it's fragile and manpower  
>> intensive
>> -- I would have to maintain that list vigilantly and basically  
>> forever....
>>
>> Does anyone else have any suggestion as to how this might be  
>> accomplished?
>>
>> This all relates to my Virtual Multiblog system -- a commenter on  
>> my blog
>> had what I thought was an excellent idea, but I don't see how to  
>> implement
>> it well, unless I can distinguish third-party options from core.   
>> Here's a
>> link to the original discussion:
>>
>> http://striderweb.com/nerdaphernalia/?p=236&cp=1#comment-2133

From ozh at planetozh.com  Thu Jan 22 17:45:07 2009
From: ozh at planetozh.com (Ozh)
Date: Thu Jan 22 17:47:15 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <848D50E3-C9E1-46DE-8A3D-009188D2F31E@striderweb.com>
References: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>
	<3283f0830901220757x65ec800bxee2453252efda18@mail.gmail.com>
	<848D50E3-C9E1-46DE-8A3D-009188D2F31E@striderweb.com>
Message-ID: <ae81acd10901220945n49022d15o2f7f6fa36eeb328a@mail.gmail.com>

As I see, it, there are 2 options:

Option 1:
100% automated: parse source and look for add_option() and
update_option(), as well as parse upgrade.php and look for
"option_name" and determine if it's added, removed or renamed.
Basically, a nightmare script to build.

Option 2:
95% automated: every time a major release is out, install it / upgrade
to it and dump option names into a static file. Update your plugin in
which there'll be something like include('./option_list_for_wp_' .
$wp_version);
Yes it means you'll have to (very minorly) update the list & plugin as
long as either you or WP are active. What you'll do anyway. And if
you're no longer active, chances are you'll don't care a lot about
supporting a plugin, right? :)

Ozh

On Thu, Jan 22, 2009 at 5:56 PM, Stephen Rider
<wp-hackers@striderweb.com> wrote:
> I'm trying to avoid having to create/maintain some kind of ongoing master
> list.  Especially as, in order for users to have the most current, they
> would basically be dinging my servers constantly.
>
> In the long term, it would be nice if WordPress created such a list that
> could exist *within the core download*, so that scripts trying to figure out
> what options are "core" or not could do so easily.
>
> Such a thing would also be handy for people (or plugins) trying to clean up
> old stale data, such as options for plugins they no longer have.
>
> Also, aren't there some cases in WP core where there are variable option
> names?  add_option( 'option-'.$x, ...) or similar?
>
> Stephen
>
> --
> Stephen Rider
> <http://striderweb.com/>
-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
From mikeschinkel at newclarity.net  Thu Jan 22 17:59:32 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jan 22 18:01:03 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>
Message-ID: <23634798.2021232647180916.JavaMail.DELL-1405$@Dell-1405>

"Stephen Rider" <wp-hackers@striderweb.com> wrote:
> I'm trying to figure out if there's any way to distinguish, 
> in the wp_options table, core WordPress options from options 
> set by plugins. The only way I can think to do this is to 
> (shudder) maintain a list of WP Core options, and if a 
> particular option isn't on that list it must be from a 
> plugin.

Oh, this could be the beginning of a really good thing.

Imagine an addition to WordPress core that would communicate to WordPress.org the certain options are in use by plugins that elected to report. It would also be an option the user would have to turn on and then that option could report any previously unreported plugins options to the WordPress service. Most end users would never turn on that option but plugin developers would turn on the option to report so as to ensure their options are cataloged.  I'm glossing over lots of details because if others don't like this idea then it's a waste of time describing how but it could empower a real great automatically maintained option reference!

Developers could even include documentation for each in their 

   define_option('foobar', 'The FooBar option is used to...'); 

Or:

   document_option('foobar', 'The FooBar option is used to...');

Also the work I'm doing on web services could handle the heavily lifting of this idea (my web service work is tabled until early Feb after I finish my current paying project.) 

Thoughts?

-Mike Schinkel
http://mikeschinkel.com/

From alan at verselogic.net  Thu Jan 22 18:03:28 2009
From: alan at verselogic.net (Alan J Castonguay)
Date: Thu Jan 22 18:03:48 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <e1202cb10901220648u3973e92dk63d88173c33a0a11@mail.gmail.com>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
	<1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>
	<b88434820901211714g3f2df032r4a9aa35f6f6ed895@mail.gmail.com>
	<497830FC.20000@cubegames.net>
	<1232616629.2502.4.camel@rillian.narnia.sunriseroad.net>
	<49783D59.9010605@cubegames.net>
	<1232625836.2502.9.camel@rillian.narnia.sunriseroad.net>
	<e1202cb10901220648u3973e92dk63d88173c33a0a11@mail.gmail.com>
Message-ID: <409F661E-4B64-480F-9B99-18E20371569E@verselogic.net>

That's a question of splitting the Administrator's email from an  
Editor/Contributor's email. If you're syndicating an Author's  
archive, you probably /do/ want their face.

-Alan

On 22-Jan-09, at 9:48 AM, Jeremy Clarke wrote:

> On Thu, Jan 22, 2009 at 7:03 AM, Jeremy Visser  
> <jeremy.visser@gmail.com> wrote:
>> On Thu, 2009-01-22 at 19:33 +1000, Ryan McCue wrote:
>>> Ideally, this would be a administration option to select which  
>>> image to
>>> use. Possibly even a plugin-domain thing.
>>
>> Not sure if this is what you mean, but if get_avatar() is used to
>> generate the Gravatar URL, the image will respect the Gravatar
>> preferences in the Settings menu -- i.e. Wavatar, Identicon,  
>> whatever.
>>
>> And, um, to "select" an image to display, you go to
>> http://www.gravatar.com/ and upload one. ;)
>
> I think he meant more that it should be possible to override the image
> in favor of something other than the admin email's gravatar. For
> instance a multi-use blog would probably rather have the blog's logo
> than the face of their site manager ;)
>
> -- 
> Jeremy Clarke | http://simianuprising.com
> Code and Design | http://globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dougal at gunters.org  Thu Jan 22 18:14:23 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Thu Jan 22 18:14:37 2009
Subject: [wp-hackers] Howto exclude capital words (within URL address)
	from	being searched and replaced?
In-Reply-To: <f99a6f640901220440h78fdf8d0w664b2ef855eeb895@mail.gmail.com>
References: <f99a6f640901220440h78fdf8d0w664b2ef855eeb895@mail.gmail.com>
Message-ID: <4978B77F.7070409@gunters.org>

Chetan Kunte wrote:
> [...]
>
> This code works well--with an exception and an unintended consequence.
> For example, if a URL has a Capital words in them like for example
> below,
>
> http://somesite.com/2007/04/i-worship-GANDHI/
>
> then this plugin does, yes you guessed it:
>
> http://somesite.com/2007/04/i-worship-<abbr>GANDHI</abbr>/
>
> And thus potentially breaking the link.
>
> Could anyone suggest how I could escape the words inside <a> tag please?
>   

You could check out my Text Filter Suite plugin:

  http://wordpress.org/extend/plugins/text-filter-suite/

In particular, check out the filter_cdata_content() function in 
tfs-core.php. This function uses preg_replace_callback() and a tricky 
regex to only perform replacements to text that is not part of an HTML tag.

-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
From otto at ottodestruct.com  Thu Jan 22 18:52:32 2009
From: otto at ottodestruct.com (Otto)
Date: Thu Jan 22 18:52:42 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <1232616629.2502.4.camel@rillian.narnia.sunriseroad.net>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
	<1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>
	<b88434820901211714g3f2df032r4a9aa35f6f6ed895@mail.gmail.com>
	<497830FC.20000@cubegames.net>
	<1232616629.2502.4.camel@rillian.narnia.sunriseroad.net>
Message-ID: <161617690901221052u1c9b5e50r54e77dbd9d39d8c4@mail.gmail.com>

On Thu, Jan 22, 2009 at 3:30 AM, Jeremy Visser <jeremy.visser@gmail.com> wrote:
> On Thu, 2009-01-22 at 18:40 +1000, Ryan McCue wrote:
>> The problem is that isn't in the Atom or RSS standards, and would have
>> to be implemented in a WP namespace. That would inevitably cause more
>> work, especially if the WP developers ever actually write a DTD for the
>> namespace.
>
> Like I just discovered from the Atom and RSS links you sent, there is
> actually provision for a "blog logo" in both standards, which WordPress
> would set to the Gravatar URL of the blog admin (I suppose from the
> "admin_email" field in wp_options).

In Atom, I'd recommend using the <icon> instead of the <logo>.

For RSS, use the <image> tag.

-Otto
From cclarkson at htcomp.net  Thu Jan 22 19:10:40 2009
From: cclarkson at htcomp.net (Charles K. Clarkson)
Date: Thu Jan 22 19:11:06 2009
Subject: [wp-hackers] Howto exclude capital words (within URL address)
	from	being searched and replaced?
In-Reply-To: <4978B77F.7070409@gunters.org>
References: <f99a6f640901220440h78fdf8d0w664b2ef855eeb895@mail.gmail.com>
	<4978B77F.7070409@gunters.org>
Message-ID: <4978C4B0.1090101@htcomp.net>

Dougal Campbell wrote:

> Chetan Kunte wrote:
 >
> > Could anyone suggest how I could escape the words inside <a> tag please?
>
> You could check out my Text Filter Suite plugin:
> 
>  http://wordpress.org/extend/plugins/text-filter-suite/

You may also want to be sure you are not already inside an 
<acronym></acronym> or another <abbr></abbr> tag.


HTH,

Charles Clarkson
-- 
Mobile Home Investor
Free Market Advocate
Programmer

Stephenville, TX
http://www.clarksonenergyhomes.com/wordpress/about/
http://twitter.com/CharlesClarkson
+1 (254) 968-8328
From dangayle at gmail.com  Thu Jan 22 19:27:21 2009
From: dangayle at gmail.com (Dan Gayle)
Date: Thu Jan 22 19:27:32 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
Message-ID: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>

Can anyone explain the difference between is_home() and is_front_page()?

They appear to me, from the Codex documentation, that they do the same  
thing.
From ncrice at gmail.com  Thu Jan 22 19:31:09 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Thu Jan 22 19:31:22 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
In-Reply-To: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
References: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
Message-ID: <862d087f0901221131g2dc37e5eqda275d8a7138c119@mail.gmail.com>

is_home is limited in that it only returns true if you are on the ACTUAL
home page, whereas is_front_page returns true even if you're using a
specific page as your blog's homepage.

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Thu, Jan 22, 2009 at 2:27 PM, Dan Gayle <dangayle@gmail.com> wrote:

> Can anyone explain the difference between is_home() and is_front_page()?
>
> They appear to me, from the Codex documentation, that they do the same
> thing.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From glenn at glennansley.com  Thu Jan 22 19:33:41 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Thu Jan 22 19:37:39 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
In-Reply-To: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
References: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
Message-ID: <3283f0830901221133k25d3caa4gbff844e315ad793a@mail.gmail.com>

If you set your front page to be a page, is_home() refers to your main
index (blog) loop that is the front page by default.
http://codex.wordpress.org/Conditional_Tags
          > Note: If you select a static Page as your frontpage (see
below), this tag will be applied to your "posts page".


On Thu, Jan 22, 2009 at 2:27 PM, Dan Gayle <dangayle@gmail.com> wrote:
> Can anyone explain the difference between is_home() and is_front_page()?
>
> They appear to me, from the Codex documentation, that they do the same
> thing.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mdmartz at sivel.net  Thu Jan 22 19:38:52 2009
From: mdmartz at sivel.net (Matt Martz)
Date: Thu Jan 22 19:39:02 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
In-Reply-To: <862d087f0901221131g2dc37e5eqda275d8a7138c119@mail.gmail.com>
References: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
	<862d087f0901221131g2dc37e5eqda275d8a7138c119@mail.gmail.com>
Message-ID: <518fa9630901221138n704fe788j6c489db41873a5bb@mail.gmail.com>

On Thu, Jan 22, 2009 at 2:31 PM, Nathan Rice <ncrice@gmail.com> wrote:
> is_home is limited in that it only returns true if you are on the ACTUAL
> home page, whereas is_front_page returns true even if you're using a
> specific page as your blog's homepage.
>
> Nathan

Um I think you mean is_home is for checking whether you are on the
posts (blog) page or not...is_front_page is for checking if you are on
the front page, which can, but doesn't have to be the blog page.

-- 
Matt Martz
matt@sivel.net
From if.website at gmail.com  Thu Jan 22 19:39:20 2009
From: if.website at gmail.com (Austin Matzko)
Date: Thu Jan 22 19:39:44 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
In-Reply-To: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
References: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
Message-ID: <674b4a3b0901221139h47dc9731y72830083978edfc5@mail.gmail.com>

On Thu, Jan 22, 2009 at 1:27 PM, Dan Gayle <dangayle@gmail.com> wrote:
> Can anyone explain the difference between is_home() and is_front_page()?
>
> They appear to me, from the Codex documentation, that they do the same
> thing.

is_home() returns true for the page where your latest posts show up.
Most of the time that's the top-level page such as
http://example.com/.  The top level page is also where is_front_page()
returns true, so most of the time they do return true at the same
page.

But if you have a static front page, your front page could be at
http://example.com/ (is_front_page() returns true) but your latest
posts somewhere else, e.g. http://example.com/latest-posts/ (is_home()
returns true here and not at http://example.com/).

In the future, you should know that a great place for support
questions like this is the WordPress support forums:
http://wordpress.org/support/  (The wp-hackers has historically been
about development issues).
From dangayle at gmail.com  Thu Jan 22 19:41:23 2009
From: dangayle at gmail.com (Dan Gayle)
Date: Thu Jan 22 19:41:39 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
In-Reply-To: <862d087f0901221131g2dc37e5eqda275d8a7138c119@mail.gmail.com>
References: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
	<862d087f0901221131g2dc37e5eqda275d8a7138c119@mail.gmail.com>
Message-ID: <C5E63147-5483-4CAF-AA2A-0E02779C1C5D@gmail.com>

So, for instance, if the "About" page is set as the home page in  
options, is_front_page() and is_home() will both return true if I'm  
looking at http://example.com

But if I'm looking at http://example.com/about, is_front_page will  
return true, while is_home() will return false.

That's correct, right?


On Jan 22, 2009, at 11:31 AM, Nathan Rice wrote:

> is_home is limited in that it only returns true if you are on the  
> ACTUAL
> home page, whereas is_front_page returns true even if you're using a
> specific page as your blog's homepage.
>
> Nathan
>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
>
>
> On Thu, Jan 22, 2009 at 2:27 PM, Dan Gayle <dangayle@gmail.com> wrote:
>
>> Can anyone explain the difference between is_home() and  
>> is_front_page()?
>>
>> They appear to me, from the Codex documentation, that they do the  
>> same
>> thing.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ncrice at gmail.com  Thu Jan 22 19:41:53 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Thu Jan 22 19:42:06 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
In-Reply-To: <518fa9630901221138n704fe788j6c489db41873a5bb@mail.gmail.com>
References: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
	<862d087f0901221131g2dc37e5eqda275d8a7138c119@mail.gmail.com>
	<518fa9630901221138n704fe788j6c489db41873a5bb@mail.gmail.com>
Message-ID: <862d087f0901221141y2425ecf9h40c28a7f8266e853@mail.gmail.com>

On Thu, Jan 22, 2009 at 2:38 PM, Matt Martz <mdmartz@sivel.net> wrote:
>
>
> Um I think you mean is_home is for checking whether you are on the
> posts (blog) page or not...is_front_page is for checking if you are on
> the front page, which can, but doesn't have to be the blog page.
>

Yes.  Actual Blog Home Page == Page where your blog posts show up (as set in
the user options).

Sorry about the confusion.

Nathan
From ncrice at gmail.com  Thu Jan 22 19:44:06 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Thu Jan 22 19:44:19 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
In-Reply-To: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
References: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
Message-ID: <862d087f0901221144s700bd236ra35c063d7f711aba@mail.gmail.com>

It's also worth noting that the is_front_page() function was introduced in
WordPress 2.5 (I believe), so using it in any version prior will result in a
"function does not exist" error.
Not that anyone here would still be using the 2.3 branch.  I just thought it
was worth noting, just in case.

Nathan


On Thu, Jan 22, 2009 at 2:27 PM, Dan Gayle <dangayle@gmail.com> wrote:

> Can anyone explain the difference between is_home() and is_front_page()?
>
> They appear to me, from the Codex documentation, that they do the same
> thing.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ncrice at gmail.com  Thu Jan 22 19:46:49 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Thu Jan 22 19:47:02 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
In-Reply-To: <C5E63147-5483-4CAF-AA2A-0E02779C1C5D@gmail.com>
References: <6DED5F32-988B-4C27-9A3D-2CB913593DB6@gmail.com>
	<862d087f0901221131g2dc37e5eqda275d8a7138c119@mail.gmail.com>
	<C5E63147-5483-4CAF-AA2A-0E02779C1C5D@gmail.com>
Message-ID: <862d087f0901221146n20bbb4aciee38800233064688@mail.gmail.com>

Close, but no.
If your About page is set as your front page, and you are viewing
http://example.com, then:
is_home() will return false
is_front_page() will return true.

If your About page is set as your front page, and your Blog page is set up
to list blog posts, and you are viewing http://example.com/blog then:
is_home() will return true
is_front_page() will retrun false

(Please correct me if I'm wrong, anyone).

Nathan


On Thu, Jan 22, 2009 at 2:41 PM, Dan Gayle <dangayle@gmail.com> wrote:

> So, for instance, if the "About" page is set as the home page in options,
> is_front_page() and is_home() will both return true if I'm looking at
> http://example.com
>
> But if I'm looking at http://example.com/about, is_front_page will return
> true, while is_home() will return false.
>
> That's correct, right?
>
>
>
> On Jan 22, 2009, at 11:31 AM, Nathan Rice wrote:
>
>  is_home is limited in that it only returns true if you are on the ACTUAL
>> home page, whereas is_front_page returns true even if you're using a
>> specific page as your blog's homepage.
>>
>> Nathan
>>
>> My Website
>> http://www.nathanrice.net/
>>
>> My Twitter
>> http://twitter.com/nathanrice
>>
>>
>> On Thu, Jan 22, 2009 at 2:27 PM, Dan Gayle <dangayle@gmail.com> wrote:
>>
>>  Can anyone explain the difference between is_home() and is_front_page()?
>>>
>>> They appear to me, from the Codex documentation, that they do the same
>>> thing.
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>  _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ckunte at gmail.com  Thu Jan 22 20:06:35 2009
From: ckunte at gmail.com (Chetan Kunte)
Date: Thu Jan 22 20:06:40 2009
Subject: [wp-hackers] Howto exclude capital words (within URL address) 
	from being searched and replaced?
In-Reply-To: <4978C4B0.1090101@htcomp.net>
References: <f99a6f640901220440h78fdf8d0w664b2ef855eeb895@mail.gmail.com>
	<4978B77F.7070409@gunters.org> <4978C4B0.1090101@htcomp.net>
Message-ID: <f99a6f640901221206u5cca5c0g14069a382455173@mail.gmail.com>

OMG, you guys rock, seriously!

To, scribu, Lew, Ozh, Dougal, and Charles, thank you so much. Let me
give them a try.

Lew, Ozh, Dougal -

Fantastic code at such short notice. Most grateful for your help.
-- 
Chetan, ckunte.com
From TurnerJD at cofc.edu  Thu Jan 22 20:09:33 2009
From: TurnerJD at cofc.edu (John Turner)
Date: Thu Jan 22 20:09:48 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
In-Reply-To: <862d087f0901221146n20bbb4aciee38800233064688@mail.gmail.com>
Message-ID: <C59E3CAD.9AA4%TurnerJD@cofc.edu>


 323  /**
 324   * Whether current page query is the front of the site.
 325   *
 326   * @since 2.5.0
 327   * @uses is_home()
 328   * @uses get_option()
 329   *
 330   * @return bool True, if front of site.
 331   */
 332  function is_front_page () {
 333      // most likely case
 334      if ( 'posts' == get_option('show_on_front') && is_home() )
 335          return true;
 336      elseif ( 'page' == get_option('show_on_front') &&
get_option('page_on_front') && is_page(get_option('page_on_front')) )
 337          return true;
 338      else
 339          return false;
 340  }
 341  
 342  /**
 343   * Whether current page view is the blog homepage.
 344   *
 345   * @since 1.5.0
 346   * @uses $wp_query
 347   *
 348   * @return bool True if blog view homepage.
 349   */
 350  function is_home () {
 351      global $wp_query;
 352  
 353      return $wp_query->is_home;
 354  }
 355  

John Turner
http://johndturner.com





> From: Nathan Rice <ncrice@gmail.com>
> Reply-To: <wp-hackers@lists.automattic.com>
> Date: Thu, 22 Jan 2009 14:46:49 -0500
> To: <wp-hackers@lists.automattic.com>
> Subject: Re: [wp-hackers] Difference between is_home and is_front_page
> 
> Close, but no.
> If your About page is set as your front page, and you are viewing
> http://example.com, then:
> is_home() will return false
> is_front_page() will return true.
> 
> If your About page is set as your front page, and your Blog page is set up
> to list blog posts, and you are viewing http://example.com/blog then:
> is_home() will return true
> is_front_page() will retrun false
> 
> (Please correct me if I'm wrong, anyone).
> 
> Nathan
> 
> 
> On Thu, Jan 22, 2009 at 2:41 PM, Dan Gayle <dangayle@gmail.com> wrote:
> 
>> So, for instance, if the "About" page is set as the home page in options,
>> is_front_page() and is_home() will both return true if I'm looking at
>> http://example.com
>> 
>> But if I'm looking at http://example.com/about, is_front_page will return
>> true, while is_home() will return false.
>> 
>> That's correct, right?
>> 
>> 
>> 
>> On Jan 22, 2009, at 11:31 AM, Nathan Rice wrote:
>> 
>>  is_home is limited in that it only returns true if you are on the ACTUAL
>>> home page, whereas is_front_page returns true even if you're using a
>>> specific page as your blog's homepage.
>>> 
>>> Nathan
>>> 
>>> My Website
>>> http://www.nathanrice.net/
>>> 
>>> My Twitter
>>> http://twitter.com/nathanrice
>>> 
>>> 
>>> On Thu, Jan 22, 2009 at 2:27 PM, Dan Gayle <dangayle@gmail.com> wrote:
>>> 
>>>  Can anyone explain the difference between is_home() and is_front_page()?
>>>> 
>>>> They appear to me, from the Codex documentation, that they do the same
>>>> thing.
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>>>  _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Thu Jan 22 20:59:54 2009
From: otto at ottodestruct.com (Otto)
Date: Thu Jan 22 21:00:04 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>
References: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>
Message-ID: <161617690901221259w63eddc01ycd730af4f85812eb@mail.gmail.com>

On Thu, Jan 22, 2009 at 9:50 AM, Stephen Rider
<wp-hackers@striderweb.com> wrote:
> Okay, I have a quandry.
>
> I'm trying to figure out if there's any way to distinguish, in the
> wp_options table, core WordPress options from options set by plugins.  The
> only way I can think to do this is to (shudder) maintain a list of WP Core
> options, and if a particular option isn't on that list it must be from a
> plugin.
>
> That isn't a very good solution because it's fragile and manpower intensive
> -- I would have to maintain that list vigilantly and basically forever....
>
> Does anyone else have any suggestion as to how this might be accomplished?

If I wanted to figure it out, I'd add a hook to update_option, and
then have my hook run a debug_backtrace() to get the function call
stack. By examining that stack, you can determine what file made the
call to update_option, and if the file is in wp-content/plugins/*,
then it's a plugin's option and you'll know.

-Otto
From cclarkson at htcomp.net  Thu Jan 22 21:00:39 2009
From: cclarkson at htcomp.net (Charles K. Clarkson)
Date: Thu Jan 22 21:01:04 2009
Subject: [wp-hackers] nested shortcode
In-Reply-To: <8f93a7390901210206o5048c38bn50d20ef400cfbfa5@mail.gmail.com>
References: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>	<161617690901202241v7e027c2g8f14fd4d3393722d@mail.gmail.com>	<36720C64-AE3D-4FB2-B5BE-4AAB53E15B4E@daivmowbray.com>
	<8f93a7390901210206o5048c38bn50d20ef400cfbfa5@mail.gmail.com>
Message-ID: <4978DE77.3020804@htcomp.net>

Viper007Bond wrote:

> Shortcodes are not the best way to do what you are trying to accomplish. Use
> a generic the_content filter and just check for the existence of
> "[addmyclass]" in the post. If found, regex the images and remove the tag.

     You could add your class to the div surrounding the post and then 
use a CSS selector to do the grunt work of finding img tags. You would 
only have to find one match.

.myclass img {
     /* same as current img.myclass */
}

HTH,

Charles Clarkson
-- 
Mobile Home Investor
Free Market Advocate
Programmer

Stephenville, TX
http://www.clarksonenergyhomes.com/wordpress/about/
http://twitter.com/CharlesClarkson
+1 (254) 968-8328
From wp-hackers at striderweb.com  Thu Jan 22 22:55:17 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jan 22 22:55:31 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <ae81acd10901220945n49022d15o2f7f6fa36eeb328a@mail.gmail.com>
References: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>
	<3283f0830901220757x65ec800bxee2453252efda18@mail.gmail.com>
	<848D50E3-C9E1-46DE-8A3D-009188D2F31E@striderweb.com>
	<ae81acd10901220945n49022d15o2f7f6fa36eeb328a@mail.gmail.com>
Message-ID: <BC52B55C-02BF-46DC-8354-EC90AA678CCA@striderweb.com>

On Jan 22, 2009, at 11:59 AM, Mike Schinkel wrote:

> Imagine an addition to WordPress core that would communicate to  
> WordPress.org the certain options are in use by plugins that elected  
> to report. It would also be an option the user would have to turn on  
> and then that option could report any previously unreported plugins  
> options to the WordPress service. ...[I]t could empower a real great  
> automatically maintained option reference!

Nice idea, but unless it offers a significant gain for plugin coders,  
good luck getting them to do it. :\

However...

I think a better system would be to build into WordPress "core" a file  
that lists all built-in options.  It could be a simple text file, or a  
PHP file that does nothing but create a hard-coded array, e.g.:

<?php
$wp_core_options = array(
	'active_plugins',
	'admin_email',
	'auth_salt',
	...
	'wpx_static_is_posts'
	)
?>

Then if someone needed such information it would be as simple as  
including the file.  This could be useful for a lot of things, and  
really would be best implemented at the core level instead of as an  
add-on (since it would always have to be kept up with the current code).

Two good uses off the top of my head:
1) Obviously the thing I'm working on ;-) which would allow multiple  
blogs to share plugin settings.
2) Plugins or other code that does cleanup on the options table by  
removing options that are no longer used by any plugins.  (With this  
list it would be trivial to make it so that the plugin *never* removes  
core options by accident!)


On Jan 22, 2009, at 11:45 AM, Ozh wrote:

> Yes it means you'll have to (very minorly) update the list & plugin as
> long as either you or WP are active. What you'll do anyway. And if
> you're no longer active, chances are you'll don't care a lot about
> supporting a plugin, right? :)

Wellll... Yes, but Virtual Multiblog is a significant system that run  
*under* WordPress, which means if it fails, *kablooie*.  I certainly  
may reach a point where I no longer maintain it, but I wouldn't want  
all the people using it to crash and burn on the next WP update.

Stability is word #1.

On Jan 22, 2009, at 2:59 PM, Otto wrote:

> I'd add a hook to update_option, and
> then have my hook run a debug_backtrace() to get the function call
> stack. By examining that stack, you can determine what file made the
> call to update_option, and if the file is in wp-content/plugins/*,
> then it's a plugin's option and you'll know.

Interesting idea.  In fact, the best "automatic" one I've heard;  
though it sounds a bit intensive to run "live" on a blog.   Hmmm......

Oops, except your idea won't quite work because plugins do also make  
calls or changes to core WP options.  It might be the basis for  
something more workable though.  I'll have to think about this one.

Stephen


-- 
Stephen Rider
<http://striderweb.com/>



From otto at ottodestruct.com  Thu Jan 22 23:59:25 2009
From: otto at ottodestruct.com (Otto)
Date: Thu Jan 22 23:59:36 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <BC52B55C-02BF-46DC-8354-EC90AA678CCA@striderweb.com>
References: <7A27DCE6-4374-4D66-AFFB-7E53FC55B70C@striderweb.com>
	<3283f0830901220757x65ec800bxee2453252efda18@mail.gmail.com>
	<848D50E3-C9E1-46DE-8A3D-009188D2F31E@striderweb.com>
	<ae81acd10901220945n49022d15o2f7f6fa36eeb328a@mail.gmail.com>
	<BC52B55C-02BF-46DC-8354-EC90AA678CCA@striderweb.com>
Message-ID: <161617690901221559q76679f75oca75c86a4b28732f@mail.gmail.com>

On Thu, Jan 22, 2009 at 4:55 PM, Stephen Rider
<wp-hackers@striderweb.com> wrote:
> Interesting idea.  In fact, the best "automatic" one I've heard; though it sounds a
> bit intensive to run "live" on a blog.   Hmmm......

You could surely optimize it quite a bit, I feel certain. The real
problem is that update_option lacks the proper hooks to do this sort
of thing.


> Oops, except your idea won't quite work because plugins do also make calls
> or changes to core WP options.  It might be the basis for something more
> workable though.  I'll have to think about this one.

So keep a list of all the options, and if any option is ever updated
from something that is *not* a plugin, then you'll know that it's in
the core and can eliminate any checks for it.

-Otto
From flo.thiel+wphackers at googlemail.com  Fri Jan 23 00:25:16 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Fri Jan 23 00:25:29 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <4978829E.5000502@santosj.name>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
	<49785E4F.1010005@santosj.name>
	<f932c74c0901220413v6b77ceachfa50d3695da798bc@mail.gmail.com>
	<49786A48.4030506@santosj.name>
	<f932c74c0901220514o58b2cbf7vd051c7dbc9f129e7@mail.gmail.com>
	<4978829E.5000502@santosj.name>
Message-ID: <f932c74c0901221625s61e9c29ct8b1daccfc93bd69@mail.gmail.com>

On Thu, Jan 22, 2009 at 3:28 PM, Jacob Santos <wordpress@santosj.name> wrote:
> The problem is that you are stated XSS attacks, which are unrelated to
> database attacks. What you are trying to prevent, is SQL injection, which is
> what prepare() does. Which isn't a perfect method, however neither is yours.
> You are proposing we abstract and do it for the developer, like they are
> idiots. You are suggesting we do it for WordPress core, which means the core
> developers and contributors are idiots for not protecting against SQL
> injection (which all of the places I've seen already protect against SQL
> injection using prepare).

I'm really sorry I brought up the XSS topic. That only lead to massive
confusion. My current proposal DOES NOT have anything to do with XSS.
It's only about SQL. I wanted to do some research if it would make
sense to do another set of annotations that does for HTML output what
the current one does for SQL. I'm not sure about that yet (if you have
an opinion on that or any hints, I'd be delighted to hear them).

> This ignores true hacking prevention known as sanitization. It is really
> simple to sanitize integers, dates, and what not, because they have a set
> format which can be validated very easily and sanitized. The issue is
> actually strings, such as HTML, which can exist in posts, as well as other
> string formats which need to be accepted, but still protected. What you have
> is something that needs to be sanitized liberally based on the user role and
> capability. WordPress already does this, so I guess my confusion is and what
> I should be question is: Are you proposing to abstract and protect the users
> and developers from themselves with the possibility of entering strings that
> might be venerable to XSS attacks?

No, nothing about XSS yet. You're absolutely right: XSS is much more
complicated and cannot be treated with the same approach as I
suggested for SQL.

> The contention I have is that I come from the understanding that each
> validation and sanitization should be created for each variable. For
> example, if the database field is a date, I will validate and, or sanitize
> for date before placing it in the SQL. If I'm using integers, I'll cast to
> an integer. I come from the group that you shouldn't abstract all data types
> into the same group, when you have multiple groups and multiple validations
> and sanitizations. So, if you protect each string against XSS attacks, you
> are ignoring the date formats. This could be sensed by the abstraction, but
> that will add overhead that would be unacceptable.
>
> So I mean, you are talking about protecting against XSS attacks in the
> database layer, when it belongs to the layer directly above database layer,
> which interacts with the database layer. Adding something that needs to be
> separate from the database layer to the database layer will add protection
> which doesn't exist. If you do it this way, then no one will have freedom in
> adding JavaScript to their posts and you'll need something to override this.
>
> The reason sanitization is added to one area and not others, is because it
> shouldn't be in other areas, because such protections will prevent freedoms
> that would otherwise be abstracted away from the users and developers. I can
> see the bug reports now (as editors and contributors who file bugs that they
> can't enter certain HTML elements) from developers and users saying that
> they can't enter video or [enter some future or current popular site]
> snippet into their post.
>
> The point with security is that there are already functions inside of
> WordPress which exist to protect against certain XSS and also protections in
> the administration to protect against CSRF attacks. So for example, if you
> go to a WordPress blog and try to enter some JavaScript that steals the
> cookies, it won't execute, because the comment functions (and not the
> database methods) protect against XSS attacks. This is the way it should be.
>
> The problem with security is that it isn't cut and dry, unless you don't
> want to accept any user input at all.

Yes, that's the way I see it, too. That's why I said that XSS is a
much more difficult thing than SQL injections.

> I would also advise against using CakePHP, which holds your hand and empties
> your garbage for you, as an example in the future as "best practice" because
> I don't really buy that CakePHP is best practice. It isn't for performance
> reasons, however neither is WordPress and in fact a lot of the developers
> suggest features and implementations which would make WordPress even more
> slow, so take what you will. I'm not the most intelligent developer on this
> list, nor the best, but I do read a lot and I do give advice based on other
> intelligent developers. I'll tell you now, that from what I've read, this
> sort of generalization of security is NOT the way to go, because it offers a
> false sense of security.

There may be another misunderstanding here. I do NOT WANT to use
CakePHP. I just wanted to illustrate what would be possible with the
abstracted functions. For now, all I'm suggesting is to replace the
existing INSERT and UPDATE calls using raw SQL with calls to the
respective functions in wp-db.php (called insert() and update()) and
working from there to gradually replace the other calls after
implementing the respective methods in wp-db.php. Once the annotations
are applied I will gladly send a patch with some of these changes
myself. These annotations are meant as a facilitation to get things
done that are already on the radar (see
http://trac.wordpress.org/ticket/6836). I think the annotations
provide visibility (you see that there's something that needs to be
done in the code. You can even stumble upon an annotation and fix the
respective issue), motivation (you can't let these pesky annotations
lurk around in the code forever) and measurability (you can just count
the remaining annotations to see how far along you are).

Good night,
Florian

> Jacob Sanots
>
>
> Florian Thiel wrote:
>>
>> On Thu, Jan 22, 2009 at 1:44 PM, Jacob Santos <wordpress@santosj.name>
>> wrote:
>>
>>>
>>> I apologize, I recognized some of the functions you were proposing as
>>> those
>>> usually found in database abstraction (which I confused with Active
>>> Record
>>> (!= ADODB) ). When I think data-access abstraction (Documentation might
>>> be
>>> incorrect on php.net, PDO appears to be database access abstraction with
>>> some touch of data access abstraction in that you can use the same
>>> methods
>>> to access queries in any database), I think of PDO and it certainly
>>> doesn't
>>> have an insert, update, where or select method. It has prepare method.
>>> Actually query is actually a prepare that is abstracted from the
>>> developer.
>>>
>>
>> No problem.
>>
>>
>>>
>>> Direct SQL in and of itself is not a bad thing, because if you know what
>>> you
>>> are doing and protect against hacking attempts, then there is no reason
>>> to
>>> further extend it by abstracting the SQL out. You are adding overhead
>>> where
>>> none is really needed. Your requirements have already been met by using
>>> prepare().
>>>
>>> What you seem to be worried about are plugin authors, which don't know
>>> about
>>> or don't use prepare() when using SQL. If they aren't, then they probably
>>> aren't protecting against other attacks.
>>>
>>
>> No, I'm not especially worried about plugin developers. And I'm not
>> especially worried about people who don't know about prepare().
>> Experience shows that these things "just happen" (tm). That's where I
>> was going with the XSS example. WordPress developers seem to know
>> about the problem of XSS in general, but sometimes you forget to
>> sanitize your output (or input in the SQL case) or use the wrong
>> sanitation. If you use abstraction, the right thing has to be done in
>> one place only. If everybody was perfect all the time, your argument
>> would be totally valid. But we're not. That's why reducing redundancy
>> (in the end, that's what these abstractions do) is a good thing. It
>> makes code more readable, more maintainable and more secure.
>>
>> Comet Support has an article about how SQL abstraction is handled in
>> CakePHP (http://cakephp.prometsupport.com/tag/sql-injection/). This is
>> a good example how powerful such an abstraction can be. NOTE: I'm not
>> suggesting WP should absolutely do it that way. I just want to give an
>> example how powerful an abstraction can be (note that you can
>> guarantee correct SQL because you're building the statement in the
>> abstraction method).
>>
>> Still unconvinced?
>> Florian
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ryanmccue at cubegames.net  Fri Jan 23 00:30:58 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Fri Jan 23 00:34:26 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901221625s61e9c29ct8b1daccfc93bd69@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>	<49785E4F.1010005@santosj.name>	<f932c74c0901220413v6b77ceachfa50d3695da798bc@mail.gmail.com>	<49786A48.4030506@santosj.name>	<f932c74c0901220514o58b2cbf7vd051c7dbc9f129e7@mail.gmail.com>	<4978829E.5000502@santosj.name>
	<f932c74c0901221625s61e9c29ct8b1daccfc93bd69@mail.gmail.com>
Message-ID: <49790FC2.7030907@cubegames.net>

OK, so, removing all the misunderstandings that may or may not have
occurred, can you update this patch for the code from SVN and upload it
to Trac somewhere? I'd love to take a look, but anything other than Trac
sucks for looking at raw patches, IMHO.

-- 
Ryan McCue
<http://cubegames.net/>

From otto at ottodestruct.com  Fri Jan 23 01:11:28 2009
From: otto at ottodestruct.com (Otto)
Date: Fri Jan 23 01:11:38 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <20885691.1921232604908458.JavaMail.DELL-1405$@Dell-1405>
References: <21659702.1901232604636163.JavaMail.DELL-1405$@Dell-1405>
	<20885691.1921232604908458.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <161617690901221711k17b2b46endc7a3eff08af11e9@mail.gmail.com>

On Thu, Jan 22, 2009 at 12:15 AM, Mike Schinkel
<mikeschinkel@newclarity.net> wrote:
> So using enqueue *can* achieve the same register with the addition of also emitting the link into the header. If I misunderstand please let me know otherwise it's what I assumed would make sense.

Yes, enqueue does indeed do the same thing as a register if the script
is not already registered.

> But that would only help *if* different plugins used the same name, right?  So three different plugins could register "Nifty Corners"[1] respectively  each as the following and they would all three get included, right?
>
>   1.) wp_register_script('niftycorners', ...);
>   2.) wp_register_script('nifty-corners', ...);
>   3.) wp_register_script('nifty_corners', ...);
>
> Hence my suggestion to have a single place to list how they are used...?

I see your point, but in truth it probably doesn't come up all that
often. It would be better to establish a set of guidelines for handle
naming conventions. If we go by core, then here's what I see:

1. Lowercase.
2. Use the exact name of the script. Same as the js file, preferably.
3. Multiple words get their spaces/periods replaced by dashes.
"nifty-corners" would be correct.
4. Separately loadable parts of packages (jquery, scriptaculous) get a
prefix of the name of the package, followed by the name of the
individual piece. jquery-form, jquery-color, etc.

And so on.
From mikeschinkel at newclarity.net  Fri Jan 23 01:27:14 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 23 01:28:02 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <BC52B55C-02BF-46DC-8354-EC90AA678CCA@striderweb.com>
Message-ID: <16324495.2351232674039583.JavaMail.DELL-1405$@Dell-1405>

"Stephen Rider" <wp-hackers@striderweb.com> wrote:
>> Nice idea, but unless it offers a significant gain 
> for plugin coders, good luck getting them to do it. :\

The gain would be:

1.) Reduce the chance of conflict with other plugins
2.) Provide more exposure for their plugins.

And if those are not enough, it could be made more automatic than I proposed.  Documentation wouldn't have to be required, just icing.

> I think a better system would be to build into 
> WordPress "core" a file that lists all built-in 
> options.  It could be a simple text file, or a  
> PHP file that does nothing but create a hard-coded 
> array, e.g.:

Sounds like maybe I'm envisioning something different than you are trying to achieve. Finding out all options in use by plugins is more interesting than having a list of options in WP-core.  I can easily GREP to find the latter. I'm of course not against having them available and listed as core, but it would be much more interesting if all options used by all plugins were listed and available.

-Mike Schinkel
http://mikeschinkel.com/
From mikeschinkel at newclarity.net  Fri Jan 23 01:34:15 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 23 01:35:18 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <161617690901221711k17b2b46endc7a3eff08af11e9@mail.gmail.com>
Message-ID: <19680256.2371232674458660.JavaMail.DELL-1405$@Dell-1405>

> I see your point, but in truth it probably doesn't come 
> up all that often. It would be better to establish a set
> of guidelines for handle naming conventions. If we go by 
>  core, then here's what I see:

Conventions are good and I applaud them.  OTOH, another reason I'd like to see it is because it would offer a great list of javascript libraries that have been at least reasonably tested for use in WordPress.

That said, is there any place where one can go to find a consolidated list of pointers to "best practices" for plugin development?

-Mike Schinkel
http://mikeschinkel.com/
From frank at bueltge.de  Fri Jan 23 08:17:41 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Fri Jan 23 08:17:55 2009
Subject: [wp-hackers] Difference between is_home and is_front_page
In-Reply-To: <C59E3CAD.9AA4%TurnerJD@cofc.edu>
References: <862d087f0901221146n20bbb4aciee38800233064688@mail.gmail.com>
	<C59E3CAD.9AA4%TurnerJD@cofc.edu>
Message-ID: <db047a770901230017m10203211mbf7a2dfaa42efd4@mail.gmail.com>

Hello,
you can use this small script for view the values of all conditional tags in
the frontend of your blog.
http://bueltge.de/wordpress-theme-debuggen/536/

include this in your theme and see the values. Thsi is very nice and easy to
lern all tags funcktions.


On Thu, Jan 22, 2009 at 9:09 PM, John Turner <TurnerJD@cofc.edu> wrote:

>
>  323  /**
>  324   * Whether current page query is the front of the site.
>  325   *
>  326   * @since 2.5.0
>  327   * @uses is_home()
>  328   * @uses get_option()
>  329   *
>  330   * @return bool True, if front of site.
>  331   */
>  332  function is_front_page () {
>  333      // most likely case
>  334      if ( 'posts' == get_option('show_on_front') && is_home() )
>  335          return true;
>  336      elseif ( 'page' == get_option('show_on_front') &&
> get_option('page_on_front') && is_page(get_option('page_on_front')) )
>  337          return true;
>  338      else
>  339          return false;
>  340  }
>  341
>  342  /**
>  343   * Whether current page view is the blog homepage.
>  344   *
>  345   * @since 1.5.0
>  346   * @uses $wp_query
>  347   *
>  348   * @return bool True if blog view homepage.
>  349   */
>  350  function is_home () {
>  351      global $wp_query;
>  352
>  353      return $wp_query->is_home;
>  354  }
>  355
>
> John Turner
> http://johndturner.com
>
>
>
>
>
> > From: Nathan Rice <ncrice@gmail.com>
> > Reply-To: <wp-hackers@lists.automattic.com>
> > Date: Thu, 22 Jan 2009 14:46:49 -0500
> > To: <wp-hackers@lists.automattic.com>
> > Subject: Re: [wp-hackers] Difference between is_home and is_front_page
> >
> > Close, but no.
> > If your About page is set as your front page, and you are viewing
> > http://example.com, then:
> > is_home() will return false
> > is_front_page() will return true.
> >
> > If your About page is set as your front page, and your Blog page is set
> up
> > to list blog posts, and you are viewing http://example.com/blog then:
> > is_home() will return true
> > is_front_page() will retrun false
> >
> > (Please correct me if I'm wrong, anyone).
> >
> > Nathan
> >
> >
> > On Thu, Jan 22, 2009 at 2:41 PM, Dan Gayle <dangayle@gmail.com> wrote:
> >
> >> So, for instance, if the "About" page is set as the home page in
> options,
> >> is_front_page() and is_home() will both return true if I'm looking at
> >> http://example.com
> >>
> >> But if I'm looking at http://example.com/about, is_front_page will
> return
> >> true, while is_home() will return false.
> >>
> >> That's correct, right?
> >>
> >>
> >>
> >> On Jan 22, 2009, at 11:31 AM, Nathan Rice wrote:
> >>
> >>  is_home is limited in that it only returns true if you are on the
> ACTUAL
> >>> home page, whereas is_front_page returns true even if you're using a
> >>> specific page as your blog's homepage.
> >>>
> >>> Nathan
> >>>
> >>> My Website
> >>> http://www.nathanrice.net/
> >>>
> >>> My Twitter
> >>> http://twitter.com/nathanrice
> >>>
> >>>
> >>> On Thu, Jan 22, 2009 at 2:27 PM, Dan Gayle <dangayle@gmail.com> wrote:
> >>>
> >>>  Can anyone explain the difference between is_home() and
> is_front_page()?
> >>>>
> >>>> They appear to me, from the Codex documentation, that they do the same
> >>>> thing.
> >>>> _______________________________________________
> >>>> wp-hackers mailing list
> >>>> wp-hackers@lists.automattic.com
> >>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>>
> >>>>  _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers@lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From daiv at daivmowbray.com  Fri Jan 23 09:47:28 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Fri Jan 23 09:47:43 2009
Subject: [wp-hackers] nested shortcode
In-Reply-To: <8f93a7390901210206o5048c38bn50d20ef400cfbfa5@mail.gmail.com>
References: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>
	<161617690901202241v7e027c2g8f14fd4d3393722d@mail.gmail.com>
	<36720C64-AE3D-4FB2-B5BE-4AAB53E15B4E@daivmowbray.com>
	<8f93a7390901210206o5048c38bn50d20ef400cfbfa5@mail.gmail.com>
Message-ID: <286D17C5-A60D-4C10-A6C8-209DB4BE519D@daivmowbray.com>


Thanx Charles Clarkson for the suggestion, but you assume that all I  
want is to access an item for css manipulation.
Actually I want to add a rel="myrel" or class="myclass" for javascript  
manipulation.

Viper007Bond's suggestion worked well for me:
But I can't use shortcode attributes.

The suggestion:
add_filter ( "the_content", array(&$this, "myrel_links_out"), 8);
// array(&$this, is to reach the function inside of this class.

function myrel_links_out( $content ) {		
			$short_tag = '[myrel';			
			$pos = strpos($content,$short_tag);
			if($pos === false) {
				return $content;
			}
			else {
				$pattern = "/<a(.*?)href=('|\")([^>]*).(bmp|gif|jpeg|jpg|png)('|\") 
(.*?)><(.*?)title=('|\")(.*?)('|\")(.*?)><\/a>/i";
				$replacement = '<a$1href=$2$3.$4$5 title="$9" rel="myrel[%ID%]"$6>< 
$7title=$8$9$10 $11></a>';
				$content = preg_replace($pattern, $replacement, $content);
				$content = str_replace("%ID%", $post->ID, $content);
			}
			return $content;
		}
So I have done this:
But I had to wrap the content in [myrel]content[/myrel]

add_shortcode('myrel', array( &$this , 'myrel_shortcode_out' ) );

function myrel_shortcode_out( $attr, $content = null ) { 		
	extract(shortcode_atts(array(
             'opA' => '',
             'opB' => '',
             'opC' => ''
             ), $attr));

	// opdate options if any changes with shortcode
		if ($attr !='') {	
		$this->plugin_change_options($attr);
	// call to function which updates plugin options array with shortcode  
over ride. see bellow.
          }

         extract($this->pluginOptionsOut);// extract options array  
into variables

		$pattern = "/<a(.*?)href=('|\")([^>]*).(bmp|gif|jpeg|jpg|png)('|\") 
(.*?)><(.*?)title=('|\")(.*?)('|\")(.*?)><\/a>/i";
		$replacement = '<a$1href=$2$3.$4$5 title="$9" rel="myrel[%ID%]"$6>< 
$7title=$8$9$10 $11></a>';
		$content = preg_replace($pattern, $replacement, $content);
		$content = str_replace("%ID%", $post->ID, $content);

         return do_shortcode($content);

		}
function plugin_change_options($attr){	

			$this-> pluginOptionsOut = array_merge($this-> pluginOptionsOut,  
array_filter($attr));
   			return $this-> pluginOptionsOut;
		}

On Jan 21, 2009, at 11:06 AM, Viper007Bond wrote:

> Shortcodes are not the best way to do what you are trying to  
> accomplish. Use
> a generic the_content filter and just check for the existence of
> "[addmyclass]" in the post. If found, regex the images and remove  
> the tag.


----------
Daiv Mowbray
daiv@daivmowbray.com
----------


From admin at laptoptips.ca  Fri Jan 23 10:44:14 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Fri Jan 23 10:46:03 2009
Subject: [wp-hackers] nested shortcode
In-Reply-To: <286D17C5-A60D-4C10-A6C8-209DB4BE519D@daivmowbray.com>
References: <BDDDA7D7-B208-4803-BDC5-40AB2A0F4B98@daivmowbray.com>	<161617690901202241v7e027c2g8f14fd4d3393722d@mail.gmail.com>	<36720C64-AE3D-4FB2-B5BE-4AAB53E15B4E@daivmowbray.com>	<8f93a7390901210206o5048c38bn50d20ef400cfbfa5@mail.gmail.com>
	<286D17C5-A60D-4C10-A6C8-209DB4BE519D@daivmowbray.com>
Message-ID: <49799F7E.9020600@laptoptips.ca>

Daiv Mowbray wrote:
> Thanx Charles Clarkson for the suggestion, but you assume that all I 
> want is to access an item for css manipulation.
> Actually I want to add a rel="myrel" or class="myclass" for javascript 
> manipulation.

Why not do it in js then? It's trivial to get all links that are inside 
the .post css class. In jQuery all it takes is:
jQuery('.post a').each(function(){your js here});

Without jQuery it would take two or three lines of code...
From viper at viper007bond.com  Fri Jan 23 12:25:45 2009
From: viper at viper007bond.com (Viper007Bond)
Date: Fri Jan 23 12:25:58 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <19680256.2371232674458660.JavaMail.DELL-1405$@Dell-1405>
References: <161617690901221711k17b2b46endc7a3eff08af11e9@mail.gmail.com>
	<19680256.2371232674458660.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <8f93a7390901230425o781808b7y148c5db718c46aff@mail.gmail.com>

http://codex.wordpress.org/WordPress_Coding_Standards

Also just read the WordPress source code.

On Thu, Jan 22, 2009 at 5:34 PM, Mike Schinkel
<mikeschinkel@newclarity.net>wrote:

> > I see your point, but in truth it probably doesn't come
> > up all that often. It would be better to establish a set
> > of guidelines for handle naming conventions. If we go by
> >  core, then here's what I see:
>
> Conventions are good and I applaud them.  OTOH, another reason I'd like to
> see it is because it would offer a great list of javascript libraries that
> have been at least reasonably tested for use in WordPress.
>
> That said, is there any place where one can go to find a consolidated list
> of pointers to "best practices" for plugin development?
>
> -Mike Schinkel
> http://mikeschinkel.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/ | http://www.finalgear.com/
From wp-hackers at striderweb.com  Fri Jan 23 14:04:52 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jan 23 14:05:24 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <16324495.2351232674039583.JavaMail.DELL-1405$@Dell-1405>
References: <16324495.2351232674039583.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <3BF89C19-6664-41F3-A410-58B2C821B66F@striderweb.com>


On Jan 22, 2009, at 7:27 PM, Mike Schinkel wrote:

> "Stephen Rider" <wp-hackers@striderweb.com> wrote:
>>
>
>> I think a better system would be to build into
>> WordPress "core" a file that lists all built-in
>> options.  It could be a simple text file, or a
>> PHP file that does nothing but create a hard-coded
>> array, e.g.:
>
> Sounds like maybe I'm envisioning something different than you are  
> trying to achieve. Finding out all options in use by plugins is more  
> interesting than having a list of options in WP-core.

Well, you're right.  Rather than "better" I should have said "more  
readily workable".

> I can easily GREP to find the latter.

Live?  Every time an option is set or called?  That's what we'd be  
looking at in my case....

> I'm of course not against having them available and listed as core,  
> but it would be much more interesting if all options used by all  
> plugins were listed and available.

It would be great, I agree, but I think you're talking about herding  
cats.  ;)  Maybe I underestimate the community.

How effective have the efforts been to get people using wp-enqueue for  
scripts?

Stephen
From scribu at gmail.com  Fri Jan 23 14:17:29 2009
From: scribu at gmail.com (scribu)
Date: Fri Jan 23 14:17:40 2009
Subject: [wp-hackers] Reject uploaded image
Message-ID: <349fe48b0901230617i2e567525yf7d5e817df9160e2@mail.gmail.com>

I'm trying to do something like this:

A user uploads an image. If the image resolution is lower than 640x480px
(for example), then an error message is sent to the user and the image is
deleted.

I've tried using *add_action('media_upload_image', 'my_function')*, but that
doesn't help.

Maybe using *add_filter('async_upload_image', 'my_function')* ?

Any ideas?

-- 
http://scribu.net
From mikeschinkel at newclarity.net  Fri Jan 23 15:43:53 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 23 15:44:21 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <3BF89C19-6664-41F3-A410-58B2C821B66F@striderweb.com>
Message-ID: <20881452.2491232725444526.JavaMail.DELL-1405$@Dell-1405>

"Stephen Rider" <wp-hackers@striderweb.com> wrote:
> Live?  Every time an option is set or called?  
> That's what we'd be looking at in my case....

Sounds like we need hooks in get_option() and set_option()?

> How effective have the efforts been to get people 
> using wp-enqueue for scripts?

I think you can/should put (theme) designers and (plugin) developers in different categories. I expect that designers would be a lot less likely to follow programming best practices than developers would be to follow programming best practices. Actually, from my experience (that I've had even in the past few days) designers can be hostile to programming best practices but I don't think plugin developers would behave the same way.

Build it and they will come?

But then again my assumptions here could be a completely fantasy too. :-)

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Stephen Rider" <wp-hackers@striderweb.com>
To: wp-hackers@lists.automattic.com
Sent: Friday, January 23, 2009 9:04:52 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] distinguish plugin options?


On Jan 22, 2009, at 7:27 PM, Mike Schinkel wrote:

> "Stephen Rider" <wp-hackers@striderweb.com> wrote:
>>
>
>> I think a better system would be to build into
>> WordPress "core" a file that lists all built-in
>> options.  It could be a simple text file, or a
>> PHP file that does nothing but create a hard-coded
>> array, e.g.:
>
> Sounds like maybe I'm envisioning something different than you are  
> trying to achieve. Finding out all options in use by plugins is more  
> interesting than having a list of options in WP-core.

Well, you're right.  Rather than "better" I should have said "more  
readily workable".

> I can easily GREP to find the latter.

Live?  Every time an option is set or called?  That's what we'd be  
looking at in my case....

> I'm of course not against having them available and listed as core,  
> but it would be much more interesting if all options used by all  
> plugins were listed and available.

It would be great, I agree, but I think you're talking about herding  
cats.  ;)  Maybe I underestimate the community.

How effective have the efforts been to get people using wp-enqueue for  
scripts?

Stephen
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Fri Jan 23 15:47:27 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 23 15:49:31 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <8f93a7390901230425o781808b7y148c5db718c46aff@mail.gmail.com>
Message-ID: <2308748.2511232725655134.JavaMail.DELL-1405$@Dell-1405>

Thanks for the reply.

So, said another way, there are no documented "Best Practices" for WordPress plugin development? ;-)

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Viper007Bond" <viper@viper007bond.com>
To: wp-hackers@lists.automattic.com
Sent: Friday, January 23, 2009 7:25:45 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?

http://codex.wordpress.org/WordPress_Coding_Standards

Also just read the WordPress source code.

On Thu, Jan 22, 2009 at 5:34 PM, Mike Schinkel
<mikeschinkel@newclarity.net>wrote:

> > I see your point, but in truth it probably doesn't come
> > up all that often. It would be better to establish a set
> > of guidelines for handle naming conventions. If we go by
> >  core, then here's what I see:
>
> Conventions are good and I applaud them.  OTOH, another reason I'd like to
> see it is because it would offer a great list of javascript libraries that
> have been at least reasonably tested for use in WordPress.
>
> That said, is there any place where one can go to find a consolidated list
> of pointers to "best practices" for plugin development?
>
> -Mike Schinkel
> http://mikeschinkel.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/ | http://www.finalgear.com/
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From ozh at planetozh.com  Fri Jan 23 16:04:47 2009
From: ozh at planetozh.com (Ozh)
Date: Fri Jan 23 16:05:53 2009
Subject: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?
In-Reply-To: <2308748.2511232725655134.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <OF0144C991.75D56FB1-ONC1257547.0057CBA1-C1257547.005854C7@notes.edfgdf.fr>

> So, said another way, there are no documented "Best Practices" for 
WordPress plugin development? ;-)

Not sure what you're expecting. Maybe this will be interesting for you:
http://markjaquith.wordpress.com/2008/07/23/how-to-write-a-solid-and-stable-wordpress-plugin/

Ozh


From ionfish at gmail.com  Fri Jan 23 16:10:52 2009
From: ionfish at gmail.com (Benedict Eastaugh)
Date: Fri Jan 23 16:11:06 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <20881452.2491232725444526.JavaMail.DELL-1405$@Dell-1405>
References: <3BF89C19-6664-41F3-A410-58B2C821B66F@striderweb.com>
	<20881452.2491232725444526.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <fd3b80510901230810r2af6abf3v16e7931126904248@mail.gmail.com>

Thank you for that generalisation, it's always nice to be told one's a
second-class citizen.

2009/1/23 Mike Schinkel <mikeschinkel@newclarity.net>:
> "Stephen Rider" <wp-hackers@striderweb.com> wrote:
>> Live?  Every time an option is set or called?
>> That's what we'd be looking at in my case....
>
> Sounds like we need hooks in get_option() and set_option()?
>
>> How effective have the efforts been to get people
>> using wp-enqueue for scripts?
>
> I think you can/should put (theme) designers and (plugin) developers in different categories. I expect that designers would be a lot less likely to follow programming best practices than developers would be to follow programming best practices. Actually, from my experience (that I've had even in the past few days) designers can be hostile to programming best practices but I don't think plugin developers would behave the same way.
>
> Build it and they will come?
>
> But then again my assumptions here could be a completely fantasy too. :-)
>
> -Mike Schinkel
> http://mikeschinkel.com/
>
> ----- Original Message -----
> From: "Stephen Rider" <wp-hackers@striderweb.com>
> To: wp-hackers@lists.automattic.com
> Sent: Friday, January 23, 2009 9:04:52 AM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] distinguish plugin options?
>
>
> On Jan 22, 2009, at 7:27 PM, Mike Schinkel wrote:
>
>> "Stephen Rider" <wp-hackers@striderweb.com> wrote:
>>>
>>
>>> I think a better system would be to build into
>>> WordPress "core" a file that lists all built-in
>>> options.  It could be a simple text file, or a
>>> PHP file that does nothing but create a hard-coded
>>> array, e.g.:
>>
>> Sounds like maybe I'm envisioning something different than you are
>> trying to achieve. Finding out all options in use by plugins is more
>> interesting than having a list of options in WP-core.
>
> Well, you're right.  Rather than "better" I should have said "more
> readily workable".
>
>> I can easily GREP to find the latter.
>
> Live?  Every time an option is set or called?  That's what we'd be
> looking at in my case....
>
>> I'm of course not against having them available and listed as core,
>> but it would be much more interesting if all options used by all
>> plugins were listed and available.
>
> It would be great, I agree, but I think you're talking about herding
> cats.  ;)  Maybe I underestimate the community.
>
> How effective have the efforts been to get people using wp-enqueue for
> scripts?
>
> Stephen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at newclarity.net  Fri Jan 23 16:14:39 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 23 16:16:42 2009
Subject: [wp-hackers] wp_register_script() vs.
	wp_enqueue_script()?
In-Reply-To: <OF0144C991.75D56FB1-ONC1257547.0057CBA1-C1257547.005854C7@notes.edfgdf.fr>
Message-ID: <18802574.2551232727285830.JavaMail.DELL-1405$@Dell-1405>

Basically I was hoping for: http://codex.wordpress.org/Plugin_Development_Best_Practices

Mark's article is on the right track, but about 1/20th the size of that would be needed to do the topic justice.

Well since they don't exist I'm going to start collecting up concepts and recommendations as I come across them with the potential to one day publish them. I may also ask questions here with the sole goal of learning what the community feels to be best practices in selected areas.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Ozh" <ozh@planetozh.com>
To: wp-hackers@lists.automattic.com
Sent: Friday, January 23, 2009 11:04:47 AM GMT -05:00 US/Canada Eastern
Subject: Re : Re: [wp-hackers] wp_register_script() vs. wp_enqueue_script()?

> So, said another way, there are no documented "Best Practices" for 
WordPress plugin development? ;-)

Not sure what you're expecting. Maybe this will be interesting for you:
http://markjaquith.wordpress.com/2008/07/23/how-to-write-a-solid-and-stable-wordpress-plugin/

Ozh


_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Fri Jan 23 16:30:58 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 23 16:33:33 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <fd3b80510901230810r2af6abf3v16e7931126904248@mail.gmail.com>
Message-ID: <638091.2571232728267800.JavaMail.DELL-1405$@Dell-1405>

"Benedict Eastaugh" <ionfish@gmail.com> wrote:
> Thank you for that generalisation, it's always nice 
> to be told one's a second-class citizen.

I was just explicitly describing the statistical bell curve as I perceive it; some people value good software architecture and not design, others value design and not good software architecture, and then still others value both. My assumption was that it would make sense that those who value good software architecture are more likely to develop plugins and those who value good design are more apt to develop themes. My personal experience (on my current project, for example) gives me evidence that my generalization is true in at least a reasonable number of cases. 

However in hindsight I can see how my generalization could be viewed as offensive and for that I'm truly sorry. I really didn't mean to offend especially for someone like yourself who can appreciate the value of both design and good software architecture. Apology accepted?

-Mike Schinkel
http://mikeschinkel.com
From ionfish at gmail.com  Fri Jan 23 17:19:00 2009
From: ionfish at gmail.com (Benedict Eastaugh)
Date: Fri Jan 23 17:19:09 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <638091.2571232728267800.JavaMail.DELL-1405$@Dell-1405>
References: <fd3b80510901230810r2af6abf3v16e7931126904248@mail.gmail.com>
	<638091.2571232728267800.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <fd3b80510901230919y450e6bafq9aed1e6c7acf4687@mail.gmail.com>

> However in hindsight I can see how my generalization could be viewed as offensive and for that I'm truly sorry. I really didn't mean to offend especially for someone like yourself who can appreciate the value of both design and good software architecture. Apology accepted?

Of course. Thank you for the elegant apology. I'm sorry for snapping
at you, but your views are depressingly common on this list and
elsewhere: theme developers are not merely worse programmers, but are
actually incapable of following best practices. This is not a helpful
attitude, and will certainly not result in a rise in the quality of
the code of WordPress themes.

Making such a distinction also misleads in other ways. Obviously
themes and plugins are different in intention and effect, but they
also have much in common. Plugins can use get_option and set_option;
so can themes. Plugins can call the WordPress API, and extend it with
their own actions and filters; so can themes. Where coding standards
are concerned, there must be uniformity. Plugins and themes, and their
developers, must both be held to the same standards. However, raising
standards is better accomplished by encouragement, documentation and
evangelism than by insults.

> I was just explicitly describing the statistical bell curve as I perceive it; some people value good software architecture and not design, others value design and not good software architecture, and then still others value both. My assumption was that it would make sense that those who value good software architecture are more likely to develop plugins and those who value good design are more apt to develop themes.

I assume you mean visual design. I try to keep Frank Lloyd Wright's
maxim in mind when considering software: "Form follows function--that
has been misunderstood. Form and function should be one, joined in a
spiritual union." Obviously someone who knows little or no PHP will
not be able to write a particularly complex WordPress theme by
themselves, and they may commit more or less egregious errors in doing
so. But we should steer away from the assumption that these are very
different endeavours. We are, after all, designing interfaces for
users. It's not so far removed from designing interfaces for
programmers.
From mikeschinkel at newclarity.net  Fri Jan 23 18:02:55 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 23 18:05:28 2009
Subject: [wp-hackers] distinguish plugin options?
In-Reply-To: <fd3b80510901230919y450e6bafq9aed1e6c7acf4687@mail.gmail.com>
Message-ID: <32967994.2651232733781685.JavaMail.DELL-1405$@Dell-1405>

"Benedict Eastaugh" <ionfish@gmail.com> wrote:
> Of course. Thank you for the elegant apology. I'm sorry for 
> snapping at you, but your views are depressingly common on 
> this list and elsewhere: theme developers are not merely 
> worse programmers, but are actually incapable of following 
> best practices. This is not a helpful attitude, and will 
> certainly not result in a rise in the quality of the code 
> of WordPress themes.

I certainly understand your lament. 

If it helps, I'm always approach any individual designer with hopes of collaborating effectively where we both appreciate what others bring to the table.  Some times that happens but more often than I'd like though a designer gets defensive when I ask him or her to break up their design into PHP files so that it is already modular when then turn it over to me. In those cases I've simply had to take it on the chin and do lots of extra work because they simply can't be bothered to understand PHP include files. :-( 

> I assume you mean visual design. I try to keep Frank 
> Lloyd Wright's maxim in mind when considering software: 
> "Form follows function--that has been misunderstood. 
> Form and function should be one, joined in a spiritual 
> union." 

Yes I did, and I have also been one to appreciate "form follows function" (especially in motorcycles, for example.)  Again, unfortunately, many of the designers I've worked with don't think that way.  For example, the concept behind the Thesis theme is great but the designer I worked with on a project who picked it for the visual design immediately hated it because it required her to do some work in PHP instead of doing everything visually. OTOH I advocated for keeping it yet she fought me on using it all the way.

> Obviously someone who knows little or no PHP will
> not be able to write a particularly complex WordPress 
> theme by themselves, and they may commit more or less 
> egregious errors in doing so. But we should steer away 
> from the assumption that these are very different 
> endeavours. We are, after all, designing interfaces for
> users. It's not so far removed from designing interfaces
> for programmers.

Agreed, significant portions are very similar endeavors. Unfortunately in my experience many people only see what primarily interests them (visual design vs. software architecture) when they implement. But then that seems to be your lament too?

> Making such a distinction also misleads in other ways. 
> Obviously themes and plugins are different in intention 
> and effect, but they also have much in common. Plugins 
> can use get_option and set_option; so can themes. Plugins 
> can call the WordPress API, and extend it with their own 
> actions and filters; so can themes. Where coding standards
> are concerned, there must be uniformity. Plugins and 
> themes, and their developers, must both be held to the 
> same standards. However, raising standards is better 
> accomplished by encouragement, documentation and
> evangelism than by insults.

Completely agreed. You obviously don't fit in the category of resistant designers and I did you and others like you a disservice by over-generalizing. Once again, sorry.

-Mike Schinkel
http://mikeschinkel.com/

From dan at eliresearch.com  Sat Jan 24 01:02:02 2009
From: dan at eliresearch.com (dan.f)
Date: Sat Jan 24 01:02:13 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <15589040.2031232238300219.JavaMail.DELL-1405$@Dell-1405>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
	<674b4a3b0901081640s4b6b2eeamcc2611d7d8ff5ae7@mail.gmail.com>
	<63a3a6ce0901090913x55d4a7c8i594a73778bece452@mail.gmail.com>
	<15589040.2031232238300219.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <21635767.post@talk.nabble.com>


I too have been trying to solve this issue.  Brian - I've
installed/uninstalled your plugin 3 times thinking it would be the solution,
but I still dont know if it is :(  From what I can gather, you can create
new terms, but can't associate them with categories, just posts/pages/links.  

What I would like is a table similar to wp_postmeta, but wp_categorymeta,
with 4 columns:
id, catid, key, value

Then have an interface on the categories page to add multiple meta
key/values to each category, and some functions to retrieve these values as
an array for use in the theme.

The headspace2 plugin by urbangiraffe is close on this regard, but they just
have a single input box and its just values defined for each category that
get used for meta keyword tag, not key/value settings.

But, that plugin does modify the 'edit category' page to create the
interface, so that appears to be possibly to hook into.

Brian, can custax do this?  If there is nothing out there like this, then I
will probably end up doing.  Doesn't seem too complicated...


Mike Schinkel-5 wrote:
> 
> "Brian Krausz" <brian@nerdlife.net> wrote:
>> my plugin abstracts that API into a GUI, 
>> may help with what you're
>> trying to do.
>> http://wordpress.org/extend/plugins/custom-taxonomies/
> 
> This looks really interesting and may be exactly what I need for several
> different potential use cases but after installing it it is not clear how
> someone would actually apply it's functionality.  It seems to compete with
> tags and categories, but I don't see how they relate.
> 
> Do you have a blog post anywhere explaining how you've used it?
> 
> -Mike Schinkel
> http://mikeschinkel.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 

-- 
View this message in context: http://www.nabble.com/Adding-meta-data-to-categories-tp21361154p21635767.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From flo.thiel+wphackers at googlemail.com  Sat Jan 24 12:35:48 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Sat Jan 24 12:36:01 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <49790FC2.7030907@cubegames.net>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
	<49785E4F.1010005@santosj.name>
	<f932c74c0901220413v6b77ceachfa50d3695da798bc@mail.gmail.com>
	<49786A48.4030506@santosj.name>
	<f932c74c0901220514o58b2cbf7vd051c7dbc9f129e7@mail.gmail.com>
	<4978829E.5000502@santosj.name>
	<f932c74c0901221625s61e9c29ct8b1daccfc93bd69@mail.gmail.com>
	<49790FC2.7030907@cubegames.net>
Message-ID: <f932c74c0901240435i55082f4evff62e5f260942714@mail.gmail.com>

On Fri, Jan 23, 2009 at 1:30 AM, Ryan McCue <ryanmccue@cubegames.net> wrote:
> OK, so, removing all the misunderstandings that may or may not have
> occurred, can you update this patch for the code from SVN and upload it
> to Trac somewhere? I'd love to take a look, but anything other than Trac
> sucks for looking at raw patches, IMHO.

I updated the patch to today's trunk and attached it to the ticket for
insert/update: http://trac.wordpress.org/attachment/ticket/6836/wordpress-trunk_20090124_sqlannotations.diff

Let me know what you think. Note that it does not change any
functionality in WP, it just marks the places that potentially need
some work. You can use my small shell script (if you're using a
UNIX-like system) to see the number of annotations in the different
classes (http://www.noroute.de/downloads/research/sqlannotation_stats.sh).
Or you can search the source code for the annotations ("@RawSQLUse,
method_exists" "@RawSQLUse, trivial_iplementation" "@RawSQLUse,
simple_code" "@RawSQLUse, algorithmic").

Florian
From jeremy.visser at gmail.com  Sat Jan 24 12:46:50 2009
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Sat Jan 24 12:47:07 2009
Subject: [wp-hackers] Gravatar + Feed integration for avatars on Planets
In-Reply-To: <161617690901221052u1c9b5e50r54e77dbd9d39d8c4@mail.gmail.com>
References: <1232559530.2500.7.camel@rillian.narnia.sunriseroad.net>
	<4976F5CF.9060601@cubegames.net>
	<1232586424.3176.4.camel@rillian.narnia.sunriseroad.net>
	<b88434820901211714g3f2df032r4a9aa35f6f6ed895@mail.gmail.com>
	<497830FC.20000@cubegames.net>
	<1232616629.2502.4.camel@rillian.narnia.sunriseroad.net>
	<161617690901221052u1c9b5e50r54e77dbd9d39d8c4@mail.gmail.com>
Message-ID: <1232801210.3043.0.camel@rillian.narnia.sunriseroad.net>

On Thu, 2009-01-22 at 12:52 -0600, Otto wrote:
> In Atom, I'd recommend using the <icon> instead of the <logo>.

I got the impression <icon> was for favicons, but yeah, I suppose it
does make sense.

-- 
Jeremy Visser                                 http://jeremy.visser.name/

No Internet Censorship for Australia             http://nocleanfeed.com/

From kparsell-wp at kpdesign.net  Sat Jan 24 14:16:47 2009
From: kparsell-wp at kpdesign.net (Kim Parsell)
Date: Sat Jan 24 14:17:03 2009
Subject: [wp-hackers] OT: Spam in wordpress.org Ideas section
In-Reply-To: <21635767.post@talk.nabble.com>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>	<674b4a3b0901081640s4b6b2eeamcc2611d7d8ff5ae7@mail.gmail.com>	<63a3a6ce0901090913x55d4a7c8i594a73778bece452@mail.gmail.com>	<15589040.2031232238300219.JavaMail.DELL-1405$@Dell-1405>
	<21635767.post@talk.nabble.com>
Message-ID: <497B22CF.8@kpdesign.net>

Go to http://wordpress.org/extend/ideas/?show=latest - 9 of the 18 items 
listed are spam. Could someone at wordpress.org clean things up a bit?

Thanks in advance! :)

Kim

PS/ Sorry for the OT post on the list.
From jer at simianuprising.com  Sat Jan 24 19:57:57 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Sat Jan 24 19:58:08 2009
Subject: [wp-hackers] OT: Spam in wordpress.org Ideas section
In-Reply-To: <497B22CF.8@kpdesign.net>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
	<674b4a3b0901081640s4b6b2eeamcc2611d7d8ff5ae7@mail.gmail.com>
	<63a3a6ce0901090913x55d4a7c8i594a73778bece452@mail.gmail.com>
	<15589040.2031232238300219.JavaMail.DELL-1405$@Dell-1405>
	<21635767.post@talk.nabble.com> <497B22CF.8@kpdesign.net>
Message-ID: <e1202cb10901241157n57a75679xc73b96ab31f3fb7c@mail.gmail.com>

+1 Ideas is useless until it is fixed IMHO.

Here's a request for moderation links from within the system:
http://wordpress.org/extend/ideas/topic.php?id=2279

-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From aesqe at skyphe.org  Sat Jan 24 20:14:09 2009
From: aesqe at skyphe.org (aesqe)
Date: Sat Jan 24 20:14:56 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <21635767.post@talk.nabble.com>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>	<674b4a3b0901081640s4b6b2eeamcc2611d7d8ff5ae7@mail.gmail.com>	<63a3a6ce0901090913x55d4a7c8i594a73778bece452@mail.gmail.com>	<15589040.2031232238300219.JavaMail.DELL-1405$@Dell-1405>
	<21635767.post@talk.nabble.com>
Message-ID: <497B7691.2090000@skyphe.org>

how about c2c's "custom fields for anything" plugin?

http://coffee2code.com/wp-plugins/custom-fields-for-anything/

i haven't tried it myself, but it looks like it's exactly what you need 
to get started.

it also means you'll have to write your own plugin which would make use 
of cffa's functions, but that shouldn't be a big problem.

On 24.1.2009 2:02, dan.f wrote:
> I too have been trying to solve this issue.  Brian - I've
> installed/uninstalled your plugin 3 times thinking it would be the solution,
> but I still dont know if it is :(  From what I can gather, you can create
> new terms, but can't associate them with categories, just posts/pages/links.
>
> What I would like is a table similar to wp_postmeta, but wp_categorymeta,
> with 4 columns:
> id, catid, key, value
>
> Then have an interface on the categories page to add multiple meta
> key/values to each category, and some functions to retrieve these values as
> an array for use in the theme.
>
> The headspace2 plugin by urbangiraffe is close on this regard, but they just
> have a single input box and its just values defined for each category that
> get used for meta keyword tag, not key/value settings.
>
> But, that plugin does modify the 'edit category' page to create the
> interface, so that appears to be possibly to hook into.
>
> Brian, can custax do this?  If there is nothing out there like this, then I
> will probably end up doing.  Doesn't seem too complicated...
>
>
> Mike Schinkel-5 wrote:
>> "Brian Krausz"<brian@nerdlife.net>  wrote:
>>> my plugin abstracts that API into a GUI,
>>> may help with what you're
>>> trying to do.
>>> http://wordpress.org/extend/plugins/custom-taxonomies/
>> This looks really interesting and may be exactly what I need for several
>> different potential use cases but after installing it it is not clear how
>> someone would actually apply it's functionality.  It seems to compete with
>> tags and categories, but I don't see how they relate.
>>
>> Do you have a blog post anywhere explaining how you've used it?
>>
>> -Mike Schinkel
>> http://mikeschinkel.com/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>
>
> ------------------------------------------------------------------------
>
>
> No virus found in this incoming message.
> Checked by AVG - http://www.avg.com
> Version: 8.0.176 / Virus Database: 270.10.12/1911 - Release Date: 1/23/2009 7:28 AM
>

-- 
-._______________KAWAII!_______________.-
Skyphe.org : It'll all make sense one day
http://skyphe.org .:. http://breedart.org
From dan at eliresearch.com  Sat Jan 24 22:45:56 2009
From: dan at eliresearch.com (dan.f)
Date: Sat Jan 24 22:46:07 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <497B7691.2090000@skyphe.org>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
	<674b4a3b0901081640s4b6b2eeamcc2611d7d8ff5ae7@mail.gmail.com>
	<63a3a6ce0901090913x55d4a7c8i594a73778bece452@mail.gmail.com>
	<15589040.2031232238300219.JavaMail.DELL-1405$@Dell-1405>
	<21635767.post@talk.nabble.com> <497B7691.2090000@skyphe.org>
Message-ID: <21646100.post@talk.nabble.com>


Thank you. thats perfect.  That saves me from the core functionality.  Now I
just need to see if anyone has built a gui for categories and this plugin
and Im there!!  If not, I will do that - but I have to believe its already
been done.  I will look around abit.



aesqe wrote:
> 
> how about c2c's "custom fields for anything" plugin?
> 
> http://coffee2code.com/wp-plugins/custom-fields-for-anything/
> 
> i haven't tried it myself, but it looks like it's exactly what you need 
> to get started.
> 
> it also means you'll have to write your own plugin which would make use 
> of cffa's functions, but that shouldn't be a big problem.
> 
> On 24.1.2009 2:02, dan.f wrote:
>> I too have been trying to solve this issue.  Brian - I've
>> installed/uninstalled your plugin 3 times thinking it would be the
>> solution,
>> but I still dont know if it is :(  From what I can gather, you can create
>> new terms, but can't associate them with categories, just
>> posts/pages/links.
>>
>> What I would like is a table similar to wp_postmeta, but wp_categorymeta,
>> with 4 columns:
>> id, catid, key, value
>>
>> Then have an interface on the categories page to add multiple meta
>> key/values to each category, and some functions to retrieve these values
>> as
>> an array for use in the theme.
>>
>> The headspace2 plugin by urbangiraffe is close on this regard, but they
>> just
>> have a single input box and its just values defined for each category
>> that
>> get used for meta keyword tag, not key/value settings.
>>
>> But, that plugin does modify the 'edit category' page to create the
>> interface, so that appears to be possibly to hook into.
>>
>> Brian, can custax do this?  If there is nothing out there like this, then
>> I
>> will probably end up doing.  Doesn't seem too complicated...
>>
>>
>> Mike Schinkel-5 wrote:
>>> "Brian Krausz"<brian@nerdlife.net>  wrote:
>>>> my plugin abstracts that API into a GUI,
>>>> may help with what you're
>>>> trying to do.
>>>> http://wordpress.org/extend/plugins/custom-taxonomies/
>>> This looks really interesting and may be exactly what I need for several
>>> different potential use cases but after installing it it is not clear
>>> how
>>> someone would actually apply it's functionality.  It seems to compete
>>> with
>>> tags and categories, but I don't see how they relate.
>>>
>>> Do you have a blog post anywhere explaining how you've used it?
>>>
>>> -Mike Schinkel
>>> http://mikeschinkel.com/
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>
>>
>> ------------------------------------------------------------------------
>>
>>
>> No virus found in this incoming message.
>> Checked by AVG - http://www.avg.com
>> Version: 8.0.176 / Virus Database: 270.10.12/1911 - Release Date:
>> 1/23/2009 7:28 AM
>>
> 
> -- 
> -._______________KAWAII!_______________.-
> Skyphe.org : It'll all make sense one day
> http://skyphe.org .:. http://breedart.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 

-- 
View this message in context: http://www.nabble.com/Adding-meta-data-to-categories-tp21361154p21646100.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From peter.westwood at ftwr.co.uk  Sat Jan 24 22:53:15 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sat Jan 24 22:54:01 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <21646100.post@talk.nabble.com>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
	<674b4a3b0901081640s4b6b2eeamcc2611d7d8ff5ae7@mail.gmail.com>
	<63a3a6ce0901090913x55d4a7c8i594a73778bece452@mail.gmail.com>
	<15589040.2031232238300219.JavaMail.DELL-1405$@Dell-1405>
	<21635767.post@talk.nabble.com> <497B7691.2090000@skyphe.org>
	<21646100.post@talk.nabble.com>
Message-ID: <C5FB351B-AB8C-4FE7-92BF-7C873E7E1131@ftwr.co.uk>


On 24 Jan 2009, at 22:45, dan.f wrote:

>
> Thank you. thats perfect.  That saves me from the core  
> functionality.  Now I
> just need to see if anyone has built a gui for categories and this  
> plugin
> and Im there!!  If not, I will do that - but I have to believe its  
> already
> been done.  I will look around abit.


We have discussed in the past the idea of a meta meta table.

i.e. one table to store post/comment/taxonomy etc. meta info.

Maybe this would help people in this kind of situation.

Some references:

http://trac.wordpress.org/ticket/5183
http://trac.wordpress.org/ticket/2659

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From mikeschinkel at newclarity.net  Sun Jan 25 04:46:41 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun Jan 25 04:46:58 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <19233811.21232858586244.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <2061496.41232858810614.JavaMail.DELL-1405$@Dell-1405>

Peter:

   Isn't wp_term_taxomony potentially the base for meta, meta?

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Peter Westwood" <peter.westwood@ftwr.co.uk>
To: wp-hackers@lists.automattic.com
Sent: Saturday, January 24, 2009 5:53:15 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Adding meta data to categories


On 24 Jan 2009, at 22:45, dan.f wrote:

>
> Thank you. thats perfect.  That saves me from the core  
> functionality.  Now I
> just need to see if anyone has built a gui for categories and this  
> plugin
> and Im there!!  If not, I will do that - but I have to believe its  
> already
> been done.  I will look around abit.


We have discussed in the past the idea of a meta meta table.

i.e. one table to store post/comment/taxonomy etc. meta info.

Maybe this would help people in this kind of situation.

Some references:

http://trac.wordpress.org/ticket/5183
http://trac.wordpress.org/ticket/2659

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From peter.westwood at ftwr.co.uk  Sun Jan 25 09:29:23 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun Jan 25 09:30:09 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <2061496.41232858810614.JavaMail.DELL-1405$@Dell-1405>
References: <2061496.41232858810614.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <7F4BFCF7-D7CE-47F5-8209-32D5AE960155@ftwr.co.uk>


On 25 Jan 2009, at 04:46, Mike Schinkel wrote:

> Peter:
>
>    Isn't wp_term_taxomony potentially the base for meta, meta?
>
>


Not really.

Meta Meta would be more like the post_meta and user meta tables.

Just something like:

CREATE TABLE $wpdb->metameta (
   metameta_id bigint(20) NOT NULL auto_increment,
   object_id bigint(20) NOT NULL default 0
   metatype varchar(255) default NULL,
   meta_key varchar(255) default NULL,
   meta_value longtext,
);

But the devils in the detail!

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From wp at xentek.net  Sun Jan 25 17:37:11 2009
From: wp at xentek.net (Eric Marden)
Date: Sun Jan 25 17:37:22 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <49785E4F.1010005@santosj.name>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
	<49785E4F.1010005@santosj.name>
Message-ID: <DE280DD5-1AAE-462D-B35C-9A4B952A1F81@xentek.net>

> The Active Record Pattern already has many (3: Zend Framework,  
> ADODB, and ADODB Lite, also part of other frameworks (Yii, Code  
> Igniter, etc) ) libraries devoted to it.

Zend uses the Table Data Gateway pattern and not the Active Record  
pattern.

-e
From wordpress at santosj.name  Sun Jan 25 19:44:17 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Sun Jan 25 19:46:48 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <DE280DD5-1AAE-462D-B35C-9A4B952A1F81@xentek.net>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>	<49785E4F.1010005@santosj.name>
	<DE280DD5-1AAE-462D-B35C-9A4B952A1F81@xentek.net>
Message-ID: <497CC111.1080802@santosj.name>

Active Record = encapsulates data and methods.

DAO = Passes object to class methods as data.

Table Data Gateway = Data for table is part of the method parameters.

You'll have to forgive me for not knowing the minute differences between 
the three, but I don't think I'll be forgetting them any time soon, so I 
have you to thank for that.



What I was trying to say, is that there isn't any point in extending the 
current version 1.x of ezsql class API, when better libraries exist. 
When WordPress goes PHP5, then version 2.x of ezsql might be something 
to look at as well.

If the API ends up looking like:

$wpdb->select('*')->join('wp_terms')->where('somestuff', 
'something')->get('wp_taxonomy');

Then I'll probably won't be committing patches which uses that system, 
but I don't write patches that uses the current db API, so there isn't 
any relevance regardless. I might in the future, maybe. I try to stay 
away from writing patches that require SQL or modifies the WordPress 
administration.

If the proposal is something like:

$wpdb->get($table, $select, $where, $join);

Or:

$wpdb->get(array( 'table' => $table, 'select' => $select, 'where' => 
$where, 'join' => $join ));

Then, I agree, it would be neat as long as I don't have to use it and 
can still write:

$wpdb->query($mySQLStatement);

Jacob Santos


Eric Marden wrote:
>> The Active Record Pattern already has many (3: Zend Framework, ADODB, 
>> and ADODB Lite, also part of other frameworks (Yii, Code Igniter, 
>> etc) ) libraries devoted to it.
>
> Zend uses the Table Data Gateway pattern and not the Active Record 
> pattern.
>
> -e
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From johnbillion+wp at gmail.com  Mon Jan 26 03:04:01 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Mon Jan 26 03:04:11 2009
Subject: [wp-hackers] Plugin Directory
Message-ID: <1fa535a70901251904i3dc95b78jd865a2617844303e@mail.gmail.com>

I'd like to give another wp.org user Subversion privileges to one of
my plugins on the wp.org plugin directory.

Does anybody know who I should get in contact with about this? There's
no info on the directory about it.

Regards,
John.
From glenn at glennansley.com  Mon Jan 26 03:05:08 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Mon Jan 26 03:05:19 2009
Subject: [wp-hackers] Plugin Directory
In-Reply-To: <1fa535a70901251904i3dc95b78jd865a2617844303e@mail.gmail.com>
References: <1fa535a70901251904i3dc95b78jd865a2617844303e@mail.gmail.com>
Message-ID: <3283f0830901251905g4e42da09g7fd815d4ddfab051@mail.gmail.com>

I think you can do it from the admin area once you log into
extend/plugins/plugin_name

On Sun, Jan 25, 2009 at 10:04 PM, John Blackbourn
<johnbillion+wp@gmail.com> wrote:
> I'd like to give another wp.org user Subversion privileges to one of
> my plugins on the wp.org plugin directory.
>
> Does anybody know who I should get in contact with about this? There's
> no info on the directory about it.
>
> Regards,
> John.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From regulatethis at gmail.com  Mon Jan 26 03:22:58 2009
From: regulatethis at gmail.com (Daniel Torreblanca)
Date: Mon Jan 26 03:23:09 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <497CC111.1080802@santosj.name>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
	<49785E4F.1010005@santosj.name>
	<DE280DD5-1AAE-462D-B35C-9A4B952A1F81@xentek.net>
	<497CC111.1080802@santosj.name>
Message-ID: <39fdab560901251922s8685e6em4c6f5984680e3a89@mail.gmail.com>

I really think that Florian's thread is starting to get hijacked, but
as far as syntax goes, I really enjoy working with CakePHP's find()
arguments.

e.g. $this->Listing->find('all', array('conditions' => array('User.id'
=> $user['id']), 'order' => 'Listing.created DESC'));

It gives me the ability to still use SQL syntax directly but the
safety and consistency of more abstraction. The above example is quite
simple, I've used much more complicated ones, and this system makes
generating very dynamic queries easy.
e.g.

Daniel

On Sun, Jan 25, 2009 at 2:44 PM, Jacob Santos <wordpress@santosj.name> wrote:
> Active Record = encapsulates data and methods.
>
> DAO = Passes object to class methods as data.
>
> Table Data Gateway = Data for table is part of the method parameters.
>
> You'll have to forgive me for not knowing the minute differences between the
> three, but I don't think I'll be forgetting them any time soon, so I have
> you to thank for that.
>
>
>
> What I was trying to say, is that there isn't any point in extending the
> current version 1.x of ezsql class API, when better libraries exist. When
> WordPress goes PHP5, then version 2.x of ezsql might be something to look at
> as well.
>
> If the API ends up looking like:
>
> $wpdb->select('*')->join('wp_terms')->where('somestuff',
> 'something')->get('wp_taxonomy');
>
> Then I'll probably won't be committing patches which uses that system, but I
> don't write patches that uses the current db API, so there isn't any
> relevance regardless. I might in the future, maybe. I try to stay away from
> writing patches that require SQL or modifies the WordPress administration.
>
> If the proposal is something like:
>
> $wpdb->get($table, $select, $where, $join);
>
> Or:
>
> $wpdb->get(array( 'table' => $table, 'select' => $select, 'where' => $where,
> 'join' => $join ));
>
> Then, I agree, it would be neat as long as I don't have to use it and can
> still write:
>
> $wpdb->query($mySQLStatement);
>
> Jacob Santos
>
>
> Eric Marden wrote:
>>>
>>> The Active Record Pattern already has many (3: Zend Framework, ADODB, and
>>> ADODB Lite, also part of other frameworks (Yii, Code Igniter, etc) )
>>> libraries devoted to it.
>>
>> Zend uses the Table Data Gateway pattern and not the Active Record
>> pattern.
>>
>> -e
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ncrice at gmail.com  Mon Jan 26 03:29:37 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Mon Jan 26 03:29:55 2009
Subject: [wp-hackers] Plugin Update
Message-ID: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>

I'm curious ...
Is it possible for a plugin developer to build in the ability for users of
the plugin to get updates that are hosted somewhere OTHER THAN
wordpress.org/extent/plugins ???

I'm developing a plugin, and to be honest, I don't love the fact that if I
want to offer automatic updates for it, I have to do so through wp.org.  I'd
really prefer to NOT willingly hand over absolute control of the updates to
my plugin to wp.org.

So has anyone tried this?  Would it be possible? (without modifying the
core, of course)

Nathan


My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice
From johnbillion+wp at gmail.com  Mon Jan 26 03:29:49 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Mon Jan 26 03:29:59 2009
Subject: [wp-hackers] Plugin Directory
In-Reply-To: <3283f0830901251905g4e42da09g7fd815d4ddfab051@mail.gmail.com>
References: <1fa535a70901251904i3dc95b78jd865a2617844303e@mail.gmail.com>
	<3283f0830901251905g4e42da09g7fd815d4ddfab051@mail.gmail.com>
Message-ID: <1fa535a70901251929i117d9894p59a7e3bc66d24a4@mail.gmail.com>

Thanks Glenn!

2009/1/26 Glenn Ansley <glenn@glennansley.com>:
> I think you can do it from the admin area once you log into
> extend/plugins/plugin_name
>
> On Sun, Jan 25, 2009 at 10:04 PM, John Blackbourn
> <johnbillion+wp@gmail.com> wrote:
>> I'd like to give another wp.org user Subversion privileges to one of
>> my plugins on the wp.org plugin directory.
>>
>> Does anybody know who I should get in contact with about this? There's
>> no info on the directory about it.
>>
>> Regards,
>> John.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at dd32.id.au  Mon Jan 26 05:02:47 2009
From: wordpress at dd32.id.au (DD32)
Date: Mon Jan 26 05:03:00 2009
Subject: [wp-hackers] Plugin Update
In-Reply-To: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>
References: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>
Message-ID: <45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>

Yes, There is no reason you couldn't hook into
update_option_update_plugins and add a check in there somewhere..

I'm actually working on a setup atm that would act as a update proxy
for that sort of thing.. ie. your plugin includes a small library,
registers the plugin file with a GUID provided by the service, You
then enter the latest version & URL in the site (Or, specify a file
you host to query the details from periodically).. etc. Designing it
so that it'd be easily usable by any author, and including checks so
as to not clobber wp.org's updates..
I'm not too sure of the demand for such a service (Although i know
some would find it useful, and i know a large number of people choose
to not host with .org)
The way i'm designing it.. Your plugin/theme would have to
-specifically- say that it wants to retrieve updates from my service,
so someone couldn't register Akismet with me and clobber everyone
else.. Well.. they could try.. but the update would -never- be served
out..

Everythings nearly ready to go.. Just need to optimize the class that
gets included with the plugin..


2009/1/26 Nathan Rice <ncrice@gmail.com>:
> I'm curious ...
> Is it possible for a plugin developer to build in the ability for users of
> the plugin to get updates that are hosted somewhere OTHER THAN
> wordpress.org/extent/plugins ???
>
> I'm developing a plugin, and to be honest, I don't love the fact that if I
> want to offer automatic updates for it, I have to do so through wp.org.  I'd
> really prefer to NOT willingly hand over absolute control of the updates to
> my plugin to wp.org.
>
> So has anyone tried this?  Would it be possible? (without modifying the
> core, of course)
>
> Nathan
>
>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at striderweb.com  Mon Jan 26 05:26:32 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon Jan 26 05:27:02 2009
Subject: [wp-hackers] Plugin Update
In-Reply-To: <45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>
References: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>
	<45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>
Message-ID: <8B8C37E1-4CFF-49E8-AB95-75AFB7643BFD@striderweb.com>

I'm actually working on something similar.  It allows a plugin to  
check a URL for the latest version, and integrated the update notice  
into the standard WP system if one is available.

No auto update, but auto version check.

Stephen

-- 
Stephen Rider
http://striderweb.com/

On Jan 25, 2009, at 11:02 PM, DD32 wrote:

> Yes, There is no reason you couldn't hook into
> update_option_update_plugins and add a check in there somewhere..
>
> I'm actually working on a setup atm that would act as a update proxy
> for that sort of thing.. ie. your plugin includes a small library,
> registers the plugin file with a GUID provided by the service[...]

>
> Everythings nearly ready to go.. Just need to optimize the class that
> gets included with the plugin..
>
> 2009/1/26 Nathan Rice <ncrice@gmail.com>:
>> Is it possible for a plugin developer to build in the ability for  
>> users of
>> the plugin to get updates that are hosted somewhere OTHER THAN
>> wordpress.org/extent/plugins ???
>>
>> I'm developing a plugin, and to be honest, I don't love the fact  
>> that if I
>> want to offer automatic updates for it, I have to do so through  
>> wp.org.  I'd
>> really prefer to NOT willingly hand over absolute control of the  
>> updates to
>> my plugin to wp.org.
>>
>> So has anyone tried this?  Would it be possible? (without modifying  
>> the
>> core, of course)



From wp-hackers at striderweb.com  Mon Jan 26 05:32:42 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon Jan 26 05:33:11 2009
Subject: [wp-hackers] Checking for custom Plugin Headers?
Message-ID: <D0AB01B1-897C-4CE6-A6A3-27C31525713E@striderweb.com>

Hi --

I just submitted a patch that allows plugin authors to specify  
additional Headers to be returned by get_plugin_data().  For example,  
a plugin could have:

WP Minimum Version: 2.8

...and with this filter you could make get_plugin_data() return that  
header as $plugin_data['WPMin'] right alongside the standard  
$plugin_data['Name'] etc.

The patch is secure -- it doesn't let plugins alter the standard  
headers at all, just add new ones.

Does anyone else like this idea?  I've had several cases over the  
years where I thought this could be very nice for plugin coders.   
Here's the ticket on trac:  http://trac.wordpress.org/ticket/8964

Stephen



-- 
Stephen Rider
http://striderweb.com/



From wordpress at dd32.id.au  Mon Jan 26 06:14:43 2009
From: wordpress at dd32.id.au (DD32)
Date: Mon Jan 26 06:14:54 2009
Subject: [wp-hackers] Plugin Update
In-Reply-To: <8B8C37E1-4CFF-49E8-AB95-75AFB7643BFD@striderweb.com>
References: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>
	<45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>
	<8B8C37E1-4CFF-49E8-AB95-75AFB7643BFD@striderweb.com>
Message-ID: <45055a190901252214h10452a43hb43d3a4039215666@mail.gmail.com>

Auto update and integrating with WP is easy if you know where to look/hook :)

The reason i've decided to do it this way rather than letting authors
specify a URL in the plugin is mainly due to load, Some authors are
simply not going to want to deal with a potential large number of
requests, And if many plugins take it on, Then thats umpteen requests
being made from each plugin/theme.. and potentially not all going to
return within a decent time frame..
My approach means there'd be 1 chokepoint.. my server.. which could
end up being a real bad thing.. but assuming things work cleanly and
fast.. there shouldnt be too much of a problem, But it reduces the
load on authors servers too (I know a lot of authors have hosts with
slim available resources). But it also means 1 extra HTTP request per
update check, even if a dozen plugins use the system.. which should be
much faster for end-users of the plugins.

2009/1/26 Stephen Rider <wp-hackers@striderweb.com>:
> I'm actually working on something similar.  It allows a plugin to check a
> URL for the latest version, and integrated the update notice into the
> standard WP system if one is available.
>
> No auto update, but auto version check.
>
> Stephen
From brian at nerdlife.net  Mon Jan 26 08:37:38 2009
From: brian at nerdlife.net (Brian Krausz)
Date: Mon Jan 26 08:37:54 2009
Subject: [wp-hackers] Adding meta data to categories
In-Reply-To: <21635767.post@talk.nabble.com>
References: <83FA2E8D-4C52-4AD3-8CCE-40602F78620F@gmail.com>
	<b4dd281c0901081518r4bebcd1el47c22117e6dfff51@mail.gmail.com>
	<674b4a3b0901081640s4b6b2eeamcc2611d7d8ff5ae7@mail.gmail.com>
	<63a3a6ce0901090913x55d4a7c8i594a73778bece452@mail.gmail.com>
	<15589040.2031232238300219.JavaMail.DELL-1405$@Dell-1405>
	<21635767.post@talk.nabble.com>
Message-ID: <63a3a6ce0901260037s233a8d2er716251fc8e7abda2@mail.gmail.com>

Sorry for the late reply Dan, been really busy.  Glad you found you
solution, but for the sake of completeness I'll throw in the potential use
of my plugin:

Right now i have hardcoded object types to just Post, Page, and Link.  You
could also add in category, which then just defines a new object type, and
the object_id would refer to a category_id.  You would have to write your
own interface to the category admin pages, but after that you could have
taxonomies for categories.  Seems a little complicated and the "custom
fields" paradigm seems to fit much better for your needs, but it's an
interesting concept that I might add in to my plugin when bored/less busy.
Thanks for the idea!

--Brian

On Fri, Jan 23, 2009 at 8:02 PM, dan.f <dan@eliresearch.com> wrote:

>
> I too have been trying to solve this issue.  Brian - I've
> installed/uninstalled your plugin 3 times thinking it would be the
> solution,
> but I still dont know if it is :(  From what I can gather, you can create
> new terms, but can't associate them with categories, just
> posts/pages/links.
>
> What I would like is a table similar to wp_postmeta, but wp_categorymeta,
> with 4 columns:
> id, catid, key, value
>
> Then have an interface on the categories page to add multiple meta
> key/values to each category, and some functions to retrieve these values as
> an array for use in the theme.
>
> The headspace2 plugin by urbangiraffe is close on this regard, but they
> just
> have a single input box and its just values defined for each category that
> get used for meta keyword tag, not key/value settings.
>
> But, that plugin does modify the 'edit category' page to create the
> interface, so that appears to be possibly to hook into.
>
> Brian, can custax do this?  If there is nothing out there like this, then I
> will probably end up doing.  Doesn't seem too complicated...
>
>
> Mike Schinkel-5 wrote:
> >
> > "Brian Krausz" <brian@nerdlife.net> wrote:
> >> my plugin abstracts that API into a GUI,
> >> may help with what you're
> >> trying to do.
> >> http://wordpress.org/extend/plugins/custom-taxonomies/
> >
> > This looks really interesting and may be exactly what I need for several
> > different potential use cases but after installing it it is not clear how
> > someone would actually apply it's functionality.  It seems to compete
> with
> > tags and categories, but I don't see how they relate.
> >
> > Do you have a blog post anywhere explaining how you've used it?
> >
> > -Mike Schinkel
> > http://mikeschinkel.com/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
>
> --
> View this message in context:
> http://www.nabble.com/Adding-meta-data-to-categories-tp21361154p21635767.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From brian at nerdlife.net  Mon Jan 26 08:46:32 2009
From: brian at nerdlife.net (Brian Krausz)
Date: Mon Jan 26 08:46:44 2009
Subject: [wp-hackers] Plugin Update
In-Reply-To: <45055a190901252214h10452a43hb43d3a4039215666@mail.gmail.com>
References: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>
	<45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>
	<8B8C37E1-4CFF-49E8-AB95-75AFB7643BFD@striderweb.com>
	<45055a190901252214h10452a43hb43d3a4039215666@mail.gmail.com>
Message-ID: <63a3a6ce0901260046j126afadbv422c26d57be3ae0c@mail.gmail.com>

As a compromise couldn't you allow plugin writers to register their plugins
on WP.org for the sole purpose of checking updates.  Your server could do
pings to these sites once a day, and then relay the pings to plugin
developers.

Also, I don't think a single ping every 24 hours (a reasonable timeframe for
pushing update notification), spread out randomly throughout the day, would
kill a server.  In order to hit more than an expected 1rqs, a trivial load,
you would need 86k installs (realistically with time distributions this
would be more like 40k, but if you have 40k plugin installs, can setup an
update notification file properly, and you can't handle 1rqs on your own
server, there's something wrong.

Personally I like the first option for a much better user experience.  Plus
the WP codebase doesn't need to be touched...only the server code.

--Brian

On Mon, Jan 26, 2009 at 1:14 AM, DD32 <wordpress@dd32.id.au> wrote:

> Auto update and integrating with WP is easy if you know where to look/hook
> :)
>
> The reason i've decided to do it this way rather than letting authors
> specify a URL in the plugin is mainly due to load, Some authors are
> simply not going to want to deal with a potential large number of
> requests, And if many plugins take it on, Then thats umpteen requests
> being made from each plugin/theme.. and potentially not all going to
> return within a decent time frame..
> My approach means there'd be 1 chokepoint.. my server.. which could
> end up being a real bad thing.. but assuming things work cleanly and
> fast.. there shouldnt be too much of a problem, But it reduces the
> load on authors servers too (I know a lot of authors have hosts with
> slim available resources). But it also means 1 extra HTTP request per
> update check, even if a dozen plugins use the system.. which should be
> much faster for end-users of the plugins.
>
> 2009/1/26 Stephen Rider <wp-hackers@striderweb.com>:
> > I'm actually working on something similar.  It allows a plugin to check a
> > URL for the latest version, and integrated the update notice into the
> > standard WP system if one is available.
> >
> > No auto update, but auto version check.
> >
> > Stephen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From somani.mayur at gmail.com  Mon Jan 26 08:50:46 2009
From: somani.mayur at gmail.com (Mayur somani)
Date: Mon Jan 26 08:50:54 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
Message-ID: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>

Hi,

While researching on some of the, so called, black hat SEO strategies,
I found many tricks to insert backlinks and backdoors into free
wordpress themes and then distributing them.

Now this is unacceptible. So, please list any of the ways you know to
insert backlinks and backdoors into themes files. I am planning to
write a plugin that will scan all the theme files to report any
malicious code there.

Thank you for your time.
From brian at nerdlife.net  Mon Jan 26 08:56:04 2009
From: brian at nerdlife.net (Brian Krausz)
Date: Mon Jan 26 08:56:16 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
Message-ID: <63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>

Alternatively, it would be really neat to regex-out any URL from theme
files, and compare it to a list of malicious sites (or build a list of links
to external URLs, easily done with a code equivalent of `grep -R "http://"
*`).  Then, maybe whenever a user goes to activate a theme (or on the theme
selection page), show them that list.

--Brian

On Mon, Jan 26, 2009 at 3:50 AM, Mayur somani <somani.mayur@gmail.com>wrote:

> Hi,
>
> While researching on some of the, so called, black hat SEO strategies,
> I found many tricks to insert backlinks and backdoors into free
> wordpress themes and then distributing them.
>
> Now this is unacceptible. So, please list any of the ways you know to
> insert backlinks and backdoors into themes files. I am planning to
> write a plugin that will scan all the theme files to report any
> malicious code there.
>
> Thank you for your time.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From somani.mayur at gmail.com  Mon Jan 26 08:59:34 2009
From: somani.mayur at gmail.com (Mayur somani)
Date: Mon Jan 26 08:59:45 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
Message-ID: <a51040f00901260059pdde7cc5qf79336cfb7dbc45b@mail.gmail.com>

Good idea, but URL filtering can be easily bypassed with some simple
encoding schemes.

On Mon, Jan 26, 2009 at 2:26 PM, Brian Krausz <brian@nerdlife.net> wrote:
> Alternatively, it would be really neat to regex-out any URL from theme
> files, and compare it to a list of malicious sites (or build a list of links
> to external URLs, easily done with a code equivalent of `grep -R "http://"
> *`).  Then, maybe whenever a user goes to activate a theme (or on the theme
> selection page), show them that list.
>
> --Brian
>
> On Mon, Jan 26, 2009 at 3:50 AM, Mayur somani <somani.mayur@gmail.com>wrote:
>
>> Hi,
>>
>> While researching on some of the, so called, black hat SEO strategies,
>> I found many tricks to insert backlinks and backdoors into free
>> wordpress themes and then distributing them.
>>
>> Now this is unacceptible. So, please list any of the ways you know to
>> insert backlinks and backdoors into themes files. I am planning to
>> write a plugin that will scan all the theme files to report any
>> malicious code there.
>>
>> Thank you for your time.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at dd32.id.au  Mon Jan 26 09:01:52 2009
From: wordpress at dd32.id.au (DD32)
Date: Mon Jan 26 09:02:32 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
Message-ID: <45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>

grepping for http:// wont help, they'll just obfuscate it.

Ways which it'd be possible to insert malicious links:
include()(remote url) / fopen() / JS / eval() / urldecode() / chr() /
. (string concat'ing 'h' . 'tt' . 'p')..

In short.. If you make a plugin, It'll be worked around by the
majority of those who insert the links..

2009/1/26 Brian Krausz <brian@nerdlife.net>:
> Alternatively, it would be really neat to regex-out any URL from theme
> files, and compare it to a list of malicious sites (or build a list of links
> to external URLs, easily done with a code equivalent of `grep -R "http://"
> *`).  Then, maybe whenever a user goes to activate a theme (or on the theme
> selection page), show them that list.
>
> --Brian
>
> On Mon, Jan 26, 2009 at 3:50 AM, Mayur somani <somani.mayur@gmail.com>wrote:
>
>> Hi,
>>
>> While researching on some of the, so called, black hat SEO strategies,
>> I found many tricks to insert backlinks and backdoors into free
>> wordpress themes and then distributing them.
>>
>> Now this is unacceptible. So, please list any of the ways you know to
>> insert backlinks and backdoors into themes files. I am planning to
>> write a plugin that will scan all the theme files to report any
>> malicious code there.
>>
>> Thank you for your time.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From listswphackers at mist.org.uk  Mon Jan 26 09:04:06 2009
From: listswphackers at mist.org.uk (mrmist)
Date: Mon Jan 26 09:04:23 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted
	in	code?
In-Reply-To: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
Message-ID: <GhcRmoBGyXfJFwUb@dsl-217-155-35-239.zen.co.uk>

In message <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>, 
Mayur somani <somani.mayur@gmail.com> writes
>Hi,
>
>While researching on some of the, so called, black hat SEO strategies,
>I found many tricks to insert backlinks and backdoors into free
>wordpress themes and then distributing them.
>
>Now this is unacceptible. So, please list any of the ways you know to
>insert backlinks and backdoors into themes files. I am planning to
>write a plugin that will scan all the theme files to report any
>malicious code there.
>

I don't really fancy listing all the ways I know to obfuscate links into 
themes, as even though I find the practice shady listing them all would 
provide an easy-listing resource for people wanting to do just that.

Of course if you are serious about writing a plugin to defend against 
such things, I'm sure if you google a bit you will find all sorts of 
references to hidden links and how they get there.

-- 
mrmist
From dhruva.sagar at gmail.com  Mon Jan 26 09:06:20 2009
From: dhruva.sagar at gmail.com (Dhruva Sagar)
Date: Mon Jan 26 09:06:31 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <GhcRmoBGyXfJFwUb@dsl-217-155-35-239.zen.co.uk>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<GhcRmoBGyXfJFwUb@dsl-217-155-35-239.zen.co.uk>
Message-ID: <5dd1abff0901260106v3dbe5786qac19e41dc2716fff@mail.gmail.com>

On Mon, Jan 26, 2009 at 2:34 PM, mrmist <listswphackers@mist.org.uk> wrote:

> In message <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>,
> Mayur somani <somani.mayur@gmail.com> writes
>
>> Hi,
>>
>> While researching on some of the, so called, black hat SEO strategies,
>> I found many tricks to insert backlinks and backdoors into free
>> wordpress themes and then distributing them.
>>
>> Now this is unacceptible. So, please list any of the ways you know to
>> insert backlinks and backdoors into themes files. I am planning to
>> write a plugin that will scan all the theme files to report any
>> malicious code there.
>>
>>
> I don't really fancy listing all the ways I know to obfuscate links into
> themes, as even though I find the practice shady listing them all would
> provide an easy-listing resource for people wanting to do just that.
>
> Of course if you are serious about writing a plugin to defend against such
> things, I'm sure if you google a bit you will find all sorts of references
> to hidden links and how they get there.


I strongly agree to the same.


>
> --
> mrmist
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Thanks & Regards,
Dhruva Sagar.

Fred Allen  - "Television is a medium because anything well done is rare."
From somani.mayur at gmail.com  Mon Jan 26 09:08:31 2009
From: somani.mayur at gmail.com (Mayur somani)
Date: Mon Jan 26 09:08:43 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <5dd1abff0901260106v3dbe5786qac19e41dc2716fff@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<GhcRmoBGyXfJFwUb@dsl-217-155-35-239.zen.co.uk>
	<5dd1abff0901260106v3dbe5786qac19e41dc2716fff@mail.gmail.com>
Message-ID: <a51040f00901260108j42236eccge4e39a16fc0949ce@mail.gmail.com>

I already googled for it and I think I know almost every trick to do
this. Still I wanted to ensure that I'm not missing anything.

On Mon, Jan 26, 2009 at 2:36 PM, Dhruva Sagar <dhruva.sagar@gmail.com> wrote:
> On Mon, Jan 26, 2009 at 2:34 PM, mrmist <listswphackers@mist.org.uk> wrote:
>
>> In message <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>,
>> Mayur somani <somani.mayur@gmail.com> writes
>>
>>> Hi,
>>>
>>> While researching on some of the, so called, black hat SEO strategies,
>>> I found many tricks to insert backlinks and backdoors into free
>>> wordpress themes and then distributing them.
>>>
>>> Now this is unacceptible. So, please list any of the ways you know to
>>> insert backlinks and backdoors into themes files. I am planning to
>>> write a plugin that will scan all the theme files to report any
>>> malicious code there.
>>>
>>>
>> I don't really fancy listing all the ways I know to obfuscate links into
>> themes, as even though I find the practice shady listing them all would
>> provide an easy-listing resource for people wanting to do just that.
>>
>> Of course if you are serious about writing a plugin to defend against such
>> things, I'm sure if you google a bit you will find all sorts of references
>> to hidden links and how they get there.
>
>
> I strongly agree to the same.
>
>
>>
>> --
>> mrmist
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Thanks & Regards,
> Dhruva Sagar.
>
> Fred Allen  - "Television is a medium because anything well done is rare."
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ryanmccue at cubegames.net  Mon Jan 26 09:09:34 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Mon Jan 26 09:10:34 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted
	in	code?
In-Reply-To: <45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
Message-ID: <497D7DCE.2050704@cubegames.net>

DD32 wrote:
> grepping for http:// wont help, they'll just obfuscate it.
>
> Ways which it'd be possible to insert malicious links:
> include()(remote url) / fopen() / JS / eval() / urldecode() / chr() /
> . (string concat'ing 'h' . 'tt' . 'p')..
>   

eval() is your best bet out of all of those. Rarely is it used
legitimately, however most hidden things will use it 99% of the time.

(Note: 100% of statistics are made up)

-- 
Ryan McCue
<http://cubegames.net/>

From ozh at planetozh.com  Mon Jan 26 09:29:14 2009
From: ozh at planetozh.com (Ozh)
Date: Mon Jan 26 09:30:41 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors
	inserted in code?
In-Reply-To: <497D7DCE.2050704@cubegames.net>
Message-ID: <OF2351E57E.6BA14316-ONC125754A.0033ED4E-C125754A.00341DFB@notes.edfgdf.fr>

I think the only way to detect unwanted links is to capture the page 
output and parse it. It's just too easy to obfuscate, use filters, do 
complicated stuff that a code parser will never find.

Ozh
-- 
http://planetozh.com/

From somani.mayur at gmail.com  Mon Jan 26 09:38:14 2009
From: somani.mayur at gmail.com (Mayur somani)
Date: Mon Jan 26 09:38:24 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors 
	inserted in code?
In-Reply-To: <OF2351E57E.6BA14316-ONC125754A.0033ED4E-C125754A.00341DFB@notes.edfgdf.fr>
References: <497D7DCE.2050704@cubegames.net>
	<OF2351E57E.6BA14316-ONC125754A.0033ED4E-C125754A.00341DFB@notes.edfgdf.fr>
Message-ID: <a51040f00901260138m70d91341v35fb29465ad55887@mail.gmail.com>

Yes I completely agree with this. Its very easy to bypass code
parsers, that's why I am trying to develop some heuristic technique to
detect backlinks.

One more thing, we are only discussing about backlinks, what about
backdoors like c99shell etc.

On Mon, Jan 26, 2009 at 2:59 PM, Ozh <ozh@planetozh.com> wrote:
> I think the only way to detect unwanted links is to capture the page
> output and parse it. It's just too easy to obfuscate, use filters, do
> complicated stuff that a code parser will never find.
>
> Ozh
> --
> http://planetozh.com/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From somani.mayur at gmail.com  Mon Jan 26 09:07:09 2009
From: somani.mayur at gmail.com (Mayur somani)
Date: Mon Jan 26 09:38:31 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
Message-ID: <a51040f00901260107g6594e82eneffe36a748850834@mail.gmail.com>

At least the most trivial ways to insert backlinks can be prevented by plugin.
What do you say?

On Mon, Jan 26, 2009 at 2:31 PM, DD32 <wordpress@dd32.id.au> wrote:
> grepping for http:// wont help, they'll just obfuscate it.
>
> Ways which it'd be possible to insert malicious links:
> include()(remote url) / fopen() / JS / eval() / urldecode() / chr() /
> . (string concat'ing 'h' . 'tt' . 'p')..
>
> In short.. If you make a plugin, It'll be worked around by the
> majority of those who insert the links..
>
> 2009/1/26 Brian Krausz <brian@nerdlife.net>:
>> Alternatively, it would be really neat to regex-out any URL from theme
>> files, and compare it to a list of malicious sites (or build a list of links
>> to external URLs, easily done with a code equivalent of `grep -R "http://"
>> *`).  Then, maybe whenever a user goes to activate a theme (or on the theme
>> selection page), show them that list.
>>
>> --Brian
>>
>> On Mon, Jan 26, 2009 at 3:50 AM, Mayur somani <somani.mayur@gmail.com>wrote:
>>
>>> Hi,
>>>
>>> While researching on some of the, so called, black hat SEO strategies,
>>> I found many tricks to insert backlinks and backdoors into free
>>> wordpress themes and then distributing them.
>>>
>>> Now this is unacceptible. So, please list any of the ways you know to
>>> insert backlinks and backdoors into themes files. I am planning to
>>> write a plugin that will scan all the theme files to report any
>>> malicious code there.
>>>
>>> Thank you for your time.
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From joost at yoast.com  Mon Jan 26 09:41:43 2009
From: joost at yoast.com (Joost de Valk)
Date: Mon Jan 26 09:42:21 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <a51040f00901260107g6594e82eneffe36a748850834@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
	<a51040f00901260107g6594e82eneffe36a748850834@mail.gmail.com>
Message-ID: <2FDE49BF-93F0-461C-B329-7B03779256B7@yoast.com>

Anyone serious about doing this kind of thing would only show the  
links to search engine bots, or would at least prevent the links from  
showing to any IP where an admin has logged in from.

Best,
Joost


On Jan 26, 2009, at 10:07 AM, Mayur somani wrote:

> At least the most trivial ways to insert backlinks can be prevented  
> by plugin.
> What do you say?
>
> On Mon, Jan 26, 2009 at 2:31 PM, DD32 <wordpress@dd32.id.au> wrote:
>> grepping for http:// wont help, they'll just obfuscate it.
>>
>> Ways which it'd be possible to insert malicious links:
>> include()(remote url) / fopen() / JS / eval() / urldecode() / chr() /
>> . (string concat'ing 'h' . 'tt' . 'p')..
>>
>> In short.. If you make a plugin, It'll be worked around by the
>> majority of those who insert the links..
>>
>> 2009/1/26 Brian Krausz <brian@nerdlife.net>:
>>> Alternatively, it would be really neat to regex-out any URL from  
>>> theme
>>> files, and compare it to a list of malicious sites (or build a  
>>> list of links
>>> to external URLs, easily done with a code equivalent of `grep -R  
>>> "http://"
>>> *`).  Then, maybe whenever a user goes to activate a theme (or on  
>>> the theme
>>> selection page), show them that list.
>>>
>>> --Brian
>>>
>>> On Mon, Jan 26, 2009 at 3:50 AM, Mayur somani <somani.mayur@gmail.com 
>>> >wrote:
>>>
>>>> Hi,
>>>>
>>>> While researching on some of the, so called, black hat SEO  
>>>> strategies,
>>>> I found many tricks to insert backlinks and backdoors into free
>>>> wordpress themes and then distributing them.
>>>>
>>>> Now this is unacceptible. So, please list any of the ways you  
>>>> know to
>>>> insert backlinks and backdoors into themes files. I am planning to
>>>> write a plugin that will scan all the theme files to report any
>>>> malicious code there.
>>>>
>>>> Thank you for your time.
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ryanmccue at cubegames.net  Mon Jan 26 09:45:11 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Mon Jan 26 09:46:07 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted
	in	code?
In-Reply-To: <2FDE49BF-93F0-461C-B329-7B03779256B7@yoast.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>	<a51040f00901260107g6594e82eneffe36a748850834@mail.gmail.com>
	<2FDE49BF-93F0-461C-B329-7B03779256B7@yoast.com>
Message-ID: <497D8627.7090408@cubegames.net>

Joost de Valk wrote:
> Anyone serious about doing this kind of thing would only show the
> links to search engine bots, or would at least prevent the links from
> showing to any IP where an admin has logged in from.

Speaking of which, I saw an instance where it was redirected in
.htaccess, so it could be in there too.

-- 
Ryan McCue
<http://cubegames.net/>

From wordpress at dd32.id.au  Mon Jan 26 09:46:11 2009
From: wordpress at dd32.id.au (DD32)
Date: Mon Jan 26 09:46:20 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <a51040f00901260107g6594e82eneffe36a748850834@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
	<a51040f00901260107g6594e82eneffe36a748850834@mail.gmail.com>
Message-ID: <45055a190901260146g190fe8dqa605a8d9364f5dc0@mail.gmail.com>

2009/1/26 Mayur somani <somani.mayur@gmail.com>:
> At least the most trivial ways to insert backlinks can be prevented by plugin.
> What do you say?

I say you'd be right, But the use of any technique to prevent
something malicious, just causes those to work around it. Look at the
Virus/Spyware battles.

Eval() is your best bet, but its not required. And shell-like systems
need to use eval()/system().. Just go grab a few of them and take a
look at their code..
From ryanmccue at cubegames.net  Mon Jan 26 09:47:13 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Mon Jan 26 09:48:07 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted
	in	code?
In-Reply-To: <45055a190901260146g190fe8dqa605a8d9364f5dc0@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>	<a51040f00901260107g6594e82eneffe36a748850834@mail.gmail.com>
	<45055a190901260146g190fe8dqa605a8d9364f5dc0@mail.gmail.com>
Message-ID: <497D86A1.7030802@cubegames.net>

DD32 wrote:
> Eval() is your best bet, but its not required. And shell-like systems
> need to use eval()/system().. Just go grab a few of them and take a
> look at their code..
>   

Remember also that code within backticks will be executed on the system,
just like exec() does.

-- 
Ryan McCue
<http://cubegames.net/>

From somani.mayur at gmail.com  Mon Jan 26 09:52:29 2009
From: somani.mayur at gmail.com (Mayur somani)
Date: Mon Jan 26 09:52:40 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <497D86A1.7030802@cubegames.net>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
	<a51040f00901260107g6594e82eneffe36a748850834@mail.gmail.com>
	<45055a190901260146g190fe8dqa605a8d9364f5dc0@mail.gmail.com>
	<497D86A1.7030802@cubegames.net>
Message-ID: <a51040f00901260152v1a25f518r322533a3dc8edbbb@mail.gmail.com>

@Ryan

Can you please mail me more details about that .htaccess thing, I've
never heard about that :(

On Mon, Jan 26, 2009 at 3:17 PM, Ryan McCue <ryanmccue@cubegames.net> wrote:
> DD32 wrote:
>> Eval() is your best bet, but its not required. And shell-like systems
>> need to use eval()/system().. Just go grab a few of them and take a
>> look at their code..
>>
>
> Remember also that code within backticks will be executed on the system,
> just like exec() does.
>
> --
> Ryan McCue
> <http://cubegames.net/>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ryanmccue at cubegames.net  Mon Jan 26 09:53:45 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Mon Jan 26 09:54:37 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted
	in	code?
In-Reply-To: <a51040f00901260152v1a25f518r322533a3dc8edbbb@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>	<a51040f00901260107g6594e82eneffe36a748850834@mail.gmail.com>	<45055a190901260146g190fe8dqa605a8d9364f5dc0@mail.gmail.com>	<497D86A1.7030802@cubegames.net>
	<a51040f00901260152v1a25f518r322533a3dc8edbbb@mail.gmail.com>
Message-ID: <497D8829.3050300@cubegames.net>

Mayur somani wrote:
> @Ryan
>
> Can you please mail me more details about that .htaccess thing, I've
> never heard about that :(

Not sure I have it sitting around, but it basically checked if the
referrer contained google.com, yahoo.com, etc. and then issued a
redirect to that via RewriteRule.

-- 
Ryan McCue
<http://cubegames.net/>

From wp-hackers at striderweb.com  Mon Jan 26 13:51:24 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon Jan 26 13:51:56 2009
Subject: [wp-hackers] Plugin Update
In-Reply-To: <63a3a6ce0901260046j126afadbv422c26d57be3ae0c@mail.gmail.com>
References: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>
	<45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>
	<8B8C37E1-4CFF-49E8-AB95-75AFB7643BFD@striderweb.com>
	<45055a190901252214h10452a43hb43d3a4039215666@mail.gmail.com>
	<63a3a6ce0901260046j126afadbv422c26d57be3ae0c@mail.gmail.com>
Message-ID: <E9F94600-F1AF-407A-810F-0D4F90E78E06@striderweb.com>


On Jan 26, 2009, at 2:46 AM, Brian Krausz wrote:

> As a compromise couldn't you allow plugin writers to register their  
> plugins
> on WP.org for the sole purpose of checking updates.  Your server  
> could do
> pings to these sites once a day, and then relay the pings to plugin
> developers.

This is a recurring discussion.  From on high, the short answer is  
historically: "No".  Slightly longer answer is "The plugin repository  
is for hosting, not listing."

On Jan 26, 2009, at 12:14 AM, DD32 wrote:

> Auto update and integrating with WP is easy if you know where to  
> look/hook :)

Cool. Can I see?

Stephen

-- 
Stephen Rider
http://striderweb.com/



From otto at ottodestruct.com  Mon Jan 26 14:33:26 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jan 26 14:33:34 2009
Subject: [wp-hackers] Plugin Update
In-Reply-To: <E9F94600-F1AF-407A-810F-0D4F90E78E06@striderweb.com>
References: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>
	<45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>
	<8B8C37E1-4CFF-49E8-AB95-75AFB7643BFD@striderweb.com>
	<45055a190901252214h10452a43hb43d3a4039215666@mail.gmail.com>
	<63a3a6ce0901260046j126afadbv422c26d57be3ae0c@mail.gmail.com>
	<E9F94600-F1AF-407A-810F-0D4F90E78E06@striderweb.com>
Message-ID: <161617690901260633s76dda452w69f797059763960c@mail.gmail.com>

On Mon, Jan 26, 2009 at 7:51 AM, Stephen Rider
<wp-hackers@striderweb.com> wrote:
> On Jan 26, 2009, at 12:14 AM, DD32 wrote:
>
>> Auto update and integrating with WP is easy if you know where to look/hook
>> :)
>
> Cool. Can I see?

The wp_update_plugins function does the update check. At the end, it
calls update_option( 'update_plugins', $new_option ).

Therefore, if you hook a filter to "update_option_update_plugins",
you'll get triggered just after the update check to wp.org has
occurred, and you can do your own check there, and then alter the
$new_option value accordingly.

You have to be careful though. The update_plugins option is actually
updated twice. Once for the current time update, and once at the end
of the function. You need to be able to ignore the first call and only
trigger on the second call to your function.
From otto at ottodestruct.com  Mon Jan 26 14:39:46 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jan 26 14:39:56 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
Message-ID: <161617690901260639p15cdf75cs69e6fbfd87134c61@mail.gmail.com>

On Mon, Jan 26, 2009 at 3:01 AM, DD32 <wordpress@dd32.id.au> wrote:
> grepping for http:// wont help, they'll just obfuscate it.
>
> Ways which it'd be possible to insert malicious links:
> include()(remote url) / fopen() / JS / eval() / urldecode() / chr() /
> . (string concat'ing 'h' . 'tt' . 'p')..
>
> In short.. If you make a plugin, It'll be worked around by the
> majority of those who insert the links..

True, but at the same time it could be useful as a early warning
device. I've seen a plugin along these lines, but I can't find it
anywhere now. :(

99% of the themes I see with this stuff in them contain either "eval"
or "base64_decode" in them. Of course, there's other ways to
obfuscate, and no one method will find them all, but having an early
warning on theme activation could be useful.
From otto at ottodestruct.com  Mon Jan 26 14:46:23 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jan 26 14:46:34 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <39fdab560901251922s8685e6em4c6f5984680e3a89@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>
	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
	<49785E4F.1010005@santosj.name>
	<DE280DD5-1AAE-462D-B35C-9A4B952A1F81@xentek.net>
	<497CC111.1080802@santosj.name>
	<39fdab560901251922s8685e6em4c6f5984680e3a89@mail.gmail.com>
Message-ID: <161617690901260646r5538030amdfdf20c94e29294c@mail.gmail.com>

On Sun, Jan 25, 2009 at 9:22 PM, Daniel Torreblanca
<regulatethis@gmail.com> wrote:
> I really think that Florian's thread is starting to get hijacked, but
> as far as syntax goes, I really enjoy working with CakePHP's find()
> arguments.
>
> e.g. $this->Listing->find('all', array('conditions' => array('User.id'
> => $user['id']), 'order' => 'Listing.created DESC'));
>
> It gives me the ability to still use SQL syntax directly but the
> safety and consistency of more abstraction. The above example is quite
> simple, I've used much more complicated ones, and this system makes
> generating very dynamic queries easy.

I used the Zend Table stuff for a while, and I liked it to a certain
extent. It looks like this:

$selectstmt = $table->select()->where('whatever = ?',
$whatever)->order('something ASC');
$row = $table->fetchRow($selectstmt);

This would get a row as an object (one predefined by a class for that
row type), or as a generic row if you didn't define it as something
special. You could also get multiple rows like so:
$rows = $table->fetchAll($selectstmt);

This gives you a "RowSet", which was just a fancied up array of Rows.
It's really quite clever, and the classes allow for specifying the
dependent tables as well, which could then be automatically retrieved
based on the parent tables (internally it uses joins to do this).
Clever.

-Otto
From scribu at gmail.com  Mon Jan 26 15:00:06 2009
From: scribu at gmail.com (scribu)
Date: Mon Jan 26 15:00:18 2009
Subject: [wp-hackers] Re: Reject uploaded image
In-Reply-To: <349fe48b0901230617i2e567525yf7d5e817df9160e2@mail.gmail.com>
References: <349fe48b0901230617i2e567525yf7d5e817df9160e2@mail.gmail.com>
Message-ID: <349fe48b0901260700x3344e707je28d2926e68431eb@mail.gmail.com>

>
> I'm trying to do something like this:
>
> A user uploads an image. If the image resolution is lower than 640x480px
> (for example), then an error message is sent to the user and the image is
> deleted.
>
> I've tried using *add_action('media_upload_image', 'my_function')*, but
> that doesn't help.
>
> Maybe using *add_filter('async_upload_image', 'my_function')* ?
>
> Any ideas?
>

I've found that using add_attachment doesn't work because the metadata is
generated after that, so I did it like this:


    add_filter('wp_update_attachment_metadata', 'check_size', 10, 2);

    public function check_size($data, $id) {
        if ( $data['width'] < 800 && $data['height'] < 600 ) {
            wp_delete_attachment($id);
            echo "<strong class='error'>Error: Image too small</strong>";
        }
    }


-- 
http://scribu.net
From scribu at gmail.com  Mon Jan 26 15:08:14 2009
From: scribu at gmail.com (scribu)
Date: Mon Jan 26 15:08:25 2009
Subject: [wp-hackers] Re: Reject uploaded image
In-Reply-To: <349fe48b0901260700x3344e707je28d2926e68431eb@mail.gmail.com>
References: <349fe48b0901230617i2e567525yf7d5e817df9160e2@mail.gmail.com>
	<349fe48b0901260700x3344e707je28d2926e68431eb@mail.gmail.com>
Message-ID: <349fe48b0901260708p7ae4f21aqc946a36fd9025a8b@mail.gmail.com>

On Mon, Jan 26, 2009 at 5:00 PM, scribu <scribu@gmail.com> wrote:

> I'm trying to do something like this:
>>
>> A user uploads an image. If the image resolution is lower than 640x480px
>> (for example), then an error message is sent to the user and the image is
>> deleted.
>>
>> I've tried using *add_action('media_upload_image', 'my_function')*, but
>> that doesn't help.
>>
>> Maybe using *add_filter('async_upload_image', 'my_function')* ?
>>
>> Any ideas?
>>
>
That was a little rushed. This is the final version:


    add_filter('wp_update_attachment_metadata', 'check_size', 10, 2);

    public function check_size($data, $id) {
        if ( $data['width'] < 800 && $data['height'] < 600 ) {
            wp_delete_attachment($id);
            die("<strong class='error'>Error: Image too small</strong>");
        } else
            return $data;
    }


-- 
http://scribu.net
From scribu at gmail.com  Mon Jan 26 15:12:15 2009
From: scribu at gmail.com (scribu)
Date: Mon Jan 26 15:15:22 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <161617690901260639p15cdf75cs69e6fbfd87134c61@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
	<161617690901260639p15cdf75cs69e6fbfd87134c61@mail.gmail.com>
Message-ID: <349fe48b0901260712p3886960drb4fc55e8a654870a@mail.gmail.com>

On Mon, Jan 26, 2009 at 4:39 PM, Otto <otto@ottodestruct.com> wrote:

> True, but at the same time it could be useful as a early warning
> device. I've seen a plugin along these lines, but I can't find it
> anywhere now. :(
>

I think you mean http://wordpress.org/extend/plugins/exploit-scanner/

-- 
http://scribu.net
From otto at ottodestruct.com  Mon Jan 26 18:18:45 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jan 26 18:18:58 2009
Subject: [wp-hackers] Free themes have backlinks and backdoors inserted in
	code?
In-Reply-To: <349fe48b0901260712p3886960drb4fc55e8a654870a@mail.gmail.com>
References: <a51040f00901260050j3b4f24fl27f7d6cd0667859a@mail.gmail.com>
	<63a3a6ce0901260056o2ce3691hf5caf5933aa695dd@mail.gmail.com>
	<45055a190901260101s694b1315n6713600ff87cf61a@mail.gmail.com>
	<161617690901260639p15cdf75cs69e6fbfd87134c61@mail.gmail.com>
	<349fe48b0901260712p3886960drb4fc55e8a654870a@mail.gmail.com>
Message-ID: <161617690901261018x6826b88fxc8c3faec43917353@mail.gmail.com>

On Mon, Jan 26, 2009 at 9:12 AM, scribu <scribu@gmail.com> wrote:
> On Mon, Jan 26, 2009 at 4:39 PM, Otto <otto@ottodestruct.com> wrote:
>
>> True, but at the same time it could be useful as a early warning
>> device. I've seen a plugin along these lines, but I can't find it
>> anywhere now. :(
>>
>
> I think you mean http://wordpress.org/extend/plugins/exploit-scanner/

No, this was a different one. Donncha's exploit scanner does do this
to some degree, but it's looking specifically for exploits, not for
suspicious code. It's search strings are only known exploits. Also,
it's doing MD5 on all the files in order to find changes later, in
case a file gets altered.

-Otto
From wordpress at santosj.name  Mon Jan 26 21:41:29 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Mon Jan 26 21:41:45 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <161617690901260646r5538030amdfdf20c94e29294c@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>	<45055a190901211521m1e233ffi46e9121a467469b3@mail.gmail.com>	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>	<49785E4F.1010005@santosj.name>	<DE280DD5-1AAE-462D-B35C-9A4B952A1F81@xentek.net>	<497CC111.1080802@santosj.name>	<39fdab560901251922s8685e6em4c6f5984680e3a89@mail.gmail.com>
	<161617690901260646r5538030amdfdf20c94e29294c@mail.gmail.com>
Message-ID: <497E2E09.3030809@santosj.name>

This is *exactly* what I don't want to see WordPress use. The 
implementations that I've seen haven't been optimized that well. It is 
the same sort of setup that CodeIgniter uses (whom coincidently calls 
their model Active Record, are they wrong with the pattern name? Most 
likely) and I despise it with a passion. The problem is that it will 
never be as fast as:

$db->query(SQL_HERE);

Most of the code in CodeIgniter makes use of arrays, checks and 
iteration that inherently adds to the implementation and slows the 
process down.

Furthermore, I know SQL and I know how to protect against being raped. 
Why do I need something that holds my hand? In the off-chance that there 
is something I didn't forsee occurring that leads me to being taken 
advantage of against my will? Doubtful, who is to say there wouldn't be 
a bug in this sort of implementation? Most new APIs have bugs and we'll 
be throwing ourselves on an API that would have be seriously tested both 
for functionality and security.

Jacob Santos

Otto wrote:
> I used the Zend Table stuff for a while, and I liked it to a certain
> extent. It looks like this:
>
> $selectstmt = $table->select()->where('whatever = ?',
> $whatever)->order('something ASC');
> $row = $table->fetchRow($selectstmt);
>
> This would get a row as an object (one predefined by a class for that
> row type), or as a generic row if you didn't define it as something
> special. You could also get multiple rows like so:
> $rows = $table->fetchAll($selectstmt);
>
> This gives you a "RowSet", which was just a fancied up array of Rows.
> It's really quite clever, and the classes allow for specifying the
> dependent tables as well, which could then be automatically retrieved
> based on the parent tables (internally it uses joins to do this).
> Clever.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From regulatethis at gmail.com  Mon Jan 26 22:24:24 2009
From: regulatethis at gmail.com (Daniel Torreblanca)
Date: Mon Jan 26 22:24:39 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <497E2E09.3030809@santosj.name>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
	<49785E4F.1010005@santosj.name>
	<DE280DD5-1AAE-462D-B35C-9A4B952A1F81@xentek.net>
	<497CC111.1080802@santosj.name>
	<39fdab560901251922s8685e6em4c6f5984680e3a89@mail.gmail.com>
	<161617690901260646r5538030amdfdf20c94e29294c@mail.gmail.com>
	<497E2E09.3030809@santosj.name>
Message-ID: <39fdab560901261424p22dda924vc071d23285642b6f@mail.gmail.com>

Jacob,

Although your own code may be perfect 100% of the time, not everyone
else's is. Not only that, but if there were a bug in the
implementation of whatever theoretical API we are talking about, it'd
be a bug that is fixed in one place, which is always better than
having to comb through more code than necessary. This is basic common
sense.

I also happen to know SQL and how to create properly structured and
escaped queries (I'm sure most of the people on this list are in the
same boat), but in most cases I find it much simpler to work with
something abstract rather than what boils down to tedious and
error-prone string concatenating. In rare cases it is better to do
something directly, and for that reason there should always be a
direct query method but its use should be the exception rather than
the rule.

You also seem to be concerned about performance losses from using
something like this (correct me if I'm wrong, sometimes I have trouble
understanding your points) - I'd be incredibly surprised if there were
any noticeable cost involved in this sort of abstraction that wouldn't
be incurred (and possibly surpassed) by doing this work by hand every
time you need to construct a SQL query. Even if such a performance hit
was found after performing some benchmarking, I think it'd be a matter
of weighing the pros and cons - adding a few milliseconds (if that) to
response time in favor of greater security, more easily maintainable
code and consistency might very well be worth it.

Daniel

On Mon, Jan 26, 2009 at 4:41 PM, Jacob Santos <wordpress@santosj.name> wrote:
> This is *exactly* what I don't want to see WordPress use. The
> implementations that I've seen haven't been optimized that well. It is the
> same sort of setup that CodeIgniter uses (whom coincidently calls their
> model Active Record, are they wrong with the pattern name? Most likely) and
> I despise it with a passion. The problem is that it will never be as fast
> as:
>
> $db->query(SQL_HERE);
>
> Most of the code in CodeIgniter makes use of arrays, checks and iteration
> that inherently adds to the implementation and slows the process down.
>
> Furthermore, I know SQL and I know how to protect against being raped. Why
> do I need something that holds my hand? In the off-chance that there is
> something I didn't forsee occurring that leads me to being taken advantage
> of against my will? Doubtful, who is to say there wouldn't be a bug in this
> sort of implementation? Most new APIs have bugs and we'll be throwing
> ourselves on an API that would have be seriously tested both for
> functionality and security.
>
> Jacob Santos
>
> Otto wrote:
>>
>> I used the Zend Table stuff for a while, and I liked it to a certain
>> extent. It looks like this:
>>
>> $selectstmt = $table->select()->where('whatever = ?',
>> $whatever)->order('something ASC');
>> $row = $table->fetchRow($selectstmt);
>>
>> This would get a row as an object (one predefined by a class for that
>> row type), or as a generic row if you didn't define it as something
>> special. You could also get multiple rows like so:
>> $rows = $table->fetchAll($selectstmt);
>>
>> This gives you a "RowSet", which was just a fancied up array of Rows.
>> It's really quite clever, and the classes allow for specifying the
>> dependent tables as well, which could then be automatically retrieved
>> based on the parent tables (internally it uses joins to do this).
>> Clever.
>>
>> -Otto
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From otto at ottodestruct.com  Mon Jan 26 23:44:43 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jan 26 23:44:54 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <497E2E09.3030809@santosj.name>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
	<49785E4F.1010005@santosj.name>
	<DE280DD5-1AAE-462D-B35C-9A4B952A1F81@xentek.net>
	<497CC111.1080802@santosj.name>
	<39fdab560901251922s8685e6em4c6f5984680e3a89@mail.gmail.com>
	<161617690901260646r5538030amdfdf20c94e29294c@mail.gmail.com>
	<497E2E09.3030809@santosj.name>
Message-ID: <161617690901261544y372a108at57aa7a512e9d5a4@mail.gmail.com>

On Mon, Jan 26, 2009 at 3:41 PM, Jacob Santos <wordpress@santosj.name> wrote:
> This is *exactly* what I don't want to see WordPress use.

I'm not exactly advocating it for WordPress, I'm just saying how I saw
and used it.

I liked it in that particular implementation, as it made it extremely
easy for me to manipulate data in ways that I needed to manipulate it.
For example, if I needed to get and mess with, say, a list of posts.
After creating the objects to represent a Post and a Posts, it's easy
to manipulate them., then it's rather simple to do something like
this:

$poststable = new Posts();
$posts = $poststable->fetchAll($poststable->select()->limit(20,0)));
foreach ($posts as $post) {
echo $post->title;
echo $post->content;
}

Saved me a ton of programming time. A bit of up-front development and
that was that. The joined tables were just as simple. By defining the
dependent tables (say, postmeta in this case) and the relevant
matching columns and relationships between them (say, post_id to
post_id, one to many), then getting data from that new table became
this:
$postmeta = $post->findPostMeta();
foreach ($postmeta as $item) {
echo $item->key;
echo $item->value;
}

Very handy. The only downside is that there is a small amount of
overhead at the initial creation of the first object. It has to query
the table to figure out what the column names and types are and such.
But you could pre-calculate that, dump it, and then shove it right
into the code for instant gratification there.

Anyway, not saying it's right for everybody or for every project. But
it has many advantages over raw queries:
1. Development time is drastically reduced, since you don't end up
writing lots of database code over and over again.
2. The framework itself is open source, if there's any bugs, then
update the framework.
3. Platform independence. This one supported a dozen different
database types, not just mySQL.

Lots of valid reasons for it. In terms of sheer processing speed, it
may be slightly slower. Probably is, in fact. But that's a problem
that can be solved with hardware, and hardware is cheap by comparison
to development time.

-Otto
From g30rg3x at gmail.com  Tue Jan 27 00:12:02 2009
From: g30rg3x at gmail.com (g30rg3_x)
Date: Tue Jan 27 00:12:17 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
Message-ID: <d5d5430f0901261612j170229di44c4d6f03bb11caa@mail.gmail.com>

Hi *,

x2 to Jacob Santos...

The original proposal of Florian Thiel (if i understand his point
well) is making "WP more secure" truth and a DB Abstracted layer.
IMHO: If we are just applying the abstraction layer just for "security
reasons" it would only lead us (sooner or later) to fail.

Best Regards
PS: This discussion took a really 360? turn.

2009/1/21 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
> Hello everybody,
>
> My name is Florian and I'm doing research on open source projects and
> security for my diploma thesis. I would like to propose (patch
> included) a very lightweight, evolutionary approach to fix or at least
> mitigate SQL Injection weaknesses, some of which plagued WordPress in
> the past.
>
> Previous attempts to "just make WordPress use data access abstraction"
> (as sometimes proposed on the mailing list) were understandably met
> with a lot of opposition as large structural changes don't come easy
> in an open source project (or any project).
>
> I noticed that there already is basic data access abstraction in the
> code (e.g. $wpdb->insert and $wpdb->update in wp-db.php) and also an
> issue in the tracker that says developers should use these
> abstractions more often. That's why I think you are fundamentally in
> favor of these abstractions and I'd like to make the transition easier
> for everybody.
>
> I produced a patch against WordPress 2.7 which annotates and
> classifies all uses of raw inline SQL. The classification tells you
> how much work it would be to get rid of the inline use of SQL. The
> patch can be found at
> http://www.noroute.de/downloads/research/wordpress-2.7_sqlannotations.diff
>
> >From the 443 places where I found inline SQL, there are 85 places
> where an abstraction already exists and just had to be used (these are
> mostly the cases which were mentioned in the issue
> tracker). Furthermore, there are 172 places where a trivial
> implementation (trivial meaning that a very similar method already
> exists) would help get rid of the use of inline SQL. So by adding
> around 5 simple methods to wp-db.php you would get rid of more than
> 250 problematic uses of inline SQL. And the best part: We can start
> with the low-hanging fruit and gradually move to the harder ones while
> keeping the code working all the time!
>
> The process is really simple: Find a spot you'd like to fix, get rid
> of the use of raw SQL (for annotations containing
> "trivial_implementation", "simple_code" and "algorithmic" you may need
> to write the abstraction methods first, see descriptions at the bottom
> of the posting) and remove the annotation. A simple search
> gives you the number of annotations remaining, so you know how for
> along you are. (There's a tiny script at
> http://www.noroute.de/downloads/research/sqlannotation_stats.sh that
> gives you annotation count for the different classes (run it in the
> root folder of the source code); works on unix only, sorry).
>
> I'd definitely like to get feedback from you, even (or especially) if
> you don't think my approach is worth it. If you have any concerns,
> questions or further suggestions I'll be delighted to help. I'll be in
> the loop. If this works for you I'll do another annotation set for
> HTML escaping against XSS.
>
> You can find a detailed explanation of the classes of inline SQL use
> at the bottom of this posting.
>
> Hope to hear from you,
> Florian
>
> ----
> Detailed description of the SQL annotation classifications:
>
> method_exists:
> This can be easily fixed by looking up the correct abstraction in
> wp-db.php and applying it.
>
> trivial_implementation:
> The SQL statement does not use any "advanced" features and a similar
> abstraction already exists for another SQL clause. You can look
> at the existing abstractions in wp-db.php and create a new one for the
> needed clause. Applies to DELETE, DROP and SELECT, etc.
>
> simple_code:
> After you have all the abstractions for trivial_implementation you can
> go on implementing advanced SQL features like LIMIT, GROUP BY etc.
>
> algorithmic:
> These are the most advanced abstractions. Here you need an algorithm
> that can generate complex clauses. The most prominent clauses here are
> WHERE (including inequality, AND, OR, NOT, IN, parentheses and LIKE),
> SELECT (with AS and functions) and JOIN.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
_________________________
             g30rg3_x
From kparsell-wp at kpdesign.net  Tue Jan 27 02:03:54 2009
From: kparsell-wp at kpdesign.net (Kim Parsell)
Date: Tue Jan 27 02:04:08 2009
Subject: [wp-hackers] Update profile page from external page
In-Reply-To: <349fe48b0901260708p7ae4f21aqc946a36fd9025a8b@mail.gmail.com>
References: <349fe48b0901230617i2e567525yf7d5e817df9160e2@mail.gmail.com>	<349fe48b0901260700x3344e707je28d2926e68431eb@mail.gmail.com>
	<349fe48b0901260708p7ae4f21aqc946a36fd9025a8b@mail.gmail.com>
Message-ID: <497E6B8A.2040108@kpdesign.net>

I've got a tutorial on my site about allowing/limiting user access in 
WordPress. I had a comment left regarding the tutorial, and in the 
comment, they asked about posting an update to a user's profile without 
going to the actual WordPress profile.php page. Link to comment is below:

http://www.kpdesign.net/wordpress/allowing-limiting-user-access-in-wordpress/#comment-182

I'd like to pose this question to the experts on this list, to see if it 
is possible to do what the commenter is asking. Please feel free to 
chime in either here or in the comments section on my blog as to what 
is/isn't possible.

Thanks in advance!

Kim
From mikeschinkel at newclarity.net  Tue Jan 27 02:45:04 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jan 27 02:47:32 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <497E2E09.3030809@santosj.name>
Message-ID: <1012995.261233024312039.JavaMail.DELL-1405$@Dell-1405>

"Jacob Santos" <wordpress@santosj.name> wrote:
> This is *exactly* what I don't want to see WordPress use. 

I concur. In my past I was always often trying to encapsulate things like SQL to "make things easier." These days I realize there is value to maintaining less abstraction especially when the thing that would otherwise be abstracted is well-known and standard such as SQL or HTML.  When I started programming in ASP in 1995 (after a 7+ years of prior dev experience) I tried to encapsulate HTML into an abstracted object. After much wasted effort I realized that, verbose though it may be, HTML was a great language on its own.

What usually happens when there is an abstraction developed is that it is rarely as well-architected as that which it abstracts and is by its very nature used and understood by many orders of magnitude less people and there are few it any tools that understand it.  Ultimately it dies on the vine as someone else writes a new "better" abstraction for the same thing. For example I really dislike the "$wpdb->posts" style of SQL in the WP core (though I do appreciate that it is a necessary evil) because I can't copy and paste it into my MySQL client for testing.

I'm not at all saying abstractions are always a bad thing just that they should be done sparingly, with great forethought and lots of community input.

-Mike Schinkel
http://mikeschinkel.com/
P.S. If you advocates persist in moving in this direction, please do us a favor and at least write an query client that can understand it's syntax and allow a user to query MySQL interactively directly from your code. 
From otto at ottodestruct.com  Tue Jan 27 07:14:08 2009
From: otto at ottodestruct.com (Otto)
Date: Tue Jan 27 07:14:18 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <1012995.261233024312039.JavaMail.DELL-1405$@Dell-1405>
References: <497E2E09.3030809@santosj.name>
	<1012995.261233024312039.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <161617690901262314t15aeb3e0j328f5ee8c69d586d@mail.gmail.com>

On Mon, Jan 26, 2009 at 8:45 PM, Mike Schinkel
<mikeschinkel@newclarity.net> wrote:
> P.S. If you advocates persist in moving in this direction, please do us a favor and at least write an query client that can understand it's syntax and allow a user to query MySQL interactively directly from your code.

That's the beauty of overloading. Remember that Zend DB stuff I was
talking about before? Using that, you can just as easily query with
SQL directly. $db->fetchAll('select whatever') works just as well
there too. The API functionality is meant to add to the base, not take
away from it. Sometimes it's better to build a query dynamically, in
parts. Sometimes, it's not.

-Otto
From mikeschinkel at newclarity.net  Tue Jan 27 07:19:44 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jan 27 07:20:06 2009
Subject: [wp-hackers] Update profile page from external page
In-Reply-To: <12253041.311233040161699.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <32386916.331233040796005.JavaMail.DELL-1405$@Dell-1405>

Whoa, your solution is 99% of exactly what I need for my current project that is due Feb 2nd. Way cool.
I don't know the answer to Shawn's question, but I may later this week.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Kim Parsell" <kparsell-wp@kpdesign.net>
To: wp-hackers@lists.automattic.com
Sent: Monday, January 26, 2009 9:03:54 PM GMT -05:00 US/Canada Eastern
Subject: [wp-hackers] Update profile page from external page

I've got a tutorial on my site about allowing/limiting user access in 
WordPress. I had a comment left regarding the tutorial, and in the 
comment, they asked about posting an update to a user's profile without 
going to the actual WordPress profile.php page. Link to comment is below:

http://www.kpdesign.net/wordpress/allowing-limiting-user-access-in-wordpress/#comment-182

I'd like to pose this question to the experts on this list, to see if it 
is possible to do what the commenter is asking. Please feel free to 
chime in either here or in the comments section on my blog as to what 
is/isn't possible.

Thanks in advance!

Kim
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Tue Jan 27 07:25:40 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jan 27 07:26:03 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <161617690901262314t15aeb3e0j328f5ee8c69d586d@mail.gmail.com>
Message-ID: <12486699.351233041151846.JavaMail.DELL-1405$@Dell-1405>

"Otto" <otto@ottodestruct.com> wrote:
> That's the beauty of overloading. Remember that Zend DB stuff 
> I was talking about before? Using that, you can just as easily 
> query with SQL directly. $db->fetchAll('select whatever') works 
> just as well there too. The API functionality is meant to add 
> to the base, not take away from it. Sometimes it's better to 
> build a query dynamically, in parts. Sometimes, it's not.

I think you understood my last point to be the inverse of what I was asking for. My last point wasn't about it being ok/better/worse better to query with SQL and sometimes without, but that if you are going to move ahead with an abstraction layer written in PHP I was asking that you (collectively) at least do the community a favor and also create a MySQL client that can allow someone to interactively query a MySQL database using your abstraction layered PHP code vs. someone having to unravel it by hand into SQL to test in a MySQL client that only understand MySQL.  With eval() in PHP, it wouldn't be that hard.

-Mike
From regulatethis at gmail.com  Tue Jan 27 07:35:35 2009
From: regulatethis at gmail.com (Daniel Torreblanca)
Date: Tue Jan 27 07:35:44 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <12486699.351233041151846.JavaMail.DELL-1405$@Dell-1405>
References: <161617690901262314t15aeb3e0j328f5ee8c69d586d@mail.gmail.com>
	<12486699.351233041151846.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <39fdab560901262335t3587d82cg9feb8d307cd1eca@mail.gmail.com>

On Tue, Jan 27, 2009 at 2:25 AM, Mike Schinkel
<mikeschinkel@newclarity.net> wrote:
> "Otto" <otto@ottodestruct.com> wrote:
>> That's the beauty of overloading. Remember that Zend DB stuff
>> I was talking about before? Using that, you can just as easily
>> query with SQL directly. $db->fetchAll('select whatever') works
>> just as well there too. The API functionality is meant to add
>> to the base, not take away from it. Sometimes it's better to
>> build a query dynamically, in parts. Sometimes, it's not.
>
> I think you understood my last point to be the inverse of what I was asking for. My last point wasn't about it being ok/better/worse better to query with SQL and sometimes without, but that if you are going to move ahead with an abstraction layer written in PHP I was asking that you (collectively) at least do the community a favor and also create a MySQL client that can allow someone to interactively query a MySQL database using your abstraction layered PHP code vs. someone having to unravel it by hand into SQL to test in a MySQL client that only understand MySQL.  With eval() in PHP, it wouldn't be that hard.
>
> -Mike

Can  you give an example? I'm not quite sure I understand what you mean...
From m at mullenweg.com  Tue Jan 27 07:52:01 2009
From: m at mullenweg.com (Matt)
Date: Tue Jan 27 07:52:19 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <1012995.261233024312039.JavaMail.DELL-1405$@Dell-1405>
References: <1012995.261233024312039.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <497EBD21.5010401@mullenweg.com>

Mike Schinkel wrote:
> I concur. In my past I was always often trying to encapsulate things like SQL to "make things easier." These days I realize there is value to maintaining less abstraction especially when the thing that would otherwise be abstracted is well-known and standard such as SQL or HTML.  When I started programming in ASP in 1995 (after a 7+ years of prior dev experience) I tried to encapsulate HTML into an abstracted object. After much wasted effort I realized that, verbose though it may be, HTML was a great language on its own.

I would strongly agree with this.

This is also protecting us against something that hasn't been a problem 
in a while, I don't want coding WordPress to make me take off my shoes 
when I go through the metal detector.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com
From mikeschinkel at newclarity.net  Tue Jan 27 08:36:26 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jan 27 08:36:45 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <39fdab560901262335t3587d82cg9feb8d307cd1eca@mail.gmail.com>
Message-ID: <29013380.371233045394105.JavaMail.DELL-1405$@Dell-1405>

"Daniel Torreblanca" <regulatethis@gmail.com> wrote:

>> Can  you give an example? I'm not quite sure I understand what you mean...

Sure. Imagine a web page in the admin console that has a big textarea and a submit button; could be implemented as a plugin.  If I want to test a SQL abstraction implemented in some PHP library I'd like to be able to take that code from my text editor and paste it into that text area and have it return back the results. 

Alternately it could return back the SQL code it would have executed and it would be best if it were interactive using AJAX.  I'd say if you are going to create the abstraction you owe the community to also create an interactive tool that understands your abstractions for submitting queries to MySQL thus allowing people to learn your abstraction by doing w/o having to first put into a plugin or theme.

For me I find myself trying to understand what a plugin is doing by looking at it's code, and having something like this would be invaluable. I could write it myself (if only I had the spare time...)

What would be even better would be a desktop client app like HeidiSQL to do that same albeit that's two orders magnitude greater in scope.

-Mike Schinkel
http://mikeschinkel.com/
From flo.thiel+wphackers at googlemail.com  Tue Jan 27 09:57:43 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Tue Jan 27 09:57:56 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <497E2E09.3030809@santosj.name>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<f932c74c0901220220u363c9654h18e3fb2a6025ccf5@mail.gmail.com>
	<45055a190901220232x6ed17b5du9ec47135f19284b6@mail.gmail.com>
	<f932c74c0901220246x1bea655fr615a90907dfc15e6@mail.gmail.com>
	<49785E4F.1010005@santosj.name>
	<DE280DD5-1AAE-462D-B35C-9A4B952A1F81@xentek.net>
	<497CC111.1080802@santosj.name>
	<39fdab560901251922s8685e6em4c6f5984680e3a89@mail.gmail.com>
	<161617690901260646r5538030amdfdf20c94e29294c@mail.gmail.com>
	<497E2E09.3030809@santosj.name>
Message-ID: <f932c74c0901270157n5ad88ed7ya526161cabded2f1@mail.gmail.com>

On Mon, Jan 26, 2009 at 10:41 PM, Jacob Santos <wordpress@santosj.name> wrote:
> This is *exactly* what I don't want to see WordPress use. The
> implementations that I've seen haven't been optimized that well. It is the
> same sort of setup that CodeIgniter uses (whom coincidently calls their
> model Active Record, are they wrong with the pattern name? Most likely) and
> I despise it with a passion. The problem is that it will never be as fast
> as:
>
> $db->query(SQL_HERE);
>
> Most of the code in CodeIgniter makes use of arrays, checks and iteration
> that inherently adds to the implementation and slows the process down.

Since this comes up again and again: Does anyone have benchmarking
results for WordPress and can tell me where most of the time is spent
when generating a page? Performance is not that straightforward, and
it is really hard to predict how some change impacts the execution
speed unless you really measure it. Also, most DB API have their own
prepare() method that precompiles the SQL statement. When you reuse a
statement (with different parameters like WHERE conditions and such)
it actually becomes FASTER.

Florian

> Furthermore, I know SQL and I know how to protect against being raped. Why
> do I need something that holds my hand? In the off-chance that there is
> something I didn't forsee occurring that leads me to being taken advantage
> of against my will? Doubtful, who is to say there wouldn't be a bug in this
> sort of implementation? Most new APIs have bugs and we'll be throwing
> ourselves on an API that would have be seriously tested both for
> functionality and security.
>
> Jacob Santos
>
> Otto wrote:
>>
>> I used the Zend Table stuff for a while, and I liked it to a certain
>> extent. It looks like this:
>>
>> $selectstmt = $table->select()->where('whatever = ?',
>> $whatever)->order('something ASC');
>> $row = $table->fetchRow($selectstmt);
>>
>> This would get a row as an object (one predefined by a class for that
>> row type), or as a generic row if you didn't define it as something
>> special. You could also get multiple rows like so:
>> $rows = $table->fetchAll($selectstmt);
>>
>> This gives you a "RowSet", which was just a fancied up array of Rows.
>> It's really quite clever, and the classes allow for specifying the
>> dependent tables as well, which could then be automatically retrieved
>> based on the parent tables (internally it uses joins to do this).
>> Clever.
>>
>> -Otto
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From flo.thiel+wphackers at googlemail.com  Tue Jan 27 10:06:30 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Tue Jan 27 10:06:49 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <d5d5430f0901261612j170229di44c4d6f03bb11caa@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<d5d5430f0901261612j170229di44c4d6f03bb11caa@mail.gmail.com>
Message-ID: <f932c74c0901270206y7bbf96f3n451d3faa967ba4cf@mail.gmail.com>

On Tue, Jan 27, 2009 at 1:12 AM, g30rg3_x <g30rg3x@gmail.com> wrote:
> Hi *,
>
> x2 to Jacob Santos...
>
> The original proposal of Florian Thiel (if i understand his point
> well) is making "WP more secure" truth and a DB Abstracted layer.
> IMHO: If we are just applying the abstraction layer just for "security
> reasons" it would only lead us (sooner or later) to fail.

You're right. My motivation is to make WP more robust against
filtering omissions. Can you elaborate on why you think WP would fail
if it did something like that "just" for security reasons? I think WP
users really care about security so unless it has adverse effects on
other parts of the system (or does not improve security at all),
where's the failure?

> Best Regards
> PS: This discussion took a really 360? turn.
>
> 2009/1/21 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
>> Hello everybody,
>>
>> My name is Florian and I'm doing research on open source projects and
>> security for my diploma thesis. I would like to propose (patch
>> included) a very lightweight, evolutionary approach to fix or at least
>> mitigate SQL Injection weaknesses, some of which plagued WordPress in
>> the past.
>>
>> Previous attempts to "just make WordPress use data access abstraction"
>> (as sometimes proposed on the mailing list) were understandably met
>> with a lot of opposition as large structural changes don't come easy
>> in an open source project (or any project).
>>
>> I noticed that there already is basic data access abstraction in the
>> code (e.g. $wpdb->insert and $wpdb->update in wp-db.php) and also an
>> issue in the tracker that says developers should use these
>> abstractions more often. That's why I think you are fundamentally in
>> favor of these abstractions and I'd like to make the transition easier
>> for everybody.
>>
>> I produced a patch against WordPress 2.7 which annotates and
>> classifies all uses of raw inline SQL. The classification tells you
>> how much work it would be to get rid of the inline use of SQL. The
>> patch can be found at
>> http://www.noroute.de/downloads/research/wordpress-2.7_sqlannotations.diff
>>
>> >From the 443 places where I found inline SQL, there are 85 places
>> where an abstraction already exists and just had to be used (these are
>> mostly the cases which were mentioned in the issue
>> tracker). Furthermore, there are 172 places where a trivial
>> implementation (trivial meaning that a very similar method already
>> exists) would help get rid of the use of inline SQL. So by adding
>> around 5 simple methods to wp-db.php you would get rid of more than
>> 250 problematic uses of inline SQL. And the best part: We can start
>> with the low-hanging fruit and gradually move to the harder ones while
>> keeping the code working all the time!
>>
>> The process is really simple: Find a spot you'd like to fix, get rid
>> of the use of raw SQL (for annotations containing
>> "trivial_implementation", "simple_code" and "algorithmic" you may need
>> to write the abstraction methods first, see descriptions at the bottom
>> of the posting) and remove the annotation. A simple search
>> gives you the number of annotations remaining, so you know how for
>> along you are. (There's a tiny script at
>> http://www.noroute.de/downloads/research/sqlannotation_stats.sh that
>> gives you annotation count for the different classes (run it in the
>> root folder of the source code); works on unix only, sorry).
>>
>> I'd definitely like to get feedback from you, even (or especially) if
>> you don't think my approach is worth it. If you have any concerns,
>> questions or further suggestions I'll be delighted to help. I'll be in
>> the loop. If this works for you I'll do another annotation set for
>> HTML escaping against XSS.
>>
>> You can find a detailed explanation of the classes of inline SQL use
>> at the bottom of this posting.
>>
>> Hope to hear from you,
>> Florian
>>
>> ----
>> Detailed description of the SQL annotation classifications:
>>
>> method_exists:
>> This can be easily fixed by looking up the correct abstraction in
>> wp-db.php and applying it.
>>
>> trivial_implementation:
>> The SQL statement does not use any "advanced" features and a similar
>> abstraction already exists for another SQL clause. You can look
>> at the existing abstractions in wp-db.php and create a new one for the
>> needed clause. Applies to DELETE, DROP and SELECT, etc.
>>
>> simple_code:
>> After you have all the abstractions for trivial_implementation you can
>> go on implementing advanced SQL features like LIMIT, GROUP BY etc.
>>
>> algorithmic:
>> These are the most advanced abstractions. Here you need an algorithm
>> that can generate complex clauses. The most prominent clauses here are
>> WHERE (including inequality, AND, OR, NOT, IN, parentheses and LIKE),
>> SELECT (with AS and functions) and JOIN.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> _________________________
>             g30rg3_x
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From flo.thiel+wphackers at googlemail.com  Tue Jan 27 10:44:07 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Tue Jan 27 10:44:20 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <161617690901262314t15aeb3e0j328f5ee8c69d586d@mail.gmail.com>
References: <497E2E09.3030809@santosj.name>
	<1012995.261233024312039.JavaMail.DELL-1405$@Dell-1405>
	<161617690901262314t15aeb3e0j328f5ee8c69d586d@mail.gmail.com>
Message-ID: <f932c74c0901270244o2ab089c7ke42e96e4905d7847@mail.gmail.com>

On Tue, Jan 27, 2009 at 8:14 AM, Otto <otto@ottodestruct.com> wrote:
> On Mon, Jan 26, 2009 at 8:45 PM, Mike Schinkel
> <mikeschinkel@newclarity.net> wrote:
>> P.S. If you advocates persist in moving in this direction, please do us a favor and at least write an query client that can understand it's syntax and allow a user to query MySQL interactively directly from your code.
>
> That's the beauty of overloading. Remember that Zend DB stuff I was
> talking about before? Using that, you can just as easily query with
> SQL directly. $db->fetchAll('select whatever') works just as well
> there too. The API functionality is meant to add to the base, not take
> away from it. Sometimes it's better to build a query dynamically, in
> parts. Sometimes, it's not.

I think Zend or CakePHP are a bit out of reach for WordPress right now
because it would need some fundamental changes to the code. Zend and
CakePHP heavily use objects and a data model, which is not explicit in
WordPress.

I think there are two ways to go about it which don't straitjacket the
developers and provide a reasonable set of advantages:

1) just package the raw SQL queries in function calls like this:

$wp_db->select($columns,$conditions)
e.g.
$wp_db->select(array('column1','column2'),array('id' => $someid))

This is already being used for insert and update. Moving all the
INSERTs, UPDATEs and the simple cases of SELECT, DELETE etc. to the
abstraction layer already rids us of 200 uses of raw SQL. And it's
really not much work. (these are the 'method_exists' and
'trivial_implementation' cases). For the rest, we could see where we
would go from there. If it works out well for the simple cases, we
might also consider the ones that actually need some code to be
written...

Matt, Jacob is this something you would approve?

I'll send proof-of-concept patches for this types later today...

2) Create "intentional" abstractions (This is an idea that goes much
further and moves SQL out of the picture completely; I see that there
are people that won't like this approach; it's just an idea).

The basic point of these abstractions is that the caller just says
what he wants and does not really care how the callee gets the job
done.

$wp_db->getPosts()
$wp_db->getCommentsForPost($id)
$wp_db->getPostsByTag($tag)

The problem with this approach is that there could be too many
functions needed because you would need one for every particular type
of query. You could unify some query types using keyword arguments
(like adding 'limit' => 10) but that could hurt readability.

Florian
From lilla.molnet at gmail.com  Tue Jan 27 15:53:17 2009
From: lilla.molnet at gmail.com (Jon Mihkkal Inga)
Date: Tue Jan 27 15:53:28 2009
Subject: [wp-hackers] query_posts behaviour
Message-ID: <6225fcee0901270753l6e07d5f2i46c481640540a2d0@mail.gmail.com>

Hello! I'm new here so please be gentle :)
I've noticed something about the the query_posts function. It doesn't do
anything if I set 'post_type' to 'attachment'. I would expect it to setup
all attachments so that they are available in the loop. Is this the intended
behaviour?
There are plenty of reasons this is desireable. For one I am building a
section to display images uploaded to a photoblogg, and being able to use
the loop and other template tags as well as the entire paginating system
would save a lot of code and make for easy tweaking.

I haven't been able to figure out exactly how to fix this, though my guess
is that setting post_type='attachment' will cause is_attachment() or
is_single() to return true and that relevant query variables are then
filtered out at some point.
Ticket #8872 http://trac.wordpress.org/ticket/8872
seem somewhat related but doesn't fix the 'attachment' case. All 'any' post
type does is include pages to the query, as I understand.

Any pointers would be greatly appreciated. Thank you for your time :)

/Jomik
From if.website at gmail.com  Tue Jan 27 15:58:13 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue Jan 27 15:58:21 2009
Subject: [wp-hackers] query_posts behaviour
In-Reply-To: <6225fcee0901270753l6e07d5f2i46c481640540a2d0@mail.gmail.com>
References: <6225fcee0901270753l6e07d5f2i46c481640540a2d0@mail.gmail.com>
Message-ID: <674b4a3b0901270758p6c158afi172a1955803b1698@mail.gmail.com>

On Tue, Jan 27, 2009 at 9:53 AM, Jon Mihkkal Inga
<lilla.molnet@gmail.com> wrote:
> I've noticed something about the the query_posts function. It doesn't do
> anything if I set 'post_type' to 'attachment'. I would expect it to setup
> all attachments so that they are available in the loop. Is this the intended
> behaviour?

You need to also specify "post_status" as "inherit".  That's because
by default "post_status" is "publish," which does not apply to
attachments.
From lilla.molnet at gmail.com  Tue Jan 27 16:05:41 2009
From: lilla.molnet at gmail.com (Jon Mihkkal Inga)
Date: Tue Jan 27 16:05:56 2009
Subject: [wp-hackers] query_posts behaviour
In-Reply-To: <674b4a3b0901270758p6c158afi172a1955803b1698@mail.gmail.com>
References: <6225fcee0901270753l6e07d5f2i46c481640540a2d0@mail.gmail.com>
	<674b4a3b0901270758p6c158afi172a1955803b1698@mail.gmail.com>
Message-ID: <6225fcee0901270805o6c91b696tb94fa737795a3347@mail.gmail.com>

Dude, that did work.Thank you very much. :)

/j.

2009/1/27 Austin Matzko <if.website@gmail.com>

> On Tue, Jan 27, 2009 at 9:53 AM, Jon Mihkkal Inga
> <lilla.molnet@gmail.com> wrote:
> > I've noticed something about the the query_posts function. It doesn't do
> > anything if I set 'post_type' to 'attachment'. I would expect it to setup
> > all attachments so that they are available in the loop. Is this the
> intended
> > behaviour?
>
> You need to also specify "post_status" as "inherit".  That's because
> by default "post_status" is "publish," which does not apply to
> attachments.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jer-wphackers at simianuprising.com  Tue Jan 27 16:15:51 2009
From: jer-wphackers at simianuprising.com (Jeremy Clarke)
Date: Tue Jan 27 16:16:02 2009
Subject: [wp-hackers] wp_register_script() vs. 
	wp_enqueue_script()?
In-Reply-To: <18802574.2551232727285830.JavaMail.DELL-1405$@Dell-1405>
References: <OF0144C991.75D56FB1-ONC1257547.0057CBA1-C1257547.005854C7@notes.edfgdf.fr>
	<18802574.2551232727285830.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <e1202cb10901270815s6dce1e1drf93fb158c6d04b3f@mail.gmail.com>

It would indeed be nice to have one comprehensive list of things you
should do when writing a plugin. That coding standards page is more
about the formatting you should use when creating patches to core,
rather than any actual API stuff you should be using for plugins.

This new page could take the format of basically a list of APIs that
people should be using to accomplish various tasks along with links to
api description pages (like Settings API or Widgets API).  Then it
would be a good way for experienced coders to go through and make sure
they're not missing any big sections of how WP makes their lives
easier and forward-compatible at the same time.

I think the problem you'll find is the lack of overview pages for many
of the APIs (i wrote ones for the Settings API and Dashboard Widgets
API in the last few days but there are many more i'm sure that could
be added to great utility, especially the new ones added since 2.5, of
which there are many and which are generally pretty awesome).

Maybe this conversation belongs on wp-docs or whatever, but I think
its up to us coders to write our own coding pages if we want them.
It's a great way to acquaint yourself intimately with an API!

-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From mikeschinkel at newclarity.net  Tue Jan 27 17:01:45 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jan 27 17:02:24 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901270244o2ab089c7ke42e96e4905d7847@mail.gmail.com>
Message-ID: <27359992.511233075715675.JavaMail.DELL-1405$@Dell-1405>

Florian:

I like #2 because it works better for the primary user base of WordPress users; power users who have a blog vs. developers. (I'm the latter, btw.)

However, if you (collectively) move forward with #1 will you also be creating a query tool that will allow users to query MySQL directly using your abstractions?

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Florian Thiel" <flo.thiel+wphackers@googlemail.com>
To: wp-hackers@lists.automattic.com
Sent: Tuesday, January 27, 2009 5:44:07 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Making WP more secure the evolutionary way

On Tue, Jan 27, 2009 at 8:14 AM, Otto <otto@ottodestruct.com> wrote:
> On Mon, Jan 26, 2009 at 8:45 PM, Mike Schinkel
> <mikeschinkel@newclarity.net> wrote:
>> P.S. If you advocates persist in moving in this direction, please do us a favor and at least write an query client that can understand it's syntax and allow a user to query MySQL interactively directly from your code.
>
> That's the beauty of overloading. Remember that Zend DB stuff I was
> talking about before? Using that, you can just as easily query with
> SQL directly. $db->fetchAll('select whatever') works just as well
> there too. The API functionality is meant to add to the base, not take
> away from it. Sometimes it's better to build a query dynamically, in
> parts. Sometimes, it's not.

I think Zend or CakePHP are a bit out of reach for WordPress right now
because it would need some fundamental changes to the code. Zend and
CakePHP heavily use objects and a data model, which is not explicit in
WordPress.

I think there are two ways to go about it which don't straitjacket the
developers and provide a reasonable set of advantages:

1) just package the raw SQL queries in function calls like this:

$wp_db->select($columns,$conditions)
e.g.
$wp_db->select(array('column1','column2'),array('id' => $someid))

This is already being used for insert and update. Moving all the
INSERTs, UPDATEs and the simple cases of SELECT, DELETE etc. to the
abstraction layer already rids us of 200 uses of raw SQL. And it's
really not much work. (these are the 'method_exists' and
'trivial_implementation' cases). For the rest, we could see where we
would go from there. If it works out well for the simple cases, we
might also consider the ones that actually need some code to be
written...

Matt, Jacob is this something you would approve?

I'll send proof-of-concept patches for this types later today...

2) Create "intentional" abstractions (This is an idea that goes much
further and moves SQL out of the picture completely; I see that there
are people that won't like this approach; it's just an idea).

The basic point of these abstractions is that the caller just says
what he wants and does not really care how the callee gets the job
done.

$wp_db->getPosts()
$wp_db->getCommentsForPost($id)
$wp_db->getPostsByTag($tag)

The problem with this approach is that there could be too many
functions needed because you would need one for every particular type
of query. You could unify some query types using keyword arguments
(like adding 'limit' => 10) but that could hurt readability.

Florian
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Tue Jan 27 17:09:55 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jan 27 17:10:17 2009
Subject: [wp-hackers] wp_register_script() vs.
	wp_enqueue_script()?
In-Reply-To: <e1202cb10901270815s6dce1e1drf93fb158c6d04b3f@mail.gmail.com>
Message-ID: <20095910.531233076203755.JavaMail.DELL-1405$@Dell-1405>

EXACTLY!

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Jeremy Clarke" <jer-wphackers@simianuprising.com>
To: wp-hackers@lists.automattic.com
Sent: Tuesday, January 27, 2009 11:15:51 AM GMT -05:00 US/Canada Eastern
Subject: Re: Re : Re: [wp-hackers] wp_register_script() vs.  wp_enqueue_script()?

It would indeed be nice to have one comprehensive list of things you
should do when writing a plugin. That coding standards page is more
about the formatting you should use when creating patches to core,
rather than any actual API stuff you should be using for plugins.

This new page could take the format of basically a list of APIs that
people should be using to accomplish various tasks along with links to
api description pages (like Settings API or Widgets API).  Then it
would be a good way for experienced coders to go through and make sure
they're not missing any big sections of how WP makes their lives
easier and forward-compatible at the same time.

I think the problem you'll find is the lack of overview pages for many
of the APIs (i wrote ones for the Settings API and Dashboard Widgets
API in the last few days but there are many more i'm sure that could
be added to great utility, especially the new ones added since 2.5, of
which there are many and which are generally pretty awesome).

Maybe this conversation belongs on wp-docs or whatever, but I think
its up to us coders to write our own coding pages if we want them.
It's a great way to acquaint yourself intimately with an API!

-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From chris at clwill.com  Tue Jan 27 17:32:07 2009
From: chris at clwill.com (Chris Williams)
Date: Tue Jan 27 17:32:28 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901270244o2ab089c7ke42e96e4905d7847@mail.gmail.com>
Message-ID: <C5A48517.40E6B%chris@clwill.com>

What's the larger objective here?  Coding for some data access language
other than SQL or making WP more secure by using less raw SQL (as the tread
title suggests)?  It seems that in the former case it's an academic
exercise, since SQL is by far the dominant data access language and no one
has demonstrated a need to go elsewhere.  And in the latter, isn't it
protecting against a threat that exists largely in the laboratory?

In either case it seems like a terribly large amount of work (and change,
read: destabilization) mostly based on theory.  And if it makes coding for
WP (core, plugin, theme, whatever) even marginally more complex, it seems to
be moving in the wrong direction.

Just MHO.
Chris


> From: Florian Thiel <flo.thiel+wphackers@googlemail.com>
> Reply-To: <wp-hackers@lists.automattic.com>
> Date: Tue, 27 Jan 2009 11:44:07 +0100
> To: <wp-hackers@lists.automattic.com>
> Subject: Re: [wp-hackers] Making WP more secure the evolutionary way
> 
> On Tue, Jan 27, 2009 at 8:14 AM, Otto <otto@ottodestruct.com> wrote:
>> On Mon, Jan 26, 2009 at 8:45 PM, Mike Schinkel
>> <mikeschinkel@newclarity.net> wrote:
>>> P.S. If you advocates persist in moving in this direction, please do us a
>>> favor and at least write an query client that can understand it's syntax and
>>> allow a user to query MySQL interactively directly from your code.
>> 
>> That's the beauty of overloading. Remember that Zend DB stuff I was
>> talking about before? Using that, you can just as easily query with
>> SQL directly. $db->fetchAll('select whatever') works just as well
>> there too. The API functionality is meant to add to the base, not take
>> away from it. Sometimes it's better to build a query dynamically, in
>> parts. Sometimes, it's not.
> 
> I think Zend or CakePHP are a bit out of reach for WordPress right now
> because it would need some fundamental changes to the code. Zend and
> CakePHP heavily use objects and a data model, which is not explicit in
> WordPress.
> 
> I think there are two ways to go about it which don't straitjacket the
> developers and provide a reasonable set of advantages:
> 
> 1) just package the raw SQL queries in function calls like this:
> 
> $wp_db->select($columns,$conditions)
> e.g.
> $wp_db->select(array('column1','column2'),array('id' => $someid))
> 
> This is already being used for insert and update. Moving all the
> INSERTs, UPDATEs and the simple cases of SELECT, DELETE etc. to the
> abstraction layer already rids us of 200 uses of raw SQL. And it's
> really not much work. (these are the 'method_exists' and
> 'trivial_implementation' cases). For the rest, we could see where we
> would go from there. If it works out well for the simple cases, we
> might also consider the ones that actually need some code to be
> written...
> 
> Matt, Jacob is this something you would approve?
> 
> I'll send proof-of-concept patches for this types later today...
> 
> 2) Create "intentional" abstractions (This is an idea that goes much
> further and moves SQL out of the picture completely; I see that there
> are people that won't like this approach; it's just an idea).
> 
> The basic point of these abstractions is that the caller just says
> what he wants and does not really care how the callee gets the job
> done.
> 
> $wp_db->getPosts()
> $wp_db->getCommentsForPost($id)
> $wp_db->getPostsByTag($tag)
> 
> The problem with this approach is that there could be too many
> functions needed because you would need one for every particular type
> of query. You could unify some query types using keyword arguments
> (like adding 'limit' => 10) but that could hurt readability.
> 
> Florian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at striderweb.com  Tue Jan 27 21:49:22 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue Jan 27 21:49:33 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <C5A48517.40E6B%chris@clwill.com>
References: <C5A48517.40E6B%chris@clwill.com>
Message-ID: <DCA663B4-5256-41E4-BA1D-A32638CD6F12@striderweb.com>

I think Matt Mullenweg put it wonderfully -- don't change the code so  
it makes you take your shoes off before stepping through the the metal  
detector.

That is, don't make things a pain in exchange for a marginal,  
theoretical improvement to security.

Stephen

P.S. -- I'm amused by this thread's proliferation of:

I agree.
>>> <150 lines of quoted text>




On Jan 27, 2009, at 11:32 AM, Chris Williams wrote:

> it seems like a terribly large amount of work (and change,
> read: destabilization) mostly based on theory.  And if it makes  
> coding for
> WP (core, plugin, theme, whatever) even marginally more complex, it  
> seems to
> be moving in the wrong direction.

From lynne.pope at gmail.com  Wed Jan 28 00:18:10 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed Jan 28 00:18:18 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <DCA663B4-5256-41E4-BA1D-A32638CD6F12@striderweb.com>
References: <C5A48517.40E6B%chris@clwill.com>
	<DCA663B4-5256-41E4-BA1D-A32638CD6F12@striderweb.com>
Message-ID: <427667db0901271618i5fe97c58qea4c0ddf47b33a87@mail.gmail.com>

2009/1/28 Stephen Rider <wp-hackers@striderweb.com>

>
> P.S. -- I'm amused by this thread's proliferation of:
>
> I agree.
>
>> <150 lines of quoted text>
>>>
>>>
Hundreds of people read these threads and not all of them follow the emails.
Reading the archive is a nightmare when people quote more than the bare
minimum for keeping things in context. It's bad enough with just following
the discussion in email!

OT - but something I think we should all consider on this list.

Lynne
From wordpress at santosj.name  Wed Jan 28 01:27:29 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Wed Jan 28 01:27:46 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901270244o2ab089c7ke42e96e4905d7847@mail.gmail.com>
References: <497E2E09.3030809@santosj.name>	<1012995.261233024312039.JavaMail.DELL-1405$@Dell-1405>	<161617690901262314t15aeb3e0j328f5ee8c69d586d@mail.gmail.com>
	<f932c74c0901270244o2ab089c7ke42e96e4905d7847@mail.gmail.com>
Message-ID: <497FB481.5030203@santosj.name>

Most of the time in WordPress is not spent in the DB layer, which is the 
way it should be (source: past cachegrind benchmarks for WP 2.5 / WP 
2.6[1]). My predictions are based on the fact that when you do anything 
like looping with code branches, it will be slower to build the string 
to pass to the DB query, than just passing the SQL string to the the DB 
query. If you want benchmarks, then I'll have to say we'll have to wait 
until your suggestion has an implementation to test before and after.

The problem with saying that this is for 'security' is that security is 
already being handled in the API, if there is a place that is missing 
input or output validation / sanitization, then create a ticket, so it 
can be fixed.

The problem with caching techniques is that while WordPress utilizes 
caching for the results, the results are, in most cases, not saved 
unless there is a plugin installed that saves the cached results to 
memcache, file or another persistent memory caching. Therefore, I mean, 
if you did use it, it really wouldn't make that much of a difference. 
Faster is a relative term, because in some systems the file system is 
actually slower than the database and saving to a file does not benefit 
you any.

The comparisons of Zend, CodeIgniter, etc are valid, because they exist 
now. Not that WordPress can use them (it would be interesting to use the 
WordPress API in CodeIgniter) or will use them. Just that basically, 
that abstracting something usually does not prove acceptable in the end. 
I will use Smarty as an example. The purpose of Smarty was to move the 
nasty PHP code away from the Designers, but in turn created another 
meta-language that both designers and programmers had to understand. It 
also created a situation where extending Smarty also had a learning 
curve. In trying to solve a small problem with separating business logic 
and presentation, they created a bigger problem of having to learn the 
new system. Not to mention the multitudes of other systems for 
"templating" that popped up around the same time that worked differently 
in many cases.

There is also no guarantee that programmers outside of WordPress core 
will use the select, insert, update, and delete methods. Most novices 
can't wrap their heads around prepare(), sanitize, and validation (curse 
you regex!). So the developers and contributors of WordPress have worked 
hard to use prepare in all places in the core code that it needs to be 
(again, if there is a place that isn't using it and should be, then file 
a ticket). Converting the code over to using these methods will not be a 
quick task and most likely will confuse those looking over the code as 
to what it is trying to do.

When you have a language such as SQL, err, MySQL SQL at least, it has a 
standard that (MySQL) programmers understand. When you create an method, 
or set of methods to abstract it, then you create a situation where the 
person who understands SQL now has to learn your system for how you 
abstract SQL. Trust me, it took me several days to fully grasp WTF was 
going on in CodeIgniter (You have the WTF where the method where_or() 
actually has to come after the where(), so basically it prepends 
insteads of appends the 'OR'). I'll rather not have bugs that wouldn't 
exist otherwise be caused from abstracting.

For security, you have to put care in it and watch over it.

For me, the insert(), update(), and delete() methods is something I 
believe would be nice to have as it will simplify my life. Usually, I 
end building the SQL based on an array anyway, in which case insert or 
update would be nice to have as it would build the SQL for me. Delete 
SQL is often extremely simple with a simple: table, and where clause 
with limits in a lot of cases. If you support those, then you support at 
least 90% of the SQL out there.

I'm just a little wary of abstracting select SQL statements, because 
there is a lot of deviation.

2) Why the hell are you creating a God Object? Do you want to create a 
smite method to bring down the fire on the asses of jackasses?

I liked the:

$objPost = new WP_Posts();

$posts = $objPost->fetchAll('arguments'); // -> $wpdb->query('GET Posts 
based on WP_Query');

foreach( $posts as $post ):  endforeach;


What I hate more than anything is the Blob anti-pattern that many 
object-oriented plugins use (curse you Subscribe2).

The point is that, you want to keep functionality separated from other 
separate functionality. So the posts queries are in their own object 
(right now in their own functions) and comment queries are in their own 
object (right now, in functions). I think most of the functionality in 
WordPress follows the CRUD (anti-)pattern in many ways.

Jacob Santos

1. Disclaimer: The purposes of the benchmarking had nothing to do with 
the DB, just basically areas that had the highest overhead and quite a 
few were done to test the performance of the plugin API. None of the 
instances were specifically targeted for the DB API, if something did 
come up, there is basically nothing that can be optimized, so the API 
was ignored and forgotten.



Florian Thiel wrote:
> On Tue, Jan 27, 2009 at 8:14 AM, Otto <otto@ottodestruct.com> wrote:
>   
>> On Mon, Jan 26, 2009 at 8:45 PM, Mike Schinkel
>> <mikeschinkel@newclarity.net> wrote:
>>     
>>> P.S. If you advocates persist in moving in this direction, please do us a favor and at least write an query client that can understand it's syntax and allow a user to query MySQL interactively directly from your code.
>>>       
>> That's the beauty of overloading. Remember that Zend DB stuff I was
>> talking about before? Using that, you can just as easily query with
>> SQL directly. $db->fetchAll('select whatever') works just as well
>> there too. The API functionality is meant to add to the base, not take
>> away from it. Sometimes it's better to build a query dynamically, in
>> parts. Sometimes, it's not.
>>     
>
> Since this comes up again and again: Does anyone have benchmarking
> results for WordPress and can tell me where most of the time is spent
> when generating a page? Performance is not that straightforward, and
> it is really hard to predict how some change impacts the execution
> speed unless you really measure it. Also, most DB API have their own
> prepare() method that precompiles the SQL statement. When you reuse a
> statement (with different parameters like WHERE conditions and such)
> it actually becomes FASTER.I think Zend or CakePHP are a bit out of reach for WordPress right now
> because it would need some fundamental changes to the code. Zend and
> CakePHP heavily use objects and a data model, which is not explicit in
> WordPress.
>
> I think there are two ways to go about it which don't straitjacket the
> developers and provide a reasonable set of advantages:
>
> 1) just package the raw SQL queries in function calls like this:
>
> $wp_db->select($columns,$conditions)
> e.g.
> $wp_db->select(array('column1','column2'),array('id' => $someid))
>
> This is already being used for insert and update. Moving all the
> INSERTs, UPDATEs and the simple cases of SELECT, DELETE etc. to the
> abstraction layer already rids us of 200 uses of raw SQL. And it's
> really not much work. (these are the 'method_exists' and
> 'trivial_implementation' cases). For the rest, we could see where we
> would go from there. If it works out well for the simple cases, we
> might also consider the ones that actually need some code to be
> written...
>
> Matt, Jacob is this something you would approve?
>
> I'll send proof-of-concept patches for this types later today...
>
> 2) Create "intentional" abstractions (This is an idea that goes much
> further and moves SQL out of the picture completely; I see that there
> are people that won't like this approach; it's just an idea).
>
> The basic point of these abstractions is that the caller just says
> what he wants and does not really care how the callee gets the job
> done.
>
> $wp_db->getPosts()
> $wp_db->getCommentsForPost($id)
> $wp_db->getPostsByTag($tag)
>
> The problem with this approach is that there could be too many
> functions needed because you would need one for every particular type
> of query. You could unify some query types using keyword arguments
> (like adding 'limit' => 10) but that could hurt readability.
>
> Florian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From g30rg3x at gmail.com  Wed Jan 28 05:36:25 2009
From: g30rg3x at gmail.com (g30rg3_x)
Date: Wed Jan 28 05:36:34 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901270206y7bbf96f3n451d3faa967ba4cf@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<d5d5430f0901261612j170229di44c4d6f03bb11caa@mail.gmail.com>
	<f932c74c0901270206y7bbf96f3n451d3faa967ba4cf@mail.gmail.com>
Message-ID: <d5d5430f0901272136q69a17323r9bd156381c26e0a@mail.gmail.com>

2009/1/27 Florian Thiel <flo.thiel+wphackers@googlemail.com>:
> On Tue, Jan 27, 2009 at 1:12 AM, g30rg3_x <g30rg3x@gmail.com> wrote:
>
> You're right. My motivation is to make WP more robust against
> filtering omissions. Can you elaborate on why you think WP would fail
> if it did something like that "just" for security reasons? I think WP
> users really care about security so unless it has adverse effects on
> other parts of the system (or does not improve security at all),
> where's the failure?

Totally unnecessary they already exist so they won't improve security
at all, is like Jacob Santos says...

2009/1/27 Jacob Santos <wordpress@santosj.name>:
> The problem with saying that this is for 'security' is that security is already being handled in the API

Also if you achieve total abstraction of the DB (which surely will
limit the power of the wp plugin developers), developers then would
start avoiding the abstracted layer and make his own direct DB
connections so you are in danger of encourage them to do it by his own
hands rather than truth the API.

Regards.
-- 
/**
CONFIDENTIALITY NOTICE: This message is intended to be viewed only by
the listed recipient(s).
It may contain information that is privileged, confidential and/or
exempt from disclosure under
applicable law. Any dissemination, distribution or copying of this
message is strictly prohibited
without our prior written permission. If you are not an intended
recipient, or if you have
received this communication in error, please notify us immediately by
return e-mail and
permanently remove the original message and any copies from your
computer and all back-up systems.
*/
_________________________
             g30rg3_x
From peter.westwood at ftwr.co.uk  Wed Jan 28 08:59:24 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Jan 28 09:28:03 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <f932c74c0901270206y7bbf96f3n451d3faa967ba4cf@mail.gmail.com>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<d5d5430f0901261612j170229di44c4d6f03bb11caa@mail.gmail.com>
	<f932c74c0901270206y7bbf96f3n451d3faa967ba4cf@mail.gmail.com>
Message-ID: <6A5A7F8F-E9E7-407A-9DE0-C18BFAE23B4E@ftwr.co.uk>


On 27 Jan 2009, at 10:06, Florian Thiel wrote:

> On Tue, Jan 27, 2009 at 1:12 AM, g30rg3_x <g30rg3x@gmail.com> wrote:
>> Hi *,
>>
>> x2 to Jacob Santos...
>>
>> The original proposal of Florian Thiel (if i understand his point
>> well) is making "WP more secure" truth and a DB Abstracted layer.
>> IMHO: If we are just applying the abstraction layer just for  
>> "security
>> reasons" it would only lead us (sooner or later) to fail.
>
> You're right. My motivation is to make WP more robust against
> filtering omissions. Can you elaborate on why you think WP would fail
> if it did something like that "just" for security reasons? I think WP
> users really care about security so unless it has adverse effects on
> other parts of the system (or does not improve security at all),
> where's the failure?


The real issue is that the core WordPress code already has the right  
level of functionality available to write secure queries.

This functionality is already used heavily although there are  
someplaces where queries may still need converting.

The big security issue with WordPress is the lack of security  
awareness in the large plugin developer community.

Plugin developers like to code simply and quickly.

However, much API we give them to access the data in the database  
they will quite often just write there own SQL at the moment.

So adding a different db abstraction layer will not help unless it  
forbids you from using raw SQL.

This then brings us back to the issue that this is adding an extra  
burden to our development process which we don't need.

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From glenn at glennansley.com  Wed Jan 28 15:08:00 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Wed Jan 28 15:08:08 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific plugin?
Message-ID: <3283f0830901280708s627bdfbfy2212e2bf725261ba@mail.gmail.com>

Hi,
If I've made substantial edits to a plugin for a single client's
specific use and I don't want them to ever automatically upgrade it in
the future (or me either for that matter), is that as simple as
changing the plugin's name or are there SVN hooks/externals or
something else that I need to disable?

Thanks,
Glenn Ansley
From mikeschinkel at newclarity.net  Wed Jan 28 15:36:57 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jan 28 15:38:34 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific
	plugin?
In-Reply-To: <3283f0830901280708s627bdfbfy2212e2bf725261ba@mail.gmail.com>
Message-ID: <29980259.401233157025844.JavaMail.DELL-1405$@Dell-1405>

Glenn:

I asked about this same thing last week. Check the list archive for the discussion.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Glenn Ansley" <glenn@glennansley.com>
To: wp-hackers@lists.automattic.com
Sent: Wednesday, January 28, 2009 10:08:00 AM GMT -05:00 US/Canada Eastern
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific plugin?

Hi,
If I've made substantial edits to a plugin for a single client's
specific use and I don't want them to ever automatically upgrade it in
the future (or me either for that matter), is that as simple as
changing the plugin's name or are there SVN hooks/externals or
something else that I need to disable?

Thanks,
Glenn Ansley
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From ozh at planetozh.com  Wed Jan 28 15:45:56 2009
From: ozh at planetozh.com (Ozh)
Date: Wed Jan 28 15:46:52 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific
	plugin?
In-Reply-To: <29980259.401233157025844.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <OF4DCB0897.68C7DA64-ONC125754C.00567398-C125754C.00569A96@notes.edfgdf.fr>

you can just change the plugin folder, plugin filename and plugin name 
within the plugin header (the "/* Plugin Name") stuff so that it won't be 
recognised as a plugin hosted on wp.org

----- Original Message -----
From: "Glenn Ansley" <glenn@glennansley.com>

Hi,
If I've made substantial edits to a plugin for a single client's
specific use and I don't want them to ever automatically upgrade it in
the future (or me either for that matter), is that as simple as
changing the plugin's name or are there SVN hooks/externals or
something else that I need to disable?


From glenn at glennansley.com  Wed Jan 28 16:31:24 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Wed Jan 28 16:31:35 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific 
	plugin?
In-Reply-To: <OF4DCB0897.68C7DA64-ONC125754C.00567398-C125754C.00569A96@notes.edfgdf.fr>
References: <29980259.401233157025844.JavaMail.DELL-1405$@Dell-1405>
	<OF4DCB0897.68C7DA64-ONC125754C.00567398-C125754C.00569A96@notes.edfgdf.fr>
Message-ID: <3283f0830901280831j1bdfd07dt3db6d3fe4014dd7d@mail.gmail.com>

Thanks Ozh.

On Wed, Jan 28, 2009 at 10:45 AM, Ozh <ozh@planetozh.com> wrote:
> you can just change the plugin folder, plugin filename and plugin name
> within the plugin header (the "/* Plugin Name") stuff so that it won't be
> recognised as a plugin hosted on wp.org
>
> ----- Original Message -----
> From: "Glenn Ansley" <glenn@glennansley.com>
>
> Hi,
> If I've made substantial edits to a plugin for a single client's
> specific use and I don't want them to ever automatically upgrade it in
> the future (or me either for that matter), is that as simple as
> changing the plugin's name or are there SVN hooks/externals or
> something else that I need to disable?
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at tekartist.org  Wed Jan 28 22:00:52 2009
From: wordpress at tekartist.org (Stephane Daury)
Date: Wed Jan 28 22:01:09 2009
Subject: [wp-hackers] WPMU 2.7 release packaging booboo!!
Message-ID: <0745209A-E995-44ED-84F8-3C8A79A7C090@tekartist.org>


Sorry, I know it's not the best list for this, but I'm not on the WPMU  
list and it's rather urgent.
I also know donncha lurks around these parts.

Seems the latest.zip for WPMU 2.7 actually bundles 2.6.5!!!

http://mu.wordpress.org/download/

See http://twitter.com/inevernu/status/1156588277

My upgrade worked flawlessly because I use svn switch, but I went  
ahead and downloaded the zip and it seems to be true.
If nothing else, wp-includes/version.php still has $wpmu_version =  
'2.6.5';

Hunoh...

Stephane @ Praized
From mdmartz at sivel.net  Wed Jan 28 22:08:49 2009
From: mdmartz at sivel.net (Matt Martz)
Date: Wed Jan 28 22:09:01 2009
Subject: [wp-hackers] WPMU 2.7 release packaging booboo!!
In-Reply-To: <0745209A-E995-44ED-84F8-3C8A79A7C090@tekartist.org>
References: <0745209A-E995-44ED-84F8-3C8A79A7C090@tekartist.org>
Message-ID: <518fa9630901281408v52ea4840gfd50cfc5fdb39434@mail.gmail.com>

On Wed, Jan 28, 2009 at 5:00 PM, Stephane Daury <wordpress@tekartist.org> wrote:
>
> Sorry, I know it's not the best list for this, but I'm not on the WPMU list
> and it's rather urgent.
> I also know donncha lurks around these parts.
>
> Seems the latest.zip for WPMU 2.7 actually bundles 2.6.5!!!
>
> http://mu.wordpress.org/download/
>
> See http://twitter.com/inevernu/status/1156588277
>
> My upgrade worked flawlessly because I use svn switch, but I went ahead and
> downloaded the zip and it seems to be true.
> If nothing else, wp-includes/version.php still has $wpmu_version = '2.6.5';
>

According to wp-version.php from the download...

$wpmu_version = '2.7';

-- 
Matt Martz
matt@sivel.net
From gigalinux at gmail.com  Wed Jan 28 22:15:52 2009
From: gigalinux at gmail.com (Dennis Morhardt)
Date: Wed Jan 28 22:16:04 2009
Subject: [wp-hackers] WPMU 2.7 release packaging booboo!!
In-Reply-To: <518fa9630901281408v52ea4840gfd50cfc5fdb39434@mail.gmail.com>
References: <0745209A-E995-44ED-84F8-3C8A79A7C090@tekartist.org>
	<518fa9630901281408v52ea4840gfd50cfc5fdb39434@mail.gmail.com>
Message-ID: <5d70d5290901281415r4997c986h3d897f2cebb3dc2a@mail.gmail.com>

It's already fixed.

On Wed, Jan 28, 2009 at 23:08, Matt Martz <mdmartz@sivel.net> wrote:

> On Wed, Jan 28, 2009 at 5:00 PM, Stephane Daury <wordpress@tekartist.org>
> wrote:
> >
> > Sorry, I know it's not the best list for this, but I'm not on the WPMU
> list
> > and it's rather urgent.
> > I also know donncha lurks around these parts.
> >
> > Seems the latest.zip for WPMU 2.7 actually bundles 2.6.5!!!
> >
> > http://mu.wordpress.org/download/
> >
> > See http://twitter.com/inevernu/status/1156588277
> >
> > My upgrade worked flawlessly because I use svn switch, but I went ahead
> and
> > downloaded the zip and it seems to be true.
> > If nothing else, wp-includes/version.php still has $wpmu_version =
> '2.6.5';
> >
>
> According to wp-version.php from the download...
>
> $wpmu_version = '2.7';
>
> --
> Matt Martz
> matt@sivel.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From flo.thiel+wphackers at googlemail.com  Thu Jan 29 00:24:26 2009
From: flo.thiel+wphackers at googlemail.com (Florian Thiel)
Date: Thu Jan 29 00:24:38 2009
Subject: [wp-hackers] Making WP more secure the evolutionary way
In-Reply-To: <6A5A7F8F-E9E7-407A-9DE0-C18BFAE23B4E@ftwr.co.uk>
References: <f932c74c0901210820w52ea70d4m8227ea88293ebda5@mail.gmail.com>
	<d5d5430f0901261612j170229di44c4d6f03bb11caa@mail.gmail.com>
	<f932c74c0901270206y7bbf96f3n451d3faa967ba4cf@mail.gmail.com>
	<6A5A7F8F-E9E7-407A-9DE0-C18BFAE23B4E@ftwr.co.uk>
Message-ID: <f932c74c0901281624u7a4cd8f0k5dc6efd2f40ddebf@mail.gmail.com>

On Wed, Jan 28, 2009 at 9:59 AM, Peter Westwood
<peter.westwood@ftwr.co.uk> wrote:
>
> The real issue is that the core WordPress code already has the right level
> of functionality available to write secure queries.

I'm sorry, my first approach was probably further away form the
current workings of WP (and the development) as I thought. Do we
generally agree that a *simple* abstraction layer is a good idea from
a maintainability point of view? The existing ticket about
INSERT/UPDATE (http://trac.wordpress.org/ticket/6836) suggests as
much...


I created a simplified version of my patch
(http://trac.wordpress.org/attachment/ticket/6836/wordpress_sqlannotations_simple.diff)
which marks all the remaining occurrences of the raw INSERT/UPDATE
queries ("method_exists"). This can be used by developers to find the
incriminating queries. The patch also marks the queries which can be
moved to an abstraction layer with a trivial implementation in
wp-db.php (mostly DELETE or ALTER).

The queries can be moved incrementally so there's no big-bang. The
patch is intended to ease the transition for the developers as it
visualizes the remaining work and makes the queries searchable.

> This functionality is already used heavily although there are someplaces
> where queries may still need converting.

This is what my current patch tries to accelerate. Do you think it is
useful for that?

Since DELETEs and simple SELECTs can be abstracted analogous to the
existing methods for INSERT/UPDATE I created another patch that
implements the abstraction for DELETE and replaces a raw DELETE query.
The patch is for demonstration/feedback purposes. I'd like feedback on
if you think that this is a good next step or if it increases
complexity for developers too much...
(http://trac.wordpress.org/attachment/ticket/6836/wordpress_delete_wpdb.diff).

If all that annotation stuff just sounds like a lot of academic hassle
to deal with, please tell me so. My theory is that these kinds of
annotations (not only for SQL, there are probably many more
applications) visualize spots in the code and can ease large changes
(since changes can be incremental and it is clearly visible when
you're done; also, the annotations act as a reminder and should
encourage developers to fix the issue and get rid of the annotation
quickly).

(On the other hand, if you know another change to the WP code that
could benefit from these annotations, please tell me; I will gladly
think about an annotation style that might help).

Good night for now,
Florian
From shacker at birdhouse.org  Thu Jan 29 02:11:47 2009
From: shacker at birdhouse.org (Scot Hacker)
Date: Thu Jan 29 02:12:00 2009
Subject: [wp-hackers] iframe question
Message-ID: <CABAE41C-59FD-4629-BB1A-9488E9A1DD4C@birdhouse.org>

I've got a lot of users on a lot of blogs going through "Why is my  
google map not working?" problem when using the visual editor. These  
are users for whom disabling the visual editor permanently is not a  
realistic option.

I understand that iframes are considered insecure. And yet if you turn  
off the visual editor, you can insert iframes into posts without  
trouble, because iframes are disabled at the tinymce layer, not at the  
wordpress layer. If you edit tiny_mce_config.php, you can enable  
iframe support in tinymce too, apparently without causing formatting  
problems.

So apparently WP itself doesn't take the insecurity of iframes  
seriously, since it allows an easy workaround. And it seems like  
tinymce doesn't have an inherent formatting problem with iframes,  
since you can work around that too.

So why are iframes disabled by default in tinymce? For now I'm editing  
a lot of tiny_mce_config.php files, but don't like hacking core all  
over the place. Can't this option just be made into a setting on the  
Writing or Misc settings pages?

Thanks,
Scot


From casey.bisson at gmail.com  Thu Jan 29 03:47:01 2009
From: casey.bisson at gmail.com (Casey Bisson)
Date: Thu Jan 29 03:47:18 2009
Subject: [wp-hackers] iframe question
In-Reply-To: <CABAE41C-59FD-4629-BB1A-9488E9A1DD4C@birdhouse.org>
References: <CABAE41C-59FD-4629-BB1A-9488E9A1DD4C@birdhouse.org>
Message-ID: <54DC0116-3368-42E4-933B-0785A77C37AF@gmail.com>


WP takes it more seriously than you suggest. Iframes are filtered by  
kses even when TinyMCE is disabled, but only for those who don't have  
the unfiltered_html capability attached to their role (which means  
admins can add iframes but authors can't, by default).

http://trac.wordpress.org/browser/trunk/wp-includes/kses.php#L44
http://codex.wordpress.org/Roles_and_Capabilities#unfiltered_html

--Casey

http://maisonbisson.com
http://about.scriblio.net


On Jan 28, 2009, at 9:11 PM, Scot Hacker wrote:

> I've got a lot of users on a lot of blogs going through "Why is my  
> google map not working?" problem when using the visual editor. These  
> are users for whom disabling the visual editor permanently is not a  
> realistic option.
>
> I understand that iframes are considered insecure. And yet if you  
> turn off the visual editor, you can insert iframes into posts  
> without trouble, because iframes are disabled at the tinymce layer,  
> not at the wordpress layer. If you edit tiny_mce_config.php, you can  
> enable iframe support in tinymce too, apparently without causing  
> formatting problems.
>
> So apparently WP itself doesn't take the insecurity of iframes  
> seriously, since it allows an easy workaround. And it seems like  
> tinymce doesn't have an inherent formatting problem with iframes,  
> since you can work around that too.
>
> So why are iframes disabled by default in tinymce? For now I'm  
> editing a lot of tiny_mce_config.php files, but don't like hacking  
> core all over the place. Can't this option just be made into a  
> setting on the Writing or Misc settings pages?
>
> Thanks,
> Scot
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at dd32.id.au  Thu Jan 29 04:22:41 2009
From: wordpress at dd32.id.au (DD32)
Date: Thu Jan 29 04:22:52 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific 
	plugin?
In-Reply-To: <3283f0830901280831j1bdfd07dt3db6d3fe4014dd7d@mail.gmail.com>
References: <29980259.401233157025844.JavaMail.DELL-1405$@Dell-1405>
	<OF4DCB0897.68C7DA64-ONC125754C.00567398-C125754C.00569A96@notes.edfgdf.fr>
	<3283f0830901280831j1bdfd07dt3db6d3fe4014dd7d@mail.gmail.com>
Message-ID: <45055a190901282022g3a666d73h1b5f58daa64e80ef@mail.gmail.com>

Heres a writeup i just did on some methods that people might like:
http://dd32.id.au/2009/01/29/disable-automatic-upgrades-for-a-customised-plugin/

In short, It details how to disable the update warning, Disable
automatic upgrade for a plugin, How to add a custom warning on event
that a plugin has an update, And finally, a combination of them..

2009/1/29 Glenn Ansley <glenn@glennansley.com>:
> Thanks Ozh.
>
> On Wed, Jan 28, 2009 at 10:45 AM, Ozh <ozh@planetozh.com> wrote:
>> you can just change the plugin folder, plugin filename and plugin name
>> within the plugin header (the "/* Plugin Name") stuff so that it won't be
>> recognised as a plugin hosted on wp.org
>>
>> ----- Original Message -----
>> From: "Glenn Ansley" <glenn@glennansley.com>
>>
>> Hi,
>> If I've made substantial edits to a plugin for a single client's
>> specific use and I don't want them to ever automatically upgrade it in
>> the future (or me either for that matter), is that as simple as
>> changing the plugin's name or are there SVN hooks/externals or
>> something else that I need to disable?
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From glenn at glennansley.com  Thu Jan 29 04:29:27 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Thu Jan 29 04:29:39 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific 
	plugin?
In-Reply-To: <45055a190901282022g3a666d73h1b5f58daa64e80ef@mail.gmail.com>
References: <29980259.401233157025844.JavaMail.DELL-1405$@Dell-1405>
	<OF4DCB0897.68C7DA64-ONC125754C.00567398-C125754C.00569A96@notes.edfgdf.fr>
	<3283f0830901280831j1bdfd07dt3db6d3fe4014dd7d@mail.gmail.com>
	<45055a190901282022g3a666d73h1b5f58daa64e80ef@mail.gmail.com>
Message-ID: <3283f0830901282029o27fb899dud6031ac6f7a9d3c6@mail.gmail.com>

This is very handy. Thanks a lot!

Glenn Ansley
Web Design | http://glennansley.com
Plugin Dev | http://fullthrottledevelopment.com

On Wed, Jan 28, 2009 at 11:22 PM, DD32 <wordpress@dd32.id.au> wrote:
> Heres a writeup i just did on some methods that people might like:
> http://dd32.id.au/2009/01/29/disable-automatic-upgrades-for-a-customised-plugin/
>
> In short, It details how to disable the update warning, Disable
> automatic upgrade for a plugin, How to add a custom warning on event
> that a plugin has an update, And finally, a combination of them..
>
> 2009/1/29 Glenn Ansley <glenn@glennansley.com>:
>> Thanks Ozh.
>>
>> On Wed, Jan 28, 2009 at 10:45 AM, Ozh <ozh@planetozh.com> wrote:
>>> you can just change the plugin folder, plugin filename and plugin name
>>> within the plugin header (the "/* Plugin Name") stuff so that it won't be
>>> recognised as a plugin hosted on wp.org
>>>
>>> ----- Original Message -----
>>> From: "Glenn Ansley" <glenn@glennansley.com>
>>>
>>> Hi,
>>> If I've made substantial edits to a plugin for a single client's
>>> specific use and I don't want them to ever automatically upgrade it in
>>> the future (or me either for that matter), is that as simple as
>>> changing the plugin's name or are there SVN hooks/externals or
>>> something else that I need to disable?
>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From admin at laptoptips.ca  Thu Jan 29 08:17:07 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Thu Jan 29 08:19:03 2009
Subject: [wp-hackers] iframe question
In-Reply-To: <CABAE41C-59FD-4629-BB1A-9488E9A1DD4C@birdhouse.org>
References: <CABAE41C-59FD-4629-BB1A-9488E9A1DD4C@birdhouse.org>
Message-ID: <49816603.7040605@laptoptips.ca>

Scot Hacker wrote:
> ... For now I'm editing a 
> lot of tiny_mce_config.php files, but don't like hacking core all over 
> the place. Can't this option just be made into a setting on the Writing 
> or Misc settings pages?

It's very easy to add this as an one-line plugin:

add_filter('tiny_mce_before_init', create_function( '$a', 
'$a["extended_valid_elements"] = "iframe[*]"; return $a;') );

Was thinking to make a small plugin that adds a GUI to this, but it's 
only for (very) advanced users, so perhaps is best done in code only.
From jidanni at jidanni.org  Thu Jan 29 14:33:45 2009
From: jidanni at jidanni.org (jidanni@jidanni.org)
Date: Thu Jan 29 14:33:58 2009
Subject: [wp-hackers] permalinks trailing slash good or bad?
Message-ID: <87bptq89me.fsf@jidanni.org>

Gentlemen, looking at the models offered on
/wp-admin/options-permalink.php,
"month and name" is /%year%/%monthnum%/%postname%/ ,
But "numeric" is /archives/%post_id% .
Why does one have a trailing slash and the other not?
Shall I employ a trailing slash on a custom format?
I would rather not: looks like "through my carelessness in filling out
the WordPress custom permalinks entry box, I will cause 1000 users to
have to hit one extra character."
From if.website at gmail.com  Thu Jan 29 14:41:08 2009
From: if.website at gmail.com (Austin Matzko)
Date: Thu Jan 29 14:41:16 2009
Subject: [wp-hackers] permalinks trailing slash good or bad?
In-Reply-To: <87bptq89me.fsf@jidanni.org>
References: <87bptq89me.fsf@jidanni.org>
Message-ID: <674b4a3b0901290641s6a834bc7pbe8121a1a98f7b4f@mail.gmail.com>

On Thu, Jan 29, 2009 at 8:33 AM,  <jidanni@jidanni.org> wrote:
> Gentlemen, looking at the models offered on
> /wp-admin/options-permalink.php,
> "month and name" is /%year%/%monthnum%/%postname%/ ,
> But "numeric" is /archives/%post_id% .
> Why does one have a trailing slash and the other not?

It's meant to illustrate that trailing slashes on permalinks are at
your discretion.
From viper at viper007bond.com  Thu Jan 29 14:41:42 2009
From: viper at viper007bond.com (Viper007Bond)
Date: Thu Jan 29 14:42:10 2009
Subject: [wp-hackers] permalinks trailing slash good or bad?
In-Reply-To: <87bptq89me.fsf@jidanni.org>
References: <87bptq89me.fsf@jidanni.org>
Message-ID: <8f93a7390901290641l5cd49066h322118f63d2c8091@mail.gmail.com>

This isn't really a question for wp-hackers, but I'll answer it anyway: it
literally does not matter.

A trailing slash usually means the URL requested is a folder (rather than a
file), at least in the classic sense, but since the post is neither a folder
nor a file...

As for a user forgetting to type the trailing slash, WordPress will enforce
your preference. If a user forgets the trailing slash, WordPress will add
it. Same goes for "www" as well as if you were to opt to have no trailing
slash (it'd strip it off).

Just pick one and forget about it.

2009/1/29 jidanni <jidanni@jidanni.org>

> Gentlemen, looking at the models offered on
> /wp-admin/options-permalink.php,
> "month and name" is /%year%/%monthnum%/%postname%/ ,
> But "numeric" is /archives/%post_id% .
> Why does one have a trailing slash and the other not?
> Shall I employ a trailing slash on a custom format?
> I would rather not: looks like "through my carelessness in filling out
> the WordPress custom permalinks entry box, I will cause 1000 users to
> have to hit one extra character."
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/ | http://www.finalgear.com/
From lynne.pope at gmail.com  Thu Jan 29 15:09:11 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu Jan 29 15:09:24 2009
Subject: [wp-hackers] permalinks trailing slash good or bad?
In-Reply-To: <87bptq89me.fsf@jidanni.org>
References: <87bptq89me.fsf@jidanni.org>
Message-ID: <427667db0901290709s3b47f7afl9bfb53628ab0ce6a@mail.gmail.com>

2009/1/30 <jidanni@jidanni.org>

>
> Shall I employ a trailing slash on a custom format?
> I would rather not: looks like "through my carelessness in filling out
> the WordPress custom permalinks entry box, I will cause 1000 users to
> have to hit one extra character."


WP allows users to choose their own URL structure and doesn't try to impose
anything on users.

You should read, "Cool URI's dont change"
http://www.w3.org/Provider/Style/URI

The general rule of thumb is this - always use a trailing slash on a URI
that points to a directory, eg. http://example.com/mydirectory/ or
http://example.com/ to cut down server processing time.

While you can use a trailing slash on a file, its not advisable. You would
not, for example, write http://example.com/page.php/ and dropping the file
extension makes no difference to how the URI is written. Files do not have a
trailing slash, only directories do.

Because of the way WP does its URL rewriting its not really a problem no
matter which permalink structure you use - as long as you are consistent
throughout your site. The main reason for avoiding using a trailing slash on
the end of file names (postname etc) is for future-proofing. As it says in
the "Cool URI's dont change" article, your URI's should stay the same no
matter what application you are using for your content. If you wanted to
convert your WP site to, say, a static HTML site, or to a different content
management system you won't want your links to all disappear. Not all apps
can handle a trailing slash on file names (since this is usually reserved
for directories) but all can handle the file extension (eg. .php, .html,
etc) being rewritten so it doesn't display.

Hope this helps.

Lynne
From wp-hackers at striderweb.com  Thu Jan 29 00:47:46 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jan 29 15:12:34 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific
	plugin?
In-Reply-To: <3283f0830901280708s627bdfbfy2212e2bf725261ba@mail.gmail.com>
References: <3283f0830901280708s627bdfbfy2212e2bf725261ba@mail.gmail.com>
Message-ID: <71649FAF-D06E-483D-8967-BE3747F714BF@striderweb.com>

1) I believe you want to change the filename and folder name.

2) Does anyone know what happens if he removed the Version header?   
Would that do it too?

3) A hack-ish alternate is to set a really high version number so it  
will always be higher than whatever's on the server.

4) I'm pretty sure there's also a way you could filter the version  
checking -- maybe just filter 'get_option_update_plugins' to always  
remove your plugin from the array that is returned.

Stephen

-- 
Stephen Rider
http://striderweb.com/

On Jan 28, 2009, at 9:08 AM, Glenn Ansley wrote:

> If I've made substantial edits to a plugin for a single client's
> specific use and I don't want them to ever automatically upgrade it in
> the future (or me either for that matter), is that as simple as
> changing the plugin's name or are there SVN hooks/externals or
> something else that I need to disable?


From bfordham at gmail.com  Thu Jan 29 15:53:46 2009
From: bfordham at gmail.com (Bryan Fordham)
Date: Thu Jan 29 15:53:54 2009
Subject: [wp-hackers] Dynamic walkers?
Message-ID: <5e3f62880901290753m6ff54b49q1f65e25702923791@mail.gmail.com>

So last night I wrote a simple plugin for a friend to modify how WP
displays pages. What I ended up doing was subclassing Walker_Page and
modifying walk().

I wanted him to still be able to use all the options from
wp_list_pages, but to do that I had to duplicate that method, instead
of calling walk_page_tree it called a function just like it, only one
that used my Walker class.

Hope that makes sense.

Anyway, my question is: would it be worthwhile to patch wp_get_pages
to accept a custom Walker class? That would have kept me from
duplicating code, and help avoid all the problems that entails.

I'm not much of a WP hacker, so this may be a bad idea, or totally
unnecessary, but if it's useful I can submit a patch.

Thanks
--B
From yahgrp at poplarware.com  Thu Jan 29 16:08:38 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Thu Jan 29 16:06:28 2009
Subject: [wp-hackers] iframe question
In-Reply-To: <CABAE41C-59FD-4629-BB1A-9488E9A1DD4C@birdhouse.org>
References: <CABAE41C-59FD-4629-BB1A-9488E9A1DD4C@birdhouse.org>
Message-ID: <4981D486.1030003@poplarware.com>

Another option is to have your users insert something else, like text 
[[put map here]] into their editor. Your plugin can process that when 
a post is displayed (use filter 'the_content'), substituting the 
desired iframe. You can even get tricky and do something like 
[[map_here(200,300)]] if they need to specify the size of the iframe 
or pass in other arguments.

My Routes plugin (available from my web site) does something similar 
if you need an example.

     --Jennifer

Scot Hacker wrote (considerably snipped/edited):
> I've got a lot of users on a lot of blogs going through a [cannot insert 
> an iframe] problem when using the visual editor.

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com

Drupal/WordPress Sites, Themes, Modules/Plugins
Custom Web Programming, Web Databases
PHP, Perl, MySQL, JavaScript, XML, AJAX

From mpwalsh8 at gmail.com  Thu Jan 29 16:11:19 2009
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Thu Jan 29 16:11:30 2009
Subject: [wp-hackers] iframe question
In-Reply-To: <4981D486.1030003@poplarware.com>
References: <CABAE41C-59FD-4629-BB1A-9488E9A1DD4C@birdhouse.org>
	<4981D486.1030003@poplarware.com>
Message-ID: <bd35beb50901290811m1e6fd70cqbab7c830f409b6ff@mail.gmail.com>

Couldn't you just define a custom short code to do this?  You could
defiine your shortcode to wrap whatever content the user provides in
an IFRAME tag.

Mike

On Thu, Jan 29, 2009 at 11:08 AM, Jennifer Hodgdon
<yahgrp@poplarware.com> wrote:
> Another option is to have your users insert something else, like text [[put
> map here]] into their editor. Your plugin can process that when a post is
> displayed (use filter 'the_content'), substituting the desired iframe. You
> can even get tricky and do something like [[map_here(200,300)]] if they need
> to specify the size of the iframe or pass in other arguments.
>
> My Routes plugin (available from my web site) does something similar if you
> need an example.
>
>    --Jennifer
>
> Scot Hacker wrote (considerably snipped/edited):
>>
>> I've got a lot of users on a lot of blogs going through a [cannot insert
>> an iframe] problem when using the visual editor.
>
> --
> Jennifer Hodgdon * Poplar ProductivityWare
> www.poplarware.com
>
> Drupal/WordPress Sites, Themes, Modules/Plugins
> Custom Web Programming, Web Databases
> PHP, Perl, MySQL, JavaScript, XML, AJAX
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at redfootwebdesign.com  Thu Jan 29 16:16:51 2009
From: wordpress at redfootwebdesign.com (Red Foot Web Design Wordpress)
Date: Thu Jan 29 16:17:04 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific 
	plugin?
In-Reply-To: <45055a190901282022g3a666d73h1b5f58daa64e80ef@mail.gmail.com>
References: <29980259.401233157025844.JavaMail.DELL-1405$@Dell-1405>
	<OF4DCB0897.68C7DA64-ONC125754C.00567398-C125754C.00569A96@notes.edfgdf.fr>
	<3283f0830901280831j1bdfd07dt3db6d3fe4014dd7d@mail.gmail.com>
	<45055a190901282022g3a666d73h1b5f58daa64e80ef@mail.gmail.com>
Message-ID: <160203ed0901290816q5af59fc2u1e4a60f7169226a3@mail.gmail.com>

Great tip! Works like a beaut. Thanks!

Lew

On Wed, Jan 28, 2009 at 11:22 PM, DD32 <wordpress@dd32.id.au> wrote:

> Heres a writeup i just did on some methods that people might like:
>
> http://dd32.id.au/2009/01/29/disable-automatic-upgrades-for-a-customised-plugin/
>
> In short, It details how to disable the update warning, Disable
> automatic upgrade for a plugin, How to add a custom warning on event
> that a plugin has an update, And finally, a combination of them..
>
> 2009/1/29 Glenn Ansley <glenn@glennansley.com>:
> > Thanks Ozh.
> >
> > On Wed, Jan 28, 2009 at 10:45 AM, Ozh <ozh@planetozh.com> wrote:
> >> you can just change the plugin folder, plugin filename and plugin name
> >> within the plugin header (the "/* Plugin Name") stuff so that it won't
> be
> >> recognised as a plugin hosted on wp.org
> >>
> >> ----- Original Message -----
> >> From: "Glenn Ansley" <glenn@glennansley.com>
> >>
> >> Hi,
> >> If I've made substantial edits to a plugin for a single client's
> >> specific use and I don't want them to ever automatically upgrade it in
> >> the future (or me either for that matter), is that as simple as
> >> changing the plugin's name or are there SVN hooks/externals or
> >> something else that I need to disable?
> >>
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mike at zed1.com  Thu Jan 29 16:34:30 2009
From: mike at zed1.com (Mike Little)
Date: Thu Jan 29 16:34:42 2009
Subject: [wp-hackers] Dynamic walkers?
In-Reply-To: <5e3f62880901290753m6ff54b49q1f65e25702923791@mail.gmail.com>
References: <5e3f62880901290753m6ff54b49q1f65e25702923791@mail.gmail.com>
Message-ID: <7235ce780901290834j6e8bd681p65644a36023cb69d@mail.gmail.com>

2009/1/29 Bryan Fordham <bfordham@gmail.com>:
> So last night I wrote a simple plugin for a friend to modify how WP
> displays pages. What I ended up doing was subclassing Walker_Page and
> modifying walk().
>
> I wanted him to still be able to use all the options from
> wp_list_pages, but to do that I had to duplicate that method, instead
> of calling walk_page_tree it called a function just like it, only one
> that used my Walker class.
>
> Hope that makes sense.
>
> Anyway, my question is: would it be worthwhile to patch wp_get_pages
> to accept a custom Walker class? That would have kept me from
> duplicating code, and help avoid all the problems that entails.
>
> I'm not much of a WP hacker, so this may be a bad idea, or totally
> unnecessary, but if it's useful I can submit a patch.
>
> Thanks
> --B


Next version will support it.

http://trac.wordpress.org/changeset/10230


Mike
--
Mike Little
http://zed1.com/
From bfordham at gmail.com  Thu Jan 29 16:37:29 2009
From: bfordham at gmail.com (Bryan Fordham)
Date: Thu Jan 29 16:37:42 2009
Subject: [wp-hackers] Dynamic walkers?
In-Reply-To: <7235ce780901290834j6e8bd681p65644a36023cb69d@mail.gmail.com>
References: <5e3f62880901290753m6ff54b49q1f65e25702923791@mail.gmail.com>
	<7235ce780901290834j6e8bd681p65644a36023cb69d@mail.gmail.com>
Message-ID: <5e3f62880901290837y2647ddbbyd302809abf9141d1@mail.gmail.com>

well, that was easy. Thanks, Mike

--B

On Thu, Jan 29, 2009 at 11:34 AM, Mike Little <mike@zed1.com> wrote:
> 2009/1/29 Bryan Fordham <bfordham@gmail.com>:
>> So last night I wrote a simple plugin for a friend to modify how WP
>> displays pages. What I ended up doing was subclassing Walker_Page and
>> modifying walk().
>>
>> I wanted him to still be able to use all the options from
>> wp_list_pages, but to do that I had to duplicate that method, instead
>> of calling walk_page_tree it called a function just like it, only one
>> that used my Walker class.
>>
>> Hope that makes sense.
>>
>> Anyway, my question is: would it be worthwhile to patch wp_get_pages
>> to accept a custom Walker class? That would have kept me from
>> duplicating code, and help avoid all the problems that entails.
>>
>> I'm not much of a WP hacker, so this may be a bad idea, or totally
>> unnecessary, but if it's useful I can submit a patch.
>>
>> Thanks
>> --B
>
>
> Next version will support it.
>
> http://trac.wordpress.org/changeset/10230
>
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jidanni at jidanni.org  Thu Jan 29 17:43:07 2009
From: jidanni at jidanni.org (jidanni@jidanni.org)
Date: Thu Jan 29 17:43:22 2009
Subject: [wp-hackers] Re: permalinks trailing slash good or bad?
References: <427667db0901290709s3b47f7afl9bfb53628ab0ce6a@mail.gmail.com>
Message-ID: <878wou6mac.fsf@jidanni.org>

OK, based on your responses, I filed
http://trac.wordpress.org/ticket/8993:
options-permalink.php: drop trailing slash
From emmensetech at gmail.com  Thu Jan 29 17:49:20 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Thu Jan 29 17:49:32 2009
Subject: [wp-hackers] MediaRSS plugin in Core
Message-ID: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>

Can I suggest the MediaRSS plugin (http://wordpress.org/extend/mrss) for the
core. Written by the great and pwerful Oz and his mustached (aka, Andy
Skelton). It has become a staple in recommendations to clients and others as
it is important as more and more social networks (aka Facebook and
Friendfeed) utilize the MRSS tags to display content when available. IF a
blogger includes an image, that image will get formatted and included on
other social networks. Same for video, etc. It's almost a requirement for
anyone using rich media and participating in the social web.

I'd be happy to submit the code to incorporate it.
-- 
Aaron Brazell
web:: www.technosailor.com
phone:: 410-608-6620
skype:: technosailor
twitter:: @technosailor
From joost at yoast.com  Thu Jan 29 17:51:20 2009
From: joost at yoast.com (Joost de Valk)
Date: Thu Jan 29 17:51:34 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
Message-ID: <6207BF70-BBE7-4840-81D1-FC1DC199BCCF@yoast.com>

+1

It's a standard install on 95% of my clients blogs.

On Jan 29, 2009, at 6:49 PM, Aaron Brazell wrote:

> Can I suggest the MediaRSS plugin (http://wordpress.org/extend/mrss)  
> for the
> core. Written by the great and pwerful Oz and his mustached (aka, Andy
> Skelton). It has become a staple in recommendations to clients and  
> others as
> it is important as more and more social networks (aka Facebook and
> Friendfeed) utilize the MRSS tags to display content when available.  
> IF a
> blogger includes an image, that image will get formatted and  
> included on
> other social networks. Same for video, etc. It's almost a  
> requirement for
> anyone using rich media and participating in the social web.
>
> I'd be happy to submit the code to incorporate it.
> -- 
> Aaron Brazell
> web:: www.technosailor.com
> phone:: 410-608-6620
> skype:: technosailor
> twitter:: @technosailor
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From skeltoac at gmail.com  Thu Jan 29 17:57:26 2009
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Jan 29 17:57:36 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <e6ec604d0901290954t76d76c03m25feee9da18541e5@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<e6ec604d0901290954t76d76c03m25feee9da18541e5@mail.gmail.com>
Message-ID: <e6ec604d0901290957p605b6017i718328da26d3dda7@mail.gmail.com>

Aaron: Matt Mullenweg told me a couple of months ago that he wanted it in
2.8. Your patch and any comments and improvement from others would be much
appreciated.

Andy

On Jan 29, 2009 11:50 AM, "Aaron Brazell" <emmensetech@gmail.com> wrote:

Can I suggest the MediaRSS plugin (http://wordpress.org/extend/mrss) for the
core. Written by the great and pwerful Oz and his mustached (aka, Andy
Skelton). It has become a staple in recommendations to clients and others as
it is important as more and more social networks (aka Facebook and
Friendfeed) utilize the MRSS tags to display content when available. IF a
blogger includes an image, that image will get formatted and included on
other social networks. Same for video, etc. It's almost a requirement for
anyone using rich media and participating in the social web.

I'd be happy to submit the code to incorporate it.
--
Aaron Brazell
web:: www.technosailor.com
phone:: 410-608-6620
skype:: technosailor
twitter:: @technosailor
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From emmensetech at gmail.com  Thu Jan 29 17:59:17 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Thu Jan 29 17:59:30 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <e6ec604d0901290957p605b6017i718328da26d3dda7@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<e6ec604d0901290954t76d76c03m25feee9da18541e5@mail.gmail.com>
	<e6ec604d0901290957p605b6017i718328da26d3dda7@mail.gmail.com>
Message-ID: <ca7320070901290959l11bb2870m8508efc18f00f9f1@mail.gmail.com>

On Thu, Jan 29, 2009 at 12:57 PM, Andy Skelton <skeltoac@gmail.com> wrote:

> Aaron: Matt Mullenweg told me a couple of months ago that he wanted it in
> 2.8. Your patch and any comments and improvement from others would be much
> appreciated.
>
> Andy
>

I'm on it.

-- 
Aaron Brazell
web:: www.technosailor.com
phone:: 410-608-6620
skype:: technosailor
twitter:: @technosailor
From tonyscott100 at yahoo.co.uk  Thu Jan 29 18:07:57 2009
From: tonyscott100 at yahoo.co.uk (Tony Scott)
Date: Thu Jan 29 18:08:11 2009
Subject: [wp-hackers] MediaRSS plugin in Core
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
Message-ID: <943689.39344.qm@web25901.mail.ukl.yahoo.com>

Aaron

The link is giving a 404...

Tony


----
Tony Scott
http://tonyscott.org.uk
http://twitter.com/tonys
http://twestival.com
http://uk.wordcamp.org



----- Original Message ----
> From: Aaron Brazell <emmensetech@gmail.com>
> To: wp-hackers@lists.automattic.com
> Sent: Thursday, 29 January, 2009 17:49:20
> Subject: [wp-hackers] MediaRSS plugin in Core
> 
> Can I suggest the MediaRSS plugin (http://wordpress.org/extend/mrss) for the
> core. Written by the great and pwerful Oz and his mustached (aka, Andy
> Skelton). It has become a staple in recommendations to clients and others as
> it is important as more and more social networks (aka Facebook and
> Friendfeed) utilize the MRSS tags to display content when available. IF a
> blogger includes an image, that image will get formatted and included on
> other social networks. Same for video, etc. It's almost a requirement for
> anyone using rich media and participating in the social web.
> 
> I'd be happy to submit the code to incorporate it.
> -- 
> Aaron Brazell
> web:: www.technosailor.com
> phone:: 410-608-6620
> skype:: technosailor
> twitter:: @technosailor


      
From joost at yoast.com  Thu Jan 29 18:09:50 2009
From: joost at yoast.com (Joost de Valk)
Date: Thu Jan 29 18:10:07 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <943689.39344.qm@web25901.mail.ukl.yahoo.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
Message-ID: <80BEFAC4-DB1C-4E4C-BB24-19EF74CF3679@yoast.com>

http://wordpress.org/extend/plugins/mrss/

On Jan 29, 2009, at 7:07 PM, Tony Scott wrote:

> Aaron
>
> The link is giving a 404...
>
> Tony
>
>
> ----
> Tony Scott
> http://tonyscott.org.uk
> http://twitter.com/tonys
> http://twestival.com
> http://uk.wordcamp.org
>
>
>
> ----- Original Message ----
>> From: Aaron Brazell <emmensetech@gmail.com>
>> To: wp-hackers@lists.automattic.com
>> Sent: Thursday, 29 January, 2009 17:49:20
>> Subject: [wp-hackers] MediaRSS plugin in Core
>>
>> Can I suggest the MediaRSS plugin (http://wordpress.org/extend/ 
>> mrss) for the
>> core. Written by the great and pwerful Oz and his mustached (aka,  
>> Andy
>> Skelton). It has become a staple in recommendations to clients and  
>> others as
>> it is important as more and more social networks (aka Facebook and
>> Friendfeed) utilize the MRSS tags to display content when  
>> available. IF a
>> blogger includes an image, that image will get formatted and  
>> included on
>> other social networks. Same for video, etc. It's almost a  
>> requirement for
>> anyone using rich media and participating in the social web.
>>
>> I'd be happy to submit the code to incorporate it.
>> -- 
>> Aaron Brazell
>> web:: www.technosailor.com
>> phone:: 410-608-6620
>> skype:: technosailor
>> twitter:: @technosailor
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From emmensetech at gmail.com  Thu Jan 29 18:10:04 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Thu Jan 29 18:10:17 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <943689.39344.qm@web25901.mail.ukl.yahoo.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
Message-ID: <ca7320070901291010j1fadbc4dhfa37ac157a3c1a27@mail.gmail.com>

On Thu, Jan 29, 2009 at 1:07 PM, Tony Scott <tonyscott100@yahoo.co.uk>wrote:

> Aaron
>
> The link is giving a 404...
>
> Tony
>
>
http://wordpress.org/extend/plugins/mrss

Sorry
-- 
Aaron Brazell
web:: www.technosailor.com
phone:: 410-608-6620
skype:: technosailor
twitter:: @technosailor
From joelfisher at gmail.com  Thu Jan 29 18:10:43 2009
From: joelfisher at gmail.com (Joel Fisher)
Date: Thu Jan 29 18:11:46 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <943689.39344.qm@web25901.mail.ukl.yahoo.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
Message-ID: <d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>

It was meant to be:
http://wordpress.org/extend/plugins/mrss/

What are other "must-install" plugins?

joel.fisher
http://www.linkedin.com/in/jfisher
www.twitter.com/joelmoney




On Thu, Jan 29, 2009 at 1:07 PM, Tony Scott <tonyscott100@yahoo.co.uk> wrote:
> Aaron
>
> The link is giving a 404...
>
> Tony
>
>
> ----
> Tony Scott
> http://tonyscott.org.uk
> http://twitter.com/tonys
> http://twestival.com
> http://uk.wordcamp.org
>
>
>
> ----- Original Message ----
>> From: Aaron Brazell <emmensetech@gmail.com>
>> To: wp-hackers@lists.automattic.com
>> Sent: Thursday, 29 January, 2009 17:49:20
>> Subject: [wp-hackers] MediaRSS plugin in Core
>>
>> Can I suggest the MediaRSS plugin (http://wordpress.org/extend/mrss) for the
>> core. Written by the great and pwerful Oz and his mustached (aka, Andy
>> Skelton). It has become a staple in recommendations to clients and others as
>> it is important as more and more social networks (aka Facebook and
>> Friendfeed) utilize the MRSS tags to display content when available. IF a
>> blogger includes an image, that image will get formatted and included on
>> other social networks. Same for video, etc. It's almost a requirement for
>> anyone using rich media and participating in the social web.
>>
>> I'd be happy to submit the code to incorporate it.
>> --
>> Aaron Brazell
>> web:: www.technosailor.com
>> phone:: 410-608-6620
>> skype:: technosailor
>> twitter:: @technosailor
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From emmensetech at gmail.com  Thu Jan 29 18:15:43 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Thu Jan 29 18:15:54 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
Message-ID: <ca7320070901291015w117c778fk2d1ffb0ce1798ae0@mail.gmail.com>

On Thu, Jan 29, 2009 at 1:10 PM, Joel Fisher <joelfisher@gmail.com> wrote:

> It was meant to be:
> http://wordpress.org/extend/plugins/mrss/
>
> What are other "must-install" plugins?
>
> joel.fisher
> http://www.linkedin.com/in/jfisher
> www.twitter.com/joelmoney
>
>
All in One SEO Pack.... another recommendation to 95% of my clients and
others who ask.
From otto at ottodestruct.com  Thu Jan 29 18:18:30 2009
From: otto at ottodestruct.com (Otto)
Date: Thu Jan 29 18:18:47 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
Message-ID: <161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>

On Thu, Jan 29, 2009 at 12:10 PM, Joel Fisher <joelfisher@gmail.com> wrote:
> It was meant to be:
> http://wordpress.org/extend/plugins/mrss/
>
> What are other "must-install" plugins?

Not to promote or anything, but I always install
http://wordpress.org/extend/plugins/automatic-timezone/ for sites I
setup. Nobody likes dealing with timezones.

-Otto
From paul at codehooligans.com  Thu Jan 29 18:36:45 2009
From: paul at codehooligans.com (Paul)
Date: Thu Jan 29 18:37:00 2009
Subject: [wp-hackers] shortcode for images?
Message-ID: <A21BD7DA-07EC-4843-AF49-AC1CA633F4BE@codehooligans.com>

All,

Just wondering is there are any future core plans to replace the full  
URL of images inserted into Posts/Pages with some new image shortcode?

Historically I've always disagreed with placing the full image URL  
into the post body since this limits the overall blog portability. As  
a full-time developer I usually develop the client WordPress site on  
my local system. This includes importing any legacy blog posts,  
images, documents, etc. When I push this to the client server I have  
to search and replace the local URL the client site URL. Not s big  
issue really I know.

Another example. I'm converting this HRC blog site http://www.hrcbackstory.org/ 
  from TypePad to a self-hosted WordPress instance http://blogstaging.hrcsupport.org 
. The site has over 1460 posts and most post have 2 or more images.  
The dev URL 'blogstaging.hrcsupport.org' used for the staging site  
will need to be updated when they point the live domain 'www.hrcbackstory.org 
' to the self-hosted WordPress site end of next week. At that time  
I'll need to update the database. Again, not a big issue. But would be  
nice if the client could do this themselves. I was thinking there  
could be a cleaner way.

Seems that shortcodes are all the rage now. Most media plugin  
developers are utilizing them quite well. So why is WordPress still  
using the full URL for the image source? I noticed the new image  
caption already uses shortcode [caption... ]. Seems it would not be a  
big task to use a shortcode for the image itself. Just wondering.

Paul Menard
http://www.codehooligans.com

From johnbillion+wp at gmail.com  Thu Jan 29 18:36:22 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu Jan 29 18:39:46 2009
Subject: [wp-hackers] Dynamic walkers?
In-Reply-To: <5e3f62880901290837y2647ddbbyd302809abf9141d1@mail.gmail.com>
References: <5e3f62880901290753m6ff54b49q1f65e25702923791@mail.gmail.com>
	<7235ce780901290834j6e8bd681p65644a36023cb69d@mail.gmail.com>
	<5e3f62880901290837y2647ddbbyd302809abf9141d1@mail.gmail.com>
Message-ID: <1fa535a70901291036o637f81ecjeb83618cf49f778@mail.gmail.com>

Hey Brian,

This is a pet peeve of mine and I've regularly written wrapper
functions for wp_list_pages() and new walker classes. Just out of
curiosity, how does your plugin change how pages are listed?

John.

2009/1/29 Bryan Fordham <bfordham@gmail.com>:
> well, that was easy. Thanks, Mike
>
> --B
>
> On Thu, Jan 29, 2009 at 11:34 AM, Mike Little <mike@zed1.com> wrote:
>> 2009/1/29 Bryan Fordham <bfordham@gmail.com>:
>>> So last night I wrote a simple plugin for a friend to modify how WP
>>> displays pages. What I ended up doing was subclassing Walker_Page and
>>> modifying walk().
>>>
>>> I wanted him to still be able to use all the options from
>>> wp_list_pages, but to do that I had to duplicate that method, instead
>>> of calling walk_page_tree it called a function just like it, only one
>>> that used my Walker class.
>>>
>>> Hope that makes sense.
>>>
>>> Anyway, my question is: would it be worthwhile to patch wp_get_pages
>>> to accept a custom Walker class? That would have kept me from
>>> duplicating code, and help avoid all the problems that entails.
>>>
>>> I'm not much of a WP hacker, so this may be a bad idea, or totally
>>> unnecessary, but if it's useful I can submit a patch.
>>>
>>> Thanks
>>> --B
>>
>>
>> Next version will support it.
>>
>> http://trac.wordpress.org/changeset/10230
>>
>>
>> Mike
>> --
>> Mike Little
>> http://zed1.com/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From scribu at gmail.com  Thu Jan 29 18:41:18 2009
From: scribu at gmail.com (scribu)
Date: Thu Jan 29 18:41:30 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
Message-ID: <349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>

>
> Not to promote or anything, but I always install
> http://wordpress.org/extend/plugins/automatic-timezone/ for sites I
> setup. Nobody likes dealing with timezones.
>
> -Otto
>

Shouldn't have that been included in core since 2.6 or so?

-- 
http://scribu.net
From if.website at gmail.com  Thu Jan 29 18:45:07 2009
From: if.website at gmail.com (Austin Matzko)
Date: Thu Jan 29 18:45:20 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>
Message-ID: <674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>

On Thu, Jan 29, 2009 at 12:41 PM, scribu <scribu@gmail.com> wrote:
> Shouldn't have that been included in core since 2.6 or so?

It requires PHP 5, whereas WordPress lists 4.3 as a minimum requirement.
From aaron at xavisys.com  Thu Jan 29 18:45:25 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Thu Jan 29 18:45:36 2009
Subject: [wp-hackers] Dynamic walkers?
In-Reply-To: <7235ce780901290834j6e8bd681p65644a36023cb69d@mail.gmail.com>
References: <5e3f62880901290753m6ff54b49q1f65e25702923791@mail.gmail.com>
	<7235ce780901290834j6e8bd681p65644a36023cb69d@mail.gmail.com>
Message-ID: <4981F945.1060507@xavisys.com>

Mike Little wrote:
> 2009/1/29 Bryan Fordham <bfordham@gmail.com>:
>   
>> So last night I wrote a simple plugin for a friend to modify how WP
>> displays pages. What I ended up doing was subclassing Walker_Page and
>> modifying walk().
>>
>> I wanted him to still be able to use all the options from
>> wp_list_pages, but to do that I had to duplicate that method, instead
>> of calling walk_page_tree it called a function just like it, only one
>> that used my Walker class.
>>
>> Hope that makes sense.
>>
>> Anyway, my question is: would it be worthwhile to patch wp_get_pages
>> to accept a custom Walker class? That would have kept me from
>> duplicating code, and help avoid all the problems that entails.
>>
>> I'm not much of a WP hacker, so this may be a bad idea, or totally
>> unnecessary, but if it's useful I can submit a patch.
>>
>> Thanks
>> --B
>>     
>
>
> Next version will support it.
>
> http://trac.wordpress.org/changeset/10230
>
>   

The same functionality will be added to the category walkers too: 
http://trac.wordpress.org/changeset/10246

From scribu at gmail.com  Thu Jan 29 18:47:47 2009
From: scribu at gmail.com (scribu)
Date: Thu Jan 29 18:48:01 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <A21BD7DA-07EC-4843-AF49-AC1CA633F4BE@codehooligans.com>
References: <A21BD7DA-07EC-4843-AF49-AC1CA633F4BE@codehooligans.com>
Message-ID: <349fe48b0901291047m7252d81cs9a4e79684b2b39e2@mail.gmail.com>

On Thu, Jan 29, 2009 at 8:36 PM, Paul <paul@codehooligans.com> wrote:

> All,
>
> Just wondering is there are any future core plans to replace the full URL
> of images inserted into Posts/Pages with some new image shortcode?
>
> Historically I've always disagreed with placing the full image URL into the
> post body since this limits the overall blog portability. As a full-time
> developer I usually develop the client WordPress site on my local system.
> This includes importing any legacy blog posts, images, documents, etc. When
> I push this to the client server I have to search and replace the local URL
> the client site URL. Not s big issue really I know.
>
> Another example. I'm converting this HRC blog site
> http://www.hrcbackstory.org/ from TypePad to a self-hosted WordPress
> instance http://blogstaging.hrcsupport.org. The site has over 1460 posts
> and most post have 2 or more images. The dev URL '
> blogstaging.hrcsupport.org' used for the staging site will need to be
> updated when they point the live domain 'www.hrcbackstory.org' to the
> self-hosted WordPress site end of next week. At that time I'll need to
> update the database. Again, not a big issue. But would be nice if the client
> could do this themselves. I was thinking there could be a cleaner way.
>
> Seems that shortcodes are all the rage now. Most media plugin developers
> are utilizing them quite well. So why is WordPress still using the full URL
> for the image source? I noticed the new image caption already uses shortcode
> [caption... ]. Seems it would not be a big task to use a shortcode for the
> image itself. Just wondering.
>
> Paul Menard
> http://www.codehooligans.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

You could use the Search & Replace plugin instead of querying the database
directly.

As for the shortcode, several dissadvantages:
- extra processing for each shortcode
- what happens with images that aren't hosted on the same host?
- both the rich editor and all the export scripts would have to be updated

Advantages? Not so many.


-- 
http://scribu.net
From gaarai at gaarai.com  Thu Jan 29 18:48:08 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Thu Jan 29 18:48:36 2009
Subject: [wp-hackers] Showing custom page types
Message-ID: <4981F9E8.4030706@gaarai.com>

I'm working on a new project that uses WordPress as a framework rather 
than as just a blogging platform. I want to be able to have custom URL 
structures, such as /tool/option, that will end up passing variables to 
a set of code to render the page contents rather than one of the theme 
template files rendering the content.

I have it working, but I feel like there is a better way to do this. I 
want to run what I've done by this list to see if anyone has a better or 
more standard way of doing this.

    /* Part of plugin code pertaining to this discussion */

    add_action( 'init', 'add_rewrite_rules' );
    add_action( 'template_redirect', 'load_custom_page_setup' );

    function load_custom_page_setup() {
        $tool = get_query_var( 'tool' );
       
        if ( ! empty( $tool ) ) {
            add_action( 'render_custom', 'run_tool' );
        }
    }

    function add_rewrite_rules() {
        // This should only be run when the plugin is first initialized
    or when the
        // rules are flushed by some other process.
       
        global $wp, $wp_rewrite;
       
        $wp_rewrite->add_rule( 'lookup/?$', 'index.php?tool=lookup',
    'top' );
        $wp_rewrite->add_rule( 'lookup/([^/]+)/?$',
    'index.php?tool=lookup&option1=$matches[1]', 'top' );
        $wp_rewrite->add_rule( 'lookup/([^/]+)/([^/]+)/?$',
    'index.php?tool=lookup&option1=$matches[1]&option2=$matches[2]',
    'top' );
       
        // Quick hack just to make this work while I make changes
        $wp_rewrite->flush_rules();
       
        $wp->add_query_var( 'tool' );
        $wp->add_query_var( 'option1' );
        $wp->add_query_var( 'option2' );
    }

    function run_tool() {
        $tool = get_query_var( 'tool' );
       
        if ( ! empty( $tool ) ) {
            switch( $tool ) {
                case 'lookup':
                    run_lookup();
                    break;
            }
        }
    }

    if ( ! function_exists( 'is_custom' ) ) {
        function is_custom() {
            $lookup = get_query_var( 'lookup' );
           
            if ( ! empty( $lookup ) )
                return true;
            return false;
        }
    }

    /* End plugin code */


    /* Modification added home.php or index.php file depending on theme
    setup */

    <?php if ( ! function_exists( 'is_custom' ) || ! is_custom() ) : ?>
        /* Standard theme code/markup here */
    <?php else : ?>
        <?php do_action( 'render_custom' ); ?>
    <?php endif; ?>

    /* End theme modification */


Basically, I've found the only way to insert this custom output into a 
theme is by modifying the theme itself since there isn't a specification 
for custom output that fills in a blank template location.

I could create a page template, but that would either require passing 
the variables in a query string or creating a page for each possible 
combination of URL "paths" and manually parsing the URL in the code to 
derive the variables.

Ideally, I'd like there to be a way to keep all this logic and code 
completely within the plugin and not require the theme to be modified. 
As far as I can tell, the only way to make this standard is to add a new 
conditional tag, such as is_custom, and add to the template spec a new 
template file, such as custom.php, that is nothing more than a theme 
file that calls an action in place of content.

Just so you know of a couple of different ways that I tried out, I've 
done the following:

    * Used the template_redirect hook to check for my custom vars. If
      they are set, set the $wp_query->is_robots variable to true, clear
      out the do_robots action hook, and add my own function to the
      do_robots action. This actually works really well with one big
      caveat: there isn't a template. So, this method could work well if
      you don't require any of the theme template.
    * I started to journey down the road of trying to latch into the
      is_single process so that I could take advantage of the relatively
      simple setup that most single.php template files have. This would
      require me to setup my own title, content, etc variables when
      the_post is called. At first, I thought that this was a promising
      road, but it's really a minefield as it would require me to jump
      through hurdles of getting successful queries, faking and then
      replacing many internal variables, and that's just the tip of the
      iceberg.

Please share any thoughts or ideas that you have. If there is a way to 
do this within the current WordPress structure, I'd love to know about it.

-- 
Chris Jean
http://gaarai.com/
http://wp-roadmap.com/

From ncrice at gmail.com  Thu Jan 29 18:49:02 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Thu Jan 29 18:49:19 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <ca7320070901291015w117c778fk2d1ffb0ce1798ae0@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<ca7320070901291015w117c778fk2d1ffb0ce1798ae0@mail.gmail.com>
Message-ID: <862d087f0901291049n500ce736j9136f8ab491d2761@mail.gmail.com>

All in One does the job that theme designers should be doing.  If there's a
vote on including it's functionality in core, it will certainly get a -1
from me.

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Thu, Jan 29, 2009 at 1:15 PM, Aaron Brazell <emmensetech@gmail.com>wrote:

> On Thu, Jan 29, 2009 at 1:10 PM, Joel Fisher <joelfisher@gmail.com> wrote:
>
> > It was meant to be:
> > http://wordpress.org/extend/plugins/mrss/
> >
> > What are other "must-install" plugins?
> >
> > joel.fisher
> > http://www.linkedin.com/in/jfisher
> > www.twitter.com/joelmoney
> >
> >
> All in One SEO Pack.... another recommendation to 95% of my clients and
> others who ask.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From joost at yoast.com  Thu Jan 29 18:52:21 2009
From: joost at yoast.com (Joost de Valk)
Date: Thu Jan 29 18:52:41 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <862d087f0901291049n500ce736j9136f8ab491d2761@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<ca7320070901291015w117c778fk2d1ffb0ce1798ae0@mail.gmail.com>
	<862d087f0901291049n500ce736j9136f8ab491d2761@mail.gmail.com>
Message-ID: <06393337-0FBE-4E3F-B73F-D42DA5DC930C@yoast.com>

I don't think anyone proposed that, and I myself would -1 it too if it  
were, because I use another plugin for what it does (HeadSpace2). On  
the other hand, the ability to write a meta description and a separate  
title could very well be integrated into core.

Best,
Joost


On Jan 29, 2009, at 7:49 PM, Nathan Rice wrote:

> All in One does the job that theme designers should be doing.  If  
> there's a
> vote on including it's functionality in core, it will certainly get  
> a -1
> from me.
>
> Nathan
>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
>
>
> On Thu, Jan 29, 2009 at 1:15 PM, Aaron Brazell  
> <emmensetech@gmail.com>wrote:
>
>> On Thu, Jan 29, 2009 at 1:10 PM, Joel Fisher <joelfisher@gmail.com>  
>> wrote:
>>
>>> It was meant to be:
>>> http://wordpress.org/extend/plugins/mrss/
>>>
>>> What are other "must-install" plugins?
>>>
>>> joel.fisher
>>> http://www.linkedin.com/in/jfisher
>>> www.twitter.com/joelmoney
>>>
>>>
>> All in One SEO Pack.... another recommendation to 95% of my clients  
>> and
>> others who ask.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Thu Jan 29 18:59:50 2009
From: otto at ottodestruct.com (Otto)
Date: Thu Jan 29 19:00:00 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>
	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
Message-ID: <161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>

On Thu, Jan 29, 2009 at 12:45 PM, Austin Matzko <if.website@gmail.com> wrote:
> On Thu, Jan 29, 2009 at 12:41 PM, scribu <scribu@gmail.com> wrote:
>> Shouldn't have that been included in core since 2.6 or so?
>
> It requires PHP 5, whereas WordPress lists 4.3 as a minimum requirement.

Well, that and I still haven't gotten around to writing a patch to do
it. The thinking is to make it detect PHP5 and do it this way when it
can.

But no, it's not in core. Yet. :)

-Otto
From ncrice at gmail.com  Thu Jan 29 19:12:08 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Thu Jan 29 19:12:20 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <06393337-0FBE-4E3F-B73F-D42DA5DC930C@yoast.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<ca7320070901291015w117c778fk2d1ffb0ce1798ae0@mail.gmail.com>
	<862d087f0901291049n500ce736j9136f8ab491d2761@mail.gmail.com>
	<06393337-0FBE-4E3F-B73F-D42DA5DC930C@yoast.com>
Message-ID: <862d087f0901291112y5e7951e6lf1a93d1fead19101@mail.gmail.com>

Joost,
Fair enough.  Although in terms of SEO, one would think that having the
<title> and <h1> match is optimal, no?

And I agree about the custom meta description. Although, again, it's fairly
easy to get your meta description to display your post excerpt without
confusing users with yet another field to fill in when publishing a post.

But like you said, if no one is proposing it, then I certainly won't try to
start and argument :-)

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Thu, Jan 29, 2009 at 1:52 PM, Joost de Valk <joost@yoast.com> wrote:

> I don't think anyone proposed that, and I myself would -1 it too if it
> were, because I use another plugin for what it does (HeadSpace2). On the
> other hand, the ability to write a meta description and a separate title
> could very well be integrated into core.
>
> Best,
> Joost
>
>
>
> On Jan 29, 2009, at 7:49 PM, Nathan Rice wrote:
>
>  All in One does the job that theme designers should be doing.  If there's
>> a
>> vote on including it's functionality in core, it will certainly get a -1
>> from me.
>>
>> Nathan
>>
>> My Website
>> http://www.nathanrice.net/
>>
>> My Twitter
>> http://twitter.com/nathanrice
>>
>>
>> On Thu, Jan 29, 2009 at 1:15 PM, Aaron Brazell <emmensetech@gmail.com
>> >wrote:
>>
>>  On Thu, Jan 29, 2009 at 1:10 PM, Joel Fisher <joelfisher@gmail.com>
>>> wrote:
>>>
>>>  It was meant to be:
>>>> http://wordpress.org/extend/plugins/mrss/
>>>>
>>>> What are other "must-install" plugins?
>>>>
>>>> joel.fisher
>>>> http://www.linkedin.com/in/jfisher
>>>> www.twitter.com/joelmoney
>>>>
>>>>
>>>>  All in One SEO Pack.... another recommendation to 95% of my clients and
>>> others who ask.
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>  _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From joost at yoast.com  Thu Jan 29 19:18:55 2009
From: joost at yoast.com (Joost de Valk)
Date: Thu Jan 29 19:19:14 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <862d087f0901291112y5e7951e6lf1a93d1fead19101@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<ca7320070901291015w117c778fk2d1ffb0ce1798ae0@mail.gmail.com>
	<862d087f0901291049n500ce736j9136f8ab491d2761@mail.gmail.com>
	<06393337-0FBE-4E3F-B73F-D42DA5DC930C@yoast.com>
	<862d087f0901291112y5e7951e6lf1a93d1fead19101@mail.gmail.com>
Message-ID: <086B07FD-45F4-4969-AE9C-FBBEBC787CE4@yoast.com>

On Jan 29, 2009, at 8:12 PM, Nathan Rice wrote:

> Joost,
> Fair enough.  Although in terms of SEO, one would think that having  
> the
> <title> and <h1> match is optimal, no?
>
> And I agree about the custom meta description. Although, again, it's  
> fairly
> easy to get your meta description to display your post excerpt without
> confusing users with yet another field to fill in when publishing a  
> post.
>
> But like you said, if no one is proposing it, then I certainly won't  
> try to
> start and argument :-)
>
> Nathan

One more answer, if you've got more questions or remarks feel free to  
email me off list :)

Matching h1 and title is not at all necessary or even always better  
for SEO purposes, depends on the goal of both. It could very well be  
that the goal of the title of your page is more to entice people to  
click, whereas the goal of the h1 might be, f.i., to contain important  
keywords.

The excerpt is usually too long and doesn't contain what a description  
should contain: a small piece telling ppl why they should be clicking  
this article, so I usually write a custom one.

But then again, that might all be just too much work for 90% of the  
users, so no need to include it in core i guess :)

Best,
Joost


>
>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
>
>
> On Thu, Jan 29, 2009 at 1:52 PM, Joost de Valk <joost@yoast.com>  
> wrote:
>
>> I don't think anyone proposed that, and I myself would -1 it too if  
>> it
>> were, because I use another plugin for what it does (HeadSpace2).  
>> On the
>> other hand, the ability to write a meta description and a separate  
>> title
>> could very well be integrated into core.
>>
>> Best,
>> Joost
>>
>>
>>
>> On Jan 29, 2009, at 7:49 PM, Nathan Rice wrote:
>>
>> All in One does the job that theme designers should be doing.  If  
>> there's
>>> a
>>> vote on including it's functionality in core, it will certainly  
>>> get a -1
>>> from me.
>>>
>>> Nathan
>>>
>>> My Website
>>> http://www.nathanrice.net/
>>>
>>> My Twitter
>>> http://twitter.com/nathanrice
>>>
>>>
>>> On Thu, Jan 29, 2009 at 1:15 PM, Aaron Brazell  
>>> <emmensetech@gmail.com
>>>> wrote:
>>>
>>> On Thu, Jan 29, 2009 at 1:10 PM, Joel Fisher <joelfisher@gmail.com>
>>>> wrote:
>>>>
>>>> It was meant to be:
>>>>> http://wordpress.org/extend/plugins/mrss/
>>>>>
>>>>> What are other "must-install" plugins?
>>>>>
>>>>> joel.fisher
>>>>> http://www.linkedin.com/in/jfisher
>>>>> www.twitter.com/joelmoney
>>>>>
>>>>>
>>>>> All in One SEO Pack.... another recommendation to 95% of my  
>>>>> clients and
>>>> others who ask.
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From paul at codehooligans.com  Thu Jan 29 18:59:00 2009
From: paul at codehooligans.com (Paul)
Date: Thu Jan 29 19:35:21 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <349fe48b0901291047m7252d81cs9a4e79684b2b39e2@mail.gmail.com>
References: <A21BD7DA-07EC-4843-AF49-AC1CA633F4BE@codehooligans.com>
	<349fe48b0901291047m7252d81cs9a4e79684b2b39e2@mail.gmail.com>
Message-ID: <D72197B5-096C-4617-836E-BD39A6B52E80@codehooligans.com>


On Jan 29, 2009, at 12:47 PM, scribu wrote:

>
> You could use the Search & Replace plugin instead of querying the  
> database
> directly.
Rather not use a plugin when I can type the replace SQL command myself  
thanks.

> As for the shortcode, several dissadvantages:
> - extra processing for each shortcode
And there is not already enough processing already for the caption  
shortcode??


> - what happens with images that aren't hosted on the same host?

Well if the image shortcode is used you would have something like

	[image id="attachment_2817"]

The actually URL is URL reference can be stored into the post table as  
the attachment data. That way is you by chance use the same image in 5  
posts you don't have to update the image URL is it ever changes. I'm  
sure WordPress can be made smart enough to tell the difference between  
locally stored image and remote image.



> - both the rich editor and all the export scripts would have to be  
> updated
Oh darn wouldn't want to cause anyone more work. But again the parsing  
is mostly there for the caption processing.


> Advantages? Not so many.
Thanks for your opinion.


Paul
From scribu at gmail.com  Thu Jan 29 20:03:06 2009
From: scribu at gmail.com (scribu)
Date: Thu Jan 29 20:07:35 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <D72197B5-096C-4617-836E-BD39A6B52E80@codehooligans.com>
References: <A21BD7DA-07EC-4843-AF49-AC1CA633F4BE@codehooligans.com>
	<349fe48b0901291047m7252d81cs9a4e79684b2b39e2@mail.gmail.com>
	<D72197B5-096C-4617-836E-BD39A6B52E80@codehooligans.com>
Message-ID: <349fe48b0901291203pa5ae60ao9c4d9e2e096b6281@mail.gmail.com>

On Thu, Jan 29, 2009 at 8:59 PM, Paul <paul@codehooligans.com> wrote:

>
> On Jan 29, 2009, at 12:47 PM, scribu wrote:
>
>
>> You could use the Search & Replace plugin instead of querying the database
>> directly.
>>
> Rather not use a plugin when I can type the replace SQL command myself
> thanks.


I mentioned the plugin because you said you would like the average user to
be able to do it.

 As for the shortcode, several dissadvantages:
> - extra processing for each shortcode
>
And there is not already enough processing already for the caption
> shortcode??


I never used the caption shortcode, so I wouldn't know. None the less, your
argument is not very good: If there is already a lot of processing going on
already, why add more?

 - what happens with images that aren't hosted on the same host?
>

Well if the image shortcode is used you would have something like
>
>        [image id="attachment_2817"]
>
> The actually URL is URL reference can be stored into the post table as the
> attachment data. That way is you by chance use the same image in 5 posts you
> don't have to update the image URL is it ever changes. I'm sure WordPress
> can be made smart enough to tell the difference between locally stored image
> and remote image.


>  - both the rich editor and all the export scripts would have to be updated
>>
> Oh darn wouldn't want to cause anyone more work. But again the parsing is
> mostly there for the caption processing.


It's not about doing work, it's about doing useful work and not bloating the
core. I think this would be a great ideea for a plugin. I even think there
are a few already out there. I have the same opinion about captions, but
there you go.

-- 
http://scribu.net
From mikeschinkel at newclarity.net  Thu Jan 29 20:35:10 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jan 29 20:38:09 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <A21BD7DA-07EC-4843-AF49-AC1CA633F4BE@codehooligans.com>
Message-ID: <11523708.01233261139067.JavaMail.DELL-1405$@Dell-1405>

I'm running into exactly the same type of problems, today in fact.
Hardcoded URLs really cause a lot of deployment headaches. They should ideally be turned into a reference.
I don't know if shortcodes are the answer, but they sound like a better solution than what we have thus far.

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Paul" <paul@codehooligans.com>
To: wp-hackers@lists.automattic.com
Sent: Thursday, January 29, 2009 1:36:45 PM GMT -05:00 US/Canada Eastern
Subject: [wp-hackers] shortcode for images?

All,

Just wondering is there are any future core plans to replace the full  
URL of images inserted into Posts/Pages with some new image shortcode?

Historically I've always disagreed with placing the full image URL  
into the post body since this limits the overall blog portability. As  
a full-time developer I usually develop the client WordPress site on  
my local system. This includes importing any legacy blog posts,  
images, documents, etc. When I push this to the client server I have  
to search and replace the local URL the client site URL. Not s big  
issue really I know.

Another example. I'm converting this HRC blog site http://www.hrcbackstory.org/ 
  from TypePad to a self-hosted WordPress instance http://blogstaging.hrcsupport.org 
. The site has over 1460 posts and most post have 2 or more images.  
The dev URL 'blogstaging.hrcsupport.org' used for the staging site  
will need to be updated when they point the live domain 'www.hrcbackstory.org 
' to the self-hosted WordPress site end of next week. At that time  
I'll need to update the database. Again, not a big issue. But would be  
nice if the client could do this themselves. I was thinking there  
could be a cleaner way.

Seems that shortcodes are all the rage now. Most media plugin  
developers are utilizing them quite well. So why is WordPress still  
using the full URL for the image source? I noticed the new image  
caption already uses shortcode [caption... ]. Seems it would not be a  
big task to use a shortcode for the image itself. Just wondering.

Paul Menard
http://www.codehooligans.com

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From yahgrp at poplarware.com  Thu Jan 29 20:51:45 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Thu Jan 29 20:49:32 2009
Subject: [wp-hackers] Showing custom page types
In-Reply-To: <4981F9E8.4030706@gaarai.com>
References: <4981F9E8.4030706@gaarai.com>
Message-ID: <498216E1.4080103@poplarware.com>

Since you asked for thoughts and suggestions on your plugin code 
(which I won't include again here), here are a few ideas:

a) Calling flush_rewrite_rules() in every 'init' action is not a good 
idea. That means it will happen on every page load for every blog 
visitor, and it's a time-consuming action (well, technically it is the 
rebuild of rewrite rules that is expensive, not the flush itself). You 
probably want to change the logic to flush rewrite rules only when 
necessary, such as when someone changes the config. You might also 
find the 'query_vars' filter and 'generate_rewrite_rules' action to be 
useful to do some of the logic you put into your 'init' action.

b) Besides the 'template_redirect' action, you can also use the 
'parse_request' action to override what WP is planning to do.

c) In your function for the 'template_redirect' action, you can also 
do something like this:

if( logic to detect you are on one of your pages ) {
    include( full path to your desired template file );
    exit;
}

Hope this helps...
     Jennifer

Chris Jean wrote:
> I'm working on a new project that uses WordPress as a framework rather 
> than as just a blogging platform. I want to be able to have custom URL 
> structures, such as /tool/option, that will end up passing variables to 
> a set of code to render the page contents rather than one of the theme 
> template files rendering the content.


-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com

Drupal/WordPress Sites, Themes, Modules/Plugins
Custom Web Programming, Web Databases
PHP, Perl, MySQL, JavaScript, XML, AJAX

From paul at codehooligans.com  Thu Jan 29 20:50:56 2009
From: paul at codehooligans.com (Paul)
Date: Thu Jan 29 20:51:13 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <349fe48b0901291203pa5ae60ao9c4d9e2e096b6281@mail.gmail.com>
References: <A21BD7DA-07EC-4843-AF49-AC1CA633F4BE@codehooligans.com>
	<349fe48b0901291047m7252d81cs9a4e79684b2b39e2@mail.gmail.com>
	<D72197B5-096C-4617-836E-BD39A6B52E80@codehooligans.com>
	<349fe48b0901291203pa5ae60ao9c4d9e2e096b6281@mail.gmail.com>
Message-ID: <31515070-723F-4909-87DE-889FEB010562@codehooligans.com>


On Jan 29, 2009, at 2:03 PM, scribu wrote:
> I never used the caption shortcode, so I wouldn't know. None the  
> less, your
> argument is not very good: If there is already a lot of processing  
> going on
> already, why add more?

When you upload an image through the default media upload and you  
enter a caption for the image then insert into post what is inserted  
is something like:

[caption id="attachment_2817" align="aligncenter" width="212"  
caption="Corporate America More GLBT-Friendly Than Ever."]<a href="http://www.hrc.org 
"><img src="http://blogstaging.hrcsupport.org/wp-content/uploads/2009/01/side.jpg 
" alt="Corporate America More GLBT-Friendly Than Ever." title="side"  
width="212" height="90" class="size-full wp-image-2817" /></a>[/caption]

When you view this in the WYSIWYG you will see the image and the  
caption text below it. Simple enough.

I guess my argument (or more like my opinion) is the final code for  
local URIs should not be post body until the time the post contents  
need to be rendered to the user. And yes I see the same argument when  
simply linking to another post/page on the same site. Why put in the  
URL? Put in a reference that can be filtered on at render time. I  
agree with you that already in the core is a ton of filter action  
taking place. I don't have the answer on how this will impact  
performance. But most all my clients run some form of Caching plugin  
so really once the page is rendered it will remained cached for some  
time period.

And to be honest I'm less comfortable with a plugin using shortcodes  
than core. I'm had issues early on with a media plugin adding  
shortcodes then sometime later I decided to use a different plugin.  
Creates a mess to clean up.

P-
From gaarai at gaarai.com  Thu Jan 29 20:59:20 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Thu Jan 29 20:59:36 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <11523708.01233261139067.JavaMail.DELL-1405$@Dell-1405>
References: <11523708.01233261139067.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <498218A8.1010906@gaarai.com>

I think both you and Paul are onto something in that absolute references 
stored in the database cause many headaches when migrating, testing, or 
dry dock building a site. However, scribu has an edge here with the 
performance issue.

There's no reason to cause a performance penalty for each and every 
image added to a post each and every time that post is rendered simply 
to make certain edge-case situations more manageable. In addition, these 
situations where value would be added never occur for most users. As for 
those who would benefit, most would only get value at that one point 
where the site URL is modified.

Adding a performance hit of this magnitude just to make a single event 
easier to handle is a poor solution. I also think that it's barking up 
the wrong tree.

The problem isn't that the format that image references are stored in 
when added to post content is poor. The problem is that WordPress 
installations as a whole don't transfer well.

So, I propose that some sort of transfer mechanism be added to the core 
of WordPress. This transfer mechanism will intelligently handle updating 
all data in the database that needs to be updated when the siteurl 
and/or home are modified. In addition, an action is fired before and 
after this data transfer occurs so that plugins can do any necessary 
changes as well.

This type of solution doesn't impact the performance of the core in any 
way while still enabling simple migrations of site data.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Mike Schinkel wrote:
> I'm running into exactly the same type of problems, today in fact.
> Hardcoded URLs really cause a lot of deployment headaches. They should ideally be turned into a reference.
> I don't know if shortcodes are the answer, but they sound like a better solution than what we have thus far.
>
> -Mike Schinkel
> http://mikeschinkel.com/
>
> ----- Original Message -----
> From: "Paul" <paul@codehooligans.com>
> To: wp-hackers@lists.automattic.com
> Sent: Thursday, January 29, 2009 1:36:45 PM GMT -05:00 US/Canada Eastern
> Subject: [wp-hackers] shortcode for images?
>
> All,
>
> Just wondering is there are any future core plans to replace the full  
> URL of images inserted into Posts/Pages with some new image shortcode?
>
> Historically I've always disagreed with placing the full image URL  
> into the post body since this limits the overall blog portability. As  
> a full-time developer I usually develop the client WordPress site on  
> my local system. This includes importing any legacy blog posts,  
> images, documents, etc. When I push this to the client server I have  
> to search and replace the local URL the client site URL. Not s big  
> issue really I know.
>
> Another example. I'm converting this HRC blog site http://www.hrcbackstory.org/ 
>   from TypePad to a self-hosted WordPress instance http://blogstaging.hrcsupport.org 
> . The site has over 1460 posts and most post have 2 or more images.  
> The dev URL 'blogstaging.hrcsupport.org' used for the staging site  
> will need to be updated when they point the live domain 'www.hrcbackstory.org 
> ' to the self-hosted WordPress site end of next week. At that time  
> I'll need to update the database. Again, not a big issue. But would be  
> nice if the client could do this themselves. I was thinking there  
> could be a cleaner way.
>
> Seems that shortcodes are all the rage now. Most media plugin  
> developers are utilizing them quite well. So why is WordPress still  
> using the full URL for the image source? I noticed the new image  
> caption already uses shortcode [caption... ]. Seems it would not be a  
> big task to use a shortcode for the image itself. Just wondering.
>
> Paul Menard
> http://www.codehooligans.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
From mikeschinkel at newclarity.net  Thu Jan 29 21:00:36 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jan 29 21:01:49 2009
Subject: [wp-hackers] Showing custom page types
In-Reply-To: <1234028.81233262749302.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <21034856.101233262844289.JavaMail.DELL-1405$@Dell-1405>

Chris:

I have exactly the same needs.  URL management and related content is a real pain in WP (unlike Drupal which is easy and from whence I came.) I've been meaning to write about it but am glad someone else better known on the list has decided to tackle the issue first.

I've identified that /wp-content/template-loader.php doesn't provide any reasonable way to let someone call custom code off a custom URL.

I'd love to work with you on this. It's probably what I see as WordPress' biggest limitation for my own needs followed closely by lack of custom post types.
 
-Mike Schinkel
http://mikeschinkel.com/

P.S. I've also come to the conclusion that requiring the use of regex for URL mapping greatly reduces the number of people who can approach using WordPress as a CMS.  I'd really like to see URL Templates used as for the 80% cases and then regex could be used for the more advanced cases.  For example, if I wanted to create a list of companies, I'd like to be able to specify the URLs like this:

   /companies/
   /companies/{company}/
   /companies/{company}/overview/
   /companies/{company}/details/

I've done some work in that area at http://code.google.com/p/simpleurlmapper/



----- Original Message -----
From: "Chris Jean" <gaarai@gaarai.com>
To: wp-hackers@lists.automattic.com
Sent: Thursday, January 29, 2009 1:48:08 PM GMT -05:00 US/Canada Eastern
Subject: [wp-hackers] Showing custom page types

I'm working on a new project that uses WordPress as a framework rather 
than as just a blogging platform. I want to be able to have custom URL 
structures, such as /tool/option, that will end up passing variables to 
a set of code to render the page contents rather than one of the theme 
template files rendering the content.

I have it working, but I feel like there is a better way to do this. I 
want to run what I've done by this list to see if anyone has a better or 
more standard way of doing this.

    /* Part of plugin code pertaining to this discussion */

    add_action( 'init', 'add_rewrite_rules' );
    add_action( 'template_redirect', 'load_custom_page_setup' );

    function load_custom_page_setup() {
        $tool = get_query_var( 'tool' );
       
        if ( ! empty( $tool ) ) {
            add_action( 'render_custom', 'run_tool' );
        }
    }

    function add_rewrite_rules() {
        // This should only be run when the plugin is first initialized
    or when the
        // rules are flushed by some other process.
       
        global $wp, $wp_rewrite;
       
        $wp_rewrite->add_rule( 'lookup/?$', 'index.php?tool=lookup',
    'top' );
        $wp_rewrite->add_rule( 'lookup/([^/]+)/?$',
    'index.php?tool=lookup&option1=$matches[1]', 'top' );
        $wp_rewrite->add_rule( 'lookup/([^/]+)/([^/]+)/?$',
    'index.php?tool=lookup&option1=$matches[1]&option2=$matches[2]',
    'top' );
       
        // Quick hack just to make this work while I make changes
        $wp_rewrite->flush_rules();
       
        $wp->add_query_var( 'tool' );
        $wp->add_query_var( 'option1' );
        $wp->add_query_var( 'option2' );
    }

    function run_tool() {
        $tool = get_query_var( 'tool' );
       
        if ( ! empty( $tool ) ) {
            switch( $tool ) {
                case 'lookup':
                    run_lookup();
                    break;
            }
        }
    }

    if ( ! function_exists( 'is_custom' ) ) {
        function is_custom() {
            $lookup = get_query_var( 'lookup' );
           
            if ( ! empty( $lookup ) )
                return true;
            return false;
        }
    }

    /* End plugin code */


    /* Modification added home.php or index.php file depending on theme
    setup */

    <?php if ( ! function_exists( 'is_custom' ) || ! is_custom() ) : ?>
        /* Standard theme code/markup here */
    <?php else : ?>
        <?php do_action( 'render_custom' ); ?>
    <?php endif; ?>

    /* End theme modification */


Basically, I've found the only way to insert this custom output into a 
theme is by modifying the theme itself since there isn't a specification 
for custom output that fills in a blank template location.

I could create a page template, but that would either require passing 
the variables in a query string or creating a page for each possible 
combination of URL "paths" and manually parsing the URL in the code to 
derive the variables.

Ideally, I'd like there to be a way to keep all this logic and code 
completely within the plugin and not require the theme to be modified. 
As far as I can tell, the only way to make this standard is to add a new 
conditional tag, such as is_custom, and add to the template spec a new 
template file, such as custom.php, that is nothing more than a theme 
file that calls an action in place of content.

Just so you know of a couple of different ways that I tried out, I've 
done the following:

    * Used the template_redirect hook to check for my custom vars. If
      they are set, set the $wp_query->is_robots variable to true, clear
      out the do_robots action hook, and add my own function to the
      do_robots action. This actually works really well with one big
      caveat: there isn't a template. So, this method could work well if
      you don't require any of the theme template.
    * I started to journey down the road of trying to latch into the
      is_single process so that I could take advantage of the relatively
      simple setup that most single.php template files have. This would
      require me to setup my own title, content, etc variables when
      the_post is called. At first, I thought that this was a promising
      road, but it's really a minefield as it would require me to jump
      through hurdles of getting successful queries, faking and then
      replacing many internal variables, and that's just the tip of the
      iceberg.

Please share any thoughts or ideas that you have. If there is a way to 
do this within the current WordPress structure, I'd love to know about it.

-- 
Chris Jean
http://gaarai.com/
http://wp-roadmap.com/

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From gaarai at gaarai.com  Thu Jan 29 21:18:03 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Thu Jan 29 21:18:22 2009
Subject: [wp-hackers] Showing custom page types
In-Reply-To: <498216E1.4080103@poplarware.com>
References: <4981F9E8.4030706@gaarai.com> <498216E1.4080103@poplarware.com>
Message-ID: <49821D0B.1010200@gaarai.com>

Thanks for the heads-up on the flush rules call. I'll get that code 
locked down to only add the rules when the rules change or when the 
plugin activates and to only flush on activation.

I looked at the parse_request action and ended up settling on the 
template_redirect one instead. I'll look at the parse_request action 
again and see if I can gain any better/faster functionality by going 
that route.

I don't like the idea of shortcutting the WordPress system by directly 
calling the template file directly and exiting. I traced the code, and 
there won't directly be any actions, filters, or other calls directly 
bypassed because of this since loading the template file is the last 
thing that WordPress does. However, if any other actions are queued up 
in the template_redirect action or if any other actions are added at 
some point, this bypass could cause an issue in the future.

I always like to work with the system rather than breaking through the 
system if possible. My desire to learn the "right way" to do this was 
the reason for sending the original message.

Thanks for going through my code and being willing to help. I'll check 
out the template_redirect action and see what I can do with it.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Jennifer Hodgdon wrote:
> Since you asked for thoughts and suggestions on your plugin code 
> (which I won't include again here), here are a few ideas:
>
> a) Calling flush_rewrite_rules() in every 'init' action is not a good 
> idea. That means it will happen on every page load for every blog 
> visitor, and it's a time-consuming action (well, technically it is the 
> rebuild of rewrite rules that is expensive, not the flush itself). You 
> probably want to change the logic to flush rewrite rules only when 
> necessary, such as when someone changes the config. You might also 
> find the 'query_vars' filter and 'generate_rewrite_rules' action to be 
> useful to do some of the logic you put into your 'init' action.
>
> b) Besides the 'template_redirect' action, you can also use the 
> 'parse_request' action to override what WP is planning to do.
>
> c) In your function for the 'template_redirect' action, you can also 
> do something like this:
>
> if( logic to detect you are on one of your pages ) {
>    include( full path to your desired template file );
>    exit;
> }
>
> Hope this helps...
>     Jennifer
>
> Chris Jean wrote:
>> I'm working on a new project that uses WordPress as a framework 
>> rather than as just a blogging platform. I want to be able to have 
>> custom URL structures, such as /tool/option, that will end up passing 
>> variables to a set of code to render the page contents rather than 
>> one of the theme template files rendering the content.
>
>
From mikeschinkel at newclarity.net  Thu Jan 29 21:20:13 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jan 29 21:23:26 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <498218A8.1010906@gaarai.com>
Message-ID: <16582237.181233264020733.JavaMail.DELL-1405$@Dell-1405>

"Chris Jean" <gaarai@gaarai.com> wrote:
> So, I propose that some sort of transfer mechanism be added to the 
> core of WordPress. This transfer mechanism will intelligently handle 
> updating all data in the database that needs to be updated when the 
> siteurl and/or home are modified. In addition, an action is fired 
> before and after this data transfer occurs so that plugins can do 
> any necessary changes as well.

+1.  This was yet another thing you beat me to discussing (and I'm glad you did.)

There's (at least) one more major issue I've been meaning to discuss; I wonder if you'll hit on it later today...? :)

> Adding a performance hit of this magnitude just to make a single 
> event easier to handle is a poor solution. I also think that it's 
> barking up the wrong tree.

OTOH, couldn't caching (and/or) pre-rendering solve those performance problems?

In the case of pre-rendering, couldn't we offer as an option to story post both pre and post rendered; pre-rendered for editing and post rendered for serving?

-Mike Schinkel
http://mikeschinkel.com/

From gaarai at gaarai.com  Thu Jan 29 21:41:19 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Thu Jan 29 21:41:51 2009
Subject: [wp-hackers] Showing custom page types
In-Reply-To: <21034856.101233262844289.JavaMail.DELL-1405$@Dell-1405>
References: <21034856.101233262844289.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <4982227F.1030102@gaarai.com>

Wow... "better known on the list". I'm hanging that on the wall.

I recently posted on my blog about using WordPress as a web application 
framework, and it got me thinking about really breaking out of the box 
of blogging and creating a application site completely based on 
WordPress. I've been wanting to build a DNS tool site for a few months 
now, so it was easy to figure out what to tackle.

This project quickly got me shaking my head on how the devs intend for 
plugin developers to add code-generated page output. The reasonable 
answer seems to be that they don't or haven't gotten around to adding 
such functionality.

There are many different functions that add rewrite rules, tags, and 
what-have-you, yet most of those functions aren't used in the core at 
all and the documentation provided is extremely terse. Core seems to 
just hard code all the pertinent data directly into the data structures, 
so I have no idea how the dev team would use these functions or if they 
are of value at all to what I want to do.

You're right on the money when you say that the template-loader doesn't 
offer any latch points for a plugin developer to use directly. I looked 
in that file and quickly realized that any solution that didn't require 
the theme files would have to be a hack job and would be very prone to 
breaking. This explains my exotic notions of using the do_robots action 
or latching into the single process.

I like your URL template idea. I see that /companies/{company}/ template 
as not only setting up the add_rule regex but also registering a query 
var called 'company'. After seeing this, I'm definitely going to play 
around with creating my own URL templating system to make doing all the 
add_rule and add_query_var calls simpler.

I'll send you a personal email in a moment to give you more details.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/
http://dnsyogi.com/



Mike Schinkel wrote:
> Chris:
>
> I have exactly the same needs.  URL management and related content is a real pain in WP (unlike Drupal which is easy and from whence I came.) I've been meaning to write about it but am glad someone else better known on the list has decided to tackle the issue first.
>
> I've identified that /wp-content/template-loader.php doesn't provide any reasonable way to let someone call custom code off a custom URL.
>
> I'd love to work with you on this. It's probably what I see as WordPress' biggest limitation for my own needs followed closely by lack of custom post types.
>  
> -Mike Schinkel
> http://mikeschinkel.com/
>
> P.S. I've also come to the conclusion that requiring the use of regex for URL mapping greatly reduces the number of people who can approach using WordPress as a CMS.  I'd really like to see URL Templates used as for the 80% cases and then regex could be used for the more advanced cases.  For example, if I wanted to create a list of companies, I'd like to be able to specify the URLs like this:
>
>    /companies/
>    /companies/{company}/
>    /companies/{company}/overview/
>    /companies/{company}/details/
>
> I've done some work in that area at http://code.google.com/p/simpleurlmapper/
From wordpress at dd32.id.au  Thu Jan 29 22:08:12 2009
From: wordpress at dd32.id.au (DD32)
Date: Thu Jan 29 22:08:21 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific 
	plugin?
In-Reply-To: <71649FAF-D06E-483D-8967-BE3747F714BF@striderweb.com>
References: <3283f0830901280708s627bdfbfy2212e2bf725261ba@mail.gmail.com>
	<71649FAF-D06E-483D-8967-BE3747F714BF@striderweb.com>
Message-ID: <45055a190901291408l74a7afb0mc587ae194af1d58d@mail.gmail.com>

2009/1/29 Stephen Rider <wp-hackers@striderweb.com>:
> 1) I believe you want to change the filename and folder name.
Wont work, The Update API was designed around users having differently
named files/folders

> 2) Does anyone know what happens if he removed the Version header?  Would
> that do it too?
Pretty sure that'll not make a difference either, Since it'll still
detect the plugin version.

> 3) A hack-ish alternate is to set a really high version number so it will
> always be higher than whatever's on the server.
True, But its very hackish, Not sure what would happen if you were to
prefix it "XYZ Corp. 5.6.3"
From mikeschinkel at newclarity.net  Thu Jan 29 23:33:06 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jan 29 23:35:01 2009
Subject: [wp-hackers] Showing custom page types
In-Reply-To: <4982227F.1030102@gaarai.com>
Message-ID: <11830186.321233271992208.JavaMail.DELL-1405$@Dell-1405>

"Chris Jean" <gaarai@gaarai.com> wrote:
>> Wow... "better known on the list". I'm hanging that on the wall.

Heh. It's all relative. :-)

Definitely agree that the ability to add content on custom URLs is half-baked in WordPress at the moment.

> I like your URL template idea. I see that /companies/{company}/ 
> template as not only setting up the add_rule regex but also 
> registering a query var called 'company'. After seeing this, I'm 
> definitely going to play around with creating my own URL templating 
> system to make doing all the add_rule and add_query_var calls simpler.

I've put a *lot* of thought into URL design (http://blog.welldesignedurls.org; I plan to roll those posts into my personal blog when I have the time). There's a lot to consider/we can discuss on this topic not the least of which is "who do you make it scale" to a large number of URLs?  Drupal handles that part very poorly, for example.

Chat with ya off list.

-Mike Schinkel
http://mikeschinkel.com/
From andre.renaut at gmail.com  Thu Jan 29 23:47:09 2009
From: andre.renaut at gmail.com (=?UTF-8?Q?andr=C3=A9_renaut?=)
Date: Thu Jan 29 23:47:18 2009
Subject: [wp-hackers] Hack for wp_localize_script
Message-ID: <8810a71a0901291547g742875c6h23c9c91d98795d99@mail.gmail.com>

Hello,

wp_localize_script only support array with one level, for translation
purpose.
However, i need to convert a php array (multiple levels) into a javascript
array.

When i try to use an array into an array with wp_localize_script, i get
toto:"Array"...

So i propose the following hack into wp-includes/class.wp-scripts.php for
function print_scripts_l10n()

  48          $eol = '';
  49          foreach ( $this->registered[$handle]->extra['l10n'][1] as $var
=> $val ) {
  50              if ( 'l10n_print_after' == $var ) {
  51                  $after = $val;
  52                  continue;
  53              }
  54              echo "$eol\t\t$var: \"" . js_escape( $val ) . '"';
  55              $eol = ",\n";
  56          }

Becomes

  48          $eol = "\t\t";
  49          foreach ( $this->registered[$handle]->extra['l10n'][1] as $var
=> $val ) {
  50              if ( 'l10n_print_after' == $var ) {
  51                  $after = $val;
  52                  continue;
  53              }
  54              echo "$eol$var: " . $this->print_scripts_l10n_val($val);
  55              $eol = ",\n\t\t";
  56          }

and a new function

function print_scripts_l10n_val($val0,$before="")
{
    if (is_array($val0))
    {
        $eol = "\t\t";
        $text =  "{\n\t$before";
        foreach($val0 as $var => $val)
        {
            $text .=  "$eol$var: " . $this->print_scripts_l10n_val($val,
"\t" . $before );
            $eol = ",\n$before\t\t\t";
        }
        $text .= "\n\t\t$before}";
    }
    else
    {
        $text = '"' . js_escape( $val0 ) . '"';
    }
    return $text;
}

by the way, i do not understand the test "if ( 'l10n_print_after' == $var )"
and the related code

what do you think ?
From lynne.pope at gmail.com  Thu Jan 29 23:53:40 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu Jan 29 23:53:48 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <862d087f0901291112y5e7951e6lf1a93d1fead19101@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<ca7320070901291015w117c778fk2d1ffb0ce1798ae0@mail.gmail.com>
	<862d087f0901291049n500ce736j9136f8ab491d2761@mail.gmail.com>
	<06393337-0FBE-4E3F-B73F-D42DA5DC930C@yoast.com>
	<862d087f0901291112y5e7951e6lf1a93d1fead19101@mail.gmail.com>
Message-ID: <427667db0901291553q238d9f9ej1b6fbdd242d9e4e1@mail.gmail.com>

2009/1/30 Nathan Rice <ncrice@gmail.com>

> Joost,
> Fair enough.  Although in terms of SEO, one would think that having the
> <title> and <h1> match is optimal, no?
>
> And I agree about the custom meta description. Although, again, it's fairly
> easy to get your meta description to display your post excerpt without
> confusing users with yet another field to fill in when publishing a post.
>
> But like you said, if no one is proposing it, then I certainly won't try to
> start and argument :-)


There are loads of reasons someone may not want the title and <h1> to match,
and even more reasons why the post excerpt should not be used for the meta
description.

For example, I use the excerpt for everything except the single post, as an
introduction, summary, abstract or synopsis, depending on the site This
means the excerpt is usually too long for meta description (which I prefer
to write manually anyway).

The problem with trying to automate everything is that while this may suit
some users, it can really impact on other users sites. Having the ability to
add metadata for description and keywords would be nice, but Headspace does
that nicely for me now.

IMO, WordPress does a good job of being close enough to all things to all
people only as long as the core is kept lean and plugin developers stay
active. This propensity to add popular plugins to the core, without any real
idea of just how many people really want them in the core, is a dangerous
road to take. Far too easy to end up with a bloated core that contains a lot
of functionality people don't want. (Just my 0.02c ;))

Lynne
From wp-hackers at striderweb.com  Fri Jan 30 01:01:43 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jan 30 01:03:00 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific
	plugin?
In-Reply-To: <45055a190901291408l74a7afb0mc587ae194af1d58d@mail.gmail.com>
References: <3283f0830901280708s627bdfbfy2212e2bf725261ba@mail.gmail.com>
	<71649FAF-D06E-483D-8967-BE3747F714BF@striderweb.com>
	<45055a190901291408l74a7afb0mc587ae194af1d58d@mail.gmail.com>
Message-ID: <55E4D871-BDBD-4062-8CB3-1B1A73B28EF3@striderweb.com>


On Jan 29, 2009, at 4:08 PM, DD32 wrote:

> 2009/1/29 Stephen Rider <wp-hackers@striderweb.com>:

>> 2) Does anyone know what happens if he removed the Version header?   
>> Would
>> that do it too?

> Pretty sure that'll not make a difference either, Since it'll still
> detect the plugin version.

There won't be anything to detect -- you've just removed the version  
data!
From mdmartz at sivel.net  Fri Jan 30 01:07:21 2009
From: mdmartz at sivel.net (Matt Martz)
Date: Fri Jan 30 01:07:31 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific 
	plugin?
In-Reply-To: <55E4D871-BDBD-4062-8CB3-1B1A73B28EF3@striderweb.com>
References: <3283f0830901280708s627bdfbfy2212e2bf725261ba@mail.gmail.com>
	<71649FAF-D06E-483D-8967-BE3747F714BF@striderweb.com>
	<45055a190901291408l74a7afb0mc587ae194af1d58d@mail.gmail.com>
	<55E4D871-BDBD-4062-8CB3-1B1A73B28EF3@striderweb.com>
Message-ID: <518fa9630901291707mee5b438t314e7bc477d7c855@mail.gmail.com>

>>> 2) Does anyone know what happens if he removed the Version header?  Would
>>> that do it too?
>
>> Pretty sure that'll not make a difference either, Since it'll still
>> detect the plugin version.
>
> There won't be anything to detect -- you've just removed the version data!


Why not just set the version to something obscene like 100000 and be
done with it.  Because your local version is greater than any
conceivable version in the repo it should never list a plugin update.
Shouldn't even need to change anything else.

-- 
Matt Martz
matt@sivel.net
From shacker at birdhouse.org  Fri Jan 30 01:44:43 2009
From: shacker at birdhouse.org (Scot Hacker)
Date: Fri Jan 30 01:45:01 2009
Subject: [wp-hackers] iframe question
In-Reply-To: <20090129120013.666D76D08@comox.textdrive.com>
References: <20090129120013.666D76D08@comox.textdrive.com>
Message-ID: <28F4FD8E-02D1-4DE3-B96B-5A598001BE8B@birdhouse.org>

> Date: Wed, 28 Jan 2009 22:47:01 -0500
> From: Casey Bisson <casey.bisson@gmail.com>

> WP takes it more seriously than you suggest. Iframes are filtered by
> kses even when TinyMCE is disabled, but only for those who don't have
> the unfiltered_html capability attached to their role (which means
> admins can add iframes but authors can't, by default).
>
> http://trac.wordpress.org/browser/trunk/wp-includes/kses.php#L44
> http://codex.wordpress.org/Roles_and_Capabilities#unfiltered_html

Thanks for this, and thanks to others re: shortcode suggestions. I did  
find an existing plugin that provides a shortcode to enable iframes,  
but unfortunately it doesn't work with Google Maps (not sure why not).  
In the end we're going with a more sophisticated mapping plugin, but  
it was great to get to the bottom of where iframes are blocked by  
default and what's controlling the behavior.

We push WP heavily to working journalists, and journalists are really  
into creating map mashups to illustrate stories these days, so this is  
an ongoing issue that affects not just us (UC Berkeley Graduate School  
of Journalism) but also all of the publications we're recommending  
WordPress to. With layoffs and paycuts, journalists more than ever are  
lacking willing/able IT staffs. Suggesting that they disable the  
Visual editor or hack core files just isn't an option, but I think  
we've got some workable suggestions now.

I just put together a mini-tutorial laying out the issues and possible  
solutions here:
http://tr.im/dm1l

Thanks,
Scot




From yahgrp at poplarware.com  Fri Jan 30 01:58:55 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Fri Jan 30 01:56:37 2009
Subject: [wp-hackers] Showing custom page types
In-Reply-To: <49821D0B.1010200@gaarai.com>
References: <4981F9E8.4030706@gaarai.com> <498216E1.4080103@poplarware.com>
	<49821D0B.1010200@gaarai.com>
Message-ID: <49825EDF.20205@poplarware.com>

Chris Jean wrote:
> I don't like the idea of shortcutting the WordPress system by directly 
> calling the template file directly and exiting. 

I don't see why not. WP basically does the same thing, after the 
template_redirect action happens -- if none of the template_redirect 
actions has taken charge of the situation and done its own thing, WP 
basically figures out which template to use, includes that template, 
and exits. Right?

> I always like to work with the system rather than breaking through the 
> system if possible. My desire to learn the "right way" to do this was 
> the reason for sending the original message.

I think this is the "right" way to do what you are trying to do in WP. 
There is no better way that I am aware of (and I can think of some 
worse ways). The template_redirect action was added to WP for this 
exact purpose.

<soapbox>As Mike noted earlier in this thread, Drupal does URL 
redirection to modules better. But there's a reason for that: WP is 
meant to be a blogging platform, while Drupal is meant to be a custom 
web application platform. That is why Drupal has better ways to handle 
modules having their own URLs -- you absolutely need that in a custom 
application platform. You don't need that in a blogging platform. On 
the other hand, if you just want to do blogging, WP has all you need 
and it is a LOT easier to dive into. Right tool for the right job, 
etc. etc. </soapbox>

    --Jennifer

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com

Drupal/WordPress Sites, Themes, Modules/Plugins
Custom Web Programming, Web Databases
PHP, Perl, MySQL, JavaScript, XML, AJAX

From mikeschinkel at newclarity.net  Fri Jan 30 02:40:25 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 30 02:40:49 2009
Subject: [wp-hackers] Showing custom page types
In-Reply-To: <49825EDF.20205@poplarware.com>
Message-ID: <7758538.361233283233881.JavaMail.DELL-1405$@Dell-1405>

> I think this is the "right" way to do what you are trying to 
> do in WP. There is no better way that I am aware of (and I 
> can think of some worse ways). The template_redirect action 
> was added to WP for this exact purpose.

One better way that could easily be added would be one additional IF statement in template-loader.php.

> <soapbox>As Mike noted earlier in this thread, Drupal does 
> URL redirection to modules better. But there's a reason for 
> that: WP is meant to be a blogging platform, while Drupal is 
> meant to be a custom web application platform. ...

I see that you have your "<soapbox>" on so I won't give you too much grief :-), but please let's not get all ideological here.  I've (mostly) left Drupal because launching a Drupal site was too damn hard.  It requires skills of both a designer and a dev in order to build a functional and attractive site. WordPress does a much better job of making it easier for one or the other to get what they need.  

OTOH, please don't pigeon-hole WordPress as "meant to be a blogging platform" unless Ma.tt comes here and says so himself, and also says that it's his goal to ensure that WordPress will always be a blogging platform.

WordPress is close enough to the 20% of things people need 80% of the time to be a damn good CMS.  Why stand in the way of addressing those few things that it still needs to be a damn good low-end CMS?

Right tool for the right job, but only if it is the right tool for you. For me, WordPress is fast becoming the right tool for most all my website needs.

-Mike Schinkel
http://mikeschinkel.com/

From wp-hackers at striderweb.com  Fri Jan 30 03:18:47 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jan 30 03:19:49 2009
Subject: [wp-hackers] Plugin Update
In-Reply-To: <161617690901260633s76dda452w69f797059763960c@mail.gmail.com>
References: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>
	<45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>
	<8B8C37E1-4CFF-49E8-AB95-75AFB7643BFD@striderweb.com>
	<45055a190901252214h10452a43hb43d3a4039215666@mail.gmail.com>
	<63a3a6ce0901260046j126afadbv422c26d57be3ae0c@mail.gmail.com>
	<E9F94600-F1AF-407A-810F-0D4F90E78E06@striderweb.com>
	<161617690901260633s76dda452w69f797059763960c@mail.gmail.com>
Message-ID: <842109AF-07F3-4018-87FD-0D952060BD7F@striderweb.com>


On Jan 26, 2009, at 8:33 AM, Otto wrote:

>>> Auto update and integrating with WP is easy if you know where to  
>>> look/hook
>>> :)
>>
>
> The update_plugins option is actually
> updated twice. Once for the current time update, and once at the end
> of the function. You need to be able to ignore the first call and only
> trigger on the second call to your function.

I could probably figure it out, but do you have a good way to do that  
(that you might share?)  :-)

Stephen
From mikeschinkel at newclarity.net  Fri Jan 30 05:33:50 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 30 05:34:13 2009
Subject: [wp-hackers] Problems with wp_update_user() for custom signin,
 registration, & profile
In-Reply-To: <427667db0901290709s3b47f7afl9bfb53628ab0ce6a@mail.gmail.com>
Message-ID: <11564753.381233293637636.JavaMail.DELL-1405$@Dell-1405>

Hi all:

I'm working on a project as a subcontractor where the client designed a signin and registration process and a user profile that is different enough from the default for WordPress that I am having to practically rewrite it all. Because of this I am realizing that the WordPress login system was very much not designed to be customized (ugh!)  

While I hope to bring the idea to the list in the near future of improving the login system so it can be easily customized (using some of the code I've refactored from wp-login.php, and made somewhat understandable) I am more focused on the immediate problem of trying to get this dag nab thing to work.  Specifically at the moment I'm running into problems not being able to change screen name (which has been specified as a requirement by the client) and not being able to change email address.  I'm trying to follow the "best practices" of using WP functions instead of raw SQL, but can't seem to get anything to work.

The function I've found to use is wp_update_user() from /wp-includes/registration.php but it calls wp_insert_user() and that seems to want to duplicate the user record when I give it a new login names with an existing user ID.  Same is true when I try to change email address. Can anyone please offer some guidance here?  I'm about to give up and just write it in raw SQL if I can't figure this out.

Thanks in advance.

-Mike Schinkel
http://mikeschinkel.com/
From brian at nerdlife.net  Fri Jan 30 05:37:01 2009
From: brian at nerdlife.net (Brian Krausz)
Date: Fri Jan 30 05:37:13 2009
Subject: [wp-hackers] Plugin Update
In-Reply-To: <842109AF-07F3-4018-87FD-0D952060BD7F@striderweb.com>
References: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>
	<45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>
	<8B8C37E1-4CFF-49E8-AB95-75AFB7643BFD@striderweb.com>
	<45055a190901252214h10452a43hb43d3a4039215666@mail.gmail.com>
	<63a3a6ce0901260046j126afadbv422c26d57be3ae0c@mail.gmail.com>
	<E9F94600-F1AF-407A-810F-0D4F90E78E06@striderweb.com>
	<161617690901260633s76dda452w69f797059763960c@mail.gmail.com>
	<842109AF-07F3-4018-87FD-0D952060BD7F@striderweb.com>
Message-ID: <63a3a6ce0901292137l657e12acx27622cb6f82fce12@mail.gmail.com>

static function variable?:

<?php
add_action('update_plugins', 'hook_me_baby');
function hook_me_baby() {
    static $run = false;
    if(!$run) {
        $run = true;
        return;
    }
    $run = false;
    //Your code
}
?>

--Brian

On Thu, Jan 29, 2009 at 10:18 PM, Stephen Rider
<wp-hackers@striderweb.com>wrote:

>
> On Jan 26, 2009, at 8:33 AM, Otto wrote:
>
>  Auto update and integrating with WP is easy if you know where to look/hook
>>>> :)
>>>>
>>>
>>>
>> The update_plugins option is actually
>> updated twice. Once for the current time update, and once at the end
>> of the function. You need to be able to ignore the first call and only
>> trigger on the second call to your function.
>>
>
> I could probably figure it out, but do you have a good way to do that (that
> you might share?)  :-)
>
> Stephen
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ozh at planetozh.com  Fri Jan 30 06:22:13 2009
From: ozh at planetozh.com (Ozh)
Date: Fri Jan 30 06:22:28 2009
Subject: [wp-hackers] Hack for wp_localize_script
In-Reply-To: <8810a71a0901291547g742875c6h23c9c91d98795d99@mail.gmail.com>
References: <8810a71a0901291547g742875c6h23c9c91d98795d99@mail.gmail.com>
Message-ID: <ae81acd10901292222n34215686qd943f08c22b76861@mail.gmail.com>

On Fri, Jan 30, 2009 at 12:47 AM, andr? renaut <andre.renaut@gmail.com> wrote:
> what do you think ?

I think you should paste code somewhere it's readable.


-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
From cclarkson at htcomp.net  Fri Jan 30 06:50:08 2009
From: cclarkson at htcomp.net (Charles K. Clarkson)
Date: Fri Jan 30 06:50:35 2009
Subject: [wp-hackers] Plugin Update
In-Reply-To: <63a3a6ce0901292137l657e12acx27622cb6f82fce12@mail.gmail.com>
References: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>	<45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>	<8B8C37E1-4CFF-49E8-AB95-75AFB7643BFD@striderweb.com>	<45055a190901252214h10452a43hb43d3a4039215666@mail.gmail.com>	<63a3a6ce0901260046j126afadbv422c26d57be3ae0c@mail.gmail.com>	<E9F94600-F1AF-407A-810F-0D4F90E78E06@striderweb.com>	<161617690901260633s76dda452w69f797059763960c@mail.gmail.com>	<842109AF-07F3-4018-87FD-0D952060BD7F@striderweb.com>
	<63a3a6ce0901292137l657e12acx27622cb6f82fce12@mail.gmail.com>
Message-ID: <4982A320.9050003@htcomp.net>

Brian Krausz wrote:

> add_action('update_plugins', 'hook_me_baby');
> function hook_me_baby() {
>     static $run = false;
>     if(!$run) {
>         $run = true;
>         return;
>     }
>     $run = false;
>     //Your code
> }

     I could see myself scratching my head over that in six or eight
months. I do not hold the programmer which inhabited my body six or
eight months ago in very high esteem.

     add_action('update_plugins', 'hook_me_baby');

     function hook_me_baby() {

         static $first_time_called = true;

         if ($first_time_called) {
             $first_time_called = false;
             return;
         }

         // Skipped first time called.

     }


HTH,

Charles Clarkson
-- 
Mobile Home Investor
Free Market Advocate
Programmer

Stephenville, TX
http://www.clarksonenergyhomes.com/wordpress/about/
http://twitter.com/CharlesClarkson
+1 (254) 968-8328
From ryanmccue at cubegames.net  Fri Jan 30 07:16:27 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Fri Jan 30 07:16:51 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>	<943689.39344.qm@web25901.mail.ukl.yahoo.com>	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
Message-ID: <4982A94B.8010801@cubegames.net>

Otto wrote:
> Not to promote or anything, but I always install
> http://wordpress.org/extend/plugins/automatic-timezone/ for sites I
> setup. Nobody likes dealing with timezones.
>   

I really have to thank you enormously for that plugin, it saved me from
writing a lot of code for a few OS projects that I've incorporated it in
(after removing WP specific things) and also for writing my own plugin
for a lot of sites. Definitely a must-install.

-- 
Ryan McCue
<http://cubegames.net/>

From m at mullenweg.com  Fri Jan 30 08:49:28 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Fri Jan 30 08:49:45 2009
Subject: [wp-hackers] MediaRSS plugin in Core
In-Reply-To: <161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>	<943689.39344.qm@web25901.mail.ukl.yahoo.com>	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
Message-ID: <4982BF18.5010909@mullenweg.com>

Otto wrote:
> Well, that and I still haven't gotten around to writing a patch to do
> it. The thinking is to make it detect PHP5 and do it this way when it
> can.

That'd be neat.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com
From joost at yoast.com  Fri Jan 30 08:51:21 2009
From: joost at yoast.com (Joost de Valk)
Date: Fri Jan 30 08:51:35 2009
Subject: [wp-hackers] PHP5 (was: MediaRSS plugin in Core)
In-Reply-To: <4982BF18.5010909@mullenweg.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>	<943689.39344.qm@web25901.mail.ukl.yahoo.com>	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
	<4982BF18.5010909@mullenweg.com>
Message-ID: <AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>

Not to start a riot, but is there any officla plan on when we're  
moving to PHP5?

On Jan 30, 2009, at 9:49 AM, Matt Mullenweg wrote:

> Otto wrote:
>> Well, that and I still haven't gotten around to writing a patch to do
>> it. The thinking is to make it detect PHP5 and do it this way when it
>> can.
>
> That'd be neat.
>
> -- 
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at dd32.id.au  Fri Jan 30 09:40:54 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 30 09:41:03 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific 
	plugin?
In-Reply-To: <518fa9630901291707mee5b438t314e7bc477d7c855@mail.gmail.com>
References: <3283f0830901280708s627bdfbfy2212e2bf725261ba@mail.gmail.com>
	<71649FAF-D06E-483D-8967-BE3747F714BF@striderweb.com>
	<45055a190901291408l74a7afb0mc587ae194af1d58d@mail.gmail.com>
	<55E4D871-BDBD-4062-8CB3-1B1A73B28EF3@striderweb.com>
	<518fa9630901291707mee5b438t314e7bc477d7c855@mail.gmail.com>
Message-ID: <45055a190901300140g417b97ebi52b9c25af2986732@mail.gmail.com>

2009/1/30 Stephen Rider <wp-hackers@striderweb.com>:
>
> On Jan 29, 2009, at 4:08 PM, DD32 wrote:
>
>> 2009/1/29 Stephen Rider <wp-hackers@striderweb.com>:
>
>>> 2) Does anyone know what happens if he removed the Version header?  Would
>>> that do it too?
>
>> Pretty sure that'll not make a difference either, Since it'll still
>> detect the plugin version.
>
> There won't be anything to detect -- you've just removed the version data!

Yes there will be, The plugin update API only uses the version for
comparison purposes, not for detection.
Version 5.5 > Version null

(Btw, i just tested it, indeed, i'm right)

2009/1/30 Matt Martz <mdmartz@sivel.net>:
> Why not just set the version to something obscene like 100000 and be
> done with it.  Because your local version is greater than any
> conceivable version in the repo it should never list a plugin update.
> Shouldn't even need to change anything else.

Because its ugly :) And it gives no feedback that its a modified
plugin.. (Other than the inflated number)
From wordpress at dd32.id.au  Fri Jan 30 09:46:39 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 30 09:46:50 2009
Subject: [wp-hackers] Plugin Update
In-Reply-To: <4982A320.9050003@htcomp.net>
References: <862d087f0901251929w680eb491l25d05a9e723fabeb@mail.gmail.com>
	<45055a190901252102n4e9d52b6t587daba69cc1e220@mail.gmail.com>
	<8B8C37E1-4CFF-49E8-AB95-75AFB7643BFD@striderweb.com>
	<45055a190901252214h10452a43hb43d3a4039215666@mail.gmail.com>
	<63a3a6ce0901260046j126afadbv422c26d57be3ae0c@mail.gmail.com>
	<E9F94600-F1AF-407A-810F-0D4F90E78E06@striderweb.com>
	<161617690901260633s76dda452w69f797059763960c@mail.gmail.com>
	<842109AF-07F3-4018-87FD-0D952060BD7F@striderweb.com>
	<63a3a6ce0901292137l657e12acx27622cb6f82fce12@mail.gmail.com>
	<4982A320.9050003@htcomp.net>
Message-ID: <45055a190901300146h37806f83w69a5108827cf11ef@mail.gmail.com>

2009/1/30 Charles K. Clarkson <cclarkson@htcomp.net>:
>> add_action('update_plugins', 'hook_me_baby');
>> function hook_me_baby() {
>>    static $run = false;
>>    if(!$run) {
>>        $run = true;
>>        return;
>>    }
>>    $run = false;
>>    //Your code
>> }


Ew Ew Ew! No no no! (Only for the fact i dont like conditional code
like that.. and you never know if the option is updated multiple times
or something....

Um, I dont have access to my source right now, however, Look at the
way the update occurs, from memory, i did something based off
last_checked & get_option on itself... Alternatively, I could've
mearly stuffed it up and its running my code on both of them (Ive not
done a full check over my code yet)
From andre.renaut at gmail.com  Fri Jan 30 10:22:46 2009
From: andre.renaut at gmail.com (=?UTF-8?Q?andr=C3=A9_renaut?=)
Date: Fri Jan 30 10:23:00 2009
Subject: [wp-hackers] Re: Hack for wp_localize_script
Message-ID: <8810a71a0901300222g41df481fj6cccf87ef423d201@mail.gmail.com>

Here is a little sample file for test purpose of the code :

you can download it here :

http://andrerenaut.ovh.org/wp/wp-content/UserFiles/download.php?path=File/&fname=l10n.zip
From scribu at gmail.com  Fri Jan 30 12:05:25 2009
From: scribu at gmail.com (scribu)
Date: Fri Jan 30 12:08:36 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <16582237.181233264020733.JavaMail.DELL-1405$@Dell-1405>
References: <498218A8.1010906@gaarai.com>
	<16582237.181233264020733.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <349fe48b0901300405h3695d7cco4a89dfc358f64797@mail.gmail.com>

>
> When you upload an image through the default media upload and you enter a
> caption for the image then insert into post what is inserted is something
> like:
>
> [caption id="attachment_2817" align="aligncenter" width="212"
> caption="Corporate America More GLBT-Friendly Than Ever."]<a href="
> http://www.hrc.org"><img src="
> http://blogstaging.hrcsupport.org/wp-content/uploads/2009/01/side.jpg"
> alt="Corporate America More GLBT-Friendly Than Ever." title="side"
> width="212" height="90" class="size-full wp-image-2817" /></a>[/caption]
>
> When you view this in the WYSIWYG you will see the image and the caption
> text below it. Simple enough.
>

I think shortcode for captions is justified because there isn't a HTML
equivalent for them, which is not the case for images.

Adding a performance hit of this magnitude just to make a single
> event easier to handle is a poor solution. I also think that it's
> barking up the wrong tree.
>

I agree. Speaking of migrations, what would happen if you would want to
switch to something other than WP? You would have to use another script to
parse the shortcodes, which can lead to other problems.

-- 
http://scribu.net
From otto at ottodestruct.com  Fri Jan 30 12:26:21 2009
From: otto at ottodestruct.com (Otto)
Date: Fri Jan 30 12:26:34 2009
Subject: [wp-hackers] PHP5 (was: MediaRSS plugin in Core)
In-Reply-To: <AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>
	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
	<4982BF18.5010909@mullenweg.com>
	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
Message-ID: <161617690901300426k30be4953v16da4c936e6a240a@mail.gmail.com>

Oh god, not this conversation again...

On Fri, Jan 30, 2009 at 2:51 AM, Joost de Valk <joost@yoast.com> wrote:
> Not to start a riot, but is there any officla plan on when we're moving to
> PHP5?
>
> On Jan 30, 2009, at 9:49 AM, Matt Mullenweg wrote:
>
>> Otto wrote:
>>>
>>> Well, that and I still haven't gotten around to writing a patch to do
>>> it. The thinking is to make it detect PHP5 and do it this way when it
>>> can.
>>
>> That'd be neat.
>>
>> --
>> Matt Mullenweg
>> http://ma.tt | http://wordpress.org | http://automattic.com
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From joost at yoast.com  Fri Jan 30 12:31:47 2009
From: joost at yoast.com (Joost de Valk)
Date: Fri Jan 30 12:32:10 2009
Subject: [wp-hackers] PHP5 (was: MediaRSS plugin in Core)
In-Reply-To: <161617690901300426k30be4953v16da4c936e6a240a@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>
	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
	<4982BF18.5010909@mullenweg.com>
	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
	<161617690901300426k30be4953v16da4c936e6a240a@mail.gmail.com>
Message-ID: <6981C7B1-E27D-4555-8531-DFA9A0EC4D6D@yoast.com>

No conversation, just a question to the core team on the planning for  
that, IF it ever happens :)
On Jan 30, 2009, at 1:26 PM, Otto wrote:

> Oh god, not this conversation again...
>
> On Fri, Jan 30, 2009 at 2:51 AM, Joost de Valk <joost@yoast.com>  
> wrote:
>> Not to start a riot, but is there any officla plan on when we're  
>> moving to
>> PHP5?
>>
>> On Jan 30, 2009, at 9:49 AM, Matt Mullenweg wrote:
>>
>>> Otto wrote:
>>>>
>>>> Well, that and I still haven't gotten around to writing a patch  
>>>> to do
>>>> it. The thinking is to make it detect PHP5 and do it this way  
>>>> when it
>>>> can.
>>>
>>> That'd be neat.
>>>
>>> --
>>> Matt Mullenweg
>>> http://ma.tt | http://wordpress.org | http://automattic.com
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Fri Jan 30 12:29:24 2009
From: otto at ottodestruct.com (Otto)
Date: Fri Jan 30 13:05:09 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <498218A8.1010906@gaarai.com>
References: <11523708.01233261139067.JavaMail.DELL-1405$@Dell-1405>
	<498218A8.1010906@gaarai.com>
Message-ID: <161617690901300429g6a9cc69eid6434072525608fd@mail.gmail.com>

On Thu, Jan 29, 2009 at 2:59 PM, Chris Jean <gaarai@gaarai.com> wrote:
> The problem isn't that the format that image references are stored in when
> added to post content is poor. The problem is that WordPress installations
> as a whole don't transfer well.
>
> So, I propose that some sort of transfer mechanism be added to the core of
> WordPress. This transfer mechanism will intelligently handle updating all
> data in the database that needs to be updated when the siteurl and/or home
> are modified. In addition, an action is fired before and after this data
> transfer occurs so that plugins can do any necessary changes as well.
>
> This type of solution doesn't impact the performance of the core in any way
> while still enabling simple migrations of site data.

The existing Export/Import works "okay". Not great, but okay. It will
handle the image transfers *if* the old site that you're migrating
from is still around and accessible, because it can pull the images
from the old site directly.

Perhaps some sort of export solution that puts the images into the
export data itself would mitigate the issues with it.
From wordpress at dd32.id.au  Fri Jan 30 13:05:24 2009
From: wordpress at dd32.id.au (DD32)
Date: Fri Jan 30 13:05:44 2009
Subject: [wp-hackers] PHP5 (was: MediaRSS plugin in Core)
In-Reply-To: <6981C7B1-E27D-4555-8531-DFA9A0EC4D6D@yoast.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>
	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
	<4982BF18.5010909@mullenweg.com>
	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
	<161617690901300426k30be4953v16da4c936e6a240a@mail.gmail.com>
	<6981C7B1-E27D-4555-8531-DFA9A0EC4D6D@yoast.com>
Message-ID: <45055a190901300505k5f63288foc4d44f14bb9a355e@mail.gmail.com>

No Soundbyte for you, But i'm pretty sure Matt M said he'd not support
a move to PHP5-only until PHP4 was <10% market share.

2009/1/30 Joost de Valk <joost@yoast.com>:
> No conversation, just a question to the core team on the planning for that,
> IF it ever happens :)
> On Jan 30, 2009, at 1:26 PM, Otto wrote:
>
>> Oh god, not this conversation again...
>>
>> On Fri, Jan 30, 2009 at 2:51 AM, Joost de Valk <joost@yoast.com> wrote:
>>>
>>> Not to start a riot, but is there any officla plan on when we're moving
>>> to
>>> PHP5?
>>>
>>> On Jan 30, 2009, at 9:49 AM, Matt Mullenweg wrote:
>>>
>>>> Otto wrote:
>>>>>
>>>>> Well, that and I still haven't gotten around to writing a patch to do
>>>>> it. The thinking is to make it detect PHP5 and do it this way when it
>>>>> can.
>>>>
>>>> That'd be neat.
>>>>
>>>> --
>>>> Matt Mullenweg
>>>> http://ma.tt | http://wordpress.org | http://automattic.com
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From lilla.molnet at gmail.com  Fri Jan 30 13:13:47 2009
From: lilla.molnet at gmail.com (Jon Mihkkal Inga)
Date: Fri Jan 30 13:21:40 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <349fe48b0901300405h3695d7cco4a89dfc358f64797@mail.gmail.com>
References: <498218A8.1010906@gaarai.com>
	<16582237.181233264020733.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0901300405h3695d7cco4a89dfc358f64797@mail.gmail.com>
Message-ID: <6225fcee0901300513g3775e9r253b911faa853496@mail.gmail.com>

Hi there.I agree with Paul in that hardcoding the attachment url in posts is
an obstacle when it comes to portability and customisation.
If you for example want the attachments to be wrapped in a particular way
you are forced to use regex or shortcodes in any case and this is extremely
cumbersome when having to deal with captions that are still shortcodes at
the time of filtering. I'd also like to point out that the inheritance of
attachments is a bit awkward. As I understand it, children are found through
the content of the "post_parent" field. Wouldn't it be cleaner and more
predictable to have a "post_children" field instead?
That would surely speed up the get_children call, as it will not need to
inspect more than one field of post XX to find its children. That would
perhaps ease performance penalties imposed by not inserting attachment urls
in posts.

/j

2009/1/30 scribu <scribu@gmail.com>

> >
> > When you upload an image through the default media upload and you enter a
> > caption for the image then insert into post what is inserted is something
> > like:
> >
> > [caption id="attachment_2817" align="aligncenter" width="212"
> > caption="Corporate America More GLBT-Friendly Than Ever."]<a href="
> > http://www.hrc.org"><img src="
> > http://blogstaging.hrcsupport.org/wp-content/uploads/2009/01/side.jpg"
> > alt="Corporate America More GLBT-Friendly Than Ever." title="side"
> > width="212" height="90" class="size-full wp-image-2817" /></a>[/caption]
> >
> > When you view this in the WYSIWYG you will see the image and the caption
> > text below it. Simple enough.
> >
>
> I think shortcode for captions is justified because there isn't a HTML
> equivalent for them, which is not the case for images.
>
> Adding a performance hit of this magnitude just to make a single
> > event easier to handle is a poor solution. I also think that it's
> > barking up the wrong tree.
> >
>
> I agree. Speaking of migrations, what would happen if you would want to
> switch to something other than WP? You would have to use another script to
> parse the shortcodes, which can lead to other problems.
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From gaarai at gaarai.com  Fri Jan 30 13:36:53 2009
From: gaarai at gaarai.com (Gaarai)
Date: Fri Jan 30 13:38:27 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <161617690901300429g6a9cc69eid6434072525608fd@mail.gmail.com>
References: <11523708.01233261139067.JavaMail.DELL-1405$@Dell-1405>	<498218A8.1010906@gaarai.com>
	<161617690901300429g6a9cc69eid6434072525608fd@mail.gmail.com>
Message-ID: <49830275.2090705@gaarai.com>

That's exactly my point Otto. There isn't a way to migrate an existing 
installation; rather, there is only a way to migrate the base data of an 
installation.

The current migration solution is:

   1. Export the data from the current site.
   2. Create a new database on the current/new host.
   3. Upload a fresh set of files from .org.
   4. Run the install.
   5. Import the data from the old site.
   6. Copy all the themes and plugins from the old site to the new site.
   7. Activate and configure the desired theme.
   8. Activate and configure the desired plugins.

I really don't see why all of this is necessary. Set 5 is especially 
problematic. What if the installation resides in a local-access only 
location? There is no way for the existing migration solution to enable 
a successful migration without recreating potentially large amounts of 
attachments and adding them into the relevant posts.

I don't know why there can't be support for an "advanced" migration 
solution for those that have the technical ability:

   1. Duplicate site contents to new location.
   2. Export SQL file of existing WordPress database.
   3. Create a new database on the current/new host.
   4. Import the SQL file to the new database.
   5. Modify the wp-config.php file if necessary.
   6. Load the site admin interface which would run the migration
      process, if necessary.

This may be complicated for some, but for those that know how to execute 
this process, it could potentially save hours or days spent migrating data.

The new process also has the side-effect of assisting in situations 
where someone may wish to modify their siteurl and/or home settings. 
With the current lack of automatic data migration handling, modifying 
these settings in specific ways can cause all of the attachments to be lost.

In this scenario, the method that WordPress would use to identify this 
migration is unclear. I am uncertain exactly how to do this as I have 
not read through the code while thinking of this scenario. However, a 
quick idea of how it might be able to work is as follows:

   1. When the admin interface is loaded (logging into /wp-admin/), a
      table of known ABSPATH, siteurl, and home values can be checked
      against the current ABSPATH and URL structure used to access the
      admin page.
   2. If a change has occurred and the user has administrator
      privileges, ask the user if they wish for WordPress to run its
      data migration process. The option for no should include a way for
      the user to indicate that they do not wish to be asked again.

There should also be an option to manually run the migration process. 
This allows the user to initiate the migration in the event that the 
automation process fails to recognize the change or to bypass a flag set 
in the database where the user isn't notified about the change.

I know that much of this isn't technically necessary, but the current 
lack of support for a true migration of an existing installation can 
prove to be a stumbling block for many.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Otto wrote:
> On Thu, Jan 29, 2009 at 2:59 PM, Chris Jean <gaarai@gaarai.com> wrote:
>   
>> The problem isn't that the format that image references are stored in when
>> added to post content is poor. The problem is that WordPress installations
>> as a whole don't transfer well.
>>
>> So, I propose that some sort of transfer mechanism be added to the core of
>> WordPress. This transfer mechanism will intelligently handle updating all
>> data in the database that needs to be updated when the siteurl and/or home
>> are modified. In addition, an action is fired before and after this data
>> transfer occurs so that plugins can do any necessary changes as well.
>>
>> This type of solution doesn't impact the performance of the core in any way
>> while still enabling simple migrations of site data.
>>     
>
> The existing Export/Import works "okay". Not great, but okay. It will
> handle the image transfers *if* the old site that you're migrating
> from is still around and accessible, because it can pull the images
> from the old site directly.
>
> Perhaps some sort of export solution that puts the images into the
> export data itself would mitigate the issues with it.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
From ryanmccue at cubegames.net  Fri Jan 30 13:38:48 2009
From: ryanmccue at cubegames.net (Ryan McCue)
Date: Fri Jan 30 13:40:24 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <45055a190901300505k5f63288foc4d44f14bb9a355e@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>	<4982BF18.5010909@mullenweg.com>	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>	<161617690901300426k30be4953v16da4c936e6a240a@mail.gmail.com>	<6981C7B1-E27D-4555-8531-DFA9A0EC4D6D@yoast.com>
	<45055a190901300505k5f63288foc4d44f14bb9a355e@mail.gmail.com>
Message-ID: <498302E8.4070705@cubegames.net>

DD32 wrote:
> No Soundbyte for you, But i'm pretty sure Matt M said he'd not support
> a move to PHP5-only until PHP4 was <10% market share.
>   

Which, according to Nexen.net (which PHP recommends as a usage data
source), was approaching 50% as of October, 2008. I estimate it would
now be around 40% based on that graph, if the gradient is constant
(which it isn't).

-- 
Ryan McCue
<http://cubegames.net/>

From wp-hackers at striderweb.com  Fri Jan 30 13:42:34 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jan 30 13:43:01 2009
Subject: [wp-hackers] Disabling automatic plugin upgrade for specific
	plugin?
In-Reply-To: <45055a190901300140g417b97ebi52b9c25af2986732@mail.gmail.com>
References: <3283f0830901280708s627bdfbfy2212e2bf725261ba@mail.gmail.com>
	<71649FAF-D06E-483D-8967-BE3747F714BF@striderweb.com>
	<45055a190901291408l74a7afb0mc587ae194af1d58d@mail.gmail.com>
	<55E4D871-BDBD-4062-8CB3-1B1A73B28EF3@striderweb.com>
	<518fa9630901291707mee5b438t314e7bc477d7c855@mail.gmail.com>
	<45055a190901300140g417b97ebi52b9c25af2986732@mail.gmail.com>
Message-ID: <A58643B7-BF4A-4A56-BE2F-7112821E2F37@striderweb.com>


On Jan 30, 2009, at 3:40 AM, DD32 wrote:

> 2009/1/30 Stephen Rider <wp-hackers@striderweb.com>:
>> There won't be anything to detect -- you've just removed the  
>> version data!
>
> Yes there will be, The plugin update API only uses the version for
> comparison purposes, not for detection.
> Version 5.5 > Version null

Huh.  Sounds like a bug to me.  If a plugin provides no version then a  
check should not be done, IMO.

Stephen
From gaarai at gaarai.com  Fri Jan 30 13:46:18 2009
From: gaarai at gaarai.com (Gaarai)
Date: Fri Jan 30 13:47:51 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <6225fcee0901300513g3775e9r253b911faa853496@mail.gmail.com>
References: <498218A8.1010906@gaarai.com>	<16582237.181233264020733.JavaMail.DELL-1405$@Dell-1405>	<349fe48b0901300405h3695d7cco4a89dfc358f64797@mail.gmail.com>
	<6225fcee0901300513g3775e9r253b911faa853496@mail.gmail.com>
Message-ID: <498304AA.1050805@gaarai.com>

All the storage containers are scalars. In other words, you can't have a 
plural field type in SQL.

This means that the only way to store the children into a field is to 
store them in a delimited (comma or otherwise) format. Doing this means 
that the database can no longer perform queries that can load the 
necessary children records. Instead, the software now has to pull the 
required record, look for a non-empty children field, split the field on 
the delimiter, and issue a new query to request each one of those 
records. So, rather than being able to load all of a record's children 
in one query, you now have two queries and some processing logic.

There is the other solution of having a children table which would store 
a pointer to the parent and to a single child. This adds in yet another 
table though and such a solution is typically reserved for multi to 
multi relationships, so it could potentially add nasty issues if plugins 
or bad code improperly modified/added records to the table.

In short, having the parent field is the best solution since it 
minimizes complexity of the database and increases query efficiency.

You may not like it since you prefer to think about the relationship the 
other way around, but it truly is the right way to do the database design.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Jon Mihkkal Inga wrote:
> Hi there.I agree with Paul in that hardcoding the attachment url in posts is
> an obstacle when it comes to portability and customisation.
> If you for example want the attachments to be wrapped in a particular way
> you are forced to use regex or shortcodes in any case and this is extremely
> cumbersome when having to deal with captions that are still shortcodes at
> the time of filtering. I'd also like to point out that the inheritance of
> attachments is a bit awkward. As I understand it, children are found through
> the content of the "post_parent" field. Wouldn't it be cleaner and more
> predictable to have a "post_children" field instead?
> That would surely speed up the get_children call, as it will not need to
> inspect more than one field of post XX to find its children. That would
> perhaps ease performance penalties imposed by not inserting attachment urls
> in posts.
>
> /j
>
> 2009/1/30 scribu <scribu@gmail.com>
>
>   
>>> When you upload an image through the default media upload and you enter a
>>> caption for the image then insert into post what is inserted is something
>>> like:
>>>
>>> [caption id="attachment_2817" align="aligncenter" width="212"
>>> caption="Corporate America More GLBT-Friendly Than Ever."]<a href="
>>> http://www.hrc.org"><img src="
>>> http://blogstaging.hrcsupport.org/wp-content/uploads/2009/01/side.jpg"
>>> alt="Corporate America More GLBT-Friendly Than Ever." title="side"
>>> width="212" height="90" class="size-full wp-image-2817" /></a>[/caption]
>>>
>>> When you view this in the WYSIWYG you will see the image and the caption
>>> text below it. Simple enough.
>>>
>>>       
>> I think shortcode for captions is justified because there isn't a HTML
>> equivalent for them, which is not the case for images.
>>
>> Adding a performance hit of this magnitude just to make a single
>>     
>>> event easier to handle is a poor solution. I also think that it's
>>> barking up the wrong tree.
>>>
>>>       
>> I agree. Speaking of migrations, what would happen if you would want to
>> switch to something other than WP? You would have to use another script to
>> parse the shortcodes, which can lead to other problems.
>>
>> --
>> http://scribu.net
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
From lilla.molnet at gmail.com  Fri Jan 30 14:52:10 2009
From: lilla.molnet at gmail.com (Jon Mihkkal Inga)
Date: Fri Jan 30 14:52:21 2009
Subject: [wp-hackers] shortcode for images?
In-Reply-To: <498304AA.1050805@gaarai.com>
References: <498218A8.1010906@gaarai.com>
	<16582237.181233264020733.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0901300405h3695d7cco4a89dfc358f64797@mail.gmail.com>
	<6225fcee0901300513g3775e9r253b911faa853496@mail.gmail.com>
	<498304AA.1050805@gaarai.com>
Message-ID: <6225fcee0901300652u66a4c522j4d8cab8225fa3e50@mail.gmail.com>

@Gaarai:I see why shortcodes would be very costly then. Pardon my
ignorence.


2009/1/30 Gaarai <gaarai@gaarai.com>

> All the storage containers are scalars. In other words, you can't have a
> plural field type in SQL.
>
> This means that the only way to store the children into a field is to store
> them in a delimited (comma or otherwise) format. Doing this means that the
> database can no longer perform queries that can load the necessary children
> records. Instead, the software now has to pull the required record, look for
> a non-empty children field, split the field on the delimiter, and issue a
> new query to request each one of those records. So, rather than being able
> to load all of a record's children in one query, you now have two queries
> and some processing logic.
>
> There is the other solution of having a children table which would store a
> pointer to the parent and to a single child. This adds in yet another table
> though and such a solution is typically reserved for multi to multi
> relationships, so it could potentially add nasty issues if plugins or bad
> code improperly modified/added records to the table.
>
> In short, having the parent field is the best solution since it minimizes
> complexity of the database and increases query efficiency.
>
> You may not like it since you prefer to think about the relationship the
> other way around, but it truly is the right way to do the database design.
>
> Chris Jean
> http://gaarai.com/
> http://wp-roadmap.com/
>
>
>
> Jon Mihkkal Inga wrote:
>
>> Hi there.I agree with Paul in that hardcoding the attachment url in posts
>> is
>> an obstacle when it comes to portability and customisation.
>> If you for example want the attachments to be wrapped in a particular way
>> you are forced to use regex or shortcodes in any case and this is
>> extremely
>> cumbersome when having to deal with captions that are still shortcodes at
>> the time of filtering. I'd also like to point out that the inheritance of
>> attachments is a bit awkward. As I understand it, children are found
>> through
>> the content of the "post_parent" field. Wouldn't it be cleaner and more
>> predictable to have a "post_children" field instead?
>> That would surely speed up the get_children call, as it will not need to
>> inspect more than one field of post XX to find its children. That would
>> perhaps ease performance penalties imposed by not inserting attachment
>> urls
>> in posts.
>>
>> /j
>>
>> 2009/1/30 scribu <scribu@gmail.com>
>>
>>
>>
>>> When you upload an image through the default media upload and you enter a
>>>> caption for the image then insert into post what is inserted is
>>>> something
>>>> like:
>>>>
>>>> [caption id="attachment_2817" align="aligncenter" width="212"
>>>> caption="Corporate America More GLBT-Friendly Than Ever."]<a href="
>>>> http://www.hrc.org"><img src="
>>>> http://blogstaging.hrcsupport.org/wp-content/uploads/2009/01/side.jpg"
>>>> alt="Corporate America More GLBT-Friendly Than Ever." title="side"
>>>> width="212" height="90" class="size-full wp-image-2817" /></a>[/caption]
>>>>
>>>> When you view this in the WYSIWYG you will see the image and the caption
>>>> text below it. Simple enough.
>>>>
>>>>
>>>>
>>> I think shortcode for captions is justified because there isn't a HTML
>>> equivalent for them, which is not the case for images.
>>>
>>> Adding a performance hit of this magnitude just to make a single
>>>
>>>
>>>> event easier to handle is a poor solution. I also think that it's
>>>> barking up the wrong tree.
>>>>
>>>>
>>>>
>>> I agree. Speaking of migrations, what would happen if you would want to
>>> switch to something other than WP? You would have to use another script
>>> to
>>> parse the shortcodes, which can lead to other problems.
>>>
>>> --
>>> http://scribu.net
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From emmensetech at gmail.com  Fri Jan 30 14:54:03 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Fri Jan 30 14:54:16 2009
Subject: [wp-hackers] PHP5 (was: MediaRSS plugin in Core)
In-Reply-To: <AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<943689.39344.qm@web25901.mail.ukl.yahoo.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>
	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
	<4982BF18.5010909@mullenweg.com>
	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
Message-ID: <ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>

-- 
Aaron Brazell
web:: www.technosailor.com
phone:: 410-608-6620
skype:: technosailor
twitter:: @technosailor


On Fri, Jan 30, 2009 at 3:51 AM, Joost de Valk <joost@yoast.com> wrote:

> Not to start a riot, but is there any officla plan on when we're moving to
> PHP5?
>
>
/Grabs popcorn. ;)
From elflop at googlemail.com  Fri Jan 30 19:03:29 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Fri Jan 30 19:03:42 2009
Subject: [wp-hackers] widgets and themes issue
Message-ID: <c6c45a350901301103r77cd01dr22a6dec77fd32293@mail.gmail.com>

I don't do themes - if you've ever looked at my CSS you'll know why.
But my other 'alf does, and has been quite busy recently releasing
quite a few. She seems to have found what seems to be a fairly major
issue - but I'm not sure if it is a bug or not.

She enabled a widget in a theme, then changed themes and found that
that widget, Pages for example, was then no longer available for use
in the enabled theme. She had to revert back to the old one, disable
the widget there, change back to the new theme and re-enable it.

Bug, or intended behaviour?

Rich
-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From gaarai at gaarai.com  Fri Jan 30 19:33:07 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Fri Jan 30 19:33:24 2009
Subject: [wp-hackers] widgets and themes issue
In-Reply-To: <c6c45a350901301103r77cd01dr22a6dec77fd32293@mail.gmail.com>
References: <c6c45a350901301103r77cd01dr22a6dec77fd32293@mail.gmail.com>
Message-ID: <498355F3.8030805@gaarai.com>

I haven't actually dug into the code to determine exactly how this 
situation is handled. However, in my experience, WordPress will always 
try to shift the existing activated widgets to new sidebar locations in 
the new theme.

So, it's possible that the widget was still activated, but that it was 
on a different sidebar than the one shown by default.

I'll dig into the code and see if I can find out more.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/
http://dnsyogi.com/



Rich Pedley wrote:
> I don't do themes - if you've ever looked at my CSS you'll know why.
> But my other 'alf does, and has been quite busy recently releasing
> quite a few. She seems to have found what seems to be a fairly major
> issue - but I'm not sure if it is a bug or not.
>
> She enabled a widget in a theme, then changed themes and found that
> that widget, Pages for example, was then no longer available for use
> in the enabled theme. She had to revert back to the old one, disable
> the widget there, change back to the new theme and re-enable it.
>
> Bug, or intended behaviour?
>
> Rich
>   
From elflop at googlemail.com  Fri Jan 30 20:01:53 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Fri Jan 30 20:02:07 2009
Subject: [wp-hackers] widgets and themes issue
In-Reply-To: <498355F3.8030805@gaarai.com>
References: <c6c45a350901301103r77cd01dr22a6dec77fd32293@mail.gmail.com>
	<498355F3.8030805@gaarai.com>
Message-ID: <c6c45a350901301201s7e8158a6i79d0e7b95868daf8@mail.gmail.com>

2009/1/30 Chris Jean <gaarai@gaarai.com>:
> I haven't actually dug into the code to determine exactly how this situation
> is handled. However, in my experience, WordPress will always try to shift
> the existing activated widgets to new sidebar locations in the new theme.
>
> So, it's possible that the widget was still activated, but that it was on a
> different sidebar than the one shown by default.
>
> I'll dig into the code and see if I can find out more.

Hmm so that would mean if sidebar is registered with same name you're
ok as WP should recognise it. I think she was trying with different
named sidebars at the time, so that might explain it. not sure that
answers whether it is a bug or not though.

-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From wordpress at santosj.name  Fri Jan 30 21:06:47 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Fri Jan 30 21:06:57 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>	<943689.39344.qm@web25901.mail.ukl.yahoo.com>	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>	<4982BF18.5010909@mullenweg.com>	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
	<ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>
Message-ID: <49836BE7.1000204@santosj.name>

Lets list the reasons for and against going PHP5:

Against:

1. Matt Mullenweg be hating PHP5 and he be the God. (Hail Satan!)
2. It would leave out 40% of current users (from last posted statistics 
from last year).
3. Did I mention Matt Mullenweg not liking PHP5? Okay, good.

For:

1. PHP5 is faster than PHP4 (Most benchmarks of PHP 5.2.x show 
considerable improvement, PHP5.3 is so much faster than PHP4, that they 
didn't even attempt to compare it).
2. PHP5 has PDO, and mysqli.
3. PHP5.3 has namespaces!
4. PHP5.3 has closures! No more create_function nonsense, you'll be able 
to actually create a real lambda and closure for usage in 
preg_replace_callback().
5. PHP5 has better object oriented support, re: visibility, true static 
methods and members, class constants.
6. PHP5 has OO chaining: $obj->this()->shit()->is()->awesome();
7. Actually being worked on actively (PHP4 is EOL early last year and no 
updates for about 8 months now).

So I mean, supporting PHP4 only really has one reason for going for it 
and PHP5 has many reason!

Jacob Santos


From joost at yoast.com  Fri Jan 30 21:08:31 2009
From: joost at yoast.com (Joost de Valk)
Date: Fri Jan 30 21:08:47 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <49836BE7.1000204@santosj.name>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>	<943689.39344.qm@web25901.mail.ukl.yahoo.com>	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>	<4982BF18.5010909@mullenweg.com>	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
	<ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>
	<49836BE7.1000204@santosj.name>
Message-ID: <0D0434D4-9EFF-48DC-99E5-ECD036028798@yoast.com>

OMG, did I really start this? :)

My perspective: Matt isn't god, but he decides in these matters, I  
just want to hear his verdict :)

On Jan 30, 2009, at 10:06 PM, Jacob Santos wrote:

> Lets list the reasons for and against going PHP5:
>
> Against:
>
> 1. Matt Mullenweg be hating PHP5 and he be the God. (Hail Satan!)
> 2. It would leave out 40% of current users (from last posted  
> statistics from last year).
> 3. Did I mention Matt Mullenweg not liking PHP5? Okay, good.
>
> For:
>
> 1. PHP5 is faster than PHP4 (Most benchmarks of PHP 5.2.x show  
> considerable improvement, PHP5.3 is so much faster than PHP4, that  
> they didn't even attempt to compare it).
> 2. PHP5 has PDO, and mysqli.
> 3. PHP5.3 has namespaces!
> 4. PHP5.3 has closures! No more create_function nonsense, you'll be  
> able to actually create a real lambda and closure for usage in  
> preg_replace_callback().
> 5. PHP5 has better object oriented support, re: visibility, true  
> static methods and members, class constants.
> 6. PHP5 has OO chaining: $obj->this()->shit()->is()->awesome();
> 7. Actually being worked on actively (PHP4 is EOL early last year  
> and no updates for about 8 months now).
>
> So I mean, supporting PHP4 only really has one reason for going for  
> it and PHP5 has many reason!
>
> Jacob Santos
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at santosj.name  Fri Jan 30 21:15:56 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Fri Jan 30 21:16:10 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <0D0434D4-9EFF-48DC-99E5-ECD036028798@yoast.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>	<943689.39344.qm@web25901.mail.ukl.yahoo.com>	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>	<4982BF18.5010909@mullenweg.com>	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>	<ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>	<49836BE7.1000204@santosj.name>
	<0D0434D4-9EFF-48DC-99E5-ECD036028798@yoast.com>
Message-ID: <49836E0C.9060300@santosj.name>

Blasphemy! You sir have insulted my religion and I demand an apology. 
There is no evidence to the contrary that Matt Mullenweg is not 
currently God [1], therefore I reserve the right to believe him to be 
so. Just like you can neither disprove Christianity (nor prove it for 
that matter either).

Also, I kind of killed a few goats and kind of drank their blood, so 
like, um, I'll feel really stupid if Matt wasn't God. (Hail Satan!)

Jacob Santos

[1] His saying to the contrary of himself being god doesn't not prove 
that he is not god.


Joost de Valk wrote:
> OMG, did I really start this? :)
>
> My perspective: Matt isn't god, but he decides in these matters, I 
> just want to hear his verdict :)
>
> On Jan 30, 2009, at 10:06 PM, Jacob Santos wrote:
>
>> Lets list the reasons for and against going PHP5:
>>
>> Against:
>>
>> 1. Matt Mullenweg be hating PHP5 and he be the God. (Hail Satan!)
>> 2. It would leave out 40% of current users (from last posted 
>> statistics from last year).
>> 3. Did I mention Matt Mullenweg not liking PHP5? Okay, good.
>>
>> For:
>>
>> 1. PHP5 is faster than PHP4 (Most benchmarks of PHP 5.2.x show 
>> considerable improvement, PHP5.3 is so much faster than PHP4, that 
>> they didn't even attempt to compare it).
>> 2. PHP5 has PDO, and mysqli.
>> 3. PHP5.3 has namespaces!
>> 4. PHP5.3 has closures! No more create_function nonsense, you'll be 
>> able to actually create a real lambda and closure for usage in 
>> preg_replace_callback().
>> 5. PHP5 has better object oriented support, re: visibility, true 
>> static methods and members, class constants.
>> 6. PHP5 has OO chaining: $obj->this()->shit()->is()->awesome();
>> 7. Actually being worked on actively (PHP4 is EOL early last year and 
>> no updates for about 8 months now).
>>
>> So I mean, supporting PHP4 only really has one reason for going for 
>> it and PHP5 has many reason!
>>
>> Jacob Santos
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From joost at yoast.com  Fri Jan 30 21:39:24 2009
From: joost at yoast.com (Joost de Valk)
Date: Fri Jan 30 21:39:39 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <49836E0C.9060300@santosj.name>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>	<943689.39344.qm@web25901.mail.ukl.yahoo.com>	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>	<4982BF18.5010909@mullenweg.com>	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>	<ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>	<49836BE7.1000204@santosj.name>
	<0D0434D4-9EFF-48DC-99E5-ECD036028798@yoast.com>
	<49836E0C.9060300@santosj.name>
Message-ID: <CB97FEC0-9EC2-4AAD-B156-A9BF6AF3B94F@yoast.com>

Jacob,

as a former Theology student, I'll ask you kindly not to go into this  
discussion with me, before you know it, we'll be discussing how many  
angels fit on an wp_init action :)

Best,
Joost


On Jan 30, 2009, at 10:15 PM, Jacob Santos wrote:

> Blasphemy! You sir have insulted my religion and I demand an  
> apology. There is no evidence to the contrary that Matt Mullenweg is  
> not currently God [1], therefore I reserve the right to believe him  
> to be so. Just like you can neither disprove Christianity (nor prove  
> it for that matter either).
>
> Also, I kind of killed a few goats and kind of drank their blood, so  
> like, um, I'll feel really stupid if Matt wasn't God. (Hail Satan!)
>
> Jacob Santos
>
> [1] His saying to the contrary of himself being god doesn't not  
> prove that he is not god.
>
>
> Joost de Valk wrote:
>> OMG, did I really start this? :)
>>
>> My perspective: Matt isn't god, but he decides in these matters, I  
>> just want to hear his verdict :)
>>
>> On Jan 30, 2009, at 10:06 PM, Jacob Santos wrote:
>>
>>> Lets list the reasons for and against going PHP5:
>>>
>>> Against:
>>>
>>> 1. Matt Mullenweg be hating PHP5 and he be the God. (Hail Satan!)
>>> 2. It would leave out 40% of current users (from last posted  
>>> statistics from last year).
>>> 3. Did I mention Matt Mullenweg not liking PHP5? Okay, good.
>>>
>>> For:
>>>
>>> 1. PHP5 is faster than PHP4 (Most benchmarks of PHP 5.2.x show  
>>> considerable improvement, PHP5.3 is so much faster than PHP4, that  
>>> they didn't even attempt to compare it).
>>> 2. PHP5 has PDO, and mysqli.
>>> 3. PHP5.3 has namespaces!
>>> 4. PHP5.3 has closures! No more create_function nonsense, you'll  
>>> be able to actually create a real lambda and closure for usage in  
>>> preg_replace_callback().
>>> 5. PHP5 has better object oriented support, re: visibility, true  
>>> static methods and members, class constants.
>>> 6. PHP5 has OO chaining: $obj->this()->shit()->is()->awesome();
>>> 7. Actually being worked on actively (PHP4 is EOL early last year  
>>> and no updates for about 8 months now).
>>>
>>> So I mean, supporting PHP4 only really has one reason for going  
>>> for it and PHP5 has many reason!
>>>
>>> Jacob Santos
>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From niladam at gmail.com  Fri Jan 30 21:41:42 2009
From: niladam at gmail.com (madalin)
Date: Fri Jan 30 21:42:03 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <CB97FEC0-9EC2-4AAD-B156-A9BF6AF3B94F@yoast.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
	<4982BF18.5010909@mullenweg.com>
	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
	<ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>
	<49836BE7.1000204@santosj.name>
	<0D0434D4-9EFF-48DC-99E5-ECD036028798@yoast.com>
	<49836E0C.9060300@santosj.name>
	<CB97FEC0-9EC2-4AAD-B156-A9BF6AF3B94F@yoast.com>
Message-ID: <df809b110901301341t298d508dwbf93c7a6dc54d8cb@mail.gmail.com>

I must say that this is starting to look interesting. Please proceed :)

On Fri, Jan 30, 2009 at 11:39 PM, Joost de Valk <joost@yoast.com> wrote:
> Jacob,
>
> as a former Theology student, I'll ask you kindly not to go into this
> discussion with me, before you know it, we'll be discussing how many angels
> fit on an wp_init action :)
>
> Best,
> Joost
>
>
> On Jan 30, 2009, at 10:15 PM, Jacob Santos wrote:
>
>> Blasphemy! You sir have insulted my religion and I demand an apology.
>> There is no evidence to the contrary that Matt Mullenweg is not currently
>> God [1], therefore I reserve the right to believe him to be so. Just like
>> you can neither disprove Christianity (nor prove it for that matter either).
>>
>> Also, I kind of killed a few goats and kind of drank their blood, so like,
>> um, I'll feel really stupid if Matt wasn't God. (Hail Satan!)
>>
>> Jacob Santos
>>
>> [1] His saying to the contrary of himself being god doesn't not prove that
>> he is not god.
>>
>>
>> Joost de Valk wrote:
>>>
>>> OMG, did I really start this? :)
>>>
>>> My perspective: Matt isn't god, but he decides in these matters, I just
>>> want to hear his verdict :)
>>>
>>> On Jan 30, 2009, at 10:06 PM, Jacob Santos wrote:
>>>
>>>> Lets list the reasons for and against going PHP5:
>>>>
>>>> Against:
>>>>
>>>> 1. Matt Mullenweg be hating PHP5 and he be the God. (Hail Satan!)
>>>> 2. It would leave out 40% of current users (from last posted statistics
>>>> from last year).
>>>> 3. Did I mention Matt Mullenweg not liking PHP5? Okay, good.
>>>>
>>>> For:
>>>>
>>>> 1. PHP5 is faster than PHP4 (Most benchmarks of PHP 5.2.x show
>>>> considerable improvement, PHP5.3 is so much faster than PHP4, that they
>>>> didn't even attempt to compare it).
>>>> 2. PHP5 has PDO, and mysqli.
>>>> 3. PHP5.3 has namespaces!
>>>> 4. PHP5.3 has closures! No more create_function nonsense, you'll be able
>>>> to actually create a real lambda and closure for usage in
>>>> preg_replace_callback().
>>>> 5. PHP5 has better object oriented support, re: visibility, true static
>>>> methods and members, class constants.
>>>> 6. PHP5 has OO chaining: $obj->this()->shit()->is()->awesome();
>>>> 7. Actually being worked on actively (PHP4 is EOL early last year and no
>>>> updates for about 8 months now).
>>>>
>>>> So I mean, supporting PHP4 only really has one reason for going for it
>>>> and PHP5 has many reason!
>>>>
>>>> Jacob Santos
>>>>
>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Regards,
madalin
http://madalin.eu
From wordpress at santosj.name  Fri Jan 30 22:02:47 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Fri Jan 30 22:03:02 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <CB97FEC0-9EC2-4AAD-B156-A9BF6AF3B94F@yoast.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>	<943689.39344.qm@web25901.mail.ukl.yahoo.com>	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>	<4982BF18.5010909@mullenweg.com>	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>	<ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>	<49836BE7.1000204@santosj.name>	<0D0434D4-9EFF-48DC-99E5-ECD036028798@yoast.com>	<49836E0C.9060300@santosj.name>
	<CB97FEC0-9EC2-4AAD-B156-A9BF6AF3B94F@yoast.com>
Message-ID: <49837907.2060006@santosj.name>

No, sir, I kindly ask that we do continue this discussion off list, so 
that I may pounce on your so called "Theology" knowledge and whatnot. 
No, sire, I do not need such things as "knowledge" and experience, 
because I know deep, deep, way deep down that my religion is right and 
every other religion is wrong. Therefore, I will say, respectfully of 
course, that the answer to how many angels fit in an wp_init action is 
zero, nada, because Angels do not exist.

Only Satan, Matt, and the Flying Spaghetti Monster exist. All other 
abnormities, religious constructs, and paranormal are like the Big Foot, 
they just don't exist no matter how often so drunk guy out in the woods 
says otherwise.

The verdict is still out on whether WordPress actually exists, or is 
some otherworldly fivth dimension being, locked in eternal conflict with 
he-who-must-not-be-named (aka Habari).

Jacob Santos

* Well, since PHP5 discussion is completely irrelevant, we might as well 
have fun with it. Right? See reason 2 in the Against list. Also, the 
answer is still zero.

Joost de Valk wrote:
> Jacob,
>
> as a former Theology student, I'll ask you kindly not to go into this 
> discussion with me, before you know it, we'll be discussing how many 
> angels fit on an wp_init action :)
>
> Best,
> Joost
>
>
> On Jan 30, 2009, at 10:15 PM, Jacob Santos wrote:
>
>> Blasphemy! You sir have insulted my religion and I demand an apology. 
>> There is no evidence to the contrary that Matt Mullenweg is not 
>> currently God [1], therefore I reserve the right to believe him to be 
>> so. Just like you can neither disprove Christianity (nor prove it for 
>> that matter either).
>>
>> Also, I kind of killed a few goats and kind of drank their blood, so 
>> like, um, I'll feel really stupid if Matt wasn't God. (Hail Satan!)
>>
>> Jacob Santos
>>
>> [1] His saying to the contrary of himself being god doesn't not prove 
>> that he is not god.
>>
>>
>> Joost de Valk wrote:
>>> OMG, did I really start this? :)
>>>
>>> My perspective: Matt isn't god, but he decides in these matters, I 
>>> just want to hear his verdict :)
>>>
>>> On Jan 30, 2009, at 10:06 PM, Jacob Santos wrote:
>>>
>>>> Lets list the reasons for and against going PHP5:
>>>>
>>>> Against:
>>>>
>>>> 1. Matt Mullenweg be hating PHP5 and he be the God. (Hail Satan!)
>>>> 2. It would leave out 40% of current users (from last posted 
>>>> statistics from last year).
>>>> 3. Did I mention Matt Mullenweg not liking PHP5? Okay, good.
>>>>
>>>> For:
>>>>
>>>> 1. PHP5 is faster than PHP4 (Most benchmarks of PHP 5.2.x show 
>>>> considerable improvement, PHP5.3 is so much faster than PHP4, that 
>>>> they didn't even attempt to compare it).
>>>> 2. PHP5 has PDO, and mysqli.
>>>> 3. PHP5.3 has namespaces!
>>>> 4. PHP5.3 has closures! No more create_function nonsense, you'll be 
>>>> able to actually create a real lambda and closure for usage in 
>>>> preg_replace_callback().
>>>> 5. PHP5 has better object oriented support, re: visibility, true 
>>>> static methods and members, class constants.
>>>> 6. PHP5 has OO chaining: $obj->this()->shit()->is()->awesome();
>>>> 7. Actually being worked on actively (PHP4 is EOL early last year 
>>>> and no updates for about 8 months now).
>>>>
>>>> So I mean, supporting PHP4 only really has one reason for going for 
>>>> it and PHP5 has many reason!
>>>>
>>>> Jacob Santos
>>>>
>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From andre.renaut at gmail.com  Fri Jan 30 22:35:11 2009
From: andre.renaut at gmail.com (=?UTF-8?Q?andr=C3=A9_renaut?=)
Date: Fri Jan 30 22:35:21 2009
Subject: [wp-hackers] Re: PHP5
Message-ID: <8810a71a0901301435r3675d60dj68a586090ca30849@mail.gmail.com>

Who is God ?
From otto at ottodestruct.com  Fri Jan 30 22:36:40 2009
From: otto at ottodestruct.com (Otto)
Date: Fri Jan 30 22:36:52 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <0D0434D4-9EFF-48DC-99E5-ECD036028798@yoast.com>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>
	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
	<4982BF18.5010909@mullenweg.com>
	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
	<ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>
	<49836BE7.1000204@santosj.name>
	<0D0434D4-9EFF-48DC-99E5-ECD036028798@yoast.com>
Message-ID: <161617690901301436x31e4b14dw1d67d69eefc91f3f@mail.gmail.com>

On Fri, Jan 30, 2009 at 3:08 PM, Joost de Valk <joost@yoast.com> wrote:
> OMG, did I really start this? :)

I warned you! But did you listen? Nooooooo!
From mikeschinkel at newclarity.net  Fri Jan 30 22:36:39 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 30 22:38:38 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <49836BE7.1000204@santosj.name>
Message-ID: <4420074.661233354050578.JavaMail.DELL-1405$@Dell-1405>

> So I mean, supporting PHP4 only really has one reason 
> for going for it and PHP5 has many reason!

"Besides that's one thing Mrs. Lincoln, how was the play?"

(With apologies to those outside the US who are unfamiliar with our US History.)

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Jacob Santos" <wordpress@santosj.name>
To: wp-hackers@lists.automattic.com
Sent: Friday, January 30, 2009 4:06:47 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] PHP5

Lets list the reasons for and against going PHP5:

Against:

1. Matt Mullenweg be hating PHP5 and he be the God. (Hail Satan!)
2. It would leave out 40% of current users (from last posted statistics 
from last year).
3. Did I mention Matt Mullenweg not liking PHP5? Okay, good.

For:

1. PHP5 is faster than PHP4 (Most benchmarks of PHP 5.2.x show 
considerable improvement, PHP5.3 is so much faster than PHP4, that they 
didn't even attempt to compare it).
2. PHP5 has PDO, and mysqli.
3. PHP5.3 has namespaces!
4. PHP5.3 has closures! No more create_function nonsense, you'll be able 
to actually create a real lambda and closure for usage in 
preg_replace_callback().
5. PHP5 has better object oriented support, re: visibility, true static 
methods and members, class constants.
6. PHP5 has OO chaining: $obj->this()->shit()->is()->awesome();
7. Actually being worked on actively (PHP4 is EOL early last year and no 
updates for about 8 months now).

So I mean, supporting PHP4 only really has one reason for going for it 
and PHP5 has many reason!

Jacob Santos


_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From otto at ottodestruct.com  Fri Jan 30 22:58:06 2009
From: otto at ottodestruct.com (Otto)
Date: Fri Jan 30 22:58:18 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <49836BE7.1000204@santosj.name>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<d238bd620901291010t63c7771hb1e202d930165ef0@mail.gmail.com>
	<161617690901291018q38a499bak34b42c72ce4d7ef6@mail.gmail.com>
	<349fe48b0901291041w449e9445ocdc08f26427d341c@mail.gmail.com>
	<674b4a3b0901291045k6cfc437avb588744c89cc872a@mail.gmail.com>
	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
	<4982BF18.5010909@mullenweg.com>
	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
	<ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>
	<49836BE7.1000204@santosj.name>
Message-ID: <161617690901301458o58ef9a81n9fc5811ab4d1edec@mail.gmail.com>

On Fri, Jan 30, 2009 at 3:06 PM, Jacob Santos <wordpress@santosj.name> wrote:
> Lets list the reasons for and against going PHP5:
>
> Against:
>
> 1. Matt Mullenweg be hating PHP5 and he be the God. (Hail Satan!)
> 2. It would leave out 40% of current users (from last posted statistics from
> last year).
> 3. Did I mention Matt Mullenweg not liking PHP5? Okay, good.
>
> For:
>
> 1. PHP5 is faster than PHP4 (Most benchmarks of PHP 5.2.x show considerable
> improvement, PHP5.3 is so much faster than PHP4, that they didn't even
> attempt to compare it).
> 2. PHP5 has PDO, and mysqli.
> 3. PHP5.3 has namespaces!
> 4. PHP5.3 has closures! No more create_function nonsense, you'll be able to
> actually create a real lambda and closure for usage in
> preg_replace_callback().
> 5. PHP5 has better object oriented support, re: visibility, true static
> methods and members, class constants.
> 6. PHP5 has OO chaining: $obj->this()->shit()->is()->awesome();
> 7. Actually being worked on actively (PHP4 is EOL early last year and no
> updates for about 8 months now).
>
> So I mean, supporting PHP4 only really has one reason for going for it and
> PHP5 has many reason!
>
> Jacob Santos
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


I like PHP 5. I only use PHP 5. But I gotta agree with Matt here.
Setting a site up for use of PHP 5 on many hosts is a) not the default
and b) not obvious.

It's too soon. Wait for PHP5 to be ubiquitous. I suspect that'll be
less than a year from now.

That said, we should start supporting more PHP5-only features in WP.
Stuff that doesn't show up if your PHP version doesn't support it,
sort of thing. I cannot say what these will be, but if you see a
enhancement ticket solved by use of PHP5-only functionality, then it
should be considered more instead of rejected out of hand.
From mikeschinkel at newclarity.net  Fri Jan 30 22:57:40 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jan 30 22:58:22 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <4420074.661233354050578.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <21402629.721233356269571.JavaMail.DELL-1405$@Dell-1405>

Me and my typos. Sheesh. I meant:

"Besides that one thing Mrs. Lincoln, how was the play?"

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Mike Schinkel" <mikeschinkel@newclarity.net>
To: wp-hackers@lists.automattic.com
Sent: Friday, January 30, 2009 5:36:39 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] PHP5

> So I mean, supporting PHP4 only really has one reason 
> for going for it and PHP5 has many reason!

"Besides that's one thing Mrs. Lincoln, how was the play?"

(With apologies to those outside the US who are unfamiliar with our US History.)

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Jacob Santos" <wordpress@santosj.name>
To: wp-hackers@lists.automattic.com
Sent: Friday, January 30, 2009 4:06:47 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] PHP5

Lets list the reasons for and against going PHP5:

Against:

1. Matt Mullenweg be hating PHP5 and he be the God. (Hail Satan!)
2. It would leave out 40% of current users (from last posted statistics 
from last year).
3. Did I mention Matt Mullenweg not liking PHP5? Okay, good.

For:

1. PHP5 is faster than PHP4 (Most benchmarks of PHP 5.2.x show 
considerable improvement, PHP5.3 is so much faster than PHP4, that they 
didn't even attempt to compare it).
2. PHP5 has PDO, and mysqli.
3. PHP5.3 has namespaces!
4. PHP5.3 has closures! No more create_function nonsense, you'll be able 
to actually create a real lambda and closure for usage in 
preg_replace_callback().
5. PHP5 has better object oriented support, re: visibility, true static 
methods and members, class constants.
6. PHP5 has OO chaining: $obj->this()->shit()->is()->awesome();
7. Actually being worked on actively (PHP4 is EOL early last year and no 
updates for about 8 months now).

So I mean, supporting PHP4 only really has one reason for going for it 
and PHP5 has many reason!

Jacob Santos


_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From wp-hackers at itsananderson.com  Fri Jan 30 23:09:37 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Fri Jan 30 23:09:49 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <21402629.721233356269571.JavaMail.DELL-1405$@Dell-1405>
References: <4420074.661233354050578.JavaMail.DELL-1405$@Dell-1405>
	<21402629.721233356269571.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <6dbcd2670901301509t46441da4tdc46d2fd9a9420e2@mail.gmail.com>

In hopes of distracting the "religious" fanatics I'll add this question to
the mix.Does the fact that WordPress chooses to support nearly all users
mean that plugin developers have to?
If you want to screw things up for 40% of users, can't you write a plugin
that uses PHP5 constructs?

Seriously though, I don't understand why everyone is so upset about the
version of PHP that WordPress uses.
The argument that it's slower is only half true. Servers with PHP5 WILL run
WordPress faster (there's nowhere in WordPress that says "I support PHP4, so
run me slowly).
The only place you'll see a slow down is where older (and slower) constructs
are used, rather than ones that are new to PHP5. I don't think this really
contributes THAT much to the speed (though I could be wrong).

Again, I don't think the version that WordPress supports has to dictate what
version plugin developers support, as long as they're willing to leave a
large fraction of the WordPress community out in the cold.
To me, though, that's like creating a Theme that looks good in FireFox,
Opera, Safari, and Chrome (add any other modern, compliant browser you
want), but looks like crap in any version of IE.

On Fri, Jan 30, 2009 at 5:57 PM, Mike Schinkel
<mikeschinkel@newclarity.net>wrote:

> Me and my typos. Sheesh. I meant:
>
> "Besides that one thing Mrs. Lincoln, how was the play?"
>
> -Mike Schinkel
> http://mikeschinkel.com/
>
> ----- Original Message -----
> From: "Mike Schinkel" <mikeschinkel@newclarity.net>
> To: wp-hackers@lists.automattic.com
> Sent: Friday, January 30, 2009 5:36:39 PM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] PHP5
>
> > So I mean, supporting PHP4 only really has one reason
> > for going for it and PHP5 has many reason!
>
> "Besides that's one thing Mrs. Lincoln, how was the play?"
>
> (With apologies to those outside the US who are unfamiliar with our US
> History.)
>
> -Mike Schinkel
> http://mikeschinkel.com/
>
> ----- Original Message -----
> From: "Jacob Santos" <wordpress@santosj.name>
> To: wp-hackers@lists.automattic.com
> Sent: Friday, January 30, 2009 4:06:47 PM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] PHP5
>
> Lets list the reasons for and against going PHP5:
>
> Against:
>
> 1. Matt Mullenweg be hating PHP5 and he be the God. (Hail Satan!)
> 2. It would leave out 40% of current users (from last posted statistics
> from last year).
> 3. Did I mention Matt Mullenweg not liking PHP5? Okay, good.
>
> For:
>
> 1. PHP5 is faster than PHP4 (Most benchmarks of PHP 5.2.x show
> considerable improvement, PHP5.3 is so much faster than PHP4, that they
> didn't even attempt to compare it).
> 2. PHP5 has PDO, and mysqli.
> 3. PHP5.3 has namespaces!
> 4. PHP5.3 has closures! No more create_function nonsense, you'll be able
> to actually create a real lambda and closure for usage in
> preg_replace_callback().
> 5. PHP5 has better object oriented support, re: visibility, true static
> methods and members, class constants.
> 6. PHP5 has OO chaining: $obj->this()->shit()->is()->awesome();
> 7. Actually being worked on actively (PHP4 is EOL early last year and no
> updates for about 8 months now).
>
> So I mean, supporting PHP4 only really has one reason for going for it
> and PHP5 has many reason!
>
> Jacob Santos
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Will Anderson
http://www.itsananderson.com/
From emmensetech at gmail.com  Fri Jan 30 23:13:07 2009
From: emmensetech at gmail.com (Aaron Brazell)
Date: Fri Jan 30 23:13:18 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <49837907.2060006@santosj.name>
References: <ca7320070901290949r2a9ec109n64e919d6dda75982@mail.gmail.com>
	<161617690901291059l72d5a714i30a7ca26295a25c0@mail.gmail.com>
	<4982BF18.5010909@mullenweg.com>
	<AD4EEEA8-2722-4D7F-BEA7-4AAD5388A025@yoast.com>
	<ca7320070901300654u53e397d1x34837417dc72cabb@mail.gmail.com>
	<49836BE7.1000204@santosj.name>
	<0D0434D4-9EFF-48DC-99E5-ECD036028798@yoast.com>
	<49836E0C.9060300@santosj.name>
	<CB97FEC0-9EC2-4AAD-B156-A9BF6AF3B94F@yoast.com>
	<49837907.2060006@santosj.name>
Message-ID: <ca7320070901301513l3190f979u848e8351012ee5e2@mail.gmail.com>

On Fri, Jan 30, 2009 at 5:02 PM, Jacob Santos <wordpress@santosj.name>wrote:

> No, sir, I kindly ask that we do continue this discussion off list, so that
> I may pounce on your so called "Theology" knowledge and whatnot. No, sire, I
> do not need such things as "knowledge" and experience, because I know deep,
> deep, way deep down that my religion is right and every other religion is
> wrong. Therefore, I will say, respectfully of course, that the answer to how
> many angels fit in an wp_init action is zero, nada, because Angels do not
> exist.
>
> Only Satan, Matt, and the Flying Spaghetti Monster exist. All other
> abnormities, religious constructs, and paranormal are like the Big Foot,
> they just don't exist no matter how often so drunk guy out in the woods says
> otherwise.
>
> The verdict is still out on whether WordPress actually exists, or is some
> otherworldly fivth dimension being, locked in eternal conflict with
> he-who-must-not-be-named (aka Habari).
>
> Jacob Santos
>
> * Well, since PHP5 discussion is completely irrelevant, we might as well
> have fun with it. Right? See reason 2 in the Against list. Also, the answer
> is still zero.
>

I'm not really a religious fanatic, though clearly the answer to the number
of angels on a wp_init action is 42.

I will also say that I'd love it if this discussion could be had over a
beer, in front of the Xbox 360, or over on Twitter. Anywhere but in my
inbox.

Kthxbai!
-- 
Aaron Brazell
web:: www.technosailor.com
phone:: 410-608-6620
skype:: technosailor
twitter:: @technosailor
From otto at ottodestruct.com  Fri Jan 30 23:48:17 2009
From: otto at ottodestruct.com (Otto)
Date: Fri Jan 30 23:48:26 2009
Subject: [wp-hackers] PHP5
In-Reply-To: <6dbcd2670901301509t46441da4tdc46d2fd9a9420e2@mail.gmail.com>
References: <4420074.661233354050578.JavaMail.DELL-1405$@Dell-1405>
	<21402629.721233356269571.JavaMail.DELL-1405$@Dell-1405>
	<6dbcd2670901301509t46441da4tdc46d2fd9a9420e2@mail.gmail.com>
Message-ID: <161617690901301548i3d9d5772h5ef01cba2a91b39f@mail.gmail.com>

On Fri, Jan 30, 2009 at 5:09 PM, Will Anderson
<wp-hackers@itsananderson.com> wrote:
> In hopes of distracting the "religious" fanatics I'll add this question to
> the mix.Does the fact that WordPress chooses to support nearly all users
> mean that plugin developers have to?
> If you want to screw things up for 40% of users, can't you write a plugin
> that uses PHP5 constructs?

Yes, and I did just that with the Automatic Timezone plugin. It checks
to see if the plugin will work (basically if you have PHP 5 and up),
and if it won't, then it deactivates itself when you try to activate
it.

-Otto
From wordpress at dd32.id.au  Sat Jan 31 08:48:05 2009
From: wordpress at dd32.id.au (DD32)
Date: Sat Jan 31 08:48:15 2009
Subject: [wp-hackers] widgets and themes issue
In-Reply-To: <c6c45a350901301103r77cd01dr22a6dec77fd32293@mail.gmail.com>
References: <c6c45a350901301103r77cd01dr22a6dec77fd32293@mail.gmail.com>
Message-ID: <45055a190901310048u5d2cc480g1a5176883cc541d5@mail.gmail.com>

2009/1/31 Rich Pedley <elflop@googlemail.com>:
> She enabled a widget in a theme, then changed themes and found that
> that widget, Pages for example, was then no longer available for use
> in the enabled theme. She had to revert back to the old one, disable
> the widget there, change back to the new theme and re-enable it.
>
> Bug, or intended behaviour?

I think I've seen a Trac ticket for something similar.. If a Sidebar
is removed whilst it has widgets on it, Those widgets are unnavailable
for the other sidebars.

I guess maybe upon a Theme change, Any sidebars which are not
registered in the new theme need to be cleared out.. Although i
thought that might already happen..
From mikeschinkel at newclarity.net  Sat Jan 31 09:12:43 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat Jan 31 09:13:03 2009
Subject: [wp-hackers] "Report Abuse" for comments
In-Reply-To: <33530255.1141233393153108.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <22925302.1161233393170208.JavaMail.DELL-1405$@Dell-1405>

Hi all:

My client want "report abuse" functionality for comments which is easy to implement with AJAX, but my concern is providing them with a way to review and moderate reported comments. The comment moderation queue would be perfect for this but it appears after reviewing /wp-admin/edit-comments.php that it was not designed to be extended (am I wrong here?)

Based also on a review of /wp-include/comments.php the most appropriate place to tag it would be to use "comment_approved" and give it a value of "abuse" (that field gets 0 for hold (pending), 1 for approve (approved), and "spam" for spam.) However, the admin console wouldn't support abuse unless I really hacked it and I wouldn't want to hack it until my hacks could be rolled into v2.8.

Thoughts?  (Or is there a "hook"able way to do this that I've missed?)

Thanks in advance.

-Mike Schinkel
http://mikeschinkel.com/
From viper at viper007bond.com  Sat Jan 31 09:50:47 2009
From: viper at viper007bond.com (Viper007Bond)
Date: Sat Jan 31 09:50:58 2009
Subject: [wp-hackers] "Report Abuse" for comments
In-Reply-To: <22925302.1161233393170208.JavaMail.DELL-1405$@Dell-1405>
References: <33530255.1141233393153108.JavaMail.DELL-1405$@Dell-1405>
	<22925302.1161233393170208.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <8f93a7390901310150t7b1996abl97dad1fa21d30a5e@mail.gmail.com>

Yes, comment_approved would be the way to go.

Adding the link at the top if easy due to the "comment_status_links" filter.

Getting _wp_get_comment_list() to return your flagged comments for you is
the hard part as it appears to be hard coded and without a filter anywhere.
There should probably be on on the query inside the function.

On Sat, Jan 31, 2009 at 1:12 AM, Mike Schinkel
<mikeschinkel@newclarity.net>wrote:

> Hi all:
>
> My client want "report abuse" functionality for comments which is easy to
> implement with AJAX, but my concern is providing them with a way to review
> and moderate reported comments. The comment moderation queue would be
> perfect for this but it appears after reviewing /wp-admin/edit-comments.php
> that it was not designed to be extended (am I wrong here?)
>
> Based also on a review of /wp-include/comments.php the most appropriate
> place to tag it would be to use "comment_approved" and give it a value of
> "abuse" (that field gets 0 for hold (pending), 1 for approve (approved), and
> "spam" for spam.) However, the admin console wouldn't support abuse unless I
> really hacked it and I wouldn't want to hack it until my hacks could be
> rolled into v2.8.
>
> Thoughts?  (Or is there a "hook"able way to do this that I've missed?)
>
> Thanks in advance.
>
> -Mike Schinkel
> http://mikeschinkel.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/ | http://www.finalgear.com/
From mikeschinkel at newclarity.net  Sat Jan 31 15:44:53 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat Jan 31 15:45:10 2009
Subject: [wp-hackers] "Report Abuse" for comments
In-Reply-To: <8f93a7390901310150t7b1996abl97dad1fa21d30a5e@mail.gmail.com>
Message-ID: <13884831.1181233416706970.JavaMail.DELL-1405$@Dell-1405>

Thanks, that helps.

>> There should probably be on on the query inside the function.

Do you mean this is something to add to a v2.8+, or something else?

-Mike Schinkel
http://mikeschinkel.com/

----- Original Message -----
From: "Viper007Bond" <viper@viper007bond.com>
To: wp-hackers@lists.automattic.com
Sent: Saturday, January 31, 2009 4:50:47 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] "Report Abuse" for comments

Yes, comment_approved would be the way to go.

Adding the link at the top if easy due to the "comment_status_links" filter.

Getting _wp_get_comment_list() to return your flagged comments for you is
the hard part as it appears to be hard coded and without a filter anywhere.
There should probably be on on the query inside the function.

On Sat, Jan 31, 2009 at 1:12 AM, Mike Schinkel
<mikeschinkel@newclarity.net>wrote:

From elflop at googlemail.com  Sat Jan 31 16:06:47 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Sat Jan 31 16:07:11 2009
Subject: [wp-hackers] widgets and themes issue
In-Reply-To: <45055a190901310048u5d2cc480g1a5176883cc541d5@mail.gmail.com>
References: <c6c45a350901301103r77cd01dr22a6dec77fd32293@mail.gmail.com>
	<45055a190901310048u5d2cc480g1a5176883cc541d5@mail.gmail.com>
Message-ID: <c6c45a350901310806w13daedey656f0a52a1add374@mail.gmail.com>

2009/1/31 DD32 <wordpress@dd32.id.au>:
> 2009/1/31 Rich Pedley <elflop@googlemail.com>:
>> She enabled a widget in a theme, then changed themes and found that
>> that widget, Pages for example, was then no longer available for use
>> in the enabled theme. She had to revert back to the old one, disable
>> the widget there, change back to the new theme and re-enable it.
>>
>> Bug, or intended behaviour?
>
> I think I've seen a Trac ticket for something similar.. If a Sidebar
> is removed whilst it has widgets on it, Those widgets are unnavailable
> for the other sidebars.

Found it:
http://trac.wordpress.org/ticket/7851

can't login on there at the moment so unable to update it myself.
-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From mpwalsh8 at gmail.com  Sat Jan 31 23:20:09 2009
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Sat Jan 31 23:20:24 2009
Subject: [wp-hackers] widgets and themes issue
In-Reply-To: <c6c45a350901301103r77cd01dr22a6dec77fd32293@mail.gmail.com>
References: <c6c45a350901301103r77cd01dr22a6dec77fd32293@mail.gmail.com>
Message-ID: <bd35beb50901311520s7243d837h38b3ad1d29171b45@mail.gmail.com>

I encountered that problem before - first time it happened it took me
a while to figure it out.  It is pretty common with themes that define
more than one side bar.

Mike

On Fri, Jan 30, 2009 at 2:03 PM, Rich Pedley <elflop@googlemail.com> wrote:
> I don't do themes - if you've ever looked at my CSS you'll know why.
> But my other 'alf does, and has been quite busy recently releasing
> quite a few. She seems to have found what seems to be a fairly major
> issue - but I'm not sure if it is a bug or not.
>
> She enabled a widget in a theme, then changed themes and found that
> that widget, Pages for example, was then no longer available for use
> in the enabled theme. She had to revert back to the old one, disable
> the widget there, change back to the new theme and re-enable it.
>
> Bug, or intended behaviour?
>
> Rich
> --
> my mind is on a permanent tangent
> http://cms.elfden.co.uk/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
