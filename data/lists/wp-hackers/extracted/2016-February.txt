From cjsh at cjshayward.com  Thu Feb  4 23:13:19 2016
From: cjsh at cjshayward.com (C.J.S. Hayward)
Date: Thu, 4 Feb 2016 17:13:19 -0600
Subject: [wp-hackers] A n00b's rough road
Message-ID: <CAE6_B5Rp=W2PS+UfkdzoZL=2yf_x+ePvbppLv+WrPRSY4ttA9g@mail.gmail.com>

I posted a concern, essentially that I had to cut Wordpress against the
grain to reach the low bar of not violating even one of NN Group's "Top 10
Mistakes in Web Design." It has been said decades back, "*You can tell how
advanced of a society we live in when Fortran is the language of
supercomputers,*" and perhaps we could say in another arena, "*We can tell
the level of usability maturity when Wordpress's twentysixteen flagship
theme requires you to child-theme, or something more esoteric, if you want
anything but one single link color combined with total failure to provide
discernibly different appearance between visited and unvisited links.*"

*I was trying to think of how to say this without just fighting words, but
I have failed at that. As discussed below, I've had a rocky road in getting
Wordpress to function at a higher-level usability. Besides getting a nasty
warning when I posted on wordpress.stackexchange.com
<http://wordpress.stackexchange.com>, I was told I should tell core
developers. I ask your forgiveness if I've sent this to the wrong email
address; this looked like the best I could give without chasing down links
in individual developer sites.*

*I should add that I was just trying to write a minimum viable essay, and
did not express my profound gratitude for your, or I may say, "our",
software.*

Become an up-to-date Wordpress blogger?the hard way! (A non-religious
rant?or is it?)
Feb 4, 2016

   - 0 views
   -
   0 Likes
   -
   0 Comments
   <https://www.linkedin.com/pulse/become-up-to-date-wordpress-bloggerthe-hard-way-rantor-hayward?published=t#comments-8740083328098472437>


   - Share on LinkedIn
   <https://www.linkedin.com/shareArticle?url=https%3A%2F%2Fwww.linkedin.com%2Fpulse%2Fbecome-up-to-date-wordpress-bloggerthe-hard-way-rantor-hayward>
   - Share on Facebook
   <https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.linkedin.com%2Fpulse%2Fbecome-up-to-date-wordpress-bloggerthe-hard-way-rantor-hayward&t=Become%20an%20up-to-date%20Wordpress%20blogger%E2%80%94the%20hard%20way!%20(A%20non-religious%20rant%E2%80%94or%20is%20it%3F)>
   - Share on Twitter
   <https://twitter.com/intent/tweet?&url=https%3A%2F%2Fwww.linkedin.com%2Fpulse%2Fbecome-up-to-date-wordpress-bloggerthe-hard-way-rantor-hayward&text=%22Become%20an%20up-to-date%20Wordpress%20blogger%E2%80%94the%20hard%20way!%20(A%20non-religious%20rant%E2%80%94or%20is%20it%3F)%22%20by%20%40CJSHayward%20on%20%40LinkedIn>

A lot of hard work, now yours to visit!

The "Don't be like Dave" warning about religious rants as only subtracted
value from serious forums, so I would ask the prissy to forgive me, or at
least realize that a screenshot of a religion-oriented site as meant as
something other than evangelism...

I have an announcement, albeit one that was longer in the making before.
Acting on a blow to my pride in the form of a marketing recommendation, I
moved to Wordpress as a CMS (or really, for more reasons than just being a
CMS), and part of it was a recognition that my design was not as great as
it could have been. Going with something standard usually communicates much
better than trying to invent something different enough to impress your
personality on the reader.*Some people have said in interviewing that if
you set out to make an impression, that will almost certainly be the
impression you make.*
Quick! What is "*the website*"?

The next level of nuance in usability, easily available but given an icy
reception, is that people don't really think of Corporation A's website, or
person B's blog, but as I have repeatedly heard it, "*the website*",
meaning the web as an undifferentiated whole. There is a political
perspective common to anybody who builds for the web that there is a large
federation of connected lands, where any large organization's website has
multiple connections and distinctions within their little country, when it
simply never occurs to a great many people to think of "the website" as
having intricate layers of political boundaries. So aside from not wanting
to express personality in my design beyond trying to make a good site, I
am really not fighting the reality that many visitors will not perceive any
boundary line between the territories of bloggers. There's a limited amount
of attention I get if I'm lucky. I really, really have better things to do
with that scant quota than try to fight their conception of a single,
undifferentiated "*website*".

As I was working, there were certain things I found a bit rough. The pride
it insulted was a pride that left me thinking I could write HTML better
than a CMS could, and on that point I have been coding HTML for decades and
I code much better than any CMS: not because I excel, but because
CMS-generated HTML is bletcherous and a marginally skilled intern should be
significantly better at coding some particular page.
Is wordpress.stackexchange.com preaching to the choir?

But the greatest surprise came to me today, when I was trying to ask
wordpress.stackexchange.com about some things I really didn't know what to
do with. I wrote one question, read responses, and was surprised when I
tried to write a followup:

You have reached your question limit*It looks like you might need a break -
take a breather and come back soon!*

You've asked 2 questions recently, some of which have not been received
very well by the community. Everyone learns at their own pace, and it?s
okay to make some mistakes. However, the reception your questions have
received thus far might ultimately block your account from asking questions
entirely.

It's been 1 days since you asked your last question. We ask that you wait 2
days before asking again. Use this time to revisit your previous questions
<http://wordpress.stackexchange.com/users/current?tab=questions>, editing
to address any issues that folks have pointed out in comments.

*Recommended reading:*

- tips on asking great questions
<http://wordpress.stackexchange.com/help/how-to-ask> as well as our
guidance on
- which questions are allowed here
<http://wordpress.stackexchange.com/help/on-topic>

*Additional advice*

- Examining highly-scored questions in the tags that interest you is a
great way to study how to ask better questions, that also get better
answers much sooner!
- We don?t demand perfection, but *pleasemake sure you use proper grammar,
spelling and capitalization*, it really helps!
- Improve downvoted questions rather than deleting them.
- Do not delete your account, create new accounts, or otherwise attempt to
circumvent these restrictions.
- Do not contact us regarding these restrictions, they cannot be lifted.

Failure to heed this advice may increase the severity of these
restrictions.

*For more information*

See: Why won?t the system allow me to ask questions for several days?
<http://meta.stackoverflow.com/questions/271542/why-wont-the-system-allow-me-to-ask-questions-for-several-days/271543#271543>


It sometimes takes a few attempts at a good question in order to fully
learn how our system works, and what the community expects from folks
seeking answers. Just *do your best* to make sure you've improved the
quality of your existing questions, and we'll see you in 2 days!

What was my offense? Let me quote the discussion, including one response,
one informing me that themes aren't there to express precious personality,
and the other one was dismissing research I had tried to appeal to.

(Jakob Nielsen was one of the founders of the discipline of web usability,
who as a student of Thomas Kuhn might predict, was influential in ushering
in one paradigm shift and in holding out against the next; he has also
commented that usability studies age very well for almost any technical
studies because we do not come out sporting killer-app-style genetic
improvements on a six-month marketing timeline. He is, incidentally, one of
the strongest voices I've read against glitzy attempts to wow others
with personality.)

I wrote:

*In postings from 1996, Jakob Nielsen said that the research suggested that
presenting visited and unvisited links in two separate colors is profoundly
better than going with one-color-fits-all. He give sundry guidlines
including having unvisited links look vibrant and alive and visited links
look dull and washed out. Krug's Don't make me think! is inconsistent but
in the last recent edition, he says to pick two colors and stick with them.*

*Twentysixteen allows you complete freedom in choosing one color for all of
your links: kind of like Boss Tweed's saying, "I don't care who does the
electing, as long as I get to do the nominating."*

*I've been developing a child theme for twentysixteen, and there are some
things that were not strictly usability concerns, but the goal was simply
to get Wordpress working with its flagship thing without repeating problems
the ?yearly? "Top 10 mistakes of web design" list.*

*One UX person gave comment that with blue unvisited, purple visited links,
underlined everywhere (though the menu might not need them), all cater to a
needlessly low user proficiency level. The point he seemed to be making,
which leaves me mystified, was that my site was simply much too usable.*

*I don't think I understand Wordpress if its flagship theme does not AFAICT
respect the annual "Top 10 mistakes of web design." That article is not a
textbook; it'd a cheat sheet, and basic usability could go further.*

*What is going on in the development process if twentysixteen's pretty
usable but I have to create a manual stylesheet if I want differentiated
link colors and links usually underlined.*

*Why did twentysixteen not opt in to some basic usability guideline
observance? There's part of the picture that I don't have: for on* [remainder
of post omitted, probably through my clumsiness with some control]

One correspondent commented before writing a fuller response:



*As stated in my comment, your question in off-topic, however as for my
opinion (and I do emphasize that it is just that, I haven't conducted any
research into the matter)...*

*I find washed-out visited links distasteful - a pragmatic necessity that's
lost it's merit in the two decades since the research you cite. I have no
need for a website to tell me where I've been - especially because in the
modern web content is often dynamic and I intend to visit the same
locations time and time again (which was, again, not at all the status quo
at the time the research you refer to was conducted). I believe such links
are often a needless eyesore - the default blue and purple give lend a site
a very dated and DIY appearance, to me.*

*Usability standards for the web from 1996 are hardly "longstanding" so
much as "stale" - we're talking about principals developed right around the
time that PHP, Java, and Javascript were first conceived (not to mention
the very year that CSS appeared on the scene) let alone anything remotely
similar to their modern manifestations. Websites today look and
act nothing like they did then - and expecting the usability standards to
hold true regardless stands to impair the user experience, not improve it.*



I answered, probably not showing myself in my best colors:

*Hmm, this sounds a lot like "I'll do what would be most" (this attitude is
why there is a saying, "You are not a user"), which is painfully
frustrating to people who want research. You don't like separate link
colors; we've established that. If you were open to research, you might
benefit from reading the revision
at nngroup.com/articles/top-10-mistakes-web-design
<https://www.nngroup.com/articles/top-10-mistakes-web-design/> (? 2011).
But now I think I might have been mistaken by hoping for an answer based on
research and studies..*

(N.B. I didn't give the copyright date for the edition I read of Steve
Krug's *Don't make me think!*; it is *?*2014. I want to read his title *Rocket
surgery made simple*.)
Why such a bother?

*I remember one conversation where I said something and was then
backpedalling for the remainder of the conversation. I had talked, years
back, about a mislabelled simple sheet music that was four part vocal
harmony advertised as being arranged for piano, and the difference was
clear. The impression I gave by saying that was that I was some great
musician with the most discriminating sophistication and subtlety who could
take layers of meaning from a page of sheet music. What I experienced
was pretty much the same reason a young athlete playing baseball would have
repeated strikeouts on being forced to hold the bat by the wrong end, or a
child would frequently spill food if expected to fork in soup and use only
the edge of a spoon for cutting. It was classical "square peg, round hole."*

And that is the unhappy assessment I've had with my encounter with
Wordpress in the strict dimension of UX and usability. The marketing
proposition, if this is a marketing proposition, is that you can compete
with handcoded HTML / CSS (and perhaps JavaScript and PHP), if you're at a
level of sophistication that you're above needing such tools.

I personally *am* at such a level, but what has been clear to me is
essentially that if you want to create a genuinely usable website, subsite,
single page application, etc. with Wordpress, you do not see long and far
by standing on Wordpress's shoulders. You instead see shortly and darkly
because you are standing in Wordpress's footprints.

I've been cutting steak with a screwdriver to correct usability defects,
and having complete freedom as to which *one* color applies to both visited
and unvisited links is one area where child-theming was the only game in
town. That isn't the only or just important one; it's just that UX
enhancement to Wordpress is four-part vocal harmony played on a piano. It
is striking out because you're holding the wrong end of the bat. It is
stabbing a spoonful of soup with a fork.

I am someone very, very interested in usability and UX, and am looking for
something in the Chicago area. If you have need, I can help things be
better than out-of-the-box Wordpress...

...but Wordpress does *not* stick out by needing more work to be usable. To
again drop a name that has not been fashionable for years, the "Top 10
Intranet" awards from the Nielsen Norman group in almost every single case
made heavy customizations before it was fit for human consumption.


-- 
[image: Christos Jonathan Seth Hayward] <http://jonathanscorner.com/>
C.J.S. Hayward, Author, UX / Usability Specialist.
If you're looking for a Bible that's a little like an Orthodox King James
Version, you might consider the *Classic Orthodox Bible
<http://www.amazon.com/gp/product/0692525548>*.
If you read *one webpage* out of everything I wrote, you might read *Doxology
<https://cjshayward.com/doxology/>*.

 *Email* <jsh at jsh.name> ? *Books and Kindle <http://cjsh.name/>* ? *Flagship
Website <https://cjshayward.com/>*

From wp-hackers at striderweb.com  Fri Feb  5 04:03:38 2016
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 4 Feb 2016 22:03:38 -0600
Subject: [wp-hackers] A n00b's rough road
In-Reply-To: <CAE6_B5Rp=W2PS+UfkdzoZL=2yf_x+ePvbppLv+WrPRSY4ttA9g@mail.gmail.com>
References: <CAE6_B5Rp=W2PS+UfkdzoZL=2yf_x+ePvbppLv+WrPRSY4ttA9g@mail.gmail.com>
Message-ID: <87330A09-4968-4A5B-B3ED-882E22B824D0@striderweb.com>

You were spurned by Stack Exchange because you?re using it incorrectly. It is not place for philosophy or ?political? debates.  It?s a place to ask a question to which somebody might actually response with a solidly correct answer.  More ?how do I do X?? and not ?I think we need to convince people that I?m morally right about X?

As for WordPress, yes I think they should definitely pay attention to usability issues in the flagship themes.

-- 
Stephen Rider

wp-hackers at striderweb.com
http://striderweb.com/nerdaphernalia


From cjsh at cjshayward.com  Fri Feb  5 13:17:08 2016
From: cjsh at cjshayward.com (C.J.S. Hayward)
Date: Fri, 5 Feb 2016 07:17:08 -0600
Subject: [wp-hackers] wp-hackers Digest, Vol 132, Issue 1
Message-ID: <CAE6_B5Qrisrmq1tXedGi12SB5NWzs2kQ0cBAaNb59X0ykFy0_A@mail.gmail.com>

I'm a bit confused by the claim I was advancing religious or philosophical
positions. I was writing more out of puzzlement that a basic usability
finding, that visited and unvisited links should at least be different
colors (mentioned in a mainstream usability venue in 1996 and not clear
then; reiterated with slight relaxation of a strict hardliner position in
2011, and also repeated by another cardinally important author in 2014),
and this is not an obscure detail, but *important to Jakob Nielsen enough
to consistently make a top 10 list*...

Can you see why I might be puzzled if twentysixteen gives me complete
freedom in choosing one color for all links, but does not provide
facilities to give one color for unvisited links, and another for visited
links, and surprised to some degree in dealing with Wordpress afficionados,
who here state that I was advancing a philosophical or religious opinion? I
mentioned religion in the writeup post very briefly and to set the stage;
my attempt was to push for decisions based on cognitive science research
etc. rather than personal feelings about a color scheme...
-- 
[image: Christos Jonathan Seth Hayward] <http://jonathanscorner.com/>
C.J.S. Hayward, Author, UX / Usability Specialist.
If you're looking for a Bible that's a little like an Orthodox King James
Version, you might consider the *Classic Orthodox Bible
<http://www.amazon.com/gp/product/0692525548>*.
If you read *one webpage* out of everything I wrote, you might read *Doxology
<https://cjshayward.com/doxology/>*.

 *Email* <jsh at jsh.name> ? *Books and Kindle <http://cjsh.name/>* ? *Flagship
Website <https://cjshayward.com/>*

From jdg at codesymphony.co  Fri Feb  5 13:43:36 2016
From: jdg at codesymphony.co (J.D. Grimes)
Date: Fri, 5 Feb 2016 08:43:36 -0500
Subject: [wp-hackers] wp-hackers Digest, Vol 132, Issue 1
In-Reply-To: <CAE6_B5Qrisrmq1tXedGi12SB5NWzs2kQ0cBAaNb59X0ykFy0_A@mail.gmail.com>
References: <CAE6_B5Qrisrmq1tXedGi12SB5NWzs2kQ0cBAaNb59X0ykFy0_A@mail.gmail.com>
Message-ID: <D6A7A533-63A1-4C38-A16A-561D11E10EC7@codesymphony.co>

Hi C.J.S.,

I think the best way to report this would be to open an issue on GitHub where the 2016 theme was developed: https://github.com/WordPress/twentysixteen


> On Feb 5, 2016, at 8:17 AM, C.J.S. Hayward <cjsh at cjshayward.com> wrote:
> 
> I'm a bit confused by the claim I was advancing religious or philosophical
> positions. I was writing more out of puzzlement that a basic usability
> finding, that visited and unvisited links should at least be different
> colors (mentioned in a mainstream usability venue in 1996 and not clear
> then; reiterated with slight relaxation of a strict hardliner position in
> 2011, and also repeated by another cardinally important author in 2014),
> and this is not an obscure detail, but *important to Jakob Nielsen enough
> to consistently make a top 10 list*...
> 
> Can you see why I might be puzzled if twentysixteen gives me complete
> freedom in choosing one color for all links, but does not provide
> facilities to give one color for unvisited links, and another for visited
> links, and surprised to some degree in dealing with Wordpress afficionados,
> who here state that I was advancing a philosophical or religious opinion? I
> mentioned religion in the writeup post very briefly and to set the stage;
> my attempt was to push for decisions based on cognitive science research
> etc. rather than personal feelings about a color scheme...
> -- 
> [image: Christos Jonathan Seth Hayward] <http://jonathanscorner.com/>
> C.J.S. Hayward, Author, UX / Usability Specialist.
> If you're looking for a Bible that's a little like an Orthodox King James
> Version, you might consider the *Classic Orthodox Bible
> <http://www.amazon.com/gp/product/0692525548>*.
> If you read *one webpage* out of everything I wrote, you might read *Doxology
> <https://cjshayward.com/doxology/>*.
> 
> *Email* <jsh at jsh.name> ? *Books and Kindle <http://cjsh.name/>* ? *Flagship
> Website <https://cjshayward.com/>*
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp-hackers at striderweb.com  Fri Feb  5 16:46:10 2016
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri, 5 Feb 2016 10:46:10 -0600
Subject: [wp-hackers] A n00b's rough road
In-Reply-To: <D6A7A533-63A1-4C38-A16A-561D11E10EC7@codesymphony.co>
References: <CAE6_B5Qrisrmq1tXedGi12SB5NWzs2kQ0cBAaNb59X0ykFy0_A@mail.gmail.com>
 <D6A7A533-63A1-4C38-A16A-561D11E10EC7@codesymphony.co>
Message-ID: <EE421353-2E6B-49D2-BEB0-28AEB480F707@striderweb.com>

Hi ? 

I didn?t mean ?political? in a literal sense, but in the sense that your question was soliciting highly subjective opinion. Stack Exchange is for (reasonably) objective technical questions, not debates.  I totally see the point of raising the question, but StackExchange is not the proper place to raise it.  That?s why they got after you.

> On Feb 5, 2016, at 7:43 AM, J.D. Grimes <jdg at codesymphony.co> wrote:
> I think the best way to report this would be to open an issue on GitHub where the 2016 theme was developed: https://github.com/WordPress/twentysixteen


This is a better idea.

-- 
Stephen Rider

wp-hackers at striderweb.com
http://striderweb.com/nerdaphernalia



> On Feb 5, 2016, at 8:17 AM, C.J.S. Hayward <cjsh at cjshayward.com> wrote:
> 
> I'm a bit confused by the claim I was advancing religious or philosophical
> positions. I was writing more out of puzzlement that a basic usability
> finding, that visited and unvisited links should at least be different
> colors (mentioned in a mainstream usability venue in 1996 and not clear
> then; reiterated with slight relaxation of a strict hardliner position in
> 2011, and also repeated by another cardinally important author in 2014),
> and this is not an obscure detail, but *important to Jakob Nielsen enough
> to consistently make a top 10 list*...
> 

From chris at clwill.com  Fri Feb  5 19:28:30 2016
From: chris at clwill.com (Chris Williams)
Date: Fri, 5 Feb 2016 19:28:30 +0000
Subject: [wp-hackers] A n00b's rough road
In-Reply-To: <EE421353-2E6B-49D2-BEB0-28AEB480F707@striderweb.com>
References: <CAE6_B5Qrisrmq1tXedGi12SB5NWzs2kQ0cBAaNb59X0ykFy0_A@mail.gmail.com>
 <D6A7A533-63A1-4C38-A16A-561D11E10EC7@codesymphony.co>
 <EE421353-2E6B-49D2-BEB0-28AEB480F707@striderweb.com>
Message-ID: <F32A23FB-6749-4235-9BFB-D9C9729034D4@clwill.com>

Stephen and JD are exactly right.

There is also the fact that your post here was dramatically TL;DR.  Like 6-10X too long.

Anywhere you go, ask a question -> get an answer.  Post a novel -> get critiqued on style points.




On 2/5/16, 8:46 AM, "wp-hackers on behalf of Stephen Rider" <wp-hackers-bounces at lists.automattic.com on behalf of wp-hackers at striderweb.com> wrote:

>Hi ? 
>
>I didn?t mean ?political? in a literal sense, but in the sense that your question was soliciting highly subjective opinion. Stack Exchange is for (reasonably) objective technical questions, not debates.  I totally see the point of raising the question, but StackExchange is not the proper place to raise it.  That?s why they got after you.
>
>> On Feb 5, 2016, at 7:43 AM, J.D. Grimes <jdg at codesymphony.co> wrote:
>> I think the best way to report this would be to open an issue on GitHub where the 2016 theme was developed: https://github.com/WordPress/twentysixteen
>
>
>This is a better idea.
>
>-- 
>Stephen Rider
>
>wp-hackers at striderweb.com
>http://striderweb.com/nerdaphernalia
>
>
>
>> On Feb 5, 2016, at 8:17 AM, C.J.S. Hayward <cjsh at cjshayward.com> wrote:
>> 
>> I'm a bit confused by the claim I was advancing religious or philosophical
>> positions. I was writing more out of puzzlement that a basic usability
>> finding, that visited and unvisited links should at least be different
>> colors (mentioned in a mainstream usability venue in 1996 and not clear
>> then; reiterated with slight relaxation of a strict hardliner position in
>> 2011, and also repeated by another cardinally important author in 2014),
>> and this is not an obscure detail, but *important to Jakob Nielsen enough
>> to consistently make a top 10 list*...
>> 
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers

From cjsh at cjshayward.com  Sat Feb  6 12:40:21 2016
From: cjsh at cjshayward.com (C.J.S. Hayward)
Date: Sat, 6 Feb 2016 06:40:21 -0600
Subject: [wp-hackers] wp-hackers Digest, Vol 132, Issue 2
In-Reply-To: <mailman.9.1454760002.30818.wp-hackers@lists.automattic.com>
References: <mailman.9.1454760002.30818.wp-hackers@lists.automattic.com>
Message-ID: <CAE6_B5Qf3_QGG5LV_70gch6EqNOaphaargmx4BjzvTra_jAAiQ@mail.gmail.com>

Thank all of you for responding. I will post a more concise note as an
issue on Github.

-- 
[image: Christos Jonathan Seth Hayward] <http://jonathanscorner.com/>
C.J.S. Hayward, Author, UX / Usability Specialist.
If you're looking for a Bible that's a little like an Orthodox King James
Version, you might consider the *Classic Orthodox Bible
<http://www.amazon.com/gp/product/0692525548>*.
If you read *one webpage* out of everything I wrote, you might read *Doxology
<https://cjshayward.com/doxology/>*.

 *Email* <jsh at jsh.name> ? *Books and Kindle <http://cjsh.name/>* ? *Flagship
Website <https://cjshayward.com/>*

From halukkaramete at gmail.com  Fri Feb 12 16:52:37 2016
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Fri, 12 Feb 2016 08:52:37 -0800
Subject: [wp-hackers] setting a special cookie at the time of login or logout
Message-ID: <CAHERW=1cCiQFNkNrzwCaEcTKPE=UO6RCoYmL+EKw7OoifcBebA@mail.gmail.com>

Hello,

How can I set a cookie at the time of logging in and logging out?

As far as I know these processes take place at the server and that is
followed by a server redirect.. whereas for a cookie to be set, you need to
be at the client.

what's a good way to achieve this then?

From chris at clwill.com  Sat Feb 13 00:27:18 2016
From: chris at clwill.com (Chris Williams)
Date: Sat, 13 Feb 2016 00:27:18 +0000
Subject: [wp-hackers] setting a special cookie at the time of login or
 logout
In-Reply-To: <CAHERW=1cCiQFNkNrzwCaEcTKPE=UO6RCoYmL+EKw7OoifcBebA@mail.gmail.com>
References: <CAHERW=1cCiQFNkNrzwCaEcTKPE=UO6RCoYmL+EKw7OoifcBebA@mail.gmail.com>
Message-ID: <E9CAB920-5F22-413F-B4B4-0F0E48A9B031@clwill.com>

PHP setcookie() function.




On 2/12/16, 8:52 AM, "wp-hackers on behalf of Haluk Karamete" <wp-hackers-bounces at lists.automattic.com on behalf of halukkaramete at gmail.com> wrote:

>Hello,
>
>How can I set a cookie at the time of logging in and logging out?
>
>As far as I know these processes take place at the server and that is
>followed by a server redirect.. whereas for a cookie to be set, you need to
>be at the client.
>
>what's a good way to achieve this then?
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers

From halukkaramete at gmail.com  Tue Feb 16 04:24:15 2016
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Mon, 15 Feb 2016 20:24:15 -0800
Subject: [wp-hackers] wordpress_logged_in_HASH
Message-ID: <CAHERW=2oUYx7bW41uehDVc9r+Qo+DgDtpoV4gPGT3zgLA4hQ6Q@mail.gmail.com>

document.cookie does not report/contain the wordpress cookie starting with
the prefix "wordpress_logged_in_" followed by a hash.

This is most likely, it is an httpOnly cookie.
But it surely shows up on the chrome->dev-console->resources->cookies

Is there a JavaScript way to know whether that cookie is there or not?

It would be there, it the user logged in, and if would not be there, if the
user logged out, or that cookie has expired.

If document.cookie reported all the names of the cookie, this would not
have been an issue.

From nikolov.tmw at gmail.com  Tue Feb 16 09:43:37 2016
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Tue, 16 Feb 2016 09:43:37 +0000
Subject: [wp-hackers] wordpress_logged_in_HASH
In-Reply-To: <CAHERW=2oUYx7bW41uehDVc9r+Qo+DgDtpoV4gPGT3zgLA4hQ6Q@mail.gmail.com>
References: <CAHERW=2oUYx7bW41uehDVc9r+Qo+DgDtpoV4gPGT3zgLA4hQ6Q@mail.gmail.com>
Message-ID: <CAOwx47cs2XPT_Y63+ogDUsgZj7WFumNdfptyw9CdX3gvbTdGNA@mail.gmail.com>

Well, I believe that there's a reason why some cookies are httpOnly and not
accessible via JavaScript(security comes to mind?).

A way around this would be to add some other flag within your DOM or
otherwise JS-accessible that the current visitor is a logged-in user. Not
sure if it's WordPress that does that, but with Twenty Fourteen, the body
gets a class of "logged-in" so you can easily check that. Alternatively you
can either hook to 'wp_head' or 'wp_footer' and render your own <script>
tag with a variable in it, or you can use wp_localize_script() to again
pass something from PHP to JS.

The browser shows you the cookies, because it's the browser and it has
control of everything(plus it has to take those cookies to the server with
every request, right?). The specifications don't allow JavaScript to access
httpOnly cookies and I don't think anyone would build a browser that
doesn't follow that specification.

On Tue, 16 Feb 2016 at 06:24 Haluk Karamete <halukkaramete at gmail.com> wrote:

> document.cookie does not report/contain the wordpress cookie starting with
> the prefix "wordpress_logged_in_" followed by a hash.
>
> This is most likely, it is an httpOnly cookie.
> But it surely shows up on the chrome->dev-console->resources->cookies
>
> Is there a JavaScript way to know whether that cookie is there or not?
>
> It would be there, it the user logged in, and if would not be there, if the
> user logged out, or that cookie has expired.
>
> If document.cookie reported all the names of the cookie, this would not
> have been an issue.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Tue Feb 16 10:09:14 2016
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Tue, 16 Feb 2016 02:09:14 -0800
Subject: [wp-hackers] wordpress_logged_in_HASH
In-Reply-To: <CAOwx47cs2XPT_Y63+ogDUsgZj7WFumNdfptyw9CdX3gvbTdGNA@mail.gmail.com>
References: <CAHERW=2oUYx7bW41uehDVc9r+Qo+DgDtpoV4gPGT3zgLA4hQ6Q@mail.gmail.com>
 <CAOwx47cs2XPT_Y63+ogDUsgZj7WFumNdfptyw9CdX3gvbTdGNA@mail.gmail.com>
Message-ID: <CAHERW=3KiHeW3970Khm84jJOttE1OCNrYbMecdiKJ6zXzaMaNA@mail.gmail.com>

Thanks Nikola.

On Tue, Feb 16, 2016 at 1:43 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
wrote:

> Well, I believe that there's a reason why some cookies are httpOnly and not
> accessible via JavaScript(security comes to mind?).
>
> A way around this would be to add some other flag within your DOM or
> otherwise JS-accessible that the current visitor is a logged-in user. Not
> sure if it's WordPress that does that, but with Twenty Fourteen, the body
> gets a class of "logged-in" so you can easily check that. Alternatively you
> can either hook to 'wp_head' or 'wp_footer' and render your own <script>
> tag with a variable in it, or you can use wp_localize_script() to again
> pass something from PHP to JS.
>
> The browser shows you the cookies, because it's the browser and it has
> control of everything(plus it has to take those cookies to the server with
> every request, right?). The specifications don't allow JavaScript to access
> httpOnly cookies and I don't think anyone would build a browser that
> doesn't follow that specification.
>
> On Tue, 16 Feb 2016 at 06:24 Haluk Karamete <halukkaramete at gmail.com>
> wrote:
>
> > document.cookie does not report/contain the wordpress cookie starting
> with
> > the prefix "wordpress_logged_in_" followed by a hash.
> >
> > This is most likely, it is an httpOnly cookie.
> > But it surely shows up on the chrome->dev-console->resources->cookies
> >
> > Is there a JavaScript way to know whether that cookie is there or not?
> >
> > It would be there, it the user logged in, and if would not be there, if
> the
> > user logged out, or that cookie has expired.
> >
> > If document.cookie reported all the names of the cookie, this would not
> > have been an issue.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nikolov.tmw at gmail.com  Tue Feb 16 10:23:44 2016
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Tue, 16 Feb 2016 10:23:44 +0000
Subject: [wp-hackers] Are there any implications about using wp_redirect(
 add_query_arg( '', '' ) )?
Message-ID: <CAOwx47c5Gmy=MOMjJ9kuJ1KCdXiBX7Dj=thZWW4Trq5xCVpEtw@mail.gmail.com>

Hi there,

I've found myself in situations where I want to reload the current URL with
PHP - for instance after processing a $_POST request - and in some cases I
would add a $_GET parameter to the URL(so add_query_arg() would be a
perfect fit there), but in others I don't need to do that. I found out that
I can use

wp_redirect( esc_url_raw( add_query_arg( '', '' ) ) );
exit;

Used that way add_query_arg() seems to just give me a path and any $_GET
parameters currently present(for instance I would get
/product/my-product/). I'm escaping the URL with esc_url_raw(), but wanted
to make sure there's nothing wrong with doing things that way.

Any thoughts?

From jamesorodig at gmail.com  Tue Feb 16 12:57:12 2016
From: jamesorodig at gmail.com (James DiGioia)
Date: Tue, 16 Feb 2016 07:57:12 -0500
Subject: [wp-hackers] Are there any implications about using
 wp_redirect( add_query_arg( '', '' ) )?
In-Reply-To: <CAOwx47c5Gmy=MOMjJ9kuJ1KCdXiBX7Dj=thZWW4Trq5xCVpEtw@mail.gmail.com>
References: <CAOwx47c5Gmy=MOMjJ9kuJ1KCdXiBX7Dj=thZWW4Trq5xCVpEtw@mail.gmail.com>
Message-ID: <CAL0fVhMKK+cJ0wR1Ox3JgicJmL-etYO3qJaTOG5Em65TBG0TEA@mail.gmail.com>

add_query_args takes two or three parameters, depending on how you'd prefer
to use it. See here:
https://developer.wordpress.org/reference/functions/add_query_arg/

It's not automatically going to redirect using the current $_GET params;
you need to specify in the function args what those params are supposed to
be.

On Tue, Feb 16, 2016 at 5:23 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
wrote:

> Hi there,
>
> I've found myself in situations where I want to reload the current URL with
> PHP - for instance after processing a $_POST request - and in some cases I
> would add a $_GET parameter to the URL(so add_query_arg() would be a
> perfect fit there), but in others I don't need to do that. I found out that
> I can use
>
> wp_redirect( esc_url_raw( add_query_arg( '', '' ) ) );
> exit;
>
> Used that way add_query_arg() seems to just give me a path and any $_GET
> parameters currently present(for instance I would get
> /product/my-product/). I'm escaping the URL with esc_url_raw(), but wanted
> to make sure there's nothing wrong with doing things that way.
>
> Any thoughts?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nikolov.tmw at gmail.com  Tue Feb 16 13:17:32 2016
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Tue, 16 Feb 2016 13:17:32 +0000
Subject: [wp-hackers] Are there any implications about using
 wp_redirect( add_query_arg( '', '' ) )?
In-Reply-To: <CAL0fVhMKK+cJ0wR1Ox3JgicJmL-etYO3qJaTOG5Em65TBG0TEA@mail.gmail.com>
References: <CAOwx47c5Gmy=MOMjJ9kuJ1KCdXiBX7Dj=thZWW4Trq5xCVpEtw@mail.gmail.com>
 <CAL0fVhMKK+cJ0wR1Ox3JgicJmL-etYO3qJaTOG5Em65TBG0TEA@mail.gmail.com>
Message-ID: <CAOwx47eVH3a6g29V90-oJ1n12qkjo6WsmArCYDu7sMzbJQJ2Wg@mail.gmail.com>

Well, it actually works fine with the example I gave.

Here, say I'm on http://example.com/page1/?a=b&c=d
Then I call add_query_arg( '', '' ) - omitting the last parameter, which
makes it use the current request as the base URL.

This returns something like this: /page1/?a=b&c=d&
That last & is there because I tried to add an empty parameter, so there's
no key, but there's a trailing &(which should not be a problem as far as
I'm aware).

My question wasn't about how to use add_query_arg() as much as it was about
whether there could be any issues by passing two empty parameters to the
function, since it technically expects those to be strings.

On Tue, 16 Feb 2016 at 14:57 James DiGioia <jamesorodig at gmail.com> wrote:

> add_query_args takes two or three parameters, depending on how you'd prefer
> to use it. See here:
> https://developer.wordpress.org/reference/functions/add_query_arg/
>
> It's not automatically going to redirect using the current $_GET params;
> you need to specify in the function args what those params are supposed to
> be.
>
> On Tue, Feb 16, 2016 at 5:23 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
> wrote:
>
> > Hi there,
> >
> > I've found myself in situations where I want to reload the current URL
> with
> > PHP - for instance after processing a $_POST request - and in some cases
> I
> > would add a $_GET parameter to the URL(so add_query_arg() would be a
> > perfect fit there), but in others I don't need to do that. I found out
> that
> > I can use
> >
> > wp_redirect( esc_url_raw( add_query_arg( '', '' ) ) );
> > exit;
> >
> > Used that way add_query_arg() seems to just give me a path and any $_GET
> > parameters currently present(for instance I would get
> > /product/my-product/). I'm escaping the URL with esc_url_raw(), but
> wanted
> > to make sure there's nothing wrong with doing things that way.
> >
> > Any thoughts?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ljunior2005 at gmail.com  Tue Feb 16 13:56:50 2016
From: ljunior2005 at gmail.com (Leo Baiano)
Date: Tue, 16 Feb 2016 11:56:50 -0200
Subject: [wp-hackers] js callback live reload customizer
Message-ID: <CAL1O-KUuXZ052yhVcDXV2yXgpbiSCQNCDeJOTTd4ZroOM9anOw@mail.gmail.com>

Hi!

I have a problem and I wonder if anyone here can give me a light. I need to
allow site administrators to edit the home page, then created a widget for
each block and turned the home page in an area sidebar which displays the
contents of widgets.

Administrators use the customizer to edit widgets and already have a
preview of how it will look.

So far so ok.

The problem is that one of the widgets has a field to select a post, and
this field has the autocomplete jQuery UI. The problem is that when I type
the first 3 letters customizer saved to memory (or somewhere else) the
first 3 letters and already makes reload the preview, when I click on the
post that desire, the auto box complete, it fills the input text, but does
not make the live reload. Worse, if I click the save button it does not
save the content that is in the input text (in this case the full title of
the post), it saves the first 3 letters I typed, I think he will get the
data in the place that you saved when you made auto save the live preciew.

What I think is to find a js callback, so the select event autocomplete I
call the callback to save it and do the live preview of the correct
information.

I apologize if I expressed myself badly, I hope someone can shed some light.

Thank you.

-- 
Amplexos,

Leo Baiano
Web Developer

From jdg at codesymphony.co  Tue Feb 16 14:24:51 2016
From: jdg at codesymphony.co (J.D. Grimes)
Date: Tue, 16 Feb 2016 09:24:51 -0500
Subject: [wp-hackers] Are there any implications about using
	wp_redirect( add_query_arg( '', '' ) )?
In-Reply-To: <CAOwx47eVH3a6g29V90-oJ1n12qkjo6WsmArCYDu7sMzbJQJ2Wg@mail.gmail.com>
References: <CAOwx47c5Gmy=MOMjJ9kuJ1KCdXiBX7Dj=thZWW4Trq5xCVpEtw@mail.gmail.com>
 <CAL0fVhMKK+cJ0wR1Ox3JgicJmL-etYO3qJaTOG5Em65TBG0TEA@mail.gmail.com>
 <CAOwx47eVH3a6g29V90-oJ1n12qkjo6WsmArCYDu7sMzbJQJ2Wg@mail.gmail.com>
Message-ID: <59BDB0E8-AEB3-4F15-AC05-90409593EE2E@codesymphony.co>

You are right to question whether there might be some issues with this. There is in fact a potential for security issues when using wp_redirect(), but it has nothing to do with escaping the URL. I think it's not actually necessary to use esc_url_raw(), since wp_redirect() uses wp_sanitize_redirect() to sanitize the URL (https://developer.wordpress.org/reference/functions/wp_sanitize_redirect/ <https://developer.wordpress.org/reference/functions/wp_sanitize_redirect/>).

The issues that you would run into with wp_redirect() would be an open redirect (https://www.owasp.org/index.php/Open_redirect <https://www.owasp.org/index.php/Open_redirect>). To avoid that, you can use wp_safe_redirect() (https://developer.wordpress.org/reference/functions/wp_safe_redirect/ <https://developer.wordpress.org/reference/functions/wp_safe_redirect/>) which ensures that the redirect will only go to a host that is on the whitelist. I always use wp_safe_redirect(), just to be sure that the redirect is secure.

As for this case when using add_query_arg(), it shouldn't technically be necessary to use wp_safe_redirect(), since add_query_arg() uses the REQUEST_URI server var, which should be secure. There is always the possibility of course that some other code has fiddled with the REQUEST_URI, and in that case it may not actually end up pointing to the correct host like it should. So that's why I'd recommend that you use wp_safe_redirect(), since you know that you will always be wanting to redirect back to the same site. wp_redirect() should only be used when you specifically want to redirect to a different host, and then you should be hard-coding the URL.

As far as passing empty values to add_query_arg(), that is perfectly valid, although you might as well use $_SERVER['REQUEST_URI'] directly, instead of doing extra, unnecessary processing on the URL. There is also the wp_get_referer() function (https://developer.wordpress.org/reference/functions/wp_get_referer/ <https://developer.wordpress.org/reference/functions/wp_get_referer/>) that you could use if you want to accept more ways of determining the referrer.

-J.D.

> On Feb 16, 2016, at 8:17 AM, Nikola Nikolov <nikolov.tmw at gmail.com> wrote:
> 
> Well, it actually works fine with the example I gave.
> 
> Here, say I'm on http://example.com/page1/?a=b&c=d
> Then I call add_query_arg( '', '' ) - omitting the last parameter, which
> makes it use the current request as the base URL.
> 
> This returns something like this: /page1/?a=b&c=d&
> That last & is there because I tried to add an empty parameter, so there's
> no key, but there's a trailing &(which should not be a problem as far as
> I'm aware).
> 
> My question wasn't about how to use add_query_arg() as much as it was about
> whether there could be any issues by passing two empty parameters to the
> function, since it technically expects those to be strings.
> 
> On Tue, 16 Feb 2016 at 14:57 James DiGioia <jamesorodig at gmail.com> wrote:
> 
>> add_query_args takes two or three parameters, depending on how you'd prefer
>> to use it. See here:
>> https://developer.wordpress.org/reference/functions/add_query_arg/
>> 
>> It's not automatically going to redirect using the current $_GET params;
>> you need to specify in the function args what those params are supposed to
>> be.
>> 
>> On Tue, Feb 16, 2016 at 5:23 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
>> wrote:
>> 
>>> Hi there,
>>> 
>>> I've found myself in situations where I want to reload the current URL
>> with
>>> PHP - for instance after processing a $_POST request - and in some cases
>> I
>>> would add a $_GET parameter to the URL(so add_query_arg() would be a
>>> perfect fit there), but in others I don't need to do that. I found out
>> that
>>> I can use
>>> 
>>> wp_redirect( esc_url_raw( add_query_arg( '', '' ) ) );
>>> exit;
>>> 
>>> Used that way add_query_arg() seems to just give me a path and any $_GET
>>> parameters currently present(for instance I would get
>>> /product/my-product/). I'm escaping the URL with esc_url_raw(), but
>> wanted
>>> to make sure there's nothing wrong with doing things that way.
>>> 
>>> Any thoughts?
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From nikolov.tmw at gmail.com  Tue Feb 16 15:16:43 2016
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Tue, 16 Feb 2016 15:16:43 +0000
Subject: [wp-hackers] Are there any implications about using
 wp_redirect( add_query_arg( '', '' ) )?
In-Reply-To: <59BDB0E8-AEB3-4F15-AC05-90409593EE2E@codesymphony.co>
References: <CAOwx47c5Gmy=MOMjJ9kuJ1KCdXiBX7Dj=thZWW4Trq5xCVpEtw@mail.gmail.com>
 <CAL0fVhMKK+cJ0wR1Ox3JgicJmL-etYO3qJaTOG5Em65TBG0TEA@mail.gmail.com>
 <CAOwx47eVH3a6g29V90-oJ1n12qkjo6WsmArCYDu7sMzbJQJ2Wg@mail.gmail.com>
 <59BDB0E8-AEB3-4F15-AC05-90409593EE2E@codesymphony.co>
Message-ID: <CAOwx47dJ2vSVt9GVAZwqLM7HAQM5NRMc14F2bwsCVC+qNuHXAQ@mail.gmail.com>

I used esc_url_raw() because I did read somewhere in the comments about the
security issue of not escaping add_query_arg() with a missing parameter for
the base URL. However the case they were discussing then might have been if
you want to use it in a Location header(can't remember).

Good point on wp_safe_redirect() - even though you'll most-likely end up on
the same site, it's a good rule of thumb to use that when the destination
is expected to be the same site.

Thank you for the detailed explanation!

On Tue, 16 Feb 2016 at 16:25 J.D. Grimes <jdg at codesymphony.co> wrote:

> You are right to question whether there might be some issues with this.
> There is in fact a potential for security issues when using wp_redirect(),
> but it has nothing to do with escaping the URL. I think it's not actually
> necessary to use esc_url_raw(), since wp_redirect() uses
> wp_sanitize_redirect() to sanitize the URL (
> https://developer.wordpress.org/reference/functions/wp_sanitize_redirect/
> <https://developer.wordpress.org/reference/functions/wp_sanitize_redirect/
> >).
>
> The issues that you would run into with wp_redirect() would be an open
> redirect (https://www.owasp.org/index.php/Open_redirect <
> https://www.owasp.org/index.php/Open_redirect>). To avoid that, you can
> use wp_safe_redirect() (
> https://developer.wordpress.org/reference/functions/wp_safe_redirect/ <
> https://developer.wordpress.org/reference/functions/wp_safe_redirect/>)
> which ensures that the redirect will only go to a host that is on the
> whitelist. I always use wp_safe_redirect(), just to be sure that the
> redirect is secure.
>
> As for this case when using add_query_arg(), it shouldn't technically be
> necessary to use wp_safe_redirect(), since add_query_arg() uses the
> REQUEST_URI server var, which should be secure. There is always the
> possibility of course that some other code has fiddled with the
> REQUEST_URI, and in that case it may not actually end up pointing to the
> correct host like it should. So that's why I'd recommend that you use
> wp_safe_redirect(), since you know that you will always be wanting to
> redirect back to the same site. wp_redirect() should only be used when you
> specifically want to redirect to a different host, and then you should be
> hard-coding the URL.
>
> As far as passing empty values to add_query_arg(), that is perfectly
> valid, although you might as well use $_SERVER['REQUEST_URI'] directly,
> instead of doing extra, unnecessary processing on the URL. There is also
> the wp_get_referer() function (
> https://developer.wordpress.org/reference/functions/wp_get_referer/ <
> https://developer.wordpress.org/reference/functions/wp_get_referer/>)
> that you could use if you want to accept more ways of determining the
> referrer.
>
> -J.D.
>
> > On Feb 16, 2016, at 8:17 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
> wrote:
> >
> > Well, it actually works fine with the example I gave.
> >
> > Here, say I'm on http://example.com/page1/?a=b&c=d
> > Then I call add_query_arg( '', '' ) - omitting the last parameter, which
> > makes it use the current request as the base URL.
> >
> > This returns something like this: /page1/?a=b&c=d&
> > That last & is there because I tried to add an empty parameter, so
> there's
> > no key, but there's a trailing &(which should not be a problem as far as
> > I'm aware).
> >
> > My question wasn't about how to use add_query_arg() as much as it was
> about
> > whether there could be any issues by passing two empty parameters to the
> > function, since it technically expects those to be strings.
> >
> > On Tue, 16 Feb 2016 at 14:57 James DiGioia <jamesorodig at gmail.com>
> wrote:
> >
> >> add_query_args takes two or three parameters, depending on how you'd
> prefer
> >> to use it. See here:
> >> https://developer.wordpress.org/reference/functions/add_query_arg/
> >>
> >> It's not automatically going to redirect using the current $_GET params;
> >> you need to specify in the function args what those params are supposed
> to
> >> be.
> >>
> >> On Tue, Feb 16, 2016 at 5:23 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
> >> wrote:
> >>
> >>> Hi there,
> >>>
> >>> I've found myself in situations where I want to reload the current URL
> >> with
> >>> PHP - for instance after processing a $_POST request - and in some
> cases
> >> I
> >>> would add a $_GET parameter to the URL(so add_query_arg() would be a
> >>> perfect fit there), but in others I don't need to do that. I found out
> >> that
> >>> I can use
> >>>
> >>> wp_redirect( esc_url_raw( add_query_arg( '', '' ) ) );
> >>> exit;
> >>>
> >>> Used that way add_query_arg() seems to just give me a path and any
> $_GET
> >>> parameters currently present(for instance I would get
> >>> /product/my-product/). I'm escaping the URL with esc_url_raw(), but
> >> wanted
> >>> to make sure there's nothing wrong with doing things that way.
> >>>
> >>> Any thoughts?
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdg at codesymphony.co  Tue Feb 16 15:36:31 2016
From: jdg at codesymphony.co (J.D. Grimes)
Date: Tue, 16 Feb 2016 10:36:31 -0500
Subject: [wp-hackers] Are there any implications about using
	wp_redirect( add_query_arg( '', '' ) )?
In-Reply-To: <CAOwx47dJ2vSVt9GVAZwqLM7HAQM5NRMc14F2bwsCVC+qNuHXAQ@mail.gmail.com>
References: <CAOwx47c5Gmy=MOMjJ9kuJ1KCdXiBX7Dj=thZWW4Trq5xCVpEtw@mail.gmail.com>
 <CAL0fVhMKK+cJ0wR1Ox3JgicJmL-etYO3qJaTOG5Em65TBG0TEA@mail.gmail.com>
 <CAOwx47eVH3a6g29V90-oJ1n12qkjo6WsmArCYDu7sMzbJQJ2Wg@mail.gmail.com>
 <59BDB0E8-AEB3-4F15-AC05-90409593EE2E@codesymphony.co>
 <CAOwx47dJ2vSVt9GVAZwqLM7HAQM5NRMc14F2bwsCVC+qNuHXAQ@mail.gmail.com>
Message-ID: <A3E3A375-5A02-4DF1-8460-D5FCE5F3B658@codesymphony.co>

I'm not sure if a Location header would be vulnerable to an unescaped URL or not. The most common reason to escape add_qeury_arg() is to avoid XSS.

-J.D.

> On Feb 16, 2016, at 10:16 AM, Nikola Nikolov <nikolov.tmw at gmail.com> wrote:
> 
> I used esc_url_raw() because I did read somewhere in the comments about the
> security issue of not escaping add_query_arg() with a missing parameter for
> the base URL. However the case they were discussing then might have been if
> you want to use it in a Location header(can't remember).
> 
> Good point on wp_safe_redirect() - even though you'll most-likely end up on
> the same site, it's a good rule of thumb to use that when the destination
> is expected to be the same site.
> 
> Thank you for the detailed explanation!
> 
> On Tue, 16 Feb 2016 at 16:25 J.D. Grimes <jdg at codesymphony.co> wrote:
> 
>> You are right to question whether there might be some issues with this.
>> There is in fact a potential for security issues when using wp_redirect(),
>> but it has nothing to do with escaping the URL. I think it's not actually
>> necessary to use esc_url_raw(), since wp_redirect() uses
>> wp_sanitize_redirect() to sanitize the URL (
>> https://developer.wordpress.org/reference/functions/wp_sanitize_redirect/
>> <https://developer.wordpress.org/reference/functions/wp_sanitize_redirect/
>>> ).
>> 
>> The issues that you would run into with wp_redirect() would be an open
>> redirect (https://www.owasp.org/index.php/Open_redirect <
>> https://www.owasp.org/index.php/Open_redirect>). To avoid that, you can
>> use wp_safe_redirect() (
>> https://developer.wordpress.org/reference/functions/wp_safe_redirect/ <
>> https://developer.wordpress.org/reference/functions/wp_safe_redirect/>)
>> which ensures that the redirect will only go to a host that is on the
>> whitelist. I always use wp_safe_redirect(), just to be sure that the
>> redirect is secure.
>> 
>> As for this case when using add_query_arg(), it shouldn't technically be
>> necessary to use wp_safe_redirect(), since add_query_arg() uses the
>> REQUEST_URI server var, which should be secure. There is always the
>> possibility of course that some other code has fiddled with the
>> REQUEST_URI, and in that case it may not actually end up pointing to the
>> correct host like it should. So that's why I'd recommend that you use
>> wp_safe_redirect(), since you know that you will always be wanting to
>> redirect back to the same site. wp_redirect() should only be used when you
>> specifically want to redirect to a different host, and then you should be
>> hard-coding the URL.
>> 
>> As far as passing empty values to add_query_arg(), that is perfectly
>> valid, although you might as well use $_SERVER['REQUEST_URI'] directly,
>> instead of doing extra, unnecessary processing on the URL. There is also
>> the wp_get_referer() function (
>> https://developer.wordpress.org/reference/functions/wp_get_referer/ <
>> https://developer.wordpress.org/reference/functions/wp_get_referer/>)
>> that you could use if you want to accept more ways of determining the
>> referrer.
>> 
>> -J.D.
>> 
>>> On Feb 16, 2016, at 8:17 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
>> wrote:
>>> 
>>> Well, it actually works fine with the example I gave.
>>> 
>>> Here, say I'm on http://example.com/page1/?a=b&c=d
>>> Then I call add_query_arg( '', '' ) - omitting the last parameter, which
>>> makes it use the current request as the base URL.
>>> 
>>> This returns something like this: /page1/?a=b&c=d&
>>> That last & is there because I tried to add an empty parameter, so
>> there's
>>> no key, but there's a trailing &(which should not be a problem as far as
>>> I'm aware).
>>> 
>>> My question wasn't about how to use add_query_arg() as much as it was
>> about
>>> whether there could be any issues by passing two empty parameters to the
>>> function, since it technically expects those to be strings.
>>> 
>>> On Tue, 16 Feb 2016 at 14:57 James DiGioia <jamesorodig at gmail.com>
>> wrote:
>>> 
>>>> add_query_args takes two or three parameters, depending on how you'd
>> prefer
>>>> to use it. See here:
>>>> https://developer.wordpress.org/reference/functions/add_query_arg/
>>>> 
>>>> It's not automatically going to redirect using the current $_GET params;
>>>> you need to specify in the function args what those params are supposed
>> to
>>>> be.
>>>> 
>>>> On Tue, Feb 16, 2016 at 5:23 AM, Nikola Nikolov <nikolov.tmw at gmail.com>
>>>> wrote:
>>>> 
>>>>> Hi there,
>>>>> 
>>>>> I've found myself in situations where I want to reload the current URL
>>>> with
>>>>> PHP - for instance after processing a $_POST request - and in some
>> cases
>>>> I
>>>>> would add a $_GET parameter to the URL(so add_query_arg() would be a
>>>>> perfect fit there), but in others I don't need to do that. I found out
>>>> that
>>>>> I can use
>>>>> 
>>>>> wp_redirect( esc_url_raw( add_query_arg( '', '' ) ) );
>>>>> exit;
>>>>> 
>>>>> Used that way add_query_arg() seems to just give me a path and any
>> $_GET
>>>>> parameters currently present(for instance I would get
>>>>> /product/my-product/). I'm escaping the URL with esc_url_raw(), but
>>>> wanted
>>>>> to make sure there's nothing wrong with doing things that way.
>>>>> 
>>>>> Any thoughts?
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>> 
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From contact at shawnmsullivan.me  Tue Feb 16 17:30:56 2016
From: contact at shawnmsullivan.me (contact at shawnmsullivan.me)
Date: Tue, 16 Feb 2016 09:30:56 -0800
Subject: [wp-hackers] Looking for reliable WP Developers
Message-ID: <!&!AAAAAAAAAAAuAAAAAAAAAIvFCP0fYX9PuMiuZFk3rj8BAMO2jhD3dRHOtM0AqgC7tuYAAAAAAA4AABAAAAB0uNW/MlwgS5Cyshjkk24FAQAAAAA=@shawnmsullivan.me>

Hi I am currently working for a company called Purple Cow Agency. The owner
of the company has asked me to see  if I can find some good reliable
WordPress Developers that know PHP very well. We are looking for personnel
with the following credentials:

*         Work independently

*         Accurately quote time per task

*         Ability to communicate with  Project Manager so they understand
the developer needs.

*         Ask questions? What we mean by this is if your task don't have all
you need ASK QUESTIONS before giving a quote or working on the project

*         Able to use Teamwork

*         Willing to learn Git

*         Has worked in an AGILE development.

 

If you think you  have the qualifications then please  reply here with links
to sites you have worked on and a way I can contact you.

 

Shawn

 

d\



---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus

From ankittiwaari at gmail.com  Tue Feb 16 18:51:53 2016
From: ankittiwaari at gmail.com (Ankit Tiwari)
Date: Wed, 17 Feb 2016 00:21:53 +0530
Subject: [wp-hackers] Looking for reliable WP Developers
In-Reply-To: <!&!AAAAAAAAAAAuAAAAAAAAAIvFCP0fYX9PuMiuZFk3rj8BAMO2jhD3dRHOtM0AqgC7tuYAAAAAAA4AABAAAAB0uNW/MlwgS5Cyshjkk24FAQAAAAA=@shawnmsullivan.me>
References: <!&!AAAAAAAAAAAuAAAAAAAAAIvFCP0fYX9PuMiuZFk3rj8BAMO2jhD3dRHOtM0AqgC7tuYAAAAAAA4AABAAAAB0uNW/MlwgS5Cyshjkk24FAQAAAAA=@shawnmsullivan.me>
Message-ID: <56C36FC9.6050906@gmail.com>

Hi Shawn,

Hope you are doing good.

I am a wordpress developer having 4+ years of experience in developing 
plugins and themes for wordpress. Some of my work samples are

1) http://yoursurfphotos.com.au
2) http://rhondarealty.com/
3) https://www.smartbet.io/
4) http://artlicensingshow.com/
5) http://mommiesknowbreast.com/
6) http://lisannewellnesscenter.com/


you can contact me on my email ankittiwaari at gmail.com and Skype 
ankittiwaari.

Best Regards

On 02/16/2016 11:00 PM, contact at shawnmsullivan.me wrote:
> Hi I am currently working for a company called Purple Cow Agency. The owner
> of the company has asked me to see  if I can find some good reliable
> WordPress Developers that know PHP very well. We are looking for personnel
> with the following credentials:
>
> *         Work independently
>
> *         Accurately quote time per task
>
> *         Ability to communicate with  Project Manager so they understand
> the developer needs.
>
> *         Ask questions? What we mean by this is if your task don't have all
> you need ASK QUESTIONS before giving a quote or working on the project
>
> *         Able to use Teamwork
>
> *         Willing to learn Git
>
> *         Has worked in an AGILE development.
>
>   
>
> If you think you  have the qualifications then please  reply here with links
> to sites you have worked on and a way I can contact you.
>
>   
>
> Shawn
>
>   
>
> d\
>
>
>
> ---
> This email has been checked for viruses by Avast antivirus software.
> https://www.avast.com/antivirus
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From ljunior2005 at gmail.com  Wed Feb 17 14:04:57 2016
From: ljunior2005 at gmail.com (Leo Baiano)
Date: Wed, 17 Feb 2016 12:04:57 -0200
Subject: [wp-hackers] Customizer
Message-ID: <CAL1O-KWW81RHjG8T8Q8DDroH1+2cpcpeUai+Kfm+qAFRO6jxxA@mail.gmail.com>

Hi,
I'm working to customize and came the next problem. I created a widget and
this is a text field with autocomplete, when I type the first 3 letters
WordPress is the live preview and saves these first 3 letters somewhere,
there appears to securities listing that match those first letters and I
select one of them. At this point I would like WordPress make another live
preview but he does not and even worse, if I click the save button to save
the changes, WordPress does not save the full title that is in the field,
it only saves those 3/1 letters I typed.

What I think happens is that every time I type something in one of the
widget fields WordPress is a live preview and save what was typed in
memory, when I click on the save button at the top it will not take what is
on field but the data that was saved in memory. This is a problem for me
because the autocomplete field I fill by clicking one of the options, not
typing the full title, with that the WP does not save the full title.

If I select a title in the autocomplete field and then change a common text
field WP makes live and oh yes saves the complete title.

I think if there is a javascript hook that allows me to trigger this live
preview function, and save solve, because then I would call the hook at the
click event to use to select the title.
Can someone help me?

-- 
Amplexos,

Leo Baiano
Web Developer

